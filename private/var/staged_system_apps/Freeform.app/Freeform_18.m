uint64_t assignWithTake for CRLFileWriteAssetDownloadAlertView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 24);
      v7 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v6;
      swift_release(v7);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 24));
  }
  else if (v5)
  {
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 40);
      v11 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      swift_release(v11);
      goto LABEL_15;
    }
    swift_release(*(_QWORD *)(a1 + 40));
  }
  else if (v9)
  {
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v12;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_15:
  v13 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v13)
    {
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v16;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v13)
  {
    swift_release(*(_QWORD *)(a1 + 56));
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(a2 + 56);
  v15 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  swift_release(v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFileWriteAssetDownloadAlertView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFileWriteAssetDownloadAlertView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileWriteAssetDownloadAlertView()
{
  return &type metadata for CRLFileWriteAssetDownloadAlertView;
}

uint64_t sub_100D1C72C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113A2AC, 1);
}

uint64_t sub_100D1C740()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_100D1C76C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_100D1C798()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  if (v0[6])
    swift_release(v0[7]);
  if (v0[8])
    swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100D1C7EC()
{
  uint64_t v0;

  return sub_100D1B6B0((__int128 *)(v0 + 16));
}

uint64_t sub_100D1C7F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100D1C820@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100D1C84C(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100D1C870(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_100D1C894(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100D1C8A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100D1C8B8(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

id sub_100D1C8D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100D1BCB4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_100D1C8E0()
{
  uint64_t v0;

  return sub_100D1BFAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), (uint64_t)&unk_1012A0EB0, (uint64_t)&unk_10140EB20);
}

uint64_t sub_100D1C910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_100D1C944()
{
  uint64_t v0;

  return sub_100D1BFAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), (uint64_t)&unk_1012A0E88, (uint64_t)&unk_10140EB10);
}

uint64_t sub_100D1C970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EF328);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D1C9D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10140EB0C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100D1C0B8(a1, v4, v5, v6, v7);
}

uint64_t sub_100D1CA5C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100D1CA98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10140EB1C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100D1BEA8(a1, v4, v5, v6, v7);
}

uint64_t sub_100D1CB18()
{
  return sub_1006E1664(&qword_10140EB28, &qword_10140EAC8, (void (*)(void))sub_100D1CB4C);
}

uint64_t sub_100D1CB4C()
{
  return sub_1006E1664(&qword_10140EB30, &qword_10140EAB8, (void (*)(void))sub_100D1CB70);
}

uint64_t sub_100D1CB70()
{
  return sub_1006E1664(&qword_10140EB38, &qword_10140EAB0, (void (*)(void))sub_100D1CB94);
}

unint64_t sub_100D1CB94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140EB40;
  if (!qword_10140EB40)
  {
    v1 = sub_1004CB6A4(&qword_10140EAA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10140EB40);
  }
  return result;
}

uint64_t sub_100D1CBE4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    v6 = *(int *)(a3 + 32);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = type metadata accessor for ShadowStyle(0);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v9 - 8) + 16);
    v11 = swift_retain(v4);
    v10(v7, v8, v9, v11);
  }
  return v5;
}

uint64_t sub_100D1CC9C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ShadowStyle(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100D1CCE4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v10;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = type metadata accessor for ShadowStyle(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v8 - 8) + 16);
  v10 = swift_retain(v4);
  v9(v6, v7, v8, v10);
  return a1;
}

uint64_t *sub_100D1CD74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v8 = *(int *)(a3 + 32);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for ShadowStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_100D1CE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for ShadowStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100D1CE94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v7;
  a1[6] = a2[6];
  v8 = *(int *)(a3 + 32);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for ShadowStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100D1CF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D1CF24);
}

uint64_t sub_100D1CF24(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ShadowStyle(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v9);
  }
}

uint64_t sub_100D1CFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D1CFB8);
}

char *sub_100D1CFB8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = type metadata accessor for ShadowStyle(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t _s13ThumbnailViewVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_10140EBA0;
  if (!qword_10140EBA0)
    return swift_getSingletonMetadata(a1, &_s13ThumbnailViewVMn);
  return result;
}

uint64_t sub_100D1D068(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = &unk_100F32AB0;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = &unk_100F32AC8;
  result = type metadata accessor for ShadowStyle(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t _s8ItemViewVwxx(_QWORD *a1)
{
  swift_release(*a1);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t _s8ItemViewVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v4 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *_s8ItemViewVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *_s8ItemViewVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t _s8ItemViewVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8ItemViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s8ItemViewVMa()
{
  return &_s8ItemViewVN;
}

uint64_t sub_100D1D2E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113A340, 1);
}

__n128 sub_100D1D2F0()
{
  __n128 result;

  __asm { FMOV            V0.2D, #8.0 }
  xmmword_101481300 = (__int128)result;
  *(__n128 *)&qword_101481310 = result;
  return result;
}

uint64_t sub_100D1D304()
{
  uint64_t result;

  result = static Font.headline.getter();
  qword_101481320 = result;
  return result;
}

void sub_100D1D320()
{
  qword_101481328 = static Font.Weight.medium.getter();
}

void sub_100D1D33C()
{
  qword_101481330 = 0x4030000000000000;
}

double sub_100D1D34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShadowStyle(0);
  sub_100501DE0(v4, qword_101481338);
  sub_1004F2A1C(v4, (uint64_t)qword_101481338);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Color.RGBColorSpace.sRGBLinear(_:), v0);
  v5 = Color.init(_:white:opacity:)(v3, 0.0, 0.33);
  static ShadowStyle.drop(color:radius:x:y:)(4.0, 0.0, 1.0);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_100D1D42C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[3];

  v75 = a3;
  LODWORD(v82) = a2;
  v77 = sub_1004B804C(&qword_1013ECD50);
  __chkstk_darwin(v77);
  v81 = (uint64_t *)((char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Text.TruncationMode(0);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1004B804C(&qword_10140EBF0);
  __chkstk_darwin(v76);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_10140EBF8);
  v83 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v78 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_10140EC00);
  __chkstk_darwin(v16);
  v84 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v85 = (uint64_t)&v73 - v19;
  v20 = _s13ThumbnailViewVMa(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_1013F0DF0);
  __chkstk_darwin(v23);
  v87 = (uint64_t)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v86 = (uint64_t)&v73 - v26;
  v27 = qword_1013DDE68;
  swift_retain(a1);
  if (v27 != -1)
    swift_once(&qword_1013DDE68, sub_100D1D33C);
  v28 = qword_101481330;
  if (qword_1013DDE50 != -1)
    swift_once(&qword_1013DDE50, sub_100D1D2F0);
  v29 = xmmword_101481300;
  v30 = qword_101481310;
  v31 = unk_101481318;
  if (qword_1013DDE70 != -1)
    swift_once(&qword_1013DDE70, sub_100D1D34C);
  v32 = type metadata accessor for ShadowStyle(0);
  v33 = sub_1004F2A1C(v32, (uint64_t)qword_101481338);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(&v22[*(int *)(v20 + 32)], v33, v32);
  *(_QWORD *)v22 = a1;
  v22[8] = v82 & 1;
  *((_QWORD *)v22 + 2) = v28;
  *(_OWORD *)(v22 + 24) = v29;
  *((_QWORD *)v22 + 5) = v30;
  *((_QWORD *)v22 + 6) = v31;
  v34 = v87;
  sub_1004B8460((uint64_t)v22, v87, _s13ThumbnailViewVMa);
  v35 = v34 + *(int *)(v23 + 36);
  *(_QWORD *)v35 = 0x3FF5555555555555;
  *(_WORD *)(v35 + 8) = 0;
  sub_1004B84A4((uint64_t)v22, _s13ThumbnailViewVMa);
  sub_1004C4938(v34, v86, &qword_1013F0DF0);
  if (a4)
  {
    v74 = v14;
    v82 = a5;
    v88[0] = v75;
    v88[1] = a4;
    v36 = sub_1004D292C();
    swift_bridgeObjectRetain(a4);
    v37 = Text.init<A>(_:)(v88, &type metadata for String, v36);
    v39 = v38;
    v41 = v40;
    v43 = v42;
    if (qword_1013DDE58 != -1)
      swift_once(&qword_1013DDE58, sub_100D1D304);
    v44 = v41 & 1;
    v45 = Text.font(_:)(qword_101481320, v37, v39, v41 & 1, v43);
    v47 = v46;
    v49 = v48;
    v51 = v50;
    sub_1005EFC24(v37, v39, v44);
    swift_bridgeObjectRelease();
    if (qword_1013DDE60 != -1)
      swift_once(&qword_1013DDE60, sub_100D1D320);
    v52 = v49 & 1;
    v53 = Text.fontWeight(_:)(qword_101481328, 0, v45, v47, v49 & 1, v51);
    v55 = v54;
    v57 = v56;
    v59 = v58 & 1;
    sub_1005EFC24(v45, v47, v52);
    v60 = swift_bridgeObjectRelease();
    v62 = v79;
    v61 = v80;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v79 + 104))(v11, enum case for Text.TruncationMode.tail(_:), v80, v60);
    KeyPath = swift_getKeyPath(" $T");
    v64 = v81;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))((char *)v81 + *(int *)(v77 + 28), v11, v61);
    *v64 = KeyPath;
    sub_1004CB7BC((uint64_t)v64, (uint64_t)&v13[*(int *)(v76 + 36)], &qword_1013ECD50);
    *(_QWORD *)v13 = v53;
    *((_QWORD *)v13 + 1) = v55;
    v13[16] = v59;
    *((_QWORD *)v13 + 3) = v57;
    sub_1006CCFD0(v53, v55, v59);
    swift_bridgeObjectRetain(v57);
    sub_1004CB800((uint64_t)v64, &qword_1013ECD50);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v61);
    sub_1005EFC24(v53, v55, v59);
    swift_bridgeObjectRelease();
    v65 = v78;
    sub_1004CB7BC((uint64_t)v13, v78, &qword_10140EBF0);
    v14 = v74;
    *(_QWORD *)(v65 + *(int *)(v74 + 36)) = 0xBFF0000000000000;
    sub_1004CB800((uint64_t)v13, &qword_10140EBF0);
    v66 = v85;
    sub_1004C4938(v65, v85, &qword_10140EBF8);
    v67 = 0;
    a5 = v82;
  }
  else
  {
    v67 = 1;
    v66 = v85;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v66, v67, 1, v14);
  v69 = v86;
  v68 = v87;
  sub_1004CB7BC(v86, v87, &qword_1013F0DF0);
  v70 = v84;
  sub_1004CB7BC(v66, v84, &qword_10140EC00);
  sub_1004CB7BC(v68, a5, &qword_1013F0DF0);
  v71 = sub_1004B804C(&qword_10140EC08);
  sub_1004CB7BC(v70, a5 + *(int *)(v71 + 48), &qword_10140EC00);
  sub_1004CB800(v66, &qword_10140EC00);
  sub_1004CB800(v69, &qword_1013F0DF0);
  sub_1004CB800(v70, &qword_10140EC00);
  return sub_1004CB800(v68, &qword_1013F0DF0);
}

uint64_t sub_100D1DAEC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)v2;
  v5 = *(unsigned __int8 *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)a1 = static HorizontalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v8 = sub_1004B804C(&qword_10140EBE8);
  return sub_100D1D42C(v4, v5, v7, v6, a1 + *(int *)(v8 + 44));
}

uint64_t sub_100D1DB5C()
{
  uint64_t result;

  result = static Color.white.getter();
  qword_101481350 = result;
  return result;
}

uint64_t sub_100D1DB78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, enum case for Color.RGBColorSpace.sRGB(_:));
  result = Color.init(_:white:opacity:)(v2, 0.0, 0.2);
  qword_101481358 = result;
  return result;
}

uint64_t sub_100D1DC00()
{
  uint64_t result;

  result = static Color.accentColor.getter();
  qword_101481360 = result;
  return result;
}

void sub_100D1DC1C()
{
  qword_101481368 = 0x4014000000000000;
}

uint64_t sub_100D1DC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[2];
  uint64_t v91;

  v86 = a2;
  v3 = type metadata accessor for Image.ResizingMode(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  __chkstk_darwin(v3);
  v78 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_10140EC18);
  __chkstk_darwin(v5);
  v82 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_10140EC20);
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_10140EC28);
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1004B804C(&qword_10140EC30);
  __chkstk_darwin(v84);
  v83 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1004B804C(&qword_10140EC38);
  __chkstk_darwin(v85);
  v89 = (uint64_t)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v88 = (uint64_t)&v78 - v19;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (qword_1013DDE88 != -1)
      swift_once(&qword_1013DDE88, sub_100D1DC00);
    v20 = qword_1013DDE90;
    v87 = qword_101481360;
    swift_retain(qword_101481360);
    if (v20 != -1)
      swift_once(&qword_1013DDE90, sub_100D1DC1C);
    v21 = *(double *)&qword_101481368;
  }
  else
  {
    if (qword_1013DDE80 != -1)
      swift_once(&qword_1013DDE80, sub_100D1DB78);
    v87 = qword_101481358;
    swift_retain(qword_101481358);
    v21 = 0.5;
  }
  v22 = *(_QWORD *)(a1 + 16);
  v23 = &v12[*(int *)(v10 + 20)];
  v24 = enum case for RoundedCornerStyle.continuous(_:);
  v25 = type metadata accessor for RoundedCornerStyle(0);
  v81 = v10;
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v27(v23, v24, v25);
  *(_QWORD *)v12 = v22;
  *((_QWORD *)v12 + 1) = v22;
  v28 = a1 + *(int *)(_s13ThumbnailViewVMa(0) + 32);
  v29 = type metadata accessor for ShadowStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v9, v28, v29);
  sub_1004B8460((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)&v15[*(int *)(v13 + 52)], &qword_10140EC20);
  *(_WORD *)&v15[*(int *)(v13 + 56)] = 256;
  sub_1004CB800((uint64_t)v9, &qword_10140EC20);
  sub_1004B84A4((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  if (qword_1013DDE78 != -1)
    swift_once(&qword_1013DDE78, sub_100D1DB5C);
  v30 = qword_101481350;
  KeyPath = swift_getKeyPath(byte_100F32BC0);
  v32 = v83;
  sub_1004CB7BC((uint64_t)v15, v83, &qword_10140EC28);
  v33 = (uint64_t *)(v32 + *(int *)(v84 + 36));
  *v33 = KeyPath;
  v33[1] = v30;
  swift_retain(v30);
  sub_1004CB800((uint64_t)v15, &qword_10140EC28);
  v34 = (_QWORD *)a1;
  v35 = *(_QWORD *)(a1 + 16);
  v27(&v12[*(int *)(v81 + 20)], v24, v26);
  *(_QWORD *)v12 = v35;
  *((_QWORD *)v12 + 1) = v35;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v90, 0, 0, _swiftEmptyArrayStorage, v21, 10.0, 0.0);
  v36 = v82;
  sub_1004B8460((uint64_t)v12, v82, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v37 = v36 + *(int *)(sub_1004B804C(&qword_10140EC40) + 36);
  v38 = v90[1];
  *(_OWORD *)v37 = v90[0];
  *(_OWORD *)(v37 + 16) = v38;
  *(_QWORD *)(v37 + 32) = v91;
  v39 = sub_1004B804C(&qword_10140EC48);
  v40 = v87;
  *(_QWORD *)(v36 + *(int *)(v39 + 52)) = v87;
  *(_WORD *)(v36 + *(int *)(v39 + 56)) = 256;
  swift_retain(v40);
  v42 = static Alignment.center.getter(v41);
  v44 = v43;
  v45 = (uint64_t *)(v36 + *(int *)(sub_1004B804C(&qword_10140EC50) + 36));
  *v45 = v42;
  v45[1] = v44;
  v46 = sub_1004B84A4((uint64_t)v12, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v47 = static Alignment.center.getter(v46);
  v49 = v48;
  v50 = v89;
  v51 = v89 + *(int *)(v85 + 36);
  sub_1004CB7BC(v36, v51, &qword_10140EC18);
  v52 = (uint64_t *)(v51 + *(int *)(sub_1004B804C(&qword_10140EC58) + 36));
  *v52 = v47;
  v52[1] = v49;
  sub_1004CB7BC(v32, v50, &qword_10140EC30);
  sub_1004CB800(v36, &qword_10140EC18);
  sub_1004CB800(v32, &qword_10140EC30);
  sub_1004C4938(v50, v88, &qword_10140EC38);
  v53 = *v34;
  if (*v34)
  {
    v54 = v34;
    v56 = v78;
    v55 = v79;
    v57 = v80;
    (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, enum case for Image.ResizingMode.stretch(_:), v80);
    v85 = Image.resizable(capInsets:resizingMode:)(v56, v53, 0.0, 0.0, 0.0, 0.0);
    v58 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    v59 = v34[3];
    v60 = v54[4];
    v84 = v54[5];
    v61 = v54[6];
    v62 = static Edge.Set.all.getter(v58);
    LOBYTE(v57) = v62;
    v63 = static Color.accentColor.getter(v62);
    v64 = swift_getKeyPath(byte_100F32BC0);
    v65 = v57;
    v66 = 1;
  }
  else
  {
    v84 = 0;
    v85 = 0;
    v66 = 0;
    v65 = 0;
    v59 = 0;
    v60 = 0;
    v61 = 0;
    v64 = 0;
    v63 = 0;
  }
  v67 = v89;
  sub_1004CB7BC(v88, v89, &qword_10140EC38);
  v68 = v67;
  v69 = v86;
  sub_1004CB7BC(v68, v86, &qword_10140EC38);
  v70 = (uint64_t *)(v69 + *(int *)(sub_1004B804C(&qword_10140EC60) + 48));
  v76 = v64;
  v77 = v63;
  v71 = v64;
  v72 = v63;
  v74 = v84;
  v73 = v85;
  sub_100D1E3C4(v85, 0, v66, v65, v59, v60, v84, v61, 0, v76, v77);
  swift_release(v87);
  *v70 = v73;
  v70[1] = 0;
  v70[2] = v66;
  v70[3] = v65;
  v70[4] = v59;
  v70[5] = v60;
  v70[6] = v74;
  v70[7] = v61;
  v70[8] = 0;
  v70[9] = v71;
  v70[10] = v72;
  sub_1004CB800(v88, &qword_10140EC38);
  sub_100D1E3FC(v73, 0, v66, v65, v59, v60, v74, v61, 0, v71, v72);
  return sub_1004CB800(v89, &qword_10140EC38);
}

uint64_t sub_100D1E364@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_1004B804C(&qword_10140EC10);
  return sub_100D1DC2C(v2, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_100D1E3A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113A318, 1);
}

double sub_100D1E3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a1)
  {
    swift_retain(a11);
    swift_retain(a1);
    *(_QWORD *)&result = swift_retain(a10).n128_u64[0];
  }
  return result;
}

double sub_100D1E3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a1)
  {
    swift_release(a1);
    swift_release(a10);
    *(_QWORD *)&result = swift_release(a11).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D1E430()
{
  return sub_1004CBA30(&qword_10140EC68, &qword_10140EC70, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_100D1E45C()
{
  return sub_1004CBA30(&qword_10140EC78, &qword_10140EC80, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

void sub_100D1E488(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v3 = type metadata accessor for CharacterSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v48 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v12 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain(a2);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithString:", v13, swift_bridgeObjectRelease().n128_f64[0]);

  v15 = objc_msgSend(v14, "stringByDeletingPathExtension");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v49 = v16;
  v50 = v18;
  static CharacterSet.whitespacesAndNewlines.getter(v19);
  v20 = sub_1004D292C();
  v21 = StringProtocol.components(separatedBy:)(v11, &type metadata for String, v20);
  v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v11, v3);
  swift_bridgeObjectRelease();
  v49 = v21;
  v23 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v24 = sub_100500464();
  v25 = BidirectionalCollection<>.joined(separator:)(95, 0xE100000000000000, v23, v24);
  v27 = v26;
  swift_bridgeObjectRelease();
  v51 = v25;
  v52 = v27;
  v28 = swift_bridgeObjectRetain(v27);
  v29 = static CharacterSet.urlFragmentAllowed.getter(v28);
  CharacterSet.inverted.getter(v29);
  v22(v11, v3);
  v49 = v25;
  v50 = v27;
  v30 = StringProtocol.rangeOfCharacter(from:options:range:)(v8, 0, 0, 0, 1, &type metadata for String, v20);
  if ((v31 & 1) != 0)
  {
    v49 = 46;
    v50 = 0xE100000000000000;
    __chkstk_darwin(v30);
    *(&v47 - 2) = (uint64_t)&v49;
    swift_bridgeObjectRetain(v27);
    v35 = sub_100AF31F0(sub_100B46D24, (uint64_t)(&v47 - 4), v25, v27);
    v37 = v36;
    swift_bridgeObjectRelease();
    v38 = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      v39 = HIBYTE(v27) & 0xF;
      if ((v27 & 0x2000000000000000) == 0)
        v39 = v25 & 0xFFFFFFFFFFFFLL;
      if (4 * v39 < v35 >> 14)
      {
        __break(1u);
        return;
      }
      v40 = 7;
      if (((v27 >> 60) & ((v25 & 0x800000000000000) == 0)) != 0)
        v40 = 11;
      String.removeSubrange(_:)(v35, v40 | (v39 << 16), v38);
    }
    v41 = v48;
    CharacterSet.init(charactersIn:)(46, 0xE100000000000000);
    v49 = v51;
    v50 = v52;
    v42 = StringProtocol.trimmingCharacters(in:)(v41, &type metadata for String, v20);
    v44 = v43;
    v45 = swift_bridgeObjectRelease();
    if ((v44 & 0x2000000000000000) != 0)
      v46 = HIBYTE(v44) & 0xF;
    else
      v46 = v42 & 0xFFFFFFFFFFFFLL;
    ((void (*)(char *, uint64_t, __n128))v22)(v41, v3, v45);
    v22(v8, v3);
    if (!v46)
      swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v49, 0, 0);
    v32 = (id)static OS_os_log.crlDefault;
    v34 = static os_log_type_t.default.getter(v33);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v34, "Board title contains characters the require URLEncoding. Returning empty nil", 76, 2, (uint64_t)_swiftEmptyArrayStorage);

    v22(v8, v3);
  }
}

uint64_t sub_100D1E898()
{
  return sub_1004B7878(&qword_10140EC88, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32CBC);
}

uint64_t type metadata accessor for CRLChangeSelectionColorIntent(uint64_t a1)
{
  uint64_t result;

  result = qword_10140ED00;
  if (!qword_10140ED00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLChangeSelectionColorIntent);
  return result;
}

uint64_t sub_100D1E900()
{
  return sub_1004B7878((unint64_t *)&unk_10140EC90, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32CE4);
}

uint64_t sub_100D1E92C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113A3F4, 1);
}

uint64_t sub_100D1E93C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113A3CC, 1);
}

uint64_t sub_100D1E94C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[21] = a1;
  v2[22] = v1;
  v3 = type metadata accessor for CRLChangeSelectionColorIntent(0);
  v2[23] = v3;
  v2[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v2[25] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[26] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[27] = swift_task_alloc(v6);
  v2[28] = swift_task_alloc(v6);
  v2[29] = swift_task_alloc(v6);
  v2[30] = swift_task_alloc(v6);
  v2[31] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v7);
  v2[33] = swift_task_alloc(v7);
  v8 = type metadata accessor for CRLBoardEntity(0);
  v2[34] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[35] = swift_task_alloc(v9);
  v2[36] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v2[37] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v2[38] = v11;
  v2[39] = v12;
  return swift_task_switch(sub_100D1EA9C, v11, v12);
}

uint64_t sub_100D1EA9C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = (_QWORD *)v0[36];
  v2 = v0[33];
  v3 = v0[34];
  IntentParameter.wrappedValue.getter(v1);
  sub_1004B8460((uint64_t)v1 + *(int *)(v3 + 40), v2, type metadata accessor for CRLBoardIdentifier);
  v4 = sub_1004B84A4((uint64_t)v1, type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter(v4);
  v0[10] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[11] = &off_10129B490;
  v7 = (char *)&dword_1014118D0 + dword_1014118D0;
  v5 = (_QWORD *)swift_task_alloc(unk_1014118D4);
  v0[40] = v5;
  *v5 = v0;
  v5[1] = sub_100D1EB7C;
  return ((uint64_t (*)(_QWORD, _QWORD *))v7)(v0[33], v0 + 7);
}

uint64_t sub_100D1EB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 320);
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = v2;
  swift_task_dealloc(v5);
  sub_1004B84A4(v4[33], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    v6 = v4[38];
    v7 = v4[39];
    v8 = sub_100D1FB40;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 7);
    v6 = v4[38];
    v7 = v4[39];
    v8 = sub_100D1EC18;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100D1EC18()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;
  uint64_t *v28;
  void *v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(__n128);
  uint64_t v48;
  char v49;
  BOOL v50;
  _QWORD *v51;
  NSObject *v52;
  __n128 v53;
  uint64_t v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  NSObject *v86;
  os_log_type_t v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(void);
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  _QWORD *v130;
  void *v131;
  void *v132;
  uint64_t *v133;
  uint64_t v134;
  _QWORD **v135;
  int64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;

  v135 = (_QWORD **)(v0 + 160);
  v1 = objc_msgSend(*(id *)(v0 + 328), "selectionModelTranslator", swift_release(*(_QWORD *)(v0 + 296)).n128_f64[0]);
  if (!v1)
  {
    v15 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 184);
    v149 = *(_QWORD *)(v0 + 200);
    v154 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 176);
    sub_100757E04(&_mh_execute_header, (uint64_t)"perform()", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Board Items Selection Customization/CRLChangeSelectionColorIntent.swift", 144, 2, 51, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"perform()", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Board Items Selection Customization/CRLChangeSelectionColorIntent.swift", 144, 2u, 51, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17 + *(int *)(v16 + 28), v149);
    v18 = sub_1004B8460(v17, v154, type metadata accessor for CRLChangeSelectionColorIntent);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v22 = *(_QWORD *)(v0 + 272);
      v21 = *(_QWORD **)(v0 + 280);
      v23 = *(_QWORD *)(v0 + 256);
      v146 = *(_QWORD *)(v0 + 208);
      v150 = *(_QWORD *)(v0 + 200);
      v155 = *(_QWORD *)(v0 + 216);
      v139 = *(_QWORD *)(v0 + 192);
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v142 = swift_slowAlloc(32, -1);
      v158 = v142;
      *(_DWORD *)v24 = 136315138;
      IntentParameter.wrappedValue.getter(v21);
      sub_1004B8460((uint64_t)v21 + *(int *)(v22 + 40), v23, type metadata accessor for CRLBoardIdentifier);
      v25 = sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardEntity);
      v159 = UUID.uuidString.getter(v25);
      v160 = v26;
      swift_bridgeObjectRetain(v26);
      v27._countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      v28 = (uint64_t *)(v23 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      v30 = *v28;
      v29 = (void *)v28[1];
      swift_bridgeObjectRetain(v160);
      v31._countAndFlagsBits = v30;
      v31._object = v29;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      sub_1004B84A4(v23, type metadata accessor for CRLBoardIdentifier);
      *(_QWORD *)(v0 + 152) = sub_100BF0F1C(v159, v160, &v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v135, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease();
      sub_1004B84A4(v139, type metadata accessor for CRLChangeSelectionColorIntent);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Missing selection model translator for %s", v24, 0xCu);
      swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v142, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v155, v150);
    }
    else
    {
      v100 = *(_QWORD *)(v0 + 208);
      v99 = *(_QWORD *)(v0 + 216);
      v101 = *(_QWORD *)(v0 + 200);
      sub_1004B84A4(*(_QWORD *)(v0 + 192), type metadata accessor for CRLChangeSelectionColorIntent);

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    }
    v103 = *(void **)(v0 + 328);
    v102 = *(void **)(v0 + 336);
    v104 = type metadata accessor for _PrebuiltAppIntentError(0);
    v105 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
    swift_allocError(v104, v105, 0, 0);
    v106.n128_f64[0] = static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow(v106);

    v107 = *(_QWORD *)(v0 + 280);
    v109 = *(_QWORD *)(v0 + 256);
    v108 = *(_QWORD *)(v0 + 264);
    v111 = *(_QWORD *)(v0 + 240);
    v110 = *(_QWORD *)(v0 + 248);
    v113 = *(_QWORD *)(v0 + 224);
    v112 = *(_QWORD *)(v0 + 232);
    v114 = *(_QWORD *)(v0 + 216);
    v115 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 288));
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    v116 = *(uint64_t (**)(void))(v0 + 8);
    return v116();
  }
  v2 = v1;
  v3 = objc_msgSend(*(id *)(v0 + 336), "selectionPath");
  v4 = objc_msgSend(v2, "unlockedBoardItemsForSelectionPath:", v3);
  v5 = type metadata accessor for CRLBoardItem(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

  v131 = v3;
  v132 = v2;
  v134 = v5;
  if ((v7 & 0xC000000000000001) != 0)
  {
    if (v7 < 0)
      v9 = v7;
    else
      v9 = v7 & 0xFFFFFFFFFFFFFF8;
    v10 = __CocoaSet.makeIterator()(v9);
    v8 = Set.Iterator.init(_cocoa:)((_QWORD *)(v0 + 16), v10, v5, v6);
    v7 = *(_QWORD *)(v0 + 16);
    v141 = *(_QWORD *)(v0 + 24);
    v11 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v12 = 0;
    v32 = -1 << *(_BYTE *)(v7 + 32);
    v141 = v7 + 56;
    v11 = ~v32;
    v33 = -v32;
    if (v33 < 64)
      v34 = ~(-1 << v33);
    else
      v34 = -1;
    v13 = v34 & *(_QWORD *)(v7 + 56);
  }
  v133 = (uint64_t *)(v0 + 144);
  v128 = (_BYTE *)(v0 + 138);
  v129 = (_BYTE *)(v0 + 137);
  v130 = (_QWORD *)(v0 + 139);
  v35 = *(_QWORD *)(v0 + 208);
  v147 = *(_QWORD *)(v0 + 184);
  v136 = (unint64_t)(v11 + 64) >> 6;
  v138 = v7;
  while (1)
  {
    if (v7 < 0)
    {
      v39 = v7;
      v40 = __CocoaSet.Iterator.next()(v8);
      if (!v40)
        goto LABEL_59;
      v41 = v40;
      *v133 = v40;
      swift_unknownObjectRetain(v40);
      swift_dynamicCast(v135, v133, (char *)&type metadata for Swift.AnyObject + 8, v134, 7);
      v42 = *v135;
      v43 = swift_unknownObjectRelease(v41);
      v38 = v12;
      v36 = v13;
      if (!v42)
        goto LABEL_59;
      goto LABEL_36;
    }
    if (v13)
    {
      v36 = (v13 - 1) & v13;
      v37 = __clz(__rbit64(v13)) | (v12 << 6);
      v38 = v12;
      goto LABEL_35;
    }
    v44 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      JUMPOUT(0x100D1FB20);
    }
    if (v44 >= v136)
      goto LABEL_58;
    v45 = *(_QWORD *)(v141 + 8 * v44);
    v38 = v12 + 1;
    if (!v45)
    {
      v38 = v12 + 2;
      if (v12 + 2 >= v136)
        goto LABEL_58;
      v45 = *(_QWORD *)(v141 + 8 * v38);
      if (!v45)
      {
        v38 = v12 + 3;
        if (v12 + 3 >= v136)
          goto LABEL_58;
        v45 = *(_QWORD *)(v141 + 8 * v38);
        if (!v45)
        {
          v38 = v12 + 4;
          if (v12 + 4 >= v136)
            goto LABEL_58;
          v45 = *(_QWORD *)(v141 + 8 * v38);
          if (!v45)
            break;
        }
      }
    }
LABEL_34:
    v36 = (v45 - 1) & v45;
    v37 = __clz(__rbit64(v45)) + (v38 << 6);
LABEL_35:
    v39 = v7;
    v42 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v37);
    if (!v42)
      goto LABEL_59;
LABEL_36:
    v47 = *(uint64_t (**)(__n128))((swift_isaMask & *v42) + 0xC8);
    v48 = v47(v43);
    v156 = v36;
    if ((v49 & 1) == 0 || ((unint64_t)(v48 - 2) >= 8 ? (v50 = v48 == 0) : (v50 = 1), v50))
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v35 + 16))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 176) + *(int *)(v147 + 28), *(_QWORD *)(v0 + 200));
      v51 = v42;
      v52 = Logger.logObject.getter(v51);
      v54 = v35;
      v55 = static os_log_type_t.debug.getter(v53);
      v56 = os_log_type_enabled(v52, v55);
      v57 = *(_QWORD *)(v0 + 224);
      v58 = *(_QWORD *)(v0 + 200);
      if (v56)
      {
        v151 = v38;
        v59 = swift_slowAlloc(12, -1);
        v60 = swift_slowAlloc(32, -1);
        v159 = v60;
        *(_DWORD *)v59 = 136315138;
        *(_QWORD *)(v0 + 128) = ((uint64_t (*)(void))v47)();
        *(_BYTE *)(v0 + 136) = v61 & 1;
        v62 = String.init<A>(describing:)(v0 + 128, &type metadata for CRLBoardItemType);
        *(_QWORD *)(v59 + 4) = sub_100BF0F1C(v62, v63, &v159);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v52, v55, "Unsupported board item %s", (uint8_t *)v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        v7 = v138;
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v57, v58);
        v12 = v151;
        v13 = v156;
        v35 = v54;
      }
      else
      {

        v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v57, v58);
        v12 = v38;
        v13 = v156;
        v35 = v54;
        v7 = v39;
      }
    }
    else
    {
      v152 = v38;
      if (v48 == 1)
      {
        v64 = type metadata accessor for CRLWPShapeItem(0);
        v65 = swift_dynamicCastClass(v42, v64);
        if (v65)
        {
          v66 = v65;
          v67 = *(void **)(v0 + 336);
          v68 = v42;
          sub_100D209B4(v66, v67);

          v12 = v152;
          v13 = v156;
          v7 = v39;
        }
        else
        {
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v35 + 16))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 176) + *(int *)(v147 + 28), *(_QWORD *)(v0 + 200));
          v71 = v42;
          v72 = Logger.logObject.getter(v71);
          v73 = static os_log_type_t.error.getter(v72);
          v74 = os_log_type_enabled(v72, v73);
          v75 = *(_QWORD *)(v0 + 248);
          v76 = *(_QWORD *)(v0 + 200);
          v7 = v39;
          if (v74)
          {
            v143 = *(_QWORD *)(v0 + 248);
            v77 = swift_slowAlloc(22, -1);
            v126 = v76;
            v78 = (_QWORD *)swift_slowAlloc(8, -1);
            v79 = v35;
            v80 = swift_slowAlloc(32, -1);
            v159 = v80;
            *(_DWORD *)v77 = 138412546;
            *(_QWORD *)(v77 + 4) = v71;
            *v78 = v42;
            *(_WORD *)(v77 + 12) = 2080;
            *v128 = 0;
            v81 = String.init<A>(describing:)(v128, &type metadata for CRLIntentSelectionBoardItemType);
            *(_QWORD *)(v77 + 14) = sub_100BF0F1C(v81, v82, &v159);
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v72, v73, "Wrong subclass %@ received for type: %s", (uint8_t *)v77, 0x16u);
            v83 = sub_1004B804C(&qword_1013E53A8);
            swift_arrayDestroy(v78, 1, v83);
            swift_slowDealloc(v78, -1, -1);
            swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
            v84 = v80;
            v35 = v79;
            swift_slowDealloc(v84, -1, -1);
            swift_slowDealloc(v77, -1, -1);

            v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v143, v126);
          }
          else
          {

            v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v75, v76);
          }
LABEL_54:
          v12 = v152;
          v13 = v156;
        }
      }
      else
      {
        v69 = type metadata accessor for CRLWPStickyNoteItem(0);
        if (swift_dynamicCastClass(v42, v69))
        {
          v70 = v42;
          IntentParameter.wrappedValue.getter(v130);
          __asm { BR              X9 }
        }
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v35 + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 176) + *(int *)(v147 + 28), *(_QWORD *)(v0 + 200));
        v85 = v42;
        v86 = Logger.logObject.getter(v85);
        v87 = static os_log_type_t.error.getter(v86);
        v88 = os_log_type_enabled(v86, v87);
        v89 = *(_QWORD *)(v0 + 232);
        v7 = v39;
        if (v88)
        {
          v144 = *(_QWORD *)(v0 + 200);
          v90 = swift_slowAlloc(22, -1);
          v127 = v89;
          v91 = (_QWORD *)swift_slowAlloc(8, -1);
          v92 = v35;
          v93 = swift_slowAlloc(32, -1);
          v159 = v93;
          *(_DWORD *)v90 = 138412546;
          *(_QWORD *)(v90 + 4) = v85;
          *v91 = v42;
          *(_WORD *)(v90 + 12) = 2080;
          *v129 = 1;
          v94 = String.init<A>(describing:)(v129, &type metadata for CRLIntentSelectionBoardItemType);
          *(_QWORD *)(v90 + 14) = sub_100BF0F1C(v94, v95, &v159);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v86, v87, "Wrong subclass %@ received for type: %s", (uint8_t *)v90, 0x16u);
          v96 = sub_1004B804C(&qword_1013E53A8);
          swift_arrayDestroy(v91, 1, v96);
          swift_slowDealloc(v91, -1, -1);
          swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
          v97 = v93;
          v35 = v92;
          swift_slowDealloc(v97, -1, -1);
          swift_slowDealloc(v90, -1, -1);

          v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v127, v144);
          goto LABEL_54;
        }
        v98 = *(_QWORD *)(v0 + 200);

        v8 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v89, v98);
        v12 = v152;
        v13 = v36;
      }
    }
  }
  v46 = v12 + 5;
  while (v136 != v46)
  {
    v45 = *(_QWORD *)(v141 + 8 * v46++);
    if (v45)
    {
      v38 = v46 - 1;
      goto LABEL_34;
    }
  }
LABEL_58:
  v39 = v7;
LABEL_59:
  v117 = *(void **)(v0 + 328);
  v118 = *(void **)(v0 + 336);
  v119 = v39;
  v121 = *(_QWORD *)(v0 + 280);
  v120 = *(_QWORD *)(v0 + 288);
  v122 = *(_QWORD *)(v0 + 264);
  v137 = *(_QWORD *)(v0 + 256);
  v140 = *(_QWORD *)(v0 + 248);
  v145 = *(_QWORD *)(v0 + 240);
  v148 = *(_QWORD *)(v0 + 232);
  v153 = *(_QWORD *)(v0 + 224);
  v157 = *(_QWORD *)(v0 + 216);
  v123 = *(_QWORD *)(v0 + 192);
  v124 = sub_1004D284C(v119);
  static IntentResult.result<>()(v124);

  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v137);
  swift_task_dealloc(v140);
  swift_task_dealloc(v145);
  swift_task_dealloc(v148);
  swift_task_dealloc(v153);
  swift_task_dealloc(v157);
  swift_task_dealloc(v123);
  v116 = *(uint64_t (**)(void))(v0 + 8);
  return v116();
}

uint64_t sub_100D1FB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 296));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D1FC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_101481370);
  sub_1004F2A1C(v10, (uint64_t)qword_101481370);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x800000010100C9C0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100D1FD98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v0 = sub_1004B804C(&qword_10140ED68);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_10140ED70);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLChangeSelectionColorIntent(0);
  v7 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2, v6, v7);
  v8._object = (void *)0x800000010100C9A0;
  v8._countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(byte_100F32D40);
  v10 = sub_1004B804C(&qword_10140ED78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 544175136;
  v11._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v12 = swift_getKeyPath("h$T");
  v13 = sub_1004B804C(&qword_10140ED80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v12, v3, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v5, v6, v7);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, v6, v7);
}

uint64_t sub_100D1FF7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unsigned int v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  unsigned int v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD v80[7];

  v72 = a1;
  v77 = type metadata accessor for InputConnectionBehavior(0);
  v71 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v75 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v74 = (char *)&v58 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v8;
  v9 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v9);
  v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v69 = v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v63 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v62 = v13;
  v28(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  v61 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a board", 34, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000025, 0x800000010100C840);
  static Locale.current.getter(v29);
  v28(v15, v27, v13);
  v30 = v73;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a board", 40, 2);
  v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v68(v30, 0, 1, v22);
  v31 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v64 = v33;
  v34 = v74;
  v33(v74, 1, 1, v32);
  v35 = v75;
  v33(v75, 1, 1, v32);
  v66 = sub_1004B804C(&qword_1013E1128);
  v67 = 0x8000000100FAFD20;
  v78 = 0xD00000000000001FLL;
  v79 = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v65 = type metadata accessor for AppDependencyManager(0);
  v36 = static AppDependencyManager.shared.getter(v65);
  v80[0] = AppDependency.__allocating_init(key:manager:)(v80, v36);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v71 = *(_QWORD *)(v71 + 104);
  v37 = v76;
  ((void (*)(char *))v71)(v76);
  v38 = sub_100501D10();
  v57 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v39 = v25;
  v40 = v25;
  v41 = v73;
  v42 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v40, v73, v59, v34, v35, v37, v80, &type metadata for CRLOpenBoardsOptionsProvider, v38, v57);
  v43 = v72;
  *v72 = v42;
  v70 = sub_1004B804C(&qword_10140ED50);
  v44 = String.LocalizationValue.init(stringLiteral:)(0x726F6C6F43, 0xE500000000000000);
  static Locale.current.getter(v44);
  v45 = v63;
  v46 = v62;
  v47 = v61;
  v61(v15, v63, v62);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a color", 34, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x800000010100C8A0);
  static Locale.current.getter(v48);
  v47(v15, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a color", 40, 2);
  v68(v41, 0, 1, v69);
  LOBYTE(v80[0]) = 8;
  v49 = v74;
  v50 = v64;
  v64(v74, 1, 1, v32);
  v51 = v75;
  v50(v75, 1, 1, v32);
  v52 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v71)(v76, v60, v77);
  v53 = sub_100D20970();
  v43[1] = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v39, v41, v80, v49, v51, v52, &off_101263B60, v53);
  v78 = 0xD00000000000001FLL;
  v79 = v67;
  v54 = AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v55 = static AppDependencyManager.shared.getter(v54);
  v43[2] = AppDependency.__allocating_init(key:manager:)(v80, v55);
  type metadata accessor for CRLChangeSelectionColorIntent(0);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v80, 0, 0);
  return Logger.init(_:)((id)static OS_os_log.appIntents);
}

uint64_t sub_100D206F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DDE98 != -1)
    swift_once(&qword_1013DDE98, sub_100D1FC0C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_101481370);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100D2076C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10140ED64);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100D1E94C(a1);
}

uint64_t sub_100D207C0(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100D207FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100D2083C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D20848);
}

uint64_t sub_100D20848(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_100D208C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D208D0);
}

char *sub_100D208D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100D20944()
{
  return sub_1004CBA30(&qword_10140ED40, &qword_10140ED48, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_100D20970()
{
  unint64_t result;

  result = qword_10140ED58;
  if (!qword_10140ED58)
  {
    result = swift_getWitnessTable(&unk_100F36914, &type metadata for CRLColorEntity);
    atomic_store(result, &qword_10140ED58);
  }
  return result;
}

double sub_100D209B4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  void *v9;
  void *v10;
  uint64_t KeyPath;
  id v12;
  char *v13;
  char *v14;
  double result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v29)(__n128);
  __n128 v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;

  v4 = type metadata accessor for CRLWPEditor(0);
  v6 = v4;
  if (v4)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4, v5);
  else
    ObjCClassFromMetadata = 0;
  v8 = objc_msgSend(a2, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (swift_dynamicCastClass(v8, v6))
  {
    IntentParameter.wrappedValue.getter(&v35);
    sub_100D65838(v35);
    v10 = v9;
    KeyPath = swift_getKeyPath(byte_100F32D20);
    v12 = v10;
    v13 = sub_10073138C();
    if (v13)
    {
      v14 = v13;
      sub_100DC1D9C(KeyPath, v12, *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
      swift_unknownObjectRelease(v8);

      swift_release(KeyPath);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_unknownObjectRelease(v8);

      *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    }
  }
  else
  {
    swift_unknownObjectRelease(v8);
    v16 = sub_100501D54();
    if (v16)
      v18 = swift_getObjCClassFromMetadata(v16, v17);
    else
      v18 = 0;
    v19 = objc_msgSend(a2, "mostSpecificCurrentEditorOfClass:", v18);
    v20 = objc_opt_self(CRLWPShapeEditor);
    v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
    if (v21 && (v22 = v21, objc_msgSend(v21, "isSingleBoardItemSelected")))
    {
      v23 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v25 = *(uint64_t (**)(__n128))(*(_QWORD *)v24 + 288);
      v26 = swift_retain(v24);
      v27 = (void *)v25(v26);
      LODWORD(v24) = objc_msgSend(v27, "widthValid", swift_release(v24).n128_f64[0]);

      if ((_DWORD)v24
        && (v28 = *(_QWORD *)(a1 + v23),
            v29 = *(uint64_t (**)(__n128))(*(_QWORD *)v28 + 288),
            v30 = swift_retain(v28),
            v31 = (void *)v29(v30),
            LOBYTE(v28) = objc_msgSend(v31, "heightValid", swift_release(v28).n128_f64[0]),
            v31,
            (v28 & 1) != 0))
      {
        IntentParameter.wrappedValue.getter((uint64_t *)((char *)&v35 + 1));
        sub_100D65838(SBYTE1(v35));
        v33 = v32;
        objc_msgSend(v22, "setShapeFill:", v33);
      }
      else
      {
        IntentParameter.wrappedValue.getter((uint64_t *)((char *)&v35 + 2));
        sub_100D65838(SBYTE2(v35));
        v33 = v34;
        sub_1007FAEBC(v22, v33);
      }

      *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100D20CF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100D20D20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100D20D48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  Class isa;
  id v35;
  id v36;
  void *v37;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider);
  if (!sub_1008B66D4())
    goto LABEL_15;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  if (v3)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3, v4);
  else
    ObjCClassFromMetadata = 0;
  v6 = objc_msgSend(v2, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v7 = objc_opt_self(CRLShapeEditor);
  v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
  if (!v8)
  {
    swift_unknownObjectRelease(v6);
    goto LABEL_9;
  }
  v9 = objc_msgSend(v8, "canIntersectPaths");
  swift_unknownObjectRelease(v6);
  if ((v9 & 1) == 0)
  {
LABEL_9:
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v14 = sub_1004C7D68();
    objc_msgSend(v14, "setTag:", 1, swift_bridgeObjectRelease().n128_f64[0]);
    v15 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);

  }
  v19 = sub_100D21184();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
  specialized Array._endMutation()(v22);
LABEL_15:
  v23 = sub_100D215CC();
  if (v23)
  {
    v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);

  }
  v28 = sub_100D22C4C();
  if (v28)
  {
    v29 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized Array._endMutation()(v32);

  }
  v33 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(v33, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v35, "setAxis:", 1);
  if (qword_1013DC8A8 != -1)
    swift_once(&qword_1013DC8A8, sub_1004C5434);
  objc_msgSend(v35, "setSpacing:", *(double *)&qword_10147E6C8);
  v36 = objc_msgSend(v35, "viewWithTag:", 1);
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v35, "setCustomSpacing:afterView:", v36, 8.0);

  }
  return v35;
}

id sub_100D21184()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  double v9;
  id v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  sub_100D238B4((uint64_t)&off_101263268, (uint64_t)v1);
  v3 = v2;

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v13 = v3;
    else
      v13 = v3 & 0xFFFFFFFFFFFFFF8;
    v14 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v5 = _bridgeCocoaArray<A>(_:)(v13, v14);
  }
  else
  {
    v4 = swift_bridgeObjectRetain(v3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v5 = v3;
  }
  swift_bridgeObjectRelease();
  v6 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 0);
  objc_msgSend(v8, "setAlignment:", 0);
  objc_msgSend(v8, "setDistribution:", 2);
  objc_msgSend(v8, "setSpacing:", 1.0);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v9 = *(double *)&qword_10147E6D0;
  v10 = objc_msgSend(v8, "heightAnchor");
  v11 = objc_msgSend(v10, "constraintGreaterThanOrEqualToConstant:", v9);

  objc_msgSend(v11, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v8;
}

void sub_100D21398(int *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;

  swift_getObjectType(a2);
  v5 = *a1;
  v6 = sub_100D2340C(*a1);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v7 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = swift_allocObject(&unk_1012A1120, 28, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_DWORD *)(v8 + 24) = v5;
  v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23EC4, v8);
  v10 = sub_100D23670(v5);
  v12 = v11;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "labelColor");
  v15 = objc_msgSend(v13, "labelColor");
  v16 = sub_1004C7A58(v6, 0, 0, v9, 0, 0, v14, v15, 6.0, 0, 0, 1, v10, v12, 0);

  swift_bridgeObjectRelease();
  *a3 = v16;
}

void sub_100D21550(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider);

    sub_1008B69C0(a3);
  }
}

id sub_100D215CC()
{
  id v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __int16 v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  id v31;
  Class isa;
  double v33;
  id v34;
  id v35;
  double *v36;

  if (sub_1008B6584())
  {
    v0 = sub_100D21B84();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v0);
    v2 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v1 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v2 >= v1 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v1 > 1, v2 + 1, 1);
    v3 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v2, v0);
    specialized Array._endMutation()(v3);
  }
  v4 = sub_1008B6824();
  if ((v4 & 1) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      v25 = sub_100D22340();
      v24 = v25;
      goto LABEL_12;
    }
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v10 = v20;
    v12 = v21;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v22 = swift_allocObject(&unk_1012A10D0, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16);
    v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E00, v22);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  else
  {
    if ((v4 & 0x100) == 0)
      goto LABEL_15;
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;
    v12 = v11;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v13 = swift_allocObject(&unk_1012A10D0, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16);
    v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E20, v13);
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
  v23 = v15;
  v24 = sub_1004C85B0(v10, v12, 0, (uint64_t)v23, 0, 1, v14, 0, 6.0);
  swift_bridgeObjectRelease();

LABEL_12:
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v24);
  specialized Array._endMutation()(v28);
LABEL_15:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v36 = _swiftEmptyArrayStorage;
    else
      v36 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v29 = (id)_CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease();
    if (v29)
      goto LABEL_17;
LABEL_26:
    swift_bridgeObjectRelease();
    return v29;
  }
  v29 = *(id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
    goto LABEL_26;
LABEL_17:
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v30 = *(double *)&qword_10147E6C0;
  v31 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v31, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v29, "setAxis:", 0);
  objc_msgSend(v29, "setAlignment:", 0);
  objc_msgSend(v29, "setDistribution:", 1);
  objc_msgSend(v29, "setSpacing:", v30);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v33 = *(double *)&qword_10147E6D0;
  v34 = objc_msgSend(v29, "heightAnchor");
  v35 = objc_msgSend(v34, "constraintGreaterThanOrEqualToConstant:", v33);

  objc_msgSend(v35, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v29;
}

id sub_100D21B84()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  NSString v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  Class isa;
  id v36;
  double v37;
  id v38;
  id v39;
  id v41;
  id v42;
  uint64_t v43;

  swift_getObjectType(v0);
  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v43 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100EF5560;
  v2 = String._bridgeToObjectiveC()();
  v42 = (id)objc_opt_self(UIImage);
  v3 = objc_msgSend(v42, "systemImageNamed:", v2);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v4 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E40, v4);
  v41 = (id)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v41, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;
  v13 = v12;

  v14 = (void *)objc_opt_self(UIColor);
  v15 = objc_msgSend(v14, "labelColor");
  v16 = objc_msgSend(v14, "labelColor");
  v17 = sub_1004C7A58(v3, 0, 0, v5, 0, 0, v15, v16, 6.0, 0, 0, 1, v11, v13, 0);

  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 32) = v17;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v42, "systemImageNamed:", v18);

  v20 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E70, v20);
  v22 = objc_msgSend(v41, "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v27 = v26;
  v29 = v28;

  v30 = objc_msgSend(v14, "labelColor");
  v31 = objc_msgSend(v14, "labelColor");
  v32 = sub_1004C7A58(v19, 0, 0, v21, 0, 0, v30, v31, 6.0, 0, 0, 1, v27, v29, 0);

  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + 40) = v32;
  specialized Array._endMutation()(v33);
  v34 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v36 = objc_msgSend(v34, "initWithArrangedSubviews:", isa);

  objc_msgSend(v36, "setAxis:", 0);
  objc_msgSend(v36, "setAlignment:", 0);
  objc_msgSend(v36, "setDistribution:", 2);
  objc_msgSend(v36, "setSpacing:", 1.0);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v37 = *(double *)&qword_10147E6D0;
  v38 = objc_msgSend(v36, "heightAnchor");
  v39 = objc_msgSend(v38, "constraintGreaterThanOrEqualToConstant:", v37);

  objc_msgSend(v39, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v36;
}

double sub_100D2214C(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4, SEL *a5)
{
  uint64_t v8;
  uint64_t Strong;
  double result;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  void *v19;
  char v20[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = (char *)objc_retain(*(id *)(Strong
                                    + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    v13 = *(void **)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v14 = sub_1004B8930(0, a3, a4);
    if (v14)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14, v15);
    else
      ObjCClassFromMetadata = 0;
    v17 = objc_msgSend(v13, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v18 = objc_opt_self(*a4);
    v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
    if (v19)
      objc_msgSend(v19, *a5, v12);

    *(_QWORD *)&result = swift_unknownObjectRelease(v17).n128_u64[0];
  }
  return result;
}

double sub_100D22248(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  void *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  uint64_t v14;
  void *v15;
  char v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    v9 = *(void **)&v8[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v10 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
    if (v10)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10, v11);
    else
      ObjCClassFromMetadata = 0;
    v13 = objc_msgSend(v9, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v14 = objc_opt_self(CRLCanvasEditor);
    v15 = (void *)swift_dynamicCastObjCClass(v13, v14);
    if (v15)
      objc_msgSend(v15, *a3, v8);

    *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
  }
  return result;
}

void *sub_100D22340()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v9 = sub_1004C85B0(v5, v7, 0, (uint64_t)v8, 0, 1, 0, 0, 6.0);
  swift_bridgeObjectRelease();

  objc_msgSend(v9, "setShowsMenuAsPrimaryAction:", 1);
  isa = sub_100D224A0().super.super.isa;
  objc_msgSend(v9, "setMenu:", isa);

  return v9;
}

UIMenu sub_100D224A0()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  Swift::OpaquePointer v25;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v27;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v8 = v7;

  v9 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E00, v9);
  v11 = objc_msgSend(v0, "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;
  v18 = v17;

  v19 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v16, v18, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23E20, v19);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v21 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v22 + 32) = v10;
  *(_QWORD *)(v22 + 40) = v20;
  preferredElementSize = v22;
  specialized Array._endMutation()(v22);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v27.value.super.isa = 0;
  v27.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v25);
}

id sub_100D2277C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  double v9;
  id v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  sub_100D23CF0((uint64_t)&off_1012632A0, (uint64_t)v1);
  v3 = v2;

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v13 = v3;
    else
      v13 = v3 & 0xFFFFFFFFFFFFFF8;
    v14 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v5 = _bridgeCocoaArray<A>(_:)(v13, v14);
  }
  else
  {
    v4 = swift_bridgeObjectRetain(v3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v5 = v3;
  }
  swift_bridgeObjectRelease();
  v6 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 0);
  objc_msgSend(v8, "setAlignment:", 0);
  objc_msgSend(v8, "setDistribution:", 2);
  objc_msgSend(v8, "setSpacing:", 1.0);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v9 = *(double *)&qword_10147E6D0;
  v10 = objc_msgSend(v8, "heightAnchor");
  v11 = objc_msgSend(v10, "constraintGreaterThanOrEqualToConstant:", v9);

  objc_msgSend(v11, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v8;
}

void sub_100D22990(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;

  swift_getObjectType(a2);
  v5 = *a1;
  v6 = sub_100D23998(*a1);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v7 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = swift_allocObject(&unk_1012A10F8, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D23DF8, v8);
  v10 = sub_100D23A88();
  v12 = v11;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "labelColor");
  v15 = objc_msgSend(v13, "labelColor");
  v16 = sub_1004C7A58(v6, 0, 0, v9, 0, 0, v14, v15, 6.0, 0, 0, 1, v10, v12, 0);

  swift_bridgeObjectRelease();
  *a3 = v16;
}

void sub_100D22B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  void *v14;
  double v15;
  _BYTE v16[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    v8 = *(void **)&v7[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v9 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
    if (v9)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9, v10);
    else
      ObjCClassFromMetadata = 0;
    v12 = objc_msgSend(v8, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v13 = objc_opt_self(CRLShapeEditor);
    v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
    if (!v14)
      *(_QWORD *)&v15 = swift_unknownObjectRelease(v12).n128_u64[0];
    objc_msgSend(v14, "performBooleanOperationOnPaths:", a3, v15);

  }
}

id sub_100D22C4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  id v19;
  Class isa;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  double v37;
  id v38;
  Class v39;
  double v40;
  id v41;
  id v42;
  uint64_t v44;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider)
                + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, (unint64_t *)&qword_1013F2E80, off_1012299C0);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLShapeEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "canIntersectPaths");
    swift_unknownObjectRelease(v5);
    if ((v8 & 1) != 0)
    {
      v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v10 = swift_allocObject(v9, 48, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100EF5560;
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = String._bridgeToObjectiveC()();
      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v15 = sub_1004C7D68();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v10 + 32) = v15;
      v16 = sub_100D2277C();
      *(_QWORD *)(v10 + 40) = v16;
      specialized Array._endMutation()(v16);
      v17 = v10;
      if ((unint64_t)v10 >> 62)
      {
        if (v10 >= 0)
          v10 &= 0xFFFFFFFFFFFFFF8uLL;
        v44 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
        swift_bridgeObjectRetain(v17);
        _bridgeCocoaArray<A>(_:)(v10, v44);
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = swift_bridgeObjectRetain(v10);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
        sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      }
      swift_bridgeObjectRelease();
      v19 = objc_allocWithZone((Class)UIStackView);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v21 = objc_msgSend(v19, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v21, "setAxis:", 1);
      if (qword_1013DC8A8 != -1)
        swift_once(&qword_1013DC8A8, sub_1004C5434);
      objc_msgSend(v21, "setSpacing:", *(double *)&qword_10147E6C8);
      return v21;
    }
  }
  else
  {
    swift_unknownObjectRelease(v5);
  }
  if (!sub_1008B6D2C())
    return 0;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EEF400;
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;
  v31 = v30;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v32 = swift_allocObject(&unk_1012A10D0, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100D233DC, v32);
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v35 = sub_1004C85B0(v29, v31, 0, (uint64_t)v34, 0, 1, v33, 0, 6.0);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v23 + 32) = v35;
  specialized Array._endMutation()(v36);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v37 = *(double *)&qword_10147E6C0;
  v38 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v23);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v38, "initWithArrangedSubviews:", v39, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v21, "setAxis:", 0);
  objc_msgSend(v21, "setAlignment:", 0);
  objc_msgSend(v21, "setDistribution:", 0);
  objc_msgSend(v21, "setSpacing:", v37);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v40 = *(double *)&qword_10147E6D0;
  v41 = objc_msgSend(v21, "heightAnchor");
  v42 = objc_msgSend(v41, "constraintGreaterThanOrEqualToConstant:", v40);

  objc_msgSend(v42, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v21;
}

uint64_t sub_100D232F0()
{
  _BOOL4 v0;
  _BOOL4 v1;
  __int16 v2;

  v0 = sub_1008B66D4();
  v1 = sub_1008B6584();
  v2 = sub_1008B6824();
  if ((v2 & 0x100) != 0)
    return 0;
  else
    return ((v2 & 1) == 0) & ~(v0 | v1);
}

void sub_100D23348()
{
  uint64_t v0;

}

id sub_100D23358()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterArrangeBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterArrangeBuilder()
{
  return objc_opt_self(_TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder);
}

uint64_t sub_100D233B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100D233DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100D2214C(a1, v1, &qword_1013F6DB0, off_1012298A0, (SEL *)&selRef_mergeDrawings_);
}

id sub_100D2340C(int a1)
{
  NSString v1;
  id v2;
  NSString v3;
  NSString v4;
  NSString v5;
  NSString v6;
  NSString v7;
  id result;

  switch(a1)
  {
    case 0:
      v1 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

      if (!v2)
      {
        __break(1u);
        goto LABEL_4;
      }
      break;
    case 1:
LABEL_4:
      v3 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

      if (!v2)
      {
        __break(1u);
        goto LABEL_6;
      }
      break;
    case 2:
LABEL_6:
      v4 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v4);

      if (!v2)
      {
        __break(1u);
        goto LABEL_8;
      }
      break;
    case 3:
LABEL_8:
      v5 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (!v2)
      {
        __break(1u);
        goto LABEL_10;
      }
      break;
    case 4:
LABEL_10:
      v6 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v6);

      if (!v2)
      {
        __break(1u);
        goto LABEL_12;
      }
      break;
    case 5:
      v7 = String._bridgeToObjectiveC()();
      v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (!v2)
      {
        __break(1u);
        JUMPOUT(0x100D23658);
      }
      return result;
    default:
LABEL_12:
      v2 = 0;
      break;
  }
  return v2;
}

uint64_t sub_100D23670(int a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = String._bridgeToObjectiveC()();
      v4 = String._bridgeToObjectiveC()();
      v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

      v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      break;
    default:
      v1 = 0;
      break;
  }
  return v1;
}

void sub_100D238B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  double *v15;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v15 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v7 = (int *)(a1 + 32);
    while (1)
    {
      v8 = *v7++;
      v13 = v8;
      sub_100D21398(&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      v10 = v14;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = *((_QWORD *)v15 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (!--v5)
        return;
    }
    swift_release(v15);
  }
}

id sub_100D23998(uint64_t a1)
{
  id v1;
  NSString v2;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      v2 = String._bridgeToObjectiveC()();
      v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v2);

      break;
    default:
      v1 = 0;
      break;
  }
  return v1;
}

uint64_t sub_100D23A88()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void sub_100D23CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v15 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v7 = (uint64_t *)(a1 + 32);
    while (1)
    {
      v8 = *v7++;
      v13 = v8;
      sub_100D22990(&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      v10 = v14;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = *((_QWORD *)v15 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (!--v5)
        return;
    }
    swift_release(v15);
  }
}

uint64_t sub_100D23DD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100D23DF8(uint64_t a1)
{
  uint64_t v1;

  sub_100D22B44(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_100D23E00(uint64_t a1)
{
  uint64_t v1;

  return sub_100D22248(a1, v1, (SEL *)&selRef_group_);
}

double sub_100D23E20(uint64_t a1)
{
  uint64_t v1;

  return sub_100D22248(a1, v1, (SEL *)&selRef_ungroup_);
}

double sub_100D23E40(uint64_t a1)
{
  uint64_t v1;

  return sub_100D2214C(a1, v1, &qword_1013F8248, off_1012297F8, (SEL *)&selRef_distributeDrawablesHorizontally_);
}

double sub_100D23E70(uint64_t a1)
{
  uint64_t v1;

  return sub_100D2214C(a1, v1, &qword_1013F8248, off_1012297F8, (SEL *)&selRef_distributeDrawablesVertically_);
}

uint64_t sub_100D23EA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 28, 7);
}

void sub_100D23EC4(uint64_t a1)
{
  uint64_t v1;

  sub_100D21550(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24));
}

uint64_t sub_100D23ED0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  __int128 v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v81;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v11);
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = a2[4];
    v8 = (_OWORD *)(a1 + 40);
    v9 = a2 + 5;
    switch(*((_BYTE *)a2 + 296))
    {
      case 0:
        v10 = a2[8];
        if (v10)
        {
          *(_QWORD *)(v4 + 64) = v10;
          (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
        }
        else
        {
          v39 = *(_OWORD *)(a2 + 7);
          *v8 = *v9;
          *(_OWORD *)(v4 + 56) = v39;
        }
        v40 = (_OWORD *)(v4 + 72);
        v41 = a2 + 9;
        v42 = a2[12];
        if (v42)
        {
          *(_QWORD *)(v4 + 96) = v42;
          (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
        }
        else
        {
          v50 = *(_OWORD *)(a2 + 11);
          *v40 = *v41;
          *(_OWORD *)(v4 + 88) = v50;
        }
        *(_BYTE *)(v4 + 296) = 0;
        break;
      case 1:
        v12 = a2[8];
        if (v12)
        {
          *(_QWORD *)(v4 + 64) = v12;
          (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v8, v9);
        }
        else
        {
          v43 = *(_OWORD *)(a2 + 7);
          *v8 = *v9;
          *(_OWORD *)(v4 + 56) = v43;
        }
        v44 = 1;
        goto LABEL_47;
      case 0x12:
        v13 = (void *)a2[5];
        v14 = (void *)a2[6];
        *(_QWORD *)(v4 + 40) = v13;
        *(_QWORD *)(v4 + 48) = v14;
        v15 = 18;
        goto LABEL_16;
      case 0x13:
        v16 = *(void **)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v17 = 19;
        goto LABEL_29;
      case 0x14:
        v13 = (void *)a2[5];
        v14 = (void *)a2[6];
        *(_QWORD *)(v4 + 40) = v13;
        *(_QWORD *)(v4 + 48) = v14;
        v15 = 20;
        goto LABEL_16;
      case 0x15:
        v16 = *(void **)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v17 = 21;
        goto LABEL_29;
      case 0x1C:
        v13 = (void *)a2[5];
        v14 = (void *)a2[6];
        *(_QWORD *)(v4 + 40) = v13;
        *(_QWORD *)(v4 + 48) = v14;
        v15 = 28;
        goto LABEL_16;
      case 0x1D:
        v16 = *(void **)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v17 = 29;
        goto LABEL_29;
      case 0x1E:
        v13 = (void *)a2[5];
        v14 = (void *)a2[6];
        *(_QWORD *)(v4 + 40) = v13;
        *(_QWORD *)(v4 + 48) = v14;
        v15 = 30;
LABEL_16:
        *(_BYTE *)(v4 + 296) = v15;
        v18 = v13;
        v19 = v14;
        break;
      case 0x1F:
        v16 = *(void **)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v17 = 31;
        goto LABEL_29;
      case 0x20:
        v20 = a2[5];
        v21 = a2[6];
        *(_QWORD *)(v4 + 40) = v20;
        *(_QWORD *)(v4 + 48) = v21;
        v22 = 32;
        goto LABEL_25;
      case 0x21:
        v23 = *(_QWORD *)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v24 = 33;
        goto LABEL_27;
      case 0x22:
        v25 = a2[8];
        if (v25)
        {
          *(_QWORD *)(v4 + 64) = v25;
          (**(void (***)(_OWORD *, _OWORD *))(v25 - 8))(v8, v9);
        }
        else
        {
          v45 = *(_OWORD *)(a2 + 7);
          *v8 = *v9;
          *(_OWORD *)(v4 + 56) = v45;
        }
        v46 = (_OWORD *)(v4 + 72);
        v47 = a2 + 9;
        v48 = a2[12];
        if (v48)
        {
          *(_QWORD *)(v4 + 96) = v48;
          (**(void (***)(_OWORD *, _OWORD *))(v48 - 8))(v46, v47);
        }
        else
        {
          v51 = *(_OWORD *)(a2 + 11);
          *v46 = *v47;
          *(_OWORD *)(v4 + 88) = v51;
        }
        v44 = 34;
        goto LABEL_47;
      case 0x23:
        v26 = a2[8];
        if (v26)
        {
          *(_QWORD *)(v4 + 64) = v26;
          (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v8, v9);
        }
        else
        {
          v49 = *(_OWORD *)(a2 + 7);
          *v8 = *v9;
          *(_OWORD *)(v4 + 56) = v49;
        }
        v44 = 35;
LABEL_47:
        *(_BYTE *)(v4 + 296) = v44;
        break;
      case 0x24:
        v20 = a2[5];
        v21 = a2[6];
        *(_QWORD *)(v4 + 40) = v20;
        *(_QWORD *)(v4 + 48) = v21;
        v22 = 36;
LABEL_25:
        *(_BYTE *)(v4 + 296) = v22;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        break;
      case 0x25:
        v23 = *(_QWORD *)v9;
        *(_QWORD *)(v4 + 40) = *(_QWORD *)v9;
        v24 = 37;
LABEL_27:
        *(_BYTE *)(v4 + 296) = v24;
        swift_bridgeObjectRetain(v23);
        break;
      case 0x3A:
        *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
        *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
        *(_BYTE *)(v4 + 72) = *((_BYTE *)a2 + 72);
        v16 = (void *)a2[10];
        *(_QWORD *)(v4 + 80) = v16;
        *(_BYTE *)(v4 + 88) = *((_BYTE *)a2 + 88);
        v17 = 58;
LABEL_29:
        *(_BYTE *)(v4 + 296) = v17;
        v27 = v16;
        break;
      case 0x3F:
        v28 = *(_OWORD *)(a2 + 7);
        *v8 = *v9;
        *(_OWORD *)(v4 + 56) = v28;
        *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 11);
        v29 = (void *)a2[13];
        v30 = (void *)a2[14];
        *(_QWORD *)(v4 + 104) = v29;
        *(_QWORD *)(v4 + 112) = v30;
        v31 = (void *)a2[15];
        v32 = (void *)a2[16];
        *(_QWORD *)(v4 + 120) = v31;
        *(_QWORD *)(v4 + 128) = v32;
        v33 = 63;
        goto LABEL_32;
      case 0x40:
        v34 = *(_OWORD *)(a2 + 7);
        *v8 = *v9;
        *(_OWORD *)(v4 + 56) = v34;
        v29 = (void *)a2[9];
        v30 = (void *)a2[10];
        *(_QWORD *)(v4 + 72) = v29;
        *(_QWORD *)(v4 + 80) = v30;
        v31 = (void *)a2[11];
        v32 = (void *)a2[12];
        *(_QWORD *)(v4 + 88) = v31;
        *(_QWORD *)(v4 + 96) = v32;
        v33 = 64;
LABEL_32:
        *(_BYTE *)(v4 + 296) = v33;
        v35 = v29;
        v36 = v30;
        v37 = v31;
        v38 = v32;
        break;
      default:
        memcpy(v8, v9, 0x101uLL);
        break;
    }
    v52 = (void *)a2[38];
    *(_QWORD *)(v4 + 304) = v52;
    *(_DWORD *)(v4 + 312) = *((_DWORD *)a2 + 78);
    v53 = a3[5];
    v54 = v4 + v53;
    v55 = (uint64_t)a2 + v53;
    v56 = type metadata accessor for UUID(0);
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
    v58 = v52;
    v57(v54, v55, v56);
    swift_unknownObjectWeakCopyInit(v4 + a3[6], (char *)a2 + a3[6]);
    v59 = a3[7];
    v60 = (char *)(v4 + v59);
    v61 = (char *)a2 + v59;
    v62 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v63 = *(_QWORD *)(v62 - 8);
    v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    if (v64(v61, 1, v62))
    {
      v65 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      v57((uint64_t)v60, (uint64_t)v61, v56);
      v66 = *(int *)(v62 + 20);
      v67 = &v60[v66];
      v68 = &v61[v66];
      v69 = *((_QWORD *)v68 + 1);
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = v69;
      v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v63 + 56);
      v71 = swift_retain(v69);
      v70(v60, 0, 1, v62, v71);
    }
    v72 = a3[8];
    v73 = (char *)(v4 + v72);
    v74 = (char *)a2 + v72;
    if (v64(v74, 1, v62))
    {
      v75 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v57((uint64_t)v73, (uint64_t)v74, v56);
      v76 = *(int *)(v62 + 20);
      v77 = &v73[v76];
      v78 = &v74[v76];
      v79 = *((_QWORD *)v78 + 1);
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v79;
      v80 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v63 + 56);
      v81 = swift_retain(v79);
      v80(v73, 0, 1, v62, v81);
    }
  }
  return v4;
}

double sub_100D24388(uint64_t a1, int *a2)
{
  int v4;
  void **v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  __n128 v13;
  uint64_t v14;
  double result;

  v4 = *(unsigned __int8 *)(a1 + 296);
  v5 = (void **)(a1 + 40);
  switch(v4)
  {
    case 0:
    case 34:
      if (*(_QWORD *)(a1 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
      if (*(_QWORD *)(a1 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 72));
      break;
    case 1:
    case 35:
      if (*(_QWORD *)(a1 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
      break;
    case 18:
    case 20:
    case 28:
    case 30:

      v6 = *(void **)(a1 + 48);
      goto LABEL_4;
    case 19:
    case 21:
    case 29:
    case 31:
      v6 = *v5;
      goto LABEL_4;
    case 32:
    case 36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 33:
    case 37:
      swift_bridgeObjectRelease();
      break;
    case 58:
      v6 = *(void **)(a1 + 80);
      goto LABEL_4;
    case 63:

      v6 = *(void **)(a1 + 128);
      goto LABEL_4;
    case 64:

      v6 = *(void **)(a1 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  v7 = a1 + a2[5];
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_unknownObjectWeakDestroy(a1 + a2[6]);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (!v12(v10, 1, v11))
  {
    v9(v10, v8);
    v13 = swift_release(*(_QWORD *)(v10 + *(int *)(v11 + 20) + 8));
  }
  v14 = a1 + a2[8];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v12)(v14, 1, v11, v13))
  {
    v9(v14, v8);
    *(_QWORD *)&result = swift_release(*(_QWORD *)(v14 + *(int *)(v11 + 20) + 8)).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D2456C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  __int128 v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  __int128 v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v78;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  switch(*(_BYTE *)(a2 + 296))
  {
    case 0:
      v9 = *(_QWORD *)(a2 + 64);
      if (v9)
      {
        *(_QWORD *)(a1 + 64) = v9;
        (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
      }
      else
      {
        v44 = v8[1];
        *v7 = *v8;
        v7[1] = v44;
      }
      v45 = (_OWORD *)(a1 + 72);
      v46 = (_OWORD *)(a2 + 72);
      v47 = *(_QWORD *)(a2 + 96);
      if (v47)
      {
        *(_QWORD *)(a1 + 96) = v47;
        (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
      }
      else
      {
        v48 = *(_OWORD *)(a2 + 88);
        *v45 = *v46;
        *(_OWORD *)(a1 + 88) = v48;
      }
      *(_BYTE *)(a1 + 296) = 0;
      break;
    case 1:
      v10 = *(_QWORD *)(a2 + 64);
      if (v10)
      {
        *(_QWORD *)(a1 + 64) = v10;
        (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v7, v8);
      }
      else
      {
        v37 = v8[1];
        *v7 = *v8;
        v7[1] = v37;
      }
      *(_BYTE *)(a1 + 296) = 1;
      break;
    case 0x12:
      v11 = *(void **)(a2 + 40);
      v12 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      v13 = 18;
      goto LABEL_14;
    case 0x13:
      v14 = *(void **)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v15 = 19;
      goto LABEL_27;
    case 0x14:
      v11 = *(void **)(a2 + 40);
      v12 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      v13 = 20;
      goto LABEL_14;
    case 0x15:
      v14 = *(void **)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v15 = 21;
      goto LABEL_27;
    case 0x1C:
      v11 = *(void **)(a2 + 40);
      v12 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      v13 = 28;
      goto LABEL_14;
    case 0x1D:
      v14 = *(void **)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v15 = 29;
      goto LABEL_27;
    case 0x1E:
      v11 = *(void **)(a2 + 40);
      v12 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      v13 = 30;
LABEL_14:
      *(_BYTE *)(a1 + 296) = v13;
      v16 = v11;
      v17 = v12;
      break;
    case 0x1F:
      v14 = *(void **)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v15 = 31;
      goto LABEL_27;
    case 0x20:
      v18 = *(_QWORD *)(a2 + 40);
      v19 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v19;
      v20 = 32;
      goto LABEL_23;
    case 0x21:
      v21 = *(_QWORD *)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v22 = 33;
      goto LABEL_25;
    case 0x22:
      v23 = *(_QWORD *)(a2 + 64);
      if (v23)
      {
        *(_QWORD *)(a1 + 64) = v23;
        (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v7, v8);
      }
      else
      {
        v38 = v8[1];
        *v7 = *v8;
        v7[1] = v38;
      }
      v39 = (_OWORD *)(a1 + 72);
      v40 = (_OWORD *)(a2 + 72);
      v41 = *(_QWORD *)(a2 + 96);
      if (v41)
      {
        *(_QWORD *)(a1 + 96) = v41;
        (**(void (***)(_OWORD *, _OWORD *))(v41 - 8))(v39, v40);
      }
      else
      {
        v43 = *(_OWORD *)(a2 + 88);
        *v39 = *v40;
        *(_OWORD *)(a1 + 88) = v43;
      }
      *(_BYTE *)(a1 + 296) = 34;
      break;
    case 0x23:
      v24 = *(_QWORD *)(a2 + 64);
      if (v24)
      {
        *(_QWORD *)(a1 + 64) = v24;
        (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v7, v8);
      }
      else
      {
        v42 = v8[1];
        *v7 = *v8;
        v7[1] = v42;
      }
      *(_BYTE *)(a1 + 296) = 35;
      break;
    case 0x24:
      v18 = *(_QWORD *)(a2 + 40);
      v19 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v19;
      v20 = 36;
LABEL_23:
      *(_BYTE *)(a1 + 296) = v20;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      break;
    case 0x25:
      v21 = *(_QWORD *)v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v8;
      v22 = 37;
LABEL_25:
      *(_BYTE *)(a1 + 296) = v22;
      swift_bridgeObjectRetain(v21);
      break;
    case 0x3A:
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v14 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 80) = v14;
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      v15 = 58;
LABEL_27:
      *(_BYTE *)(a1 + 296) = v15;
      v25 = v14;
      break;
    case 0x3F:
      v26 = v8[1];
      *v7 = *v8;
      v7[1] = v26;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      v27 = *(void **)(a2 + 104);
      v28 = *(void **)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v28;
      v29 = *(void **)(a2 + 120);
      v30 = *(void **)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v29;
      *(_QWORD *)(a1 + 128) = v30;
      v31 = 63;
      goto LABEL_30;
    case 0x40:
      v32 = v8[1];
      *v7 = *v8;
      v7[1] = v32;
      v27 = *(void **)(a2 + 72);
      v28 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v27;
      *(_QWORD *)(a1 + 80) = v28;
      v29 = *(void **)(a2 + 88);
      v30 = *(void **)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v29;
      *(_QWORD *)(a1 + 96) = v30;
      v31 = 64;
LABEL_30:
      *(_BYTE *)(a1 + 296) = v31;
      v33 = v27;
      v34 = v28;
      v35 = v29;
      v36 = v30;
      break;
    default:
      memcpy(v7, v8, 0x101uLL);
      break;
  }
  v49 = *(void **)(a2 + 304);
  *(_QWORD *)(a1 + 304) = v49;
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  v50 = a3[5];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v53 = type metadata accessor for UUID(0);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  v55 = v49;
  v54(v51, v52, v53);
  swift_unknownObjectWeakCopyInit(a1 + a3[6], a2 + a3[6]);
  v56 = a3[7];
  v57 = (char *)(a1 + v56);
  v58 = (char *)(a2 + v56);
  v59 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  if (v61(v58, 1, v59))
  {
    v62 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    v54((uint64_t)v57, (uint64_t)v58, v53);
    v63 = *(int *)(v59 + 20);
    v64 = &v57[v63];
    v65 = &v58[v63];
    v66 = *((_QWORD *)v65 + 1);
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *((_QWORD *)v64 + 1) = v66;
    v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v60 + 56);
    v68 = swift_retain(v66);
    v67(v57, 0, 1, v59, v68);
  }
  v69 = a3[8];
  v70 = (char *)(a1 + v69);
  v71 = (char *)(a2 + v69);
  if (v61(v71, 1, v59))
  {
    v72 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    v54((uint64_t)v70, (uint64_t)v71, v53);
    v73 = *(int *)(v59 + 20);
    v74 = &v70[v73];
    v75 = &v71[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v60 + 56);
    v78 = swift_retain(v76);
    v77(v70, 0, 1, v59, v78);
  }
  return a1;
}

uint64_t sub_100D249FC(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  id v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  char v32;
  __int128 v33;
  id v34;
  id v35;
  id v36;
  id v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  int v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    v6 = (_OWORD *)(a1 + 40);
    v7 = (_OWORD *)(a2 + 40);
    sub_1004EA730((_QWORD *)(a1 + 40));
    switch(*(_BYTE *)(a2 + 296))
    {
      case 0:
        v8 = *(_QWORD *)(a2 + 64);
        if (v8)
        {
          *(_QWORD *)(a1 + 64) = v8;
          (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v38 = *(_OWORD *)(a2 + 56);
          *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v38;
        }
        v39 = (_OWORD *)(a1 + 72);
        v40 = (_OWORD *)(a2 + 72);
        v41 = *(_QWORD *)(a2 + 96);
        if (v41)
        {
          *(_QWORD *)(a1 + 96) = v41;
          (**(void (***)(_OWORD *, _OWORD *))(v41 - 8))(v39, v40);
        }
        else
        {
          v49 = *(_OWORD *)(a2 + 88);
          *v39 = *v40;
          *(_OWORD *)(a1 + 88) = v49;
        }
        *(_BYTE *)(a1 + 296) = 0;
        break;
      case 1:
        v9 = *(_QWORD *)(a2 + 64);
        if (v9)
        {
          *(_QWORD *)(a1 + 64) = v9;
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v42 = *(_OWORD *)(a2 + 56);
          *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v42;
        }
        v43 = 1;
        goto LABEL_46;
      case 0x12:
        v10 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v10;
        v11 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v11;
        v12 = 18;
        goto LABEL_15;
      case 0x13:
        v13 = *(void **)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v14 = 19;
        goto LABEL_28;
      case 0x14:
        v10 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v10;
        v11 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v11;
        v12 = 20;
        goto LABEL_15;
      case 0x15:
        v13 = *(void **)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v14 = 21;
        goto LABEL_28;
      case 0x1C:
        v10 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v10;
        v11 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v11;
        v12 = 28;
        goto LABEL_15;
      case 0x1D:
        v13 = *(void **)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v14 = 29;
        goto LABEL_28;
      case 0x1E:
        v10 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v10;
        v11 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v11;
        v12 = 30;
LABEL_15:
        *(_BYTE *)(a1 + 296) = v12;
        v15 = v10;
        v16 = v11;
        break;
      case 0x1F:
        v13 = *(void **)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v14 = 31;
        goto LABEL_28;
      case 0x20:
        v17 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v17;
        v18 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v18;
        v19 = 32;
        goto LABEL_24;
      case 0x21:
        v20 = *(_QWORD *)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v21 = 33;
        goto LABEL_26;
      case 0x22:
        v22 = *(_QWORD *)(a2 + 64);
        if (v22)
        {
          *(_QWORD *)(a1 + 64) = v22;
          (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v44 = *(_OWORD *)(a2 + 56);
          *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v44;
        }
        v45 = (_OWORD *)(a1 + 72);
        v46 = (_OWORD *)(a2 + 72);
        v47 = *(_QWORD *)(a2 + 96);
        if (v47)
        {
          *(_QWORD *)(a1 + 96) = v47;
          (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
        }
        else
        {
          v50 = *(_OWORD *)(a2 + 88);
          *v45 = *v46;
          *(_OWORD *)(a1 + 88) = v50;
        }
        v43 = 34;
        goto LABEL_46;
      case 0x23:
        v23 = *(_QWORD *)(a2 + 64);
        if (v23)
        {
          *(_QWORD *)(a1 + 64) = v23;
          (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v48 = *(_OWORD *)(a2 + 56);
          *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v48;
        }
        v43 = 35;
LABEL_46:
        *(_BYTE *)(a1 + 296) = v43;
        break;
      case 0x24:
        v17 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v17;
        v18 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v18;
        v19 = 36;
LABEL_24:
        *(_BYTE *)(a1 + 296) = v19;
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v18);
        break;
      case 0x25:
        v20 = *(_QWORD *)v7;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
        v21 = 37;
LABEL_26:
        *(_BYTE *)(a1 + 296) = v21;
        swift_bridgeObjectRetain(v20);
        break;
      case 0x3A:
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v24 = *(_OWORD *)(a2 + 56);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v24;
        v13 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v13;
        *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
        v14 = 58;
LABEL_28:
        *(_BYTE *)(a1 + 296) = v14;
        v25 = v13;
        break;
      case 0x3F:
        v26 = *(_OWORD *)(a2 + 56);
        *v6 = *v7;
        *(_OWORD *)(a1 + 56) = v26;
        v27 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v27;
        v28 = *(void **)(a2 + 104);
        *(_QWORD *)(a1 + 104) = v28;
        v29 = *(void **)(a2 + 112);
        *(_QWORD *)(a1 + 112) = v29;
        v30 = *(void **)(a2 + 120);
        *(_QWORD *)(a1 + 120) = v30;
        v31 = *(void **)(a2 + 128);
        *(_QWORD *)(a1 + 128) = v31;
        v32 = 63;
        goto LABEL_31;
      case 0x40:
        v33 = *(_OWORD *)(a2 + 56);
        *v6 = *v7;
        *(_OWORD *)(a1 + 56) = v33;
        v28 = *(void **)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v28;
        v29 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v29;
        v30 = *(void **)(a2 + 88);
        *(_QWORD *)(a1 + 88) = v30;
        v31 = *(void **)(a2 + 96);
        *(_QWORD *)(a1 + 96) = v31;
        v32 = 64;
LABEL_31:
        *(_BYTE *)(a1 + 296) = v32;
        v34 = v28;
        v35 = v29;
        v36 = v30;
        v37 = v31;
        break;
      default:
        memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
        break;
    }
  }
  v51 = *(void **)(a1 + 304);
  v52 = *(void **)(a2 + 304);
  *(_QWORD *)(a1 + 304) = v52;
  v53 = v52;

  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_BYTE *)(a1 + 313) = *(_BYTE *)(a2 + 313);
  *(_BYTE *)(a1 + 314) = *(_BYTE *)(a2 + 314);
  *(_BYTE *)(a1 + 315) = *(_BYTE *)(a2 + 315);
  v54 = a3[5];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = type metadata accessor for UUID(0);
  v97 = *(_QWORD *)(v57 - 8);
  v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 24);
  v96(v55, v56, v57);
  swift_unknownObjectWeakCopyAssign(a1 + a3[6], a2 + a3[6]);
  v58 = a3[7];
  v59 = (char *)(a1 + v58);
  v60 = (char *)(a2 + v58);
  v61 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 1, v61);
  v65 = v63(v60, 1, v61);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v59, v60, v57);
      v66 = *(int *)(v61 + 20);
      v67 = &v59[v66];
      v68 = &v60[v66];
      v69 = *((_QWORD *)v68 + 1);
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = v69;
      v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v62 + 56);
      v71 = swift_retain(v69);
      v70(v59, 0, 1, v61, v71);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v65)
  {
    sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_52:
    v72 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_53;
  }
  v96((uint64_t)v59, (uint64_t)v60, v57);
  v86 = *(int *)(v61 + 20);
  v87 = &v59[v86];
  v88 = &v60[v86];
  v89 = *((_QWORD *)v88 + 1);
  v90 = *((_QWORD *)v87 + 1);
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *((_QWORD *)v87 + 1) = v89;
  swift_retain(v89);
  swift_release(v90);
LABEL_53:
  v73 = a3[8];
  v74 = (char *)(a1 + v73);
  v75 = (char *)(a2 + v73);
  v76 = v63((char *)(a1 + v73), 1, v61);
  v77 = v63(v75, 1, v61);
  if (!v76)
  {
    if (!v77)
    {
      v96((uint64_t)v74, (uint64_t)v75, v57);
      v91 = *(int *)(v61 + 20);
      v92 = &v74[v91];
      v93 = &v75[v91];
      v94 = *((_QWORD *)v93 + 1);
      v95 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v94;
      swift_retain(v94);
      swift_release(v95);
      return a1;
    }
    sub_1004B84A4((uint64_t)v74, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_58;
  }
  if (v77)
  {
LABEL_58:
    v84 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v74, v75, v57);
  v78 = *(int *)(v61 + 20);
  v79 = &v74[v78];
  v80 = &v75[v78];
  v81 = *((_QWORD *)v80 + 1);
  *(_QWORD *)v79 = *(_QWORD *)v80;
  *((_QWORD *)v79 + 1) = v81;
  v82 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v62 + 56);
  v83 = swift_retain(v81);
  v82(v74, 0, 1, v61, v83);
  return a1;
}

char *sub_100D25040(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  memcpy(a1, a2, 0x13CuLL);
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  swift_unknownObjectWeakTakeInit(&a1[a3[6]], &a2[a3[6]]);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    *(_OWORD *)&v12[*(int *)(v14 + 20)] = *(_OWORD *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v16(v20, 1, v14))
  {
    v21 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v10(v19, v20, v9);
    *(_OWORD *)&v19[*(int *)(v14 + 20)] = *(_OWORD *)&v20[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100D251D4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    sub_1004EA730((_QWORD *)(a1 + 40));
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
  }
  v7 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);

  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
  *(_BYTE *)(a1 + 315) = *(_BYTE *)(a2 + 315);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v11 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v9, v10, v11);
  swift_unknownObjectWeakTakeAssign(a1 + a3[6], a2 + a3[6]);
  v12 = a3[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v13, v14, v11);
      *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v19)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_8:
    v20 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_9;
  }
  v32((uint64_t)v13, (uint64_t)v14, v11);
  v28 = *(int *)(v15 + 20);
  v29 = *(_QWORD *)&v13[v28 + 8];
  *(_OWORD *)&v13[v28] = *(_OWORD *)&v14[v28];
  swift_release(v29);
LABEL_9:
  v21 = a3[8];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = v17((char *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      v32((uint64_t)v22, (uint64_t)v23, v11);
      v30 = *(int *)(v15 + 20);
      v31 = *(_QWORD *)&v22[v30 + 8];
      *(_OWORD *)&v22[v30] = *(_OWORD *)&v23[v30];
      swift_release(v31);
      return a1;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_14;
  }
  if (v25)
  {
LABEL_14:
    v26 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v22, v23, v11);
  *(_OWORD *)&v22[*(int *)(v15 + 20)] = *(_OWORD *)&v23[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  return a1;
}

uint64_t sub_100D254A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D254AC);
}

uint64_t sub_100D254AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 304);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for UUID(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_1004B804C(&qword_1013E06C0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_100D2555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D25568);
}

uint64_t sub_100D25568(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 304) = a2;
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLSpringLayerAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_10140EE10;
  if (!qword_10140EE10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSpringLayerAnimation);
  return result;
}

void sub_100D25644(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v6[0] = &unk_100F33058;
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100F33070;
    sub_1004EAE54(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_100D256DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  __chkstk_darwin(v4);
  v67 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v68 = (uint64_t)&v64 - v10;
  v72 = sub_1004B804C(&qword_10140EE70);
  __chkstk_darwin(v72);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v73 = (uint64_t)&v64 - v14;
  v15 = type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v64 - v19;
  __chkstk_darwin(v21);
  v74 = (uint64_t)&v64 - v22;
  __chkstk_darwin(v23);
  v75 = (uint64_t)&v64 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v64 - v29;
  v32 = a1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + *(int *)(v31 + 24));
  v71 = v15;
  v34 = swift_unknownObjectWeakLoadStrong(a2 + *(int *)(v15 + 24));
  v35 = (void *)v34;
  if (!Strong)
  {
    if (!v34)
    {
      v65 = v8;
      v66 = v12;
      v38 = v32;
      sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    v38 = v32;
    sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
LABEL_13:
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
    v40 = v75;
    sub_1004B8460(v38, v75, type metadata accessor for CRLSpringLayerAnimation);
    v41 = v74;
    sub_1004B8460(a2, v74, type metadata accessor for CRLSpringLayerAnimation);
    goto LABEL_14;
  }
  if (!v34)
  {
    v35 = Strong;
    goto LABEL_12;
  }
  v65 = v8;
  v66 = v12;
  sub_1004EB280();
  v36 = Strong;
  v37 = static NSObject.== infix(_:_:)(v36, v35);

  v38 = v32;
  sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  if ((v37 & 1) == 0)
    goto LABEL_13;
LABEL_7:
  v39 = sub_100D28188((uint64_t)v27, (uint64_t)v30);
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLSpringLayerAnimation);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLSpringLayerAnimation);
  v40 = v75;
  sub_1004B8460(v38, v75, type metadata accessor for CRLSpringLayerAnimation);
  v41 = v74;
  sub_1004B8460(a2, v74, type metadata accessor for CRLSpringLayerAnimation);
  if ((v39 & 1) == 0)
  {
LABEL_14:
    sub_1004B84A4(v41, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4(v40, type metadata accessor for CRLSpringLayerAnimation);
LABEL_15:
    sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
LABEL_16:
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
    goto LABEL_17;
  }
  v42 = *(int *)(v71 + 28);
  v43 = v41 + v42;
  v44 = v73;
  v45 = v73 + *(int *)(v72 + 48);
  sub_1004CB7BC(v40 + v42, v73, &qword_1013E06C0);
  v46 = v43;
  v47 = v44;
  sub_1004CB7BC(v46, v45, &qword_1013E06C0);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v49 = v41;
  v50 = v70;
  if (v48(v47, 1, v70) == 1)
  {
    sub_1004B84A4(v49, type metadata accessor for CRLSpringLayerAnimation);
    v47 = v73;
    sub_1004B84A4(v40, type metadata accessor for CRLSpringLayerAnimation);
    if (v48(v45, 1, v50) == 1)
    {
      sub_1004CB800(v47, &qword_1013E06C0);
      sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_1004CB800(v47, &qword_10140EE70);
    goto LABEL_15;
  }
  v53 = v68;
  sub_1004CB7BC(v47, v68, &qword_1013E06C0);
  if (v48(v45, 1, v50) == 1)
  {
    sub_1004B84A4(v74, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4(v75, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4(v53, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  v54 = v45;
  v55 = v53;
  v56 = v67;
  sub_1004B84E0(v54, v67, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  v57 = static UUID.== infix(_:_:)(v55);
  sub_1004B84A4(v56, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004B84A4(v74, type metadata accessor for CRLSpringLayerAnimation);
  sub_1004B84A4(v75, type metadata accessor for CRLSpringLayerAnimation);
  sub_1004B84A4(v55, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004CB800(v73, &qword_1013E06C0);
  sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
  if ((v57 & 1) == 0)
    goto LABEL_16;
LABEL_23:
  v58 = *(int *)(v71 + 32);
  v59 = (uint64_t)&v17[v58];
  v60 = (uint64_t)v66;
  v61 = (uint64_t)&v66[*(int *)(v72 + 48)];
  sub_1004CB7BC((uint64_t)&v20[v58], (uint64_t)v66, &qword_1013E06C0);
  sub_1004CB7BC(v59, v61, &qword_1013E06C0);
  if (v48(v60, 1, v50) == 1)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
    if (v48(v61, 1, v50) == 1)
    {
      sub_1004CB800(v60, &qword_1013E06C0);
      v51 = 1;
      return v51 & 1;
    }
  }
  else
  {
    v62 = (uint64_t)v65;
    sub_1004CB7BC(v60, (uint64_t)v65, &qword_1013E06C0);
    if (v48(v61, 1, v50) != 1)
    {
      v63 = v67;
      sub_1004B84E0(v61, v67, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      v51 = static UUID.== infix(_:_:)(v62);
      sub_1004B84A4(v63, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
      sub_1004B84A4(v62, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004CB800(v60, &qword_1013E06C0);
      return v51 & 1;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLSpringLayerAnimation);
    sub_1004B84A4(v62, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_1004CB800(v60, &qword_10140EE70);
LABEL_17:
  v51 = 0;
  return v51 & 1;
}

uint64_t sub_100D25E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v66 - v10;
  v73 = sub_1004B804C(&qword_10140EE70);
  __chkstk_darwin(v73);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v74 = (uint64_t)&v66 - v14;
  v15 = type metadata accessor for CRLCanvasLayerAnimation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - v19;
  __chkstk_darwin(v21);
  v76 = (uint64_t)&v66 - v22;
  __chkstk_darwin(v23);
  v77 = (uint64_t)&v66 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v66 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v66 - v29;
  v32 = a1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + *(int *)(v31 + 40));
  v75 = v15;
  v34 = swift_unknownObjectWeakLoadStrong(a2 + *(int *)(v15 + 40));
  v35 = (void *)v34;
  if (!Strong)
  {
    if (!v34)
    {
      v67 = v8;
      v68 = v12;
      v38 = v32;
      sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLCanvasLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLCanvasLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    v38 = v32;
    sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLCanvasLayerAnimation);
LABEL_13:
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLCanvasLayerAnimation);
    v42 = v77;
    sub_1004B8460(v38, v77, type metadata accessor for CRLCanvasLayerAnimation);
    v43 = v76;
    sub_1004B8460(a2, v76, type metadata accessor for CRLCanvasLayerAnimation);
    goto LABEL_14;
  }
  if (!v34)
  {
    v35 = Strong;
    goto LABEL_12;
  }
  v67 = v8;
  v68 = v12;
  sub_1004EB280();
  v36 = Strong;
  v37 = static NSObject.== infix(_:_:)(v36, v35);

  v38 = v32;
  sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLCanvasLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLCanvasLayerAnimation);
  if ((v37 & 1) == 0)
    goto LABEL_13;
LABEL_7:
  v39 = v75;
  v40 = &v30[*(int *)(v75 + 44)];
  v41 = *((_QWORD *)v40 + 3);
  sub_1004BB5A4(v40, v41);
  LOBYTE(v41) = sub_100635904((uint64_t)&v27[*(int *)(v39 + 44)], v41);
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLCanvasLayerAnimation);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLCanvasLayerAnimation);
  v42 = v77;
  sub_1004B8460(v38, v77, type metadata accessor for CRLCanvasLayerAnimation);
  v43 = v76;
  sub_1004B8460(a2, v76, type metadata accessor for CRLCanvasLayerAnimation);
  if ((v41 & 1) == 0)
  {
LABEL_14:
    sub_1004B84A4(v43, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v42, type metadata accessor for CRLCanvasLayerAnimation);
LABEL_15:
    sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
LABEL_16:
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
    goto LABEL_17;
  }
  v44 = *(int *)(v39 + 48);
  v45 = v43 + v44;
  v46 = v74;
  v47 = v74 + *(int *)(v73 + 48);
  sub_1004CB7BC(v42 + v44, v74, &qword_1013E06C0);
  v48 = v45;
  v49 = v46;
  sub_1004CB7BC(v48, v47, &qword_1013E06C0);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v51 = v43;
  v52 = v72;
  if (v50(v49, 1, v72) == 1)
  {
    sub_1004B84A4(v51, type metadata accessor for CRLCanvasLayerAnimation);
    v49 = v74;
    sub_1004B84A4(v42, type metadata accessor for CRLCanvasLayerAnimation);
    if (v50(v47, 1, v52) == 1)
    {
      sub_1004CB800(v49, &qword_1013E06C0);
      sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_1004CB800(v49, &qword_10140EE70);
    goto LABEL_15;
  }
  v55 = v70;
  sub_1004CB7BC(v49, v70, &qword_1013E06C0);
  if (v50(v47, 1, v52) == 1)
  {
    sub_1004B84A4(v76, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v77, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v55, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  v56 = v47;
  v57 = v55;
  v58 = v69;
  sub_1004B84E0(v56, v69, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  v59 = static UUID.== infix(_:_:)(v57);
  sub_1004B84A4(v58, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004B84A4(v76, type metadata accessor for CRLCanvasLayerAnimation);
  sub_1004B84A4(v77, type metadata accessor for CRLCanvasLayerAnimation);
  sub_1004B84A4(v57, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004CB800(v74, &qword_1013E06C0);
  sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
  if ((v59 & 1) == 0)
    goto LABEL_16;
LABEL_23:
  v60 = *(int *)(v75 + 52);
  v61 = (uint64_t)&v17[v60];
  v62 = (uint64_t)v68;
  v63 = (uint64_t)&v68[*(int *)(v73 + 48)];
  sub_1004CB7BC((uint64_t)&v20[v60], (uint64_t)v68, &qword_1013E06C0);
  sub_1004CB7BC(v61, v63, &qword_1013E06C0);
  if (v50(v62, 1, v52) == 1)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
    if (v50(v63, 1, v52) == 1)
    {
      sub_1004CB800(v62, &qword_1013E06C0);
      v53 = 1;
      return v53 & 1;
    }
  }
  else
  {
    v64 = (uint64_t)v67;
    sub_1004CB7BC(v62, (uint64_t)v67, &qword_1013E06C0);
    if (v50(v63, 1, v52) != 1)
    {
      v65 = v69;
      sub_1004B84E0(v63, v69, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      v53 = static UUID.== infix(_:_:)(v64);
      sub_1004B84A4(v65, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
      sub_1004B84A4(v64, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004CB800(v62, &qword_1013E06C0);
      return v53 & 1;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v64, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_1004CB800(v62, &qword_10140EE70);
LABEL_17:
  v53 = 0;
  return v53 & 1;
}

uint64_t sub_100D26678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  __chkstk_darwin(v4);
  v67 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v68 = (uint64_t)&v64 - v10;
  v72 = sub_1004B804C(&qword_10140EE70);
  __chkstk_darwin(v72);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v73 = (uint64_t)&v64 - v14;
  v15 = type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v64 - v19;
  __chkstk_darwin(v21);
  v74 = (uint64_t)&v64 - v22;
  __chkstk_darwin(v23);
  v75 = (uint64_t)&v64 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v64 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v64 - v29;
  v32 = a1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + *(int *)(v31 + 24));
  v71 = v15;
  v34 = swift_unknownObjectWeakLoadStrong(a2 + *(int *)(v15 + 24));
  v35 = (void *)v34;
  if (!Strong)
  {
    if (!v34)
    {
      v65 = v8;
      v66 = v12;
      v38 = v32;
      sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLBasicLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    v38 = v32;
    sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLBasicLayerAnimation);
LABEL_13:
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
    v40 = v75;
    sub_1004B8460(v38, v75, type metadata accessor for CRLBasicLayerAnimation);
    v41 = v74;
    sub_1004B8460(a2, v74, type metadata accessor for CRLBasicLayerAnimation);
    goto LABEL_14;
  }
  if (!v34)
  {
    v35 = Strong;
    goto LABEL_12;
  }
  v65 = v8;
  v66 = v12;
  sub_1004EB280();
  v36 = Strong;
  v37 = static NSObject.== infix(_:_:)(v36, v35);

  v38 = v32;
  sub_1004B8460(v32, (uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v27, type metadata accessor for CRLBasicLayerAnimation);
  if ((v37 & 1) == 0)
    goto LABEL_13;
LABEL_7:
  v39 = sub_100D28048((uint64_t)v27, (uint64_t)v30);
  sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBasicLayerAnimation);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLBasicLayerAnimation);
  v40 = v75;
  sub_1004B8460(v38, v75, type metadata accessor for CRLBasicLayerAnimation);
  v41 = v74;
  sub_1004B8460(a2, v74, type metadata accessor for CRLBasicLayerAnimation);
  if ((v39 & 1) == 0)
  {
LABEL_14:
    sub_1004B84A4(v41, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4(v40, type metadata accessor for CRLBasicLayerAnimation);
LABEL_15:
    sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
LABEL_16:
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
    goto LABEL_17;
  }
  v42 = *(int *)(v71 + 28);
  v43 = v41 + v42;
  v44 = v73;
  v45 = v73 + *(int *)(v72 + 48);
  sub_1004CB7BC(v40 + v42, v73, &qword_1013E06C0);
  v46 = v43;
  v47 = v44;
  sub_1004CB7BC(v46, v45, &qword_1013E06C0);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v49 = v41;
  v50 = v70;
  if (v48(v47, 1, v70) == 1)
  {
    sub_1004B84A4(v49, type metadata accessor for CRLBasicLayerAnimation);
    v47 = v73;
    sub_1004B84A4(v40, type metadata accessor for CRLBasicLayerAnimation);
    if (v48(v45, 1, v50) == 1)
    {
      sub_1004CB800(v47, &qword_1013E06C0);
      sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
      sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_1004CB800(v47, &qword_10140EE70);
    goto LABEL_15;
  }
  v53 = v68;
  sub_1004CB7BC(v47, v68, &qword_1013E06C0);
  if (v48(v45, 1, v50) == 1)
  {
    sub_1004B84A4(v74, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4(v75, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4(v53, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  v54 = v45;
  v55 = v53;
  v56 = v67;
  sub_1004B84E0(v54, v67, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  v57 = static UUID.== infix(_:_:)(v55);
  sub_1004B84A4(v56, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004B84A4(v74, type metadata accessor for CRLBasicLayerAnimation);
  sub_1004B84A4(v75, type metadata accessor for CRLBasicLayerAnimation);
  sub_1004B84A4(v55, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_1004CB800(v73, &qword_1013E06C0);
  sub_1004B8460(v38, (uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
  sub_1004B8460(a2, (uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
  if ((v57 & 1) == 0)
    goto LABEL_16;
LABEL_23:
  v58 = *(int *)(v71 + 32);
  v59 = (uint64_t)&v17[v58];
  v60 = (uint64_t)v66;
  v61 = (uint64_t)&v66[*(int *)(v72 + 48)];
  sub_1004CB7BC((uint64_t)&v20[v58], (uint64_t)v66, &qword_1013E06C0);
  sub_1004CB7BC(v59, v61, &qword_1013E06C0);
  if (v48(v60, 1, v50) == 1)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
    if (v48(v61, 1, v50) == 1)
    {
      sub_1004CB800(v60, &qword_1013E06C0);
      v51 = 1;
      return v51 & 1;
    }
  }
  else
  {
    v62 = (uint64_t)v65;
    sub_1004CB7BC(v60, (uint64_t)v65, &qword_1013E06C0);
    if (v48(v61, 1, v50) != 1)
    {
      v63 = v67;
      sub_1004B84E0(v61, v67, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      v51 = static UUID.== infix(_:_:)(v62);
      sub_1004B84A4(v63, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
      sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
      sub_1004B84A4(v62, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_1004CB800(v60, &qword_1013E06C0);
      return v51 & 1;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
    sub_1004B84A4(v62, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_1004CB800(v60, &qword_10140EE70);
LABEL_17:
  v51 = 0;
  return v51 & 1;
}

uint64_t sub_100D26E34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  Swift::String v6;
  uint64_t v7;
  _OWORD __src[20];
  _BYTE v9[40];
  _QWORD __dst[40];

  v2 = v1;
  sub_1004E90B0((uint64_t)a1, (uint64_t)v9);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(__src, v9, v4, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(__dst, __src, 0x13CuLL);
    return sub_100D27B7C((uint64_t)__dst, v2);
  }
  else
  {
    memset(__src, 0, 304);
    *(_QWORD *)&__src[19] = 1;
    DWORD2(__src[19]) = 0;
    sub_1004CB800((uint64_t)__src, &qword_1013E1FD0);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(70);
    v6._object = (void *)0x800000010100CD50;
    v6._countAndFlagsBits = 0xD000000000000044;
    String.append(_:)(v6);
    v7 = type metadata accessor for CRLSpringLayerAnimation(0);
    _print_unlocked<A, B>(_:_:)(v2, __dst, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, __dst[0], __dst[1], "Freeform/CRLSpringLayerAnimation.swift", 38, 2, 53, 0);
    __break(1u);
  }
  return result;
}

double sub_100D26FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id v7;
  double v8;
  double v9;
  _OWORD v11[5];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for CRLSpringLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + *(int *)(v1 + 24));
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100720EB4(v0, (uint64_t)v11);
    sub_1008A5E84();

    sub_100635C68((uint64_t)v11);
    v4 = v14;
    v5 = v15;
    sub_1004BB5A4(v13, v14);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v5 + 48))(v11, v4, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v12 = 0;
  }
  v6 = CACurrentMediaTime();
  v7 = sub_100D27314((uint64_t)v11, v6);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F04B0);
  objc_msgSend(v7, "duration");
  v9 = v8;

  return v9;
}

uint64_t sub_100D270AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v13;
  _BYTE v16[40];

  v3 = sub_1004B804C(&qword_10140EE68);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLSpringLayerAnimation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004E90B0(a1, (uint64_t)v16);
  v10 = sub_1004B804C(&qword_1013E8700);
  v11 = swift_dynamicCast(v5, v16, v10, v6, 6);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v11)
  {
    v12(v5, 0, 1, v6);
    sub_1004B84E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for CRLSpringLayerAnimation);
    v13 = sub_100D256DC((uint64_t)v9, v1);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLSpringLayerAnimation);
  }
  else
  {
    v12(v5, 1, 1, v6);
    sub_1004CB800((uint64_t)v5, &qword_10140EE68);
    v13 = 0;
  }
  return v13 & 1;
}

float sub_100D27200(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  double v10;
  float v11;
  float v12;
  _OWORD v14[5];
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for CRLSpringLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100720EB4(v1, (uint64_t)v14);
    sub_1008A5E84();

    sub_100635C68((uint64_t)v14);
    v6 = v17;
    v7 = v18;
    sub_1004BB5A4(v16, v17);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v14, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v15 = 0;
  }
  v8 = CACurrentMediaTime();
  v9 = sub_100D27314((uint64_t)v14, v8);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F04B0);
  *(float *)&v10 = a1;
  objc_msgSend(v9, "solveForInput:", v10);
  v12 = v11;

  return v12;
}

id sub_100D27314(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _OWORD v12[5];
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[88];

  sub_1004CB7BC(a1, (uint64_t)v17, (uint64_t *)&unk_1013F04B0);
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v12, (uint64_t *)&unk_1013F04B0);
  v4 = v13;
  sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013F04B0);
  if (!v4)
  {
    v5 = type metadata accessor for CRLSpringLayerAnimation(0);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(v5 + 24));
    if (Strong)
    {
      v7 = (void *)Strong;
      sub_100720EB4(v2, (uint64_t)v12);
      sub_1008A5E84();

      sub_100635C68((uint64_t)v12);
      v8 = v15;
      v9 = v16;
      sub_1004BB5A4(v14, v15);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 48))(v12, v8, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
    }
    else
    {
      memset(v12, 0, sizeof(v12));
      v13 = 0;
    }
    sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013F04B0);
    sub_1004EB2BC((uint64_t)v12, (uint64_t)v17);
  }
  v10 = sub_100D27460((uint64_t)v17, a2);
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013F04B0);
  return v10;
}

id sub_100D27460(uint64_t a1, double a2)
{
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  void *v51;
  _BYTE v52[80];
  uint64_t v53;

  v3 = (double *)v2;
  sub_1004CB7BC(a1, (uint64_t)v52, (uint64_t *)&unk_1013F04B0);
  sub_1004CB7BC((uint64_t)v52, (uint64_t)&v45, (uint64_t *)&unk_1013F04B0);
  v5 = v50;
  sub_1004CB800((uint64_t)&v45, (uint64_t *)&unk_1013F04B0);
  if (!v5)
  {
    v6 = type metadata accessor for CRLSpringLayerAnimation(0);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(v6 + 24));
    if (Strong)
    {
      v8 = (void *)Strong;
      sub_100720EB4(v2, (uint64_t)&v45);
      sub_1008A5E84();

      sub_100635C68((uint64_t)&v45);
      v9 = *((_QWORD *)&v40 + 1);
      v10 = v41;
      sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v10 + 48))(&v45, v9, v10);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
    }
    else
    {
      v45 = 0u;
      v46 = 0u;
      v47 = 0u;
      v48 = 0u;
      v49 = 0u;
      v50 = 0;
    }
    sub_1004CB800((uint64_t)v52, (uint64_t *)&unk_1013F04B0);
    sub_1004EB2BC((uint64_t)&v45, (uint64_t)v52);
  }
  sub_100720EB4(v2, (uint64_t)&v45);
  sub_1008A51D4();
  sub_1008A4EC8(v11);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v14);

  sub_100635C68((uint64_t)&v45);
  if (!v53)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"newCASpringAnimation(toRunAt:concretePropertyTransition:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLSpringLayerAnimation.swift", 120, 2, 115, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newCASpringAnimation(toRunAt:concretePropertyTransition:)", 57, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLSpringLayerAnimation.swift", 120, 2u, 115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_1004CB7BC((uint64_t)v52, (uint64_t)&v39, (uint64_t *)&unk_1013F04B0);
  if (v44)
  {
    v48 = v42;
    v49 = v43;
    v50 = v44;
    v45 = v39;
    v46 = v40;
    v47 = v41;
    sub_1004CB7BC((uint64_t)&v45, (uint64_t)&v39, &qword_1013E0230);
    v16 = *((_QWORD *)&v40 + 1);
    if (*((_QWORD *)&v40 + 1))
    {
      v17 = sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17);
      v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      v21 = v15;
      v22 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v16);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
    }
    else
    {
      v23 = v15;
      v22 = 0;
    }
    objc_msgSend(v15, "setFromValue:", v22);

    swift_unknownObjectRelease(v22);
    sub_1004CB7BC((uint64_t)&v47, (uint64_t)&v39, &qword_1013E0230);
    v24 = *((_QWORD *)&v40 + 1);
    if (*((_QWORD *)&v40 + 1))
    {
      v25 = sub_1004BB5A4(&v39, *((uint64_t *)&v40 + 1));
      v26 = *(_QWORD *)(v24 - 8);
      __chkstk_darwin(v25);
      v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v28);
      v29 = v15;
      v30 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v24);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v24);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v39);
    }
    else
    {
      v31 = v15;
      v30 = 0;
    }
    objc_msgSend(v15, "setToValue:", v30);

    swift_unknownObjectRelease(v30);
    sub_1004E9164(&v45);
  }
  else
  {
    sub_1004CB800((uint64_t)&v39, (uint64_t *)&unk_1013F04B0);
  }
  objc_msgSend(v15, "setDamping:", *v3);
  objc_msgSend(v15, "setInitialVelocity:", v3[1]);
  objc_msgSend(v15, "setMass:", v3[2]);
  objc_msgSend(v15, "setStiffness:", v3[3]);
  sub_100720EB4((uint64_t)v3, (uint64_t)&v45);
  v32 = v51;
  if (v51)
  {
    v33 = v15;
    v34 = v32;
  }
  else
  {
    v34 = objc_msgSend(v15, "fillMode");
  }
  v35 = v32;
  sub_100635C68((uint64_t)&v45);
  objc_msgSend(v15, "setFillMode:", v34);

  v36 = v15;
  objc_msgSend(v36, "settlingDuration");
  objc_msgSend(v36, "setDuration:");

  objc_msgSend(v36, "setBeginTime:", v3[4] + a2);
  sub_1004CB800((uint64_t)v52, (uint64_t *)&unk_1013F04B0);
  return v36;
}

uint64_t sub_100D2799C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  a1[4] = sub_100553914();
  v3 = swift_allocObject(&unk_1012A1308, 332, 7);
  *a1 = v3;
  return sub_100720EB4(v1, v3 + 16);
}

void (*sub_100D279EC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v3[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v3[4] = sub_100553914();
  v4 = swift_allocObject(&unk_1012A1308, 332, 7);
  *v3 = v4;
  sub_100720EB4(v1, v4 + 16);
  return sub_100D27A68;
}

void sub_100D27A68(uint64_t *a1, char a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_1004E90B0(*a1, (uint64_t)(v2 + 5));
    sub_100D26E34(v2 + 5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2);
  }
  else
  {
    sub_100D26E34((_QWORD *)*a1);
  }
  free(v2);
}

double sub_100D27AD4()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void sub_100D27ADC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

double (*sub_100D27AE4(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 32);
  return sub_100D27B00;
}

double sub_100D27B00(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32) = *(_QWORD *)a1;
  return result;
}

uint64_t sub_100D27B14()
{
  return sub_1004B7878(&qword_10140EE58, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F330D8);
}

uint64_t sub_100D27B40(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_10140EE60, type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&unk_100F33098);
  *(_QWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100D27B7C(uint64_t a1, uint64_t a2)
{
  assignWithTake for CRLSpringLayerAnimation.Def(a2, a1);
  return a2;
}

id sub_100D27BB0(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[3];
  uint64_t v42;

  v3 = v2;
  sub_1008A51D4();
  sub_1008A4EC8(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v9);

  sub_1004CB7BC(a1, (uint64_t)&v34, (uint64_t *)&unk_1013F04B0);
  if (v39)
  {
    v41[1] = v37;
    v41[2] = v38;
    v42 = v39;
    v40[0] = v34;
    v40[1] = v35;
    v41[0] = v36;
    sub_1004CB7BC((uint64_t)v40, (uint64_t)&v34, &qword_1013E0230);
    v11 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v12 = sub_1004BB5A4(&v34, *((uint64_t *)&v35 + 1));
      v13 = *(_QWORD *)(v11 - 8);
      __chkstk_darwin(v12);
      v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      v16 = v10;
      v17 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v11);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v34);
    }
    else
    {
      v18 = v10;
      v17 = 0;
    }
    objc_msgSend(v10, "setFromValue:", v17);

    swift_unknownObjectRelease(v17);
    sub_1004CB7BC((uint64_t)v41, (uint64_t)&v34, &qword_1013E0230);
    v19 = *((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v20 = sub_1004BB5A4(&v34, *((uint64_t *)&v35 + 1));
      v21 = *(_QWORD *)(v19 - 8);
      __chkstk_darwin(v20);
      v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      v24 = v10;
      v25 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v34);
    }
    else
    {
      v26 = v10;
      v25 = 0;
    }
    objc_msgSend(v10, "setToValue:", v25);

    swift_unknownObjectRelease(v25);
    sub_1004E9164(v40);
  }
  else
  {
    sub_1004CB800((uint64_t)&v34, (uint64_t *)&unk_1013F04B0);
  }
  objc_msgSend(v10, "setDamping:", *(double *)v3);
  objc_msgSend(v10, "setInitialVelocity:", *(double *)(v3 + 8));
  objc_msgSend(v10, "setMass:", *(double *)(v3 + 16));
  objc_msgSend(v10, "setStiffness:", *(double *)(v3 + 24));
  v27 = *(void **)(v3 + 304);
  if (v27)
  {
    v28 = v10;
    v29 = v27;
  }
  else
  {
    v29 = objc_msgSend(v10, "fillMode");
  }
  v30 = v27;
  objc_msgSend(v10, "setFillMode:", v29);

  v31 = v10;
  objc_msgSend(v31, "settlingDuration");
  objc_msgSend(v31, "setDuration:");

  objc_msgSend(v31, "setBeginTime:", *(double *)(v3 + 32) + a2);
  return v31;
}

uint64_t sub_100D27F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10057E090((uint64_t *)(v1 + 40), a1);
}

__int128 *sub_100D27F34(__int128 *a1)
{
  uint64_t v1;

  return sub_10057EBF0(a1, (__int128 *)(v1 + 40));
}

void *sub_100D27F3C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 304);
  v2 = v1;
  return v1;
}

void sub_100D27F60(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = a1;
}

uint64_t sub_100D27F88()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t sub_100D27F90(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 312) = result;
  return result;
}

uint64_t sub_100D27F98()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 313);
}

uint64_t sub_100D27FA0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 313) = result;
  return result;
}

uint64_t sub_100D27FA8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 314);
}

uint64_t sub_100D27FB0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 314) = result;
  return result;
}

uint64_t sub_100D27FB8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 315);
}

uint64_t sub_100D27FC0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 315) = result;
  return result;
}

double sub_100D27FC8()
{
  double v0;
  id v1;
  double v2;
  double v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v10 = 0;
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v5 = 0u;
  v0 = CACurrentMediaTime();
  v1 = sub_100D27BB0((uint64_t)&v5, v0);
  sub_1004CB800((uint64_t)&v5, (uint64_t *)&unk_1013F04B0);
  objc_msgSend(v1, "duration", v5, v6, v7, v8, v9, v10);
  v3 = v2;

  return v3;
}

uint64_t sub_100D28048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  _OWORD v8[19];
  _BYTE v9[40];
  _BYTE __dst[304];
  _BYTE v11[304];
  _QWORD v12[5];

  v12[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v12[4] = sub_1004EB138();
  v12[0] = swift_allocObject(&unk_1012A1330, 316, 7);
  sub_1004E91D4(a1, v12[0] + 16);
  sub_1004E91D4(a2, (uint64_t)v11);
  sub_1004E90B0((uint64_t)v12, (uint64_t)v9);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (!swift_dynamicCast(v8, v9, v4, &type metadata for CRLBasicLayerAnimation.Def, 6))
  {
    memset(v8, 0, 300);
    sub_1004E9210((uint64_t)v11);
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_101406CB0);
    goto LABEL_5;
  }
  memcpy(__dst, v8, 0x12CuLL);
  v5 = sub_10057DED0((uint64_t)v11, (uint64_t)__dst);
  sub_1004E9210((uint64_t)__dst);
  sub_1004E9210((uint64_t)v11);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v6 = 1;
LABEL_6:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  return v6;
}

uint64_t sub_100D28188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  _OWORD v8[20];
  _BYTE v9[40];
  _BYTE __dst[320];
  _BYTE v11[320];
  _QWORD v12[5];

  v12[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v12[4] = sub_100553914();
  v12[0] = swift_allocObject(&unk_1012A1308, 332, 7);
  sub_100720EB4(a1, v12[0] + 16);
  sub_100720EB4(a2, (uint64_t)v11);
  sub_1004E90B0((uint64_t)v12, (uint64_t)v9);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (!swift_dynamicCast(v8, v9, v4, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    memset(v8, 0, 304);
    *(_QWORD *)&v8[19] = 1;
    DWORD2(v8[19]) = 0;
    sub_100635C68((uint64_t)v11);
    sub_1004CB800((uint64_t)v8, &qword_1013E1FD0);
    goto LABEL_5;
  }
  memcpy(__dst, v8, 0x13CuLL);
  v5 = sub_100D283C8((uint64_t)v11, (uint64_t)__dst);
  sub_100635C68((uint64_t)__dst);
  sub_100635C68((uint64_t)v11);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v6 = 1;
LABEL_6:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  return v6;
}

uint64_t sub_100D282CC()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100D283C8(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  int v15;
  int v16;
  _BOOL4 v17;
  int v18;
  int v19;
  _BOOL4 v20;
  int v21;
  int v22;
  _BOOL4 v24;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_27;
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
    goto LABEL_27;
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_27;
  if (*(double *)(a1 + 24) != *(double *)(a2 + 24))
    goto LABEL_27;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    goto LABEL_27;
  sub_1008A7624((uint64_t *)(a1 + 40));
  if ((v4 & 1) == 0)
    goto LABEL_27;
  v5 = *(_QWORD *)(a1 + 304);
  v6 = *(_QWORD *)(a2 + 304);
  if (!v5)
  {
    if (!v6)
      goto LABEL_15;
LABEL_27:
    v14 = 0;
    return v14 & 1;
  }
  if (!v6)
    goto LABEL_27;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = v8;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    v14 = 0;
    if ((v13 & 1) == 0)
      return v14 & 1;
  }
LABEL_15:
  v15 = *(unsigned __int8 *)(a1 + 312);
  v16 = *(unsigned __int8 *)(a2 + 312);
  if (v15 == 2)
  {
    if (v16 != 2)
      goto LABEL_27;
  }
  else
  {
    v14 = 0;
    v17 = (v15 & 1) == 0;
    if (v16 == 2 || ((v17 ^ v16) & 1) == 0)
      return v14 & 1;
  }
  v18 = *(unsigned __int8 *)(a1 + 313);
  v19 = *(unsigned __int8 *)(a2 + 313);
  if (v18 == 2)
  {
    if (v19 != 2)
      goto LABEL_27;
  }
  else
  {
    v14 = 0;
    v20 = (v18 & 1) == 0;
    if (v19 == 2 || ((v20 ^ v19) & 1) == 0)
      return v14 & 1;
  }
  v21 = *(unsigned __int8 *)(a1 + 314);
  v22 = *(unsigned __int8 *)(a2 + 314);
  if (v21 == 2)
  {
    if (v22 != 2)
      goto LABEL_27;
LABEL_31:
    v14 = *(_BYTE *)(a1 + 315) ^ *(_BYTE *)(a2 + 315) ^ 1;
    return v14 & 1;
  }
  v14 = 0;
  v24 = (v21 & 1) == 0;
  if (v22 != 2 && ((v24 ^ v22) & 1) != 0)
    goto LABEL_31;
  return v14 & 1;
}

uint64_t sub_100D2859C()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

void destroy for CRLSpringLayerAnimation.Def(uint64_t a1)
{
  int v2;
  _QWORD *v3;
  void *v4;

  v2 = *(unsigned __int8 *)(a1 + 296);
  v3 = (_QWORD *)(a1 + 40);
  switch(v2)
  {
    case 0:
    case 34:
      if (*(_QWORD *)(a1 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3);
      if (*(_QWORD *)(a1 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 72));
      break;
    case 1:
    case 35:
      if (*(_QWORD *)(a1 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3);
      break;
    case 18:
    case 20:
    case 28:
    case 30:

      v4 = *(void **)(a1 + 48);
      goto LABEL_4;
    case 19:
    case 21:
    case 29:
    case 31:
      v4 = (void *)*v3;
      goto LABEL_4;
    case 32:
    case 36:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
      break;
    case 33:
    case 37:
      swift_bridgeObjectRelease(*v3);
      break;
    case 58:
      v4 = *(void **)(a1 + 80);
      goto LABEL_4;
    case 63:

      v4 = *(void **)(a1 + 128);
      goto LABEL_4;
    case 64:

      v4 = *(void **)(a1 + 96);
LABEL_4:

      break;
    default:
      break;
  }

}

uint64_t initializeWithCopy for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __int128 v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  char v29;
  __int128 v30;
  id v31;
  id v32;
  id v33;
  id v34;
  __int128 v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  __int128 v46;
  void *v47;
  id v48;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  switch(*(_BYTE *)(a2 + 296))
  {
    case 0:
      v7 = *(_QWORD *)(a2 + 64);
      if (v7)
      {
        *(_QWORD *)(a1 + 64) = v7;
        (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
      }
      else
      {
        v42 = v6[1];
        *v5 = *v6;
        v5[1] = v42;
      }
      v43 = (_OWORD *)(a1 + 72);
      v44 = (_OWORD *)(a2 + 72);
      v45 = *(_QWORD *)(a2 + 96);
      if (v45)
      {
        *(_QWORD *)(a1 + 96) = v45;
        (**(void (***)(_OWORD *, _OWORD *))(v45 - 8))(v43, v44);
      }
      else
      {
        v46 = *(_OWORD *)(a2 + 88);
        *v43 = *v44;
        *(_OWORD *)(a1 + 88) = v46;
      }
      *(_BYTE *)(a1 + 296) = 0;
      break;
    case 1:
      v8 = *(_QWORD *)(a2 + 64);
      if (v8)
      {
        *(_QWORD *)(a1 + 64) = v8;
        (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v5, v6);
      }
      else
      {
        v35 = v6[1];
        *v5 = *v6;
        v5[1] = v35;
      }
      *(_BYTE *)(a1 + 296) = 1;
      break;
    case 0x12:
      v9 = *(void **)(a2 + 40);
      v10 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      v11 = 18;
      goto LABEL_14;
    case 0x13:
      v12 = *(void **)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v13 = 19;
      goto LABEL_27;
    case 0x14:
      v9 = *(void **)(a2 + 40);
      v10 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      v11 = 20;
      goto LABEL_14;
    case 0x15:
      v12 = *(void **)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v13 = 21;
      goto LABEL_27;
    case 0x1C:
      v9 = *(void **)(a2 + 40);
      v10 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      v11 = 28;
      goto LABEL_14;
    case 0x1D:
      v12 = *(void **)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v13 = 29;
      goto LABEL_27;
    case 0x1E:
      v9 = *(void **)(a2 + 40);
      v10 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v10;
      v11 = 30;
LABEL_14:
      *(_BYTE *)(a1 + 296) = v11;
      v14 = v9;
      v15 = v10;
      break;
    case 0x1F:
      v12 = *(void **)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v13 = 31;
      goto LABEL_27;
    case 0x20:
      v16 = *(_QWORD *)(a2 + 40);
      v17 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v16;
      *(_QWORD *)(a1 + 48) = v17;
      v18 = 32;
      goto LABEL_23;
    case 0x21:
      v19 = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v20 = 33;
      goto LABEL_25;
    case 0x22:
      v21 = *(_QWORD *)(a2 + 64);
      if (v21)
      {
        *(_QWORD *)(a1 + 64) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v5, v6);
      }
      else
      {
        v36 = v6[1];
        *v5 = *v6;
        v5[1] = v36;
      }
      v37 = (_OWORD *)(a1 + 72);
      v38 = (_OWORD *)(a2 + 72);
      v39 = *(_QWORD *)(a2 + 96);
      if (v39)
      {
        *(_QWORD *)(a1 + 96) = v39;
        (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
      }
      else
      {
        v41 = *(_OWORD *)(a2 + 88);
        *v37 = *v38;
        *(_OWORD *)(a1 + 88) = v41;
      }
      *(_BYTE *)(a1 + 296) = 34;
      break;
    case 0x23:
      v22 = *(_QWORD *)(a2 + 64);
      if (v22)
      {
        *(_QWORD *)(a1 + 64) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v5, v6);
      }
      else
      {
        v40 = v6[1];
        *v5 = *v6;
        v5[1] = v40;
      }
      *(_BYTE *)(a1 + 296) = 35;
      break;
    case 0x24:
      v16 = *(_QWORD *)(a2 + 40);
      v17 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v16;
      *(_QWORD *)(a1 + 48) = v17;
      v18 = 36;
LABEL_23:
      *(_BYTE *)(a1 + 296) = v18;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      break;
    case 0x25:
      v19 = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
      v20 = 37;
LABEL_25:
      *(_BYTE *)(a1 + 296) = v20;
      swift_bridgeObjectRetain(v19);
      break;
    case 0x3A:
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v12 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 80) = v12;
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      v13 = 58;
LABEL_27:
      *(_BYTE *)(a1 + 296) = v13;
      v23 = v12;
      break;
    case 0x3F:
      v24 = v6[1];
      *v5 = *v6;
      v5[1] = v24;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      v25 = *(void **)(a2 + 104);
      v26 = *(void **)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v25;
      *(_QWORD *)(a1 + 112) = v26;
      v27 = *(void **)(a2 + 120);
      v28 = *(void **)(a2 + 128);
      *(_QWORD *)(a1 + 120) = v27;
      *(_QWORD *)(a1 + 128) = v28;
      v29 = 63;
      goto LABEL_30;
    case 0x40:
      v30 = v6[1];
      *v5 = *v6;
      v5[1] = v30;
      v25 = *(void **)(a2 + 72);
      v26 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v25;
      *(_QWORD *)(a1 + 80) = v26;
      v27 = *(void **)(a2 + 88);
      v28 = *(void **)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v27;
      *(_QWORD *)(a1 + 96) = v28;
      v29 = 64;
LABEL_30:
      *(_BYTE *)(a1 + 296) = v29;
      v31 = v25;
      v32 = v26;
      v33 = v27;
      v34 = v28;
      break;
    default:
      memcpy(v5, v6, 0x101uLL);
      break;
  }
  v47 = *(void **)(a2 + 304);
  *(_QWORD *)(a1 + 304) = v47;
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  v48 = v47;
  return a1;
}

uint64_t assignWithCopy for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  id v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  char v30;
  __int128 v31;
  id v32;
  id v33;
  id v34;
  id v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  __int128 v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  void *v50;
  id v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    v4 = (_OWORD *)(a1 + 40);
    v5 = (_OWORD *)(a2 + 40);
    sub_1004EA730((_QWORD *)(a1 + 40));
    switch(*(_BYTE *)(a2 + 296))
    {
      case 0:
        v6 = *(_QWORD *)(a2 + 64);
        if (v6)
        {
          *(_QWORD *)(a1 + 64) = v6;
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v36 = *(_OWORD *)(a2 + 56);
          *v4 = *v5;
          *(_OWORD *)(a1 + 56) = v36;
        }
        v37 = (_OWORD *)(a1 + 72);
        v38 = (_OWORD *)(a2 + 72);
        v39 = *(_QWORD *)(a2 + 96);
        if (v39)
        {
          *(_QWORD *)(a1 + 96) = v39;
          (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
        }
        else
        {
          v47 = *(_OWORD *)(a2 + 88);
          *v37 = *v38;
          *(_OWORD *)(a1 + 88) = v47;
        }
        *(_BYTE *)(a1 + 296) = 0;
        break;
      case 1:
        v7 = *(_QWORD *)(a2 + 64);
        if (v7)
        {
          *(_QWORD *)(a1 + 64) = v7;
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v40 = *(_OWORD *)(a2 + 56);
          *v4 = *v5;
          *(_OWORD *)(a1 + 56) = v40;
        }
        v41 = 1;
        goto LABEL_46;
      case 0x12:
        v8 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v8;
        v9 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v9;
        v10 = 18;
        goto LABEL_15;
      case 0x13:
        v11 = *(void **)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v12 = 19;
        goto LABEL_28;
      case 0x14:
        v8 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v8;
        v9 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v9;
        v10 = 20;
        goto LABEL_15;
      case 0x15:
        v11 = *(void **)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v12 = 21;
        goto LABEL_28;
      case 0x1C:
        v8 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v8;
        v9 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v9;
        v10 = 28;
        goto LABEL_15;
      case 0x1D:
        v11 = *(void **)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v12 = 29;
        goto LABEL_28;
      case 0x1E:
        v8 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v8;
        v9 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v9;
        v10 = 30;
LABEL_15:
        *(_BYTE *)(a1 + 296) = v10;
        v13 = v8;
        v14 = v9;
        break;
      case 0x1F:
        v11 = *(void **)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v12 = 31;
        goto LABEL_28;
      case 0x20:
        v15 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v15;
        v16 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v16;
        v17 = 32;
        goto LABEL_24;
      case 0x21:
        v18 = *(_QWORD *)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v19 = 33;
        goto LABEL_26;
      case 0x22:
        v20 = *(_QWORD *)(a2 + 64);
        if (v20)
        {
          *(_QWORD *)(a1 + 64) = v20;
          (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v42 = *(_OWORD *)(a2 + 56);
          *v4 = *v5;
          *(_OWORD *)(a1 + 56) = v42;
        }
        v43 = (_OWORD *)(a1 + 72);
        v44 = (_OWORD *)(a2 + 72);
        v45 = *(_QWORD *)(a2 + 96);
        if (v45)
        {
          *(_QWORD *)(a1 + 96) = v45;
          (**(void (***)(_OWORD *, _OWORD *))(v45 - 8))(v43, v44);
        }
        else
        {
          v48 = *(_OWORD *)(a2 + 88);
          *v43 = *v44;
          *(_OWORD *)(a1 + 88) = v48;
        }
        v41 = 34;
        goto LABEL_46;
      case 0x23:
        v21 = *(_QWORD *)(a2 + 64);
        if (v21)
        {
          *(_QWORD *)(a1 + 64) = v21;
          (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          v46 = *(_OWORD *)(a2 + 56);
          *v4 = *v5;
          *(_OWORD *)(a1 + 56) = v46;
        }
        v41 = 35;
LABEL_46:
        *(_BYTE *)(a1 + 296) = v41;
        break;
      case 0x24:
        v15 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v15;
        v16 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v16;
        v17 = 36;
LABEL_24:
        *(_BYTE *)(a1 + 296) = v17;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v16);
        break;
      case 0x25:
        v18 = *(_QWORD *)v5;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
        v19 = 37;
LABEL_26:
        *(_BYTE *)(a1 + 296) = v19;
        swift_bridgeObjectRetain(v18);
        break;
      case 0x3A:
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v22 = *(_OWORD *)(a2 + 56);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v22;
        v11 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v11;
        *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
        v12 = 58;
LABEL_28:
        *(_BYTE *)(a1 + 296) = v12;
        v23 = v11;
        break;
      case 0x3F:
        v24 = *(_OWORD *)(a2 + 56);
        *v4 = *v5;
        *(_OWORD *)(a1 + 56) = v24;
        v25 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v25;
        v26 = *(void **)(a2 + 104);
        *(_QWORD *)(a1 + 104) = v26;
        v27 = *(void **)(a2 + 112);
        *(_QWORD *)(a1 + 112) = v27;
        v28 = *(void **)(a2 + 120);
        *(_QWORD *)(a1 + 120) = v28;
        v29 = *(void **)(a2 + 128);
        *(_QWORD *)(a1 + 128) = v29;
        v30 = 63;
        goto LABEL_31;
      case 0x40:
        v31 = *(_OWORD *)(a2 + 56);
        *v4 = *v5;
        *(_OWORD *)(a1 + 56) = v31;
        v26 = *(void **)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v26;
        v27 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v27;
        v28 = *(void **)(a2 + 88);
        *(_QWORD *)(a1 + 88) = v28;
        v29 = *(void **)(a2 + 96);
        *(_QWORD *)(a1 + 96) = v29;
        v30 = 64;
LABEL_31:
        *(_BYTE *)(a1 + 296) = v30;
        v32 = v26;
        v33 = v27;
        v34 = v28;
        v35 = v29;
        break;
      default:
        memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
        break;
    }
  }
  v49 = *(void **)(a1 + 304);
  v50 = *(void **)(a2 + 304);
  *(_QWORD *)(a1 + 304) = v50;
  v51 = v50;

  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_BYTE *)(a1 + 313) = *(_BYTE *)(a2 + 313);
  *(_BYTE *)(a1 + 314) = *(_BYTE *)(a2 + 314);
  *(_BYTE *)(a1 + 315) = *(_BYTE *)(a2 + 315);
  return a1;
}

void *initializeWithTake for CRLSpringLayerAnimation.Def(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x13CuLL);
}

uint64_t assignWithTake for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    sub_1004EA730((_QWORD *)(a1 + 40));
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
  }
  v5 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);

  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
  *(_BYTE *)(a1 + 315) = *(_BYTE *)(a2 + 315);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLSpringLayerAnimation.Def(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 316))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 304);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLSpringLayerAnimation.Def(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 316) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 316) = 0;
    if (a2)
      *(_QWORD *)(result + 304) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSpringLayerAnimation.Def()
{
  return &type metadata for CRLSpringLayerAnimation.Def;
}

unint64_t sub_100D2904C(uint64_t a1)
{
  unint64_t result;

  result = sub_100D29070();
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

unint64_t sub_100D29070()
{
  unint64_t result;

  result = qword_10140EE78[0];
  if (!qword_10140EE78[0])
  {
    result = swift_getWitnessTable(&unk_100F33170, &type metadata for CRLSpringLayerAnimation.Def);
    atomic_store(result, qword_10140EE78);
  }
  return result;
}

uint64_t sub_100D290B4(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for CheckedContinuation(319, a1[10], a1[11], a1[12]);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100F33220;
    result = swift_initClassMetadata2(a1, 0, 3, v4, a1 + 13);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_100D29140()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = (_QWORD *)*v0;
  swift_release(v0[2]);
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 112);
  v3 = type metadata accessor for CheckedContinuation(0, v1[10], v1[11], v1[12]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_100D291A0()
{
  uint64_t v0;

  sub_100D29140();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLCheckedContinuationOnce(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCheckedContinuationOnce);
}

uint64_t sub_100D291D0(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 216);
}

uint64_t type metadata accessor for CRLCheckedContinuationOnceWithTimeout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCheckedContinuationOnceWithTimeout);
}

id sub_100D29210()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLLayerAnimationDisplayLink()), "init");
  qword_101481388 = (uint64_t)result;
  return result;
}

uint64_t (*sub_100D2927C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations, a1, 33, 0);
  return j__swift_endAccess_0;
}

void sub_100D292F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD aBlock[5];
  uint64_t v10;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8) & 1) != 0)
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
    if (v1)
    {
      v8 = v1;
      sub_100757E04(&_mh_execute_header, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startDisplayLink()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2u, 94, (uint64_t)"expected nil value, but non-nil found", 37, 2u);

    }
    else
    {
      v2 = swift_allocObject(&unk_1012A17A8, 24, 7);
      swift_unknownObjectWeakInit(v2 + 16);
      v3 = objc_allocWithZone((Class)CRLDisplayLink);
      aBlock[4] = sub_100D2AE30;
      v10 = v2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100D2AC48;
      aBlock[3] = &unk_1012A17C0;
      v4 = _Block_copy(aBlock);
      v5 = objc_msgSend(v3, "initWithHandler:", v4, swift_retain(v2).n128_f64[0]);
      _Block_release(v4);
      v6 = v10;
      swift_release(v2);
      swift_release(v6);
      v7 = v5;
      sub_100D2AD70(v5);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startDisplayLink()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2u, 94, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
  }
}

void sub_100D29548(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = Strong + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8) == 1)
    {
      *(double *)v9 = a1;
      *(_BYTE *)(v9 + 8) = 0;
    }
    sub_100D29B54(a1, a2);

  }
}

void sub_100D29604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  void (*v7)(__n128);
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8) & 1) == 0
    && *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink))
  {
    *(_QWORD *)v1 = 0;
    *(_BYTE *)(v1 + 8) = 1;
    v2 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime;
    *(_QWORD *)v2 = 0;
    *(_BYTE *)(v2 + 8) = 1;
    v3 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_previousTickMediaTime;
    *(_QWORD *)v3 = 0;
    *(_BYTE *)(v3 + 8) = 1;
    sub_100D2AD70(0);
    sub_100D29A18();
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
    swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations, v12, 1, 0);
    v5 = *v4;
    *v4 = 0;
    swift_bridgeObjectRelease(v5);
    v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    v7 = *(void (**)(__n128))(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    if (v7)
    {
      v8 = v6[1];
      v9 = swift_retain(v8);
      v7(v9);
      sub_1004C1024((uint64_t)v7, v8);
      v10 = *v6;
    }
    else
    {
      v10 = 0;
    }
    v11 = v6[1];
    *v6 = 0;
    v6[1] = 0;
    sub_1004C1024(v10, v11);
  }
}

void sub_100D29738(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (v6)
  {
    v7 = v5;
    v13 = v6;
    if ((objc_msgSend(v13, "paused") & 1) == 0)
    {
      objc_msgSend(v13, "setPaused:", 1);
      sub_100D29A18();
      v14 = a1[2];
      swift_bridgeObjectRetain(a1);
      if (!v14)
      {
LABEL_9:
        v19 = (uint64_t *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
        swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations, v26, 1, 0);
        v20 = *v19;
        *v19 = (uint64_t)a1;
        swift_bridgeObjectRelease(v20);
        v21 = v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime;
        *(double *)v21 = a5;
        *(_BYTE *)(v21 + 8) = 0;
        v22 = (uint64_t *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
        v23 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
        v24 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler + 8);
        *v22 = a2;
        v22[1] = a3;
        sub_1004C0F54(a2, a3);
        sub_1004C1024(v23, v24);
        v25 = v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime;
        *(double *)v25 = a4;
        *(_BYTE *)(v25 + 8) = 0;
        objc_msgSend(v13, "setPaused:", 0);

        return;
      }
      v15 = 0;
      v16 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
          a1 = sub_100D14F8C(a1);
        if (v16 >= a1[2])
          break;
        ++v16;
        v18 = a1[v15 + 7];
        v17 = a1[v15 + 8];
        sub_1004CB9AC((uint64_t)&a1[v15 + 4], v18);
        (*(void (**)(uint64_t))(*(_QWORD *)(v17 + 16) + 24))(v18);
        v15 += 5;
        if (v14 == v16)
          goto LABEL_9;
      }
      __break(1u);
    }

  }
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000046, 0x800000010100CFF0, "Freeform/CRLLayerAnimationDisplayLink.swift", 43, 2, 137, 0);
  __break(1u);
}

id sub_100D29944()
{
  void *v0;
  objc_super v2;

  sub_100D29604();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLayerAnimationDisplayLink();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100D29A18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD);
  _QWORD *v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v13[32];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
  swift_beginAccess(v1, v17, 0, 0);
  v2 = *v1;
  if (*v1)
  {
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain(*v1);
      v4 = 0;
      for (i = 4; ; i += 5)
      {
        sub_1004E90B0(v2 + i * 8, (uint64_t)v14);
        v7 = v15;
        v6 = v16;
        sub_1004CB9AC((uint64_t)v14, v15);
        (*(void (**)(uint64_t))(*(_QWORD *)(v6 + 16) + 32))(v7);
        v9 = sub_100D2927C((uint64_t)v13);
        v10 = (_QWORD *)*v8;
        if (*v8)
        {
          v11 = v8;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
          *v11 = v10;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v10 = sub_100D14F8C(v10);
            *v11 = v10;
          }
          if (v4 >= v10[2])
          {
            __break(1u);
            return;
          }
          sub_1004EA5C8(&v10[i], v14);
        }
        ((void (*)(_BYTE *, _QWORD))v9)(v13, 0);
        ++v4;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
        if (v3 == v4)
        {
          swift_bridgeObjectRelease(v2);
          return;
        }
      }
    }
  }
}

void sub_100D29B54(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  double v26;
  double v27;
  uint64_t *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  char v40;
  char v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  int v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  float v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, double);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, double);
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  char *v112;
  char *v113;
  id v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  _BYTE v126[24];
  _QWORD v127[3];
  uint64_t v128;
  uint64_t v129;
  char v130[24];
  char v131[32];

  v5 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v111 - v13;
  v15 = type metadata accessor for UUID(0);
  v122 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v124 = (char *)&v111 - v19;
  __chkstk_darwin(v20);
  v123 = (uint64_t)&v111 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v111 - v23;
  v25 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (!v25)
    goto LABEL_50;
  v121 = v25;
  if ((objc_msgSend(v121, "paused") & 1) != 0)
    goto LABEL_49;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime + 8) & 1) != 0)
    goto LABEL_5;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime + 8) & 1) != 0)
    goto LABEL_5;
  v26 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime);
  v27 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime);
  v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations, v131, 0, 0);
  v29 = *v28;
  if (!v29)
    goto LABEL_5;
  v120 = v17;
  v112 = v14;
  v116 = v11;
  v113 = v8;
  v118 = v6;
  v119 = v5;
  v115 = v2;
  v30 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v30, "begin", swift_bridgeObjectRetain(v29).n128_f64[0]);
  v114 = v30;
  objc_msgSend(v30, "setDisableActions:", 1);
  v117 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  if (!v31)
  {
LABEL_44:
    *(_QWORD *)&v110 = swift_bridgeObjectRelease(v117).n128_u64[0];
    objc_msgSend(v114, "commit", v110);
    if (v26 + v27 < a1)
      sub_100D29604();
LABEL_5:

    return;
  }
  v32 = (_QWORD *)(v115 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_animationStatusMap);
  v33 = v117 + 32;
  swift_beginAccess(v115 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_animationStatusMap, v130, 0, 0);
  while (1)
  {
    sub_1004E90B0(v33, (uint64_t)v127);
    v35 = *v32;
    v36 = v128;
    v37 = v129;
    sub_1004BB5A4(v127, v128);
    v38 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 56);
    v39 = swift_bridgeObjectRetain(v35);
    v38(v36, v37, v39);
    if (*(_QWORD *)(v35 + 16))
    {
      sub_100842EFC((uint64_t)v24);
      v41 = v40;
    }
    else
    {
      v41 = 0;
    }
    v42 = (uint64_t)v124;
    v43 = *(void (**)(char *, uint64_t))(v122 + 8);
    v43(v24, v15);
    swift_bridgeObjectRelease(v35);
    if ((v41 & 1) == 0)
      break;
LABEL_28:
    v63 = v128;
    v64 = v129;
    sub_1004BB5A4(v127, v128);
    (*(void (**)(uint64_t, uint64_t))(v64 + 56))(v63, v64);
    v65 = *v32;
    if (*(_QWORD *)(*v32 + 16))
    {
      swift_bridgeObjectRetain(*v32);
      v66 = sub_100842EFC(v42);
      if ((v67 & 1) != 0)
      {
        v68 = v42;
        v69 = *(unsigned __int8 *)(*(_QWORD *)(v65 + 56) + v66);
        v70 = swift_bridgeObjectRelease(v65);
        ((void (*)(uint64_t, uint64_t, __n128))v43)(v68, v15, v70);
        if (v69 != 2)
        {
          v71 = v128;
          v72 = v129;
          sub_1004BB5A4(v127, v128);
          v73 = v26 + (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v72 + 24) + 8) + 8))(v71);
          v74 = v128;
          v75 = v129;
          sub_1004BB5A4(v127, v128);
          v76 = (a2 - v73)
              / (v26 + (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v75 + 24) + 8) + 40))(v74) - v73);
          if (v76 > 0.0)
          {
            if (!v69)
            {
              v77 = v128;
              v78 = v129;
              sub_1004BB5A4(v127, v128);
              v79 = (uint64_t)v112;
              (*(void (**)(uint64_t))(*(_QWORD *)(v78 + 16) + 40))(v77);
              v80 = v119;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v79, 1, v119))
              {
                sub_100D2ACB0(v79);
              }
              else
              {
                v81 = (uint64_t)v113;
                sub_100D2ACF0(v79, (uint64_t)v113);
                sub_100D2ACB0(v79);
                v82 = v81 + *(int *)(v80 + 20);
                v83 = v81;
                v84 = *(void (**)(uint64_t, double))v82;
                v85 = *(_QWORD *)(v82 + 8);
                swift_retain(v85);
                v86 = sub_100D2AD34(v83);
                v84(v86, a2);
                swift_release(v85);
              }
              v87 = v128;
              v88 = v129;
              sub_1004BB5A4(v127, v128);
              (*(void (**)(uint64_t, uint64_t))(v88 + 56))(v87, v88);
              swift_beginAccess(v32, v126, 33, 0);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
              v125 = (_QWORD *)*v32;
              *v32 = 0x8000000000000000;
              v90 = (uint64_t)v120;
              sub_10082A88C(1, (uint64_t)v120, isUniquelyReferenced_nonNull_native);
              v91 = *v32;
              *v32 = v125;
              v92 = swift_bridgeObjectRelease(v91);
              ((void (*)(uint64_t, uint64_t, __n128))v43)(v90, v15, v92);
              swift_endAccess(v126);
            }
            if (v76 < 1.0)
            {
              v93 = v128;
              v94 = v129;
              sub_1004CB9AC((uint64_t)v127, v128);
              (*(void (**)(uint64_t, double, double))(*(_QWORD *)(v94 + 16) + 16))(v93, v26, a2);
            }
          }
          if (v69 == 1 && v76 >= 1.0)
          {
            v95 = v128;
            v96 = v129;
            sub_1004BB5A4(v127, v128);
            v97 = (uint64_t)v120;
            (*(void (**)(uint64_t, uint64_t))(v96 + 56))(v95, v96);
            swift_beginAccess(v32, v126, 33, 0);
            v98 = swift_isUniquelyReferenced_nonNull_native(*v32);
            v125 = (_QWORD *)*v32;
            *v32 = 0x8000000000000000;
            sub_10082A88C(2, v97, v98);
            v99 = *v32;
            *v32 = v125;
            v100 = swift_bridgeObjectRelease(v99);
            ((void (*)(uint64_t, uint64_t, __n128))v43)(v97, v15, v100);
            swift_endAccess(v126);
            v101 = v128;
            v102 = v129;
            sub_1004BB5A4(v127, v128);
            v103 = (uint64_t)v116;
            (*(void (**)(uint64_t))(*(_QWORD *)(v102 + 16) + 64))(v101);
            v104 = v119;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v103, 1, v119))
            {
              sub_100D2ACB0(v103);
            }
            else
            {
              v105 = (uint64_t)v113;
              sub_100D2ACF0(v103, (uint64_t)v113);
              sub_100D2ACB0(v103);
              v106 = v105 + *(int *)(v104 + 20);
              v107 = *(void (**)(uint64_t, double))v106;
              v108 = *(_QWORD *)(v106 + 8);
              swift_retain(v108);
              v109 = sub_100D2AD34(v105);
              v107(v109, a2);
              swift_release(v108);
            }
          }
        }
        goto LABEL_11;
      }
      v34 = swift_bridgeObjectRelease(v65);
    }
    ((void (*)(uint64_t, uint64_t, __n128))v43)(v42, v15, v34);
LABEL_11:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v127);
    v33 += 40;
    if (!--v31)
      goto LABEL_44;
  }
  v44 = v128;
  v45 = v129;
  sub_1004BB5A4(v127, v128);
  v46 = v123;
  (*(void (**)(uint64_t, uint64_t))(v45 + 56))(v44, v45);
  swift_beginAccess(v32, v126, 33, 0);
  v47 = swift_isUniquelyReferenced_nonNull_native(*v32);
  v125 = (_QWORD *)*v32;
  v48 = v125;
  *v32 = 0x8000000000000000;
  v50 = sub_100842EFC(v46);
  v51 = v48[2];
  v52 = (v49 & 1) == 0;
  v53 = v51 + v52;
  if (!__OFADD__(v51, v52))
  {
    v54 = v49;
    if (v48[3] < v53)
    {
      sub_100824D20(v53, v47);
      v55 = sub_100842EFC(v123);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_51;
      v50 = v55;
      v57 = v125;
      if ((v54 & 1) == 0)
        goto LABEL_25;
LABEL_23:
      *(_BYTE *)(v57[7] + v50) = 0;
LABEL_27:
      v61 = *v32;
      *v32 = v57;
      v62 = swift_bridgeObjectRelease(v61);
      ((void (*)(uint64_t, uint64_t, __n128))v43)(v123, v15, v62);
      swift_endAccess(v126);
      v42 = (uint64_t)v124;
      goto LABEL_28;
    }
    if ((v47 & 1) != 0)
    {
      v57 = v125;
      if ((v49 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      sub_100835130();
      v57 = v125;
      if ((v54 & 1) != 0)
        goto LABEL_23;
    }
LABEL_25:
    v57[(v50 >> 6) + 8] |= 1 << v50;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v122 + 16))(v57[6] + *(_QWORD *)(v122 + 72) * v50, v123, v15);
    *(_BYTE *)(v57[7] + v50) = 0;
    v58 = v57[2];
    v59 = __OFADD__(v58, 1);
    v60 = v58 + 1;
    if (v59)
      goto LABEL_48;
    v57[2] = v60;
    goto LABEL_27;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:

LABEL_50:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002CLL, 0x800000010100CFC0, "Freeform/CRLLayerAnimationDisplayLink.swift", 43, 2, 189, 0);
  __break(1u);
LABEL_51:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v15);
  __break(1u);
}

id sub_100D2A500()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  objc_super v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v3 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_previousTickMediaTime];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_animationStatusMap] = _swiftEmptyDictionarySingleton;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CRLLayerAnimationDisplayLink();
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t type metadata accessor for CRLLayerAnimationDisplayLink()
{
  return objc_opt_self(_TtC8Freeform28CRLLayerAnimationDisplayLink);
}

uint64_t storeEnumTagSinglePayload for CRLLayerAnimationDisplayLink.AnimationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100D2A64C + 4 * byte_100F332B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100D2A680 + 4 * byte_100F332B0[v4]))();
}

uint64_t sub_100D2A680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D2A688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D2A690);
  return result;
}

uint64_t sub_100D2A69C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D2A6A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100D2A6A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D2A6B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationDisplayLink.AnimationStatus()
{
  return &type metadata for CRLLayerAnimationDisplayLink.AnimationStatus;
}

uint64_t *sub_100D2A6CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

double sub_100D2A75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100D2A7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  return a1;
}

uint64_t sub_100D2A80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t sub_100D2A880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_100D2A8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D2A8F4);
}

uint64_t sub_100D2A8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100D2A970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D2A97C);
}

uint64_t sub_100D2A97C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLLayerAnimationDisplayLink.Handler(uint64_t a1)
{
  uint64_t result;

  result = qword_10140F040;
  if (!qword_10140F040)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLLayerAnimationDisplayLink.Handler);
  return result;
}

uint64_t sub_100D2AA30(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100D2AAA4()
{
  return sub_1004B7878(&qword_10140F078, type metadata accessor for CRLLayerAnimationDisplayLink.Handler, (uint64_t)&unk_100F33368);
}

Swift::Int sub_100D2AAD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_100D2AB40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_100D2AB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

unint64_t sub_100D2AC04()
{
  unint64_t result;

  result = qword_10140F080;
  if (!qword_10140F080)
  {
    result = swift_getWitnessTable(&unk_100F333D0, &type metadata for CRLLayerAnimationDisplayLink.AnimationStatus);
    atomic_store(result, (unint64_t *)&qword_10140F080);
  }
  return result;
}

void sub_100D2AC48(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7;
  void (*v8)(double, double);
  id v9;

  v8 = *(void (**)(double, double))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v9 = a2;
  v8(a3, a4);
  swift_release(v7);

}

uint64_t sub_100D2ACB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E06C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100D2ACF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D2AD34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100D2AD70(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id result;

  v3 = OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (v4 && (objc_msgSend(v4, "setPaused:", 1), (v5 = *(void **)(v1 + v3)) != 0))
  {
    objc_msgSend(v5, "invalidate");
    v6 = *(void **)(v1 + v3);
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v1 + v3) = a1;
  v7 = a1;

  result = *(id *)(v1 + v3);
  if (result)
    return objc_msgSend(result, "setPaused:", 0);
  return result;
}

uint64_t sub_100D2AE0C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100D2AE30(uint64_t a1, double a2, double a3)
{
  uint64_t v3;

  sub_100D29548(a2, a3, a1, v3);
}

double sub_100D2AE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D2AE48(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100D2AE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch(sub_100D2AE68, v1, 0);
}

uint64_t sub_100D2AE68()
{
  uint64_t *v0;
  Class v1;
  uint64_t **v2;

  v1 = sub_100B4AD90(v0[10]);
  v0[12] = (uint64_t)v1;
  v2 = (uint64_t **)swift_task_alloc(dword_1013EA244);
  v0[13] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_100D2AEC4;
  return sub_1006737EC((uint64_t)v1);
}

uint64_t sub_100D2AEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 104);
  v5 = *v2;
  *(_QWORD *)(v5 + 112) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_100D2AF4C, *(_QWORD *)(v5 + 88), 0);

  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_100D2AF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 112);

  *(_QWORD *)(v0 + 16) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v4 = v3;
  if ((swift_dynamicCast(v0 + 24, v0 + 16, v2, v3, 6) & 1) != 0)
  {
    v6 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 40) = v6;
    v7 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
    _BridgedStoredNSError.code.getter(v4, v7);
    if (*(_QWORD *)(v0 + 32) == 26
      || (*(_QWORD *)(v0 + 56) = v6, _BridgedStoredNSError.code.getter(v4, v7), *(_QWORD *)(v0 + 48) == 28))
    {
      v8 = *(_QWORD *)(v0 + 112);

LABEL_5:
      swift_errorRelease(v8);
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    *(_QWORD *)(v0 + 72) = v6;
    _BridgedStoredNSError.code.getter(v4, v7);

    if (*(_QWORD *)(v0 + 64) == 11)
    {
      v8 = *(_QWORD *)(v0 + 112);
      goto LABEL_5;
    }
  }
  swift_willThrow(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2B0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100D2B134, v2, 0);
}

uint64_t sub_100D2B134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 136);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v1 + 128);
    v5 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v7 = *v5;
    v6 = v5[1];
    v8 = *v5 == v4 && v2 == v6;
    if (v8
      || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v5, v5[1], v4, v2, 0),
          v3 = *(_QWORD *)(v0 + 24),
          (v9 & 1) != 0))
    {
      v10 = *(_QWORD *)(v0 + 56);
      v11 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(v10, v3, *(_QWORD *)(v0 + 40));
      v12 = v11;
      v13 = v10;
      v14 = 0;
      v15 = 0xE000000000000000;
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 56);
      v19 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(v18, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
      swift_bridgeObjectRetain(v6);
      v12 = v19;
      v13 = v18;
      v14 = v7;
      v15 = v6;
    }
    sub_10067AFD0(v13, v14, v15, v12);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc(dword_1013EA24C);
    *(_QWORD *)(v0 + 64) = v16;
    *v16 = v0;
    v16[1] = sub_100D2B270;
    return sub_100673ABC();
  }
}

uint64_t sub_100D2B270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = (_QWORD *)*v3;
  v7 = *(_QWORD *)(*v3 + 64);
  v8 = *v3;
  swift_task_dealloc(v7);
  if (v2)
  {
    swift_task_dealloc(v6[7]);
    return (*(uint64_t (**)(void))(v8 + 8))();
  }
  else
  {
    v10 = v6[4];
    v6[9] = a2;
    v6[10] = a1;
    return swift_task_switch(sub_100D2B2F8, v10, 0);
  }
}

uint64_t sub_100D2B2F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;

  v1 = v0[9];
  v2 = v0[4];
  *(_QWORD *)(v2 + 128) = v0[10];
  *(_QWORD *)(v2 + 136) = v1;
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 136);
  if (v3)
  {
    v4 = v0[3];
    v5 = *(_QWORD *)(v0[4] + 128);
    v6 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    v8 = *v6;
    v7 = v6[1];
    v9 = *v6 == v5 && v3 == v7;
    if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(*v6, v6[1], v5, v3, 0), v4 = v0[3], (v10 & 1) != 0))
    {
      v11 = v0[7];
      v12 = v0[2];
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[6] + 16))(v11, v4, v0[5]);
      v13 = v12;
      v14 = v11;
      v15 = 0;
      v16 = 0xE000000000000000;
    }
    else
    {
      v20 = v0[7];
      v21 = v0[2];
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[6] + 16))(v20, v0[3], v0[5]);
      swift_bridgeObjectRetain(v7);
      v13 = v21;
      v14 = v20;
      v15 = v8;
      v16 = v7;
    }
    sub_10067AFD0(v14, v15, v16, v13);
    swift_task_dealloc(v0[7]);
    v19 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v17 = sub_100D2C82C();
    swift_allocError(&type metadata for CRLBoardShareController.CRLBoardShareControllerErrors, v17, 0, 0);
    swift_willThrow(v18);
    swift_task_dealloc(v0[7]);
    v19 = (uint64_t (*)(void))v0[1];
  }
  return v19();
}

uint64_t sub_100D2B440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v3[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100D2B4C4, v2, 0);
}

uint64_t sub_100D2B4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v4 = *v2;
  v3 = v2[1];
  if (*v2)
    v5 = 0;
  else
    v5 = v3 == 0xE000000000000000;
  if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v6 + 136);
    if (!v7)
    {
      v18 = (_QWORD *)swift_task_alloc(dword_1013EA24C);
      *(_QWORD *)(v0 + 72) = v18;
      *v18 = v0;
      v18[1] = sub_100D2B6C4;
      return sub_100673ABC();
    }
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 24);
    v26 = *(_QWORD *)(v0 + 16);
    v12 = *(_QWORD *)(v6 + 128);
    static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRetain_n(v7, 2);
    sub_100A6ACB4(v12, v7, v14, v16, &_mh_execute_header, (uint64_t)"globallyScopedBoardIdentifier(boardIdentifier:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 79);
    swift_bridgeObjectRelease();
    v17 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 16))(v8, v11, v10, v17);
    sub_10067B154(v8, v12, v7, v26);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 56);
    v20 = *(_QWORD *)(v0 + 64);
    v23 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v0 + 48);
    v24 = *(_QWORD *)(v0 + 16);
    sub_1004E1B3C(*(_QWORD *)(v0 + 24), v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
    swift_bridgeObjectRetain(v3);
    sub_10067B154(v20, v4, v3, v24);
    sub_1004BBB8C(v23);
  }
  v25 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2B6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = (_QWORD *)*v3;
  v7 = *(_QWORD *)(*v3 + 72);
  v8 = *v3;
  swift_task_dealloc(v7);
  if (v2)
  {
    v9 = v6[5];
    swift_task_dealloc(v6[8]);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v8 + 8))();
  }
  else
  {
    v11 = v6[4];
    v6[10] = a2;
    v6[11] = a1;
    return swift_task_switch(sub_100D2B758, v11, 0);
  }
}

uint64_t sub_100D2B758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v2 + 136) = v1;
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 136);
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 24);
    v19 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 128);
    static String._unconditionallyBridgeFromObjectiveC(_:)(CKCurrentUserDefaultName);
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRetain_n(v3, 2);
    sub_100A6ACB4(v8, v3, v10, v12, &_mh_execute_header, (uint64_t)"globallyScopedBoardIdentifier(boardIdentifier:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 79);
    swift_bridgeObjectRelease();
    v13 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v4, v7, v6, v13);
    sub_10067B154(v4, v8, v3, v19);
    v14 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v14);
  }
  else
  {
    v15 = sub_100D2C82C();
    swift_allocError(&type metadata for CRLBoardShareController.CRLBoardShareControllerErrors, v15, 0, 0);
    swift_willThrow(v16);
    v17 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v17);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2B8D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch(sub_100D2B8F0, v1, 0);
}

uint64_t sub_100D2B8F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + 112);
  *(_QWORD *)(v0 + 144) = v1;
  return swift_task_switch(sub_100D2B90C, v1, 0);
}

uint64_t sub_100D2B90C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = v0[16];
  v3 = *(void **)(v0[18] + 112);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100D2B9B4;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_100673C7C;
  v5[3] = &unk_1012A1830;
  v5[4] = v4;
  objc_msgSend(v3, "acceptShareMetadata:completionHandler:", v2, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_100D2B9B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 152) = v2;
  if (v2)
    v3 = sub_100D2BA24;
  else
    v3 = sub_100D2BA14;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 144), 0);
}

uint64_t sub_100D2BA14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_100D2BA24(__n128 a1)
{
  uint64_t v1;

  swift_willThrow(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100D2BA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100D2BA78, v1, 0);
}

uint64_t sub_100D2BA78()
{
  uint64_t *v0;
  uint64_t v1;
  Class v2;
  uint64_t **v3;

  v1 = v0[3];
  v2 = sub_100B4AD90(v0[2]);
  v0[4] = (uint64_t)v2;
  v0[5] = *(_QWORD *)(v1 + 112);
  v3 = (uint64_t **)swift_task_alloc(dword_1013EA244);
  v0[6] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_100D2BAD8;
  return sub_1006737EC((uint64_t)v2);
}

uint64_t sub_100D2BAD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 48);
  v3[7] = a1;
  v3[8] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100D2BE94;
  else
    v5 = sub_100D2BB44;
  return swift_task_switch(v5, v3[3], 0);
}

uint64_t sub_100D2BB44()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  _QWORD *v5;
  void *v7;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 56), "currentUserParticipant");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "role");

      if (v4 == (id)1)
      {
        v5 = (_QWORD *)swift_task_alloc(dword_1013EA23C);
        *(_QWORD *)(v0 + 72) = v5;
        *v5 = v0;
        v5[1] = sub_100D2BCA4;
        return sub_100673590(*(_QWORD *)(v0 + 32));
      }
    }

  }
  v7 = *(void **)(v0 + 32);
  sub_100757E04(&_mh_execute_header, (uint64_t)"unshareBoard(boardIdentifier:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 109, "To unshare a board the current user must own the share. Use leaveSharedBoard() for participants.", 96, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unshareBoard(boardIdentifier:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 109, (uint64_t)"To unshare a board the current user must own the share. Use leaveSharedBoard() for participants.", 96, 2u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2BCA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100D2BEC8;
  else
    v4 = sub_100D2BD08;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 24), 0);
}

uint64_t sub_100D2BD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D2BD70, v2, v3);
}

void sub_100D2BD70()
{
  uint64_t *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(v0[11]);
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v4 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
    swift_retain(v4);
    swift_unknownObjectRelease(v2);
    if (v4)
    {
      v5 = v0[3];
      sub_100D6ABD4(v0[2]);
      swift_release(v4);
      swift_task_switch(sub_100D2BE58, v5, 0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100D2BE58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2BE94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2BEC8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D2BF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100D2BF20, v2, 0);
}

uint64_t sub_100D2BF20()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  _QWORD *v5;

  v1 = objc_msgSend(*(id *)(v0 + 24), "currentUserParticipant");
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, "role"), v2, v3 == (id)1))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"leaveSharedBoard(boardIdentifier:share:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 121, "Can not leave a share if the current user owns the share. Use unshareBoard() for owners.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"leaveSharedBoard(boardIdentifier:share:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 121, (uint64_t)"Can not leave a share if the current user owns the share. Use unshareBoard() for owners.", 88, 2u);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc(dword_1013EA254);
    *(_QWORD *)(v0 + 40) = v5;
    *v5 = v0;
    v5[1] = sub_100D2C074;
    return sub_100673D08(*(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_100D2C074()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch(sub_100D2C0DC, *(_QWORD *)(v2 + 32), 0);
}

uint64_t sub_100D2C0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 48) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D2C144, v2, v3);
}

void sub_100D2C144()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  swift_release(*(_QWORD *)(v0 + 48));
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v4 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
    swift_retain(v4);
    swift_unknownObjectRelease(v2);
    if (v4)
    {
      sub_100D6ABD4(*(_QWORD *)(v0 + 16));
      v5 = swift_release(v4);
      (*(void (**)(__n128))(v0 + 8))(v5);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100D2C21C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLBoardShareController()
{
  return objc_opt_self(_TtC8Freeform23CRLBoardShareController);
}

uint64_t sub_100D2C270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_100D2C288, v0, 0);
}

uint64_t sub_100D2C288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 136) = 0;
  swift_bridgeObjectRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100D2C2C0(id a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  BOOL v41;
  uint64_t v42;
  void *Strong;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  _BYTE v48[72];
  __int128 v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE v52[72];
  _BYTE v53[24];

  if (a1)
  {
    v3 = objc_msgSend(a1, "containerID");

    if (!v3)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, "The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2u, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u);
      objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
    }
  }
  v4 = *(void **)(v1 + 16);
  v5 = v4;
  LOBYTE(v4) = sub_1009B6070(v4, a1);

  if ((v4 & 1) != 0)
  {
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v53, 0, 0);
    v6 = (void *)static OS_os_log.shareState;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v48);
    v9 = (_QWORD *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v10 = inited + 32;
    if (a1)
    {
      v50 = sub_1004DAF40();
      v51 = sub_1004B7878((unint64_t *)&qword_1013EF500, (uint64_t (*)(uint64_t))sub_1004DAF40, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)&v49 = a1;
      sub_1004DB728(&v49, v10);
    }
    else
    {
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      v9[4] = 7104878;
      v9[5] = 0xE300000000000000;
    }
    v16 = v6;
    v17 = a1;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v19, "Not saving share to board share state (no meaningful difference detected): %@", 77, 2, (uint64_t)v9);
    swift_setDeallocating(v9);
    v20 = v9[2];
    v21 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v10, v20, v21);

  }
  else
  {
    v11 = *(void **)(v1 + 16);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v12, "currentUserParticipant");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, "permission");

        v12 = v14;
      }
      else
      {
        v15 = objc_msgSend(v12, "publicPermission");
      }

      v22 = v15 == (id)3;
    }
    else
    {
      v22 = 1;
    }
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v53, 0, 0);
    v23 = (void *)static OS_os_log.shareState;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, v52);
    v26 = (_QWORD *)v25;
    *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
    v27 = v25 + 32;
    if (a1)
    {
      v50 = sub_1004DAF40();
      v51 = sub_1004B7878((unint64_t *)&qword_1013EF500, (uint64_t (*)(uint64_t))sub_1004DAF40, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)&v49 = a1;
      sub_1004DB728(&v49, v27);
    }
    else
    {
      *(_QWORD *)(v25 + 56) = &type metadata for String;
      *(_QWORD *)(v25 + 64) = sub_1004CFC2C();
      v26[4] = 7104878;
      v26[5] = 0xE300000000000000;
    }
    v28 = v23;
    v29 = a1;
    v31 = static os_log_type_t.default.getter(v30);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v31, "Saving updated share to board share state: %@", 45, 2, (uint64_t)v26);
    swift_setDeallocating(v26);
    v32 = v26[2];
    v33 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v27, v32, v33);

    v34 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = a1;
    v35 = v29;

    v36 = *(void **)(v1 + 16);
    if (v36)
    {
      v37 = v36;
      v38 = objc_msgSend(v37, "currentUserParticipant");
      if (v38)
      {
        v39 = v38;
        v40 = objc_msgSend(v38, "permission");

        v37 = v39;
      }
      else
      {
        v40 = objc_msgSend(v37, "publicPermission");
      }

      v41 = v40 == (id)3;
    }
    else
    {
      v41 = 1;
    }
    v42 = v1 + 24;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v42);
    if (Strong)
    {
      v44 = Strong;
      objc_msgSend(Strong, "shareStateUpdatedWithShare:", v35);
      swift_unknownObjectRelease(v44);
    }
    if (a1)
    {
      if (v41)
      {
        if (v22)
          return;
        v45 = (void *)swift_unknownObjectWeakLoadStrong(v42);
        if (!v45)
          return;
        v46 = v45;
        objc_msgSend(v45, "currentUserGainedEditPermissions");
      }
      else
      {
        if (!v22)
          return;
        v47 = (void *)swift_unknownObjectWeakLoadStrong(v42);
        if (!v47)
          return;
        v46 = v47;
        objc_msgSend(v47, "currentUserLostEditPermissions");
      }
      swift_unknownObjectRelease(v46);
    }
  }
}

uint64_t sub_100D2C7E0()
{
  uint64_t v0;

  sub_1004CBB0C(v0 + 24);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLActiveBoardShareState()
{
  return objc_opt_self(_TtC8Freeform24CRLActiveBoardShareState);
}

unint64_t sub_100D2C82C()
{
  unint64_t result;

  result = qword_10140F2F0;
  if (!qword_10140F2F0)
  {
    result = swift_getWitnessTable(&unk_100F33548, &type metadata for CRLBoardShareController.CRLBoardShareControllerErrors);
    atomic_store(result, (unint64_t *)&qword_10140F2F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardShareController.CRLBoardShareControllerErrors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100D2C8B0 + 4 * byte_100F33400[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100D2C8D0 + 4 * byte_100F33405[v4]))();
}

_BYTE *sub_100D2C8B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100D2C8D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D2C8D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D2C8E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D2C8E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D2C8F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardShareController.CRLBoardShareControllerErrors()
{
  return &type metadata for CRLBoardShareController.CRLBoardShareControllerErrors;
}

unint64_t sub_100D2C910()
{
  unint64_t result;

  result = qword_10140F2F8;
  if (!qword_10140F2F8)
  {
    result = swift_getWitnessTable(&unk_100F33520, &type metadata for CRLBoardShareController.CRLBoardShareControllerErrors);
    atomic_store(result, (unint64_t *)&qword_10140F2F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipConnectionLinesEntryPointCompact()
{
  return &type metadata for CRLTipConnectionLinesEntryPointCompact;
}

uint64_t sub_100D2C964(uint64_t a1)
{
  return sub_1008B7648(a1, qword_101481390, 0xD000000000000026, 0x8000000100FDC800);
}

uint64_t sub_100D2C988(uint64_t a1)
{
  return sub_100D2CA4C(a1, qword_1014813A8, 0x655341657661682BLL, 0xEF6E6F697463656CLL);
}

uint64_t sub_100D2C9B4(uint64_t a1)
{
  return sub_100D2CA4C(a1, qword_1014813C0, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_100D2C9D8(uint64_t a1)
{
  return sub_100D2CA4C(a1, qword_1014813D8, 0xD000000000000013, 0x8000000100FB9610);
}

uint64_t sub_100D2C9FC(uint64_t a1)
{
  return sub_100D2CA4C(a1, qword_1014813F0, 0xD000000000000018, 0x8000000100FDC830);
}

uint64_t sub_100D2CA20(uint64_t a1)
{
  return sub_100D2CA4C(a1, qword_101481408, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_100D2CA4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipConnectionLinesEntryPointCompact, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipConnectionLinesEntryPointCompact, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_100D2CAEC(uint64_t a1)
{
  return sub_1008B7648(a1, qword_101481420, 0xD000000000000035, 0x800000010100D3F0);
}

uint64_t sub_100D2CB10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v39 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E6D78);
  v5 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v42 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E6D80);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D88);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_1013F5970);
  v38 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v8, v18);
  KeyPath = swift_getKeyPath("p#T");
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v11, KeyPath, v8, v18);
  v20 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
  v21 = swift_getKeyPath("@#T");
  v22 = sub_1004CBA30(&qword_1013F5978, &qword_1013E6D88, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, v21, v12, v22);
  v23 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v23);
  v43 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v43, &type metadata for Int);
  v25 = v36;
  v24 = v37;
  v26 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v39);
  v27 = sub_1004B804C(&qword_1013F5980);
  v28 = v40;
  v40[3] = v27;
  v28[4] = sub_1008B85F8((unint64_t *)&qword_1013F5988, &qword_1013F5980, (void (*)(void))sub_10085A0D8);
  sub_10050D1B0(v28);
  v29 = sub_1004CBA30(&qword_1013F5998, &qword_1013F5970, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v30 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v31 = v35;
  v32 = v41;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v17, v7, v25, v35, v41, v29, v30, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v31);
}

uint64_t sub_100D2CE84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin(v3);
  v55 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  v60 = v6;
  v7 = __chkstk_darwin(v5);
  v53 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v48 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v49 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_1013E6D98);
  v54 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v47 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v23);
  KeyPath = swift_getKeyPath("p#T");
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v23);
  v25 = swift_release(KeyPath);
  v26 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v25);
  static Tips.DonationTimeRange.day.getter(v26);
  v27 = type metadata accessor for Tips.EmptyDonation(0);
  v28 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v29 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v30 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v27, v16, v28, v29, v30);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v16);
  v31 = swift_getKeyPath("@#T");
  v32 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v33 = v47;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v31, v19, v32);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v21, v19, v34);
  v61 = 1;
  v35 = v53;
  static PredicateExpressions.build_Arg<A>(_:)(&v61, &type metadata for Int);
  v37 = v55;
  v36 = v56;
  v38 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v57);
  v39 = sub_1004B804C(&qword_1013E6DC0);
  v40 = v58;
  v58[3] = v39;
  v40[4] = sub_1008B85F8((unint64_t *)&qword_1013E6DC8, &qword_1013E6DC0, (void (*)(void))sub_1005EA768);
  sub_10050D1B0(v40);
  v41 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v42 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v43 = v52;
  v44 = v59;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v33, v35, v37, v52, v59, v41, v42, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v33, v43);
}

uint64_t sub_100D2D314()
{
  return sub_100D2D418();
}

uint64_t sub_100D2D334()
{
  return sub_100D2D520();
}

uint64_t sub_100D2D348()
{
  return Image.init(_:bundle:)(0xD00000000000001CLL, 0x8000000100FB1B80, 0);
}

uint64_t sub_100D2D36C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F53C();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100D2D3AC()
{
  unint64_t result;

  result = qword_10140F300;
  if (!qword_10140F300)
  {
    result = swift_getWitnessTable(&unk_100F335B8, &type metadata for CRLTipConnectionLinesEntryPointCompact);
    atomic_store(result, (unint64_t *)&qword_10140F300);
  }
  return result;
}

unint64_t sub_100D2D3F0(uint64_t a1)
{
  unint64_t result;

  result = sub_10054F53C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100D2D418()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  v10[0] = v5;
  v10[1] = v7;
  v8 = sub_1004D292C();
  return Text.init<A>(_:)(v10, &type metadata for String, v8);
}

uint64_t sub_100D2D520()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  v10[0] = v5;
  v10[1] = v7;
  v8 = sub_1004D292C();
  return Text.init<A>(_:)(v10, &type metadata for String, v8);
}

uint64_t sub_100D2D60C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  char v56[24];
  char v57[24];
  char v58[24];
  char v59[32];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v53 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Tips.Rule(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DDEB0 != -1)
    swift_once(&qword_1013DDEB0, sub_100D2C988);
  v12 = sub_1004F2A1C(v3, (uint64_t)qword_1014813A8);
  v13 = swift_beginAccess(v12, v59, 0, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v14(v7, v12, v3, v13);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v54 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if (qword_1013DDEC8 != -1)
    swift_once(&qword_1013DDEC8, sub_100D2C9FC);
  v16 = sub_1004F2A1C(v3, (uint64_t)qword_1014813F0);
  v17 = swift_beginAccess(v16, v58, 0, 0);
  v14(v7, v16, v3, v17);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v52 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  v18 = v0;
  if (qword_1013DDEB8 != -1)
    swift_once(&qword_1013DDEB8, sub_100D2C9B4);
  v19 = sub_1004F2A1C(v3, (uint64_t)qword_1014813C0);
  v20 = swift_beginAccess(v19, v57, 0, 0);
  v14(v7, v19, v3, v20);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v51 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DDEC0 != -1)
    swift_once(&qword_1013DDEC0, sub_100D2C9D8);
  v21 = sub_1004F2A1C(v3, (uint64_t)qword_1014813D8);
  v22 = swift_beginAccess(v21, v56, 0, 0);
  v14(v7, v21, v3, v22);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v50 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DDED0 != -1)
    swift_once(&qword_1013DDED0, sub_100D2CA20);
  v23 = v2;
  v24 = sub_1004F2A1C(v3, (uint64_t)qword_101481408);
  v25 = swift_beginAccess(v24, v55, 0, 0);
  v14(v7, v24, v3, v25);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v49 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DDEA8 != -1)
    swift_once(&qword_1013DDEA8, sub_100D2C964);
  v26 = sub_1004F2A1C(v18, (uint64_t)qword_101481390);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v28 = v23;
  v27(v23, v26, v18);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v28, sub_100D2CB10, 0, v29, v30, v31);
  v32 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DDED8 != -1)
    swift_once(&qword_1013DDED8, sub_100D2CAEC);
  v33 = sub_1004F2A1C(v18, (uint64_t)qword_101481420);
  v27(v28, v33, v18);
  Tips.Rule.init<A>(_:_:)(v28, sub_100D2CE84, 0, v29, v30, v31);
  v34 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  v35 = static Tips.RuleBuilder.buildPartialBlock(first:)(v54);
  v36 = swift_bridgeObjectRelease();
  v37 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v35, v52, v36);
  swift_bridgeObjectRelease();
  v38 = swift_bridgeObjectRelease();
  v39 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v37, v51, v38);
  swift_bridgeObjectRelease();
  v40 = swift_bridgeObjectRelease();
  v41 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v39, v50, v40);
  swift_bridgeObjectRelease();
  v42 = swift_bridgeObjectRelease();
  v43 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v41, v49, v42);
  swift_bridgeObjectRelease();
  v44 = swift_bridgeObjectRelease();
  v45 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v43, v32, v44);
  swift_bridgeObjectRelease();
  v46 = swift_bridgeObjectRelease();
  v47 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v45, v34, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v47;
}

unint64_t sub_100D2DC88(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  NSString *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSString *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CKRecordID v40;
  Swift::String v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE v52[72];
  _BYTE v53[72];
  _BYTE v54[32];

  v47 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v47);
  v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD8A0 != -1)
    swift_once(&qword_1013DD8A0, sub_100A0627C);
  swift_beginAccess(&static OS_os_log.upgrade, v54, 0, 0);
  v4 = (void *)static OS_os_log.upgrade;
  v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v48, v53);
  v46 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v6 = v4;
  v7 = sub_1001E979C(a1);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v50 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v50;
  *(_QWORD *)(inited + 32) = v8;
  v11 = inited + 32;
  *(_QWORD *)(inited + 40) = v10;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v13, "Registering version: %{public}@", 31, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v11, 1, v14);

  result = sub_100D2E20C();
  v16 = result;
  if (result > a1)
  {
    v30 = swift_initStackObject(v48, &v51);
    *(_OWORD *)(v30 + 16) = xmmword_100EF5A10;
    v31 = sub_1001E979C(a1);
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v35 = v50;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = v35;
    *(_QWORD *)(v30 + 32) = v32;
    *(_QWORD *)(v30 + 40) = v34;
    v36 = sub_1001E979C(v16);
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    *(_QWORD *)(v30 + 96) = &type metadata for String;
    *(_QWORD *)(v30 + 104) = v35;
    *(_QWORD *)(v30 + 72) = v37;
    *(_QWORD *)(v30 + 80) = v39;
    sub_100757E04(&_mh_execute_header, (uint64_t)"registerVersion(_:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLDataStoreUpgradeController.swift", 101, 2, 57, "Trying to register a new version (%{public}@) that's less than the current version (%{public}@)", 95, 2u, v30);
    sub_100518FC0(v30, (uint64_t)"Trying to register a new version (%{public}@) that's less than the current version (%{public}@)");
    sub_100519194(v30, (uint64_t)"registerVersion(_:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLDataStoreUpgradeController.swift", 101, 2u, 57, (uint64_t)"Trying to register a new version (%{public}@) that's less than the current version (%{public}@)", 95, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v40, v41);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (result < a1)
  {
    v17 = *v1;
    sub_100D2E2FC(*v1, result, a1);
    v18 = (void *)static OS_os_log.upgrade;
    v19 = swift_initStackObject(v48, v52);
    *(_OWORD *)(v19 + 16) = v46;
    v20 = v18;
    v21 = sub_1001E979C(a1);
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v25 = v50;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = v25;
    *(_QWORD *)(v19 + 32) = v22;
    *(_QWORD *)(v19 + 40) = v24;
    v27 = static os_log_type_t.default.getter(v26);
    sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v27, "Persisting new last seen version: %{public}@", 44, 2, v19);
    swift_setDeallocating(v19);
    swift_arrayDestroy(v19 + 32, 1, v14);

    v28 = (uint64_t)v49;
    v29 = swift_storeEnumTagMultiPayload(v49, v47, 3);
    __chkstk_darwin(v29);
    v42 = v17;
    v43 = a1;
    LOBYTE(v44) = 0;
    v45 = v28;
    OS_dispatch_queue.sync<A>(execute:)(sub_100D2E5BC, &v46 - 3, (char *)&type metadata for () + 8);
    return sub_100D2E5DC(v28);
  }
  return result;
}

uint64_t sub_100D2E20C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  _BYTE v13[16];

  v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *v0;
  swift_storeEnumTagMultiPayload(v3, v5, 3);
  v11 = v4;
  v12 = v3;
  v6 = sub_1004B804C(&qword_1013E4250);
  OS_dispatch_queue.sync<A>(execute:)(sub_100D2E630, v10, v6);
  if (v13[8])
    v7 = &qword_100EEE440;
  else
    v7 = (uint64_t *)v13;
  v8 = *v7;
  sub_100D2E5DC((uint64_t)v3);
  return v8;
}

void sub_100D2E2FC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  NSString *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  _BYTE v27[112];
  _BYTE v28[24];

  if (qword_1013DD8A0 != -1)
    swift_once(&qword_1013DD8A0, sub_100A0627C);
  swift_beginAccess(&static OS_os_log.upgrade, v28, 0, 0);
  v6 = (void *)static OS_os_log.upgrade;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v27);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v9 = v6;
  v10 = sub_1001E979C(a2);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(inited + 56) = &type metadata for String;
  v14 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v15 = sub_1001E979C(a3);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = v18;
  v20 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v20, "Upgrading from version [%{public}@] to [%{public}@]", 51, 2, inited);
  swift_setDeallocating(inited);
  v21 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v21);

  if (a2 < 0x1000100000000)
    sub_100A760AC();
  if (a2 < 0x2000400000001)
  {
    v22 = (id)static OS_os_log.upgrade;
    v24 = static os_log_type_t.default.getter(v23);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v24, "Running upgrade code for rdar://119152219", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    __chkstk_darwin(v25);
    v26[2] = a1;
    OS_dispatch_queue.sync<A>(execute:)(sub_100D2E618, v26, (char *)&type metadata for () + 8);
  }
  if (a2 < 0x3000000000001)
    sub_100A769A4();
}

void sub_100D2E5BC()
{
  sub_100AAF624();
}

uint64_t sub_100D2E5DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100D2E618()
{
  uint64_t v0;

  sub_100A764C0(*(void **)(v0 + 16));
}

void sub_100D2E630(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100AAF770(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t destroy for CRLDataStoreUpgradeController(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
}

uint64_t initializeWithCopy for CRLDataStoreUpgradeController(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for CRLDataStoreUpgradeController(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_1004EA5C8(v6, v4);
  return a1;
}

uint64_t assignWithTake for CRLDataStoreUpgradeController(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for CRLDataStoreUpgradeController()
{
  return &type metadata for CRLDataStoreUpgradeController;
}

ValueMetadata *type metadata accessor for CRLDataStoreUpgrader()
{
  return &type metadata for CRLDataStoreUpgrader;
}

char *sub_100D2E79C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  __n128 v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t *v34;
  objc_class *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  objc_super v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v51 = a4;
  v47 = a3;
  v7 = type metadata accessor for CharacterSet(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4;
  v45 = a2;
  v46 = v11;
  v44 = a1;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v12, "crl_stringByFixingBrokenSurrogatePairs");

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v49 = v14;
  v50 = v16;
  swift_bridgeObjectRetain(v16);
  static CharacterSet.whitespacesAndNewlines.getter(v17);
  v18 = sub_1004D292C();
  v19 = StringProtocol.trimmingCharacters(in:)(v10, &type metadata for String, v18);
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  while (1)
  {
    v49 = v19;
    v50 = v21;
    v23 = swift_bridgeObjectRetain(v21);
    static CharacterSet.newlines.getter(v23);
    v24 = StringProtocol.rangeOfCharacter(from:options:range:)(v10, 0, 0, 0, 1, &type metadata for String, v18);
    v26 = v25;
    v28 = v27;
    v22(v10, v7);
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      break;
    swift_bridgeObjectRetain(v21);
    sub_100632378(v24, v26, 0x20uLL, 0xE100000000000000, v19, v21);
    v19 = v29;
    v31 = v30;
    swift_bridgeObjectRelease_n(v21, 2);
    v21 = v31;
  }
  v32 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v32 = v19 & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
    swift_bridgeObjectRelease();
    v33 = v46;
    v34 = (unint64_t *)&v46[OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle];
    *v34 = v19;
    v34[1] = v21;

    v35 = (objc_class *)type metadata accessor for CRLCommandSetBoardTitle();
    v48.receiver = v33;
    v48.super_class = v35;
    v36 = (char *)objc_msgSendSuper2(&v48, "init");

    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = sub_100633B60();
    swift_allocError(&type metadata for CRLBoardTitleValidator.Error, v37, 0, 0);
    v38 = v45;
    *(_QWORD *)v39 = v44;
    *(_QWORD *)(v39 + 8) = v38;
    *(_BYTE *)(v39 + 16) = 0;
    v40 = swift_bridgeObjectRetain(v38);
    swift_willThrow(v40);
    v36 = v46;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = type metadata accessor for CRLCommandSetBoardTitle();
    swift_deallocPartialClassInstance(v36, v41, 32, 7);
  }
  return v36;
}

void sub_100D2EA64(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle);
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle + 8);
    swift_bridgeObjectRetain(v8);
    sub_100B12B6C(v7, v8);
    swift_bridgeObjectRelease();
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

uint64_t sub_100D2EB34()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle + 8));
}

id sub_100D2EB48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetBoardTitle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandSetBoardTitle()
{
  return objc_opt_self(_TtC8Freeform23CRLCommandSetBoardTitle);
}

ValueMetadata *type metadata accessor for CRLCodableImage()
{
  return &type metadata for CRLCodableImage;
}

uint64_t sub_100D2EBBC(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  UIImage *v9;
  NSData *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v20;
  __n128 v21;
  _QWORD v22[2];

  v4 = sub_1004B804C(&qword_10140F350);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (UIImage *)objc_msgSend(a2, "UIImage", v6);
  v10 = UIImagePNGRepresentation(v9);

  if (v10)
  {
    v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = a1[3];
    v15 = a1[4];
    sub_1004BB5A4(a1, v14);
    v16 = sub_100D2F06C();
    dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLCodableImage.CodingKeys, &type metadata for CRLCodableImage.CodingKeys, v16, v14, v15);
    v22[0] = v11;
    v22[1] = v13;
    v17 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v22, v18, v4, &type metadata for Data, v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return sub_1004BBBC8(v11, v13);
  }
  else
  {
    v20 = sub_100D2F0B0();
    swift_allocError(&type metadata for CRLCodableImage.CRLCodableImageErrors, v20, 0, 0);
    return swift_willThrow(v21);
  }
}

uint64_t sub_100D2ED3C()
{
  return 0x6567616D49676E70;
}

uint64_t sub_100D2ED5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x6567616D49676E70 && a2 == 0xEC00000061746144)
  {
    result = swift_bridgeObjectRelease(0xEC00000061746144);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6567616D49676E70, 0xEC00000061746144, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100D2EE08(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D2F06C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D2EE30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D2F06C();
  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_100D2EE58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_100D2EE98(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_100D2EE80(_QWORD *a1)
{
  void **v1;

  return sub_100D2EBBC(a1, *v1);
}

id sub_100D2EE98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  id v15;
  Class isa;
  unint64_t v17;
  __n128 v18;
  _QWORD v19[2];

  v3 = sub_1004B804C(&qword_10140F338);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = (id)a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_100D2F06C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLCodableImage.CodingKeys, &type metadata for CRLCodableImage.CodingKeys, v9, v7, v8);
  if (!v1)
  {
    v10 = sub_100587AC0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, v11, v3, &type metadata for Data, v10);
    v13 = v19[0];
    v14 = v19[1];
    v15 = objc_allocWithZone((Class)CRLImage);
    sub_1004BE310(v13, v14);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v15, "initWithData:", isa);
    sub_1004BBBC8(v13, v14);

    if (v8)
    {
      sub_1004BBBC8(v13, v14);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      return v8;
    }
    v17 = sub_100D2F0B0();
    swift_allocError(&type metadata for CRLCodableImage.CRLCodableImageErrors, v17, 0, 0);
    swift_willThrow(v18);
    sub_1004BBBC8(v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v8;
}

unint64_t sub_100D2F06C()
{
  unint64_t result;

  result = qword_10140F340;
  if (!qword_10140F340)
  {
    result = swift_getWitnessTable(&unk_100F33974, &type metadata for CRLCodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F340);
  }
  return result;
}

unint64_t sub_100D2F0B0()
{
  unint64_t result;

  result = qword_10140F348;
  if (!qword_10140F348)
  {
    result = swift_getWitnessTable(&unk_100F33934, &type metadata for CRLCodableImage.CRLCodableImageErrors);
    atomic_store(result, (unint64_t *)&qword_10140F348);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCodableImage.CRLCodableImageErrors()
{
  return &type metadata for CRLCodableImage.CRLCodableImageErrors;
}

uint64_t _s8Freeform15CRLCodableImageV21CRLCodableImageErrorsOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100D2F148 + 4 * asc_100F33770[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100D2F168 + 4 * byte_100F33775[v4]))();
}

_BYTE *sub_100D2F148(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100D2F168(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D2F170(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D2F178(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D2F180(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D2F188(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLCodableImage.CodingKeys()
{
  return &type metadata for CRLCodableImage.CodingKeys;
}

unint64_t sub_100D2F1A8()
{
  unint64_t result;

  result = qword_10140F358;
  if (!qword_10140F358)
  {
    result = swift_getWitnessTable(&unk_100F338A4, &type metadata for CRLCodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F358);
  }
  return result;
}

unint64_t sub_100D2F1F0()
{
  unint64_t result;

  result = qword_10140F360;
  if (!qword_10140F360)
  {
    result = swift_getWitnessTable(&unk_100F3390C, &type metadata for CRLCodableImage.CRLCodableImageErrors);
    atomic_store(result, (unint64_t *)&qword_10140F360);
  }
  return result;
}

unint64_t sub_100D2F238()
{
  unint64_t result;

  result = qword_10140F368;
  if (!qword_10140F368)
  {
    result = swift_getWitnessTable(&unk_100F33814, &type metadata for CRLCodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F368);
  }
  return result;
}

unint64_t sub_100D2F280()
{
  unint64_t result;

  result = qword_10140F370;
  if (!qword_10140F370)
  {
    result = swift_getWitnessTable(&unk_100F3383C, &type metadata for CRLCodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F370);
  }
  return result;
}

double *sub_100D2F2C4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1006006EC(0, v1, 0);
    v3 = (_QWORD *)(a1 + 56);
    do
    {
      v4 = *(v3 - 3);
      v5 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      v8 = swift_bridgeObjectRetain(*v3);
      v9 = static String._fromSubstring(_:)(v4, v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (*(_QWORD *)&v13 >= *(_QWORD *)&v12 >> 1)
        sub_1006006EC(*(_QWORD *)&v12 > 1uLL, *(_QWORD *)&v13 + 1, 1);
      *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * *(_QWORD *)&v13];
      *((_QWORD *)v14 + 4) = v9;
      *((_QWORD *)v14 + 5) = v11;
      v3 += 4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100D2F3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_unfair_lock_s *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;

  v8 = *(os_unfair_lock_s **)(a3 + 16);
  swift_retain(a3);
  os_unfair_lock_lock(v8);
  if (*(_QWORD *)(a4 + 16) && (v9 = sub_100842E98(a1, a2), (v10 & 1) != 0))
    v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v9);
  else
    v11 = 0;
  os_unfair_lock_unlock(v8);
  swift_release(a3);
  return v11;
}

uint64_t sub_100D2F458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  unint64_t v7;
  char v8;
  id *v9;
  uint64_t v10;

  v6 = *(os_unfair_lock_s **)(a2 + 16);
  swift_retain(a2);
  os_unfair_lock_lock(v6);
  if (*(_QWORD *)(a3 + 16) && (v7 = sub_1008432BC(a1), (v8 & 1) != 0))
  {
    v9 = (id *)(*(_QWORD *)(a3 + 56) + 24 * v7);
    v10 = (uint64_t)*v9;
    sub_100836CEC(*v9, v9[1], v9[2]);
  }
  else
  {
    v10 = 1;
  }
  os_unfair_lock_unlock(v6);
  swift_release(a2);
  return v10;
}

uint64_t sub_100D2F504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void sub_100D2F524(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(void *, uint64_t, uint64_t);
  id v8;

  v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v8 = a2;
  v7(a2, a3, a4);

}

void sub_100D2F590(uint64_t a1, unint64_t a2)
{
  void *v2;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char isEscapingClosureAtFileLocation;
  uint64_t aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *, uint64_t, uint64_t);
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "numberFromString:", v5);

  if (v6)
  {
    objc_msgSend(v6, "doubleValue");
    v8 = v7;

    KeyPath = swift_getKeyPath(byte_100F33A68);
    v10 = (void *)sub_100D30688(KeyPath, v8 >= 0);
    swift_release(KeyPath);
    if (v10)
    {
      v11 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0)
        v11 = a1;
      v12 = 7;
      if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
        v12 = 11;
      aBlock = 15;
      v26 = v12 | (v11 << 16);
      v31 = a1;
      v32 = a2;
      swift_bridgeObjectRetain(a2);
      v13 = sub_1004B804C(&qword_1013E6E88);
      v14 = sub_100D302D8();
      v15 = sub_1004D292C();
      v16 = _NSRange.init<A, B>(_:in:)(&aBlock, &v31, v13, &type metadata for String, v14, v15);
      v18 = v17;
      v31 = 0;
      v32 = 0;
      v33 = 1;
      v19 = String._bridgeToObjectiveC()();
      v20 = (_QWORD *)swift_allocObject(&unk_1012A1E40, 40, 7);
      v20[2] = &v31;
      v20[3] = a1;
      v20[4] = a2;
      v21 = swift_allocObject(&unk_1012A1E68, 32, 7);
      *(_QWORD *)(v21 + 16) = sub_100D356B8;
      *(_QWORD *)(v21 + 24) = v20;
      v29 = sub_1005A46E8;
      v30 = v21;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v26 = *(_QWORD *)"";
      v27 = sub_100D2F524;
      v28 = &unk_1012A1E80;
      v22 = _Block_copy(&aBlock);
      v23 = v30;
      swift_bridgeObjectRetain(a2);
      swift_retain(v21);
      objc_msgSend(v10, "enumerateMatchesInString:options:range:usingBlock:", v19, 0, v16, v18, v22, swift_release(v23).n128_f64[0]);

      _Block_release(v22);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 95, 271, 75, 1);
      swift_release(v21);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        __break(1u);
      else
        swift_release(v20);
    }
  }
}

uint64_t sub_100D2F83C(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  NSString v6;
  unsigned __int8 v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char isEscapingClosureAtFileLocation;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, void *, uint64_t, uint64_t);
  void *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;

  v3 = v2;
  v34 = 0;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v3, "getValueFromString:rangePtr:valuePtr:", v6, 0, &v34);

  if ((v7 & 1) == 0)
    return 0;
  v8 = v34;
  v9 = v3;
  v10 = sub_100D33168(v9, v8 >= 0);
  v12 = v11;
  v14 = v13;

  if (!v10)
    return 0;
  v15 = v10;
  v16 = v12;
  v17 = v14;
  sub_100510E00(v10, v12, v14);

  v18 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v18 = a1;
  v19 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v19 = 11;
  v34 = 15;
  v35 = v19 | (v18 << 16);
  v40 = a1;
  v41 = a2;
  swift_bridgeObjectRetain(a2);
  v20 = sub_1004B804C(&qword_1013E6E88);
  v21 = sub_100D302D8();
  v22 = sub_1004D292C();
  v23 = _NSRange.init<A, B>(_:in:)(&v34, &v40, v20, &type metadata for String, v21, v22);
  v25 = v24;
  v40 = 0;
  v41 = 0;
  v42 = 1;
  v26 = String._bridgeToObjectiveC()();
  v27 = (_QWORD *)swift_allocObject(&unk_1012A1D50, 40, 7);
  v27[2] = &v40;
  v27[3] = a1;
  v27[4] = a2;
  v28 = swift_allocObject(&unk_1012A1D78, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_100D335A4;
  *(_QWORD *)(v28 + 24) = v27;
  v38 = sub_10054E858;
  v39 = v28;
  v34 = (uint64_t)_NSConcreteStackBlock;
  v35 = *(_QWORD *)"";
  v36 = sub_100D2F524;
  v37 = &unk_1012A1D90;
  v29 = _Block_copy(&v34);
  v30 = v39;
  swift_bridgeObjectRetain(a2);
  swift_retain(v28);
  objc_msgSend(v15, "enumerateMatchesInString:options:range:usingBlock:", v26, 0, v23, v25, v29, swift_release(v30).n128_f64[0]);

  _Block_release(v29);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v28, "", 95, 271, 75, 1);
  swift_release(v28);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  v32 = v40;
  swift_release(v27);
  return v32;
}

NSNumber sub_100D2FB2C()
{
  NSNumber result;

  sub_10067AC6C();
  result.super.super.isa = NSNumber.init(floatLiteral:)(1.0e-100).super.super.isa;
  qword_10140F378 = (uint64_t)result.super.super.isa;
  return result;
}

void sub_100D2FBB8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = objc_msgSend(v0, "zeroSymbol");
  if (v1)
  {
    v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v4 = v3;
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v8 = swift_allocObject(v7, 152, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5550;
  v9 = objc_msgSend(v0, "positiveFormat");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;
    v14 = v13;

    *(_QWORD *)(v8 + 56) = &type metadata for String;
    v15 = sub_1004CFC2C();
    *(_QWORD *)(v8 + 64) = v15;
    *(_QWORD *)(v8 + 32) = v12;
    *(_QWORD *)(v8 + 40) = v14;
    *(_QWORD *)(v8 + 96) = &type metadata for String;
    *(_QWORD *)(v8 + 104) = v15;
    if (!v6)
    {
      if (qword_1013DDEE0 != -1)
        swift_once(&qword_1013DDEE0, sub_100D2FB2C);
      v16 = objc_msgSend(v0, "stringForObjectValue:", qword_10140F378);
      if (v16)
      {
        v17 = v16;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v4 = v18;
        v6 = v19;

      }
      else
      {
        v4 = 0;
        v6 = 0xE000000000000000;
      }
    }
    *(_QWORD *)(v8 + 72) = v4;
    *(_QWORD *)(v8 + 80) = v6;
    v20 = objc_msgSend(v0, "negativeFormat");
    if (v20)
    {
      v21 = v20;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;
      v25 = v24;

      *(_QWORD *)(v8 + 136) = &type metadata for String;
      *(_QWORD *)(v8 + 144) = v15;
      *(_QWORD *)(v8 + 112) = v23;
      *(_QWORD *)(v8 + 120) = v25;
      String.init(format:_:)(0x40253B40253B4025, 0xE800000000000000, v8);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
}

void sub_100D2FDCC()
{
  void *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  NSString v10;
  NSString v11;
  NSString v12;
  NSString v13;
  NSString v14;

  v1 = v0;
  v2 = sub_1004D292C();
  v3 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(59, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v2);
  swift_bridgeObjectRelease();
  v4 = sub_100D2F2C4(v3);
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)v4 + 2);
  switch(v5)
  {
    case 3:
      swift_bridgeObjectRetain(*((_QWORD *)v4 + 5));
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setPositiveFormat:", v12, swift_bridgeObjectRelease().n128_f64[0]);

      if (*((_QWORD *)v4 + 2) < 3uLL)
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain(*((_QWORD *)v4 + 9));
        v13 = String._bridgeToObjectiveC()();
        objc_msgSend(v1, "setNegativeFormat:", v13, swift_bridgeObjectRelease().n128_f64[0]);

        if (*((_QWORD *)v4 + 2) >= 2uLL)
        {
          swift_bridgeObjectRetain(*((_QWORD *)v4 + 7));
          swift_bridgeObjectRelease();
          v11 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          objc_msgSend(v1, "setZeroSymbol:", v11);
LABEL_12:

          return;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    case 2:
      swift_bridgeObjectRetain(*((_QWORD *)v4 + 5));
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setPositiveFormat:", v14, swift_bridgeObjectRelease().n128_f64[0]);

      if (*((_QWORD *)v4 + 2) >= 2uLL)
      {
        swift_bridgeObjectRetain(*((_QWORD *)v4 + 7));
        swift_bridgeObjectRelease();
        v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        objc_msgSend(v1, "setNegativeFormat:", v11);
        goto LABEL_12;
      }
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRetain(*((_QWORD *)v4 + 5));
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setPositiveFormat:", v6, swift_bridgeObjectRelease().n128_f64[0]);

      v7 = *((_QWORD *)v4 + 4);
      v8 = (void *)*((_QWORD *)v4 + 5);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = v7;
      v9._object = v8;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setNegativeFormat:", v10, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v1, "setZeroSymbol:", 0);
      if (qword_1013DDEE0 != -1)
        swift_once(&qword_1013DDEE0, sub_100D2FB2C);
      v11 = objc_msgSend(v1, "stringForObjectValue:", qword_10140F378);
      objc_msgSend(v1, "setZeroSymbol:", v11);
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
}

id sub_100D300E4()
{
  id v0;
  id result;

  v0 = objc_allocWithZone((Class)NSRegularExpression);
  result = sub_100D32C7C(0xD000000000000012, 0x800000010100D7D0, 0);
  qword_10140F380 = (uint64_t)result;
  return result;
}

void sub_100D3016C(void *a1, uint64_t a2, _BYTE *a3, BOOL *a4, _QWORD *a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    v8 = a1;
    v9 = objc_msgSend(v8, "rangeAtIndex:", 1);
    v10 = objc_msgSend(v8, "rangeAtIndex:", 2);
    v12 = v11;
    v13 = NSNotFound.getter(v10);

    *a4 = v9 != (id)v13;
    *a5 = v12;
  }
  *a3 = 1;
}

uint64_t sub_100D3020C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  _QWORD v20[2];

  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = v6;
  v9 = v8;
  v10 = a1;
  v11 = a4(v7, v9);
  if ((v13 & 1) != 0)
  {
    v17 = NSNotFound.getter(v11);

    swift_bridgeObjectRelease();
  }
  else
  {
    v20[0] = v11;
    v20[1] = v12;
    v19[0] = v7;
    v19[1] = v9;
    v14 = sub_1004B804C(&qword_1013E6E88);
    v15 = sub_100D302D8();
    v16 = sub_1004D292C();
    v17 = _NSRange.init<A, B>(_:in:)(v20, v19, v14, &type metadata for String, v15, v16);

  }
  return v17;
}

unint64_t sub_100D302D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6E90;
  if (!qword_1013E6E90)
  {
    v1 = sub_1004CB6A4(&qword_1013E6E88);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E6E90);
  }
  return result;
}

uint64_t sub_100D30324(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  id v6;
  id v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend(v1, "copyFormatterPropertyForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v9, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1004C4938((uint64_t)v9, (uint64_t)v10, &qword_1013E0230);
  if (!v11)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E0230);
    return 2;
  }
  v4 = sub_10067AC6C();
  if ((swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 2;
  v5 = v8;
  v6 = objc_msgSend(v8, "BOOLValue");

  return (uint64_t)v6;
}

id sub_100D303FC(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  id v6;
  id v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend(v1, "copyFormatterPropertyForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v9, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1004C4938((uint64_t)v9, (uint64_t)v10, &qword_1013E0230);
  if (!v11)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013E0230);
    return 0;
  }
  v4 = sub_10067AC6C();
  if ((swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v8;
  v6 = objc_msgSend(v8, "integerValue");

  return v6;
}

uint64_t sub_100D304DC(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v2 = objc_msgSend(v1, "copyFormatterPropertyForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1004C4938((uint64_t)v6, (uint64_t)v7, &qword_1013E0230);
  if (v8)
  {
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1004CB800((uint64_t)v7, &qword_1013E0230);
    return 0;
  }
}

void sub_100D305A0(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v2 = objc_msgSend(v1, "copyFormatterPropertyForKey:", a1);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v8, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1004C4938((uint64_t)v8, (uint64_t)v9, &qword_1013E0230);
  if (v10)
  {
    v4 = sub_10067AC6C();
    if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
    {
      v5 = v7;
      v6 = (unint64_t)objc_msgSend(v7, "integerValue");

      if ((v6 & 0x8000000000000000) != 0)
        __break(1u);
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v9, &qword_1013E0230);
  }
}

uint64_t sub_100D30688(uint64_t a1, char a2)
{
  void *v2;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;
  _QWORD v16[3];

  v5 = objc_msgSend(v2, "crl_numberFormatterForAnalysis");
  v6 = sub_100D32D54(v5, a2);
  v8 = v7;
  v10 = v9;

  if (!v6)
    return 0;
  v16[0] = v6;
  v16[1] = v8;
  v16[2] = v10;
  v11 = v6;
  v12 = v8;
  v13 = v10;
  swift_getAtKeyPath(v16, a1);
  sub_100510E00(v6, v8, v10);

  return v15;
}

void sub_100D30758(void *a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  if (a1)
  {
    v6 = a1;
    if ((uint64_t)objc_msgSend(v6, "numberOfRanges") < 1)
    {

    }
    else
    {
      v7 = Range<>.init(_:in:)(objc_msgSend(v6, "rangeAtIndex:", 1));
      v9 = v8;
      v11 = v10;

      *(_QWORD *)a4 = v7;
      *(_QWORD *)(a4 + 8) = v9;
      *(_BYTE *)(a4 + 16) = v11 & 1;
    }
  }
  *a3 = 1;
}

uint64_t sub_100D307FC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  Swift::UInt8 v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  Swift::Int v47;
  _OWORD v48[4];
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v6);
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v46 - v14;
  Hasher.init()(v48);
  Hasher._combine(_:)(1uLL);
  v46[1] = a2;
  if ((a1 & 1) != 0)
  {
    v16 = objc_msgSend(v2, "positiveFormat");
    if (v16)
    {
LABEL_3:
      v17 = v16;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;
      v21 = v20;

      goto LABEL_6;
    }
  }
  else
  {
    v16 = objc_msgSend(v2, "negativeFormat");
    if (v16)
      goto LABEL_3;
  }
  *(_QWORD *)&v50 = objc_msgSend(v2, "numberStyle");
  v19 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v21 = v22;
LABEL_6:
  String.hash(into:)(v48, v19, v21);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(a1 & 1);
  v23 = (objc_msgSend(v3, "alwaysShowsDecimalSeparator") & 1) != 0
     || (uint64_t)objc_msgSend(v3, "minimumFractionDigits") > 0;
  v24 = (uint64_t)objc_msgSend(v3, "maximumFractionDigits") > 0 || v23;
  Hasher._combine(_:)(v24);
  v25 = objc_msgSend(v3, "currencyCode");
  if (v25)
  {
    v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;
    v30 = v29;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v30);
    String.hash(into:)(v48, v28, v30);
    swift_bridgeObjectRelease_n(v30, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v31 = objc_msgSend(v3, "currencySymbol");
  if (v31)
  {
    v32 = v31;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;
    v36 = v35;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v36);
    String.hash(into:)(v48, v34, v36);
    swift_bridgeObjectRelease_n(v36, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v37 = objc_msgSend(v3, "locale");
  if (!v37)
  {
    v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_22;
  }
  v38 = v37;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)(v37);

  v39 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v39(v8, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)v40 == 1)
  {
LABEL_22:
    static Locale.current.getter(v40);
    v41 = sub_1004CB800((uint64_t)v8, &qword_1013E1748);
    goto LABEL_23;
  }
  v41 = ((uint64_t (*)(char *, char *, uint64_t))v39)(v15, v8, v9);
LABEL_23:
  v42 = Locale.identifier.getter(v41);
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  String.hash(into:)(v48, v42, v44);
  swift_bridgeObjectRelease();
  v52 = v48[2];
  v53 = v48[3];
  v54 = v49;
  v50 = v48[0];
  v51 = v48[1];
  v47 = Hasher.finalize()();
  return AnyHashable.init<A>(_:)(&v47, &type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_100D30BF8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  Swift::Int v43;
  _OWORD v44[4];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v3 = v2;
  v42[1] = a2;
  v5 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v5);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v42 - v9;
  v11 = type metadata accessor for Locale(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()(v44);
  Hasher._combine(_:)(2uLL);
  v15 = objc_msgSend(v2, "format");
  if (v15 || (v15 = objc_msgSend(v2, "createStringWithValue:", 100.0)) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;
    v19 = v18;

  }
  else
  {
    v17 = 0;
    v19 = 0xE000000000000000;
  }
  String.hash(into:)(v44, v17, v19);
  v20 = objc_msgSend(v3, "currencyCode", swift_bridgeObjectRelease().n128_f64[0]);
  if (v20)
  {
    v21 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;
    v25 = v24;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(v44, v23, v25);
    swift_bridgeObjectRelease_n(v25, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v26 = objc_msgSend(v3, "currencySymbol");
  if (v26)
  {
    v27 = v26;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;
    v31 = v30;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v31);
    String.hash(into:)(v44, v29, v31);
    swift_bridgeObjectRelease_n(v31, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(a1 & 1);
  v32 = objc_msgSend(v3, "locale");
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, "locale");

    if (v34)
    {
      static Locale._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, v35, 1, v11);
    sub_1004C4938((uint64_t)v7, (uint64_t)v10, &qword_1013E1748);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if ((_DWORD)v36 != 1)
    {
      v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      goto LABEL_18;
    }
  }
  else
  {
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  static Locale.current.getter(v36);
  v37 = sub_1004CB800((uint64_t)v10, &qword_1013E1748);
LABEL_18:
  v38 = Locale.identifier.getter(v37);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  String.hash(into:)(v44, v38, v40);
  swift_bridgeObjectRelease();
  v48 = v44[2];
  v49 = v44[3];
  v50 = v45;
  v46 = v44[0];
  v47 = v44[1];
  v43 = Hasher.finalize()();
  return AnyHashable.init<A>(_:)(&v43, &type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_100D30FA8()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __n128 v36;
  __int128 v38;
  __int128 v39;

  v1 = *((_BYTE *)v0 + 216);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  if ((v1 & 1) != 0)
  {
    v3 = swift_allocObject(v2, 112, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EF5A10;
    v11 = *((_QWORD *)v0 + 23);
    v10 = *((_QWORD *)v0 + 24);
    *(_QWORD *)(v3 + 56) = &type metadata for String;
    v12 = sub_1004CFC2C();
    *(_QWORD *)(v3 + 64) = v12;
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = v10;
    swift_bridgeObjectRetain(v10);
    v13 = sub_100D31D94();
    *(_QWORD *)(v3 + 96) = &type metadata for String;
    *(_QWORD *)(v3 + 104) = v12;
    *(_QWORD *)(v3 + 72) = v13;
    *(_QWORD *)(v3 + 80) = v14;
    v8 = 0x294025402528;
    v9 = 0xE600000000000000;
  }
  else
  {
    v3 = swift_allocObject(v2, 72, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EF5E40;
    v4 = sub_100D31D94();
    v6 = v5;
    *(_QWORD *)(v3 + 56) = &type metadata for String;
    *(_QWORD *)(v3 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v3 + 32) = v4;
    *(_QWORD *)(v3 + 40) = v6;
    v8 = 692069672;
    v9 = 0xE400000000000000;
  }
  v15 = String.init(format:arguments:)(v8, v9, v3, v7);
  v17 = v16;
  swift_bridgeObjectRelease();
  v19 = *((_QWORD *)v0 + 5);
  v18 = *((_QWORD *)v0 + 6);
  if (!v19 && (v20 = 0xE000000000000000, v18 == 0xE000000000000000)
    || (v20 = 0xE000000000000000,
        (_stringCompareWithSmolCheck(_:_:expecting:)(*((_QWORD *)v0 + 5), *((_QWORD *)v0 + 6), 0, 0xE000000000000000, 0) & 1) != 0))
  {
    v21 = 0;
  }
  else
  {
    v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v18;
    v24 = swift_bridgeObjectRetain(v18);
    v21 = String.init(format:arguments:)(2768933, 0xE300000000000000, v23, v24);
    v20 = v25;
    swift_bridgeObjectRelease();
  }
  switch(*((_QWORD *)v0 + 4))
  {
    case 0:
      v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v27 = swift_allocObject(v26, 192, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100EF5E30;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      v28 = sub_1004CFC2C();
      v29 = v0[1];
      v39 = *v0;
      *(_OWORD *)(v27 + 72) = v39;
      *(_QWORD *)(v27 + 64) = v28;
      *(_QWORD *)(v27 + 32) = v21;
      *(_QWORD *)(v27 + 40) = v20;
      *(_QWORD *)(v27 + 96) = &type metadata for String;
      *(_QWORD *)(v27 + 104) = v28;
      goto LABEL_13;
    case 1:
      v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v27 = swift_allocObject(v31, 192, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100EF5E30;
      v39 = *v0;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      v28 = sub_1004CFC2C();
      v29 = v0[1];
      *(_OWORD *)(v27 + 32) = *v0;
      *(_QWORD *)(v27 + 96) = &type metadata for String;
      *(_QWORD *)(v27 + 104) = v28;
      *(_QWORD *)(v27 + 64) = v28;
      *(_QWORD *)(v27 + 72) = v21;
      *(_QWORD *)(v27 + 80) = v20;
LABEL_13:
      *(_QWORD *)(v27 + 136) = &type metadata for String;
      *(_QWORD *)(v27 + 144) = v28;
      *(_QWORD *)(v27 + 112) = v15;
      *(_QWORD *)(v27 + 120) = v17;
      goto LABEL_15;
    case 2:
      v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v27 = swift_allocObject(v32, 192, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100EF5E30;
      v39 = *v0;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      v28 = sub_1004CFC2C();
      v29 = v0[1];
      *(_OWORD *)(v27 + 32) = *v0;
      *(_QWORD *)(v27 + 96) = &type metadata for String;
      *(_QWORD *)(v27 + 104) = v28;
      *(_QWORD *)(v27 + 64) = v28;
      *(_QWORD *)(v27 + 72) = v15;
      *(_QWORD *)(v27 + 80) = v17;
      *(_QWORD *)(v27 + 136) = &type metadata for String;
      *(_QWORD *)(v27 + 144) = v28;
      *(_QWORD *)(v27 + 112) = v21;
      *(_QWORD *)(v27 + 120) = v20;
LABEL_15:
      v38 = v29;
      *(_QWORD *)(v27 + 176) = &type metadata for String;
      *(_QWORD *)(v27 + 184) = v28;
      *(_OWORD *)(v27 + 152) = v29;
      goto LABEL_17;
    case 3:
      v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v27 = swift_allocObject(v33, 192, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100EF5E30;
      v39 = *v0;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      v34 = sub_1004CFC2C();
      v35 = v0[1];
      *(_OWORD *)(v27 + 32) = *v0;
      *(_QWORD *)(v27 + 96) = &type metadata for String;
      *(_QWORD *)(v27 + 104) = v34;
      *(_QWORD *)(v27 + 64) = v34;
      *(_QWORD *)(v27 + 72) = v15;
      *(_QWORD *)(v27 + 80) = v17;
      v38 = v35;
      *(_QWORD *)(v27 + 136) = &type metadata for String;
      *(_QWORD *)(v27 + 144) = v34;
      *(_OWORD *)(v27 + 112) = v35;
      *(_QWORD *)(v27 + 176) = &type metadata for String;
      *(_QWORD *)(v27 + 184) = v34;
      *(_QWORD *)(v27 + 152) = v21;
      *(_QWORD *)(v27 + 160) = v20;
LABEL_17:
      sub_1006E1190((uint64_t)&v39);
      sub_1006E1190((uint64_t)&v38);
      v30 = String.init(format:arguments:)(0xD000000000000019, 0x800000010100D7B0, v27, v36);
      swift_bridgeObjectRelease();
      break;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = 0x64696C61766E697DLL;
      break;
  }
  return v30;
}

uint64_t sub_100D31384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_100D31D94();
  v3 = v2;
  v4 = sub_100D32078();
  v6 = v5;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v8 = swift_allocObject(v7, 112, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v9 = sub_1004CFC2C();
  *(_QWORD *)(v8 + 32) = v1;
  *(_QWORD *)(v8 + 40) = v3;
  *(_QWORD *)(v8 + 96) = &type metadata for String;
  *(_QWORD *)(v8 + 104) = v9;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = v4;
  *(_QWORD *)(v8 + 80) = v6;
  v11 = String.init(format:arguments:)(0x40257C40253A3F28, 0xE900000000000029, v8, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v0 + 216) & 1) != 0)
  {
    v14 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5A10;
    v19 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = v9;
    *(_QWORD *)(v14 + 32) = v19;
    *(_QWORD *)(v14 + 40) = v18;
    *(_QWORD *)(v14 + 96) = &type metadata for String;
    *(_QWORD *)(v14 + 104) = v9;
    *(_QWORD *)(v14 + 72) = v11;
    *(_QWORD *)(v14 + 80) = v13;
    v15 = swift_bridgeObjectRetain(v18);
    v16 = 0x40253A3F2840255ELL;
    v17 = 0xEA00000000002429;
  }
  else
  {
    v14 = swift_allocObject(v7, 72, 7);
    v15 = (__n128)xmmword_100EF5E40;
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = v9;
    *(_QWORD *)(v14 + 32) = v11;
    *(_QWORD *)(v14 + 40) = v13;
    v16 = 608183646;
    v17 = 0xE400000000000000;
  }
  v20 = String.init(format:arguments:)(v16, v17, v14, v15);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100D3150C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[5];
  v6 = v0[6];
  v8 = 0xE000000000000000;
  if (v7)
    v9 = 0;
  else
    v9 = v6 == 0xE000000000000000;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v38 = 0;
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v11 + 32) = v7;
    *(_QWORD *)(v11 + 40) = v6;
    v12 = swift_bridgeObjectRetain(v6);
    v38 = String.init(format:arguments:)(2768933, 0xE300000000000000, v11, v12);
    v8 = v13;
    swift_bridgeObjectRelease();
  }
  v14 = v1[1];
  v39 = *v1;
  v40 = v14;
  swift_bridgeObjectRetain(v14);
  static CharacterSet.whitespaces.getter(v15);
  v16 = sub_1004D292C();
  v17 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v16);
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v5, v2);
  swift_bridgeObjectRelease();
  v21 = v1[3];
  v39 = v1[2];
  v40 = v21;
  swift_bridgeObjectRetain(v21);
  static CharacterSet.whitespaces.getter(v22);
  v23 = StringProtocol.trimmingCharacters(in:)(v5, &type metadata for String, v16);
  v25 = v24;
  v20(v5, v2);
  swift_bridgeObjectRelease();
  v26 = v1[4];
  if ((unint64_t)(v26 - 1) < 2)
  {
    v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v28 = swift_allocObject(v31, 152, 7);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5550;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(v28 + 32) = v17;
    *(_QWORD *)(v28 + 40) = v19;
    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v29;
    v32 = v38;
    *(_QWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 72) = v32;
    *(_QWORD *)(v28 + 80) = v8;
  }
  else
  {
    if (v26 == 3)
    {
      v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v28 = swift_allocObject(v33, 152, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100EF5550;
      *(_QWORD *)(v28 + 56) = &type metadata for String;
      v34 = sub_1004CFC2C();
      *(_QWORD *)(v28 + 32) = v17;
      *(_QWORD *)(v28 + 40) = v19;
      *(_QWORD *)(v28 + 96) = &type metadata for String;
      *(_QWORD *)(v28 + 104) = v34;
      *(_QWORD *)(v28 + 64) = v34;
      *(_QWORD *)(v28 + 72) = v23;
      *(_QWORD *)(v28 + 80) = v25;
      *(_QWORD *)(v28 + 136) = &type metadata for String;
      *(_QWORD *)(v28 + 144) = v34;
      *(_QWORD *)(v28 + 112) = v38;
      *(_QWORD *)(v28 + 120) = v8;
      goto LABEL_15;
    }
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0x64696C61766E697DLL;
    }
    v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v28 = swift_allocObject(v27, 152, 7);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5550;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v29 = sub_1004CFC2C();
    *(_QWORD *)(v28 + 32) = v38;
    *(_QWORD *)(v28 + 40) = v8;
    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v29;
    *(_QWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 72) = v17;
    *(_QWORD *)(v28 + 80) = v19;
  }
  *(_QWORD *)(v28 + 136) = &type metadata for String;
  *(_QWORD *)(v28 + 144) = v29;
  *(_QWORD *)(v28 + 112) = v23;
  *(_QWORD *)(v28 + 120) = v25;
LABEL_15:
  v35 = String.init(format:arguments:)(0xD000000000000014, 0x800000010100D720, v28, v30);
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_100D31830(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v33 = 0;
  v34 = 0xE000000000000000;
  v29 = a1 & 0xFFFFFFFFFFFFLL;
  v30 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a2) & 0xF;
  else
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v27 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v28 = a2 & 0xFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain(a2);
  v5 = 0;
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v13 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v5 << 16, a1, a2);
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v31 = a1;
        v32 = v28;
        v11 = &v31;
        v12 = v30;
      }
      else
      {
        v11 = (uint64_t *)v27;
        v12 = v29;
        if ((a1 & 0x1000000000000000) == 0)
          v11 = (uint64_t *)_StringObject.sharedUTF8.getter(a1, a2);
      }
      v13 = _decodeScalar(_:startingAt:)(v11, v12, v5);
    }
    v15 = v13;
    v16 = v14;
    if (qword_1013DDEF8 != -1)
      swift_once(&qword_1013DDEF8, sub_100D32BCC);
    v17 = type metadata accessor for CharacterSet(0);
    sub_1004F2A1C(v17, (uint64_t)qword_10140F398);
    if ((CharacterSet.contains(_:)(v15) & 1) != 0)
    {
      if (v15 > 0x7F)
      {
        v20 = (v15 & 0x3F) << 8;
        if (v15 >= 0x800)
        {
          v22 = (v20 | (v15 >> 6) & 0x3F) << 8;
          v23 = (((v22 | (v15 >> 12) & 0x3F) << 8) | (v15 >> 18)) - 2122219023;
          v6 = (v22 | (v15 >> 12)) + 8487393;
          if (WORD1(v15))
            v6 = v23;
        }
        else
        {
          v6 = (v20 | (v15 >> 6)) + 33217;
        }
      }
      else
      {
        v6 = v15 + 1;
      }
      v7 = __clz(v6);
      v31 = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (v7 >> 3))));
      v8._countAndFlagsBits = static String._uncheckedFromUTF8(_:)(&v31, 4 - (v7 >> 3));
      v31 = 92;
      v32 = 0xE100000000000000;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9 = v31;
      v10 = v32;
    }
    else
    {
      if (v15 > 0x7F)
      {
        v21 = (v15 & 0x3F) << 8;
        if (v15 >= 0x800)
        {
          v24 = (v21 | (v15 >> 6) & 0x3F) << 8;
          v25 = (((v24 | (v15 >> 12) & 0x3F) << 8) | (v15 >> 18)) - 2122219023;
          v18 = (v24 | (v15 >> 12)) + 8487393;
          if (WORD1(v15))
            v18 = v25;
        }
        else
        {
          v18 = (v21 | (v15 >> 6)) + 33217;
        }
      }
      else
      {
        v18 = v15 + 1;
      }
      v19 = __clz(v18);
      v31 = (v18 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (v19 >> 3))));
      v9 = static String._uncheckedFromUTF8(_:)(&v31, 4 - (v19 >> 3));
    }
    String.append(_:)(*(Swift::String *)&v9);
    v5 += v16;
    swift_bridgeObjectRelease();
  }
  while (v5 < v3);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100D31B1C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = a1;
  if ((a1 || a2 != 0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0, 0xE000000000000000, 0) & 1) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
      v4 = HIBYTE(a2) & 0xF;
    else
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    if (!v4)
      return 29532;
    swift_bridgeObjectRetain(a2);
    v5 = 0;
    while (1)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v7 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v5 << 16, v3, a2);
        v9 = v8;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v12[0] = v3;
          v12[1] = a2 & 0xFFFFFFFFFFFFFFLL;
          v7 = *((unsigned __int8 *)v12 + v5);
          if (*((char *)v12 + v5) < 0)
            __asm { BR              X9 }
        }
        else
        {
          v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((v3 & 0x1000000000000000) == 0)
            v6 = _StringObject.sharedUTF8.getter(v3, a2);
          v7 = *(unsigned __int8 *)(v6 + v5);
          if (*(char *)(v6 + v5) < 0)
            __asm { BR              X9 }
        }
        v9 = 1;
      }
      if (qword_1013DDF00 != -1)
        swift_once(&qword_1013DDF00, sub_100D32C34);
      v10 = type metadata accessor for CharacterSet(0);
      sub_1004F2A1C(v10, (uint64_t)qword_10140F3B0);
      if ((CharacterSet.contains(_:)(v7) & 1) == 0)
        break;
      v5 += v9;
      if (v5 >= v4)
      {
        swift_bridgeObjectRelease();
        return 29532;
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain(a2);
  return v3;
}

uint64_t sub_100D31D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  char v51;

  v1 = sub_100D32248(*(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  if ((*(_BYTE *)(v0 + 112) & 1) != 0 || v4 > 0)
  {
    v17 = sub_100D34014(v4, v5);
    v19 = v18;
    v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v10 = swift_allocObject(v20, 112, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EF5A10;
    v21 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    v23 = sub_1004CFC2C();
    *(_QWORD *)(v10 + 32) = v21;
    *(_QWORD *)(v10 + 40) = v22;
    *(_QWORD *)(v10 + 96) = &type metadata for String;
    *(_QWORD *)(v10 + 104) = v23;
    *(_QWORD *)(v10 + 64) = v23;
    *(_QWORD *)(v10 + 72) = v17;
    *(_QWORD *)(v10 + 80) = v19;
    v14 = swift_bridgeObjectRetain(v22);
    v15 = 1076183077;
    v16 = 0xE400000000000000;
    goto LABEL_6;
  }
  if (v5 > 0)
  {
    v6 = sub_100D34014(v4, v5);
    v8 = v7;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v10 = swift_allocObject(v9, 112, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EF5A10;
    v11 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    v13 = sub_1004CFC2C();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v12;
    *(_QWORD *)(v10 + 96) = &type metadata for String;
    *(_QWORD *)(v10 + 104) = v13;
    *(_QWORD *)(v10 + 64) = v13;
    *(_QWORD *)(v10 + 72) = v6;
    *(_QWORD *)(v10 + 80) = v8;
    v14 = swift_bridgeObjectRetain(v12);
    v15 = 0x29402540253A3F28;
    v16 = 0xE90000000000003FLL;
LABEL_6:
    v24 = String.init(format:arguments:)(v15, v16, v10, v14);
    v26 = v25;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v24 = 0;
  v26 = 0xE000000000000000;
LABEL_8:
  v27 = *(_QWORD *)(v0 + 136);
  v28 = &unk_100EF5000;
  if (v27 < 1)
  {
    v42 = 0;
    v44 = 0xE000000000000000;
  }
  else
  {
    v51 = *(_BYTE *)(v0 + 144);
    v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v30 = swift_allocObject(v29, 152, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100EF5550;
    v31 = v24;
    v32 = v26;
    v33 = v1;
    v34 = *(_QWORD *)(v0 + 152);
    v35 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    v36 = v3;
    v37 = sub_1004CFC2C();
    *(_QWORD *)(v30 + 64) = v37;
    *(_QWORD *)(v30 + 32) = v34;
    *(_QWORD *)(v30 + 40) = v35;
    v24 = v31;
    v38 = v35;
    v1 = v33;
    v26 = v32;
    v28 = (_OWORD *)&unk_100EF5000;
    swift_bridgeObjectRetain(v38);
    v39 = sub_100D32A44(v51);
    *(_QWORD *)(v30 + 96) = &type metadata for String;
    *(_QWORD *)(v30 + 104) = v37;
    v3 = v36;
    *(_QWORD *)(v30 + 72) = v39;
    *(_QWORD *)(v30 + 80) = v40;
    *(_QWORD *)(v30 + 136) = &type metadata for Int;
    *(_QWORD *)(v30 + 144) = &protocol witness table for Int;
    *(_QWORD *)(v30 + 112) = v27;
    v42 = String.init(format:arguments:)(0x257B645C40254025, 0xEC0000007D2C646CLL, v30, v41);
    v44 = v43;
    swift_bridgeObjectRelease();
  }
  v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v46 = swift_allocObject(v45, 152, 7);
  *(_OWORD *)(v46 + 16) = v28[85];
  *(_QWORD *)(v46 + 56) = &type metadata for String;
  v47 = sub_1004CFC2C();
  *(_QWORD *)(v46 + 32) = v1;
  *(_QWORD *)(v46 + 40) = v3;
  *(_QWORD *)(v46 + 96) = &type metadata for String;
  *(_QWORD *)(v46 + 104) = v47;
  *(_QWORD *)(v46 + 64) = v47;
  *(_QWORD *)(v46 + 72) = v24;
  *(_QWORD *)(v46 + 80) = v26;
  *(_QWORD *)(v46 + 136) = &type metadata for String;
  *(_QWORD *)(v46 + 144) = v47;
  *(_QWORD *)(v46 + 112) = v42;
  *(_QWORD *)(v46 + 120) = v44;
  v49 = String.init(format:arguments:)(0x402540254025, 0xE600000000000000, v46, v48);
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_100D32078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v2 = swift_allocObject(v1, 112, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EF5A10;
  v4 = v0[8];
  v3 = v0[9];
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v5 = sub_1004CFC2C();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 96) = &type metadata for Int;
  *(_QWORD *)(v2 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v2 + 64) = v5;
  *(_QWORD *)(v2 + 72) = 0;
  v6 = swift_bridgeObjectRetain(v3);
  v7 = String.init(format:arguments:)(0x257B5D4025645C5BLL, 0xEC0000007D2C646CLL, v2, v6);
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = swift_allocObject(v1, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v10 + 56) = &type metadata for Int;
  *(_QWORD *)(v10 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 96) = &type metadata for Int;
  *(_QWORD *)(v10 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v10 + 72) = 64;
  v11 = String.init(format:arguments:)(0x252C646C257B645CLL, 0xEB000000007D646CLL, v10, (__n128)xmmword_100EF5A10);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = swift_allocObject(v1, 192, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF5E30;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = v5;
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 40) = v9;
  v16 = v0[25];
  v15 = v0[26];
  *(_QWORD *)(v14 + 96) = &type metadata for String;
  *(_QWORD *)(v14 + 104) = v5;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = v15;
  *(_QWORD *)(v14 + 136) = &type metadata for String;
  *(_QWORD *)(v14 + 144) = v5;
  *(_QWORD *)(v14 + 112) = v16;
  *(_QWORD *)(v14 + 120) = v15;
  *(_QWORD *)(v14 + 176) = &type metadata for String;
  *(_QWORD *)(v14 + 184) = v5;
  *(_QWORD *)(v14 + 152) = v11;
  *(_QWORD *)(v14 + 160) = v13;
  swift_bridgeObjectRetain_n(v15, 2);
  v18 = String.init(format:arguments:)(0x7C40253A3F284025, 0xEE003F2940254025, v14, v17);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100D32248(uint64_t result, uint64_t a2, int64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;

  if ((result & 1) == 0)
  {
    if (a4 >= 1 && (a5 & 0x8000000000000000) == 0)
    {
      v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v24 = swift_allocObject(v23, 112, 7);
      *(_OWORD *)(v24 + 16) = xmmword_100EF5A10;
      v26 = *(_QWORD *)(v5 + 64);
      v25 = *(_QWORD *)(v5 + 72);
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      v27 = sub_1004CFC2C();
      *(_QWORD *)(v24 + 32) = v26;
      *(_QWORD *)(v24 + 40) = v25;
      *(_QWORD *)(v24 + 96) = &type metadata for Int;
      *(_QWORD *)(v24 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v24 + 64) = v27;
      *(_QWORD *)(v24 + 72) = a5;
      v28 = swift_bridgeObjectRetain(v25);
      v22 = String.init(format:arguments:)(0x257B5D4025645C5BLL, 0xEC0000007D2C646CLL, v24, v28);
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  if (a2 < 1 || a3 < 1)
    goto LABEL_16;
  v9 = a4 - 1;
  if (a4 < 1 || (a5 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((unint64_t)a4 < 2 || a4 < a5)
    return sub_100D32494(a2, a3, a5);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  result = swift_allocObject(v10, 112, 7);
  *(_OWORD *)(result + 16) = xmmword_100EF5A10;
  v11 = __OFADD__(a2, v9);
  v12 = a2 + v9;
  if (!v11)
  {
    v13 = (_QWORD *)result;
    v14 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v14 + 56) = &type metadata for Int;
    *(_QWORD *)(v14 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v14 + 32) = v12;
    v15 = String.init(format:arguments:)(0x7D646C257B645CLL, 0xE700000000000000, v14, (__n128)xmmword_100EF5E40);
    v17 = v16;
    swift_bridgeObjectRelease();
    v13[7] = &type metadata for String;
    v18 = sub_1004CFC2C();
    v13[8] = v18;
    v13[4] = v15;
    v13[5] = v17;
    v19 = sub_100D32494(a2, a3, a5);
    v13[12] = &type metadata for String;
    v13[13] = v18;
    v13[9] = v19;
    v13[10] = v20;
    v22 = String.init(format:arguments:)(0x40257C40253A3F28, 0xE900000000000029, v13, v21);
LABEL_13:
    swift_bridgeObjectRelease();
    return v22;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100D32494(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;

  if (result < 1 || (uint64_t)a2 < 1 || (a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = result;
    if (a3 == result)
    {
      v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v8 = swift_allocObject(v7, 112, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100EF5A10;
      v9 = sub_100D328C8(a2, 0);
      v11 = v10;
      *(_QWORD *)(v8 + 56) = &type metadata for String;
      v12 = sub_1004CFC2C();
      *(_QWORD *)(v8 + 32) = v9;
      *(_QWORD *)(v8 + 40) = v11;
      *(_QWORD *)(v8 + 96) = &type metadata for Int;
      *(_QWORD *)(v8 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v8 + 64) = v12;
      *(_QWORD *)(v8 + 72) = v6;
      v14 = 0xE90000000000007DLL;
      v15 = 0x646C257B645C4025;
    }
    else
    {
      v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v17 = v16;
      if (a3 >= v6)
      {
        v22 = swift_allocObject(v16, 72, 7);
        *(_OWORD *)(v22 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v22 + 56) = &type metadata for Int;
        *(_QWORD *)(v22 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v22 + 32) = v6;
        v23 = String.init(format:arguments:)(0x7D646C257B645CLL, 0xE700000000000000, v22, (__n128)xmmword_100EF5E40);
        v48 = v24;
        v49 = v23;
        swift_bridgeObjectRelease();
        v25 = (a3 - v6) & ~((uint64_t)(a3 - v6) >> 63);
        v26 = v25 / a2;
        v27 = v25 % a2;
        v47 = sub_100D328C8(a2, v25 / a2 + 1);
        v29 = v28;
        v30 = swift_allocObject(v17, 152, 7);
        *(_OWORD *)(v30 + 16) = xmmword_100EF5550;
        *(_QWORD *)(v30 + 56) = &type metadata for Int;
        *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v30 + 32) = v27;
        *(_QWORD *)(v30 + 96) = &type metadata for Int;
        *(_QWORD *)(v30 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v30 + 72) = a2;
        v32 = *(_QWORD *)(v3 + 64);
        v31 = *(_QWORD *)(v3 + 72);
        *(_QWORD *)(v30 + 136) = &type metadata for String;
        v33 = sub_1004CFC2C();
        *(_QWORD *)(v30 + 144) = v33;
        *(_QWORD *)(v30 + 112) = v32;
        *(_QWORD *)(v30 + 120) = v31;
        v34 = swift_bridgeObjectRetain(v31);
        v46 = String.init(format:arguments:)(0x252C646C257B645CLL, 0xED000040257D646CLL, v30, v34);
        v36 = v35;
        swift_bridgeObjectRelease();
        v37 = swift_allocObject(v17, 152, 7);
        *(_OWORD *)(v37 + 16) = xmmword_100EF5550;
        *(_QWORD *)(v37 + 56) = &type metadata for Int;
        *(_QWORD *)(v37 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v37 + 32) = a2;
        *(_QWORD *)(v37 + 96) = &type metadata for String;
        *(_QWORD *)(v37 + 104) = v33;
        *(_QWORD *)(v37 + 72) = v32;
        *(_QWORD *)(v37 + 80) = v31;
        *(_QWORD *)(v37 + 136) = &type metadata for Int;
        *(_QWORD *)(v37 + 144) = &protocol witness table for Int;
        *(_QWORD *)(v37 + 112) = v26;
        v38 = swift_bridgeObjectRetain(v31);
        v39 = String.init(format:arguments:)(0xD000000000000012, 0x800000010100D740, v37, v38);
        v41 = v40;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain(v29);
        v42._countAndFlagsBits = v49;
        v42._object = v48;
        String.append(_:)(v42);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain(v36);
        v43._countAndFlagsBits = v39;
        v43._object = v41;
        String.append(_:)(v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain(v36);
        v44._countAndFlagsBits = v49;
        v44._object = v48;
        String.append(_:)(v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = swift_allocObject(v17, 112, 7);
        v13 = (__n128)xmmword_100EF5A10;
        *(_OWORD *)(v8 + 16) = xmmword_100EF5A10;
        *(_QWORD *)(v8 + 56) = &type metadata for String;
        *(_QWORD *)(v8 + 64) = v33;
        *(_QWORD *)(v8 + 32) = v47;
        *(_QWORD *)(v8 + 40) = v29;
        *(_QWORD *)(v8 + 96) = &type metadata for String;
        *(_QWORD *)(v8 + 104) = v33;
        *(_QWORD *)(v8 + 72) = v46;
        *(_QWORD *)(v8 + 80) = v36;
        v15 = 0x40257C40253A3F28;
        v14 = 0xE900000000000029;
      }
      else
      {
        v8 = swift_allocObject(v16, 192, 7);
        *(_OWORD *)(v8 + 16) = xmmword_100EF5E30;
        v18 = sub_100D328C8(a2, 0);
        v20 = v19;
        *(_QWORD *)(v8 + 56) = &type metadata for String;
        v21 = sub_1004CFC2C();
        *(_QWORD *)(v8 + 32) = v18;
        *(_QWORD *)(v8 + 40) = v20;
        *(_QWORD *)(v8 + 96) = &type metadata for Int;
        *(_QWORD *)(v8 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v8 + 64) = v21;
        *(_QWORD *)(v8 + 72) = v6;
        *(_QWORD *)(v8 + 136) = &type metadata for Int;
        *(_QWORD *)(v8 + 144) = &protocol witness table for Int;
        *(_QWORD *)(v8 + 112) = a3;
        *(_QWORD *)(v8 + 176) = &type metadata for Int;
        *(_QWORD *)(v8 + 184) = &protocol witness table for Int;
        v15 = 0xD000000000000019;
        *(_QWORD *)(v8 + 152) = v6;
        v14 = 0x800000010100D760;
      }
    }
    v45 = String.init(format:arguments:)(v15, v14, v8, v13);
    swift_bridgeObjectRelease();
    return v45;
  }
  return result;
}

uint64_t sub_100D328C8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (result < 1 || a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    if (v4 == 1)
    {
      v6 = swift_allocObject(v5, 112, 7);
      *(_OWORD *)(v6 + 16) = xmmword_100EF5A10;
      v8 = *(_QWORD *)(v2 + 64);
      v7 = *(_QWORD *)(v2 + 72);
      *(_QWORD *)(v6 + 56) = &type metadata for String;
      v9 = sub_1004CFC2C();
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v7;
      *(_QWORD *)(v6 + 96) = &type metadata for Int;
      *(_QWORD *)(v6 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v6 + 64) = v9;
      *(_QWORD *)(v6 + 72) = a2;
      v10 = swift_bridgeObjectRetain(v7);
      v11 = 0x294025645C3A3F28;
      v12 = 0xEE007D2C646C257BLL;
    }
    else
    {
      v6 = swift_allocObject(v5, 232, 7);
      *(_OWORD *)(v6 + 16) = xmmword_100F05060;
      *(_QWORD *)(v6 + 56) = &type metadata for Int;
      *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v6 + 32) = v4;
      v14 = *(_QWORD *)(v2 + 64);
      v13 = *(_QWORD *)(v2 + 72);
      *(_QWORD *)(v6 + 96) = &type metadata for String;
      v15 = sub_1004CFC2C();
      *(_QWORD *)(v6 + 72) = v14;
      *(_QWORD *)(v6 + 80) = v13;
      *(_QWORD *)(v6 + 136) = &type metadata for Int;
      *(_QWORD *)(v6 + 144) = &protocol witness table for Int;
      *(_QWORD *)(v6 + 104) = v15;
      *(_QWORD *)(v6 + 112) = v4;
      *(_QWORD *)(v6 + 176) = &type metadata for String;
      *(_QWORD *)(v6 + 184) = v15;
      *(_QWORD *)(v6 + 152) = v14;
      *(_QWORD *)(v6 + 160) = v13;
      *(_QWORD *)(v6 + 216) = &type metadata for Int;
      *(_QWORD *)(v6 + 224) = &protocol witness table for Int;
      *(_QWORD *)(v6 + 192) = a2;
      swift_bridgeObjectRetain_n(v13, 2);
      v12 = 0x800000010100D780;
      v11 = 0xD000000000000022;
    }
    v16 = String.init(format:arguments:)(v11, v12, v6, v10);
    swift_bridgeObjectRelease();
    return v16;
  }
  return result;
}

uint64_t sub_100D32A44(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  if ((a1 & 1) != 0)
  {
    v4 = swift_allocObject(v3, 112, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EF5A10;
    v15 = *(_OWORD *)(v1 + 184);
    *(_QWORD *)(v4 + 56) = &type metadata for String;
    v5 = sub_1004CFC2C();
    *(_QWORD *)(v4 + 64) = v5;
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v1 + 184);
    v14 = *(_OWORD *)(v1 + 168);
    v6 = v14;
    *(_QWORD *)(v4 + 96) = &type metadata for String;
    *(_QWORD *)(v4 + 104) = v5;
    *(_OWORD *)(v4 + 72) = v6;
    sub_1006E1190((uint64_t)&v15);
    sub_1006E1190((uint64_t)&v14);
    v8 = 0x5D402540255BLL;
    v9 = 0xE600000000000000;
  }
  else
  {
    v4 = swift_allocObject(v3, 72, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EF5E40;
    v11 = *(_QWORD *)(v1 + 184);
    v10 = *(_QWORD *)(v1 + 192);
    *(_QWORD *)(v4 + 56) = &type metadata for String;
    *(_QWORD *)(v4 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v4 + 32) = v11;
    *(_QWORD *)(v4 + 40) = v10;
    v7 = swift_bridgeObjectRetain(v10);
    v8 = 4145189;
    v9 = 0xE300000000000000;
  }
  v12 = String.init(format:arguments:)(v8, v9, v4, v7);
  swift_bridgeObjectRelease();
  return v12;
}

void sub_100D32B64()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  v0 = sub_1008D84E4((uint64_t)_swiftEmptyArrayStorage);
  v1 = type metadata accessor for CRLUnfairLock();
  v2 = swift_allocObject(v1, 24, 7);
  v3 = (_DWORD *)swift_slowAlloc(4, -1);
  *v3 = 0;
  *(_QWORD *)(v2 + 16) = v3;
  atomic_thread_fence(memory_order_acq_rel);
  off_10140F388 = (_UNKNOWN *)v2;
  qword_10140F390 = v0;
}

uint64_t sub_100D32BCC()
{
  uint64_t v0;

  v0 = type metadata accessor for CharacterSet(0);
  sub_100501DE0(v0, qword_10140F398);
  sub_1004F2A1C(v0, (uint64_t)qword_10140F398);
  return CharacterSet.init(charactersIn:)(0x285D5B5C2A2B2D2ELL, 0xEF245E7C7D7B3F29);
}

uint64_t sub_100D32C34()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for CharacterSet(0);
  sub_100501DE0(v0, qword_10140F3B0);
  v1 = sub_1004F2A1C(v0, (uint64_t)qword_10140F3B0);
  return static CharacterSet.whitespaces.getter(v1);
}

id sub_100D32C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  __n128 v11;
  id v13;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v13 = 0;
  v7 = objc_msgSend(v3, "initWithPattern:options:error:", v6, a3, &v13);

  v8 = v13;
  if (v7)
  {
    v9 = v13;
  }
  else
  {
    v10 = v13;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v11);
  }
  return v7;
}

void *sub_100D32D54(void *a1, char a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char isUniquelyReferenced_nonNull_native;
  void *v35;
  os_unfair_lock_s *lock;
  uint64_t v37;
  _BYTE v38[40];
  _BYTE v39[40];
  _BYTE v40[24];
  _BYTE v41[48];
  _BYTE v42[40];
  _QWORD v43[29];

  v3 = a1;
  sub_100D307FC(a2, (uint64_t)v42);
  if (qword_1013DDEF0 != -1)
    swift_once(&qword_1013DDEF0, sub_100D32B64);
  swift_beginAccess(&off_10140F388, v43, 32, 0);
  v4 = (void *)sub_100D2F458((uint64_t)v42, (uint64_t)off_10140F388, qword_10140F390);
  swift_endAccess(v43);
  if (v4 == (void *)1)
  {
    v5 = v3;
    sub_100D335D8(v5, a2 & 1, (uint64_t)v43);
    v6 = sub_100D30FA8();
    v8 = v7;
    v9 = objc_allocWithZone((Class)NSRegularExpression);
    v4 = sub_100D32C7C(v6, v8, 0);
    v10 = sub_100D31384();
    v12 = v11;
    v13 = objc_allocWithZone((Class)NSRegularExpression);
    v15 = sub_100D32C7C(v10, v12, 0);
    v16 = sub_100D3150C();
    v18 = v17;
    sub_100D34B80(v43);
    v19 = objc_allocWithZone((Class)NSRegularExpression);
    v20 = sub_100D32C7C(v16, v18, 0);
    sub_1004B8968((uint64_t)v42, (uint64_t)v41);
    swift_beginAccess(&off_10140F388, v40, 33, 0);
    sub_1004B8968((uint64_t)v41, (uint64_t)v39);
    v21 = off_10140F388;
    v35 = off_10140F388;
    lock = (os_unfair_lock_s *)*((_QWORD *)off_10140F388 + 2);
    v22 = v4;
    v23 = v15;
    v24 = v20;
    v25 = v22;
    v26 = v23;
    v27 = v24;
    v28 = v25;
    v29 = v26;
    v30 = v27;
    swift_retain(v21);
    os_unfair_lock_lock(lock);
    sub_1004B8968((uint64_t)v39, (uint64_t)v38);
    v31 = v28;
    v32 = v29;
    v33 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = qword_10140F390;
    qword_10140F390 = 0x8000000000000000;
    sub_10082A9DC(v4, v15, v20, (uint64_t)v38, isUniquelyReferenced_nonNull_native);
    qword_10140F390 = v37;
    swift_bridgeObjectRelease();
    sub_1004B89A4((uint64_t)v38);
    os_unfair_lock_unlock(lock);
    swift_release(v35);
    sub_1004B89A4((uint64_t)v39);

    sub_1004B89A4((uint64_t)v41);
    swift_endAccess(v40);

    sub_1004B89A4((uint64_t)v42);
  }
  else
  {
    sub_1004B89A4((uint64_t)v42);

  }
  return v4;
}

void *sub_100D33168(void *a1, char a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char isUniquelyReferenced_nonNull_native;
  void *v35;
  os_unfair_lock_s *lock;
  uint64_t v37;
  _BYTE v38[40];
  _BYTE v39[40];
  _BYTE v40[24];
  _BYTE v41[48];
  _BYTE v42[40];
  _QWORD v43[29];

  v3 = a1;
  sub_100D30BF8(a2, (uint64_t)v42);
  if (qword_1013DDEF0 != -1)
    swift_once(&qword_1013DDEF0, sub_100D32B64);
  swift_beginAccess(&off_10140F388, v43, 32, 0);
  v4 = (void *)sub_100D2F458((uint64_t)v42, (uint64_t)off_10140F388, qword_10140F390);
  swift_endAccess(v43);
  if (v4 == (void *)1)
  {
    v5 = v3;
    sub_100D34138(v5, a2 & 1, (uint64_t)v43);

    v6 = sub_100D30FA8();
    v8 = v7;
    v9 = objc_allocWithZone((Class)NSRegularExpression);
    v4 = sub_100D32C7C(v6, v8, 0);
    v10 = sub_100D31384();
    v12 = v11;
    v13 = objc_allocWithZone((Class)NSRegularExpression);
    v15 = sub_100D32C7C(v10, v12, 0);
    v16 = sub_100D3150C();
    v18 = v17;
    sub_100D34B80(v43);
    v19 = objc_allocWithZone((Class)NSRegularExpression);
    v20 = sub_100D32C7C(v16, v18, 0);
    sub_1004B8968((uint64_t)v42, (uint64_t)v41);
    swift_beginAccess(&off_10140F388, v40, 33, 0);
    sub_1004B8968((uint64_t)v41, (uint64_t)v39);
    v21 = off_10140F388;
    v35 = off_10140F388;
    lock = (os_unfair_lock_s *)*((_QWORD *)off_10140F388 + 2);
    v22 = v4;
    v23 = v15;
    v24 = v20;
    v25 = v22;
    v26 = v23;
    v27 = v24;
    v28 = v25;
    v29 = v26;
    v30 = v27;
    swift_retain(v21);
    os_unfair_lock_lock(lock);
    sub_1004B8968((uint64_t)v39, (uint64_t)v38);
    v31 = v28;
    v32 = v29;
    v33 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = qword_10140F390;
    qword_10140F390 = 0x8000000000000000;
    sub_10082A9DC(v4, v15, v20, (uint64_t)v38, isUniquelyReferenced_nonNull_native);
    qword_10140F390 = v37;
    swift_bridgeObjectRelease();
    sub_1004B89A4((uint64_t)v38);
    os_unfair_lock_unlock(lock);
    swift_release(v35);
    sub_1004B89A4((uint64_t)v39);

    sub_1004B89A4((uint64_t)v41);
    swift_endAccess(v40);

    sub_1004B89A4((uint64_t)v42);
  }
  else
  {
    sub_1004B89A4((uint64_t)v42);

  }
  return v4;
}

uint64_t sub_100D33580()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100D335A4(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_100D30758(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_100D335B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100D335C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D335D0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_100D335D8(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void (**v7)(char *, _QWORD, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  __n128 v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  char **v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  char isEscapingClosureAtFileLocation;
  char v53;
  uint64_t v54;
  double v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  __n128 v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  unint64_t v115;
  double v116;
  char v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  unsigned __int8 v131;
  char v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, _QWORD, uint64_t);
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  id v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  unint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  _QWORD v162[2];
  void **aBlock;
  unint64_t v164;
  void (*v165)(uint64_t, void *, uint64_t, uint64_t);
  void *v166;
  uint64_t (*v167)();
  uint64_t v168;
  char v169;
  unsigned __int8 v170;
  unsigned __int8 v171;
  _BYTE v172[7];

  v160 = type metadata accessor for Locale(0);
  v7 = *(void (***)(char *, _QWORD, uint64_t))(v160 - 8);
  __chkstk_darwin(v160);
  v9 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v10);
  v12 = (char *)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)&v137 - v15;
  if (objc_msgSend(a1, "numberStyle", v14) == (id)5)
  {
    v17 = sub_100D34C14();
    swift_allocError(&type metadata for CRLNumericRegexGenerator.RegexError, v17, 0, 0);
    swift_willThrow(v18);

    return;
  }
  v161 = a2;
  v139 = v12;
  if ((a2 & 1) != 0)
    v19 = objc_msgSend(a1, "positiveSuffix");
  else
    v19 = objc_msgSend(a1, "negativeSuffix");
  v20 = v19;
  v21 = v20;
  if (v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
  }
  v26 = sub_100D31830(v23, v25);
  v158 = v27;
  v157 = objc_msgSend(a1, "paddingPosition", swift_bridgeObjectRelease().n128_f64[0]);
  v171 = objc_msgSend(a1, "usesGroupingSeparator");
  v28 = objc_msgSend(a1, "groupingSeparator");
  if (v28)
  {
    v29 = v28;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v155 = v31;
    v156 = v30;

  }
  else
  {
    v155 = 0xE000000000000000;
    v156 = 0;
  }
  v154 = objc_msgSend(a1, "groupingSize");
  if ((uint64_t)objc_msgSend(a1, "secondaryGroupingSize") <= 0)
    v32 = &selRef_groupingSize;
  else
    v32 = &selRef_secondaryGroupingSize;
  v33 = objc_msgSend(a1, *v32);
  v34 = objc_msgSend(a1, "locale");
  if (!v34)
    goto LABEL_57;
  v35 = v34;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)(v34);

  v36 = v9;
  v37 = v160;
  ((void (**)(char *, char *, uint64_t))v7)[4](v16, v36, v160);
  v138 = v7[7];
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v138)(v16, 0, 1, v37);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v7[6])(v16, 1, v37) == 1)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v38 = sub_1007583F0();
  ((void (*)(char *, uint64_t))v7[1])(v16, v37);
  if (v38 <= 1)
    v38 = 1;
  v39 = objc_msgSend(a1, "minimumIntegerDigits");
  v170 = objc_msgSend(a1, "alwaysShowsDecimalSeparator");
  v40 = objc_msgSend(a1, "minimumFractionDigits");
  v153 = objc_msgSend(a1, "maximumFractionDigits");
  if ((v161 & 1) != 0)
  {
    v41 = objc_msgSend(a1, "positiveFormat");
    if (v41)
      goto LABEL_23;
    __break(1u);
  }
  v41 = objc_msgSend(a1, "negativeFormat");
  if (!v41)
  {
LABEL_59:
    __break(1u);
    return;
  }
LABEL_23:
  v147 = v40;
  v148 = v39;
  v149 = v38;
  v150 = v33;
  v151 = v26;
  v152 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v43 = v42;
  v45 = v44;

  v172[0] = 0;
  v162[0] = 0;
  v46 = swift_bridgeObjectRetain(v45);
  v47 = String.UTF16View.count.getter(v43, v45, v46);
  swift_bridgeObjectRelease();
  if (qword_1013DDEE8 != -1)
    swift_once(&qword_1013DDEE8, sub_100D300E4);
  v48 = (void *)qword_10140F380;
  v49 = String._bridgeToObjectiveC()();
  v16 = (char *)swift_allocObject(&unk_1012A1EB8, 32, 7);
  *((_QWORD *)v16 + 2) = v172;
  *((_QWORD *)v16 + 3) = v162;
  v50 = swift_allocObject(&unk_1012A1EE0, 32, 7);
  *(_QWORD *)(v50 + 16) = sub_100D356A8;
  *(_QWORD *)(v50 + 24) = v16;
  v167 = sub_1005A46E8;
  v168 = v50;
  aBlock = _NSConcreteStackBlock;
  v164 = *(_QWORD *)"";
  v165 = sub_100D2F524;
  v166 = &unk_1012A1EF8;
  v7 = (void (**)(char *, _QWORD, uint64_t))_Block_copy(&aBlock);
  v51 = v168;
  swift_retain(v50);
  objc_msgSend(v48, "enumerateMatchesInString:options:range:usingBlock:", v49, 0, 0, v47, v7, swift_release(v51).n128_f64[0]);

  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v50, "", 95, 134, 11, 1);
  swift_release(v50);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_57:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7])(v16, 1, 1, v160);
    goto LABEL_58;
  }
  v53 = v172[0];
  v54 = v162[0];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v55 = swift_release(v16).n128_u64[0];
  v169 = v53;
  v56 = objc_msgSend(a1, "exponentSymbol", v55);
  if (v56)
  {
    v57 = v56;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v59 = v58;
    v61 = v60;

  }
  else
  {
    v59 = 0;
    v61 = 0xE000000000000000;
  }
  v62 = v161;
  v63 = sub_100D31830(v59, v61);
  v144 = v64;
  v65 = objc_msgSend(a1, "plusSign", swift_bridgeObjectRelease().n128_f64[0]);
  if (v65)
  {
    v66 = v65;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;
    v70 = v69;

  }
  else
  {
    v68 = 0;
    v70 = 0xE000000000000000;
  }
  v143 = sub_100D31830(v68, v70);
  v142 = v71;
  v72 = objc_msgSend(a1, "minusSign", swift_bridgeObjectRelease().n128_f64[0]);
  v146 = v54;
  if (v72)
  {
    v73 = v72;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
    v75 = v74;
    v77 = v76;

  }
  else
  {
    v75 = 0;
    v77 = 0xE000000000000000;
  }
  v159 = sub_100D31830(v75, v77);
  v79 = v78;
  swift_bridgeObjectRelease();
  v80 = objc_msgSend(a1, "decimalSeparator", swift_bridgeObjectRetain(v79).n128_f64[0]);
  if (v80)
  {
    v81 = v80;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
    v83 = v82;
    v85 = v84;

  }
  else
  {
    v83 = 0;
    v85 = 0xE000000000000000;
  }
  v141 = sub_100D31830(v83, v85);
  v140 = v86;
  v87 = objc_msgSend(a1, "paddingPosition", swift_bridgeObjectRelease().n128_f64[0]);
  if ((v62 & 1) != 0)
    v88 = objc_msgSend(a1, "positivePrefix");
  else
    v88 = objc_msgSend(a1, "negativePrefix");
  v89 = v88;
  v90 = v89;
  if (v89)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
    v92 = v91;
    v94 = v93;

  }
  else
  {
    v92 = 0;
    v94 = 0xE000000000000000;
  }
  v95 = sub_100D31830(v92, v94);
  v97 = v96;
  v98 = swift_bridgeObjectRelease();
  v145 = v63;
  if ((v161 & 1) != 0)
    goto LABEL_51;
  if (v87 == (id)1)
    goto LABEL_51;
  aBlock = (void **)v95;
  v164 = v97;
  v162[0] = v159;
  v162[1] = v79;
  v99 = (uint64_t)v139;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v138)(v139, 1, 1, v160, v98);
  v100 = sub_1004D292C();
  swift_bridgeObjectRetain(v97);
  v101 = StringProtocol.range<A>(of:options:range:locale:)(v162, 0, 0, 0, 1, v99, &type metadata for String, &type metadata for String, v100, v100);
  v103 = v102;
  v105 = v104;
  sub_1004CB800(v99, &qword_1013E1748);
  swift_bridgeObjectRelease();
  if ((v105 & 1) != 0)
    goto LABEL_51;
  v106 = HIBYTE(v97) & 0xF;
  if ((v97 & 0x2000000000000000) == 0)
    v106 = v95 & 0xFFFFFFFFFFFFLL;
  if (v103 >> 14 != 4 * v106)
  {
LABEL_51:
    *(_QWORD *)&v116 = swift_bridgeObjectRelease().n128_u64[0];
    v117 = 0;
  }
  else
  {
    v107 = String.subscript.getter(15, v101, v95, v97);
    v109 = v108;
    v111 = v110;
    v113 = v112;
    v114 = swift_bridgeObjectRelease();
    v95 = static String._fromSubstring(_:)(v107, v109, v111, v113, v114);
    v97 = v115;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v116 = swift_bridgeObjectRelease().n128_u64[0];
    v117 = 1;
  }
  v118 = objc_msgSend(a1, "paddingCharacter", v116);
  if (v118)
  {
    v119 = v118;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
    v121 = v120;
    v123 = v122;

  }
  else
  {
    v121 = 0;
    v123 = 0xE000000000000000;
  }
  v124 = sub_100D31830(v121, v123);
  v126 = v125;
  swift_bridgeObjectRelease();
  v127 = sub_100D31B1C(v124, v126);
  v129 = v128;
  swift_bridgeObjectRelease();

  v130 = v171;
  v131 = v170;
  v132 = v169;
  *(_QWORD *)a3 = v95;
  *(_QWORD *)(a3 + 8) = v97;
  *(_QWORD *)(a3 + 16) = v151;
  *(_QWORD *)(a3 + 24) = v158;
  *(_QWORD *)(a3 + 32) = v157;
  *(_QWORD *)(a3 + 40) = v127;
  *(_QWORD *)(a3 + 48) = v129;
  *(_BYTE *)(a3 + 56) = v130;
  *(_DWORD *)(a3 + 57) = (_DWORD)aBlock;
  *(_DWORD *)(a3 + 60) = *(_DWORD *)((char *)&aBlock + 3);
  *(_QWORD *)(a3 + 64) = v156;
  *(_QWORD *)(a3 + 72) = v155;
  *(_QWORD *)(a3 + 80) = v154;
  *(_QWORD *)(a3 + 88) = v150;
  *(_QWORD *)(a3 + 96) = v149;
  *(_QWORD *)(a3 + 104) = v148;
  *(_BYTE *)(a3 + 112) = v131;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)((char *)v162 + 3);
  *(_DWORD *)(a3 + 113) = v162[0];
  v133 = v153;
  *(_QWORD *)(a3 + 120) = v147;
  *(_QWORD *)(a3 + 128) = v133;
  *(_QWORD *)(a3 + 136) = v146;
  *(_BYTE *)(a3 + 144) = v132;
  *(_DWORD *)(a3 + 148) = *(_DWORD *)&v172[3];
  *(_DWORD *)(a3 + 145) = *(_DWORD *)v172;
  v134 = v144;
  *(_QWORD *)(a3 + 152) = v145;
  *(_QWORD *)(a3 + 160) = v134;
  v135 = v142;
  *(_QWORD *)(a3 + 168) = v143;
  *(_QWORD *)(a3 + 176) = v135;
  *(_QWORD *)(a3 + 184) = v159;
  *(_QWORD *)(a3 + 192) = v79;
  v136 = v140;
  *(_QWORD *)(a3 + 200) = v141;
  *(_QWORD *)(a3 + 208) = v136;
  *(_BYTE *)(a3 + 216) = v117;
}

uint64_t sub_100D34014(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a2 | result) < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (result < a2)
    {
      v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v5 = swift_allocObject(v4, 112, 7);
      v6 = (__n128)xmmword_100EF5A10;
      *(_OWORD *)(v5 + 16) = xmmword_100EF5A10;
      *(_QWORD *)(v5 + 56) = &type metadata for Int;
      *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v5 + 32) = v3;
      *(_QWORD *)(v5 + 96) = &type metadata for Int;
      *(_QWORD *)(v5 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v5 + 72) = a2;
      v7 = 0x252C646C257B645CLL;
      v8 = 0xEB000000007D646CLL;
LABEL_6:
      v10 = String.init(format:arguments:)(v7, v8, v5, v6);
      swift_bridgeObjectRelease();
      return v10;
    }
    if (result >= 1)
    {
      v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v5 = swift_allocObject(v9, 72, 7);
      v6 = (__n128)xmmword_100EF5E40;
      *(_OWORD *)(v5 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v5 + 56) = &type metadata for Int;
      *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v5 + 32) = v3;
      v7 = 0x7D646C257B645CLL;
      v8 = 0xE700000000000000;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

void sub_100D34138(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CFNumberFormatterKey v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  char v41;
  id v42;
  id v43;
  char v44;
  BOOL v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v53;
  uint64_t v54;
  id v55;
  __n128 v56;
  uint64_t v57;
  void *v58;
  NSString v59;
  uint64_t v60;
  void *v61;
  char *v62;
  char isEscapingClosureAtFileLocation;
  char v64;
  uint64_t v65;
  double v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  CFNumberFormatterKey v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  __n128 v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  unsigned __int8 v130;
  char v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD v167[2];
  void **aBlock;
  unint64_t v169;
  void (*v170)(uint64_t, void *, uint64_t, uint64_t);
  void *v171;
  uint64_t (*v172)();
  char *v173;
  char v174;
  char v175;
  char v176;
  unsigned __int8 v177;
  _BYTE v178[7];

  v7 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v7);
  v9 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v139 - v11;
  v13 = type metadata accessor for Locale(0);
  v165 = *(_QWORD *)(v13 - 8);
  v166 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v164 = (char *)&v139 - v18;
  v19 = objc_msgSend(a1, "format", v17);
  if (!v19)
    goto LABEL_5;
  v20 = v19;
  v141 = v9;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;
  v24 = v23;

  v161 = a2;
  if ((a2 & 1) != 0)
  {
    v25 = kCFNumberFormatterPositiveSuffix;
    if (!kCFNumberFormatterPositiveSuffix)
    {
      __break(1u);
LABEL_5:
      v26 = sub_100D34C14();
      swift_allocError(&type metadata for CRLNumericRegexGenerator.RegexError, v26, 0, 0);
      swift_willThrow(v27);
      return;
    }
  }
  else
  {
    v25 = kCFNumberFormatterNegativeSuffix;
    if (!kCFNumberFormatterNegativeSuffix)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
  }
  v28 = sub_100D304DC((uint64_t)v25);
  if (v29)
  {
    v30 = v29;
  }
  else
  {
    v28 = 0;
    v30 = 0xE000000000000000;
  }
  v31 = sub_100D31830(v28, v30);
  v160 = v32;
  swift_bridgeObjectRelease();
  if (!kCFNumberFormatterPaddingPosition)
    goto LABEL_80;
  sub_100D305A0((uint64_t)kCFNumberFormatterPaddingPosition);
  if ((v34 & 1) != 0)
    v35 = 0;
  else
    v35 = v33;
  v163 = v35;
  v177 = objc_msgSend(a1, "useGroupingSeparator");
  if (!kCFNumberFormatterGroupingSeparator)
    goto LABEL_81;
  v162 = v22;
  v36 = sub_100D304DC((uint64_t)kCFNumberFormatterGroupingSeparator);
  if (v37)
    v38 = v36;
  else
    v38 = 0;
  v39 = 0xE000000000000000;
  if (v37)
    v39 = v37;
  v158 = v39;
  v159 = v38;
  if (!kCFNumberFormatterGroupingSize)
    goto LABEL_82;
  v40 = sub_100D303FC((uint64_t)kCFNumberFormatterGroupingSize);
  if ((v41 & 1) != 0)
    v42 = 0;
  else
    v42 = v40;
  if (!kCFNumberFormatterSecondaryGroupingSize)
    goto LABEL_83;
  v156 = v31;
  v157 = v3;
  v43 = sub_100D303FC((uint64_t)kCFNumberFormatterSecondaryGroupingSize);
  if (v43)
    v45 = 1;
  else
    v45 = (uint64_t)v42 <= 0;
  if (v45)
    v46 = v43;
  else
    v46 = v42;
  v155 = v42;
  if ((v44 & 1) == 0)
    v42 = v46;
  v47 = objc_msgSend(a1, "locale");
  if (!v47)
  {
    v47 = objc_msgSend((id)objc_opt_self(CRLLocale), "currentLocale");
    if (!v47)
      goto LABEL_93;
  }
  v48 = objc_msgSend(v47, "locale");

  if (!v48)
    goto LABEL_84;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)(v48);

  v50 = v165;
  v49 = v166;
  v51 = *(void (**)(char *, char *, uint64_t))(v165 + 32);
  v51(v12, v15, v166);
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v50 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v52)(v12, 0, 1, v49);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v12, 1, v49) == 1)
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v51(v164, v12, v49);
  v53 = sub_1007583F0();
  if (v53 <= 1)
    v54 = 1;
  else
    v54 = v53;
  v55 = objc_msgSend(a1, "minIntegerDigits");
  if (!kCFNumberFormatterAlwaysShowDecimalSeparator)
    goto LABEL_86;
  v140 = v52;
  v152 = v55;
  v153 = v54;
  v154 = v42;
  v176 = sub_100D30324((uint64_t)kCFNumberFormatterAlwaysShowDecimalSeparator) & 1;
  v151 = objc_msgSend(a1, "minFractionDigits");
  v150 = objc_msgSend(a1, "maxFractionDigits");
  v178[0] = 0;
  v167[0] = 0;
  v56 = swift_bridgeObjectRetain(v24);
  v57 = String.UTF16View.count.getter(v162, v24, v56);
  swift_bridgeObjectRelease();
  if (qword_1013DDEE8 != -1)
    swift_once(&qword_1013DDEE8, sub_100D300E4);
  v58 = (void *)qword_10140F380;
  v59 = String._bridgeToObjectiveC()();
  v60 = swift_allocObject(&unk_1012A1DC8, 32, 7);
  *(_QWORD *)(v60 + 16) = v178;
  *(_QWORD *)(v60 + 24) = v167;
  v12 = (char *)swift_allocObject(&unk_1012A1DF0, 32, 7);
  *((_QWORD *)v12 + 2) = sub_100D34C68;
  *((_QWORD *)v12 + 3) = v60;
  v172 = sub_1005A46E8;
  v173 = v12;
  aBlock = _NSConcreteStackBlock;
  v169 = *(_QWORD *)"";
  v170 = sub_100D2F524;
  v171 = &unk_1012A1E08;
  v61 = _Block_copy(&aBlock);
  v62 = v173;
  swift_retain(v12);
  objc_msgSend(v58, "enumerateMatchesInString:options:range:usingBlock:", v59, 0, 0, v57, v61, swift_release(v62).n128_f64[0]);

  _Block_release(v61);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 95, 134, 11, 1);
  swift_release(v12);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v12, 1, 1, v166);
    goto LABEL_85;
  }
  v64 = v178[0];
  v65 = v167[0];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v66 = swift_release(v60).n128_u64[0];
  v175 = v64;
  v67 = objc_msgSend(a1, "exponentSymbol", v66);
  if (v67)
  {
    v68 = v67;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v70 = v69;
    v72 = v71;

  }
  else
  {
    v70 = 0;
    v72 = 0xE000000000000000;
  }
  v73 = v161;
  v74 = sub_100D31830(v70, v72);
  v76 = v75;
  swift_bridgeObjectRelease();
  if (!kCFNumberFormatterPlusSign)
    goto LABEL_87;
  v148 = v76;
  v149 = v74;
  v77 = sub_100D304DC((uint64_t)kCFNumberFormatterPlusSign);
  if (v78)
  {
    v79 = v78;
  }
  else
  {
    v77 = 0;
    v79 = 0xE000000000000000;
  }
  v147 = sub_100D31830(v77, v79);
  v146 = v80;
  swift_bridgeObjectRelease();
  if (!kCFNumberFormatterMinusSign)
    goto LABEL_88;
  v81 = sub_100D304DC((uint64_t)kCFNumberFormatterMinusSign);
  if (v82)
  {
    v83 = v82;
  }
  else
  {
    v81 = 0;
    v83 = 0xE000000000000000;
  }
  v84 = sub_100D31830(v81, v83);
  v86 = v85;
  swift_bridgeObjectRelease();
  if (!kCFNumberFormatterDecimalSeparator)
    goto LABEL_89;
  swift_bridgeObjectRetain(v86);
  v87 = sub_100D304DC((uint64_t)kCFNumberFormatterDecimalSeparator);
  if (v88)
  {
    v89 = v88;
  }
  else
  {
    v87 = 0;
    v89 = 0xE000000000000000;
  }
  v144 = sub_100D31830(v87, v89);
  v143 = v90;
  swift_bridgeObjectRelease();
  v145 = v65;
  if ((v73 & 1) != 0)
  {
    v91 = kCFNumberFormatterPositivePrefix;
    if (kCFNumberFormatterPositivePrefix)
      goto LABEL_63;
    __break(1u);
  }
  v91 = kCFNumberFormatterNegativePrefix;
  if (!kCFNumberFormatterNegativePrefix)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    return;
  }
LABEL_63:
  v92 = sub_100D304DC((uint64_t)v91);
  if (v93)
  {
    v94 = v93;
  }
  else
  {
    v92 = 0;
    v94 = 0xE000000000000000;
  }
  v95 = sub_100D31830(v92, v94);
  v97 = v96;
  v98 = swift_bridgeObjectRelease();
  v142 = v84;
  v162 = v86;
  if ((v73 & 1) != 0)
    goto LABEL_73;
  if (v163 == 1)
    goto LABEL_73;
  aBlock = (void **)v95;
  v169 = v97;
  v167[0] = v84;
  v167[1] = v86;
  v99 = (uint64_t)v141;
  v140(v141, 1, 1, v166, v98);
  v100 = sub_1004D292C();
  swift_bridgeObjectRetain(v97);
  v101 = StringProtocol.range<A>(of:options:range:locale:)(v167, 0, 0, 0, 1, v99, &type metadata for String, &type metadata for String, v100, v100);
  v103 = v102;
  v105 = v104;
  sub_1004CB800(v99, &qword_1013E1748);
  swift_bridgeObjectRelease();
  if ((v105 & 1) != 0)
    goto LABEL_73;
  v106 = HIBYTE(v97) & 0xF;
  if ((v97 & 0x2000000000000000) == 0)
    v106 = v95 & 0xFFFFFFFFFFFFLL;
  if (v103 >> 14 != 4 * v106)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    v116 = 0;
  }
  else
  {
    v107 = String.subscript.getter(15, v101, v95, v97);
    v109 = v108;
    v111 = v110;
    v113 = v112;
    v114 = swift_bridgeObjectRelease();
    v95 = static String._fromSubstring(_:)(v107, v109, v111, v113, v114);
    v97 = v115;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v116 = 1;
  }
  v174 = v116;
  if (!kCFNumberFormatterPaddingCharacter)
    goto LABEL_90;
  v117 = (int)v152;
  v118 = (int)v151;
  v119 = (int)v150;
  v120 = sub_100D304DC((uint64_t)kCFNumberFormatterPaddingCharacter);
  if (v121)
  {
    v122 = v121;
  }
  else
  {
    v120 = 0;
    v122 = 0xE000000000000000;
  }
  v123 = sub_100D31830(v120, v122);
  v125 = v124;
  swift_bridgeObjectRelease();
  v126 = sub_100D31B1C(v123, v125);
  v128 = v127;
  v129 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v165 + 8))(v164, v166, v129);
  v130 = v177;
  v131 = v176;
  v132 = v175;
  v133 = v174;
  *(_QWORD *)a3 = v95;
  *(_QWORD *)(a3 + 8) = v97;
  v134 = v160;
  *(_QWORD *)(a3 + 16) = v156;
  *(_QWORD *)(a3 + 24) = v134;
  *(_QWORD *)(a3 + 32) = v163;
  *(_QWORD *)(a3 + 40) = v126;
  *(_QWORD *)(a3 + 48) = v128;
  *(_BYTE *)(a3 + 56) = v130;
  *(_DWORD *)(a3 + 57) = (_DWORD)aBlock;
  *(_DWORD *)(a3 + 60) = *(_DWORD *)((char *)&aBlock + 3);
  *(_QWORD *)(a3 + 64) = v159;
  *(_QWORD *)(a3 + 72) = v158;
  *(_QWORD *)(a3 + 80) = v155;
  *(_QWORD *)(a3 + 88) = v154;
  *(_QWORD *)(a3 + 96) = v153;
  *(_QWORD *)(a3 + 104) = v117;
  *(_BYTE *)(a3 + 112) = v131;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)((char *)v167 + 3);
  *(_DWORD *)(a3 + 113) = v167[0];
  *(_QWORD *)(a3 + 120) = v118;
  *(_QWORD *)(a3 + 128) = v119;
  *(_QWORD *)(a3 + 136) = v145;
  *(_BYTE *)(a3 + 144) = v132;
  *(_DWORD *)(a3 + 148) = *(_DWORD *)&v178[3];
  *(_DWORD *)(a3 + 145) = *(_DWORD *)v178;
  v135 = v148;
  *(_QWORD *)(a3 + 152) = v149;
  *(_QWORD *)(a3 + 160) = v135;
  v136 = v146;
  *(_QWORD *)(a3 + 168) = v147;
  *(_QWORD *)(a3 + 176) = v136;
  v137 = v162;
  *(_QWORD *)(a3 + 184) = v142;
  *(_QWORD *)(a3 + 192) = v137;
  v138 = v143;
  *(_QWORD *)(a3 + 200) = v144;
  *(_QWORD *)(a3 + 208) = v138;
  *(_BYTE *)(a3 + 216) = v133;
}

_QWORD *sub_100D34B80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[9];
  v6 = a1[20];
  v7 = a1[22];
  v8 = a1[24];
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

unint64_t sub_100D34C14()
{
  unint64_t result;

  result = qword_10140F3C8;
  if (!qword_10140F3C8)
  {
    result = swift_getWitnessTable(&unk_100F33B30, &type metadata for CRLNumericRegexGenerator.RegexError);
    atomic_store(result, (unint64_t *)&qword_10140F3C8);
  }
  return result;
}

uint64_t sub_100D34C58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100D34C68(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_100D3016C(a1, a2, a3, *(BOOL **)(v3 + 16), *(_QWORD **)(v3 + 24));
}

uint64_t sub_100D34C70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D34C80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D34C90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D34CA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLNumericRegexGenerator.RegexSet(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for CRLNumericRegexGenerator.RegexSet(id *a1)
{

}

uint64_t assignWithCopy for CRLNumericRegexGenerator.RegexSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for CRLNumericRegexGenerator.RegexSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.RegexSet()
{
  return &type metadata for CRLNumericRegexGenerator.RegexSet;
}

uint64_t storeEnumTagSinglePayload for CRLNumericRegexGenerator.RegexError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100D34E28 + 4 * byte_100F339DC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100D34E48 + 4 * byte_100F339E1[v4]))();
}

_BYTE *sub_100D34E28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100D34E48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D34E50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D34E58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D34E60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D34E68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.RegexError()
{
  return &type metadata for CRLNumericRegexGenerator.RegexError;
}

uint64_t destroy for CRLNumericRegexGenerator(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[20]);
  swift_bridgeObjectRelease(a1[22]);
  swift_bridgeObjectRelease(a1[24]);
  return swift_bridgeObjectRelease(a1[26]);
}

uint64_t initializeWithCopy for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v8 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v11;
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t assignWithCopy for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a2 + 160);
  v13 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v14 = *(_QWORD *)(a2 + 176);
  v15 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v16 = *(_QWORD *)(a2 + 192);
  v17 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v18 = *(_QWORD *)(a2 + 208);
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  return a1;
}

__n128 initializeWithTake for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v12 = *(_QWORD *)(a2 + 160);
  v13 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 176);
  v15 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 192);
  v17 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 208);
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v18;
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLNumericRegexGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 217))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLNumericRegexGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 216) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator()
{
  return &type metadata for CRLNumericRegexGenerator;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.Cache()
{
  return &type metadata for CRLNumericRegexGenerator.Cache;
}

void destroy for CRLNumericRegexGenerator.Cache.Entry(id *a1)
{
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
  {

  }
}

uint64_t _s8Freeform24CRLNumericRegexGeneratorV5CacheV5EntryOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v4 = *(void **)(a2 + 8);
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v6 = v3;
    v7 = v4;
    v8 = v5;
  }
  return a1;
}

void **assignWithCopy for CRLNumericRegexGenerator.Cache.Entry(void **a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  __int128 v18;

  v4 = *a1;
  v5 = *(void **)a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      v13 = (void *)*((_QWORD *)a2 + 1);
      a1[1] = v13;
      v14 = (void *)*((_QWORD *)a2 + 2);
      a1[2] = v14;
      v15 = v5;
      v16 = v13;
      v17 = v14;
      return a1;
    }
LABEL_7:
    v18 = *a2;
    a1[2] = (void *)*((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v18;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *a1 = v5;
  v6 = v5;

  v7 = (void *)*((_QWORD *)a2 + 1);
  v8 = a1[1];
  a1[1] = v7;
  v9 = v7;

  v10 = (void *)*((_QWORD *)a2 + 2);
  v11 = a1[2];
  a1[2] = v10;
  v12 = v10;

  return a1;
}

void **assignWithTake for CRLNumericRegexGenerator.Cache.Entry(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *a1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(void **)(a2 + 16);
    return a1;
  }
  *a1 = *(void **)a2;

  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLNumericRegexGenerator.Cache.Entry(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLNumericRegexGenerator.Cache.Entry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_100D35620(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.Cache.Entry()
{
  return &type metadata for CRLNumericRegexGenerator.Cache.Entry;
}

unint64_t sub_100D35654()
{
  unint64_t result;

  result = qword_10140F3D0;
  if (!qword_10140F3D0)
  {
    result = swift_getWitnessTable(&unk_100F33B08, &type metadata for CRLNumericRegexGenerator.RegexError);
    atomic_store(result, (unint64_t *)&qword_10140F3D0);
  }
  return result;
}

void sub_100D35718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  unint64_t v5;
  uint64_t v6;

  v1 = OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels));
    v5 = v3;
    while (sub_100D35EC8(v4, *(double *)(v2 + 8 * v5 + 24)) || (uint64_t)v5 >= v3)
    {
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v6 = *(_QWORD *)(v0 + v1);
      if (v5 < *(_QWORD *)(v6 + 16))
      {
        v4 = *(double *)(v6 + 8 * v5 + 32);
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_100D358FC(v4);
  }
}

void sub_100D3580C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t v7;

  v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue);
  v2 = OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels));
    v5 = 0;
    while (1)
    {
      v6 = sub_100D35E9C(v1, *(double *)(v3 + 8 * v5 + 32));
      if (v5)
      {
        if (v6)
          break;
      }
      if (v4 == ++v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v0 + v2);
    if ((unint64_t)(v5 - 1) < *(_QWORD *)(v7 + 16))
    {
      v1 = *(double *)(v7 + 8 * v5 + 24);
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_100D358FC(v1);
  }
}

void sub_100D358FC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t Strong;
  void *v18;
  id v19;
  id v20;
  id v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  __n128 v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void **aBlock;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - v14;
  v16 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_icc);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_delegate);
  if (Strong)
  {
    v18 = (void *)Strong;
    v54 = v16;
    v19 = objc_msgSend(v54, "layerHost");
    if (v19
      && (v20 = v19,
          v21 = objc_msgSend(v19, "canvasLayer"),
          swift_unknownObjectRelease(v20),
          v21))
    {
      objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v18, "canvasZoomTrackerDidEndViewScaleFeedback:", 0);
      objc_msgSend(v54, "visibleUnscaledRect");
      v26 = sub_100061400(v22, v23, v24, v25);
      v28 = v27;
      objc_msgSend(v21, "contentInset");
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;
      v59 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      v60 = 0;
      aBlock = _NSConcreteStackBlock;
      v56 = *(_QWORD *)"";
      v57 = sub_1006084F4;
      v58 = &unk_1012A2270;
      v37 = _Block_copy(&aBlock);
      objc_msgSend(v21, "animateToViewScale:contentCenter:contentInset:duration:completionBlock:", v37, a1, v26, v28, v30, v32, v34, v36, 0.2);
      _Block_release(v37);
      objc_msgSend(v18, "canvasZoomTracker:willBeginViewScaleFeedbackWithZoomMethod:", 0, 2);
      objc_msgSend(v18, "canvasZoomTracker:willUpdateViewScaleFeedbackWithScale:", 0, a1);
      sub_100503E34();
      v49 = static OS_dispatch_queue.main.getter(v38);
      static DispatchTime.now()(v39);
      + infix(_:_:)(v12, 0.5);
      v50 = *(void (**)(char *, uint64_t))(v10 + 8);
      v50(v12, v9);
      v40 = swift_allocObject(&unk_1012A22A8, 24, 7);
      *(_QWORD *)(v40 + 16) = v18;
      v59 = sub_100D35E88;
      v60 = v40;
      aBlock = _NSConcreteStackBlock;
      v56 = *(_QWORD *)"";
      v57 = sub_1005D2FC0;
      v58 = &unk_1012A22C0;
      v41 = _Block_copy(&aBlock);
      v42 = v60;
      swift_unknownObjectRetain(v18);
      v43 = swift_release(v42);
      static DispatchQoS.unspecified.getter(v43);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v44 = sub_1004CB65C();
      v45 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v46 = sub_100503E88();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v45, v46, v3, v44);
      v47 = (void *)v49;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v41);

      _Block_release(v41);
      swift_unknownObjectRelease(v18);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v5, v3);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
      v50(v15, v9);
    }
    else
    {
      swift_unknownObjectRelease(v18);

    }
  }
}

id sub_100D35DB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSZoomHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSZoomHelper()
{
  return objc_opt_self(_TtC8Freeform16CRLiOSZoomHelper);
}

double sub_100D35E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D35E5C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100D35E64()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100D35E88()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "canvasZoomTrackerDidEndViewScaleFeedback:", 0);
}

BOOL sub_100D35E9C(double a1, double a2)
{
  if (a1 < a2)
    return 1;
  if (vabdd_f64(a1, a2) < 0.01)
    return 1;
  return a1 == a2;
}

BOOL sub_100D35EC8(double a1, double a2)
{
  return a1 < a2 && vabdd_f64(a1, a2) >= 0.00999999978;
}

double *sub_100D35EF4(double a1, double a2, double a3)
{
  double *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  double v12;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v6 = sub_100D12148(0, 1, 1, _swiftEmptyArrayStorage);
  v8 = *((_QWORD *)v6 + 2);
  v7 = *((_QWORD *)v6 + 3);
  if (v8 >= v7 >> 1)
    v6 = sub_100D12148((double *)(v7 > 1), v8 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v8 + 1;
  v6[v8 + 4] = a1;
  if (qword_1013DDE00 != -1)
    swift_once(&qword_1013DDE00, sub_100C5C130);
  v9 = qword_101481160;
  v10 = *(_QWORD *)(qword_101481160 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(qword_101481160);
    for (i = 0; i != v10; ++i)
    {
      v12 = *(double *)(v9 + 8 * i + 32) / a3;
      if (v12 > a1 && v12 < a2)
      {
        v15 = *((_QWORD *)v6 + 2);
        v14 = *((_QWORD *)v6 + 3);
        if (v15 >= v14 >> 1)
          v6 = sub_100D12148((double *)(v14 > 1), v15 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v15 + 1;
        v6[v15 + 4] = v12;
      }
    }
    swift_bridgeObjectRelease();
  }
  v17 = *((_QWORD *)v6 + 2);
  v16 = *((_QWORD *)v6 + 3);
  if (v17 >= v16 >> 1)
    v6 = sub_100D12148((double *)(v16 > 1), v17 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v17 + 1;
  v6[v17 + 4] = a2;
  return v6;
}

id sub_100D36080(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  double v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  double v21;
  id v22;
  id v23;
  double v24;
  double v25;
  objc_super v27;

  v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_delegate]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_icc] = a1;
  swift_unknownObjectWeakAssign(v5, a2);
  v6 = v2;
  v7 = a1;
  objc_msgSend(v7, "viewScale");
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue] = v8;
  v9 = objc_msgSend(v7, "delegate");
  if (v9)
  {
    v11 = v9;
    v12 = 1.0;
    if (objc_msgSend(v9, "respondsToSelector:", "zoomDetentScaleForInteractiveCanvasController:"))
    {
      objc_msgSend(v11, "zoomDetentScaleForInteractiveCanvasController:", v7);
      v12 = v13;
    }
    *(_QWORD *)&v10 = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 1.0;
  }
  v14 = objc_msgSend(v7, "layerHost", v10);
  v15 = 0.1;
  if (v14)
  {
    v16 = v14;
    v17 = objc_msgSend(v14, "canvasLayer");
    *(_QWORD *)&v18 = swift_unknownObjectRelease(v16).n128_u64[0];
    if (v17)
    {
      objc_msgSend(v17, "minimumPinchViewScale", v18);
      v15 = v19;

    }
  }
  v20 = objc_msgSend(v7, "layerHost");
  v21 = 4.0;
  if (v20)
  {
    v22 = v20;
    v23 = objc_msgSend(v20, "canvasLayer");
    *(_QWORD *)&v24 = swift_unknownObjectRelease(v22).n128_u64[0];
    if (v23)
    {
      objc_msgSend(v23, "maximumPinchViewScale", v24);
      v21 = v25;

    }
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels] = sub_100D35EF4(v15, v21, v12);

  v27.receiver = v6;
  v27.super_class = (Class)type metadata accessor for CRLiOSZoomHelper();
  return objc_msgSendSuper2(&v27, "init");
}

uint64_t destroy for CRLFillData(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[12]);
  return swift_bridgeObjectRelease(a1[13]);
}

uint64_t initializeWithCopy for CRLFillData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v4;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v5;
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for CRLFillData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  v6 = a2[6];
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  v8 = a2[9];
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  v10 = a2[11];
  v11 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[12];
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a2[13];
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t assignWithTake for CRLFillData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease(v5);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  v6 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFillData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFillData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 96) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData()
{
  return &type metadata for CRLFillData;
}

uint64_t sub_100D365FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1007C8324();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100D36658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1007C8324();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100D366A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100D37E98();
  v7 = sub_100D37E0C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D36700(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D37E98();
  v5 = sub_1007C8324();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100D36768(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D37E98();
  v5 = sub_1007C8324();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100D367C0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100D37E98();
  v3 = sub_1007C8324();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

BOOL sub_100D3680C(char *a1, char *a2)
{
  return qword_100F34190[*a1] == qword_100F34190[*a2];
}

Swift::Int sub_100D36830()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F34190[v1]);
  return Hasher._finalize()();
}

void sub_100D3687C()
{
  char *v0;

  Hasher._combine(_:)(qword_100F34190[*v0]);
}

Swift::Int sub_100D368B0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F34190[v2]);
  return Hasher._finalize()();
}

void sub_100D368F8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F34190[*v1];
}

uint64_t sub_100D36910()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x726F6C6F63;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_100D36964@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100D3763C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100D36988()
{
  char *v0;

  return qword_100F34190[*v0];
}

void sub_100D369A0(_QWORD *a1@<X8>)
{
  *a1 = &off_101263990;
}

uint64_t sub_100D369B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D371F8();
  v5 = sub_100D37240();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100D369F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D37240();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D36A1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D37240();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100D36A44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD v20[5];
  uint64_t v21;
  char v22;
  _BYTE v23[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140F498);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D37240();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLFillData.CodingKeys, &type metadata for CRLFillData.CodingKeys, v11, v9, v10);
  sub_100D37B20(v3, (uint64_t)v23);
  sub_100D37B20((uint64_t)v23, (uint64_t)v20);
  v22 = 0;
  v12 = sub_1004B804C(&qword_1013F3EB8);
  v13 = sub_100D37B68(&qword_10140F4A0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v22, v5, v12, v13);
  if (!v2)
  {
    v14 = *(_OWORD *)(v3 + 64);
    v20[2] = *(_OWORD *)(v3 + 48);
    v20[3] = v14;
    v20[4] = *(_OWORD *)(v3 + 80);
    v21 = *(_QWORD *)(v3 + 96);
    v15 = *(_OWORD *)(v3 + 32);
    v20[0] = *(_OWORD *)(v3 + 16);
    v20[1] = v15;
    v22 = 1;
    v16 = sub_1006C6680();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v22, v5, &type metadata for CRLColorData, v16);
    *(_QWORD *)&v20[0] = *(_QWORD *)(v3 + 104);
    v22 = 2;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v22, v5, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100D36C18()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104));
}

uint64_t sub_100D36C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 104));
  *(_QWORD *)(v1 + 104) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100D36C48())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100D36C58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _OWORD v19[5];
  uint64_t v20;
  _OWORD v21[5];
  uint64_t v22;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *((_OWORD *)a1 + 4);
  v19[2] = *((_OWORD *)a1 + 3);
  v19[3] = v4;
  v19[4] = *((_OWORD *)a1 + 5);
  v5 = a1[13];
  v20 = a1[12];
  v6 = *((_OWORD *)a1 + 2);
  v19[0] = *((_OWORD *)a1 + 1);
  v19[1] = v6;
  v7 = *a2;
  v8 = a2[13];
  v22 = a2[12];
  v9 = *((_BYTE *)a2 + 8);
  v10 = *((_OWORD *)a2 + 4);
  v21[2] = *((_OWORD *)a2 + 3);
  v21[3] = v10;
  v21[4] = *((_OWORD *)a2 + 5);
  v11 = *((_OWORD *)a2 + 2);
  v21[0] = *((_OWORD *)a2 + 1);
  v21[1] = v11;
  v17 = v2;
  v18 = v3;
  v15 = v7;
  v16 = v9;
  v12 = sub_1007C8324();
  if ((static CRExtensible.== infix(_:_:)(&v17, &v15, &type metadata for CRLFillData.FillType, v12, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0&& (sub_1006C5A00((uint64_t)v19, (uint64_t)v21) & 1) != 0)
  {
    v13 = sub_100C9E04C(v5, v8);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

Swift::Int sub_100D36D38()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v6[9];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 80);
  v10 = *(_OWORD *)(v0 + 64);
  v11 = v2;
  v12 = *(_QWORD *)(v0 + 96);
  v3 = *(_OWORD *)(v0 + 32);
  v7 = *(_OWORD *)(v0 + 16);
  v8 = v3;
  v9 = v1;
  Hasher.init(_seed:)(v6, 0);
  v4 = sub_1004B804C(&qword_1013F3EB8);
  CRExtensible.hash(into:)(v6, v4);
  sub_1006C4BDC();
  return Hasher._finalize()();
}

void sub_100D36DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F3EB8);
  CRExtensible.hash(into:)(a1, v2);
  sub_1006C4BDC();
}

Swift::Int sub_100D36E4C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _QWORD v7[9];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_OWORD *)(v1 + 48);
  v3 = *(_OWORD *)(v1 + 80);
  v11 = *(_OWORD *)(v1 + 64);
  v12 = v3;
  v13 = *(_QWORD *)(v1 + 96);
  v4 = *(_OWORD *)(v1 + 32);
  v8 = *(_OWORD *)(v1 + 16);
  v9 = v4;
  v10 = v2;
  Hasher.init(_seed:)(v7, a1);
  v5 = sub_1004B804C(&qword_1013F3EB8);
  CRExtensible.hash(into:)(v7, v5);
  sub_1006C4BDC();
  return Hasher._finalize()();
}

__n128 sub_100D36EE0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[7];

  sub_100D37774(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100D36F30(_QWORD *a1)
{
  return sub_100D36A44(a1);
}

uint64_t sub_100D36F78(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D37BCC();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D36FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1007E66A8();
  v7 = sub_100D37368();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D37014(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D37BCC();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100D3704C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D373B0();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100D37098(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D373B0();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D370DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D373B0();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100D37118()
{
  unint64_t result;

  result = qword_10140F428;
  if (!qword_10140F428)
  {
    result = swift_getWitnessTable(&unk_100F33BB4, &type metadata for CRLFillData);
    atomic_store(result, (unint64_t *)&qword_10140F428);
  }
  return result;
}

unint64_t sub_100D37168()
{
  unint64_t result;

  result = qword_10140F430;
  if (!qword_10140F430)
  {
    result = swift_getWitnessTable(&unk_100F33CF4, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F430);
  }
  return result;
}

unint64_t sub_100D371B0()
{
  unint64_t result;

  result = qword_10140F438;
  if (!qword_10140F438)
  {
    result = swift_getWitnessTable(&unk_100F33E04, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F438);
  }
  return result;
}

unint64_t sub_100D371F8()
{
  unint64_t result;

  result = qword_10140F440;
  if (!qword_10140F440)
  {
    result = swift_getWitnessTable(&unk_100F33DCC, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F440);
  }
  return result;
}

unint64_t sub_100D37240()
{
  unint64_t result;

  result = qword_10140F448;
  if (!qword_10140F448)
  {
    result = swift_getWitnessTable(&unk_100F33D2C, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F448);
  }
  return result;
}

unint64_t sub_100D37288()
{
  unint64_t result;

  result = qword_10140F450;
  if (!qword_10140F450)
  {
    result = swift_getWitnessTable(&unk_100F33DA4, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F450);
  }
  return result;
}

unint64_t sub_100D372D0()
{
  unint64_t result;

  result = qword_10140F458;
  if (!qword_10140F458)
  {
    result = swift_getWitnessTable(&unk_100F33D7C, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F458);
  }
  return result;
}

unint64_t sub_100D37318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140F460;
  if (!qword_10140F460)
  {
    v1 = sub_1004CB6A4(&qword_10140F468);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10140F460);
  }
  return result;
}

unint64_t sub_100D37368()
{
  unint64_t result;

  result = qword_10140F470;
  if (!qword_10140F470)
  {
    result = swift_getWitnessTable(&unk_100F33E6C, &type metadata for CRLFillData);
    atomic_store(result, (unint64_t *)&qword_10140F470);
  }
  return result;
}

unint64_t sub_100D373B0()
{
  unint64_t result;

  result = qword_10140F478;
  if (!qword_10140F478)
  {
    result = swift_getWitnessTable(&unk_100F33CAC, &type metadata for CRLFillData);
    atomic_store(result, (unint64_t *)&qword_10140F478);
  }
  return result;
}

unint64_t sub_100D373F8()
{
  unint64_t result;

  result = qword_10140F480;
  if (!qword_10140F480)
  {
    result = swift_getWitnessTable(&unk_100F33BFC, &type metadata for CRLFillData);
    atomic_store(result, (unint64_t *)&qword_10140F480);
  }
  return result;
}

__n128 sub_100D3743C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int v16;
  char v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v4 = objc_opt_self(CRLColorFill);
  v5 = (void *)swift_dynamicCastObjCClass(a1, v4);
  if (v5)
  {
    v6 = objc_msgSend(v5, "color");
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47, "Unsupported fill type for archiving. Falling back to archiving color fill.", 74, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2u, 47, (uint64_t)"Unsupported fill type for archiving. Falling back to archiving color fill.", 74, 2u);
    v7 = objc_msgSend(a1, "referenceColor");
    if (v7)
      goto LABEL_5;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52, "Missing fill reference color. Falling back to black color.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2u, 52, (uint64_t)"Missing fill reference color. Falling back to black color.", 58, 2u);
    v6 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
  }
  v7 = v6;
LABEL_5:
  sub_1006C5DE8(v7, (uint64_t)&v16);

  v9 = v22;
  v8 = v23;
  v10 = v17;
  v11 = v16;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 20) = v10;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v13;
  *(_OWORD *)(a2 + 56) = v14;
  *(_OWORD *)(a2 + 72) = v15;
  *(_QWORD *)(a2 + 88) = v9;
  *(_QWORD *)(a2 + 96) = v8;
  *(_QWORD *)(a2 + 104) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100D3763C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F6C6F63, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_100D37774(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;

  v5 = sub_1004B804C(&qword_10140F488);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D37240();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLFillData.CodingKeys, &type metadata for CRLFillData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1004B804C(&qword_1013F3EB8);
    v55 = 0;
    v13 = sub_100D37B68(&qword_10140F490, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v12, &v55, v5, v12, v13);
    v14 = v43;
    v15 = v44;
    v55 = 1;
    v16 = sub_1006C6638();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLColorData, &v55, v5, &type metadata for CRLColorData, v16);
    v54 = v15;
    v37 = v14;
    v35 = BYTE4(v43);
    v36 = v43;
    v33 = v45;
    v34 = v44;
    v17 = v47;
    v32 = v46;
    v31 = v48;
    v30 = v49;
    v42 = v50;
    v29 = v51;
    v18 = v53;
    v38 = v52;
    v19 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v55 = 2;
    v39 = sub_1004F3130();
    v41 = v17;
    v20 = v38;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v20);
    v40 = v18;
    swift_bridgeObjectRetain(v18);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v19, &v55, v5, v19, v39);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v43;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRelease();
    v22 = v41;
    swift_bridgeObjectRetain(v41);
    v23 = v42;
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    v24 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v37;
    *(_BYTE *)(a2 + 8) = v54;
    *(_DWORD *)(a2 + 16) = v36;
    *(_BYTE *)(a2 + 20) = v35;
    v25 = v33;
    *(_QWORD *)(a2 + 24) = v34;
    *(_QWORD *)(a2 + 32) = v25;
    *(_QWORD *)(a2 + 40) = v32;
    *(_QWORD *)(a2 + 48) = v22;
    v26 = v30;
    *(_QWORD *)(a2 + 56) = v31;
    *(_QWORD *)(a2 + 64) = v26;
    v27 = v29;
    *(_QWORD *)(a2 + 72) = v23;
    *(_QWORD *)(a2 + 80) = v27;
    *(_QWORD *)(a2 + 88) = v20;
    *(_QWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 104) = v21;
  }
}

uint64_t sub_100D37B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F3EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D37B68(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_1013F3EB8);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100D37BCC()
{
  unint64_t result;

  result = qword_10140F4A8;
  if (!qword_10140F4A8)
  {
    result = swift_getWitnessTable(&unk_100F33E94, &type metadata for CRLFillData);
    atomic_store(result, (unint64_t *)&qword_10140F4A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLFillData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100D37C5C + 4 * byte_100F33B95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100D37C90 + 4 * byte_100F33B90[v4]))();
}

uint64_t sub_100D37C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D37C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D37CA0);
  return result;
}

uint64_t sub_100D37CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D37CB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100D37CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D37CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData.CodingKeys()
{
  return &type metadata for CRLFillData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLFillData.FillType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100D37D1C + 4 * byte_100F33B9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100D37D3C + 4 * byte_100F33B9F[v4]))();
}

_BYTE *sub_100D37D1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100D37D3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D37D44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D37D4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100D37D54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100D37D5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData.FillType()
{
  return &type metadata for CRLFillData.FillType;
}

unint64_t sub_100D37D7C()
{
  unint64_t result;

  result = qword_10140F4B0;
  if (!qword_10140F4B0)
  {
    result = swift_getWitnessTable(&unk_100F33F20, &type metadata for CRLFillData.FillType);
    atomic_store(result, (unint64_t *)&qword_10140F4B0);
  }
  return result;
}

unint64_t sub_100D37DC4()
{
  unint64_t result;

  result = qword_10140F4B8;
  if (!qword_10140F4B8)
  {
    result = swift_getWitnessTable(&unk_100F33F68, &type metadata for CRLFillData.FillType);
    atomic_store(result, (unint64_t *)&qword_10140F4B8);
  }
  return result;
}

unint64_t sub_100D37E0C()
{
  unint64_t result;

  result = qword_10140F4C0;
  if (!qword_10140F4C0)
  {
    result = swift_getWitnessTable(&unk_100F34090, &type metadata for CRLFillData.FillType);
    atomic_store(result, (unint64_t *)&qword_10140F4C0);
  }
  return result;
}

unint64_t sub_100D37E54()
{
  unint64_t result;

  result = qword_10140F4C8;
  if (!qword_10140F4C8)
  {
    result = swift_getWitnessTable(&unk_100F34130, &type metadata for CRLFillData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F4C8);
  }
  return result;
}

unint64_t sub_100D37E98()
{
  unint64_t result;

  result = qword_10140F4D0;
  if (!qword_10140F4D0)
  {
    result = swift_getWitnessTable(&unk_100F34018, &type metadata for CRLFillData.FillType);
    atomic_store(result, (unint64_t *)&qword_10140F4D0);
  }
  return result;
}

_QWORD *sub_100D37EDC(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v30[-v9];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v30[-v15];
  v17 = *(_QWORD *)(v4 + 632);
  v18 = (uint64_t)v2 + v17;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v17, v30, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v19 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v19);
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v20 = (uint64_t)v2 + qword_101481450;
    swift_beginAccess((char *)v2 + qword_101481450, v31, 0, 0);
    sub_1004B8460(v20, (uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
    v21 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    CRStruct_1.copy(renamingReferences:)(0, v5, v21);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v17, v31, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v16, (uint64_t *)&unk_1013F02C0);
    v22 = (uint64_t)v2 + qword_101481450;
    swift_beginAccess((char *)v2 + qword_101481450, v30, 0, 0);
    sub_1004B8460(v22, (uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
  }
  v23 = v2[4];
  v24 = v2[5];
  v27 = v2 + 2;
  v25 = v2[2];
  v26 = v27[1];
  v28 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_1004B84E0((uint64_t)v10, v28 + qword_101481450, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1004C4938((uint64_t)v16, v28 + *(_QWORD *)(*(_QWORD *)v28 + 632), (uint64_t *)&unk_1013F02C0);
  return sub_1005E1000(v26, v23, v24, v25);
}

uint64_t sub_100D38184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v13[-v7];
  swift_beginAccess(a1 + 32, v14, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v9 = v1 + qword_101481450;
    swift_beginAccess(v1 + qword_101481450, v13, 32, 0);
    v10 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    CRRegister.wrappedValue.getter(v10);
    swift_endAccess(v13);
    sub_100D39040((uint64_t)v8);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_beginAccess(v9, v13, 33, 0);
    sub_1004B8460((uint64_t)v8, (uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    CRRegister.wrappedValue.setter(v5, v10, v11);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_endAccess(v13);
  }
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v13, 33, 0);
  sub_100D3D410(a1);
  return swift_endAccess(v13);
}

uint64_t sub_100D3832C()
{
  uint64_t result;

  qword_101481438 = 97;
  unk_101481440 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F34798);
  qword_101481448 = result;
  return result;
}

uint64_t sub_100D38368@<X0>(uint64_t a1@<X8>)
{
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  simd_float4 v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  v4 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLAssetData(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v14 = type metadata accessor for UUID(0);
  v15 = sub_1004F2A1C(v14, (uint64_t)qword_101481278);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v15, v14);
  v16 = &v13[*(int *)(v10 + 20)];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0xE000000000000000;
  *(_QWORD *)&v13[*(int *)(v10 + 24)] = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v22 = matrix_identity_float4x4.columns[3];
  v17 = type metadata accessor for CRLUSDZItemCRDTData(0);
  v18 = v24;
  *(_QWORD *)(v24 + *(int *)(v17 + 20)) = _swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v13, (uint64_t)v3, type metadata accessor for CRLAssetData);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)&v3[v1[5]], (uint64_t *)&unk_1013E9BE0);
  *(simd_float4 *)&v3[v1[6]] = v22;
  v19 = &v3[v1[7]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  *(_QWORD *)&v3[v1[8]] = _swiftEmptyDictionarySingleton;
  v20 = sub_1004B7878((unint64_t *)&unk_1013E9BF0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34760);
  CRRegister.init(_:)(v3, v1, v20);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v18, v6, v23);
}

uint64_t sub_100D38600()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v0 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - v4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v6);
  CRRegister.wrappedValue.getter(v6);
  v7 = sub_100D385FC(v5, v2);
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  return v7 & 1;
}

uint64_t sub_100D386E0()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DDF08 != -1)
    swift_once(&qword_1013DDF08, sub_100D3832C);
  v0 = qword_101481438;
  v1 = qword_101481448;
  swift_bridgeObjectRetain(unk_101481440);
  swift_retain(v1);
  return v0;
}

uint64_t sub_100D38754(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100D38798(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E9C38, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34590);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100D387D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100D38830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_100D38880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100D388D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100D38938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100D38988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100D389D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D38A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100D38A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100D38AE8()
{
  sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100D38B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100D38B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_100D38BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7488, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F345F0);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100D38C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7488, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F345F0);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100D38CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100D38D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D38D60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100D38DB0(char *a1, char *a2)
{
  return qword_100F34868[*a1] == qword_100F34868[*a2];
}

Swift::Int sub_100D38DD4()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F34868[v1]);
  return Hasher._finalize()();
}

void sub_100D38E20()
{
  char *v0;

  Hasher._combine(_:)(qword_100F34868[*v0]);
}

Swift::Int sub_100D38E54(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F34868[v2]);
  return Hasher._finalize()();
}

void sub_100D38E9C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F34868[*v1];
}

uint64_t sub_100D38EB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100D38EE0 + 4 * byte_100F341B0[*v0]))(0x7465737361, 0xE500000000000000);
}

uint64_t sub_100D38EE0()
{
  return 0x7341726574736F70;
}

uint64_t sub_100D38F04()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_100D38F24()
{
  return 0x676E69646E756F62;
}

unint64_t sub_100D38F44()
{
  return 0xD000000000000010;
}

uint64_t sub_100D38F60@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100D3C8EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100D38F84()
{
  char *v0;

  return qword_100F34868[*v0];
}

void sub_100D38F9C(_QWORD *a1@<X8>)
{
  *a1 = &off_1012640C8;
}

uint64_t sub_100D38FAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D3C120();
  v5 = sub_100D3C168();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100D38FF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D3C168();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D39018(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D3C168();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100D39040@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, __n128);
  __n128 v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;

  v51 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v2);
  v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - v5;
  __chkstk_darwin(v7);
  *(_QWORD *)&v50 = (char *)&v44 - v8;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLAssetData(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v45 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  sub_1008FD5D8(v1, (uint64_t)v12);
  v44 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v44(v18, v12, v9);
  v19 = *(int *)(v13 + 20);
  v21 = *(_QWORD *)(v1 + v19);
  v20 = *(_QWORD *)(v1 + v19 + 8);
  v22 = *(_QWORD *)(v1 + *(int *)(v13 + 24));
  v23 = &v18[v19];
  *(_QWORD *)v23 = v21;
  *((_QWORD *)v23 + 1) = v20;
  *(_QWORD *)&v18[*(int *)(v13 + 24)] = v22;
  v24 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  swift_bridgeObjectRetain(v20);
  v25 = swift_bridgeObjectRetain(v22);
  v46 = v9;
  v24(v12, v9, v25);
  v26 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  v27 = v26[5];
  v48 = v1;
  sub_1004CB7BC(v1 + v27, (uint64_t)v6, (uint64_t *)&unk_1013E9BE0);
  v49 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E9BE0);
    v28 = v50;
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v13);
  }
  else
  {
    v29 = (uint64_t)v6;
    v30 = v45;
    sub_1004B84E0(v29, v45, type metadata accessor for CRLAssetData);
    sub_1008FD5D8(v30, (uint64_t)v12);
    v31 = v24;
    v33 = v46;
    v32 = (uint64_t)v47;
    v44(v47, v12, v46);
    v34 = *(int *)(v13 + 20);
    v36 = *(_QWORD *)(v30 + v34);
    v35 = *(_QWORD *)(v30 + v34 + 8);
    v37 = *(_QWORD *)(v30 + *(int *)(v13 + 24));
    v38 = (_QWORD *)(v32 + v34);
    *v38 = v36;
    v38[1] = v35;
    *(_QWORD *)(v32 + *(int *)(v13 + 24)) = v37;
    swift_bridgeObjectRetain(v35);
    v39 = swift_bridgeObjectRetain(v37);
    v31(v12, v33, v39);
    sub_1004B84A4(v30, type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v32, 0, 1, v13);
    v28 = v50;
    sub_1004C4938(v32, v50, (uint64_t *)&unk_1013E9BE0);
  }
  v50 = *(_OWORD *)(v48 + v26[6]);
  v40 = *(_QWORD *)(v48 + v26[8]);
  v41 = v51;
  sub_1004B84E0((uint64_t)v18, v51, type metadata accessor for CRLAssetData);
  sub_1004C4938(v28, v41 + v26[5], (uint64_t *)&unk_1013E9BE0);
  *(_OWORD *)(v41 + v26[6]) = v50;
  v42 = v41 + v26[7];
  *(_QWORD *)v42 = 0;
  *(_QWORD *)(v42 + 8) = 0;
  *(_BYTE *)(v42 + 16) = 1;
  *(_QWORD *)(v41 + v26[8]) = v40;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v40).n128_u64[0];
  return result;
}

uint64_t sub_100D393A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_1004B804C(&qword_10140F9C0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D3C168();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLUSDZAssetDataStruct.CodingKeys, &type metadata for CRLUSDZAssetDataStruct.CodingKeys, v11, v9, v10);
  LOBYTE(v23) = 0;
  v12 = type metadata accessor for CRLAssetData(0);
  v13 = sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v23, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
    v15 = v3 + v14[5];
    LOBYTE(v23) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v15, &v23, v5, v12, v13);
    v23 = *(_OWORD *)(v3 + v14[6]);
    v25 = 2;
    v16 = sub_100D3CB94();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v25, v5, &type metadata for CRL3DRotation, v16);
    v17 = (__int128 *)(v3 + v14[7]);
    v18 = *((_BYTE *)v17 + 16);
    v23 = *v17;
    v24 = v18;
    v25 = 3;
    v19 = sub_1005C944C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v23, &v25, v5, &type metadata for CRLRectData, v19);
    *(_QWORD *)&v23 = *(_QWORD *)(v3 + v14[8]);
    v25 = 4;
    v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v21 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v25, v5, v20, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100D395F0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(__n128);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  char v50;
  char v51;

  v40 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1004B804C(&qword_10140F9B0);
  v9 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(__n128))(v7 + 56);
  v46 = &v15[*(int *)(v16 + 20)];
  v17(v13);
  v18 = &v15[v12[7]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v44 = v12[8];
  v45 = a1;
  v48 = v15;
  *(_QWORD *)&v15[v44] = _swiftEmptyDictionarySingleton;
  v20 = a1[3];
  v19 = a1[4];
  sub_1004BB5A4(a1, v20);
  v21 = sub_100D3C168();
  v42 = v11;
  v22 = v47;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLUSDZAssetDataStruct.CodingKeys, &type metadata for CRLUSDZAssetDataStruct.CodingKeys, v21, v20, v19);
  if (v22)
  {
    v26 = (uint64_t)v46;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v45);
    sub_1004CB800(v26, (uint64_t *)&unk_1013E9BE0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = v9;
    LOBYTE(v49) = 0;
    v24 = sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
    v25 = (uint64_t)v41;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v6, &v49, v43, v6, v24);
    sub_1004B84E0(v25, (uint64_t)v48, type metadata accessor for CRLAssetData);
    LOBYTE(v49) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6, &v49, v43, v6, v24);
    sub_1004F32C0((uint64_t)v5, (uint64_t)v46);
    v51 = 2;
    v27 = sub_100D3CB50();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRL3DRotation, &v51, v43, &type metadata for CRL3DRotation, v27);
    v28 = (uint64_t)v48;
    *(_OWORD *)&v48[v12[6]] = v49;
    v51 = 3;
    v29 = sub_1005C9408();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for CRLRectData, &v51, v43, &type metadata for CRLRectData, v29);
    v30 = v50;
    *(_OWORD *)v18 = v49;
    v18[16] = v30;
    v31 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v51 = 4;
    v32 = sub_1004F3130();
    v33 = v31;
    v34 = v43;
    v35 = v31;
    v36 = v42;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v33, &v51, v43, v35, v32);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v34);
    v37 = v49;
    v38 = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + v38) = v37;
    sub_1004B8460(v28, v40, type metadata accessor for CRLUSDZAssetDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v45);
    sub_1004B84A4(v28, type metadata accessor for CRLUSDZAssetDataStruct);
  }
}

void sub_100D39A28(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100D395F0(a1, a2);
}

uint64_t sub_100D39A3C(_QWORD *a1)
{
  return sub_100D393A4(a1);
}

uint64_t sub_100D39A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140F9D0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F344D0);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D39AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878((unint64_t *)&unk_1013E9BF0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34760);
  v7 = sub_1004B7878(&qword_10140F9D8, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F344A8);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D39B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140F9D0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F344D0);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100D39B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140F968, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34328);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100D39BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_10140F968, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34328);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D39C4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_10140F968, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34328);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100D39C9C()
{
  return 7;
}

uint64_t sub_100D39CA8()
{
  return 0x2000000000000;
}

void sub_100D39CB8(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_10140F528)
  {
    v6 = (uint64_t)a1 + qword_101481450;
    swift_beginAccess((char *)a1 + qword_101481450, v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    swift_beginAccess(v1 + qword_101481450, v8, 33, 0);
    v7 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    swift_retain(a1);
    CRStruct_1.merge(_:)(v5, v3, v7);
    swift_endAccess(v8);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
  }
}

uint64_t sub_100D39DE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];

  v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v28[-v7];
  v9 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v28[-v13];
  v15 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v15);
  v17 = &v28[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v20 = &v28[-v19];
  if (*(_UNKNOWN ****)a1 != &off_10140F528)
    goto LABEL_5;
  v21 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v21, v31, 0, 0);
  sub_1004CB7BC(v21, (uint64_t)v20, (uint64_t *)&unk_1013F02C0);
  v22 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
  swift_beginAccess(v22, v30, 0, 0);
  sub_1004CB7BC(v22, (uint64_t)v17, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v22) = sub_100D5ED30((uint64_t)v20, (uint64_t)v17);
  sub_1004CB800((uint64_t)v17, (uint64_t *)&unk_1013F02C0);
  sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013F02C0);
  if ((v22 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v26 = 0;
    return v26 & 1;
  }
  v23 = v1 + qword_101481450;
  swift_beginAccess(v23, v29, 0, 0);
  sub_1004B8460(v23, (uint64_t)v14, type metadata accessor for CRLUSDZItemCRDTData);
  v24 = a1 + qword_101481450;
  swift_beginAccess(a1 + qword_101481450, v28, 0, 0);
  sub_1004B8460(v24, (uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
  v25 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v25);
  CRRegister.wrappedValue.getter(v25);
  v26 = sub_100D3C420((uint64_t)v8, (uint64_t)v5);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_release(a1);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLUSDZItemCRDTData);
  return v26 & 1;
}

uint64_t sub_100D3A0C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_101481450;
  swift_beginAccess(v2 + qword_101481450, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
    v12 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    CRStruct_1.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013F7488, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F345F0);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
  return v16;
}

uint64_t sub_100D3A28C(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v14[-v7];
  if (*a1 == &off_10140F528)
  {
    v9 = v1 + qword_101481450;
    swift_beginAccess(v9, v15, 0, 0);
    sub_1004B8460(v9, (uint64_t)v8, type metadata accessor for CRLUSDZItemCRDTData);
    v10 = (uint64_t)a1 + qword_101481450;
    swift_beginAccess((char *)a1 + qword_101481450, v14, 0, 0);
    sub_1004B8460(v10, (uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    v11 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    v12 = CRStruct_1.hasDelta(from:)(v5, v3, v11);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLUSDZItemCRDTData);
    return v12 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLUSDZItemData.swift", 30, 2, 147, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100D3A434(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_10140F9E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_101481450;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    v19 = v17 + qword_101481450;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    v20 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    swift_retain(a1);
    v21 = v31;
    CRStruct_1.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_10140F9E0);
    v22 = sub_1004B804C(&qword_10140F988);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_10140F9E0);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_10140F9E0);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_10140F980, &qword_10140F988, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_10140F9E0);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLUSDZItemData.swift", 30, 2, 160, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100D3A7A8(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v46 = *v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_10140F988);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v14 = sub_1004CBA30(&qword_10140F980, &qword_10140F988, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
  LOBYTE(v2) = v10;
  v15 = v48;
  PartialCRDT.init(serializedData:)(a1, a2, v10, v14);
  if (!v15)
  {
    v42 = v9;
    v43 = v7;
    v48 = v11;
    v16 = v47;
    swift_beginAccess(v47 + qword_101481450, v51, 33, 0);
    v17 = type metadata accessor for CRLUSDZItemCRDTData(0);
    v18 = sub_1004B7878(&qword_1013E9C20, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34738);
    LODWORD(v2) = CRStruct_1.merge(delta:)(v13, v17, v18);
    swift_endAccess(v51);
    if ((v2 & 1) == 0)
    {
      v39 = v13;
      v40 = v10;
      v41 = (int)v2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v19 = (void *)static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
      swift_beginAccess(v22, v49, 0, 0);
      v23 = v22;
      v24 = v44;
      sub_1004CB7BC(v23, v44, (uint64_t *)&unk_1013F02C0);
      v25 = v19;
      v26 = sub_1004B804C(&qword_1013E1A80);
      v27 = v42;
      CRRegister.wrappedValue.getter(v26);
      v28 = sub_1004CB800(v24, (uint64_t *)&unk_1013F02C0);
      v29 = UUID.uuidString.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v52 = v16;
      swift_retain(v16);
      v33 = String.init<A>(describing:)(&v52, v46);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v32;
      *(_QWORD *)(inited + 72) = v33;
      *(_QWORD *)(inited + 80) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v2 = *(uint64_t **)(inited + 16);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v2, v36);

      LOBYTE(v2) = v41;
      v10 = v40;
      v13 = v39;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return v2 & 1;
}

unint64_t sub_100D3AB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v36 = type metadata accessor for CRLAssetData(0);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v31 = (uint64_t)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - v3;
  v33 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v33);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_1013E0DD8);
  v11 = sub_1004B804C(&qword_101405DE0);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v32, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5A10;
  v34 = v15;
  v16 = (_QWORD *)(v15 + v14);
  v17 = (char *)v16 + *(int *)(v11 + 48);
  *v16 = 2053403509;
  v16[1] = 0xE400000000000000;
  v18 = v0 + qword_101481450;
  swift_beginAccess(v18, v37, 32, 0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  sub_1004B8460((uint64_t)v9, (uint64_t)v4, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLUSDZAssetDataStruct);
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v30(v17, v4, v20);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLAssetData);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v22(v17, 0, 1, v20);
  v23 = (_QWORD *)((char *)v16 + v32);
  v24 = (char *)v16 + v32 + *(int *)(v11 + 48);
  *v23 = 0x726574736F70;
  v23[1] = 0xE600000000000000;
  swift_beginAccess(v18, v37, 32, 0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  v25 = &v6[*(int *)(v33 + 20)];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v25, 1, v36))
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
    v26 = 1;
  }
  else
  {
    v27 = (uint64_t)v25;
    v28 = v31;
    sub_1004B8460(v27, v31, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
    v30(v24, (char *)v28, v20);
    sub_1004B84A4(v28, type metadata accessor for CRLAssetData);
    v26 = 0;
  }
  v22(v24, v26, 1, v20);
  return sub_1008D5968(v34);
}

uint64_t sub_100D3AE98()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_101481450, type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100D3AEC0()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_101481450, type metadata accessor for CRLUSDZItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLUSDZItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140F500, (uint64_t)&nominal type descriptor for CRLUSDZItemData);
}

uint64_t sub_100D3AF24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLUSDZItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDZItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_10140F830, (uint64_t)&nominal type descriptor for CRLUSDZItemCRDTData);
}

uint64_t *sub_100D3AFA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

double sub_100D3B034(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D3B07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100D3B0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D3B150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100D3B1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D3B218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D3B224);
}

uint64_t sub_100D3B224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100D3B2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D3B2B0);
}

uint64_t sub_100D3B2B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_100D3B32C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100D3B3A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_100D3B3A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_10140F840)
  {
    v2 = type metadata accessor for CRLUSDZAssetDataStruct(255);
    v3 = sub_1004B7878((unint64_t *)&unk_1013E9BF0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34760);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_10140F840);
  }
}

uint64_t type metadata accessor for CRLUSDZAssetDataStruct(uint64_t a1)
{
  return sub_1004BD408(a1, qword_10140F8C8, (uint64_t)&nominal type descriptor for CRLUSDZAssetDataStruct);
}

uint64_t *sub_100D3B42C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v37)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v37 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v37(a1, a2, v7);
    v8 = type metadata accessor for CRLAssetData(0);
    v9 = *(int *)(v8 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(int *)(v8 + 24);
    v14 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v14;
    v15 = a3[5];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)(v8 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
    swift_bridgeObjectRetain(v12);
    v20 = swift_bridgeObjectRetain(v14);
    if (v19(v17, 1, v8, v20))
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v37((uint64_t *)v16, (uint64_t *)v17, v7);
      v23 = *(int *)(v8 + 20);
      v24 = &v16[v23];
      v25 = &v17[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(int *)(v8 + 24);
      v28 = *(_QWORD *)&v17[v27];
      *(_QWORD *)&v16[v27] = v28;
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v18 + 56);
      swift_bridgeObjectRetain(v26);
      v30 = swift_bridgeObjectRetain(v28);
      v29(v16, 0, 1, v8, v30);
    }
    v31 = a3[7];
    *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    v34 = a3[8];
    v35 = *(uint64_t *)((char *)a2 + v34);
    *(uint64_t *)((char *)a1 + v34) = v35;
    swift_bridgeObjectRetain(v35);
  }
  return a1;
}

double sub_100D3B5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = type metadata accessor for CRLAssetData(0);
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v6 - 8) + 48))(v8, 1, v6, v7))
  {
    v5(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D3B6AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v35(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(v7 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = a3[5];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v13);
  if (v18(v16, 1, v7, v19))
  {
    v20 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v35((uint64_t)v15, (uint64_t)v16, v6);
    v21 = *(int *)(v7 + 20);
    v22 = &v15[v21];
    v23 = &v16[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(int *)(v7 + 24);
    v26 = *(_QWORD *)&v16[v25];
    *(_QWORD *)&v15[v25] = v26;
    v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v17 + 56);
    swift_bridgeObjectRetain(v24);
    v28 = swift_bridgeObjectRetain(v26);
    v27(v15, 0, 1, v7, v28);
  }
  v29 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(v31 + 16);
  v32 = a3[8];
  v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  swift_bridgeObjectRetain(v33);
  return a1;
}

uint64_t sub_100D3B834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, __n128);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;

  v6 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v12 = v11[1];
  v10[1] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  v13 = *(int *)(v8 + 24);
  v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  v15 = swift_bridgeObjectRelease();
  v46 = a3;
  v16 = a3[5];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = *(_QWORD *)(v8 - 8);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v19 + 48);
  v21 = v20(a1 + v16, 1, v8, v15);
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v18, 1, v8);
  if (!v21)
  {
    if (!v22)
    {
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v39 = *(int *)(v8 + 20);
      v40 = &v17[v39];
      v41 = &v18[v39];
      *(_QWORD *)v40 = *(_QWORD *)v41;
      v42 = *((_QWORD *)v41 + 1);
      *((_QWORD *)v40 + 1) = v42;
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRelease();
      v43 = *(int *)(v8 + 24);
      v44 = *(_QWORD *)&v18[v43];
      *(_QWORD *)&v17[v43] = v44;
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v31 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v17, v18, v6);
  v23 = *(int *)(v8 + 20);
  v24 = &v17[v23];
  v25 = &v18[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v24 + 1) = v26;
  v27 = *(int *)(v8 + 24);
  v28 = *(_QWORD *)&v18[v27];
  *(_QWORD *)&v17[v27] = v28;
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v19 + 56);
  swift_bridgeObjectRetain(v26);
  v30 = swift_bridgeObjectRetain(v28);
  v29(v17, 0, 1, v8, v30);
LABEL_7:
  *(_OWORD *)(a1 + v46[6]) = *(_OWORD *)(a2 + v46[6]);
  v32 = v46[7];
  v33 = a1 + v32;
  v34 = (__int128 *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
  *(_OWORD *)v33 = v35;
  v36 = v46[8];
  v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D3BA84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    v13 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(_QWORD *)&v10[*(int *)(v8 + 24)] = *(_QWORD *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  v14 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100D3BBD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;

  v6 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(int *)(v8 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v14 = swift_bridgeObjectRelease();
  v33 = a3;
  v15 = a3[5];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = *(_QWORD *)(v8 - 8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v20 = v19(a1 + v15, 1, v8, v14);
  v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v17, 1, v8);
  if (!v20)
  {
    if (!v21)
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      v27 = *(int *)(v8 + 20);
      v28 = &v16[v27];
      v29 = &v17[v27];
      v31 = *(_QWORD *)v29;
      v30 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = v31;
      *((_QWORD *)v28 + 1) = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v16[*(int *)(v8 + 24)] = *(_QWORD *)&v17[*(int *)(v8 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v16, v17, v6);
  *(_OWORD *)&v16[*(int *)(v8 + 20)] = *(_OWORD *)&v17[*(int *)(v8 + 20)];
  *(_QWORD *)&v16[*(int *)(v8 + 24)] = *(_QWORD *)&v17[*(int *)(v8 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v8);
LABEL_7:
  v23 = v33[7];
  *(_OWORD *)(a1 + v33[6]) = *(_OWORD *)(a2 + v33[6]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
  *(_QWORD *)(a1 + v33[8]) = *(_QWORD *)(a2 + v33[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D3BDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D3BDD4);
}

uint64_t sub_100D3BDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100D3BE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D3BE8C);
}

uint64_t sub_100D3BE8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_100D3BF34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for CRLAssetData(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004F0958(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.Int128 + 64;
      v6[3] = &unk_100F34218;
      v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_100D3BFDC()
{
  return sub_1004B7878(&qword_10140F910, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34230);
}

uint64_t sub_100D3C008()
{
  return sub_1004B7878((unint64_t *)&unk_1013E9BF0, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34760);
}

uint64_t sub_100D3C034()
{
  return sub_1004B7878(&qword_10140F918, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34300);
}

uint64_t sub_100D3C060()
{
  return sub_1004B7878(&qword_10140F920, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F342D8);
}

unint64_t sub_100D3C090()
{
  unint64_t result;

  result = qword_10140F928;
  if (!qword_10140F928)
  {
    result = swift_getWitnessTable(&unk_100F34370, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F928);
  }
  return result;
}

unint64_t sub_100D3C0D8()
{
  unint64_t result;

  result = qword_10140F930;
  if (!qword_10140F930)
  {
    result = swift_getWitnessTable(&unk_100F34480, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F930);
  }
  return result;
}

unint64_t sub_100D3C120()
{
  unint64_t result;

  result = qword_10140F938;
  if (!qword_10140F938)
  {
    result = swift_getWitnessTable(&unk_100F34448, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F938);
  }
  return result;
}

unint64_t sub_100D3C168()
{
  unint64_t result;

  result = qword_10140F940;
  if (!qword_10140F940)
  {
    result = swift_getWitnessTable(&unk_100F343A8, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F940);
  }
  return result;
}

unint64_t sub_100D3C1B0()
{
  unint64_t result;

  result = qword_10140F948;
  if (!qword_10140F948)
  {
    result = swift_getWitnessTable(&unk_100F34420, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F948);
  }
  return result;
}

unint64_t sub_100D3C1F8()
{
  unint64_t result;

  result = qword_10140F950;
  if (!qword_10140F950)
  {
    result = swift_getWitnessTable(&unk_100F343F8, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F950);
  }
  return result;
}

uint64_t sub_100D3C23C()
{
  return sub_1004CBA30(&qword_10140F958, &qword_10140F960, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_100D3C268()
{
  return sub_1004B7878(&qword_10140F968, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34328);
}

uint64_t sub_100D3C294()
{
  return sub_1004B7878(&qword_10140F970, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34510);
}

uint64_t sub_100D3C2C0()
{
  return sub_1004B7878(&qword_10140F978, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34558);
}

uint64_t sub_100D3C2EC()
{
  return sub_1004B7878(&qword_1013E9C38, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34590);
}

uint64_t sub_100D3C318()
{
  return sub_1004CBA30(&qword_10140F980, &qword_10140F988, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100D3C344()
{
  return sub_1004B7878(&qword_1013F7488, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F345F0);
}

uint64_t sub_100D3C370()
{
  return sub_1004B7878(&qword_10140F990, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F34670);
}

uint64_t sub_100D3C39C()
{
  return sub_1004CBA30(&qword_10140F998, (uint64_t *)&unk_1013E9BD0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100D3C3C8()
{
  return sub_1004B7878(&qword_10140F9A0, type metadata accessor for CRLUSDZItemCRDTData, (uint64_t)&unk_100F346D0);
}

uint64_t sub_100D3C3F4()
{
  return sub_1004B7878(&qword_10140F9A8, type metadata accessor for CRLUSDZAssetDataStruct, (uint64_t)&unk_100F34278);
}

uint64_t sub_100D3C420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  float *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;

  v4 = type metadata accessor for CRLAssetData(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E9C00);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - v18;
  if ((static UUID.== infix(_:_:)(a1) & 1) == 0)
    goto LABEL_26;
  v20 = *(int *)(v4 + 20);
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  if (v21 != *v23 || v22 != v24)
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, *v23, v24, 0);
    v27 = 0;
    if ((v26 & 1) == 0)
      return v27 & 1;
  }
  if ((sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24))) & 1) == 0)
  {
LABEL_26:
    v27 = 0;
    return v27 & 1;
  }
  v65.n128_u64[0] = (unint64_t)v13;
  v28 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  v29 = *(int *)(v28 + 20);
  v63 = a1;
  sub_1004CB7BC(a1 + v29, (uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
  v62 = v28;
  v30 = *(int *)(v28 + 20);
  v64 = a2;
  sub_1004CB7BC(a2 + v30, (uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
  v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  sub_1004CB7BC((uint64_t)v16, v31, (uint64_t *)&unk_1013E9BE0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v32((uint64_t)v10, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    if (v32(v31, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  v50 = v65.n128_u64[0];
  sub_1004CB7BC((uint64_t)v10, v65.n128_i64[0], (uint64_t *)&unk_1013E9BE0);
  if (v32(v31, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    sub_1004B84A4(v50, type metadata accessor for CRLAssetData);
LABEL_17:
    v51 = &qword_1013E9C00;
    v52 = (uint64_t)v10;
LABEL_25:
    sub_1004CB800(v52, v51);
    goto LABEL_26;
  }
  sub_1004B84E0(v31, (uint64_t)v7, type metadata accessor for CRLAssetData);
  if ((static UUID.== infix(_:_:)(v50) & 1) == 0
    || ((v53 = *(int *)(v4 + 20),
         v54 = *(_QWORD *)(v50 + v53),
         v55 = *(_QWORD *)(v50 + v53 + 8),
         v56 = &v7[v53],
         v57 = *((_QWORD *)v56 + 1),
         v54 != *(_QWORD *)v56)
     || v55 != v57)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, *(_QWORD *)v56, v57, 0) & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
    sub_1004B84A4(v50, type metadata accessor for CRLAssetData);
    v52 = (uint64_t)v10;
    v51 = (uint64_t *)&unk_1013E9BE0;
    goto LABEL_25;
  }
  v58 = sub_100C9E04C(*(_QWORD *)(v50 + *(int *)(v4 + 24)), *(_QWORD *)&v7[*(int *)(v4 + 24)]);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E9BE0);
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v50, type metadata accessor for CRLAssetData);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  if ((v58 & 1) == 0)
    goto LABEL_26;
LABEL_11:
  v34 = v62;
  v33 = v63;
  v35 = *(int *)(v62 + 24);
  v36 = *(__n128 *)(v63 + v35);
  v37 = v64;
  v65 = *(__n128 *)(v64 + v35);
  v38 = CRL3DRotation.rawValue.getter(v36);
  v40 = v39;
  v41 = CRL3DRotation.rawValue.getter(v65);
  v43 = v42;
  sub_1007B38CC(v38, v40);
  v45 = v44;
  sub_1004BBBC8(v41, v43);
  sub_1004BBBC8(v38, v40);
  if ((v45 & 1) == 0)
    goto LABEL_26;
  v46 = *(int *)(v34 + 28);
  v47 = (float *)(v33 + v46);
  v48 = *(_BYTE *)(v33 + v46 + 16);
  v49 = v37 + v46;
  if ((v48 & 1) != 0)
  {
    if (*(_BYTE *)(v49 + 16))
    {
LABEL_33:
      v27 = sub_100C9E04C(*(_QWORD *)(v33 + *(int *)(v34 + 32)), *(_QWORD *)(v37 + *(int *)(v34 + 32)));
      return v27 & 1;
    }
    goto LABEL_26;
  }
  if ((*(_BYTE *)(v49 + 16) & 1) != 0)
    goto LABEL_26;
  v27 = 0;
  if (*v47 == COERCE_FLOAT(*(_QWORD *)v49) && v47[1] == COERCE_FLOAT(HIDWORD(*(_QWORD *)v49)))
  {
    v60 = *(_QWORD *)(v49 + 8);
    if (v47[2] == *(float *)&v60 && v47[3] == *((float *)&v60 + 1))
      goto LABEL_33;
  }
  return v27 & 1;
}

uint64_t sub_100D3C8EC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x7465737361 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7465737361, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7341726574736F70 && a2 == 0xEF61746144746573)
  {
    v7 = 0xEF61746144746573;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7341726574736F70, 0xEF61746144746573, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69)
  {
    v8 = 0xEB000000006E6F69;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461746E6569726FLL, 0xEB000000006E6F69, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x676E69646E756F62 && a2 == 0xEC00000074636552)
  {
    v9 = 0xEC00000074636552;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x676E69646E756F62, 0xEC00000074636552, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_100D3CB50()
{
  unint64_t result;

  result = qword_10140F9B8;
  if (!qword_10140F9B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_10140F9B8);
  }
  return result;
}

unint64_t sub_100D3CB94()
{
  unint64_t result;

  result = qword_10140F9C8;
  if (!qword_10140F9C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_10140F9C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZAssetDataStruct.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100D3CC24 + 4 * byte_100F341BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100D3CC58 + 4 * byte_100F341B5[v4]))();
}

uint64_t sub_100D3CC58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D3CC60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D3CC68);
  return result;
}

uint64_t sub_100D3CC74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D3CC7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100D3CC80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D3CC88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZAssetDataStruct.CodingKeys()
{
  return &type metadata for CRLUSDZAssetDataStruct.CodingKeys;
}

unint64_t sub_100D3CCA8()
{
  unint64_t result;

  result = qword_10140F9E8;
  if (!qword_10140F9E8)
  {
    result = swift_getWitnessTable(&unk_100F3483C, &type metadata for CRLUSDZAssetDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10140F9E8);
  }
  return result;
}

void sub_100D3CCEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v10 = type metadata accessor for CRLCommandHistoryItem(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a5 + 8) = 0;
  v14 = *(int *)(v11 + 32);
  *(_QWORD *)(a5 + v14) = 0;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
    if (v23 >= 1)
      goto LABEL_3;
LABEL_10:
    __break(1u);
    return;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_10;
LABEL_3:
  v15 = *(int *)(v10 + 28);
  v16 = a2 + v15;
  v17 = a5 + v15;
  v18 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v16, v18);
  *(_QWORD *)a5 = a1;
  sub_100A086F4(a2, (uint64_t)v13);
  if (!a4)
  {
    a4 = (void *)*((_QWORD *)v13 + 1);
    v19 = a4;
  }
  sub_100A08738((uint64_t)v13);

  *(_QWORD *)(a5 + 8) = a4;
  *(_QWORD *)(a5 + v14) = a3;
  v21 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain(v20);
  sub_100A08738(a2);
  *(_QWORD *)(a5 + 16) = v21;
  *(_QWORD *)(a5 + 24) = v20;
}

uint64_t type metadata accessor for CRLCommandHistoryItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FA48;
  if (!qword_10140FA48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandHistoryItem);
  return result;
}

uint64_t *sub_100D3CE88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  uint64_t v17;
  void *v18;
  id v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v9 = (void *)a2[1];
    v8 = a2[2];
    a1[1] = (uint64_t)v9;
    a1[2] = v8;
    v10 = a2[3];
    a1[3] = v10;
    v11 = *(int *)(a3 + 28);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for UUID(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v16 = v9;
    swift_bridgeObjectRetain(v10);
    v15(v12, v13, v14);
    v17 = *(int *)(a3 + 32);
    v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v7 + v17) = (uint64_t)v18;
    v19 = v18;
  }
  return v7;
}

void sub_100D3CF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t *sub_100D3CFD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  void *v16;
  id v17;

  v6 = *a2;
  v7 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = (uint64_t)v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v14 = v7;
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  v15 = *(int *)(a3 + 32);
  v16 = *(void **)((char *)a2 + v15);
  *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
  v17 = v16;
  return a1;
}

uint64_t *sub_100D3D07C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a1[1];
  v9 = (void *)a2[1];
  a1[1] = (uint64_t)v9;
  v10 = v9;

  a1[2] = a2[2];
  v11 = a2[3];
  v12 = a1[3];
  a1[3] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = *(int *)(a3 + 32);
  v18 = *(void **)((char *)a1 + v17);
  v19 = *(void **)((char *)a2 + v17);
  *(uint64_t *)((char *)a1 + v17) = (uint64_t)v19;
  v20 = v19;

  return a1;
}

uint64_t sub_100D3D144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t *sub_100D3D1C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (void *)a1[1];
  a1[1] = a2[1];

  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 32);
  v15 = *(void **)((char *)a1 + v14);
  *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);

  return a1;
}

uint64_t sub_100D3D26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D3D278);
}

uint64_t sub_100D3D278(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_100D3D2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D3D300);
}

char *sub_100D3D300(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100D3D374(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "\b";
  v4[2] = &unk_100F348C0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = "\b";
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100D3D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static UUID.== infix(_:_:)(a1 + *(int *)(a3 + 28));
}

void sub_100D3D410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  uint64_t v40;

  v3 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v37 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  __chkstk_darwin(v11);
  v38 = (uint64_t)&v32 - v12;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  __chkstk_darwin(v18);
  v21 = (char *)&v32 - v20;
  v40 = a1;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v34 = v19;
    v35 = v10;
    v36 = v1;
    v22 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v22);
    sub_1008FD76C((uint64_t)v17, (uint64_t)v21);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v17, v13);
    v24.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, v13);
    CRRegister.wrappedValue.setter(v17, v22, v24);
    v33 = (void (*)(uint64_t, uint64_t))v23;
    v23(v21, v13);
    sub_1004B804C((uint64_t *)&unk_1013F02C0);
    v25 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
    CRRegister.wrappedValue.getter(v25);
    v26 = v38;
    sub_1004CB7BC((uint64_t)v5, v38, (uint64_t *)&unk_1013E1A50);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardItemParentAffinity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v26, 1, v13) == 1)
    {
      sub_1004CB800(v26, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v27 = v34;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v34, v26, v13);
      v28 = (uint64_t)v35;
      sub_1008FD76C(v27, (uint64_t)v35);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
      v29 = v37;
      sub_1004CB7BC(v28, v37, (uint64_t *)&unk_1013E1A50);
      v30 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v39, v25);
      sub_1005E388C(v29, v31);
      v30(v39, 0);
      sub_1004CB800(v28, (uint64_t *)&unk_1013E1A50);
      v33(v27, v13);
    }
  }
}

void sub_100D3D738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  uint64_t v40;

  v3 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v37 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  __chkstk_darwin(v11);
  v38 = (uint64_t)&v32 - v12;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  __chkstk_darwin(v18);
  v21 = (char *)&v32 - v20;
  v40 = a1;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v34 = v19;
    v35 = v10;
    v36 = v1;
    v22 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v22);
    sub_1008FD76C((uint64_t)v17, (uint64_t)v21);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v17, v13);
    v24.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, v13);
    CRRegister.wrappedValue.setter(v17, v22, v24);
    v33 = (void (*)(uint64_t, uint64_t))v23;
    v23(v21, v13);
    sub_1004B804C(&qword_1013F5530);
    v25 = sub_1004B804C((uint64_t *)&unk_101406B00);
    CRRegister.wrappedValue.getter(v25);
    v26 = v38;
    sub_1004CB7BC((uint64_t)v5, v38, (uint64_t *)&unk_1013E1A50);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLShapeItemParentAffinity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v26, 1, v13) == 1)
    {
      sub_1004CB800(v26, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      v27 = v34;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v34, v26, v13);
      v28 = (uint64_t)v35;
      sub_1008FD76C(v27, (uint64_t)v35);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
      v29 = v37;
      sub_1004CB7BC(v28, v37, (uint64_t *)&unk_1013E1A50);
      v30 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v39, v25);
      sub_1005E388C(v29, v31);
      v30(v39, 0);
      sub_1004CB800(v28, (uint64_t *)&unk_1013E1A50);
      v33(v27, v13);
    }
  }
}

void sub_100D3DA60(char a1)
{
  __asm { BR              X10 }
}

id sub_100D3DA88()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithRed:green:blue:alpha:", 0.91372549, 0.501960784, 1.0, 1.0);
  v1 = objc_msgSend(objc_allocWithZone((Class)CRLColorFill), "initWithColor:", v0);

  return v1;
}

uint64_t sub_100D3DC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

double sub_100D3DC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double result;

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  v11 = v10;
  v12 = sub_1004BFA1C();
  v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, v11, (char *)&type metadata for Any + 8, v12);
  v9(v13, a3, a4, a5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_100D3DCAC(void *a1, uint64_t a2, void *a3, void *a4, void *a5, _QWORD *a6, int a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void *v44;
  unint64_t v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  _QWORD v93[5];
  uint64_t v94;
  _BYTE v95[248];
  _BYTE v96[120];
  _BYTE v97[232];
  _BYTE v98[48];
  uint64_t v99;
  _BYTE v100[232];
  _BYTE v101[264];

  v90 = a4;
  LODWORD(v83) = a7;
  v78 = a6;
  v91 = a5;
  v92 = a2;
  v84 = a3;
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  v80 = *(char **)(v8 - 8);
  __chkstk_darwin(v8);
  v77 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v11 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  v89 = v11;
  v12 = __chkstk_darwin(v10);
  v82 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v81 = (char *)&v73 - v15;
  __chkstk_darwin(v14);
  v75 = (char *)&v73 - v16;
  v17 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v18 = __chkstk_darwin(v17);
  v79 = (uint64_t)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v86 = (uint64_t)&v73 - v20;
  v21 = sub_1004B804C((uint64_t *)&unk_1013F5510);
  __chkstk_darwin(v21);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v24);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  v31 = __chkstk_darwin(v30);
  v74 = (uint64_t)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v34 = (char *)&v73 - v33;
  v35 = sub_1004B804C(&qword_1013F5530);
  v36 = __chkstk_darwin(v35);
  v73 = (uint64_t)&v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v85 = (uint64_t)&v73 - v38;
  v87 = a1;
  sub_100924F24(v92, v90, v91, 0, 0, (uint64_t)&v73 - v38);
  *(_QWORD *)&v34[*(int *)(v30 + 20)] = &_swiftEmptyDictionarySingleton;
  memset(v96, 0, 112);
  sub_1004C39E8((uint64_t)v100);
  sub_1004C4938((uint64_t)v100, (uint64_t)v97, (uint64_t *)&unk_1013F1530);
  memset(v98, 0, sizeof(v98));
  v99 = 0;
  sub_100C085D8((uint64_t)v96, (uint64_t)v97, (uint64_t)v98, (uint64_t)v98, (uint64_t)v29, 0.0);
  *(_QWORD *)&v29[*(int *)(v27 + 20)] = &_swiftEmptyDictionarySingleton;
  v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v80 + 7);
  v76 = v8;
  v39(v26, 1, 1, v8);
  v40 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
  sub_10054F488((uint64_t)v101);
  sub_1004C4938((uint64_t)v101, (uint64_t)v95, &qword_1013E1B50);
  v80 = v34;
  v41 = (uint64_t)v23;
  v42 = v81;
  sub_10055EA9C((uint64_t)v29, (uint64_t)v26, v41, (uint64_t)v95, (uint64_t)v34);
  sub_100D3DA60((char)v83);
  v44 = v43;
  v45 = sub_100559A64();
  v46 = v84;
  v83 = v44;
  v47 = v82;
  CRAttributedString.init(_:)(v46, &type metadata for CRLTextAttributeScope, v45);
  v48 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  v48(v42, v47, v88);
  v49 = objc_msgSend(v46, "length");
  v50 = swift_allocObject(&unk_1012A2B78, 24, 7);
  *(_QWORD *)(v50 + 16) = v42;
  v51 = swift_allocObject(&unk_1012A2BA0, 32, 7);
  *(_QWORD *)(v51 + 16) = sub_100559AB8;
  *(_QWORD *)(v51 + 24) = v50;
  v93[4] = sub_10054E858;
  v94 = v51;
  v93[0] = _NSConcreteStackBlock;
  v93[1] = *(_QWORD *)"";
  v93[2] = sub_100D3DC24;
  v93[3] = &unk_1012A2BB8;
  v52 = _Block_copy(v93);
  v53 = v94;
  swift_retain(v51);
  objc_msgSend(v46, "enumerateAttributesInRange:options:usingBlock:", 0, v49, 0, v52, swift_release(v53).n128_f64[0]);
  v84 = v46;

  _Block_release(v52);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation(v51, "", 78, 624, 125, 1);
  v54 = swift_release(v51);
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v55 = v75;
    v56 = v88;
    ((void (*)(char *, char *, uint64_t, __n128))v48)(v75, v42, v88, v54);
    v57 = swift_release(v50);
    v58 = v89;
    v59 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t, __n128))(v89 + 16))(v77, v55, v56, v57);
    v60 = v76;
    CRAttributedString.init(_:)(32, 0xE100000000000000, &type metadata for CRLTextAttributeScope, v45);
    *(_QWORD *)(v59 + *(int *)(v60 + 24)) = &_swiftEmptyDictionarySingleton;
    v61 = v86;
    v62 = v83;
    v63 = v78;
    sub_100850830(v83, 0, 0, 0, v59, v78, 1, v86, 10.0, 1u);
    sub_1004B84A4(v59, type metadata accessor for CRLWPStorageCRDTData);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v56);
    sub_100563064((uint64_t)v63);

    v64 = (uint64_t)v80;
    sub_10070894C(v61, (uint64_t)v80);
    v65 = v73;
    sub_1004CB7BC(v85, v73, &qword_1013F5530);
    v66 = v74;
    sub_1004B8460(v64, v74, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v67 = type metadata accessor for CRLWPStickyNoteItemData(0);
    v68 = swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
    sub_1004B8460(v66, v68 + qword_10147F358, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    v69 = v79;
    sub_1004B8460(v66, v79, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4(v66, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    sub_100708908(v69, v68 + *(_QWORD *)(*(_QWORD *)v68 + 752));
    *(_QWORD *)(v68 + qword_10140A310) = 0;
    sub_1004C4938(v65, v68 + *(_QWORD *)(*(_QWORD *)v68 + 632), &qword_1013F5530);
    v70 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
    v71 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem(0));
    sub_10084AD70(v87, (uint64_t)v70);

    v72 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v92, v72);
    sub_1004B84A4(v86, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004CB800(v85, &qword_1013F5530);
    sub_1004B84A4(v64, type metadata accessor for CRLWPStickyNoteItemCRDTData);
  }
}

char *sub_100D3E4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  uint64_t v42;
  void *v43;
  id v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[32];
  _BYTE v55[24];
  _BYTE v56[24];
  char *v57;

  v53 = a4;
  v49 = a2;
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v51 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v50 = (uint64_t)&v46 - v14;
  __chkstk_darwin(v15);
  v47 = (uint64_t)&v46 - v16;
  __chkstk_darwin(v17);
  v48 = (uint64_t)&v46 - v18;
  __chkstk_darwin(v19);
  v46 = (char *)&v46 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v46 - v22;
  v52 = v4;
  v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v25 = type metadata accessor for CRLWPStickyNoteItemData(0);
  swift_dynamicCastClassUnconditional(v24, v25, 0, 0, 0);
  swift_retain(v24);
  v26 = sub_1007062A0(1);
  swift_release(v24);
  v27 = (uint64_t)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v56, 0, 0);
  sub_1004CB7BC(v27, (uint64_t)v10, &qword_1013F5530);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  swift_release(v26);
  swift_beginAccess(v27, v54, 33, 0);
  v29 = (char *)v27;
  v30 = (uint64_t)v57;
  sub_100D3D738(v53);
  swift_endAccess(v54);
  if (v30)
  {
    swift_release(v26);
    sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    v31 = (uint64_t)v46;
    v53 = v8;
    v32 = v48;
    sub_1004CB7BC(v49, v48, (uint64_t *)&unk_1013E1A50);
    v57 = v23;
    v33 = (uint64_t)v23;
    v34 = v47;
    sub_1004CB7BC(v33, v47, (uint64_t *)&unk_1013E1A50);
    v35 = type metadata accessor for UUID(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35);
    v49 = v28;
    if (v37 == 1)
    {
      v38 = v31;
      sub_1004C4938(v34, v31, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v34, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v31, v32, v35);
      v38 = v31;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
    }
    v39 = v50;
    sub_1004CB7BC(v38, v50, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v55, 33, 0);
    v40 = v51;
    sub_1004CB7BC(v39, v51, (uint64_t *)&unk_1013E1A50);
    v41 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v54, v49);
    sub_1005E388C(v40, v42);
    v41(v54, 0);
    sub_1004CB800(v39, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v55);
    sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v43 = *(void **)(v52 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v44 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem(0));
    v29 = sub_10084AD70(v43, (uint64_t)v26);
    sub_1004CB800((uint64_t)v57, (uint64_t *)&unk_1013E1A50);
  }
  return v29;
}

char *sub_100D3E964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = type metadata accessor for CRLWPStickyNoteItemData(0);
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  swift_retain(v2);
  v4 = sub_1007062A0(0);
  swift_release(v2);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem(0));
  return sub_10084AD70(v5, (uint64_t)v4);
}

void sub_100D3EA10(char a1)
{
  uint64_t v1;
  _QWORD *Strong;
  void *v4;
  char v5;
  void *v6;
  CKRecordID v7;
  Swift::String v8;

  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v7, v8);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    sub_100D3DA60(a1);
    sub_100923950(v6);
  }
}

void sub_100D3EB78()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLWPStickyNoteItem", 28, "init(store:data:)", 17, 0);
  __break(1u);
}

id sub_100D3EBA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D3EBD8()
{
  return type metadata accessor for CRLWPStickyNoteItem(0);
}

uint64_t type metadata accessor for CRLWPStickyNoteItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FAB8;
  if (!qword_10140FAB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLWPStickyNoteItem);
  return result;
}

uint64_t sub_100D3EC1C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1560);
}

uint64_t storeEnumTagSinglePayload for CRLStickyNotePreset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100D3EC9C + 4 * byte_100F3490C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100D3ECD0 + 4 * byte_100F34907[v4]))();
}

uint64_t sub_100D3ECD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D3ECD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D3ECE0);
  return result;
}

uint64_t sub_100D3ECEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D3ECF4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100D3ECF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D3ED00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLStickyNotePreset()
{
  return &type metadata for CRLStickyNotePreset;
}

unint64_t sub_100D3ED20()
{
  unint64_t result;

  result = qword_10140FAC8;
  if (!qword_10140FAC8)
  {
    result = swift_getWitnessTable(&unk_100F34994, &type metadata for CRLStickyNotePreset);
    atomic_store(result, (unint64_t *)&qword_10140FAC8);
  }
  return result;
}

uint64_t sub_100D3ED64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100D3ED74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100D3ED84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D3ED94(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_100D3ED9C(void *a1, void *a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  objc_super v27;

  v5 = &v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep]);
  v6 = OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding] = 0x4028000000000000;
  v7 = OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor;
  v8 = objc_allocWithZone((Class)CRLColor);
  v9 = v2;
  *(_QWORD *)&v2[v7] = objc_msgSend(v8, "initWithRed:green:blue:alpha:", 0.819607843, 0.819607843, 0.839215686, 1.0);
  swift_unknownObjectWeakAssign(v5, a1);
  v10 = *(void **)&v2[v6];
  *(_QWORD *)&v2[v6] = a2;
  v11 = a2;

  v12 = objc_opt_self(CRLAudioRep);
  if (swift_dynamicCastObjCClass(a1, v12))
  {
    v13 = 0;
  }
  else
  {
    v14 = type metadata accessor for CRLFileRep(0);
    if (swift_dynamicCastClass(a1, v14))
    {
      v13 = 1;
    }
    else
    {
      v15 = objc_opt_self(CRLImageRep);
      if (swift_dynamicCastObjCClass(a1, v15))
      {
        v13 = 2;
      }
      else
      {
        v16 = objc_opt_self(CRLMovieRep);
        if (swift_dynamicCastObjCClass(a1, v16))
        {
          v13 = 3;
        }
        else
        {
          v17 = type metadata accessor for CRLURLRep(0);
          if (swift_dynamicCastClass(a1, v17))
          {
            v13 = 4;
          }
          else
          {
            v18 = type metadata accessor for CRLUSDZRep(0);
            if (swift_dynamicCastClass(a1, v18))
              v13 = 5;
            else
              v13 = 6;
          }
        }
      }
    }
  }
  v9[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type] = v13;

  v19 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  v20 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_1004BB5A4(&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v19);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 95, "Expected the asset to need downloading.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rep:asset:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2u, 95, (uint64_t)"Expected the asset to need downloading.", 39, 2u);
  }
  v27.receiver = v9;
  v27.super_class = (Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper();
  v21 = objc_msgSendSuper2(&v27, "init");
  v22 = type metadata accessor for CRLImageUndownloadedAssetDrawingHelper();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22, v23);
  v25 = v21;
  if ((objc_msgSend(v25, "isKindOfClass:", ObjCClassFromMetadata) & 1) == 0
    && *((_BYTE *)v25 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type) == 2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 100, "Image undownloaded asset should be handled by CRLImageUndownloadedAssetDrawingHelper.", 85, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rep:asset:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2u, 100, (uint64_t)"Image undownloaded asset should be handled by CRLImageUndownloadedAssetDrawingHelper.", 85, 2u);
  }

  return v25;
}

void sub_100D3F0FC(CGContext *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *Strong;
  void *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  const CGPath *v19;
  CGColor *v20;
  id v21;
  NSString v22;
  Class isa;
  const __CFAttributedString *v24;
  const __CTLine *v25;
  void *v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  _BYTE v40[24];
  CGRect v41;
  CGRect BoundsWithOptions;

  v2 = v1;
  v4 = type metadata accessor for CGPathFillRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
  if (Strong)
  {
    v9 = Strong;
    v39 = objc_msgSend(Strong, "layout");
    objc_msgSend(v39, "boundsForStandardKnobs");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithContinuousCornerRoundedRect:cornerRadius:", v10, v12, v14, v16, 10.0);
    v19 = (const CGPath *)objc_msgSend(v18, "CGPath");

    if (v19)
    {
      CGContextSaveGState(a1);
      CGContextAddPath(a1, v19);
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for CGPathFillRule.winding(_:), v4);
      CGContextRef.clip(using:)(v7);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v20 = (CGColor *)objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor), "CGColor");
      CGContextSetFillColorWithColor(a1, v20);

      objc_msgSend(v9, "naturalBounds");
      CGContextFillRect(a1, v41);
      sub_100D40094(*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type));
      sub_100D40660();
      v21 = objc_allocWithZone((Class)NSAttributedString);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1004BFA1C();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v24 = (const __CFAttributedString *)objc_msgSend(v21, "initWithString:attributes:", v22, isa, swift_bridgeObjectRelease().n128_f64[0]);

      v25 = CTLineCreateWithAttributedString(v24);
      BoundsWithOptions = CTLineGetBoundsWithOptions(v25, 0);
      if (CGRectGetWidth(BoundsWithOptions)
         + *(double *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding)
         + *(double *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding) <= v15)
      {
        sub_100D3FE90(a1, v11, v13, v15, v17);
      }
      else
      {
        CGContextSaveGState(a1);
        v27 = sub_100D3F5E0(0x73697370696C6C65, 0xE800000000000000);
        if (v26)
        {
          v28 = v26;
          v29 = v27;
          v30 = sub_100061400(v11, v13, v15, v17);
          v32 = sub_10005FD98(v30, v31, v29);
          CGContextRef.draw(_:in:byTiling:)(v28, 0, v32, v33, v34, v35);
          CGContextRestoreGState(a1);

        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 253, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawImage(in:rect:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2u, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        }
      }
      CGContextRestoreGState(a1);
      v36 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset);
      if (v36)
      {
        sub_100412654(a1, v36);

      }
      else
      {
        if (qword_1013DD8C0 != -1)
          swift_once(&qword_1013DD8C0, sub_100A0685C);
        swift_beginAccess(&static OS_os_log.assetManagement, v40, 0, 0);
        v37 = (id)static OS_os_log.assetManagement;
        v38 = static os_log_type_t.error.getter(v37);
        sub_100A06EBC((uint64_t)v37, &_mh_execute_header, v38, "CRLUndowloadedAssetDrawingHelper: draw(in ctx) called without a valid Asset. This might mean your generated Image is not updating correctly", 139, 2, (uint64_t)_swiftEmptyArrayStorage);

      }
    }
    else
    {

    }
  }
}

double sub_100D3F5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  void *v8;
  id v9;
  uint64_t Strong;
  void *v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  CGFloat v21;
  id v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  id v27;
  double v28;
  CGContext *v30;
  CGContext *v31;
  CGImage *v32;
  double v33;
  CGSize v34;

  v4 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v5 = objc_msgSend(v4, "configurationWithPointSize:weight:", 4, 20.0);
  swift_bridgeObjectRetain(a2);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "systemImageNamed:withConfiguration:", v7, v6);

  if (!v9)
    goto LABEL_9;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_rep);
  if (!Strong)
  {

LABEL_9:
    return 0.0;
  }
  v11 = (void *)Strong;
  v12 = v9;
  v13 = objc_msgSend(v11, "canvas");

  if (!v13)
  {

    return 0.0;
  }
  objc_msgSend(v13, "contentsScale");
  v15 = v14;

  objc_msgSend(v12, "size");
  v18 = sub_1000603DC(v16, v17, v15);
  v20 = v18;
  v21 = v19;
  if (v18 <= v19)
    v18 = v19;
  v22 = objc_msgSend(v4, "configurationWithPointSize:weight:", 4, v18);
  swift_bridgeObjectRetain(a2);
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v8, "systemImageNamed:withConfiguration:", v24, v23, swift_bridgeObjectRelease(a2).n128_f64[0]);

  if (v25)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v27 = objc_msgSend(v25, "imageWithTintColor:", v26);

  }
  else
  {

    v27 = 0;
  }
  v34.width = v20;
  v34.height = v21;
  UIGraphicsBeginImageContextWithOptions(v34, 0, v15);
  v30 = UIGraphicsGetCurrentContext();
  if (!v30)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"fetchSymbolCGImageAndSize(imageName:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 194, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fetchSymbolCGImageAndSize(imageName:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2u, 194, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    return 0.0;
  }
  v31 = v30;
  if (v27)
    objc_msgSend(v27, "drawInRect:", sub_10005FDDC());
  v32 = CGBitmapContextCreateImage(v31);
  UIGraphicsEndImageContext();
  objc_msgSend(v12, "size");
  v28 = v33;

  return v28;
}

id sub_100D3F978(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  double v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  NSString v12;
  Class isa;
  const __CFAttributedString *v14;
  const __CTLine *v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v20;
  double v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  double v32;
  double v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  _BOOL8 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  NSString v50;
  Class v51;
  id v52;
  char v56;
  CGRect BoundsWithOptions;
  CGRect v58;

  v7 = *(double *)(v4 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  v56 = *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type);
  sub_100D40094(v56);
  v9 = v8;
  v10 = sub_100D40660();
  v11 = objc_allocWithZone((Class)NSAttributedString);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = (const __CFAttributedString *)objc_msgSend(v11, "initWithString:attributes:", v12, isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v15 = CTLineCreateWithAttributedString(v14);
  BoundsWithOptions = CTLineGetBoundsWithOptions(v15, 0);
  x = BoundsWithOptions.origin.x;
  y = BoundsWithOptions.origin.y;
  width = BoundsWithOptions.size.width;
  height = BoundsWithOptions.size.height;
  v20 = CGRectGetWidth(BoundsWithOptions);
  v58.origin.x = x;
  v58.origin.y = y;
  v58.size.width = width;
  v58.size.height = height;
  v21 = CGRectGetHeight(v58);

  v22 = objc_msgSend(objc_allocWithZone((Class)CATextLayer), "init");
  v23 = (void *)objc_opt_self(UIFont);
  v24 = objc_msgSend(v23, "systemFontOfSize:", 14.0);
  v25 = objc_msgSend(v24, "fontDescriptor");
  v26 = objc_msgSend(v25, "fontDescriptorWithSymbolicTraits:", 2);

  if (v26)
  {
    objc_msgSend(v24, "pointSize");
    v27 = objc_msgSend(v23, "fontWithDescriptor:size:", v26);

    v24 = v27;
  }
  objc_msgSend(v22, "setFont:", v24);

  v28 = objc_msgSend(v23, "systemFontOfSize:", 14.0);
  v29 = objc_msgSend(v28, "fontDescriptor");
  v30 = objc_msgSend(v29, "fontDescriptorWithSymbolicTraits:", 2);

  if (v30)
  {
    objc_msgSend(v28, "pointSize");
    v31 = objc_msgSend(v23, "fontWithDescriptor:size:", v30);

    v28 = v31;
  }
  objc_msgSend(v28, "pointSize");
  v33 = v32;

  objc_msgSend(v22, "setFontSize:", v33);
  v34 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v35 = objc_msgSend(v34, "accessibilityContrast");

  if (v35 == (id)1)
    v36 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  else
    v36 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.325490196, 0.345098039, 0.37254902, 1.0);
  v37 = v36;
  v38 = a3 - (v7 + v7);
  v39 = v38 < v20;
  if (v38 >= v20)
    v40 = v21;
  else
    v40 = v21 + v21;
  v41 = sub_100061400(a1, a2, a3, a4);
  v43 = v42 - v40 * 0.5;
  v44 = v41 - v38 * 0.5;
  v45 = objc_msgSend(v37, "CGColor");

  objc_msgSend(v22, "setForegroundColor:", v45);
  sub_100D40094(v56);
  v47 = v46;
  v48 = sub_100D40660();
  v49 = objc_allocWithZone((Class)NSAttributedString);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v47);
  v51 = Dictionary._bridgeToObjectiveC()().super.isa;
  v52 = objc_msgSend(v49, "initWithString:attributes:", v50, v51, swift_bridgeObjectRelease(v48).n128_f64[0]);

  objc_msgSend(v22, "setString:", v52);
  objc_msgSend(v22, "setWrapped:", v39);
  objc_msgSend(v22, "setTruncationMode:", kCATruncationEnd);
  objc_msgSend(v22, "setAlignmentMode:", kCAAlignmentCenter);
  objc_msgSend(v22, "setBounds:", v44, v43, v38, v40);
  return v22;
}

void sub_100D3FE90(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  double v8;
  double v9;
  int v10;
  id v11;
  NSString v12;
  Class isa;
  const __CFAttributedString *v14;
  const __CTLine *v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  id v29;
  CGRect BoundsWithOptions;
  CGRect v31;

  v8 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  v9 = a4 - (v8 + v8);
  v10 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type);
  sub_100D40094(*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type));
  sub_100D40660();
  v11 = objc_allocWithZone((Class)NSAttributedString);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = (const __CFAttributedString *)objc_msgSend(v11, "initWithString:attributes:", v12, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v15 = CTLineCreateWithAttributedString(v14);
  BoundsWithOptions = CTLineGetBoundsWithOptions(v15, 0);
  x = BoundsWithOptions.origin.x;
  y = BoundsWithOptions.origin.y;
  width = BoundsWithOptions.size.width;
  height = BoundsWithOptions.size.height;
  v20 = CGRectGetWidth(BoundsWithOptions);
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  v21 = CGRectGetHeight(v31);

  if (v9 < v20)
    v21 = v21 + v21;
  v22 = sub_100061400(a2, a3, a4, a5) - v9 * 0.5;
  if (v10 == 5)
    v24 = v22;
  else
    v24 = v8;
  v25 = v23 - v21 * 0.5;
  CGContextSaveGState(a1);
  v29 = sub_100D3F978(a2, a3, a4, a5);
  CGContextTranslateCTM(a1, v24, v25);
  objc_msgSend(v29, "drawInContext:", a1);
  CGContextRestoreGState(a1);

}

void sub_100D40094(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100D400C0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

id sub_100D404B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUndownloadedAssetDrawingHelper()
{
  return objc_opt_self(_TtC8Freeform33CRLUndownloadedAssetDrawingHelper);
}

uint64_t storeEnumTagSinglePayload for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100D40598 + 4 * byte_100F349D5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100D405CC + 4 * byte_100F349D0[v4]))();
}

uint64_t sub_100D405CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D405D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D405DCLL);
  return result;
}

uint64_t sub_100D405E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D405F0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100D405F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D405FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType()
{
  return &type metadata for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType;
}

unint64_t sub_100D4061C()
{
  unint64_t result;

  result = qword_10140FB20;
  if (!qword_10140FB20)
  {
    result = swift_getWitnessTable(&unk_100F34A68, &type metadata for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType);
    atomic_store(result, (unint64_t *)&qword_10140FB20);
  }
  return result;
}

unint64_t sub_100D40660()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  NSString *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  void *v9;
  NSString *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSString *v19;
  id v20;
  id v21;
  _BYTE v23[152];

  v0 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v0, v23);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = NSFontAttributeName;
  v4 = objc_msgSend(v2, "systemFontOfSize:", 14.0);
  v5 = objc_msgSend(v4, "fontDescriptor");
  v6 = objc_msgSend(v5, "fontDescriptorWithSymbolicTraits:", 2);

  if (v6)
  {
    objc_msgSend(v4, "pointSize");
    v7 = objc_msgSend(v2, "fontWithDescriptor:size:", v6);

    v4 = v7;
  }
  v8 = sub_1004BF9E0();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v9 = (void *)objc_opt_self(UITraitCollection);
  v10 = NSForegroundColorAttributeName;
  v11 = objc_msgSend(v9, "currentTraitCollection");
  v12 = objc_msgSend(v11, "accessibilityContrast");

  if (v12 == (id)1)
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  else
    v13 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.325490196, 0.345098039, 0.37254902, 1.0);
  v14 = v13;
  v15 = objc_msgSend(v13, "CGColor");

  type metadata accessor for CGColor(0);
  v17 = v16;
  *(_QWORD *)(inited + 80) = v15;
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = NSBackgroundColorAttributeName;
  v18 = (void *)objc_opt_self(CRLColor);
  v19 = NSBackgroundColorAttributeName;
  v20 = objc_msgSend(v18, "clearColor");
  v21 = objc_msgSend(v20, "CGColor");

  *(_QWORD *)(inited + 144) = v17;
  *(_QWORD *)(inited + 120) = v21;
  return sub_1008D4FE0(inited);
}

uint64_t sub_100D408C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_101481458);
  sub_1004F2A1C(v17, (uint64_t)qword_101481458);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x7A695320746E6F46, 0xE900000000000065);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

uint64_t sub_100D40AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  _BYTE *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  _BYTE *v55;
  char *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  _BYTE *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *);
  char *v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  void (*v111)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t result;
  char *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v130;
  uint64_t v131;
  _BYTE *v132;
  void (*v133)(char *);
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v138 = (char *)&v120 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v137 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v136 = *(_QWORD *)(v4 - 8);
  v127 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v15 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_10140FB98);
  v17 = sub_1004B804C(&qword_1013F92A8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_BYTE **)(v18 + 72);
  v131 = v17;
  v132 = v19;
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v16, v21 + 10 * (_QWORD)v19, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100F07C80;
  v23 = v22 + v21;
  v24 = v22 + v21 + *(int *)(v17 + 48);
  v122 = v22;
  v123 = v24;
  *(_BYTE *)(v22 + v21) = 0;
  v125 = v22 + v21;
  v25 = String.LocalizationValue.init(stringLiteral:)(12337, 0xE200000000000000);
  v26 = v9;
  static Locale.current.getter(v25);
  v133 = *(void (**)(char *))(v136 + 104);
  v27 = v6;
  v135 = v6;
  v28 = v6;
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v130 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v133(v28);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v27, "Number 10 display representation", 32, 2);
  v136 = *(_QWORD *)(v13 + 56);
  v30 = v137;
  v31 = v134;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v134);
  v32 = type metadata accessor for DisplayRepresentation.Image(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v128 = v32;
  v129 = v33;
  v34 = v138;
  v33(v138, 1, 1, v32);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v30, v34);
  v35 = v132;
  v123 = (uint64_t)&v132[v23 + *(int *)(v131 + 48)];
  v124 = v12;
  v132[v23] = 1;
  v36 = String.LocalizationValue.init(stringLiteral:)(12849, 0xE200000000000000);
  v37 = v26;
  static Locale.current.getter(v36);
  v38 = v135;
  v39 = v29;
  v40 = v127;
  v41 = v133;
  ((void (*)(char *, uint64_t, uint64_t))v133)(v135, v39, v127);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v37, v38, "Number 12 display representation", 32, 2);
  v42 = v137;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v31);
  v43 = v138;
  v44 = v129;
  v129(v138, 1, 1, v32);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v42, v43);
  v45 = 2 * (_QWORD)v35;
  v123 = 2 * (_QWORD)v35;
  v46 = v124;
  v47 = v125;
  *(_BYTE *)(v125 + v45) = 2;
  v48 = String.LocalizationValue.init(stringLiteral:)(13361, 0xE200000000000000);
  v126 = v37;
  static Locale.current.getter(v48);
  v49 = v135;
  v50 = v130;
  ((void (*)(char *, _QWORD, uint64_t))v41)(v135, v130, v40);
  v51 = v15;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v46, 0x6E497070414C5243, 0xED000073746E6574, v37, v49, "Number 14 display representation", 32, 2);
  v52 = v137;
  v53 = v134;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v134);
  v54 = v138;
  v44(v138, 1, 1, v128);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v52, v54);
  v55 = v132;
  v56 = v124;
  v57 = v47;
  v58 = &v132[v123 + v47];
  v123 = (uint64_t)&v58[*(int *)(v131 + 48)];
  *v58 = 3;
  v59 = String.LocalizationValue.init(stringLiteral:)(14385, 0xE200000000000000);
  v60 = v126;
  static Locale.current.getter(v59);
  v61 = v135;
  v62 = v127;
  ((void (*)(char *, uint64_t, uint64_t))v133)(v135, v50, v127);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E497070414C5243, 0xED000073746E6574, v60, v61, "Number 18 display representation", 32, 2);
  v64 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v136;
  v63 = v137;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v53);
  v65 = v128;
  v129(v54, 1, 1, v128);
  v66 = v51;
  DisplayRepresentation.init(title:subtitle:image:)(v51, v63, v54);
  v123 = 4 * (_QWORD)v55;
  v67 = (_BYTE *)(v57 + 4 * (_QWORD)v55);
  v121 = &v67[*(int *)(v131 + 48)];
  *v67 = 4;
  v68 = String.LocalizationValue.init(stringLiteral:)(13362, 0xE200000000000000);
  v69 = v126;
  static Locale.current.getter(v68);
  v70 = v135;
  v71 = v130;
  v72 = (void (*)(char *, uint64_t, uint64_t))v133;
  ((void (*)(char *, _QWORD, uint64_t))v133)(v135, v130, v62);
  v73 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E497070414C5243, 0xED000073746E6574, v69, v70, "Number 24 display representation", 32, 2);
  v74 = v137;
  v64(v137, 1, 1, v134);
  v75 = v138;
  v76 = v129;
  v129(v138, 1, 1, v65);
  DisplayRepresentation.init(title:subtitle:image:)(v73, v74, v75);
  v77 = v131;
  v78 = v125;
  v79 = &v132[v123 + v125];
  v123 = (uint64_t)&v79[*(int *)(v131 + 48)];
  *v79 = 5;
  v80 = String.LocalizationValue.init(stringLiteral:)(13875, 0xE200000000000000);
  v81 = v126;
  static Locale.current.getter(v80);
  v82 = v127;
  v72(v70, v71, v127);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E497070414C5243, 0xED000073746E6574, v81, v70, "Number 36 display representation", 32, 2);
  v83 = v137;
  v84 = v134;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v134);
  v85 = v138;
  v76(v138, 1, 1, v128);
  DisplayRepresentation.init(title:subtitle:image:)(v73, v83, v85);
  v86 = (_BYTE *)(v78 + 6 * (_QWORD)v132);
  v123 = (uint64_t)&v86[*(int *)(v77 + 48)];
  *v86 = 6;
  v87 = String.LocalizationValue.init(stringLiteral:)(14388, 0xE200000000000000);
  v88 = v126;
  static Locale.current.getter(v87);
  v89 = v135;
  v90 = v130;
  ((void (*)(char *, _QWORD, uint64_t))v133)(v135, v130, v82);
  v91 = v88;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E497070414C5243, 0xED000073746E6574, v88, v89, "Number 48 display representation", 32, 2);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v83, 1, 1, v84);
  v93 = v128;
  v92 = v129;
  v129(v85, 1, 1, v128);
  v120 = v73;
  DisplayRepresentation.init(title:subtitle:image:)(v73, v83, v85);
  v123 = 8 * (_QWORD)v132;
  v94 = v125;
  v95 = (_BYTE *)(v125 + 7 * (_QWORD)v132);
  v121 = &v95[*(int *)(v131 + 48)];
  *v95 = 7;
  v96 = String.LocalizationValue.init(stringLiteral:)(12855, 0xE200000000000000);
  static Locale.current.getter(v96);
  v97 = v135;
  v98 = v127;
  v99 = v133;
  ((void (*)(char *, uint64_t, uint64_t))v133)(v135, v90, v127);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v56, 0x6E497070414C5243, 0xED000073746E6574, v91, v97, "Number 72 display representation", 32, 2);
  v101 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v136;
  v100 = v137;
  v102 = v134;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v137, 1, 1, v134);
  v103 = v138;
  v92(v138, 1, 1, v93);
  v104 = v120;
  DisplayRepresentation.init(title:subtitle:image:)(v120, v100, v103);
  v105 = v131;
  v121 = (_BYTE *)(v94 + v123 + *(int *)(v131 + 48));
  *(_BYTE *)(v94 + v123) = 8;
  v106 = v124;
  v107 = String.LocalizationValue.init(stringLiteral:)(13881, 0xE200000000000000);
  v108 = v126;
  static Locale.current.getter(v107);
  v109 = v135;
  ((void (*)(char *, _QWORD, uint64_t))v99)(v135, v130, v98);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v106, 0x6E497070414C5243, 0xED000073746E6574, v108, v109, "Number 96 display representation", 32, 2);
  v101(v100, 1, 1, v102);
  v110 = v138;
  v112 = v128;
  v111 = v129;
  v129(v138, 1, 1, v128);
  DisplayRepresentation.init(title:subtitle:image:)(v104, v100, v110);
  v113 = v125;
  v114 = &v132[v123 + v125];
  v132 = &v114[*(int *)(v105 + 48)];
  *v114 = 9;
  v115 = String.LocalizationValue.init(stringLiteral:)(3421233, 0xE300000000000000);
  static Locale.current.getter(v115);
  ((void (*)(char *, _QWORD, uint64_t))v133)(v109, v130, v127);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v106, 0x6E497070414C5243, 0xED000073746E6574, v108, v109, "Number 144 display representation", 33, 2);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v100, 1, 1, v134);
  v116 = v138;
  v111(v138, 1, 1, v112);
  DisplayRepresentation.init(title:subtitle:image:)(v104, v100, v116);
  v117 = v122;
  v118 = sub_1008E07F0(v122);
  swift_setDeallocating(v117);
  swift_arrayDestroy(v113, 10, v105);
  result = swift_deallocClassInstance(v117, 32, 7);
  qword_101481470 = v118;
  return result;
}

BOOL sub_100D41658(char *a1, char *a2)
{
  return *(_QWORD *)&asc_100F34DA8[8 * *a1] == *(_QWORD *)&asc_100F34DA8[8 * *a2];
}

unint64_t sub_100D41680()
{
  unint64_t result;

  result = qword_10140FB28;
  if (!qword_10140FB28)
  {
    result = swift_getWitnessTable(&unk_100F34AF4, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB28);
  }
  return result;
}

Swift::Int sub_100D416C4()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(*(_QWORD *)&asc_100F34DA8[8 * v1]);
  return Hasher._finalize()();
}

void sub_100D41710()
{
  char *v0;

  Hasher._combine(_:)(*(_QWORD *)&asc_100F34DA8[8 * *v0]);
}

Swift::Int sub_100D41744(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(*(_QWORD *)&asc_100F34DA8[8 * v2]);
  return Hasher._finalize()();
}

uint64_t sub_100D4178C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100D41D78(*a1);
  *a2 = result;
  return result;
}

void sub_100D417B4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&asc_100F34DA8[8 * *v1];
}

unint64_t sub_100D417D0()
{
  unint64_t result;

  result = qword_10140FB30;
  if (!qword_10140FB30)
  {
    result = swift_getWitnessTable(&unk_100F34BD4, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB30);
  }
  return result;
}

unint64_t sub_100D41818()
{
  unint64_t result;

  result = qword_10140FB38;
  if (!qword_10140FB38)
  {
    result = swift_getWitnessTable(&unk_100F34C0C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB38);
  }
  return result;
}

unint64_t sub_100D41860()
{
  unint64_t result;

  result = qword_10140FB40;
  if (!qword_10140FB40)
  {
    result = swift_getWitnessTable(&unk_100F34B5C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB40);
  }
  return result;
}

void *sub_100D418A4()
{
  return &protocol witness table for Int;
}

unint64_t sub_100D418B4()
{
  unint64_t result;

  result = qword_10140FB48;
  if (!qword_10140FB48)
  {
    result = swift_getWitnessTable(&unk_100F34C3C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB48);
  }
  return result;
}

unint64_t sub_100D418FC()
{
  unint64_t result;

  result = qword_10140FB50;
  if (!qword_10140FB50)
  {
    result = swift_getWitnessTable(&unk_100F34C64, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB50);
  }
  return result;
}

unint64_t sub_100D41944()
{
  unint64_t result;

  result = qword_10140FB58;
  if (!qword_10140FB58)
  {
    result = swift_getWitnessTable(&unk_100F34C8C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB58);
  }
  return result;
}

unint64_t sub_100D4198C()
{
  unint64_t result;

  result = qword_10140FB60;
  if (!qword_10140FB60)
  {
    result = swift_getWitnessTable(&unk_100F34CE4, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB60);
  }
  return result;
}

uint64_t sub_100D419D0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DDF10 != -1)
    swift_once(&qword_1013DDF10, sub_100D408C0);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_101481458);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_100D41A40(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100D41A80();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100D41A80()
{
  unint64_t result;

  result = qword_10140FB68;
  if (!qword_10140FB68)
  {
    result = swift_getWitnessTable(&unk_100F34B94, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB68);
  }
  return result;
}

uint64_t sub_100D41AC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D41A80();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100D41B00()
{
  unint64_t result;

  result = qword_10140FB70;
  if (!qword_10140FB70)
  {
    result = swift_getWitnessTable(&unk_100F34D24, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB70);
  }
  return result;
}

unint64_t sub_100D41B48()
{
  unint64_t result;

  result = qword_10140FB78;
  if (!qword_10140FB78)
  {
    result = swift_getWitnessTable(&unk_100F34D4C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB78);
  }
  return result;
}

unint64_t sub_100D41B90()
{
  unint64_t result;

  result = qword_10140FB80;
  if (!qword_10140FB80)
  {
    result = swift_getWitnessTable(&unk_100F34B1C, &type metadata for CRLFontSizeEntity);
    atomic_store(result, (unint64_t *)&qword_10140FB80);
  }
  return result;
}

double sub_100D41BD4()
{
  double result;

  if (qword_1013DDF18 != -1)
    swift_once(&qword_1013DDF18, sub_100D40AF4);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_101481470).n128_u64[0];
  return result;
}

uint64_t sub_100D41C14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D4198C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100D41C50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140FB88;
  if (!qword_10140FB88)
  {
    v1 = sub_1004CB6A4(&qword_10140FB90);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10140FB88);
  }
  return result;
}

void sub_100D41C9C(_QWORD *a1@<X8>)
{
  *a1 = &off_101263D50;
}

uint64_t storeEnumTagSinglePayload for CRLFontSizeEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100D41CF8 + 4 * byte_100F34A95[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_100D41D2C + 4 * byte_100F34A90[v4]))();
}

uint64_t sub_100D41D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D41D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D41D3CLL);
  return result;
}

uint64_t sub_100D41D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D41D50);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100D41D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D41D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFontSizeEntity()
{
  return &type metadata for CRLFontSizeEntity;
}

uint64_t sub_100D41D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 10;
  result = 1;
  switch(v1)
  {
    case 0:
      result = 0;
      break;
    case 2:
      return result;
    case 4:
      result = 2;
      break;
    case 8:
      result = 3;
      break;
    case 14:
      result = 4;
      break;
    case 26:
      result = 5;
      break;
    case 38:
      result = 6;
      break;
    case 62:
      result = 7;
      break;
    case 86:
      result = 8;
      break;
    default:
      result = 10;
      break;
  }
  return result;
}

id sub_100D41E30(uint64_t a1, id a2)
{
  objc_class *v2;
  objc_class *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v15;
  _QWORD v16[4];
  objc_super v17;

  v3 = v2;
  v6 = (char *)objc_allocWithZone(v3);
  v7 = &v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    v10 = v6;
    a2 = a2;
    v11 = objc_msgSend(a2, "copy");
    _bridgeAnyObjectToAny(_:)(v16, v11);

    swift_unknownObjectRelease(v11);
    v12 = sub_100D424D8();
    swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v12, 7);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = v15;

  }
  else
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = 0;
  }
  v17.receiver = v6;
  v17.super_class = v3;
  v13 = objc_msgSendSuper2(&v17, "init");

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

void sub_100D4210C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  void (*v15)(void *);
  id v16;
  id v17;
  CKRecordID v18;
  Swift::String v19;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLStyledItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStroke.swift", 91, 2, 31, "Unable to retrieve styled board item.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve styled board item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStroke.swift", 91, 2u, 31, (uint64_t)"Unable to retrieve styled board item.", 37, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = (_QWORD *)v11;
  v13 = v9;
  sub_100DBEE64((uint64_t)v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v14 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke);
    v15 = *(void (**)(void *))((swift_isaMask & *v12) + 0x428);
    v16 = v14;
    v15(v14);
    v17 = v13;
    sub_100DB0D78((uint64_t)v12, (uint64_t)&off_10127C5E0, a3);

  }
}

void sub_100D42350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_100D4239C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetStroke(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D42420()
{
  return type metadata accessor for CRLCommandSetStroke(0);
}

uint64_t type metadata accessor for CRLCommandSetStroke(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FBC8;
  if (!qword_10140FBC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetStroke);
  return result;
}

uint64_t sub_100D42464(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_100D424D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F2E90;
  if (!qword_1013F2E90)
  {
    v1 = objc_opt_self(CRLStroke);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F2E90);
  }
  return result;
}

id sub_100D42514(uint64_t a1, void *a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  unint64_t v11;
  objc_class *v12;
  id v13;
  uint64_t v15;
  _QWORD v16[4];
  objc_super v17;

  v5 = &v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  if (a2)
  {
    v8 = v2;
    v9 = a2;
    v10 = objc_msgSend(v9, "copy");
    _bridgeAnyObjectToAny(_:)(v16, v10);

    swift_unknownObjectRelease(v10);
    v11 = sub_100D424D8();
    swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v11, 7);
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = v15;

  }
  else
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = 0;
  }
  v12 = (objc_class *)type metadata accessor for CRLCommandSetStroke(0);
  v17.receiver = v2;
  v17.super_class = v12;
  v13 = objc_msgSendSuper2(&v17, "init");
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v13;
}

id sub_100D42674(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_aspectRatioLocked] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_100D428EC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  CKRecordID v12;
  Swift::String v13;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (v9)
  {
    v10 = v9;
    sub_100DBEE64((uint64_t)v10, (uint64_t)&off_10127C5E0);

    if (v4)
    {

    }
    else
    {
      (*(void (**)(_QWORD))((swift_isaMask & *v10) + 0x120))(*(unsigned __int8 *)(v5
                                                                                             + OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_aspectRatioLocked));
      v11 = v10;
      sub_100DB0D78((uint64_t)v11, (uint64_t)&off_10127C5E0, a3);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAspectRatioLocked.swift", 102, 2, 27, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAspectRatioLocked.swift", 102, 2u, 27, (uint64_t)"Unable to retrieve board item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
}

uint64_t sub_100D42B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_id;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_100D42B3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetAspectRatioLocked(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D42BAC()
{
  return type metadata accessor for CRLCommandSetAspectRatioLocked(0);
}

uint64_t type metadata accessor for CRLCommandSetAspectRatioLocked(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FC00;
  if (!qword_10140FC00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetAspectRatioLocked);
  return result;
}

uint64_t sub_100D42BF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F34E50;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100D42CC0()
{
  id v0;
  uint64_t v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = type metadata accessor for CRLWPiOSUserDefaults();
  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = v0;
  qword_101481498 = result;
  return result;
}

uint64_t type metadata accessor for CRLWPiOSUserDefaults()
{
  return objc_opt_self(_TtC8Freeform20CRLWPiOSUserDefaults);
}

double sub_100D42D38@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1013DDF20 != -1)
    swift_once(&qword_1013DDF20, sub_100D42CC0);
  v2 = qword_101481498;
  *a1 = qword_101481498;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100D42D88()
{
  char v0;

  sub_1009A4CEC(2);
  return (v0 == 2) | v0 & 1u;
}

uint64_t sub_100D42DC4@<X0>(_BYTE *a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  void *v47;
  id v48;
  NSURL *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  void (*v53)(_BYTE *, uint64_t);
  _BYTE *v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  id v62;
  _BYTE *v63;
  NSURL *v64;
  void *v65;
  void *v66;
  NSURL *v67;
  void *v68;
  void *v69;
  unsigned int v70;
  id v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  uint64_t inited;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v88[4];
  int v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  char v96[72];
  id v97[3];

  v89 = a2;
  v90 = a1;
  v92 = a3;
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v93 = &v88[-v11];
  __chkstk_darwin(v12);
  v91 = &v88[-v13];
  v14 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v14);
  v16 = &v88[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v17);
  v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v88[-v21];
  v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v23 == &off_101407908)
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v24 = 0;
  swift_beginAccess(v24 + qword_101480E60, v97, 32, 0);
  swift_retain(v23);
  v25 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v25);
  swift_endAccess(v97);
  swift_release(v23);
  sub_10069BF0C((uint64_t)v16, (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_10078DF08((uint64_t)v19, (uint64_t)v22);
  v26 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v28 = *(os_unfair_lock_s **)(v27 + 16);
  v29 = v26;
  os_unfair_lock_lock(v28);
  v30 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v31 = *(void **)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v31)
  {
    v32 = *(id *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v34 = v29;
    v35 = sub_100C7EE84((uint64_t)v34);

    v36 = *(void **)&v29[v30];
    *(_QWORD *)&v29[v30] = v35;
    v32 = v35;

    v31 = 0;
  }
  v37 = *(os_unfair_lock_s **)(v27 + 16);
  v38 = v31;
  os_unfair_lock_unlock(v37);
  sub_100C7857C((uint64_t)v22, 0, 3, 0, v6);

  v39 = v94;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v6, 1, v7) != 1)
  {
    v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v39 + 32))(v91, v6, v7);
    v45 = v93;
    URL.deletingLastPathComponent()(v44);
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16);
    v46(v9, v45, v7);
    if ((v89 & 1) != 0)
    {
      v47 = (void *)objc_opt_self(NSFileManager);
      v48 = objc_msgSend(v47, "defaultManager");
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      v52 = objc_msgSend(v48, "crl_directoryExistsAt:", v50);

      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      if ((v52 & 1) != 0)
      {
        v54 = v90;
      }
      else
      {
        v55 = objc_msgSend(v47, "defaultManager");
        URL._bridgeToObjectiveC()(v56);
        v58 = v57;
        v97[0] = 0;
        v59 = objc_msgSend(v55, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v57, 0, 0, v97);

        v60 = v97[0];
        v54 = v90;
        if ((v59 & 1) == 0)
        {
          v63 = v91;
          goto LABEL_20;
        }
        v61 = v97[0];
      }
    }
    else
    {
      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      v54 = v90;
    }
    v62 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v63 = v91;
    URL._bridgeToObjectiveC()(v64);
    v66 = v65;
    URL._bridgeToObjectiveC()(v67);
    v69 = v68;
    v97[0] = 0;
    v70 = objc_msgSend(v62, "copyItemAtURL:toURL:error:", v66, v68, v97);

    v60 = v97[0];
    if (v70)
    {
      v71 = v97[0];
      v53(v93, v7);
      v53(v63, v7);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
      v43 = v92;
      v46(v92, v54, v7);
      v42 = 0;
LABEL_23:
      v39 = v94;
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
    }
LABEL_20:
    v72 = v60;
    v73 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v74);
    v53(v93, v7);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
    v75 = (void *)static OS_os_log.crlDefault;
    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v76, v96);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v95 = v73;
    v78 = v75;
    swift_errorRetain(v73);
    v79 = sub_1004B804C(&qword_1013E0210);
    v80 = String.init<A>(describing:)(&v95, v79);
    v82 = v81;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v83 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v83;
    *(_QWORD *)(inited + 32) = v80;
    v84 = inited + 32;
    *(_QWORD *)(inited + 40) = v82;
    v85 = static os_log_type_t.error.getter(v83);
    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v85, "Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating(inited);
    v86 = sub_1004B804C(&qword_1013E0190);
    v42 = 1;
    swift_arrayDestroy(v84, 1, v86);

    swift_errorRelease(v73);
    v53(v63, v7);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
    v43 = v92;
    goto LABEL_23;
  }
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
  sub_1005534BC((uint64_t)v6);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
  v40 = (id)static OS_os_log.crlDefault;
  v41 = static os_log_type_t.error.getter(v40);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v41, "Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

  v42 = 1;
  v43 = v92;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
}

uint64_t sub_100D43510@<X0>(_BYTE *a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  void *v47;
  id v48;
  NSURL *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  void (*v53)(_BYTE *, uint64_t);
  _BYTE *v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  id v62;
  _BYTE *v63;
  NSURL *v64;
  void *v65;
  void *v66;
  NSURL *v67;
  void *v68;
  void *v69;
  unsigned int v70;
  id v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  uint64_t inited;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v88[4];
  int v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  char v96[72];
  id v97[3];

  v89 = a2;
  v90 = a1;
  v92 = a3;
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v93 = &v88[-v11];
  __chkstk_darwin(v12);
  v91 = &v88[-v13];
  v14 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v14);
  v16 = &v88[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v17);
  v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v88[-v21];
  v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v23 == &off_10140F528)
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v24 = 0;
  swift_beginAccess(v24 + qword_101481450, v97, 32, 0);
  swift_retain(v23);
  v25 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v25);
  swift_endAccess(v97);
  swift_release(v23);
  sub_10069BF0C((uint64_t)v16, (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_10078DF08((uint64_t)v19, (uint64_t)v22);
  v26 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v28 = *(os_unfair_lock_s **)(v27 + 16);
  v29 = v26;
  os_unfair_lock_lock(v28);
  v30 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v31 = *(void **)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v31)
  {
    v32 = *(id *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v34 = v29;
    v35 = sub_100C7EE84((uint64_t)v34);

    v36 = *(void **)&v29[v30];
    *(_QWORD *)&v29[v30] = v35;
    v32 = v35;

    v31 = 0;
  }
  v37 = *(os_unfair_lock_s **)(v27 + 16);
  v38 = v31;
  os_unfair_lock_unlock(v37);
  sub_100C7857C((uint64_t)v22, 0, 3, 0, v6);

  v39 = v94;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v6, 1, v7) != 1)
  {
    v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v39 + 32))(v91, v6, v7);
    v45 = v93;
    URL.deletingLastPathComponent()(v44);
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16);
    v46(v9, v45, v7);
    if ((v89 & 1) != 0)
    {
      v47 = (void *)objc_opt_self(NSFileManager);
      v48 = objc_msgSend(v47, "defaultManager");
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      v52 = objc_msgSend(v48, "crl_directoryExistsAt:", v50);

      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      if ((v52 & 1) != 0)
      {
        v54 = v90;
      }
      else
      {
        v55 = objc_msgSend(v47, "defaultManager");
        URL._bridgeToObjectiveC()(v56);
        v58 = v57;
        v97[0] = 0;
        v59 = objc_msgSend(v55, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v57, 0, 0, v97);

        v60 = v97[0];
        v54 = v90;
        if ((v59 & 1) == 0)
        {
          v63 = v91;
          goto LABEL_20;
        }
        v61 = v97[0];
      }
    }
    else
    {
      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      v54 = v90;
    }
    v62 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v63 = v91;
    URL._bridgeToObjectiveC()(v64);
    v66 = v65;
    URL._bridgeToObjectiveC()(v67);
    v69 = v68;
    v97[0] = 0;
    v70 = objc_msgSend(v62, "copyItemAtURL:toURL:error:", v66, v68, v97);

    v60 = v97[0];
    if (v70)
    {
      v71 = v97[0];
      v53(v93, v7);
      v53(v63, v7);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
      v43 = v92;
      v46(v92, v54, v7);
      v42 = 0;
LABEL_23:
      v39 = v94;
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
    }
LABEL_20:
    v72 = v60;
    v73 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v74);
    v53(v93, v7);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
    v75 = (void *)static OS_os_log.crlDefault;
    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v76, v96);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v95 = v73;
    v78 = v75;
    swift_errorRetain(v73);
    v79 = sub_1004B804C(&qword_1013E0210);
    v80 = String.init<A>(describing:)(&v95, v79);
    v82 = v81;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v83 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v83;
    *(_QWORD *)(inited + 32) = v80;
    v84 = inited + 32;
    *(_QWORD *)(inited + 40) = v82;
    v85 = static os_log_type_t.error.getter(v83);
    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v85, "Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating(inited);
    v86 = sub_1004B804C(&qword_1013E0190);
    v42 = 1;
    swift_arrayDestroy(v84, 1, v86);

    swift_errorRelease(v73);
    v53(v63, v7);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
    v43 = v92;
    goto LABEL_23;
  }
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
  sub_1005534BC((uint64_t)v6);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
  v40 = (id)static OS_os_log.crlDefault;
  v41 = static os_log_type_t.error.getter(v40);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v41, "Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

  v42 = 1;
  v43 = v92;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
}

uint64_t sub_100D43C5C@<X0>(_BYTE *a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  void *v47;
  id v48;
  NSURL *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  void (*v53)(_BYTE *, uint64_t);
  _BYTE *v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  id v62;
  _BYTE *v63;
  NSURL *v64;
  void *v65;
  void *v66;
  NSURL *v67;
  void *v68;
  void *v69;
  unsigned int v70;
  id v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  uint64_t inited;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v88[4];
  int v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  char v96[72];
  id v97[3];

  v89 = a2;
  v90 = a1;
  v92 = a3;
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v93 = &v88[-v11];
  __chkstk_darwin(v12);
  v91 = &v88[-v13];
  v14 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v14);
  v16 = &v88[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v17);
  v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v88[-v21];
  v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v23 == &off_1013E07D8)
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v24 = 0;
  swift_beginAccess(v24 + qword_10147E7D8, v97, 32, 0);
  swift_retain(v23);
  v25 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v25);
  swift_endAccess(v97);
  swift_release(v23);
  sub_10069BF0C((uint64_t)v16, (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLMovieItemAssetData);
  sub_10078DF08((uint64_t)v19, (uint64_t)v22);
  v26 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v28 = *(os_unfair_lock_s **)(v27 + 16);
  v29 = v26;
  os_unfair_lock_lock(v28);
  v30 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v31 = *(void **)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v31)
  {
    v32 = *(id *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v34 = v29;
    v35 = sub_100C7EE84((uint64_t)v34);

    v36 = *(void **)&v29[v30];
    *(_QWORD *)&v29[v30] = v35;
    v32 = v35;

    v31 = 0;
  }
  v37 = *(os_unfair_lock_s **)(v27 + 16);
  v38 = v31;
  os_unfair_lock_unlock(v37);
  sub_100C7857C((uint64_t)v22, 0, 3, 0, v6);

  v39 = v94;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v6, 1, v7) != 1)
  {
    v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v39 + 32))(v91, v6, v7);
    v45 = v93;
    URL.deletingLastPathComponent()(v44);
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16);
    v46(v9, v45, v7);
    if ((v89 & 1) != 0)
    {
      v47 = (void *)objc_opt_self(NSFileManager);
      v48 = objc_msgSend(v47, "defaultManager");
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      v52 = objc_msgSend(v48, "crl_directoryExistsAt:", v50);

      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      if ((v52 & 1) != 0)
      {
        v54 = v90;
      }
      else
      {
        v55 = objc_msgSend(v47, "defaultManager");
        URL._bridgeToObjectiveC()(v56);
        v58 = v57;
        v97[0] = 0;
        v59 = objc_msgSend(v55, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v57, 0, 0, v97);

        v60 = v97[0];
        v54 = v90;
        if ((v59 & 1) == 0)
        {
          v63 = v91;
          goto LABEL_20;
        }
        v61 = v97[0];
      }
    }
    else
    {
      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      v54 = v90;
    }
    v62 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v63 = v91;
    URL._bridgeToObjectiveC()(v64);
    v66 = v65;
    URL._bridgeToObjectiveC()(v67);
    v69 = v68;
    v97[0] = 0;
    v70 = objc_msgSend(v62, "copyItemAtURL:toURL:error:", v66, v68, v97);

    v60 = v97[0];
    if (v70)
    {
      v71 = v97[0];
      v53(v93, v7);
      v53(v63, v7);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
      v43 = v92;
      v46(v92, v54, v7);
      v42 = 0;
LABEL_23:
      v39 = v94;
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
    }
LABEL_20:
    v72 = v60;
    v73 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v74);
    v53(v93, v7);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
    v75 = (void *)static OS_os_log.crlDefault;
    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v76, v96);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v95 = v73;
    v78 = v75;
    swift_errorRetain(v73);
    v79 = sub_1004B804C(&qword_1013E0210);
    v80 = String.init<A>(describing:)(&v95, v79);
    v82 = v81;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v83 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v83;
    *(_QWORD *)(inited + 32) = v80;
    v84 = inited + 32;
    *(_QWORD *)(inited + 40) = v82;
    v85 = static os_log_type_t.error.getter(v83);
    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v85, "Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating(inited);
    v86 = sub_1004B804C(&qword_1013E0190);
    v42 = 1;
    swift_arrayDestroy(v84, 1, v86);

    swift_errorRelease(v73);
    v53(v63, v7);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
    v43 = v92;
    goto LABEL_23;
  }
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
  sub_1005534BC((uint64_t)v6);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
  v40 = (id)static OS_os_log.crlDefault;
  v41 = static os_log_type_t.error.getter(v40);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v41, "Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

  v42 = 1;
  v43 = v92;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
}

uint64_t sub_100D443A8@<X0>(_BYTE *a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  void *v47;
  id v48;
  NSURL *v49;
  void *v50;
  void *v51;
  unsigned __int8 v52;
  void (*v53)(_BYTE *, uint64_t);
  _BYTE *v54;
  id v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  id v62;
  _BYTE *v63;
  NSURL *v64;
  void *v65;
  void *v66;
  NSURL *v67;
  void *v68;
  void *v69;
  unsigned int v70;
  id v71;
  id v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  uint64_t v76;
  uint64_t inited;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v88[4];
  int v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  char v96[72];
  id v97[3];

  v89 = a2;
  v90 = a1;
  v92 = a3;
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v93 = &v88[-v11];
  __chkstk_darwin(v12);
  v91 = &v88[-v13];
  v14 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v14);
  v16 = &v88[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v17);
  v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v22 = &v88[-v21];
  v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v23 == &off_1014086A0)
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v24 = 0;
  swift_beginAccess(v24 + qword_101480ED0, v97, 32, 0);
  swift_retain(v23);
  v25 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v25);
  swift_endAccess(v97);
  swift_release(v23);
  sub_10069BF0C((uint64_t)v16, (uint64_t)v19);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLImageItemAssetData);
  sub_10078DF08((uint64_t)v19, (uint64_t)v22);
  v26 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v28 = *(os_unfair_lock_s **)(v27 + 16);
  v29 = v26;
  os_unfair_lock_lock(v28);
  v30 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v31 = *(void **)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v31)
  {
    v32 = *(id *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v34 = v29;
    v35 = sub_100C7EE84((uint64_t)v34);

    v36 = *(void **)&v29[v30];
    *(_QWORD *)&v29[v30] = v35;
    v32 = v35;

    v31 = 0;
  }
  v37 = *(os_unfair_lock_s **)(v27 + 16);
  v38 = v31;
  os_unfair_lock_unlock(v37);
  sub_100C7857C((uint64_t)v22, 0, 3, 0, v6);

  v39 = v94;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v6, 1, v7) != 1)
  {
    v44 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v39 + 32))(v91, v6, v7);
    v45 = v93;
    URL.deletingLastPathComponent()(v44);
    v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16);
    v46(v9, v45, v7);
    if ((v89 & 1) != 0)
    {
      v47 = (void *)objc_opt_self(NSFileManager);
      v48 = objc_msgSend(v47, "defaultManager");
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      v52 = objc_msgSend(v48, "crl_directoryExistsAt:", v50);

      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      if ((v52 & 1) != 0)
      {
        v54 = v90;
      }
      else
      {
        v55 = objc_msgSend(v47, "defaultManager");
        URL._bridgeToObjectiveC()(v56);
        v58 = v57;
        v97[0] = 0;
        v59 = objc_msgSend(v55, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v57, 0, 0, v97);

        v60 = v97[0];
        v54 = v90;
        if ((v59 & 1) == 0)
        {
          v63 = v91;
          goto LABEL_20;
        }
        v61 = v97[0];
      }
    }
    else
    {
      v53 = *(void (**)(_BYTE *, uint64_t))(v39 + 8);
      v53(v9, v7);
      v54 = v90;
    }
    v62 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v63 = v91;
    URL._bridgeToObjectiveC()(v64);
    v66 = v65;
    URL._bridgeToObjectiveC()(v67);
    v69 = v68;
    v97[0] = 0;
    v70 = objc_msgSend(v62, "copyItemAtURL:toURL:error:", v66, v68, v97);

    v60 = v97[0];
    if (v70)
    {
      v71 = v97[0];
      v53(v93, v7);
      v53(v63, v7);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
      v43 = v92;
      v46(v92, v54, v7);
      v42 = 0;
LABEL_23:
      v39 = v94;
      return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
    }
LABEL_20:
    v72 = v60;
    v73 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v74);
    v53(v93, v7);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
    v75 = (void *)static OS_os_log.crlDefault;
    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v76, v96);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v95 = v73;
    v78 = v75;
    swift_errorRetain(v73);
    v79 = sub_1004B804C(&qword_1013E0210);
    v80 = String.init<A>(describing:)(&v95, v79);
    v82 = v81;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v83 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v83;
    *(_QWORD *)(inited + 32) = v80;
    v84 = inited + 32;
    *(_QWORD *)(inited + 40) = v82;
    v85 = static os_log_type_t.error.getter(v83);
    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v85, "Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating(inited);
    v86 = sub_1004B804C(&qword_1013E0190);
    v42 = 1;
    swift_arrayDestroy(v84, 1, v86);

    swift_errorRelease(v73);
    v53(v63, v7);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
    v43 = v92;
    goto LABEL_23;
  }
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLAssetData);
  sub_1005534BC((uint64_t)v6);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v97, 0, 0);
  v40 = (id)static OS_os_log.crlDefault;
  v41 = static os_log_type_t.error.getter(v40);
  sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v41, "Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

  v42 = 1;
  v43 = v92;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v43, v42, 1, v7);
}

uint64_t sub_100D44AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _UNKNOWN ****v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  os_unfair_lock_s *v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSString v74;
  NSString v75;
  id v76;
  NSString v77;
  double v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  __n128 v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t result;
  _QWORD v89[3];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _BYTE *v94;
  uint64_t v95;
  id v96;
  char *v97;
  char *v98;
  uint64_t v99;
  id v100[3];

  v91 = a2;
  v92 = a3;
  v4 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v10);
  v94 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v89 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v93 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v97 = (char *)v89 - v19;
  __chkstk_darwin(v20);
  v98 = (char *)v89 - v21;
  v22 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v100[0] = 0;
  v23 = objc_msgSend(v22, "initWithError:", v100);
  v24 = v100[0];
  v96 = v23;
  if (!v23)
  {
    v25 = v24;
    v26 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v27);
    swift_errorRelease(v26);
  }
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v95 = a1;
  v28(a1, 1, 1, v15);
  v29 = v99;
  v30 = *(_UNKNOWN *****)(v99 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v30 == &off_101407908)
    v31 = *(_QWORD *)(v99 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v31 = 0;
  swift_beginAccess(v31 + qword_101480E60, v100, 32, 0);
  swift_retain(v30);
  v32 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v32);
  swift_endAccess(v100);
  swift_release(v30);
  sub_10069BF0C((uint64_t)v6, (uint64_t)v9);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFileItemAtomicDataStruct);
  v33 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v35 = *(os_unfair_lock_s **)(v34 + 16);
  v36 = v33;
  os_unfair_lock_lock(v35);
  v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v41 = v36;
    v42 = sub_100C7EE84((uint64_t)v41);

    v43 = *(void **)&v36[v37];
    *(_QWORD *)&v36[v37] = v42;
    v39 = v42;

    v38 = 0;
  }
  v44 = *(os_unfair_lock_s **)(v34 + 16);
  v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100C7857C((uint64_t)v9, 0, 3, 0, v14);

  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v46 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1005534BC((uint64_t)v14);
    return (uint64_t)v46;
  }
  v47 = v98;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v98, v14, v15);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v47, v15);
    return (uint64_t)v46;
  }
  v48 = v23;
  v49 = objc_msgSend(v48, "URL");
  v50 = v97;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

  v52 = URL.absoluteString.getter(v51);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v56 = String.count.getter(v52, v54);
  v58 = swift_bridgeObjectRelease();
  if (v56 >= 1024)
  {
    v55(v47, v15, v58);

    return (uint64_t)v46;
  }
  v89[1] = URL.pathExtension.getter(v57);
  v89[2] = v59;
  v60 = objc_msgSend(v48, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

  v62 = URL.absoluteString.getter(v61);
  v64 = v63;
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v65 = String.count.getter(v62, v64);
  swift_bridgeObjectRelease();
  v66 = 1024 - v65;
  if (__OFSUB__(1024, v65))
    __break(1u);
  if (v66 >= 255)
    v66 = 255;
  v90 = v66;
  v67 = v92;
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v68, "pathExtension");

  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  swift_bridgeObjectRelease();
  v73 = HIBYTE(v72) & 0xF;
  if ((v72 & 0x2000000000000000) == 0)
    v73 = v70 & 0xFFFFFFFFFFFFLL;
  if (v73)
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRetain(v67);
    goto LABEL_25;
  }
  v74 = String._bridgeToObjectiveC()();
  v75 = String._bridgeToObjectiveC()();
  v76 = objc_msgSend(v74, "stringByAppendingPathExtension:", v75, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v76)
    goto LABEL_20;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v76);

LABEL_25:
  v77 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v78 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v90 & 0x8000000000000000) == 0)
  {
    v79 = objc_msgSend(v77, "crl_filenameTruncatedToCharacterLimit:", v90, v78);

    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
    v82 = v81;

    v83 = objc_msgSend(v48, "URL");
    v84 = v93;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v83);

    URL.appendingPathComponent(_:)(v80, v82);
    v85 = swift_bridgeObjectRelease();
    v55(v84, v15, v85);
    v86 = v94;
    sub_100D42DC4(v50, 0, v94);

    ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
    ((void (*)(char *, uint64_t))v55)(v98, v15);
    v87 = v95;
    sub_1005534BC(v95);
    sub_10057EE1C((uint64_t)v86, v87);
    return (uint64_t)v46;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

uint64_t sub_100D45210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _UNKNOWN ****v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  os_unfair_lock_s *v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  NSString v75;
  NSString v76;
  id v77;
  NSString v78;
  double v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  __n128 v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t result;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _BYTE *v96;
  uint64_t v97;
  id v98;
  char *v99;
  char *v100;
  uint64_t v101;
  id v102[3];

  v93 = a2;
  v94 = a3;
  v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4);
  v6 = (char *)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v10);
  v96 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v91 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v95 = (char *)v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v99 = (char *)v91 - v19;
  __chkstk_darwin(v20);
  v100 = (char *)v91 - v21;
  v22 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v102[0] = 0;
  v23 = objc_msgSend(v22, "initWithError:", v102);
  v24 = v102[0];
  v98 = v23;
  if (!v23)
  {
    v25 = v24;
    v26 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v27);
    swift_errorRelease(v26);
  }
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v97 = a1;
  v28(a1, 1, 1, v15);
  v29 = v101;
  v30 = *(_UNKNOWN *****)(v101 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v30 == &off_10140F528)
    v31 = *(_QWORD *)(v101 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v31 = 0;
  swift_beginAccess(v31 + qword_101481450, v102, 32, 0);
  swift_retain(v30);
  v32 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v32);
  swift_endAccess(v102);
  swift_release(v30);
  sub_10069BF0C((uint64_t)v6, (uint64_t)v9);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  v33 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v35 = *(os_unfair_lock_s **)(v34 + 16);
  v36 = v33;
  os_unfair_lock_lock(v35);
  v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v41 = v36;
    v42 = sub_100C7EE84((uint64_t)v41);

    v43 = *(void **)&v36[v37];
    *(_QWORD *)&v36[v37] = v42;
    v39 = v42;

    v38 = 0;
  }
  v44 = *(os_unfair_lock_s **)(v34 + 16);
  v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100C7857C((uint64_t)v9, 0, 3, 0, v14);

  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v46 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1005534BC((uint64_t)v14);
    return (uint64_t)v46;
  }
  v47 = v100;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v100, v14, v15);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v47, v15);
    return (uint64_t)v46;
  }
  v48 = v23;
  v49 = objc_msgSend(v48, "URL");
  v50 = v99;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

  v52 = URL.absoluteString.getter(v51);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v56 = String.count.getter(v52, v54);
  v58 = swift_bridgeObjectRelease();
  if (v56 >= 1024)
  {
    v55(v47, v15, v58);

    return (uint64_t)v46;
  }
  v91[1] = URL.pathExtension.getter(v57);
  v91[2] = v59;
  v60 = objc_msgSend(v48, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

  v62 = URL.absoluteString.getter(v61);
  v64 = v63;
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v65 = String.count.getter(v62, v64);
  swift_bridgeObjectRelease();
  v66 = 1024 - v65;
  if (__OFSUB__(1024, v65))
    __break(1u);
  if (v66 >= 255)
    v66 = 255;
  v92 = v66;
  v67 = v94;
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v68, "pathExtension");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v71 = v70;
  v73 = v72;

  swift_bridgeObjectRelease();
  v74 = HIBYTE(v73) & 0xF;
  if ((v73 & 0x2000000000000000) == 0)
    v74 = v71 & 0xFFFFFFFFFFFFLL;
  if (v74)
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRetain(v67);
    goto LABEL_25;
  }
  v75 = String._bridgeToObjectiveC()();
  v76 = String._bridgeToObjectiveC()();
  v77 = objc_msgSend(v75, "stringByAppendingPathExtension:", v76, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v77)
    goto LABEL_20;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v77);

LABEL_25:
  v78 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v79 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v92 & 0x8000000000000000) == 0)
  {
    v80 = objc_msgSend(v78, "crl_filenameTruncatedToCharacterLimit:", v92, v79);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
    v82 = v81;
    v84 = v83;

    v85 = objc_msgSend(v48, "URL");
    v86 = v95;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

    URL.appendingPathComponent(_:)(v82, v84);
    v87 = swift_bridgeObjectRelease();
    v55(v86, v15, v87);
    v88 = v96;
    sub_100D43510(v50, 0, v96);

    ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
    ((void (*)(char *, uint64_t))v55)(v100, v15);
    v89 = v97;
    sub_1005534BC(v97);
    sub_10057EE1C((uint64_t)v88, v89);
    return (uint64_t)v46;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

uint64_t sub_100D4592C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _UNKNOWN ****v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  os_unfair_lock_s *v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  NSString v76;
  id v77;
  uint64_t v78;
  NSString v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  __n128 v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t result;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  uint64_t v98;
  id v99;
  char *v100;
  char *v101;
  uint64_t v102;
  id v103[3];

  v94 = a2;
  v95 = a3;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v10);
  v97 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v91 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v96 = (char *)v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v100 = (char *)v91 - v19;
  __chkstk_darwin(v20);
  v101 = (char *)v91 - v21;
  v22 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v103[0] = 0;
  v23 = objc_msgSend(v22, "initWithError:", v103);
  v24 = v103[0];
  v99 = v23;
  if (!v23)
  {
    v25 = v24;
    v26 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v27);
    swift_errorRelease(v26);
  }
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v98 = a1;
  v28(a1, 1, 1, v15);
  v29 = v102;
  v30 = *(_UNKNOWN *****)(v102 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v30 == &off_1013E07D8)
    v31 = *(_QWORD *)(v102 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v31 = 0;
  swift_beginAccess(v31 + qword_10147E7D8, v103, 32, 0);
  swift_retain(v30);
  v32 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v32);
  swift_endAccess(v103);
  swift_release(v30);
  sub_10069BF0C((uint64_t)v6, (uint64_t)v9);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
  v33 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v35 = *(os_unfair_lock_s **)(v34 + 16);
  v36 = v33;
  os_unfair_lock_lock(v35);
  v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v41 = v36;
    v42 = sub_100C7EE84((uint64_t)v41);

    v43 = *(void **)&v36[v37];
    *(_QWORD *)&v36[v37] = v42;
    v39 = v42;

    v38 = 0;
  }
  v44 = *(os_unfair_lock_s **)(v34 + 16);
  v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100C7857C((uint64_t)v9, 0, 3, 0, v14);

  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v46 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1005534BC((uint64_t)v14);
    return (uint64_t)v46;
  }
  v47 = v101;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v101, v14, v15);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v47, v15);
    return (uint64_t)v46;
  }
  v48 = v23;
  v49 = objc_msgSend(v48, "URL");
  v50 = v100;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

  v52 = URL.absoluteString.getter(v51);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v56 = String.count.getter(v52, v54);
  v58 = swift_bridgeObjectRelease(v54);
  if (v56 >= 1024)
  {
    v55(v47, v15, v58);

    return (uint64_t)v46;
  }
  v91[1] = URL.pathExtension.getter(v57);
  v92 = v59;
  v60 = objc_msgSend(v48, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

  v62 = URL.absoluteString.getter(v61);
  v64 = v63;
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v65 = String.count.getter(v62, v64);
  swift_bridgeObjectRelease(v64);
  v66 = 1024 - v65;
  if (__OFSUB__(1024, v65))
    __break(1u);
  if (v66 >= 255)
    v66 = 255;
  v93 = v66;
  v67 = v95;
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v68, "pathExtension");

  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  swift_bridgeObjectRelease(v72);
  v73 = HIBYTE(v72) & 0xF;
  if ((v72 & 0x2000000000000000) == 0)
    v73 = v70 & 0xFFFFFFFFFFFFLL;
  if (v73)
  {
    swift_bridgeObjectRelease(v92);
LABEL_20:
    swift_bridgeObjectRetain(v67);
    goto LABEL_25;
  }
  v74 = String._bridgeToObjectiveC()();
  v75 = v92;
  v76 = String._bridgeToObjectiveC()();
  v77 = objc_msgSend(v74, "stringByAppendingPathExtension:", v76, swift_bridgeObjectRelease(v75).n128_f64[0]);

  if (!v77)
    goto LABEL_20;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v67 = v78;

LABEL_25:
  v79 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v80 = swift_bridgeObjectRelease(v67).n128_u64[0];
  if ((v93 & 0x8000000000000000) == 0)
  {
    v81 = objc_msgSend(v79, "crl_filenameTruncatedToCharacterLimit:", v93, v80);

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v84 = v83;

    v85 = objc_msgSend(v48, "URL");
    v86 = v96;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

    URL.appendingPathComponent(_:)(v82, v84);
    v87 = swift_bridgeObjectRelease(v84);
    v55(v86, v15, v87);
    v88 = v97;
    sub_100D43C5C(v50, 0, v97);

    ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
    ((void (*)(char *, uint64_t))v55)(v101, v15);
    v89 = v98;
    sub_1005534BC(v98);
    sub_10057EE1C((uint64_t)v88, v89);
    return (uint64_t)v46;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

uint64_t sub_100D46048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _UNKNOWN ****v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  void *v43;
  os_unfair_lock_s *v44;
  id v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSString v74;
  uint64_t v75;
  NSString v76;
  id v77;
  uint64_t v78;
  NSString v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  __n128 v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t result;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  uint64_t v98;
  id v99;
  char *v100;
  char *v101;
  uint64_t v102;
  id v103[3];

  v94 = a2;
  v95 = a3;
  v4 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v7);
  v9 = (char *)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v10);
  v97 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v91 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v96 = (char *)v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v100 = (char *)v91 - v19;
  __chkstk_darwin(v20);
  v101 = (char *)v91 - v21;
  v22 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v103[0] = 0;
  v23 = objc_msgSend(v22, "initWithError:", v103);
  v24 = v103[0];
  v99 = v23;
  if (!v23)
  {
    v25 = v24;
    v26 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v27);
    swift_errorRelease(v26);
  }
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v98 = a1;
  v28(a1, 1, 1, v15);
  v29 = v102;
  v30 = *(_UNKNOWN *****)(v102 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v30 == &off_1014086A0)
    v31 = *(_QWORD *)(v102 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v31 = 0;
  swift_beginAccess(v31 + qword_101480ED0, v103, 32, 0);
  swift_retain(v30);
  v32 = sub_1004B804C(&qword_1013EBA40);
  CRRegister.wrappedValue.getter(v32);
  swift_endAccess(v103);
  swift_release(v30);
  sub_10069BF0C((uint64_t)v6, (uint64_t)v9);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
  v33 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v35 = *(os_unfair_lock_s **)(v34 + 16);
  v36 = v33;
  os_unfair_lock_lock(v35);
  v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v41 = v36;
    v42 = sub_100C7EE84((uint64_t)v41);

    v43 = *(void **)&v36[v37];
    *(_QWORD *)&v36[v37] = v42;
    v39 = v42;

    v38 = 0;
  }
  v44 = *(os_unfair_lock_s **)(v34 + 16);
  v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100C7857C((uint64_t)v9, 0, 3, 0, v14);

  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLAssetData);
  v46 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1005534BC((uint64_t)v14);
    return (uint64_t)v46;
  }
  v47 = v101;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v101, v14, v15);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v47, v15);
    return (uint64_t)v46;
  }
  v48 = v23;
  v49 = objc_msgSend(v48, "URL");
  v50 = v100;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v49);

  v52 = URL.absoluteString.getter(v51);
  v54 = v53;
  v55 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v56 = String.count.getter(v52, v54);
  v58 = swift_bridgeObjectRelease(v54);
  if (v56 >= 1024)
  {
    v55(v47, v15, v58);

    return (uint64_t)v46;
  }
  v91[1] = URL.pathExtension.getter(v57);
  v92 = v59;
  v60 = objc_msgSend(v48, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

  v62 = URL.absoluteString.getter(v61);
  v64 = v63;
  ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
  v65 = String.count.getter(v62, v64);
  swift_bridgeObjectRelease(v64);
  v66 = 1024 - v65;
  if (__OFSUB__(1024, v65))
    __break(1u);
  if (v66 >= 255)
    v66 = 255;
  v93 = v66;
  v67 = v95;
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v68, "pathExtension");

  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
  v72 = v71;

  swift_bridgeObjectRelease(v72);
  v73 = HIBYTE(v72) & 0xF;
  if ((v72 & 0x2000000000000000) == 0)
    v73 = v70 & 0xFFFFFFFFFFFFLL;
  if (v73)
  {
    swift_bridgeObjectRelease(v92);
LABEL_20:
    swift_bridgeObjectRetain(v67);
    goto LABEL_25;
  }
  v74 = String._bridgeToObjectiveC()();
  v75 = v92;
  v76 = String._bridgeToObjectiveC()();
  v77 = objc_msgSend(v74, "stringByAppendingPathExtension:", v76, swift_bridgeObjectRelease(v75).n128_f64[0]);

  if (!v77)
    goto LABEL_20;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v67 = v78;

LABEL_25:
  v79 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v80 = swift_bridgeObjectRelease(v67).n128_u64[0];
  if ((v93 & 0x8000000000000000) == 0)
  {
    v81 = objc_msgSend(v79, "crl_filenameTruncatedToCharacterLimit:", v93, v80);

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
    v84 = v83;

    v85 = objc_msgSend(v48, "URL");
    v86 = v96;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v85);

    URL.appendingPathComponent(_:)(v82, v84);
    v87 = swift_bridgeObjectRelease(v84);
    v55(v86, v15, v87);
    v88 = v97;
    sub_100D443A8(v50, 0, v97);

    ((void (*)(_BYTE *, uint64_t))v55)(v50, v15);
    ((void (*)(char *, uint64_t))v55)(v101, v15);
    v89 = v98;
    sub_1005534BC(v98);
    sub_10057EE1C((uint64_t)v88, v89);
    return (uint64_t)v46;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
  return result;
}

void sub_100D46764()
{
  sub_100D4678C((uint64_t (*)(uint64_t))sub_100D484C0, sub_100D469FC);
}

void sub_100D46778()
{
  sub_100D4678C((uint64_t (*)(uint64_t))sub_100D486E4, sub_100D46CE0);
}

void sub_100D4678C(uint64_t (*a1)(uint64_t), void (*a2)(void))
{
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v14;

  v4 = v2;
  v5 = objc_msgSend(v2, "info");
  v6 = type metadata accessor for CRLBoardItem(0);
  v7 = (_QWORD *)swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
  v8 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x1D8))();
  v9 = swift_unknownObjectRelease(v5);
  if ((v8 & 1) != 0)
  {
    v14 = (id)a1(v9);
    v10 = objc_msgSend(v4, "interactiveCanvasController");
    if (v10)
    {
      v11 = v10;
      v14 = v14;
      v12 = (void *)_convertErrorToNSError(_:)(v14);

      objc_msgSend(v11, "presentError:completionHandler:", v12, 0);
    }

  }
  else
  {
    a2();
  }
}

void sub_100D468AC()
{
  sub_100D468B8((void (*)(__n128))sub_100D46FC4);
}

void sub_100D468B8(void (*a1)(__n128))
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  __n128 v7;
  id v8;
  void *v9;
  void *v10;
  id v12;

  v2 = v1;
  v3 = objc_msgSend(v1, "info");
  v4 = type metadata accessor for CRLBoardItem(0);
  v5 = (_QWORD *)swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x1D8))();
  v7 = swift_unknownObjectRelease(v3);
  if ((v6 & 1) != 0)
  {
    v12 = (id)sub_100D48D50();
    v8 = objc_msgSend(v2, "interactiveCanvasController");
    if (v8)
    {
      v9 = v8;
      v12 = v12;
      v10 = (void *)_convertErrorToNSError(_:)(v12);

      objc_msgSend(v9, "presentError:completionHandler:", v10, 0);
    }

  }
  else
  {
    a1(v7);
  }
}

void sub_100D469D4()
{
  sub_100D4678C((uint64_t (*)(uint64_t))sub_100D48908, sub_100D472A8);
}

void sub_100D469E8()
{
  sub_100D4678C((uint64_t (*)(uint64_t))sub_100D48B2C, sub_100D47570);
}

void sub_100D469FC()
{
  void *v0;
  id v1;
  id v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (**v19)();
  uint64_t v20;
  char *v21;
  char *v22;

  objc_allocWithZone((Class)type metadata accessor for CRLAudioRepPlaceHolder(0));
  v1 = v0;
  v2 = sub_10069BBD4(v1);
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v22 = sub_100D483C0((uint64_t)v2, v3);
  v4 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v4, "layerHost");

  if (!v6)
    goto LABEL_9;
  if ((objc_msgSend(v6, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v6);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v21 = v22;
    goto LABEL_10;
  }
  v7 = objc_msgSend(v6, "asiOSCVC");
  swift_unknownObjectRelease(v6);
  v8 = objc_msgSend(v7, "presentedViewController");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v10 = objc_msgSend(v7, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v1, "layerFrameInScaledCanvas");
    v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v13, v14, v15);
    objc_msgSend(v11, "addSubview:", v16);
    v17 = *(void **)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

    v18 = swift_allocObject(&unk_1012A30E0, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (void (**)())&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v20 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v19 = sub_100D48F98;
    v19[1] = (void (*)())v18;
    objc_msgSend(v7, "presentViewController:animated:completion:", v22, 1, 0, swift_release(v20).n128_f64[0]);

    v21 = (char *)v7;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D46CE0()
{
  void *v0;
  id v1;
  id v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (**v19)();
  uint64_t v20;
  char *v21;
  char *v22;

  objc_allocWithZone((Class)type metadata accessor for CRLImageRepPlaceHolder(0));
  v1 = v0;
  v2 = sub_1006A4840(v1);
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v22 = sub_100D483C0((uint64_t)v2, v3);
  v4 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v4, "layerHost");

  if (!v6)
    goto LABEL_9;
  if ((objc_msgSend(v6, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v6);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v21 = v22;
    goto LABEL_10;
  }
  v7 = objc_msgSend(v6, "asiOSCVC");
  swift_unknownObjectRelease(v6);
  v8 = objc_msgSend(v7, "presentedViewController");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v10 = objc_msgSend(v7, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v1, "layerFrameInScaledCanvas");
    v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v13, v14, v15);
    objc_msgSend(v11, "addSubview:", v16);
    v17 = *(void **)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

    v18 = swift_allocObject(&unk_1012A30B8, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (void (**)())&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v20 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v19 = sub_100D48F98;
    v19[1] = (void (*)())v18;
    objc_msgSend(v7, "presentViewController:animated:completion:", v22, 1, 0, swift_release(v20).n128_f64[0]);

    v21 = (char *)v7;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D46FC4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  void (**v20)();
  uint64_t v21;
  char *v22;
  char *v23;

  objc_allocWithZone((Class)type metadata accessor for CRLFileRepPlaceHolder(0));
  v1 = v0;
  sub_1009B1CAC(v1);
  v3 = v2;
  v4 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v23 = sub_100D483C0(v3, v4);
  v5 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v5)
    goto LABEL_9;
  v6 = v5;
  v7 = objc_msgSend(v5, "layerHost");

  if (!v7)
    goto LABEL_9;
  if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v7);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v22 = v23;
    goto LABEL_10;
  }
  v8 = objc_msgSend(v7, "asiOSCVC");
  v9 = objc_msgSend(v8, "presentedViewController", swift_unknownObjectRelease(v7).n128_f64[0]);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v11 = objc_msgSend(v8, "view");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v1, "layerFrameInScaledCanvas");
    v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v13, v14, v15, v16);
    objc_msgSend(v12, "addSubview:", v17);
    v18 = *(void **)&v23[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v17;

    v19 = swift_allocObject(&unk_1012A3090, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = (void (**)())&v23[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v21 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v20 = sub_100D48F98;
    v20[1] = (void (*)())v19;
    objc_msgSend(v8, "presentViewController:animated:completion:", v23, 1, 0, swift_release(v21).n128_f64[0]);

    v22 = (char *)v8;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D472A8()
{
  void *v0;
  _BYTE *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  uint64_t v17;
  void (**v18)();
  uint64_t v19;
  char *v20;
  char *v21;

  v1 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v2 = v0;
  v21 = sub_100D483C0((uint64_t)v2, v1);
  v3 = objc_msgSend(v2, "interactiveCanvasController");
  if (!v3)
    goto LABEL_9;
  v4 = v3;
  v5 = objc_msgSend(v3, "layerHost");

  if (!v5)
    goto LABEL_9;
  if ((objc_msgSend(v5, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v5);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v20 = v21;
    goto LABEL_10;
  }
  v6 = objc_msgSend(v5, "asiOSCVC");
  v7 = objc_msgSend(v6, "presentedViewController", swift_unknownObjectRelease(v5).n128_f64[0]);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v9 = objc_msgSend(v6, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v2, "layerFrameInScaledCanvas");
    v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v11, v12, v13, v14);
    objc_msgSend(v10, "addSubview:", v15);
    v16 = *(void **)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v15;

    v17 = swift_allocObject(&unk_1012A3068, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    v18 = (void (**)())&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v19 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v18 = sub_100D48F98;
    v18[1] = (void (*)())v17;
    objc_msgSend(v6, "presentViewController:animated:completion:", v21, 1, 0, swift_release(v19).n128_f64[0]);

    v20 = (char *)v6;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D47570()
{
  void *v0;
  id v1;
  id v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (**v19)();
  uint64_t v20;
  char *v21;
  char *v22;

  objc_allocWithZone((Class)type metadata accessor for CRLMovieRepPlaceholder(0));
  v1 = v0;
  v2 = sub_100C11694(v1);
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v22 = sub_100D483C0((uint64_t)v2, v3);
  v4 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v4, "layerHost");

  if (!v6)
    goto LABEL_9;
  if ((objc_msgSend(v6, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v6);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v21 = v22;
    goto LABEL_10;
  }
  v7 = objc_msgSend(v6, "asiOSCVC");
  v8 = objc_msgSend(v7, "presentedViewController", swift_unknownObjectRelease(v6).n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v10 = objc_msgSend(v7, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v1, "layerFrameInScaledCanvas");
    v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v13, v14, v15);
    objc_msgSend(v11, "addSubview:", v16);
    v17 = *(void **)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

    v18 = swift_allocObject(&unk_1012A3040, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (void (**)())&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v20 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v19 = sub_100D48F98;
    v19[1] = (void (*)())v18;
    objc_msgSend(v7, "presentViewController:animated:completion:", v22, 1, 0, swift_release(v20).n128_f64[0]);

    v21 = (char *)v7;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D47854()
{
  void *v0;
  id v1;
  id v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (**v19)();
  uint64_t v20;
  char *v21;
  char *v22;

  objc_allocWithZone((Class)type metadata accessor for CRLUSDZRepPlaceholder(0));
  v1 = v0;
  v2 = sub_100D48064(v1);
  v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  v22 = sub_100D483C0((uint64_t)v2, v3);
  v4 = objc_msgSend(v1, "interactiveCanvasController");
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  v6 = objc_msgSend(v4, "layerHost");

  if (!v6)
    goto LABEL_9;
  if ((objc_msgSend(v6, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v6);
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v21 = v22;
    goto LABEL_10;
  }
  v7 = objc_msgSend(v6, "asiOSCVC");
  v8 = objc_msgSend(v7, "presentedViewController", swift_unknownObjectRelease(v6).n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

  }
  v10 = objc_msgSend(v7, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v1, "layerFrameInScaledCanvas");
    v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v13, v14, v15);
    objc_msgSend(v11, "addSubview:", v16);
    v17 = *(void **)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
    *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

    v18 = swift_allocObject(&unk_1012A3018, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (void (**)())&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
    v20 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss + 8];
    *v19 = sub_100D48F98;
    v19[1] = (void (*)())v18;
    objc_msgSend(v7, "presentViewController:animated:completion:", v22, 1, 0, swift_release(v20).n128_f64[0]);

    v21 = (char *)v7;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100D47B38(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "interactiveCanvasController");

    objc_msgSend(v4, "didExitPreviewMode");
  }
}

uint64_t sub_100D47C30()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN ****v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _BYTE v18[24];

  v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLAssetData(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = objc_msgSend(v0, "info", v5);
  v9 = type metadata accessor for CRLUSDZItem(0);
  v10 = swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
  v11 = *(_UNKNOWN *****)(v10 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v11 == &off_10140F528)
    v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v12 = 0;
  swift_beginAccess(v12 + qword_101481450, v18, 32, 0);
  swift_retain(v11);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v13);
  swift_endAccess(v18);
  swift_release(v11);
  sub_10069BF0C((uint64_t)v3, (uint64_t)v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease(v8);
  v14 = (uint64_t *)&v7[*(int *)(v4 + 20)];
  v15 = *v14;
  swift_bridgeObjectRetain(v14[1]);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
  return v15;
}

id sub_100D48064(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  objc_class *v18;
  id v19;
  uint64_t v21;
  objc_super v22;
  _BYTE v23[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_previewItemURL];
  v7 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_previewItemTitle];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_usdzRep] = a1;
  v9 = v1;
  v10 = a1;
  *v8 = sub_100D47C30();
  v8[1] = v11;
  v12 = objc_msgSend(v10, "info", swift_bridgeObjectRelease().n128_f64[0]);
  v13 = type metadata accessor for CRLUSDZItem(0);
  swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  v14 = v8[1];
  if (v14)
  {
    v15 = *v8;
    v16 = v8[1];
  }
  else
  {
    v16 = 0xE400000000000000;
    v15 = 2053403509;
  }
  swift_bridgeObjectRetain(v14);
  v17 = (void *)sub_100D45210((uint64_t)v5, v15, v16);
  swift_unknownObjectRelease(v12);
  swift_bridgeObjectRelease();
  swift_beginAccess(v6, v23, 33, 0);
  sub_10054F3F0((uint64_t)v5, v6);
  swift_endAccess(v23);

  v18 = (objc_class *)type metadata accessor for CRLUSDZRepPlaceholder(0);
  v22.receiver = v9;
  v22.super_class = v18;
  v19 = objc_msgSendSuper2(&v22, "init");
  if (v17)
  {
    objc_msgSend(v17, "setAssociatedLifetimeObject:", v10);

  }
  sub_1005534BC((uint64_t)v5);
  return v19;
}

id sub_100D48278()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRepPlaceholder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D482F8()
{
  return type metadata accessor for CRLUSDZRepPlaceholder(0);
}

uint64_t type metadata accessor for CRLUSDZRepPlaceholder(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FCD8;
  if (!qword_10140FCD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUSDZRepPlaceholder);
  return result;
}

void sub_100D4833C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10067E7A0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F34EC8;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

char *sub_100D483C0(uint64_t a1, _BYTE *a2)
{
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall **v3)(CKRecordID, Swift::String);
  char *v4;
  uint64_t v5;
  objc_super v7;

  *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem] = 0;
  a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_shouldSaveMarkedUpItem] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_itemProvider] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = 0;
  v3 = (Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall **)(CKRecordID, Swift::String))&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *v3 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
  v3[1] = 0;
  v7.receiver = a2;
  v7.super_class = (Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  v4 = (char *)objc_msgSendSuper2(&v7, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v4, "setDelegate:", v4);
  objc_msgSend(v4, "setDataSource:", v4);
  objc_msgSend(v4, "setModalPresentationStyle:", 0);

  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem] = a1;
  swift_unknownObjectRelease(v5);
  return v4;
}

uint64_t sub_100D484C0()
{
  void *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSError);
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v0, "crl_errorWithDomain:code:alertTitle:alertMessage:", v1, 53277, v9, v16);

  v18 = _convertErrorToNSError(_:)(v17);
  return v18;
}

uint64_t sub_100D486E4()
{
  void *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSError);
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v0, "crl_errorWithDomain:code:alertTitle:alertMessage:", v1, 53277, v9, v16);

  v18 = _convertErrorToNSError(_:)(v17);
  return v18;
}

uint64_t sub_100D48908()
{
  void *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSError);
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v0, "crl_errorWithDomain:code:alertTitle:alertMessage:", v1, 53277, v9, v16);

  v18 = _convertErrorToNSError(_:)(v17);
  return v18;
}

uint64_t sub_100D48B2C()
{
  void *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSError);
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v0, "crl_errorWithDomain:code:alertTitle:alertMessage:", v1, 53277, v9, v16);

  v18 = _convertErrorToNSError(_:)(v17);
  return v18;
}

uint64_t sub_100D48D50()
{
  void *v0;
  NSString v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSError);
  v1 = String._bridgeToObjectiveC()();
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend(v2, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v0, "crl_errorWithDomain:code:alertTitle:alertMessage:", v1, 53277, v9, v16);

  v18 = _convertErrorToNSError(_:)(v17);
  return v18;
}

uint64_t sub_100D48F74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100D48F98()
{
  uint64_t v0;

  sub_100D47B38(v0);
}

uint64_t *sub_100D48FC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for DispatchTimeInterval(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100D49080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = type metadata accessor for DispatchTimeInterval(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_100D490DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100D4916C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100D49200(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_100D49290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100D49320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D4932C);
}

uint64_t sub_100D4932C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for DispatchTimeInterval(0);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100D493A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D493AC);
}

uint64_t sub_100D493AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for DispatchTimeInterval(0);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLRealTimeMessengerConfiguration(uint64_t a1)
{
  uint64_t result;

  result = qword_10140FD50;
  if (!qword_10140FD50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLRealTimeMessengerConfiguration);
  return result;
}

uint64_t sub_100D49464(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for GroupSessionMessenger.DeliveryMode(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[2] = (char *)&value witness table for Builtin.Int16 + 64;
    result = type metadata accessor for DispatchTimeInterval(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100D49504()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 232) = v0;
  v2 = (_QWORD *)swift_task_alloc(dword_10141003C);
  *(_QWORD *)(v1 + 240) = v2;
  *v2 = v1;
  v2[1] = sub_100D49558;
  return sub_100D49A20(v1 + 16);
}

uint64_t sub_100D49558()
{
  uint64_t v0;
  uint64_t *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v2 = (_OWORD *)(*v1 + 296);
  v3 = *(_QWORD *)(*v1 + 240);
  v4 = *v1;
  *(_QWORD *)(v4 + 248) = v0;
  v5 = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v4 + 256) = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v4 + 272) = v5;
  *(_QWORD *)(v4 + 288) = *(_QWORD *)(v4 + 48);
  v6 = *(_OWORD *)(v4 + 72);
  *v2 = *(_OWORD *)(v4 + 56);
  v2[1] = v6;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch(sub_100D495E4, 0, 0);
}

uint64_t sub_100D495E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _UNKNOWN **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  objc_class *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24);
  swift_unknownObjectRetain(v2);
  v6 = v5(ObjectType, v3);
  if ((v7 & 0x100) != 0)
  {
    if (!(v6 | v7))
    {
      v37 = *(_QWORD *)(v0 + 288);
      v38 = *(_QWORD *)(v0 + 248);
      v39 = *(_QWORD *)(v0 + 232);
      v40 = *(_OWORD *)(v0 + 272);
      *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 256);
      *(_OWORD *)(v0 + 104) = v40;
      *(_QWORD *)(v0 + 120) = v37;
      *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 296);
      v41 = type metadata accessor for CRLBoardData(0);
      v42 = swift_dynamicCastClassUnconditional(v2, v41, 0, 0, 0);
      v43 = *(void **)(v39 + 32);
      swift_unknownObjectRetain(v2);
      v44 = sub_10089DE84(v0 + 88, v42, v43);
      v46 = *(_QWORD *)(v0 + 312);
      v45 = *(_QWORD *)(v0 + 320);
      v48 = *(_QWORD *)(v0 + 296);
      v47 = *(_QWORD *)(v0 + 304);
      if (!v38)
      {
        v50 = v44;
        swift_unknownObjectRelease(v2);
        swift_bridgeObjectRelease(v48);
        swift_bridgeObjectRelease(v47);
        swift_bridgeObjectRelease(v46);
        v51 = type metadata accessor for CRLBoard(0);
        v52 = swift_dynamicCastClassUnconditional(v50, v51, 0, 0, 0);
        swift_beginAccess(v45 + 32, v0 + 168, 0, 0);
        v19 = *(_QWORD *)(v45 + 32);
        v20 = v50;
        swift_bridgeObjectRetain(v19);
        sub_100D4ADFC(v52, v19);
        v21 = &off_1012942B0;
        goto LABEL_14;
      }
      swift_release(*(_QWORD *)(v0 + 320));
      swift_unknownObjectRelease_n(v2, 2);
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v47);
      v35 = swift_bridgeObjectRelease(v46);
      return (*(uint64_t (**)(__n128))(v0 + 8))(v35);
    }
    v22 = *(_QWORD *)(v0 + 312);
    v23 = *(_QWORD *)(v0 + 320);
    v24 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 248);
    v26 = *(_QWORD *)(v0 + 232);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v22);
    if (object_getClass(v2) == (Class)_TtC8Freeform23CRLPasteboardObjectData)
      v27 = v2;
    else
      v27 = 0;
    v28 = *(void **)(v26 + 40);
    v29 = (objc_class *)type metadata accessor for CRLPasteboardObject();
    v30 = (char *)objc_allocWithZone(v29);
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems] = 0;
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData] = v27;
    *(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_context] = v28;
    *(_QWORD *)(v0 + 216) = v30;
    *(_QWORD *)(v0 + 224) = v29;
    swift_unknownObjectRetain(v2);
    v31 = v28;
    v32 = objc_msgSendSuper2((objc_super *)(v0 + 216), "init");
    v33 = swift_dynamicCastClassUnconditional(v32, v29, 0, 0, 0);
    swift_beginAccess(v23 + 32, v0 + 144, 0, 0);
    v19 = *(_QWORD *)(v23 + 32);
    v20 = (char *)v32;
    swift_bridgeObjectRetain(v19);
    sub_100D4B900(v33, v19);
    if (!v25)
    {
      v21 = &off_1012763B8;
      goto LABEL_14;
    }
LABEL_9:
    v34 = *(_QWORD *)(v0 + 320);

    swift_bridgeObjectRelease(v19);
    swift_unknownObjectRelease(v2);
    v35 = swift_release(v34);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v35);
  }
  v8 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 296));
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v8);
  v13 = type metadata accessor for CRLBoardItemData();
  v14 = swift_dynamicCastClassUnconditional(v2, v13, 0, 0, 0);
  v15 = *(void **)(v12 + 32);
  swift_unknownObjectRetain(v2);
  v16 = sub_10089D640(v14, v15);
  swift_unknownObjectRelease(v2);
  v17 = type metadata accessor for CRLBoardItemBase(0);
  v18 = swift_dynamicCastClassUnconditional(v16, v17, 0, 0, 0);
  swift_beginAccess(v9 + 32, v0 + 192, 0, 0);
  v19 = *(_QWORD *)(v9 + 32);
  v20 = (char *)v16;
  swift_bridgeObjectRetain(v19);
  sub_100D4ABB0(v18, v19);
  if (v11)
    goto LABEL_9;
  v21 = &off_10127C5C0;
LABEL_14:
  v49 = *(_QWORD *)(v0 + 320);
  swift_unknownObjectRelease(v2);
  swift_release(v49);
  swift_bridgeObjectRelease(v19);

  return (*(uint64_t (**)(char *, _UNKNOWN **))(v0 + 8))(v20, v21);
}

uint64_t sub_100D499F4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_100D49A20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2[54] = a1;
  v2[55] = v1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v2[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[57] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[58] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[59] = swift_task_alloc(v6);
  v2[60] = swift_task_alloc(v6);
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  v2[61] = v7;
  v8 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[62] = swift_task_alloc(v8);
  v2[63] = swift_task_alloc(v8);
  return swift_task_switch(sub_100D49AE8, 0, 0);
}

uint64_t sub_100D49AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 440) + 16);
  v2 = dword_101410044;
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  *(_QWORD *)(v0 + 512) = v3;
  *v3 = v0;
  v3[1] = sub_100D49B58;
  return sub_100D4CDA4(v0 + 160, v1);
}

uint64_t sub_100D49B58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v2 = *(_QWORD *)(*v1 + 512);
  v3 = *v1;
  *(_QWORD *)(v3 + 520) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v4 = *(_QWORD *)(v3 + 496);
    v6 = *(_QWORD *)(v3 + 472);
    v5 = *(_QWORD *)(v3 + 480);
    v7 = *(_QWORD *)(v3 + 448);
    swift_task_dealloc(*(_QWORD *)(v3 + 504));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    v9 = *(_OWORD *)(v3 + 176);
    *(_OWORD *)(v3 + 528) = *(_OWORD *)(v3 + 160);
    *(_OWORD *)(v3 + 544) = v9;
    *(_QWORD *)(v3 + 560) = *(_QWORD *)(v3 + 192);
    *(_OWORD *)(v3 + 568) = *(_OWORD *)(v3 + 200);
    *(_QWORD *)(v3 + 584) = *(_QWORD *)(v3 + 216);
    return swift_task_switch(sub_100D49C30, 0, 0);
  }
}

uint64_t sub_100D49C30()
{
  uint64_t v0;
  unint64_t *v1;
  __int128 v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _QWORD *v20;
  _UNKNOWN **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectDataResult;
  _QWORD *v25;
  void (__cdecl *v26)();
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  void (*v42)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void (*v53)(uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  __n128 v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _BYTE *v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  void (__cdecl *v113)();
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;

  v1 = (unint64_t *)(v0 + 224);
  v2 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 256) = v2;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 208);
  sub_1007BD85C(*(_QWORD *)(v0 + 256));
  if ((v4 & 0x101) == 0)
    goto LABEL_5;
  v5 = v3;
  v6 = v4;
  v7 = *v1;
  if (sub_1001E973C(*v1))
  {
    sub_10051FAD0((_QWORD *)(v0 + 160));
    v8 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v8, 0, 0);
    *v9 = 14;
    swift_willThrow(v10);
LABEL_8:
    v14 = *(_QWORD *)(v0 + 496);
    v16 = *(_QWORD *)(v0 + 472);
    v15 = *(_QWORD *)(v0 + 480);
    v17 = *(_QWORD *)(v0 + 448);
    swift_task_dealloc(*(_QWORD *)(v0 + 504));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  if ((v6 & 0x100) != 0)
  {
    if (v5 | v6)
    {
      v73 = *(_QWORD *)(v0 + 520);
      v74 = sub_10089DD8C((uint64_t *)(v0 + 224), *(void **)(*(_QWORD *)(v0 + 440) + 40));
      if (v73)
        goto LABEL_6;
      v20 = (_QWORD *)v74;
      v21 = &off_101276380;
    }
    else
    {
      v81 = *(_QWORD *)(v0 + 264);
      if (!*(_QWORD *)(v81 + 16) || (sub_10084342C(0), (v83 & 1) == 0))
      {
        v90 = sub_100577444();
        swift_allocError(&type metadata for CRLSerializationError, v90, 0, 0);
        *v91 = 10;
        swift_willThrow(v92);
        goto LABEL_6;
      }
      v84 = *(_QWORD *)(v0 + 520);
      v85 = *(_QWORD *)(v0 + 488);
      v86 = (uint64_t *)(*(_QWORD *)(v81 + 56) + 16 * v82);
      v87 = *v86;
      v88 = v86[1];
      sub_1004BE310(*v86, v88);
      sub_1004BE310(v87, v88);
      v89 = sub_1005034A0((unint64_t *)&unk_101405DC0, 255, type metadata accessor for CRLBoardCRDTData, (uint64_t)&unk_100F3A2D0);
      CRDT.init(serializedData:)(v87, v88, v85, v89);
      if (v84)
      {
        sub_1004BBBC8(v87, v88);
        v13 = (_QWORD *)(v0 + 160);
        goto LABEL_7;
      }
      v107 = *(_QWORD *)(v0 + 496);
      v108 = *(_QWORD *)(v0 + 504);
      v109 = *(_QWORD *)(v0 + 232);
      v110 = *(_QWORD *)(v0 + 240);
      sub_1004B8460(v108, v107, type metadata accessor for CRLBoardCRDTData);
      v111 = type metadata accessor for CRLBoardData(0);
      v20 = (_QWORD *)swift_allocObject(v111, *(unsigned int *)(v111 + 48), *(unsigned __int16 *)(v111 + 52));
      v20[2] = 7;
      v20[3] = v7;
      v20[4] = v109;
      v20[5] = v110;
      sub_1004B84E0(v107, (uint64_t)v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      sub_1004BBBC8(v87, v88);
      v112 = (_QWORD *)((char *)v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *v112 = 0;
      v112[1] = 0xE000000000000000;
      sub_1004B84A4(v108, type metadata accessor for CRLBoardCRDTData);
      v21 = &off_1012A6A58;
    }
  }
  else
  {
LABEL_5:
    v11 = *(_QWORD *)(v0 + 520);
    v12 = sub_10089DBB4((uint64_t *)(v0 + 224));
    if (v11)
    {
LABEL_6:
      v13 = (_QWORD *)(v0 + 160);
LABEL_7:
      sub_10051FAD0(v13);
      goto LABEL_8;
    }
    v20 = v12;
    v21 = &off_101270D70;
  }
  *(_QWORD *)(v0 + 600) = v21;
  *(_QWORD *)(v0 + 592) = v20;
  v22 = *(_QWORD *)(v0 + 480);
  v115 = *(_QWORD *)(v0 + 464);
  v118 = *(_QWORD *)(v0 + 456);
  v23 = *(_QWORD *)(v0 + 440);
  ObjectDataResult = type metadata accessor for CRLSerializableObjectReader.ReadObjectDataResult();
  v25 = (_QWORD *)swift_allocObject(ObjectDataResult, 40, 7);
  *(_QWORD *)(v0 + 608) = v25;
  v25[3] = v21;
  v25[4] = _swiftEmptyArrayStorage;
  v25[2] = v20;
  *(_QWORD *)(v0 + 616) = swift_getObjectType(v20);
  v26 = (void (__cdecl *)())v21[5];
  v113 = v26;
  swift_unknownObjectRetain(v20);
  swift_retain(v25);
  v26();
  swift_beginAccess(v23 + 56, v0 + 280, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v23 + 56));
  v121 = *(_QWORD *)(v23 + 56);
  *(_QWORD *)(v23 + 56) = 0x8000000000000000;
  v28 = sub_1006D289C((uint64_t)v25, v22, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 624) = v28;
  v29 = *(_QWORD *)(v23 + 56);
  *(_QWORD *)(v23 + 56) = v121;
  swift_bridgeObjectRelease(v29);
  swift_endAccess(v0 + 280);
  v30 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
  *(_QWORD *)(v0 + 632) = v30;
  v30(v22, v118);
  v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v31, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_unknownObjectRetain(v20);
  v113();
  swift_unknownObjectRelease(v20);
  v33 = sub_1005034A0(&qword_1013E49E0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v34 = dispatch thunk of CustomStringConvertible.description.getter(v118, v33);
  v36 = v35;
  v30(v22, v118);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v34;
  *(_QWORD *)(inited + 40) = v36;
  if (v28)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"readNextObjectData()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 100, "Object UUID has already been added to the set: %@", 49, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"readNextObjectData()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2u, 100, (uint64_t)"Object UUID has already been added to the set: %@", 49, 2u);
  }
  swift_bridgeObjectRelease(inited);
  v37 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 640) = v37;
  *(_QWORD *)(v0 + 424) = v37;
  v38 = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v0 + 648) = v38;
  v39 = *(_QWORD *)(v0 + 464);
  if (v38)
  {
    v116 = v0 + 400;
    v40 = *(_DWORD *)(v39 + 80);
    *(_DWORD *)(v0 + 712) = v40;
    v41 = *(_QWORD *)(v39 + 72);
    *(_QWORD *)(v0 + 656) = v41;
    v42 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v39 + 16);
    *(_QWORD *)(v0 + 664) = v42;
    v44 = swift_bridgeObjectRetain(v37);
    v45 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 672) = v45;
      v46 = *(_QWORD *)(v0 + 448);
      v47 = *(_QWORD *)(v0 + 456);
      v42(v46, v43 + ((v40 + 32) & ~(unint64_t)v40) + v45 * v41, v47, v44);
      v48 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56);
      *(_QWORD *)(v0 + 680) = v48;
      v48(v46, 0, 1, v47);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v46, 1, v47) == 1)
        break;
      v49 = *(_QWORD *)(v0 + 440);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 32))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
      swift_beginAccess(v49 + 56, v0 + 328, 32, 0);
      v50 = *(_QWORD *)(v49 + 56);
      if (!*(_QWORD *)(v50 + 16) || (v51 = sub_100842EFC(*(_QWORD *)(v0 + 472)), (v52 & 1) == 0))
      {
        v77 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
        v78 = *(_QWORD *)(v0 + 472);
        v79 = *(_QWORD *)(v0 + 456);
        swift_endAccess(v0 + 328);
        v77(v78, v79);
        v80 = (_QWORD *)swift_task_alloc(dword_10141003C);
        *(_QWORD *)(v0 + 688) = v80;
        *v80 = v0;
        v80[1] = sub_100D4A5C4;
        return sub_100D49A20(v0 + 16);
      }
      v53 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 632);
      v54 = *(_QWORD *)(v0 + 472);
      v55 = *(_QWORD *)(v0 + 456);
      v56 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v51);
      swift_endAccess(v0 + 328);
      v57 = swift_retain(v56);
      v53(v54, v55, v57);
      v58 = *(_QWORD *)(v56 + 16);
      v59 = type metadata accessor for CRLBoardItemData();
      v60 = swift_dynamicCastClass(v58, v59);
      if (v60)
      {
        v61 = v60;
        v62 = *(_QWORD *)(v0 + 608);
        v63 = type metadata accessor for CRLBoardItemDatabaseResult();
        v64 = swift_allocObject(v63, 32, 7);
        *(_QWORD *)(v64 + 24) = _swiftEmptyArrayStorage;
        *(_QWORD *)(v64 + 16) = v61;
        swift_beginAccess(v56 + 32, v0 + 352, 0, 0);
        v65 = *(_QWORD *)(v56 + 32);
        swift_beginAccess(v64 + 24, v0 + 376, 1, 0);
        v66 = *(_QWORD *)(v64 + 24);
        *(_QWORD *)(v64 + 24) = v65;
        swift_unknownObjectRetain_n(v58, 2);
        swift_bridgeObjectRetain(v65);
        swift_bridgeObjectRelease(v66);
        swift_beginAccess(v62 + 32, v116, 33, 0);
        swift_retain(v64);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
        v69 = *(_QWORD *)((*(_QWORD *)(v62 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10);
        v68 = *(_QWORD *)((*(_QWORD *)(v62 + 32) & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v69 >= v68 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
        v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v64);
        specialized Array._endMutation()(v70);
        swift_endAccess(v116);
        swift_release(v64);
        swift_unknownObjectRelease(v58);
      }
      v71 = *(_QWORD *)(v0 + 672);
      v72 = *(_QWORD *)(v0 + 648);
      v44 = swift_release(v56);
      if (v71 + 1 == v72)
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v0 + 680))(*(_QWORD *)(v0 + 448), 1, 1, *(_QWORD *)(v0 + 456), v44);
        break;
      }
      v45 = *(_QWORD *)(v0 + 672) + 1;
      v42 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v0 + 664);
      v41 = *(_QWORD *)(v0 + 656);
      LOBYTE(v40) = *(_BYTE *)(v0 + 712);
      v43 = *(_QWORD *)(v0 + 640);
      v39 = *(_QWORD *)(v0 + 464);
    }
  }
  else
  {
    v75 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v39 + 56);
    v76 = swift_bridgeObjectRetain(v37);
    v75(*(_QWORD *)(v0 + 448), 1, 1, *(_QWORD *)(v0 + 456), v76);
  }
  v93 = *(_QWORD *)(v0 + 440);
  sub_10051FD74((_QWORD *)(v0 + 424));
  v94 = *(_QWORD *)(v93 + 24);
  if ((*(_BYTE *)(v94 + 16) & 1) != 0
    || (swift_beginAccess(v94 + 32, v0 + 304, 0, 0), *(_QWORD *)(*(_QWORD *)(v94 + 32) + 16)))
  {
    v95 = *(_QWORD *)(v0 + 616);
    v96 = *(_QWORD *)(v0 + 600);
    v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    swift_unknownObjectRetain(*(_QWORD *)(v0 + 592));
    v97(v94, v95, v96);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 592));
  }
  v98 = *(_QWORD *)(v0 + 624);
  v120 = *(_QWORD *)(v0 + 608);
  v99 = *(_QWORD *)(v0 + 584);
  v100 = *(_QWORD *)(v0 + 560);
  v117 = *(_OWORD *)(v0 + 528);
  v119 = *(_OWORD *)(v0 + 544);
  v102 = *(_QWORD *)(v0 + 496);
  v101 = *(_QWORD *)(v0 + 504);
  v104 = *(_QWORD *)(v0 + 472);
  v103 = *(_QWORD *)(v0 + 480);
  v105 = *(_QWORD *)(v0 + 448);
  v106 = *(_QWORD *)(v0 + 432);
  v114 = *(_OWORD *)(v0 + 568);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 592));
  swift_release(v98);
  swift_task_dealloc(v101);
  swift_task_dealloc(v102);
  swift_task_dealloc(v103);
  swift_task_dealloc(v104);
  swift_task_dealloc(v105);
  *(_OWORD *)v106 = v117;
  *(_OWORD *)(v106 + 16) = v119;
  *(_QWORD *)(v106 + 32) = v100;
  *(_OWORD *)(v106 + 40) = v114;
  *(_QWORD *)(v106 + 56) = v99;
  *(_QWORD *)(v106 + 64) = v120;
  v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100D4A5C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 688);
  v2[87] = v0;
  v5 = v2[7];
  v4 = v2[8];
  v6 = v2[9];
  v2[88] = v2[10];
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_10051FD74(v2 + 53);
    sub_10051FAD0(v2 + 20);
    v7 = sub_100D4AB24;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
    v7 = sub_100D4A670;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100D4A670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  v57 = v0 + 400;
  v1 = *(_QWORD *)(v0 + 704);
  v56 = *(_QWORD *)(v0 + 696);
  v61 = type metadata accessor for CRLBoardItemData();
  while (1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = swift_dynamicCastClass(v2, v61);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(v0 + 608);
      v6 = type metadata accessor for CRLBoardItemDatabaseResult();
      v7 = swift_allocObject(v6, 32, 7);
      *(_QWORD *)(v7 + 24) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v7 + 16) = v4;
      swift_beginAccess(v1 + 32, v0 + 352, 0, 0);
      v8 = *(_QWORD *)(v1 + 32);
      swift_beginAccess(v7 + 24, v0 + 376, 1, 0);
      v9 = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v7 + 24) = v8;
      swift_unknownObjectRetain_n(v2, 2);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease(v9);
      swift_beginAccess(v5 + 32, v57, 33, 0);
      swift_retain(v7);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)((*(_QWORD *)(v5 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)((*(_QWORD *)(v5 + 32) & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v7);
      specialized Array._endMutation()(v13);
      swift_endAccess(v57);
      swift_release(v7);
      swift_unknownObjectRelease(v2);
    }
    v14 = *(_QWORD *)(v0 + 672);
    v15 = *(_QWORD *)(v0 + 648);
    v16 = swift_release(v1);
    if (v14 + 1 == v15)
      break;
    v17 = *(_QWORD *)(v0 + 672) + 1;
    *(_QWORD *)(v0 + 672) = v17;
    v19 = *(_QWORD *)(v0 + 456);
    v18 = *(_QWORD *)(v0 + 464);
    v20 = *(_QWORD *)(v0 + 448);
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v0 + 664))(v20, *(_QWORD *)(v0 + 640)+ ((*(unsigned __int8 *)(v0 + 712) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 712))+ *(_QWORD *)(v0 + 656) * v17, v19, v16);
    v21 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56);
    *(_QWORD *)(v0 + 680) = v21;
    v21(v20, 0, 1, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v19) == 1)
      goto LABEL_13;
    v22 = *(_QWORD *)(v0 + 440);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 32))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
    swift_beginAccess(v22 + 56, v0 + 328, 32, 0);
    v23 = *(_QWORD *)(v22 + 56);
    if (!*(_QWORD *)(v23 + 16) || (v24 = sub_100842EFC(*(_QWORD *)(v0 + 472)), (v25 & 1) == 0))
    {
      v30 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
      v31 = *(_QWORD *)(v0 + 472);
      v32 = *(_QWORD *)(v0 + 456);
      swift_endAccess(v0 + 328);
      v30(v31, v32);
      v33 = (_QWORD *)swift_task_alloc(dword_10141003C);
      *(_QWORD *)(v0 + 688) = v33;
      *v33 = v0;
      v33[1] = sub_100D4A5C4;
      return sub_100D49A20(v0 + 16);
    }
    v26 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 632);
    v27 = *(_QWORD *)(v0 + 472);
    v28 = *(_QWORD *)(v0 + 456);
    v1 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
    swift_endAccess(v0 + 328);
    v29 = swift_retain(v1);
    v26(v27, v28, v29);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v0 + 680))(*(_QWORD *)(v0 + 448), 1, 1, *(_QWORD *)(v0 + 456), v16);
LABEL_13:
  v35 = *(_QWORD *)(v0 + 440);
  sub_10051FD74((_QWORD *)(v0 + 424));
  v36 = *(_QWORD *)(v35 + 24);
  if ((*(_BYTE *)(v36 + 16) & 1) == 0)
  {
    swift_beginAccess(v36 + 32, v0 + 304, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)(v36 + 32) + 16))
      goto LABEL_18;
  }
  v37 = *(_QWORD *)(v0 + 616);
  v38 = *(_QWORD *)(v0 + 600);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  swift_unknownObjectRetain(*(_QWORD *)(v0 + 592));
  v39(v36, v37, v38);
  if (!v56)
  {
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 592));
LABEL_18:
    v47 = *(_QWORD *)(v0 + 624);
    v62 = *(_QWORD *)(v0 + 608);
    v48 = *(_QWORD *)(v0 + 584);
    v49 = *(_QWORD *)(v0 + 560);
    v59 = *(_OWORD *)(v0 + 528);
    v60 = *(_OWORD *)(v0 + 544);
    v51 = *(_QWORD *)(v0 + 496);
    v50 = *(_QWORD *)(v0 + 504);
    v53 = *(_QWORD *)(v0 + 472);
    v52 = *(_QWORD *)(v0 + 480);
    v54 = *(_QWORD *)(v0 + 448);
    v55 = *(_QWORD *)(v0 + 432);
    v58 = *(_OWORD *)(v0 + 568);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 592));
    swift_release(v47);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    *(_OWORD *)v55 = v59;
    *(_OWORD *)(v55 + 16) = v60;
    *(_QWORD *)(v55 + 32) = v49;
    *(_OWORD *)(v55 + 40) = v58;
    *(_QWORD *)(v55 + 56) = v48;
    *(_QWORD *)(v55 + 64) = v62;
    v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  v40 = *(_QWORD *)(v0 + 624);
  v41 = *(_QWORD *)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 608));
  swift_unknownObjectRelease_n(v41, 2);
  swift_release(v40);
  sub_10051FAD0((_QWORD *)(v0 + 160));
  v42 = *(_QWORD *)(v0 + 496);
  v44 = *(_QWORD *)(v0 + 472);
  v43 = *(_QWORD *)(v0 + 480);
  v45 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 504));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_100D4AB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 608);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 592));
  swift_release(v2);
  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 504));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100D4ABB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  BOOL v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  v10 = swift_allocObject(v9, 40, 7);
  *(_QWORD *)(v10 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v10 + 24), "Partial Tree");
  *(_BYTE *)(v10 + 37) = 0;
  *(_WORD *)(v10 + 38) = -5120;
  swift_retain(v10);
  UUID.init()(v11);
  v12 = type metadata accessor for CRLTransactionContext(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v30 = v10;
  v31 = sub_1006AD88C(v10, 0, 0, (uint64_t)v8, 0, v13);
  sub_100C86CC0(a1, 2, v31);
  if ((unint64_t)a2 >> 62)
    goto LABEL_18;
  v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  while (v14)
  {
    v15 = a2 & 0xC000000000000001;
    v16 = 4;
    v17 = a2;
    while (1)
    {
      v18 = v16 - 4;
      if (!v15)
        break;
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a2);
      a2 = v16 - 3;
      if (__OFADD__(v18, 1))
        goto LABEL_17;
LABEL_9:
      v20 = sub_100D4C418(v19, v31);
      if (v3)
      {
        swift_release(v31);
        swift_release(v30);
        swift_release(v19);
        swift_bridgeObjectRelease(v17);
        return;
      }
      v21 = v20;
      swift_release(v19);

      ++v16;
      v22 = a2 == v14;
      a2 = v17;
      if (v22)
        goto LABEL_12;
    }
    v19 = *(_QWORD *)(a2 + 8 * v16);
    swift_retain(v19);
    a2 = v16 - 3;
    if (!__OFADD__(v18, 1))
      goto LABEL_9;
LABEL_17:
    __break(1u);
LABEL_18:
    if (a2 < 0)
      v28 = a2;
    else
      v28 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v28);
  }
LABEL_12:
  v23 = swift_bridgeObjectRelease(a2);
  v24 = v31;
  v25 = (*(uint64_t (**)(__n128))(*(_QWORD *)v31 + 720))(v23);
  if (v3)
  {
    v26 = v30;
  }
  else
  {
    swift_release(v25);
    v27 = v30;
    sub_100D4C720();
    v26 = v27;
  }
  swift_release(v26);
  swift_release(v24);
}

void sub_100D4ADFC(NSObject *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  void (*v24)(uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  void (*v27)(uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(__n128);
  char *v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(__n128);
  char *v44;
  __n128 v45;
  uint64_t v46;
  dispatch_queue_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t Result;
  _QWORD *inited;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char v81;
  dispatch_queue_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, __n128);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  char isEscapingClosureAtFileLocation;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  dispatch_queue_t v117;
  char *v118;
  uint64_t v119[5];
  uint64_t v120;
  uint64_t v121[4];
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125[24];
  char v126[24];
  _QWORD *v127;
  char v128[24];
  char v129[32];
  _QWORD *v130;

  v4 = v3;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v112 = *(_QWORD *)(v10 - 8);
  v113 = v10;
  __chkstk_darwin(v10);
  v118 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v116 = (char *)&v103 - v13;
  __chkstk_darwin(v14);
  v114 = (char *)&v103 - v15;
  v16 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v115 = (uint64_t)&v103 - v20;
  v21 = *(_QWORD *)(v2 + 24);
  if ((*(_BYTE *)(v21 + 16) & 1) == 0)
  {
    swift_beginAccess(v21 + 32, v129, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)(v21 + 32) + 16))
    {
      v23 = a1;
LABEL_6:
      v107 = v18;
      v106 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      v29 = *(uint64_t *)((char *)&v23->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      v30 = v29 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v29 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v128, 0, 0);
      sub_1004B8460(v30, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
      swift_retain(v29);
      v31 = sub_1004B804C(&qword_1013E1A80);
      v32 = (uint64_t)v114;
      CRRegister.wrappedValue.getter(v31);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
      v34 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v33 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      swift_bridgeObjectRetain(v33);
      sub_10067AFD0(v32, v34, v33, v115);
      swift_release(v29);
      v111 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
      v35 = *(char **)((char *)&v23->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v36 = *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v37 = *(void (**)(__n128))(*(_QWORD *)v36 + 256);
      v38 = v35;
      v39 = swift_retain(v36);
      v37(v39);

      swift_release(v36);
      v40 = OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer;
      v117 = v23;
      v41 = *(char **)((char *)&v23->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      v42 = *(_QWORD *)&v41[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v43 = *(void (**)(__n128))(*(_QWORD *)v42 + 256);
      v44 = v41;
      v45 = swift_retain(v42);
      v43(v45);

      swift_release(v42);
      v130 = _swiftEmptyArrayStorage;
      v127 = _swiftEmptyArrayStorage;
      v110 = v40;
      if ((unint64_t)a2 >> 62)
      {
        if (a2 < 0)
          v53 = a2;
        else
          v53 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v46 = _CocoaArrayWrapper.endIndex.getter(v53);
        v48 = v116;
        v47 = v117;
        if (v46)
          goto LABEL_8;
      }
      else
      {
        v46 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a2);
        v48 = v116;
        v47 = v117;
        if (v46)
        {
LABEL_8:
          if (v46 < 1)
          {
            __break(1u);
LABEL_28:
            __break(1u);
            return;
          }
          v49 = 0;
          do
          {
            if ((a2 & 0xC000000000000001) != 0)
            {
              v50 = specialized _ArrayBuffer._getElementSlowPath(_:)(v49, a2);
            }
            else
            {
              v50 = *(_QWORD *)(a2 + 8 * v49 + 32);
              swift_retain(v50);
            }
            ++v49;
            v119[0] = v50;
            sub_100D4BDD8(v119, v48, &v130, v118, &v127);
            swift_release(v50);
          }
          while (v46 != v49);
          swift_bridgeObjectRelease(a2);
          v51 = v130;
          v52 = v127;
          v47 = v117;
LABEL_20:
          v54 = *(_QWORD *)(*(char **)((char *)&v47->isa + v111) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v55 = type metadata accessor for CRLBoardItemDatabaseResult();
          v56 = swift_allocObject(v55, 32, 7);
          v108 = v56;
          *(_QWORD *)(v56 + 24) = _swiftEmptyArrayStorage;
          v57 = (uint64_t *)(v56 + 24);
          *(_QWORD *)(v56 + 16) = v54;
          swift_beginAccess(v56 + 24, v126, 1, 0);
          v58 = *v57;
          *v57 = (uint64_t)v51;
          swift_bridgeObjectRetain(v51);
          swift_retain(v54);
          swift_bridgeObjectRelease(v58);
          v59 = *(_QWORD *)(*(char **)((char *)&v117->isa + v110) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v60 = swift_allocObject(v55, 32, 7);
          v109 = v60;
          *(_QWORD *)(v60 + 24) = _swiftEmptyArrayStorage;
          v61 = (uint64_t *)(v60 + 24);
          *(_QWORD *)(v60 + 16) = v59;
          swift_beginAccess(v60 + 24, v125, 1, 0);
          v62 = *v61;
          *v61 = (uint64_t)v52;
          swift_bridgeObjectRetain(v52);
          swift_retain(v59);
          swift_bridgeObjectRelease(v62);
          Result = type metadata accessor for CRLBoardDatabaseFetchResult();
          inited = (_QWORD *)swift_initStackObject(Result, &v124);
          v105 = inited;
          inited[2] = _swiftEmptyDictionarySingleton;
          v65 = inited + 2;
          inited[3] = _swiftEmptyDictionarySingleton;
          v66 = inited + 3;
          inited[4] = _swiftEmptyDictionarySingleton;
          v104 = inited + 4;
          inited[5] = _swiftEmptyDictionarySingleton;
          v67 = (uint64_t)v107;
          sub_1004B8460(v115, (uint64_t)v107, type metadata accessor for CRLBoardIdentifier);
          v68 = *(uint64_t *)((char *)&v117->isa + v106);
          v69 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          v70 = *(_QWORD *)(*(char **)((char *)&v117->isa + v111) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v71 = type metadata accessor for CRLContainerItemData(0);
          v111 = swift_dynamicCastClassUnconditional(v70, v71, 0, 0, 0);
          v72 = *(_QWORD *)(*(char **)((char *)&v117->isa + v110) + v69);
          v110 = swift_dynamicCastClassUnconditional(v72, v71, 0, 0, 0);
          LOBYTE(v71) = *((_BYTE *)&v117->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported);
          swift_beginAccess(v65, v119, 33, 0);
          swift_retain(v68);
          swift_retain(v70);
          swift_retain(v72);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v65);
          v123 = *v65;
          *v65 = 0x8000000000000000;
          v121[0] = v68;
          v121[1] = v111;
          v121[2] = v110;
          v121[3] = 0;
          v122 = v71;
          v74 = v108;
          sub_1008273E4(v121, v67, isUniquelyReferenced_nonNull_native);
          v75 = *v65;
          *v65 = v123;
          swift_bridgeObjectRelease(v75);
          sub_1004B84A4(v67, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess(v119);
          v76 = v115;
          sub_1004B8460(v115, v67, type metadata accessor for CRLBoardIdentifier);
          swift_beginAccess(v66, v119, 33, 0);
          swift_retain(v74);
          v77 = swift_isUniquelyReferenced_nonNull_native(*v66);
          v123 = *v66;
          *v66 = 0x8000000000000000;
          sub_1008273C8(v74, v67, v77);
          v78 = *v66;
          *v66 = v123;
          swift_bridgeObjectRelease(v78);
          sub_1004B84A4(v67, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess(v119);
          sub_1004B8460(v76, v67, type metadata accessor for CRLBoardIdentifier);
          v79 = v104;
          swift_beginAccess(v104, v119, 33, 0);
          v80 = v109;
          swift_retain(v109);
          v81 = swift_isUniquelyReferenced_nonNull_native(*v79);
          v123 = *v79;
          *v79 = 0x8000000000000000;
          v82 = v117;
          sub_1008273C8(v80, v67, v81);
          v83 = *v79;
          *v79 = v123;
          swift_bridgeObjectRelease(v83);
          v84 = v67;
          v85 = v105;
          sub_1004B84A4(v84, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess(v119);
          sub_1005034A0((unint64_t *)&qword_101406AE0, 255, type metadata accessor for CRLBoard, (uint64_t)&unk_100F276E4);
          v86 = swift_unknownObjectRetain(v82);
          v87 = (uint64_t)v114;
          UUID.init()(v86);
          v88 = type metadata accessor for CRLTransactionContext(0);
          v89 = swift_allocObject(v88, *(unsigned int *)(v88 + 48), *(unsigned __int16 *)(v88 + 52));
          v90 = sub_1006AD854((uint64_t)v82, 0, 1, v87, 1, v89);
          sub_100B12D40((uint64_t)v85, v90, 0, 2);
          if (v4)
          {
            sub_1004B84A4(v76, type metadata accessor for CRLBoardIdentifier);
            swift_release(v74);
            swift_release(v109);
            swift_release(v90);
            swift_setDeallocating(v85);
            swift_bridgeObjectRelease(v85[2]);
            swift_bridgeObjectRelease(v85[3]);
            swift_bridgeObjectRelease(v85[4]);
            v91 = swift_bridgeObjectRelease(v85[5]);
LABEL_22:
            v92 = v113;
            v93 = *(void (**)(char *, uint64_t, __n128))(v112 + 8);
            v93(v118, v113, v91);
            ((void (*)(char *, uint64_t))v93)(v116, v92);
            swift_bridgeObjectRelease(v127);
            swift_bridgeObjectRelease(v130);
            return;
          }
          v94 = v76;
          v95 = (*(uint64_t (**)(void))(*(_QWORD *)v90 + 720))();
          -[NSObject fixUp](v82, "fixUp", swift_release(v95).n128_f64[0]);
          v96 = *(uint64_t *)((char *)&v82->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges);
          v117 = *(dispatch_queue_t *)(v96 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
          v97 = swift_allocObject(&unk_1012A3178, 32, 7);
          *(_QWORD *)(v97 + 16) = v90;
          *(_QWORD *)(v97 + 24) = v96;
          v98 = v85;
          v99 = swift_allocObject(&unk_1012A31A0, 32, 7);
          *(_QWORD *)(v99 + 16) = sub_100619E50;
          *(_QWORD *)(v99 + 24) = v97;
          v119[4] = (uint64_t)sub_1005B71BC;
          v120 = v99;
          v119[0] = (uint64_t)_NSConcreteStackBlock;
          v119[1] = *(_QWORD *)"";
          v119[2] = (uint64_t)sub_100618D24;
          v119[3] = (uint64_t)&unk_1012A31B8;
          v100 = _Block_copy(v119);
          v101 = v120;
          swift_retain(v90);
          swift_retain(v96);
          swift_retain(v99);
          swift_release(v101);
          dispatch_sync(v117, v100);
          _Block_release(v100);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v99, "", 89, 314, 26, 1);
          swift_release(v90);
          swift_release(v97);
          swift_release(v99);
          swift_setDeallocating(v98);
          swift_bridgeObjectRelease(v98[2]);
          swift_bridgeObjectRelease(v98[3]);
          swift_bridgeObjectRelease(v98[4]);
          swift_bridgeObjectRelease(v98[5]);
          swift_release(v108);
          swift_release(v109);
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            sub_1004B84A4(v94, type metadata accessor for CRLBoardIdentifier);
            goto LABEL_22;
          }
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease(a2);
      v52 = _swiftEmptyArrayStorage;
      v51 = _swiftEmptyArrayStorage;
      goto LABEL_20;
    }
  }
  v22 = *(_QWORD *)(*(char **)((char *)&a1->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v23 = a1;
  v24 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v22 + 600);
  v25 = swift_retain(v22);
  v24(v21, v25);
  swift_release(v22);
  if (!v3)
  {
    v26 = *(_QWORD *)(*(char **)((char *)&v23->isa + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer)
                    + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v27 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 600);
    v28 = swift_retain(v26);
    v27(v21, v28);
    swift_release(v26);
    goto LABEL_6;
  }
}

void sub_100D4B900(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v3 = v2;
  v44[1] = a1;
  v5 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v44 - v9;
  v11 = type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  v12 = swift_allocObject(v11, 40, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v12 + 24), "Partial Tree");
  *(_BYTE *)(v12 + 37) = 0;
  *(_WORD *)(v12 + 38) = -5120;
  sub_1005034A0(&qword_1013EBC58, v13, (uint64_t (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner, (uint64_t)&unk_100F351AC);
  v14 = swift_retain_n(v12, 2);
  UUID.init()(v14);
  v15 = type metadata accessor for CRLTransactionContext(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v17 = (id)sub_1006AD88C(v12, 0, 0, (uint64_t)v10, 0, v16);
  swift_release(v12);
  if ((unint64_t)a2 >> 62)
  {
LABEL_27:
    if (a2 < 0)
      v40 = a2;
    else
      v40 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v40);
    v45 = v12;
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    v45 = v12;
    if (v18)
    {
LABEL_3:
      v49 = a2 & 0xC000000000000001;
      v19 = _swiftEmptyDictionarySingleton;
      v12 = 4;
      v47 = a2;
      v48 = v17;
      v46 = v18;
      while (1)
      {
        v22 = v12 - 4;
        if (v49)
        {
          v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, a2);
          v24 = v12 - 3;
          if (__OFADD__(v22, 1))
            goto LABEL_24;
        }
        else
        {
          swift_retain(*(_QWORD *)(a2 + 8 * v12));
          v24 = v12 - 3;
          if (__OFADD__(v22, 1))
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v52 = v24;
        v53 = v23;
        v25 = sub_100D4C418(v23, (uint64_t)v17);
        if (v3)
        {
          swift_bridgeObjectRelease(v19);
          swift_bridgeObjectRelease(a2);
          swift_release(v45);
          swift_release(v17);
          v39 = v53;
          goto LABEL_35;
        }
        v26 = v25;
        a2 = 0;
        (*(void (**)(void))((swift_isaMask & *v25) + 0x88))();
        v17 = v26;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
        v54 = v19;
        v28 = (uint64_t)v7;
        v3 = sub_100842EFC((uint64_t)v7);
        v30 = v19[2];
        v31 = (v29 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
          goto LABEL_25;
        v33 = v29;
        if (v19[3] >= v32)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v19 = v54;
            if ((v29 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_10082CAB4();
            v19 = v54;
            if ((v33 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_100814E54(v32, isUniquelyReferenced_nonNull_native);
          v34 = sub_100842EFC(v28);
          if ((v33 & 1) != (v35 & 1))
          {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v51);
            __break(1u);
            return;
          }
          v3 = v34;
          v19 = v54;
          if ((v33 & 1) != 0)
          {
LABEL_4:
            v20 = v19[7];

            *(_QWORD *)(v20 + 8 * v3) = v17;
            v7 = (char *)v28;
            goto LABEL_5;
          }
        }
        v19[(v3 >> 6) + 8] |= 1 << v3;
        v7 = (char *)v28;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v50 + 16))(v19[6] + *(_QWORD *)(v50 + 72) * v3, v28, v51);
        *(_QWORD *)(v19[7] + 8 * v3) = v17;
        v36 = v19[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_26;
        v19[2] = v38;
LABEL_5:
        v21 = swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v7, v51, v21);
        swift_release(v53);

        ++v12;
        v3 = 0;
        a2 = v47;
        v17 = v48;
        if (v52 == v46)
          goto LABEL_32;
      }
    }
  }
  v19 = _swiftEmptyDictionarySingleton;
LABEL_32:
  v41 = swift_bridgeObjectRelease(a2);
  v42 = (*(uint64_t (**)(__n128))(*(_QWORD *)v17 + 720))(v41);
  if (v3)
  {
    swift_release(v45);
    swift_release(v17);
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    swift_release(v42);
    v43 = v45;
    sub_100D4C720();
    sub_10069D848((uint64_t)v19);
    swift_bridgeObjectRelease(v19);
    swift_release(v43);
    v39 = (uint64_t)v17;
LABEL_35:
    swift_release(v39);
  }
}

uint64_t sub_100D4BD54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for CRLSerializableObjectReader()
{
  return objc_opt_self(_TtC8Freeform27CRLSerializableObjectReader);
}

uint64_t type metadata accessor for CRLSerializableObjectReader.ReadObjectDataResult()
{
  return objc_opt_self(_TtCC8Freeform27CRLSerializableObjectReaderP33_A486528E33C2A45B2E3C132C8872FFED20ReadObjectDataResult);
}

uint64_t sub_100D4BDD8(uint64_t *a1, char *a2, _QWORD *a3, char *a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;

  v49 = a5;
  v57 = a4;
  v51 = a3;
  v60 = a2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v9);
  v59 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - v12;
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v14);
  v50 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v58 = (char *)&v49 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v49 - v22;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v49 - v26;
  v53 = *a1;
  (*(void (**)(__n128))(**(_QWORD **)(v53 + 16) + 264))(v25);
  v54 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v54(v23, v60, v6);
  v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v55(v23, 0, 1, v6);
  v56 = v9;
  v28 = (uint64_t)&v13[*(int *)(v9 + 48)];
  v60 = v27;
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v13, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v23, v28, (uint64_t *)&unk_1013E1A50);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v29((uint64_t)v13, 1, v6) != 1)
  {
    sub_1004CB7BC((uint64_t)v13, (uint64_t)v20, (uint64_t *)&unk_1013E1A50);
    if (v29(v28, 1, v6) != 1)
    {
      v31 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v52, v28, v6);
      sub_1005034A0((unint64_t *)&qword_1013E4880, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v31);
      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33(v31, v6);
      sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
      v33(v20, v6);
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E1A50);
      v30 = (uint64_t)v60;
      if ((v32 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v37 = (uint64_t)v58;
      v54(v58, v57, v6);
      v55((char *)v37, 0, 1, v6);
      v38 = v59;
      v39 = v59 + *(int *)(v56 + 48);
      sub_1004CB7BC(v30, v59, (uint64_t *)&unk_1013E1A50);
      sub_1004CB7BC(v37, v39, (uint64_t *)&unk_1013E1A50);
      if (v29(v38, 1, v6) == 1)
      {
        sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
        if (v29(v39, 1, v6) == 1)
        {
          sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
LABEL_17:
          v34 = v53;
          swift_retain(v53);
          v36 = v49;
          goto LABEL_18;
        }
      }
      else
      {
        v40 = v50;
        sub_1004CB7BC(v38, v50, (uint64_t *)&unk_1013E1A50);
        if (v29(v39, 1, v6) != 1)
        {
          v41 = v52;
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v52, v39, v6);
          sub_1005034A0((unint64_t *)&qword_1013E4880, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v42 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v41);
          v43 = v37;
          v44 = *(void (**)(char *, uint64_t))(v7 + 8);
          v44(v41, v6);
          sub_1004CB800(v43, (uint64_t *)&unk_1013E1A50);
          v44((char *)v40, v6);
          sub_1004CB800(v38, (uint64_t *)&unk_1013E1A50);
          if ((v42 & 1) != 0)
            goto LABEL_17;
LABEL_15:
          sub_100757E04(&_mh_execute_header, (uint64_t)"prepareBoard(_:childItemResults:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 157, "Encountered an item with unexpected parent", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"prepareBoard(_:childItemResults:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2u, 157, (uint64_t)"Encountered an item with unexpected parent", 42, 2u);
          return sub_1004CB800(v30, (uint64_t *)&unk_1013E1A50);
        }
        sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v40, v6);
      }
      sub_1004CB800(v38, (uint64_t *)&unk_1013F62D0);
      goto LABEL_15;
    }
    sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
LABEL_6:
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F62D0);
    v30 = (uint64_t)v60;
    goto LABEL_9;
  }
  sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  if (v29(v28, 1, v6) != 1)
    goto LABEL_6;
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E1A50);
  v30 = (uint64_t)v60;
LABEL_8:
  v34 = v53;
  swift_retain(v53);
  v36 = v51;
LABEL_18:
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v46 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v45 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v46 >= v45 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
  v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v34);
  specialized Array._endMutation()(v47);
  return sub_1004CB800(v30, (uint64_t *)&unk_1013E1A50);
}

void *sub_100D4C418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];

  v4 = v3;
  v7 = sub_10089D640(*(_QWORD *)(a1 + 16), *(void **)(v2 + 32));
  v18 = a2;
  sub_100C8677C((uint64_t)v7, 2, a2);
  v17 = v7;

  swift_beginAccess(a1 + 24, v19, 0, 0);
  v8 = *(_QWORD *)(a1 + 24);
  if ((unint64_t)v8 >> 62)
    goto LABEL_15;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v8);
  while (v9)
  {
    v10 = 4;
    while (1)
    {
      v11 = v10 - 4;
      if ((v8 & 0xC000000000000001) == 0)
        break;
      v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v8);
      v13 = v10 - 3;
      if (__OFADD__(v11, 1))
        goto LABEL_14;
LABEL_9:
      v14 = (void *)sub_100D4C418(v12, v18);
      swift_release(v12);
      if (v4)
      {

        goto LABEL_13;
      }

      ++v10;
      if (v13 == v9)
        goto LABEL_13;
    }
    v12 = *(_QWORD *)(v8 + 8 * v10);
    swift_retain(v12);
    v13 = v10 - 3;
    if (!__OFADD__(v11, 1))
      goto LABEL_9;
LABEL_14:
    __break(1u);
LABEL_15:
    if (v8 < 0)
      v16 = v8;
    else
      v16 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
LABEL_13:
  swift_bridgeObjectRelease(v8);
  return v17;
}

uint64_t sub_100D4C578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v1 + 16, v8, 0, 0);
  v3 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain(v3);
  v4 = sub_100842EFC(a1);
  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
    swift_unknownObjectRetain(v6);
  }
  else
  {
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100D4C614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t ObjectType;
  char isUniquelyReferenced_nonNull_native;
  __n128 v11;
  uint64_t v13;
  _BYTE v14[24];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  ObjectType = swift_getObjectType(a1);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  swift_beginAccess(v2 + 16, v14, 33, 0);
  swift_unknownObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_10082540C(a1, a2, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 16) = v13;
  v11 = swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v11);
  return swift_endAccess(v14);
}

void sub_100D4C720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  _BYTE v38[24];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = (_QWORD *)(v0 + 16);
  swift_beginAccess(v0 + 16, v38, 0, 0);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v37 = v8;
  swift_bridgeObjectRetain(v8);
  v13 = 0;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v13 << 6);
LABEL_23:
    v19 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 16 * v15);
    v20 = type metadata accessor for CRLBoardItem(0);
    v21 = (_QWORD *)swift_dynamicCastClass(v19, v20);
    if (v21)
    {
      v22 = v21;
      v23 = (uint64_t)v7;
      v24 = *(void (**)(uint64_t))((swift_isaMask & *v21) + 0xB8);
      v25 = swift_unknownObjectRetain_n(v19, 2);
      v24(v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        swift_unknownObjectRelease_n(v19, 2);
        sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E1A50);
        v7 = (char *)v23;
      }
      else
      {
        v7 = (char *)v23;
        (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v23, v3, v4);
        v27 = *v34;
        if (!*(_QWORD *)(*v34 + 16))
          goto LABEL_30;
        swift_bridgeObjectRetain(*v34);
        v28 = sub_100842EFC(v23);
        if ((v29 & 1) == 0)
        {
          v26 = swift_bridgeObjectRelease(v27);
LABEL_30:
          (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v23, v4, v26);
          goto LABEL_31;
        }
        v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 16 * v28);
        swift_unknownObjectRetain(v30);
        swift_bridgeObjectRelease(v27);
        v31 = type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass(v30, v31))
        {
          swift_unknownObjectRetain(v30);
          sub_100742678(v22, 1);
          swift_unknownObjectRelease_n(v30, 2);
          swift_unknownObjectRelease_n(v19, 2);
          v7 = (char *)v23;
          (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
        }
        else
        {
          swift_unknownObjectRelease(v30);
          v7 = (char *)v23;
          (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v23, v4, v32);
LABEL_31:
          swift_unknownObjectRelease_n(v19, 2);
        }
      }
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v16 >= v36)
    goto LABEL_33;
  v17 = *(_QWORD *)(v35 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_22;
  v13 = v16 + 1;
  if (v16 + 1 >= v36)
    goto LABEL_33;
  v17 = *(_QWORD *)(v35 + 8 * v13);
  if (v17)
    goto LABEL_22;
  v13 = v16 + 2;
  if (v16 + 2 >= v36)
    goto LABEL_33;
  v17 = *(_QWORD *)(v35 + 8 * v13);
  if (v17)
    goto LABEL_22;
  v13 = v16 + 3;
  if (v16 + 3 >= v36)
    goto LABEL_33;
  v17 = *(_QWORD *)(v35 + 8 * v13);
  if (v17)
  {
LABEL_22:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_23;
  }
  v18 = v16 + 4;
  if (v18 >= v36)
  {
LABEL_33:
    swift_release(v37);
    return;
  }
  v17 = *(_QWORD *)(v35 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v36)
      goto LABEL_33;
    v17 = *(_QWORD *)(v35 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_100D4CAC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner()
{
  return objc_opt_self(_TtCC8Freeform27CRLSerializableObjectReader16PartialTreeOwner);
}

ValueMetadata *type metadata accessor for CRLSerializableObjectReaderOptions()
{
  return &type metadata for CRLSerializableObjectReaderOptions;
}

unint64_t sub_100D4CB24()
{
  unint64_t result;

  result = qword_101410008;
  if (!qword_101410008)
  {
    result = swift_getWitnessTable(&unk_100F35024, &type metadata for CRLSerializableObjectReaderOptions);
    atomic_store(result, (unint64_t *)&qword_101410008);
  }
  return result;
}

unint64_t sub_100D4CB6C()
{
  unint64_t result;

  result = qword_101410010;
  if (!qword_101410010)
  {
    result = swift_getWitnessTable(&unk_100F34FF4, &type metadata for CRLSerializableObjectReaderOptions);
    atomic_store(result, (unint64_t *)&qword_101410010);
  }
  return result;
}

unint64_t sub_100D4CBB4()
{
  unint64_t result;

  result = qword_101410018;
  if (!qword_101410018)
  {
    result = swift_getWitnessTable(&unk_100F3504C, &type metadata for CRLSerializableObjectReaderOptions);
    atomic_store(result, (unint64_t *)&qword_101410018);
  }
  return result;
}

unint64_t sub_100D4CBFC()
{
  unint64_t result;

  result = qword_101410020;
  if (!qword_101410020)
  {
    result = swift_getWitnessTable(&unk_100F35084, &type metadata for CRLSerializableObjectReaderOptions);
    atomic_store(result, (unint64_t *)&qword_101410020);
  }
  return result;
}

void sub_100D4CC48()
{
  CKRecordID v0;
  Swift::String v1;

  sub_100757E04(&_mh_execute_header, (uint64_t)"removeTransactable(_:deletedNewlyCreated:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 235, "PartialTreeOwner.removeTransactable() not expected to be called ever.", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"PartialTreeOwner.removeTransactable() not expected to be called ever.");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeTransactable(_:deletedNewlyCreated:)", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2u, 235, (uint64_t)"PartialTreeOwner.removeTransactable() not expected to be called ever.", 69, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v0, v1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
}

uint64_t sub_100D4CD38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 32));
  return v1;
}

uint64_t sub_100D4CD68(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1005034A0(&qword_101410028, a2, (uint64_t (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner, (uint64_t)&unk_100F35184);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100D4CDA4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v2[15] = a1;
  v2[16] = a2;
  v3 = *(_QWORD *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  v2[17] = v3;
  v2[18] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  v2[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[20] = v5;
  v2[21] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v2[22] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[23] = v7;
  v2[24] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1014053E0);
  v2[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v2[26] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[27] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[28] = swift_task_alloc(v11);
  v2[29] = swift_task_alloc(v11);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v2[30] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[31] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v14);
  v2[33] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[34] = swift_task_alloc(v15);
  v2[35] = swift_task_alloc(v15);
  v2[36] = swift_task_alloc(v15);
  v17 = type metadata accessor for BinaryDecodingOptions(0, v16);
  v2[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CRLProto_ObjectInfo(0);
  v2[38] = v18;
  v2[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100D4CF6C, 0, 0);
}

void sub_100D4CF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 24);
  if (__OFADD__(v2, 8))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 24) = v2 + 8;
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 16));
    v4 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
    *(_QWORD *)(v0 + 320) = v4;
    *v4 = v0;
    v4[1] = sub_100D4CFF4;
    sub_100696FF8(v2, 8, 1, ObjectType);
  }
}

uint64_t sub_100D4CFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 320);
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_100D4D1EC;
  else
    v6 = sub_100D4D064;
  return swift_task_switch(v6, 0, 0);
}

void sub_100D4D064()
{
  __asm { BR              X10 }
}

uint64_t sub_100D4D0A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v1 = v0[41];
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v2 = v0[16];
  v3 = *(_QWORD *)(v2 + 24);
  if (__OFADD__(v3, v1))
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x100D4D1C0);
  }
  *(_QWORD *)(v2 + 24) = v3 + v1;
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16));
  v5 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
  v0[44] = v5;
  *v5 = v0;
  v5[1] = sub_100D4D2D0;
  return sub_100696FF8(v3, v1, 1, ObjectType);
}

uint64_t sub_100D4D1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 128));
  v2 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D4D2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 352);
  v4[45] = a1;
  v4[46] = a2;
  v4[47] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_100D4E0BC;
  else
    v6 = sub_100D4D340;
  return swift_task_switch(v6, 0, 0);
}

void sub_100D4D340()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  double *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  void *v101;
  Swift::String v102;
  unint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t inited;
  id v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t ObjectType;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  char v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _BYTE *v140;
  __n128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[7];

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 296);
  memset(v174, 0, 40);
  v6 = sub_1004BE310(v3, v1);
  BinaryDecodingOptions.init()(v6);
  v7 = sub_1005034A0(&qword_1013E1740, 255, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25158);
  Message.init(serializedData:extensions:partial:options:)(v3, v1, v174, 0, v5, v4, v7);
  if (v2)
  {
    v9 = *(_QWORD *)(v0 + 360);
    v8 = *(_QWORD *)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 336);
    swift_release(*(_QWORD *)(v0 + 128));
    sub_1004BBBC8(v9, v8);
    sub_1004BBBC8(v11, v10);
    goto LABEL_3;
  }
  v22 = *(_QWORD *)(*(_QWORD *)(v0 + 312) + 24);
  v23 = (_QWORD *)Dictionary.init(minimumCapacity:)(*(_QWORD *)(v22 + 16), &type metadata for String, *(_QWORD *)(v0 + 240), &protocol witness table for String);
  v24 = *(_QWORD *)(v22 + 16);
  if (!v24)
  {
LABEL_31:
    *(_QWORD *)(v0 + 384) = v23;
    v70 = *(_QWORD *)(v0 + 312);
    v71 = *(_QWORD *)(v70 + 16);
    v72 = *(_QWORD *)(v71 + 16);
    v73 = _swiftEmptyArrayStorage;
    if (v72)
    {
      v74 = *(_QWORD *)(v0 + 224);
      v75 = *(_QWORD *)(v0 + 184);
      v76 = *(_QWORD *)(v0 + 160);
      v164 = *(_QWORD *)(v0 + 152);
      v168 = *(_QWORD *)(v0 + 216);
      v174[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v71);
      sub_100600724(0, v72, 0);
      v77 = v71 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      v160 = *(_QWORD *)(v76 + 72);
      do
      {
        v78 = *(_QWORD *)(v0 + 272);
        v79 = *(_QWORD *)(v0 + 208);
        v80 = *(_QWORD *)(v0 + 168);
        sub_1004B8460(v77, v80, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
        sub_1004CB7BC(v80 + *(int *)(v164 + 20), v78, (uint64_t *)&unk_1013E16F0);
        v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v78, 1, v79);
        v82 = *(_QWORD *)(v0 + 272);
        v83 = *(_QWORD **)(v0 + 224);
        if ((_DWORD)v81 == 1)
        {
          *v83 = 0;
          *(_QWORD *)(v74 + 8) = 0xC000000000000000;
          UnknownStorage.init()(v81);
          sub_1004CB800(v82, (uint64_t *)&unk_1013E16F0);
        }
        else
        {
          sub_1004B84E0(*(_QWORD *)(v0 + 272), (uint64_t)v83, type metadata accessor for CRLProto_Data);
        }
        v84 = *(uint64_t **)(v0 + 224);
        v85 = *v84;
        v86 = *(_QWORD *)(v74 + 8);
        sub_1004BE310(*v84, v86);
        sub_1004B84A4((uint64_t)v84, type metadata accessor for CRLProto_Data);
        UUID.init(crl_data:)(v85, v86);
        sub_1004B84A4(*(_QWORD *)(v0 + 168), type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
        v73 = (double *)v174[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100600724(0, *((_QWORD *)v73 + 2) + 1, 1);
          v73 = (double *)v174[0];
        }
        v88 = *((_QWORD *)v73 + 2);
        v87 = *((_QWORD *)v73 + 3);
        if (v88 >= v87 >> 1)
        {
          sub_100600724(v87 > 1, v88 + 1, 1);
          v73 = (double *)v174[0];
        }
        v89 = *(_QWORD *)(v0 + 192);
        v90 = *(_QWORD *)(v0 + 176);
        *((_QWORD *)v73 + 2) = v88 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 32))((unint64_t)v73+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(_QWORD *)(v75 + 72) * v88, v89, v90);
        v174[0] = v73;
        v77 += v160;
        --v72;
      }
      while (v72);
      swift_bridgeObjectRelease();
      v70 = *(_QWORD *)(v0 + 312);
    }
    *(_QWORD *)(v0 + 392) = v73;
    v91 = *(_QWORD *)(v70 + 32);
    *(_QWORD *)(v0 + 400) = v91;
    v92 = *(_QWORD *)(v91 + 16);
    v93 = sub_100D4EA5C();
    v172 = Dictionary.init(minimumCapacity:)(v92, &type metadata for CRLSerializableObjectDataRepresentation.DataDictionaryKey, &type metadata for Data, v93);
    v94 = *(_QWORD *)(v91 + 16);
    *(_QWORD *)(v0 + 408) = v94;
    if (v94)
    {
      v95 = *(_QWORD *)(v0 + 136);
      v96 = *(_DWORD *)(v95 + 80);
      *(_DWORD *)(v0 + 472) = v96;
      v97 = *(_QWORD *)(v95 + 72);
      *(_QWORD *)(v0 + 416) = v97;
      swift_bridgeObjectRetain(v91);
      v98 = 0;
      while (1)
      {
        *(_QWORD *)(v0 + 424) = v172;
        *(_QWORD *)(v0 + 432) = v98;
        v99 = *(uint64_t **)(v0 + 144);
        sub_1004B8460(*(_QWORD *)(v0 + 400) + ((v96 + 32) & ~(unint64_t)v96) + v97 * v98, (uint64_t)v99, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        v100 = *v99;
        v101 = (void *)v99[1];
        swift_bridgeObjectRetain(v101);
        v102._countAndFlagsBits = v100;
        v102._object = v101;
        v103 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012647B8, v102);
        swift_bridgeObjectRelease();
        if (v103 < 5)
          break;
        if (qword_1013DD708 != -1)
          swift_once(&qword_1013DD708, sub_100A018C8);
        swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 88, 0, 0);
        v104 = (void *)static OS_os_log.crlSerializableObject;
        v105 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v105, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v100;
        *(_QWORD *)(inited + 40) = v101;
        swift_bridgeObjectRetain(v101);
        v107 = v104;
        v109 = static os_log_type_t.default.getter(v108);
        sub_100A06EBC((uint64_t)v107, &_mh_execute_header, v109, "Skipping unknown entry type for the data dictionary of an object data representation. entryName=%@", 98, 2, inited);
        swift_setDeallocating(inited);
        v110 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v110);

        v111 = *(_QWORD *)(v0 + 408);
        v112 = *(_QWORD *)(v0 + 432) + 1;
        sub_1004B84A4(*(_QWORD *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        if (v112 == v111)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
        v98 = *(_QWORD *)(v0 + 432) + 1;
        v97 = *(_QWORD *)(v0 + 416);
        LOBYTE(v96) = *(_BYTE *)(v0 + 472);
      }
      *(_BYTE *)(v0 + 476) = v103;
      v113 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 16);
      if (v113 < 0)
        goto LABEL_63;
      v114 = *(_QWORD *)(v0 + 128);
      v115 = *(_QWORD *)(v114 + 24);
      if (!__OFADD__(v115, v113))
      {
        *(_QWORD *)(v114 + 24) = v115 + v113;
        ObjectType = swift_getObjectType(*(_QWORD *)(v114 + 16));
        v117 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
        *(_QWORD *)(v0 + 440) = v117;
        *v117 = v0;
        v117[1] = sub_100D4E1B0;
        sub_100696FF8(v115, v113, 1, ObjectType);
        return;
      }
      goto LABEL_64;
    }
LABEL_53:
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 8));
    v119 = sub_100D6B6D0(v118);
    v120 = *(_QWORD *)(v0 + 392);
    v121 = *(_QWORD *)(v0 + 360);
    v122 = *(_QWORD *)(v0 + 368);
    v123 = *(_QWORD *)(v0 + 328);
    v124 = *(_QWORD *)(v0 + 336);
    v125 = *(_QWORD **)(v0 + 312);
    if ((v126 & 1) == 0)
    {
      v143 = *(_QWORD *)(v0 + 296);
      v144 = *(_QWORD *)(v0 + 288);
      v145 = *(_QWORD *)(v0 + 280);
      v147 = *(_QWORD *)(v0 + 272);
      v148 = *(_QWORD *)(v0 + 264);
      v149 = *(_QWORD *)(v0 + 256);
      v150 = *(_QWORD *)(v0 + 232);
      v152 = *(_QWORD *)(v0 + 224);
      v154 = *(_QWORD *)(v0 + 200);
      v156 = *(_QWORD *)(v0 + 192);
      v158 = *(_QWORD *)(v0 + 168);
      v165 = *(_QWORD *)(v0 + 144);
      v142 = *(_QWORD *)(v0 + 128);
      v173 = *(_QWORD *)(v0 + 384);
      v127 = *(uint64_t **)(v0 + 120);
      v169 = v119;
      swift_bridgeObjectRetain(v125[6]);
      v129 = sub_100D6B6D0(v128);
      v161 = v120;
      v131 = v130;
      swift_bridgeObjectRetain(v125[7]);
      v133 = sub_100D6B6D0(v132);
      v134 = 0x1000000000000;
      if ((v135 & 1) == 0)
        v134 = v133;
      v146 = v134;
      sub_1004BBBC8(v121, v122);
      sub_1004BBBC8(v123, v124);
      swift_release(v142);
      if ((v131 & 1) != 0)
        v129 = 0x2000400000000;
      v136 = v125[5];
      v137 = *(unsigned int *)v125;
      sub_1004B84A4((uint64_t)v125, type metadata accessor for CRLProto_ObjectInfo);
      swift_task_dealloc(v125);
      swift_task_dealloc(v143);
      swift_task_dealloc(v144);
      swift_task_dealloc(v145);
      swift_task_dealloc(v147);
      swift_task_dealloc(v148);
      swift_task_dealloc(v149);
      swift_task_dealloc(v150);
      swift_task_dealloc(v152);
      swift_task_dealloc(v154);
      swift_task_dealloc(v156);
      swift_task_dealloc(v158);
      swift_task_dealloc(v165);
      *v127 = v169;
      v127[1] = v129;
      v127[2] = v146;
      v127[3] = v136;
      v127[4] = v137;
      v127[5] = v172;
      v127[6] = v173;
      v127[7] = v161;
      v21 = *(void (**)(void))(v0 + 8);
      goto LABEL_4;
    }
    v138 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v139 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v139, 0, 0);
    *v140 = 11;
    swift_willThrow(v141);
    sub_1004BBBC8(v123, v124);
    swift_release(v138);
    sub_1004BBBC8(v121, v122);
    sub_1004B84A4((uint64_t)v125, type metadata accessor for CRLProto_ObjectInfo);
    swift_bridgeObjectRelease();
LABEL_3:
    v13 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 224);
    v18 = *(_QWORD *)(v0 + 232);
    v20 = *(_QWORD *)(v0 + 200);
    v162 = *(_QWORD *)(v0 + 192);
    v166 = *(_QWORD *)(v0 + 168);
    v170 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v162);
    swift_task_dealloc(v166);
    swift_task_dealloc(v170);
    v21 = *(void (**)(void))(v0 + 8);
LABEL_4:
    v21();
    return;
  }
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 232);
  v167 = *(_QWORD *)(v0 + 216);
  v151 = *(_QWORD *)(v0 + 184);
  v163 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  v27 = *(_QWORD *)(v163 - 8);
  v28 = (uint64_t *)(v22 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)));
  v157 = *(_QWORD *)(v27 + 72);
  swift_bridgeObjectRetain(v22);
  v159 = v25;
  v153 = v26;
  while (1)
  {
    v32 = *(_QWORD *)(v0 + 288);
    v33 = *(_QWORD *)(v0 + 208);
    v34 = (uint64_t)v28 + *(int *)(v163 + 24);
    sub_1004CB7BC(v34, v32, (uint64_t *)&unk_1013E16F0);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
    v36 = v35(v32, 1, v33);
    sub_1004CB800(v32, (uint64_t *)&unk_1013E16F0);
    v37 = *v28;
    v38 = v28[1];
    if (v36 == 1)
    {
      swift_bridgeObjectRetain(v28[1]);
      swift_bridgeObjectRetain(v23);
      v39 = sub_100842E98(v37, v38);
      v41 = v40;
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v174[0] = v23;
        v30 = v159;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_10082D260();
          v23 = (_QWORD *)v174[0];
        }
        v43 = *(_QWORD *)(v0 + 200);
        swift_bridgeObjectRelease();
        sub_1008C89B0(v23[7] + *(_QWORD *)(v159 + 72) * v39, v43);
        sub_10051E3A0(v39, (uint64_t)v23);
        swift_bridgeObjectRelease();
        v29 = 0;
      }
      else
      {
        v29 = 1;
        v30 = v159;
      }
      v31 = *(_QWORD *)(v0 + 200);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v30 + 56))(v31, v29, 1, *(_QWORD *)(v0 + 240));
      swift_bridgeObjectRelease();
      sub_1004CB800(v31, &qword_1014053E0);
      goto LABEL_9;
    }
    v155 = *v28;
    v171 = v23;
    v44 = *(_QWORD *)(v0 + 280);
    v45 = *(_QWORD *)(v0 + 208);
    sub_1004CB7BC(v34, v44, (uint64_t *)&unk_1013E16F0);
    v46 = v35(v44, 1, v45);
    v47 = *(_QWORD *)(v0 + 280);
    v48 = *(_QWORD **)(v0 + 232);
    if (v46 == 1)
    {
      *v48 = 0;
      v49 = v153;
      *(_QWORD *)(v153 + 8) = 0xC000000000000000;
      swift_bridgeObjectRetain(v38);
      UnknownStorage.init()(v50);
      sub_1004CB800(v47, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(*(_QWORD *)(v0 + 280), (uint64_t)v48, type metadata accessor for CRLProto_Data);
      swift_bridgeObjectRetain(v38);
      v49 = v153;
    }
    v51 = *(uint64_t **)(v0 + 232);
    v52 = *v51;
    v53 = *(_QWORD *)(v49 + 8);
    sub_1004BE310(*v51, v53);
    sub_1004B84A4((uint64_t)v51, type metadata accessor for CRLProto_Data);
    UUID.init(crl_data:)(v52, v53);
    v55 = *(_QWORD *)(v0 + 256);
    v54 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v151 + 56))(v54, 0, 1, *(_QWORD *)(v0 + 176));
    sub_1008C89B0(v54, v55);
    v23 = v171;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v174[0] = v171;
    v58 = sub_100842E98(v155, v38);
    v59 = v171[2];
    v60 = (v57 & 1) == 0;
    v61 = v59 + v60;
    if (__OFADD__(v59, v60))
      break;
    v62 = v57;
    if (v171[3] >= v61)
    {
      if ((v56 & 1) != 0)
      {
        v65 = *(_QWORD *)(v0 + 256);
        if ((v57 & 1) == 0)
          goto LABEL_27;
      }
      else
      {
        sub_10082D260();
        v23 = (_QWORD *)v174[0];
        v65 = *(_QWORD *)(v0 + 256);
        if ((v62 & 1) == 0)
          goto LABEL_27;
      }
    }
    else
    {
      sub_10081633C(v61, v56);
      v23 = (_QWORD *)v174[0];
      v63 = sub_100842E98(v155, v38);
      if ((v62 & 1) != (v64 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v58 = v63;
      v65 = *(_QWORD *)(v0 + 256);
      if ((v62 & 1) == 0)
      {
LABEL_27:
        v23[(v58 >> 6) + 8] |= 1 << v58;
        v66 = (uint64_t *)(v23[6] + 16 * v58);
        *v66 = v155;
        v66[1] = v38;
        sub_1008C89B0(v65, v23[7] + *(_QWORD *)(v159 + 72) * v58);
        v67 = v23[2];
        v68 = __OFADD__(v67, 1);
        v69 = v67 + 1;
        if (v68)
          goto LABEL_62;
        v23[2] = v69;
        swift_bridgeObjectRetain(v38);
        goto LABEL_29;
      }
    }
    sub_1005E388C(v65, v23[7] + *(_QWORD *)(v159 + 72) * v58);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    v28 = (uint64_t *)((char *)v28 + v157);
    if (!--v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

uint64_t sub_100D4E0BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 128));
  sub_1004BBBC8(v1, v2);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D4E1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 440);
  v4[56] = a1;
  v4[57] = a2;
  v4[58] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_100D4E220;
  else
    v6 = sub_100D4E37C;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100D4E220()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004BBBC8(v4, v3);
  swift_release(v7);
  sub_1004BBBC8(v2, v1);
  sub_1004B84A4(v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  sub_1004B84A4(v5, type metadata accessor for CRLProto_ObjectInfo);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 264);
  v15 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100D4E37C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t *v49;
  void *v50;
  uint64_t v51;
  Swift::String v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t inited;
  id v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_BYTE *)(v0 + 476);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 112) = v1;
  sub_10084342C(v2);
  v6 = v5;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (v4 & 1) == 0;
  v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
    __break(1u);
    goto LABEL_31;
  }
  v10 = v4;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 424) + 24) >= v9)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_10082EC48();
  }
  else
  {
    v11 = *(_BYTE *)(v0 + 476);
    sub_1008194D4(v9, isUniquelyReferenced_nonNull_native);
    sub_10084342C(v11);
    if ((v10 & 1) != (v13 & 1))
    {
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLSerializableObjectDataRepresentation.DataDictionaryKey);
      return;
    }
    v6 = v12;
  }
  v14 = *(_QWORD **)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 448);
  v15 = *(_QWORD *)(v0 + 456);
  if ((v10 & 1) != 0)
  {
    v17 = v14[7] + 16 * v6;
    sub_1004BBBC8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8));
    *(_QWORD *)v17 = v16;
    *(_QWORD *)(v17 + 8) = v15;
    goto LABEL_12;
  }
  v18 = *(_BYTE *)(v0 + 476);
  v14[(v6 >> 6) + 8] |= 1 << v6;
  *(_BYTE *)(v14[6] + v6) = v18;
  v19 = (_QWORD *)(v14[7] + 16 * v6);
  *v19 = v16;
  v19[1] = v15;
  v20 = v14[2];
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v14[2] = v22;
LABEL_12:
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 432) + 1;
  sub_1004B84A4(*(_QWORD *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  if (v24 != v23)
  {
    while (1)
    {
      v48 = *(_QWORD *)(v0 + 432) + 1;
      *(_QWORD *)(v0 + 424) = v14;
      *(_QWORD *)(v0 + 432) = v48;
      v49 = *(uint64_t **)(v0 + 144);
      sub_1004B8460(*(_QWORD *)(v0 + 400)+ ((*(unsigned __int8 *)(v0 + 472) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 472))+ *(_QWORD *)(v0 + 416) * v48, (uint64_t)v49, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v51 = *v49;
      v50 = (void *)v49[1];
      swift_bridgeObjectRetain(v50);
      v52._countAndFlagsBits = v51;
      v52._object = v50;
      v53 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012647B8, v52);
      swift_bridgeObjectRelease();
      if (v53 < 5)
        break;
      if (qword_1013DD708 != -1)
        swift_once(&qword_1013DD708, sub_100A018C8);
      swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 88, 0, 0);
      v54 = (void *)static OS_os_log.crlSerializableObject;
      v55 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v55, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v51;
      *(_QWORD *)(inited + 40) = v50;
      swift_bridgeObjectRetain(v50);
      v57 = v54;
      v59 = static os_log_type_t.default.getter(v58);
      sub_100A06EBC((uint64_t)v57, &_mh_execute_header, v59, "Skipping unknown entry type for the data dictionary of an object data representation. entryName=%@", 98, 2, inited);
      swift_setDeallocating(inited);
      v60 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v60);

      v61 = *(_QWORD *)(v0 + 408);
      v62 = *(_QWORD *)(v0 + 432) + 1;
      sub_1004B84A4(*(_QWORD *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      if (v62 == v61)
        goto LABEL_13;
    }
    *(_BYTE *)(v0 + 476) = v53;
    v76 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 16);
    if ((v76 & 0x8000000000000000) == 0)
    {
      v77 = *(_QWORD *)(v0 + 128);
      v78 = *(_QWORD *)(v77 + 24);
      if (!__OFADD__(v78, v76))
      {
        *(_QWORD *)(v77 + 24) = v78 + v76;
        ObjectType = swift_getObjectType(*(_QWORD *)(v77 + 16));
        v80 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
        *(_QWORD *)(v0 + 440) = v80;
        *v80 = v0;
        v80[1] = sub_100D4E1B0;
        sub_100696FF8(v78, v76, 1, ObjectType);
        return;
      }
      goto LABEL_33;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
LABEL_13:
  v96 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 8));
  v26 = sub_100D6B6D0(v25);
  v27 = *(_QWORD *)(v0 + 384);
  v28 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 360);
  v30 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD **)(v0 + 312);
  if ((v34 & 1) != 0)
  {
    v63 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v64, 0, 0);
    *v65 = 11;
    swift_willThrow(v66);
    sub_1004BBBC8(v31, v32);
    swift_release(v63);
    sub_1004BBBC8(v29, v30);
    sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLProto_ObjectInfo);
    swift_bridgeObjectRelease();
    v68 = *(_QWORD *)(v0 + 288);
    v67 = *(_QWORD *)(v0 + 296);
    v70 = *(_QWORD *)(v0 + 272);
    v69 = *(_QWORD *)(v0 + 280);
    v72 = *(_QWORD *)(v0 + 256);
    v71 = *(_QWORD *)(v0 + 264);
    v74 = *(_QWORD *)(v0 + 224);
    v73 = *(_QWORD *)(v0 + 232);
    v75 = *(_QWORD *)(v0 + 200);
    v95 = *(_QWORD *)(v0 + 192);
    v97 = *(_QWORD *)(v0 + 168);
    v99 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v95);
    swift_task_dealloc(v97);
    swift_task_dealloc(v99);
    v47 = *(void (**)(void))(v0 + 8);
  }
  else
  {
    v82 = *(_QWORD *)(v0 + 296);
    v83 = *(_QWORD *)(v0 + 288);
    v84 = *(_QWORD *)(v0 + 280);
    v86 = *(_QWORD *)(v0 + 272);
    v87 = *(_QWORD *)(v0 + 264);
    v88 = *(_QWORD *)(v0 + 256);
    v89 = *(_QWORD *)(v0 + 232);
    v90 = *(_QWORD *)(v0 + 224);
    v91 = *(_QWORD *)(v0 + 200);
    v92 = *(_QWORD *)(v0 + 192);
    v93 = *(_QWORD *)(v0 + 168);
    v98 = *(_QWORD *)(v0 + 144);
    v35 = *(uint64_t **)(v0 + 120);
    v81 = *(_QWORD *)(v0 + 128);
    v100 = v26;
    swift_bridgeObjectRetain(v33[6]);
    v37 = sub_100D6B6D0(v36);
    v94 = v28;
    v39 = v38;
    swift_bridgeObjectRetain(v33[7]);
    v41 = sub_100D6B6D0(v40);
    v42 = 0x1000000000000;
    if ((v43 & 1) == 0)
      v42 = v41;
    v85 = v42;
    sub_1004BBBC8(v29, v30);
    sub_1004BBBC8(v31, v32);
    swift_release(v81);
    if ((v39 & 1) != 0)
      v44 = 0x2000400000000;
    else
      v44 = v37;
    v45 = v33[5];
    v46 = *(unsigned int *)v33;
    sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLProto_ObjectInfo);
    swift_task_dealloc(v33);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v98);
    *v35 = v100;
    v35[1] = v44;
    v35[2] = v85;
    v35[3] = v45;
    v35[4] = v46;
    v35[5] = (uint64_t)v96;
    v35[6] = v27;
    v35[7] = v94;
    v47 = *(void (**)(void))(v0 + 8);
  }
  v47();
}

uint64_t sub_100D4EA08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D4EA34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100D4EA44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D4EA54(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100D4EA5C()
{
  unint64_t result;

  result = qword_101410048;
  if (!qword_101410048)
  {
    result = swift_getWitnessTable(&unk_100F38D54, &type metadata for CRLSerializableObjectDataRepresentation.DataDictionaryKey);
    atomic_store(result, (unint64_t *)&qword_101410048);
  }
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsFastSyncSessionInvalidation()
{
  return objc_opt_self(_TtC8Freeform39CRLAnalyticsFastSyncSessionInvalidation);
}

void sub_100D4EAC0()
{
  unint64_t v0;
  NSString v1;
  char isUniquelyReferenced_nonNull_native;
  void *v3;
  NSString v4;
  Class isa;

  v0 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v1 = String._bridgeToObjectiveC()();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v0);
  sub_100826868((uint64_t)v1, 0xD000000000000019, 0x800000010100E7F0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v4 = String._bridgeToObjectiveC()();
  sub_100511A70();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "sendEventInDomain:lazily:eventPayload:", v4, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_100D4EBD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  uint64_t v40;
  _QWORD v41[3];
  char v42[24];
  char v43[24];
  char v44[24];
  char v45[32];

  v1 = v0;
  v2 = v0[8];
  if (v2)
  {
    v3 = *(void **)(*(_QWORD *)(v2 + 16) + 16);
    swift_beginAccess(v0 + 2, v45, 0, 0);
    v4 = v0[2];
    v5 = v3;
    swift_bridgeObjectRetain(v4);
    v6 = sub_100618858(v5, v4);
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_beginAccess(v1 + 6, v39, 0, 0);
      v7 = v1[6];
      swift_bridgeObjectRetain(v7);
      v8 = sub_10062219C(v5, v7);
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
      {

        swift_release(v6);
      }
      else
      {
        v9 = sub_100C75698();
        swift_release(v6);

        if (v9)
        {
LABEL_7:
          v10 = v1[8];
          v1[8] = v9;
          swift_retain(v9);
LABEL_58:
          swift_release(v10);
          return;
        }
      }
    }
    else
    {

    }
  }
  v11 = v1 + 3;
  v12 = v1 + 2;
  v13 = v1 + 6;
  swift_beginAccess(v1 + 3, v44, 0, 0);
  swift_beginAccess(v1 + 2, v43, 0, 0);
  swift_beginAccess(v1 + 6, v42, 0, 0);
  while (1)
  {
    v14 = *v11;
    if ((unint64_t)*v11 >> 62)
    {
      if (v14 < 0)
        v31 = *v11;
      else
        v31 = v14 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v11);
      v32 = _CocoaArrayWrapper.endIndex.getter(v31);
      swift_bridgeObjectRelease();
      if (!v32)
        goto LABEL_57;
    }
    else if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_57;
    }
    swift_beginAccess(v1 + 3, v41, 33, 0);
    v15 = *v11;
    if ((unint64_t)*v11 >> 62)
      break;
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_59;
LABEL_15:
    v16 = *v11;
    if ((unint64_t)*v11 >> 62)
    {
      if (v16 < 0)
        v35 = *v11;
      else
        v35 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v11);
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease();
      if (!v36)
        goto LABEL_60;
    }
    else if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_60;
    }
    if ((v16 & 0xC000000000000001) != 0)
    {
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    }
    else
    {
      if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_61;
      v17 = *(id *)(v16 + 32);
    }
    v18 = v17;
    v19 = *v11;
    if ((unint64_t)*v11 >> 62)
    {
      if (v19 < 0)
        v37 = *v11;
      else
        v37 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v11);
      v38 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (!v38)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        v10 = v1[8];
        v1[8] = 0;
        goto LABEL_58;
      }
    }
    else if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_56;
    }
    sub_100CFF710(0, 1);
    swift_endAccess(v41);
    v20 = *v12;
    if ((*v12 & 0xC000000000000001) != 0)
    {
      if (v20 < 0)
        v21 = *v12;
      else
        v21 = v20 & 0xFFFFFFFFFFFFFF8;
      v22 = v18;
      swift_bridgeObjectRetain(v20);
      v23 = __CocoaDictionary.lookup(_:)(v22, v21);
      if (!v23)
      {
LABEL_9:

        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      v24 = v23;
      v40 = v23;
      v25 = type metadata accessor for CRLSyncRecordGroup();
      swift_unknownObjectRetain(v24);
      swift_dynamicCast(v41, &v40, (char *)&type metadata for Swift.AnyObject + 8, v25, 7);
      v26 = v41[0];
      swift_unknownObjectRelease(v24);
    }
    else
    {
      if (!*(_QWORD *)(v20 + 16))
        goto LABEL_10;
      v22 = v18;
      swift_bridgeObjectRetain(v20);
      v27 = sub_100843894((uint64_t)v22);
      if ((v28 & 1) == 0)
        goto LABEL_9;
      v26 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v27);
      swift_retain(v26);
    }

    swift_bridgeObjectRelease();
    if (v26)
    {
      v29 = *v13;
      swift_bridgeObjectRetain(*v13);
      v30 = sub_10062219C(v18, v29);
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {

        swift_release(v26);
      }
      else
      {
        v9 = sub_100C75698();
        swift_release(v26);

        if (v9)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_10:

    }
  }
  if (v15 < 0)
    v33 = *v11;
  else
    v33 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v11);
  v34 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease();
  if (v34)
    goto LABEL_15;
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t sub_100D4F020()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for CRLSyncControllerSaveTask()
{
  return objc_opt_self(_TtC8Freeform25CRLSyncControllerSaveTask);
}

uint64_t sub_100D4F084(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  Swift::Int v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  id v15;
  uint64_t isUniquelyReferenced_nonNull_native;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _BYTE v43[24];

  v2 = a1;
  *(_QWORD *)(v1 + 16) = _swiftEmptyDictionarySingleton;
  v3 = (Swift::Int *)(v1 + 16);
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  v4 = (_QWORD *)(v1 + 24);
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v1 + 48) = &_swiftEmptySetSingleton;
  *(_WORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  if (a1 >> 62)
  {
LABEL_33:
    if (v2 < 0)
      v35 = v2;
    else
      v35 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
    return v38;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return v38;
LABEL_3:
  v40 = v2;
  v41 = v2 & 0xC000000000000001;
  v6 = 4;
  v39 = v5;
  while (1)
  {
    v7 = v6 - 4;
    if (v41)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v2);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_29;
    }
    else
    {
      v8 = *(_QWORD *)(v2 + 8 * v6);
      swift_retain(v8);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    v10 = *(void **)(v8 + 16);
    swift_beginAccess(v3, v43, 33, 0);
    v11 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v12 = v10;
      v13 = swift_retain(v8);
      v14 = __CocoaDictionary.count.getter(v11, v13);
      if (__OFADD__(v14, 1))
        goto LABEL_31;
      v11 = sub_100897CB8(v11, v14 + 1);
      *v3 = v11;
    }
    else
    {
      v15 = v10;
      swift_retain(v8);
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v17 = *v3;
    v42 = (_QWORD *)*v3;
    *v3 = 0x8000000000000000;
    v19 = sub_100843894((uint64_t)v10);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      goto LABEL_30;
    v2 = v18;
    if (*(_QWORD *)(v17 + 24) < v22)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1008312B4();
LABEL_21:
    if ((v2 & 1) != 0)
    {
      v25 = v42[7];
      swift_release(*(_QWORD *)(v25 + 8 * v19));
      *(_QWORD *)(v25 + 8 * v19) = v8;
    }
    else
    {
      v42[(v19 >> 6) + 8] |= 1 << v19;
      *(_QWORD *)(v42[6] + 8 * v19) = v10;
      *(_QWORD *)(v42[7] + 8 * v19) = v8;
      v26 = v42[2];
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        goto LABEL_32;
      v42[2] = v28;
      v29 = v10;
    }
    *v3 = (Swift::Int)v42;

    swift_bridgeObjectRelease();
    swift_endAccess(v43);
    v30 = *(void **)(v8 + 16);
    swift_beginAccess(v4, v43, 33, 0);
    v31 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v2 = v40;
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);
    swift_endAccess(v43);
    swift_release(v8);
    ++v6;
    if (v9 == v39)
      return v38;
  }
  sub_10081E674(v22, isUniquelyReferenced_nonNull_native);
  v23 = sub_100843894((uint64_t)v10);
  if ((v2 & 1) == (v24 & 1))
  {
    v19 = v23;
    goto LABEL_21;
  }
  v37 = sub_100D4F3BC();
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v37);
  __break(1u);
  return result;
}

unint64_t sub_100D4F3BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1770;
  if (!qword_1013E1770)
  {
    v1 = objc_opt_self(CKRecordZoneID);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E1770);
  }
  return result;
}

double destroy for CRLWPStickyNotePresetData(uint64_t a1)
{
  int v2;
  double result;

  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 144))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 200))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 328))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 424))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 520))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 576))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 616);
  if (v2 != 255)
    sub_1004C4230(*(_QWORD *)(a1 + 600), *(_QWORD *)(a1 + 608), v2 & 1);
  if (*(_QWORD *)(a1 + 760))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLWPStickyNotePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _DWORD *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = *(_QWORD *)(a2 + 96);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    v9 = (_OWORD *)(a2 + 144);
    v8 = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v4);
    if (v8)
    {
      *(_QWORD *)(a1 + 144) = v8;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      v10 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 160) = v10;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v10);
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v9;
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    }
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v18 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 184) = v18;
    v19 = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain(v18);
    if (v19)
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v19;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
      v20 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v20;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v21;
    }
    v22 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 224) = v22;
    swift_bridgeObjectRetain(v22);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v11;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
  }
  v23 = (_QWORD *)(a1 + 232);
  v24 = (_QWORD *)(a2 + 232);
  v25 = *(_QWORD *)(a2 + 328);
  if (v25)
  {
    *v23 = *v24;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    v26 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 280) = v26;
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    v27 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v27;
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    v28 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 320) = v28;
    *(_QWORD *)(a1 + 328) = v25;
    v29 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 336) = v29;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v29);
  }
  else
  {
    v30 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v30;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    v31 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(a1 + 248) = v31;
    v32 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v32;
  }
  v33 = (_DWORD *)(a1 + 344);
  v34 = (_DWORD *)(a2 + 344);
  v35 = *(_QWORD *)(a2 + 424);
  if (v35)
  {
    *v33 = *v34;
    *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    v36 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 376) = v36;
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    v37 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 400) = v37;
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    v38 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 416) = v38;
    *(_QWORD *)(a1 + 424) = v35;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    v39 = *(_QWORD *)(a2 + 456);
    v40 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = v39;
    *(_QWORD *)(a1 + 464) = v40;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
  }
  else
  {
    v41 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v41;
    v42 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v42;
    v43 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_OWORD *)(a1 + 360) = v43;
    v44 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v44;
  }
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  v45 = *(_QWORD *)(a2 + 520);
  if (v45)
  {
    v46 = *(_QWORD *)(a2 + 480);
    v47 = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = v46;
    *(_QWORD *)(a1 + 488) = v47;
    *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
    *(_QWORD *)(a1 + 500) = *(_QWORD *)(a2 + 500);
    *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = v45;
    v48 = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 528) = v48;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRetain(v48);
    v49 = *(_QWORD *)(a2 + 576);
    if (v49)
    {
LABEL_18:
      v50 = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 536) = v50;
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_QWORD *)(a1 + 556) = *(_QWORD *)(a2 + 556);
      *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = v49;
      v51 = *(_QWORD *)(a2 + 584);
      *(_QWORD *)(a1 + 584) = v51;
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRetain(v51);
      goto LABEL_21;
    }
  }
  else
  {
    v52 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v52;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    v49 = *(_QWORD *)(a2 + 576);
    if (v49)
      goto LABEL_18;
  }
  v53 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v53;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
LABEL_21:
  v54 = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 592) = v54;
  v55 = *(unsigned __int8 *)(a2 + 616);
  swift_bridgeObjectRetain(v54);
  if (v55 == 255)
  {
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  }
  else
  {
    v56 = v55 & 1;
    v57 = *(_QWORD *)(a2 + 600);
    v58 = *(_QWORD *)(a2 + 608);
    sub_1004C4914(v57, v58, v56);
    *(_QWORD *)(a1 + 600) = v57;
    *(_QWORD *)(a1 + 608) = v58;
    *(_BYTE *)(a1 + 616) = v56;
  }
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  v59 = (_QWORD *)(a1 + 664);
  v60 = (_QWORD *)(a2 + 664);
  v61 = *(_QWORD *)(a2 + 760);
  if (v61)
  {
    *v59 = *v60;
    *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
    *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
    *(_BYTE *)(a1 + 684) = *(_BYTE *)(a2 + 684);
    *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
    *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
    *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
    *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
    v62 = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 712) = v62;
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    v63 = *(_QWORD *)(a2 + 736);
    *(_QWORD *)(a1 + 736) = v63;
    *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
    v64 = *(_QWORD *)(a2 + 752);
    *(_QWORD *)(a1 + 752) = v64;
    *(_QWORD *)(a1 + 760) = v61;
    v65 = *(_QWORD *)(a2 + 768);
    *(_QWORD *)(a1 + 768) = v65;
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v63);
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v65);
  }
  else
  {
    v66 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v66;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    v67 = *(_OWORD *)(a2 + 680);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_OWORD *)(a1 + 680) = v67;
    v68 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v68;
  }
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  v69 = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 840) = v69;
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  v70 = *(_QWORD *)(a2 + 872);
  *(_QWORD *)(a1 + 872) = v70;
  v71 = *(_QWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 880) = v71;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v71);
  return a1;
}

uint64_t assignWithCopy for CRLWPStickyNotePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _DWORD *v101;
  int *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  _OWORD *v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 *v167;
  __int128 *v168;
  int v169;
  char v170;
  __int128 v171;
  char v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  char v178;
  uint64_t v179;
  unint64_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;

  v4 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v4)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      v6 = a2[3];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      v7 = a2[6];
      *(_QWORD *)(a1 + 48) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      v8 = a2[9];
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      v9 = a2[11];
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease();
      v10 = a2[12];
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease();
      v11 = (_OWORD *)(a1 + 144);
      v12 = *(_QWORD *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      v13 = a2[14];
      *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
      *(_QWORD *)(a1 + 112) = v13;
      v14 = a2[16];
      *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
      *(_QWORD *)(a1 + 128) = v14;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      v16 = a2 + 18;
      v15 = a2[18];
      if (v12)
      {
        if (v15)
        {
          *(_QWORD *)(a1 + 144) = v15;
          swift_bridgeObjectRetain(v15);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          v17 = a2[20];
          *(_QWORD *)(a1 + 160) = v17;
          swift_bridgeObjectRetain(v17);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BAD90((_QWORD *)(a1 + 144));
          v52 = a2[20];
          *v11 = *v16;
          *(_QWORD *)(a1 + 160) = v52;
        }
      }
      else if (v15)
      {
        *(_QWORD *)(a1 + 144) = v15;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        v40 = a2[20];
        *(_QWORD *)(a1 + 160) = v40;
        swift_bridgeObjectRetain(v15);
        swift_bridgeObjectRetain(v40);
      }
      else
      {
        v61 = *v16;
        *(_QWORD *)(a1 + 160) = a2[20];
        *v11 = v61;
      }
      v62 = a2[21];
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_QWORD *)(a1 + 168) = v62;
      v63 = a2[23];
      *(_QWORD *)(a1 + 184) = v63;
      swift_bridgeObjectRetain(v63);
      swift_bridgeObjectRelease();
      v64 = (_OWORD *)(a1 + 192);
      v65 = a2 + 24;
      v66 = a2[25];
      if (*(_QWORD *)(a1 + 200))
      {
        if (v66)
        {
          *(_QWORD *)(a1 + 192) = a2[24];
          v67 = a2[25];
          *(_QWORD *)(a1 + 200) = v67;
          swift_bridgeObjectRetain(v67);
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
          v68 = a2[27];
          *(_QWORD *)(a1 + 216) = v68;
          swift_bridgeObjectRetain(v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1008BADC0(a1 + 192);
          v71 = *((_OWORD *)a2 + 13);
          *v64 = *v65;
          *(_OWORD *)(a1 + 208) = v71;
        }
      }
      else if (v66)
      {
        *(_QWORD *)(a1 + 192) = a2[24];
        v69 = a2[25];
        *(_QWORD *)(a1 + 200) = v69;
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
        v70 = a2[27];
        *(_QWORD *)(a1 + 216) = v70;
        swift_bridgeObjectRetain(v69);
        swift_bridgeObjectRetain(v70);
      }
      else
      {
        v72 = *((_OWORD *)a2 + 13);
        *v64 = *v65;
        *(_OWORD *)(a1 + 208) = v72;
      }
      v73 = a2[28];
      *(_QWORD *)(a1 + 224) = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5B4((_QWORD *)a1);
      v30 = *((_OWORD *)a2 + 1);
      v29 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      *(_OWORD *)(a1 + 32) = v29;
      v31 = *((_OWORD *)a2 + 6);
      v33 = *((_OWORD *)a2 + 3);
      v32 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v31;
      *(_OWORD *)(a1 + 48) = v33;
      *(_OWORD *)(a1 + 64) = v32;
      v34 = *((_OWORD *)a2 + 10);
      v36 = *((_OWORD *)a2 + 7);
      v35 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v34;
      *(_OWORD *)(a1 + 112) = v36;
      *(_OWORD *)(a1 + 128) = v35;
      v38 = *((_OWORD *)a2 + 12);
      v37 = *((_OWORD *)a2 + 13);
      v39 = *((_OWORD *)a2 + 11);
      *(_QWORD *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v38;
      *(_OWORD *)(a1 + 208) = v37;
      *(_OWORD *)(a1 + 176) = v39;
    }
  }
  else if (v4)
  {
    v18 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = v18;
    LODWORD(v18) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v18;
    v19 = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_QWORD *)(a1 + 24) = v19;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    v20 = a2[6];
    *(_QWORD *)(a1 + 48) = v20;
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    v21 = a2[9];
    *(_QWORD *)(a1 + 72) = v21;
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v22 = a2[11];
    *(_QWORD *)(a1 + 88) = v22;
    v23 = a2[12];
    *(_QWORD *)(a1 + 96) = v23;
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    v24 = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = v24;
    v25 = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = v25;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    v27 = (__int128 *)(a2 + 18);
    v26 = a2[18];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    if (v26)
    {
      *(_QWORD *)(a1 + 144) = v26;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      v28 = a2[20];
      *(_QWORD *)(a1 + 160) = v28;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      v53 = *v27;
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v53;
    }
    v54 = a2[21];
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    *(_QWORD *)(a1 + 168) = v54;
    v55 = a2[23];
    *(_QWORD *)(a1 + 184) = v55;
    v56 = a2[25];
    swift_bridgeObjectRetain(v55);
    if (v56)
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      v57 = a2[25];
      *(_QWORD *)(a1 + 200) = v57;
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
      v58 = a2[27];
      *(_QWORD *)(a1 + 216) = v58;
      swift_bridgeObjectRetain(v57);
      swift_bridgeObjectRetain(v58);
    }
    else
    {
      v59 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v59;
    }
    v60 = a2[28];
    *(_QWORD *)(a1 + 224) = v60;
    swift_bridgeObjectRetain(v60);
  }
  else
  {
    v41 = *(_OWORD *)a2;
    v42 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v42;
    *(_OWORD *)a1 = v41;
    v43 = *((_OWORD *)a2 + 3);
    v44 = *((_OWORD *)a2 + 4);
    v45 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v45;
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)(a1 + 64) = v44;
    v46 = *((_OWORD *)a2 + 7);
    v47 = *((_OWORD *)a2 + 8);
    v48 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v48;
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 128) = v47;
    v49 = *((_OWORD *)a2 + 11);
    v50 = *((_OWORD *)a2 + 12);
    v51 = *((_OWORD *)a2 + 13);
    *(_QWORD *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v50;
    *(_OWORD *)(a1 + 208) = v51;
    *(_OWORD *)(a1 + 176) = v49;
  }
  v74 = (_QWORD *)(a1 + 232);
  v75 = a2 + 29;
  v76 = a2[41];
  if (*(_QWORD *)(a1 + 328))
  {
    if (v76)
    {
      v77 = *v75;
      *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
      *v74 = v77;
      LODWORD(v77) = *((_DWORD *)a2 + 62);
      *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v77;
      v78 = a2[32];
      *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
      *(_QWORD *)(a1 + 256) = v78;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      v79 = a2[35];
      *(_QWORD *)(a1 + 280) = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      v80 = a2[38];
      *(_QWORD *)(a1 + 304) = v80;
      swift_bridgeObjectRetain(v80);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      v81 = a2[40];
      *(_QWORD *)(a1 + 320) = v81;
      swift_bridgeObjectRetain(v81);
      swift_bridgeObjectRelease();
      v82 = a2[41];
      *(_QWORD *)(a1 + 328) = v82;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRelease();
      v83 = a2[42];
      *(_QWORD *)(a1 + 336) = v83;
      swift_bridgeObjectRetain(v83);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1007C50EC((_QWORD *)(a1 + 232));
      v92 = *(_OWORD *)(a2 + 31);
      v91 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *(_OWORD *)(a1 + 248) = v92;
      *(_OWORD *)(a1 + 264) = v91;
      v93 = *(_OWORD *)(a2 + 41);
      v95 = *(_OWORD *)(a2 + 35);
      v94 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v93;
      *(_OWORD *)(a1 + 280) = v95;
      *(_OWORD *)(a1 + 296) = v94;
    }
  }
  else if (v76)
  {
    v84 = *v75;
    *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
    *v74 = v84;
    LODWORD(v84) = *((_DWORD *)a2 + 62);
    *(_BYTE *)(a1 + 252) = *((_BYTE *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v84;
    v85 = a2[32];
    *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
    *(_QWORD *)(a1 + 256) = v85;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    v86 = a2[35];
    *(_QWORD *)(a1 + 280) = v86;
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    v87 = a2[38];
    *(_QWORD *)(a1 + 304) = v87;
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    v88 = a2[40];
    *(_QWORD *)(a1 + 320) = v88;
    v89 = a2[41];
    *(_QWORD *)(a1 + 328) = v89;
    v90 = a2[42];
    *(_QWORD *)(a1 + 336) = v90;
    swift_bridgeObjectRetain(v86);
    swift_bridgeObjectRetain(v87);
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
  }
  else
  {
    v96 = *(_OWORD *)v75;
    v97 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v97;
    *(_OWORD *)v74 = v96;
    v98 = *(_OWORD *)(a2 + 35);
    v99 = *(_OWORD *)(a2 + 37);
    v100 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v100;
    *(_OWORD *)(a1 + 280) = v98;
    *(_OWORD *)(a1 + 296) = v99;
  }
  v101 = (_DWORD *)(a1 + 344);
  v102 = (int *)(a2 + 43);
  v103 = a2[53];
  if (*(_QWORD *)(a1 + 424))
  {
    if (v103)
    {
      v104 = *v102;
      *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
      *v101 = v104;
      v105 = a2[44];
      *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
      *(_QWORD *)(a1 + 352) = v105;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      v106 = a2[47];
      *(_QWORD *)(a1 + 376) = v106;
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      v107 = a2[50];
      *(_QWORD *)(a1 + 400) = v107;
      swift_bridgeObjectRetain(v107);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      v108 = a2[52];
      *(_QWORD *)(a1 + 416) = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRelease();
      v109 = a2[53];
      *(_QWORD *)(a1 + 424) = v109;
      swift_bridgeObjectRetain(v109);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      v110 = a2[57];
      *(_QWORD *)(a1 + 456) = v110;
      swift_bridgeObjectRetain(v110);
      swift_bridgeObjectRelease();
      v111 = a2[58];
      *(_QWORD *)(a1 + 464) = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1009AF5E8((_QWORD *)(a1 + 344));
      v120 = *(_OWORD *)(a2 + 49);
      v122 = *(_OWORD *)v102;
      v121 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v120;
      *(_OWORD *)v101 = v122;
      *(_OWORD *)(a1 + 360) = v121;
      v123 = *(_OWORD *)(a2 + 57);
      v125 = *(_OWORD *)(a2 + 51);
      v124 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v123;
      *(_OWORD *)(a1 + 408) = v125;
      *(_OWORD *)(a1 + 424) = v124;
    }
  }
  else if (v103)
  {
    v112 = *v102;
    *(_BYTE *)(a1 + 348) = *((_BYTE *)a2 + 348);
    *v101 = v112;
    v113 = a2[44];
    *(_BYTE *)(a1 + 360) = *((_BYTE *)a2 + 360);
    *(_QWORD *)(a1 + 352) = v113;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    v114 = a2[47];
    *(_QWORD *)(a1 + 376) = v114;
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    v115 = a2[50];
    *(_QWORD *)(a1 + 400) = v115;
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    v116 = a2[52];
    *(_QWORD *)(a1 + 416) = v116;
    v117 = a2[53];
    *(_QWORD *)(a1 + 424) = v117;
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    v118 = a2[57];
    *(_QWORD *)(a1 + 456) = v118;
    v119 = a2[58];
    *(_QWORD *)(a1 + 464) = v119;
    swift_bridgeObjectRetain(v114);
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRetain(v116);
    swift_bridgeObjectRetain(v117);
    swift_bridgeObjectRetain(v118);
    swift_bridgeObjectRetain(v119);
  }
  else
  {
    v126 = *(_OWORD *)v102;
    v127 = *(_OWORD *)(a2 + 45);
    v128 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v128;
    *(_OWORD *)v101 = v126;
    *(_OWORD *)(a1 + 360) = v127;
    v129 = *(_OWORD *)(a2 + 51);
    v130 = *(_OWORD *)(a2 + 53);
    v131 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v131;
    *(_OWORD *)(a1 + 408) = v129;
    *(_OWORD *)(a1 + 424) = v130;
  }
  *(_BYTE *)(a1 + 472) = *((_BYTE *)a2 + 472);
  v132 = (_OWORD *)(a1 + 480);
  v133 = (__int128 *)(a2 + 60);
  v134 = a2[65];
  if (*(_QWORD *)(a1 + 520))
  {
    if (v134)
    {
      v135 = a2[60];
      *(_QWORD *)(a1 + 480) = v135;
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRelease();
      v136 = a2[61];
      *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
      *(_QWORD *)(a1 + 488) = v136;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
      *(_QWORD *)(a1 + 512) = a2[64];
      v137 = a2[65];
      *(_QWORD *)(a1 + 520) = v137;
      swift_bridgeObjectRetain(v137);
      swift_bridgeObjectRelease();
      v138 = a2[66];
      *(_QWORD *)(a1 + 528) = v138;
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 480));
      v144 = *((_OWORD *)a2 + 31);
      v143 = *((_OWORD *)a2 + 32);
      v145 = *v133;
      *(_QWORD *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v144;
      *(_OWORD *)(a1 + 512) = v143;
      *v132 = v145;
    }
  }
  else if (v134)
  {
    v139 = a2[60];
    *(_QWORD *)(a1 + 480) = v139;
    v140 = a2[61];
    *(_BYTE *)(a1 + 496) = *((_BYTE *)a2 + 496);
    *(_QWORD *)(a1 + 488) = v140;
    *(_QWORD *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(_BYTE *)(a1 + 508) = *((_BYTE *)a2 + 508);
    *(_QWORD *)(a1 + 512) = a2[64];
    v141 = a2[65];
    *(_QWORD *)(a1 + 520) = v141;
    v142 = a2[66];
    *(_QWORD *)(a1 + 528) = v142;
    swift_bridgeObjectRetain(v139);
    swift_bridgeObjectRetain(v141);
    swift_bridgeObjectRetain(v142);
  }
  else
  {
    v146 = *v133;
    v147 = *((_OWORD *)a2 + 31);
    v148 = *((_OWORD *)a2 + 32);
    *(_QWORD *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v147;
    *(_OWORD *)(a1 + 512) = v148;
    *v132 = v146;
  }
  v149 = (_OWORD *)(a1 + 536);
  v150 = (__int128 *)(a2 + 67);
  v151 = a2[72];
  if (*(_QWORD *)(a1 + 576))
  {
    if (v151)
    {
      v152 = a2[67];
      *(_QWORD *)(a1 + 536) = v152;
      swift_bridgeObjectRetain(v152);
      swift_bridgeObjectRelease();
      v153 = a2[68];
      *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
      *(_QWORD *)(a1 + 544) = v153;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
      *(_QWORD *)(a1 + 568) = a2[71];
      v154 = a2[72];
      *(_QWORD *)(a1 + 576) = v154;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRelease();
      v155 = a2[73];
      *(_QWORD *)(a1 + 584) = v155;
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C8B16C((_QWORD *)(a1 + 536));
      v161 = *(_OWORD *)(a2 + 69);
      v160 = *(_OWORD *)(a2 + 71);
      v162 = *v150;
      *(_QWORD *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v161;
      *(_OWORD *)(a1 + 568) = v160;
      *v149 = v162;
    }
  }
  else if (v151)
  {
    v156 = a2[67];
    *(_QWORD *)(a1 + 536) = v156;
    v157 = a2[68];
    *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
    *(_QWORD *)(a1 + 544) = v157;
    *(_QWORD *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(_BYTE *)(a1 + 564) = *((_BYTE *)a2 + 564);
    *(_QWORD *)(a1 + 568) = a2[71];
    v158 = a2[72];
    *(_QWORD *)(a1 + 576) = v158;
    v159 = a2[73];
    *(_QWORD *)(a1 + 584) = v159;
    swift_bridgeObjectRetain(v156);
    swift_bridgeObjectRetain(v158);
    swift_bridgeObjectRetain(v159);
  }
  else
  {
    v163 = *v150;
    v164 = *(_OWORD *)(a2 + 69);
    v165 = *(_OWORD *)(a2 + 71);
    *(_QWORD *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v164;
    *(_OWORD *)(a1 + 568) = v165;
    *v149 = v163;
  }
  v166 = a2[74];
  *(_QWORD *)(a1 + 592) = v166;
  swift_bridgeObjectRetain(v166);
  swift_bridgeObjectRelease();
  v167 = (__int128 *)(a1 + 600);
  v168 = (__int128 *)(a2 + 75);
  v169 = *((unsigned __int8 *)a2 + 616);
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
    if (v169 == 255)
    {
      v171 = *v168;
      *(_BYTE *)(a1 + 616) = *((_BYTE *)a2 + 616);
      *v167 = v171;
    }
    else
    {
      v178 = v169 & 1;
      v179 = a2[75];
      v180 = a2[76];
      sub_1004C4914(v179, v180, v169 & 1);
      *(_QWORD *)(a1 + 600) = v179;
      *(_QWORD *)(a1 + 608) = v180;
      *(_BYTE *)(a1 + 616) = v178;
    }
  }
  else if (v169 == 255)
  {
    sub_1007C50AC(a1 + 600);
    v170 = *((_BYTE *)a2 + 616);
    *v167 = *v168;
    *(_BYTE *)(a1 + 616) = v170;
  }
  else
  {
    v172 = v169 & 1;
    v173 = a2[75];
    v174 = a2[76];
    sub_1004C4914(v173, v174, v169 & 1);
    v175 = *(_QWORD *)(a1 + 600);
    v176 = *(_QWORD *)(a1 + 608);
    v177 = *(_BYTE *)(a1 + 616);
    *(_QWORD *)(a1 + 600) = v173;
    *(_QWORD *)(a1 + 608) = v174;
    *(_BYTE *)(a1 + 616) = v172;
    sub_1004C4230(v175, v176, v177);
  }
  v181 = *((_DWORD *)a2 + 155);
  *(_BYTE *)(a1 + 624) = *((_BYTE *)a2 + 624);
  *(_DWORD *)(a1 + 620) = v181;
  *(_BYTE *)(a1 + 625) = *((_BYTE *)a2 + 625);
  *(_BYTE *)(a1 + 626) = *((_BYTE *)a2 + 626);
  v182 = a2[79];
  *(_BYTE *)(a1 + 640) = *((_BYTE *)a2 + 640);
  *(_QWORD *)(a1 + 632) = v182;
  v183 = a2[81];
  *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
  *(_QWORD *)(a1 + 648) = v183;
  v184 = (_QWORD *)(a1 + 664);
  v185 = a2 + 83;
  v186 = a2[95];
  if (*(_QWORD *)(a1 + 760))
  {
    if (v186)
    {
      v187 = *v185;
      *(_BYTE *)(a1 + 672) = *((_BYTE *)a2 + 672);
      *v184 = v187;
      LODWORD(v187) = *((_DWORD *)a2 + 170);
      *(_BYTE *)(a1 + 684) = *((_BYTE *)a2 + 684);
      *(_DWORD *)(a1 + 680) = v187;
      v188 = a2[86];
      *(_BYTE *)(a1 + 696) = *((_BYTE *)a2 + 696);
      *(_QWORD *)(a1 + 688) = v188;
      *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
      v189 = a2[89];
      *(_QWORD *)(a1 + 712) = v189;
      swift_bridgeObjectRetain(v189);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
      *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
      *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
      *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
      v190 = a2[92];
      *(_QWORD *)(a1 + 736) = v190;
      swift_bridgeObjectRetain(v190);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
      v191 = a2[94];
      *(_QWORD *)(a1 + 752) = v191;
      swift_bridgeObjectRetain(v191);
      swift_bridgeObjectRelease();
      v192 = a2[95];
      *(_QWORD *)(a1 + 760) = v192;
      swift_bridgeObjectRetain(v192);
      swift_bridgeObjectRelease();
      v193 = a2[96];
      *(_QWORD *)(a1 + 768) = v193;
      swift_bridgeObjectRetain(v193);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1007C50EC((_QWORD *)(a1 + 664));
      v202 = *(_OWORD *)(a2 + 85);
      v201 = *(_OWORD *)(a2 + 87);
      *(_OWORD *)v184 = *(_OWORD *)v185;
      *(_OWORD *)(a1 + 680) = v202;
      *(_OWORD *)(a1 + 696) = v201;
      v203 = *(_OWORD *)(a2 + 95);
      v205 = *(_OWORD *)(a2 + 89);
      v204 = *(_OWORD *)(a2 + 91);
      *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
      *(_OWORD *)(a1 + 760) = v203;
      *(_OWORD *)(a1 + 712) = v205;
      *(_OWORD *)(a1 + 728) = v204;
    }
  }
  else if (v186)
  {
    v194 = *v185;
    *(_BYTE *)(a1 + 672) = *((_BYTE *)a2 + 672);
    *v184 = v194;
    LODWORD(v194) = *((_DWORD *)a2 + 170);
    *(_BYTE *)(a1 + 684) = *((_BYTE *)a2 + 684);
    *(_DWORD *)(a1 + 680) = v194;
    v195 = a2[86];
    *(_BYTE *)(a1 + 696) = *((_BYTE *)a2 + 696);
    *(_QWORD *)(a1 + 688) = v195;
    *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
    v196 = a2[89];
    *(_QWORD *)(a1 + 712) = v196;
    *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
    *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
    *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
    *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
    v197 = a2[92];
    *(_QWORD *)(a1 + 736) = v197;
    *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
    v198 = a2[94];
    *(_QWORD *)(a1 + 752) = v198;
    v199 = a2[95];
    *(_QWORD *)(a1 + 760) = v199;
    v200 = a2[96];
    *(_QWORD *)(a1 + 768) = v200;
    swift_bridgeObjectRetain(v196);
    swift_bridgeObjectRetain(v197);
    swift_bridgeObjectRetain(v198);
    swift_bridgeObjectRetain(v199);
    swift_bridgeObjectRetain(v200);
  }
  else
  {
    v206 = *(_OWORD *)v185;
    v207 = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 85);
    *(_OWORD *)(a1 + 696) = v207;
    *(_OWORD *)v184 = v206;
    v208 = *(_OWORD *)(a2 + 89);
    v209 = *(_OWORD *)(a2 + 91);
    v210 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 760) = v210;
    *(_OWORD *)(a1 + 712) = v208;
    *(_OWORD *)(a1 + 728) = v209;
  }
  v211 = a2[97];
  *(_BYTE *)(a1 + 784) = *((_BYTE *)a2 + 784);
  *(_QWORD *)(a1 + 776) = v211;
  v212 = a2[99];
  *(_BYTE *)(a1 + 800) = *((_BYTE *)a2 + 800);
  *(_QWORD *)(a1 + 792) = v212;
  v213 = a2[101];
  *(_BYTE *)(a1 + 816) = *((_BYTE *)a2 + 816);
  *(_QWORD *)(a1 + 808) = v213;
  v214 = a2[103];
  *(_BYTE *)(a1 + 832) = *((_BYTE *)a2 + 832);
  *(_QWORD *)(a1 + 824) = v214;
  v215 = a2[105];
  *(_QWORD *)(a1 + 840) = v215;
  swift_bridgeObjectRetain(v215);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *((_DWORD *)a2 + 212);
  v216 = a2[107];
  *(_BYTE *)(a1 + 864) = *((_BYTE *)a2 + 864);
  *(_QWORD *)(a1 + 856) = v216;
  v217 = a2[109];
  *(_QWORD *)(a1 + 872) = v217;
  swift_bridgeObjectRetain(v217);
  swift_bridgeObjectRelease();
  v218 = a2[110];
  *(_QWORD *)(a1 + 880) = v218;
  swift_bridgeObjectRetain(v218);
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for CRLWPStickyNotePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x378uLL);
}

uint64_t assignWithTake for CRLWPStickyNotePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _DWORD *v20;
  _DWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  _OWORD *v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_7;
  if (!*(_QWORD *)(a2 + 96))
  {
    sub_1009AF5B4((_QWORD *)a1);
LABEL_7:
    v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1008BAD90((_QWORD *)(a1 + 144));
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_10:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_14:
    v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  v13 = *(_QWORD *)(a2 + 200);
  if (!v13)
  {
    sub_1008BADC0(a1 + 192);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  v15 = (_QWORD *)(a1 + 232);
  v16 = (_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 328))
  {
    if (*(_QWORD *)(a2 + 328))
    {
      *v15 = *v16;
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 252) = *(_BYTE *)(a2 + 252);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1007C50EC((_QWORD *)(a1 + 232));
  }
  v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  v20 = (_DWORD *)(a1 + 344);
  v21 = (_DWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 424))
  {
    if (*(_QWORD *)(a2 + 424))
    {
      *v20 = *v21;
      *(_BYTE *)(a1 + 348) = *(_BYTE *)(a2 + 348);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1009AF5E8((_QWORD *)(a1 + 344));
  }
  v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  if (*(_QWORD *)(a1 + 520))
  {
    if (*(_QWORD *)(a2 + 520))
    {
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(_BYTE *)(a1 + 508) = *(_BYTE *)(a2 + 508);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100C8B16C((_QWORD *)(a1 + 480));
  }
  v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
LABEL_31:
  if (*(_QWORD *)(a1 + 576))
  {
    if (*(_QWORD *)(a2 + 576))
    {
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
      *(_BYTE *)(a1 + 564) = *(_BYTE *)(a2 + 564);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100C8B16C((_QWORD *)(a1 + 536));
  }
  v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v27;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
LABEL_36:
  v28 = (_OWORD *)(a1 + 600);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_bridgeObjectRelease();
  v29 = (_OWORD *)(a2 + 600);
  v30 = *(unsigned __int8 *)(a1 + 616);
  if (v30 == 255)
  {
LABEL_39:
    *v28 = *v29;
    *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
    goto LABEL_41;
  }
  v31 = *(unsigned __int8 *)(a2 + 616);
  if (v31 == 255)
  {
    sub_1007C50AC(a1 + 600);
    goto LABEL_39;
  }
  v32 = *(_QWORD *)(a1 + 600);
  v33 = *(_QWORD *)(a1 + 608);
  *v28 = *v29;
  *(_BYTE *)(a1 + 616) = v31 & 1;
  sub_1004C4230(v32, v33, v30 & 1);
LABEL_41:
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  v34 = (_OWORD *)(a1 + 664);
  v35 = (_OWORD *)(a2 + 664);
  if (!*(_QWORD *)(a1 + 760))
  {
LABEL_45:
    v36 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v36;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    v37 = *(_OWORD *)(a2 + 680);
    *v34 = *v35;
    *(_OWORD *)(a1 + 680) = v37;
    v38 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v38;
    goto LABEL_46;
  }
  if (!*(_QWORD *)(a2 + 760))
  {
    sub_1007C50EC((_QWORD *)(a1 + 664));
    goto LABEL_45;
  }
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
  *(_BYTE *)(a1 + 684) = *(_BYTE *)(a2 + 684);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
  *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease();
LABEL_46:
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPStickyNotePresetData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 888))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPStickyNotePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 888) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 592) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 888) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNotePresetData()
{
  return &type metadata for CRLWPStickyNotePresetData;
}

id sub_100D514DC()
{
  const void *v0;
  id v1;
  CGColorSpace *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  _BYTE __dst[600];
  _BYTE v10[128];
  _OWORD v11[5];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  _OWORD v28[5];
  uint64_t v29;
  _BYTE v30[16];
  float v31;
  uint64_t v32;

  memcpy(__dst, v0, sizeof(__dst));
  sub_1004C4938((uint64_t)&__dst[344], (uint64_t)v10, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v10, (uint64_t)&v13, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)&v13) == 1)
    return 0;
  v25 = v17;
  v26 = v18;
  v27[0] = v19;
  v27[1] = v20;
  v21 = v13;
  v22 = v14;
  v23 = v15;
  v24 = v16;
  sub_1005E40F4();
  v28[2] = v15;
  v28[3] = v16;
  v28[4] = v17;
  v29 = v18;
  v28[0] = v13;
  v28[1] = v14;
  v11[0] = v13;
  v11[1] = v14;
  v11[3] = v16;
  v11[4] = v17;
  v11[2] = v15;
  v12 = v18;
  sub_1005E4130(v28);
  v2 = sub_1006C52C0((uint64_t)v11);
  v3 = *((float *)&v26 + 2);
  v4 = *((float *)&v26 + 3);
  v5 = *(float *)v27;
  v6 = *((float *)v27 + 1);
  sub_1004C4938((uint64_t)v27 + 8, (uint64_t)v30, &qword_1013E6B28);
  sub_1004C4938((uint64_t)v30, (uint64_t)&v31, &qword_1013E6B28);
  if (v32)
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLCurvedShadow), "initWithOffset:angle:radius:curve:opacity:color:enabled:", v2, 1, v4, v3, v5, v31, v6);
  else
    v7 = objc_msgSend(objc_allocWithZone((Class)CRLDropShadow), "initWithAngle:offset:radius:opacity:color:enabled:", v2, 1, v3, v4, v5, v6);
  v1 = v7;

  return v1;
}

uint64_t sub_100D516B8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v17[111];
  char v18;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101410308);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D51DBC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLWPStickyNotePresetData.CodingKeys, &type metadata for CRLWPStickyNotePresetData.CodingKeys, v11, v9, v10);
  memcpy(v17, v3, 0x370uLL);
  v18 = 0;
  v12 = sub_100C8C4B0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v17, &v18, v5, &type metadata for CRLWPShapePresetData, v12);
  if (!v2)
  {
    v17[0] = v3[110];
    v18 = 1;
    v13 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v14 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v17, &v18, v5, v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100D5181C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x5365706168537077;
}

uint64_t sub_100D51864@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100D5218C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100D51888(_QWORD *a1@<X8>)
{
  *a1 = &off_101264230;
}

uint64_t sub_100D51898(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D51D74();
  v5 = sub_100D51DBC();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100D518DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D51DBC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D51904(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D51DBC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100D5192C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 880));
}

uint64_t sub_100D51934(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 880));
  *(_QWORD *)(v1 + 880) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100D5195C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100D5196C(void *__src, const void *a2)
{
  _BYTE v4[888];
  _BYTE __dst[888];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100D516B4(v4) & 1;
}

void sub_100D519C0(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  _BYTE __src[888];

  sub_100D52290(a1, __src);
  if (!v2)
    memcpy(a2, __src, 0x378uLL);
}

uint64_t sub_100D51A10(_QWORD *a1)
{
  return sub_100D516B8(a1);
}

uint64_t sub_100D51A24(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D52B1C();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D51A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100D51C0C();
  v7 = sub_100D52B60();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D51AC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D52B1C();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100D51AF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D51EE4();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100D51B44(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D51EE4();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D51B88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D51EE4();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100D51BC4()
{
  unint64_t result;

  result = qword_101410290;
  if (!qword_101410290)
  {
    result = swift_getWitnessTable(&unk_100F3528C, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_101410290);
  }
  return result;
}

unint64_t sub_100D51C0C()
{
  unint64_t result;

  result = qword_101410298;
  if (!qword_101410298)
  {
    result = swift_getWitnessTable(&unk_100F3556C, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_101410298);
  }
  return result;
}

unint64_t sub_100D51C54()
{
  unint64_t result;

  result = qword_1014102A0;
  if (!qword_1014102A0)
  {
    result = swift_getWitnessTable(&unk_100F3535C, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_1014102A0);
  }
  return result;
}

unint64_t sub_100D51C9C()
{
  unint64_t result;

  result = qword_1014102A8;
  if (!qword_1014102A8)
  {
    result = swift_getWitnessTable(&unk_100F35334, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_1014102A8);
  }
  return result;
}

unint64_t sub_100D51CE4()
{
  unint64_t result;

  result = qword_1014102B0;
  if (!qword_1014102B0)
  {
    result = swift_getWitnessTable(&unk_100F353CC, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102B0);
  }
  return result;
}

unint64_t sub_100D51D2C()
{
  unint64_t result;

  result = qword_1014102B8;
  if (!qword_1014102B8)
  {
    result = swift_getWitnessTable(&unk_100F354DC, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102B8);
  }
  return result;
}

unint64_t sub_100D51D74()
{
  unint64_t result;

  result = qword_1014102C0;
  if (!qword_1014102C0)
  {
    result = swift_getWitnessTable(&unk_100F354A4, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102C0);
  }
  return result;
}

unint64_t sub_100D51DBC()
{
  unint64_t result;

  result = qword_1014102C8;
  if (!qword_1014102C8)
  {
    result = swift_getWitnessTable(&unk_100F35404, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102C8);
  }
  return result;
}

unint64_t sub_100D51E04()
{
  unint64_t result;

  result = qword_1014102D0;
  if (!qword_1014102D0)
  {
    result = swift_getWitnessTable(&unk_100F3547C, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102D0);
  }
  return result;
}

unint64_t sub_100D51E4C()
{
  unint64_t result;

  result = qword_1014102D8;
  if (!qword_1014102D8)
  {
    result = swift_getWitnessTable(&unk_100F35454, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014102D8);
  }
  return result;
}

unint64_t sub_100D51E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014102E0;
  if (!qword_1014102E0)
  {
    v1 = sub_1004CB6A4(&qword_1014102E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1014102E0);
  }
  return result;
}

unint64_t sub_100D51EE4()
{
  unint64_t result;

  result = qword_1014102F0;
  if (!qword_1014102F0)
  {
    result = swift_getWitnessTable(&unk_100F35384, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_1014102F0);
  }
  return result;
}

unint64_t sub_100D51F2C()
{
  unint64_t result;

  result = qword_1014102F8;
  if (!qword_1014102F8)
  {
    result = swift_getWitnessTable(&unk_100F352D4, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_1014102F8);
  }
  return result;
}

uint64_t sub_100D51F70(uint64_t *__src, uint64_t *a2)
{
  unint64_t v4;
  char v5;
  _BYTE v7[16];
  _BYTE v8[16];
  _QWORD v9[110];
  _BYTE v10[16];
  _OWORD v11[15];
  uint64_t v12;
  _BYTE v13[600];
  _QWORD __dst[110];
  _BYTE v15[16];
  _OWORD v16[15];
  uint64_t v17;
  _BYTE v18[600];

  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v9, a2, sizeof(v9));
  memcpy(v18, __src, sizeof(v18));
  memcpy(v13, a2, sizeof(v13));
  if ((sub_100C8C9E4(v18, v13) & 1) == 0)
    goto LABEL_7;
  v17 = __dst[105];
  v16[12] = *(_OWORD *)&__dst[99];
  v16[13] = *(_OWORD *)&__dst[101];
  v16[14] = *(_OWORD *)&__dst[103];
  v16[8] = *(_OWORD *)&__dst[91];
  v16[9] = *(_OWORD *)&__dst[93];
  v16[10] = *(_OWORD *)&__dst[95];
  v16[11] = *(_OWORD *)&__dst[97];
  v16[4] = *(_OWORD *)&__dst[83];
  v16[5] = *(_OWORD *)&__dst[85];
  v16[6] = *(_OWORD *)&__dst[87];
  v16[7] = *(_OWORD *)&__dst[89];
  v16[0] = *(_OWORD *)&__dst[75];
  v16[1] = *(_OWORD *)&__dst[77];
  v16[2] = *(_OWORD *)&__dst[79];
  v16[3] = *(_OWORD *)&__dst[81];
  v11[12] = *(_OWORD *)&v9[99];
  v11[13] = *(_OWORD *)&v9[101];
  v11[14] = *(_OWORD *)&v9[103];
  v12 = v9[105];
  v11[8] = *(_OWORD *)&v9[91];
  v11[9] = *(_OWORD *)&v9[93];
  v11[10] = *(_OWORD *)&v9[95];
  v11[11] = *(_OWORD *)&v9[97];
  v11[4] = *(_OWORD *)&v9[83];
  v11[5] = *(_OWORD *)&v9[85];
  v11[6] = *(_OWORD *)&v9[87];
  v11[7] = *(_OWORD *)&v9[89];
  v11[0] = *(_OWORD *)&v9[75];
  v11[1] = *(_OWORD *)&v9[77];
  v11[2] = *(_OWORD *)&v9[79];
  v11[3] = *(_OWORD *)&v9[81];
  if ((sub_1007C6C70(v16, v11) & 1) == 0)
    goto LABEL_7;
  if (*(float *)&__dst[106] == *(float *)&v9[106]
    && (sub_1004C4938((uint64_t)&__dst[107], (uint64_t)v15, (uint64_t *)&unk_1013F5520),
        sub_1004C4938((uint64_t)v15, (uint64_t)v8, (uint64_t *)&unk_1013F5520),
        sub_1004C4938((uint64_t)&v9[107], (uint64_t)v10, (uint64_t *)&unk_1013F5520),
        sub_1004C4938((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1013F5520),
        v4 = sub_100563198(),
        (static CRExtensible.== infix(_:_:)(v8, v7, &type metadata for CRLWPShapeVerticalAlignmentData, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)&& (sub_100C9E04C(__dst[109], v9[109]) & 1) != 0)
  {
    v5 = sub_100C9E04C(__src[110], a2[110]);
  }
  else
  {
LABEL_7:
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_100D5218C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x5365706168537077 && a2 == 0xEC000000656C7974)
  {
    v5 = 0xEC000000656C7974;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5365706168537077, 0xEC000000656C7974, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_100D52290(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[111];
  _BYTE v20[880];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[880];
  _BYTE v24[880];
  _BYTE v25[880];
  char v26;
  char v27;

  v18 = sub_1004B804C(&qword_101410300);
  v5 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v8);
  v10 = sub_100D51DBC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLWPStickyNotePresetData.CodingKeys, &type metadata for CRLWPStickyNotePresetData.CodingKeys, v10, v8, v9);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = a2;
    v27 = 0;
    v12 = sub_100C8C468();
    v13 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLWPShapePresetData, &v27, v18, &type metadata for CRLWPShapePresetData, v12);
    memcpy(v23, v24, sizeof(v23));
    memcpy(v25, v24, sizeof(v25));
    v14 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v26 = 1;
    sub_100C8F210((uint64_t)v23);
    v15 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v26, v13, v14, v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
    v16 = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease();
    memcpy(v19, v23, 0x370uLL);
    v19[110] = v16;
    sub_100D52514((uint64_t)v19);
    swift_bridgeObjectRelease();
    sub_100784590((uint64_t)v23);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(v20, v25, sizeof(v20));
    v21 = v16;
    sub_100D52818((uint64_t)v20);
    memcpy(v11, v19, 0x378uLL);
  }
}

uint64_t sub_100D52514(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v38 = *(_QWORD *)(a1 + 240);
  v39 = *(_QWORD *)(a1 + 232);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 248);
  v34 = *(_QWORD *)(a1 + 272);
  v35 = *(_QWORD *)(a1 + 264);
  v32 = *(_QWORD *)(a1 + 288);
  v33 = *(_QWORD *)(a1 + 280);
  v26 = *(_OWORD *)(a1 + 296);
  v23 = *(_OWORD *)(a1 + 312);
  v20 = *(_QWORD *)(a1 + 328);
  v17 = *(_QWORD *)(a1 + 336);
  v53 = *(_QWORD *)(a1 + 352);
  v54 = *(_QWORD *)(a1 + 344);
  v51 = *(_QWORD *)(a1 + 368);
  v52 = *(_QWORD *)(a1 + 360);
  v49 = *(_QWORD *)(a1 + 384);
  v50 = *(_QWORD *)(a1 + 376);
  v47 = *(_QWORD *)(a1 + 400);
  v48 = *(_QWORD *)(a1 + 392);
  v31 = *(_OWORD *)(a1 + 408);
  v29 = *(_OWORD *)(a1 + 424);
  v25 = *(_OWORD *)(a1 + 440);
  v22 = *(_QWORD *)(a1 + 456);
  v19 = *(_QWORD *)(a1 + 464);
  v57 = *(_OWORD *)(a1 + 744);
  v58 = *(_OWORD *)(a1 + 728);
  v3 = *(_QWORD *)(a1 + 480);
  v2 = *(_QWORD *)(a1 + 488);
  v5 = *(_QWORD *)(a1 + 496);
  v4 = *(_QWORD *)(a1 + 504);
  v6 = *(_QWORD *)(a1 + 512);
  v7 = *(_QWORD *)(a1 + 520);
  v8 = *(_QWORD *)(a1 + 528);
  v9 = *(_QWORD *)(a1 + 536);
  v10 = *(_QWORD *)(a1 + 544);
  v12 = *(_QWORD *)(a1 + 552);
  v13 = *(_QWORD *)(a1 + 560);
  v14 = *(_QWORD *)(a1 + 568);
  v15 = *(_QWORD *)(a1 + 576);
  v16 = *(_QWORD *)(a1 + 584);
  v21 = *(_QWORD *)(a1 + 592);
  v24 = *(_QWORD *)(a1 + 600);
  v27 = *(_QWORD *)(a1 + 608);
  v40 = *(_QWORD *)(a1 + 664);
  v41 = *(_QWORD *)(a1 + 672);
  v42 = *(_QWORD *)(a1 + 680);
  v43 = *(_QWORD *)(a1 + 688);
  v44 = *(_QWORD *)(a1 + 696);
  v45 = *(_QWORD *)(a1 + 704);
  v46 = *(_QWORD *)(a1 + 712);
  v55 = *(_QWORD *)(a1 + 720);
  v30 = *(_QWORD *)(a1 + 760);
  v28 = *(_QWORD *)(a1 + 768);
  v56 = *(_QWORD *)(a1 + 840);
  v59 = *(_QWORD *)(a1 + 872);
  v60 = *(_QWORD *)(a1 + 880);
  v18 = *(_BYTE *)(a1 + 616);
  sub_1004C3830(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C485C(v39, v38, v37, v36, v35, v34, v33, v32, v26, *((uint64_t *)&v26 + 1), v23, *((uint64_t *)&v23 + 1), v20, v17);
  sub_1004C396C(v54, v53, v52, v51, v50, v49, v48, v47, v31, *((uint64_t *)&v31 + 1), v29, *((uint64_t *)&v29 + 1), v25, *((uint64_t *)&v25 + 1), v22, v19);
  sub_1004C48C4(v3, v2, v5, v4, v6, v7, v8);
  sub_1004C48C4(v9, v10, v12, v13, v14, v15, v16);
  swift_bridgeObjectRetain(v21);
  sub_1004C48FC(v24, v27, v18);
  sub_1004C485C(v40, v41, v42, v43, v44, v45, v46, v55, v58, *((uint64_t *)&v58 + 1), v57, *((uint64_t *)&v57 + 1), v30, v28);
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v60);
  return a1;
}

uint64_t sub_100D52818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;

  v37 = *(_QWORD *)(a1 + 240);
  v38 = *(_QWORD *)(a1 + 232);
  v35 = *(_QWORD *)(a1 + 256);
  v36 = *(_QWORD *)(a1 + 248);
  v33 = *(_QWORD *)(a1 + 272);
  v34 = *(_QWORD *)(a1 + 264);
  v31 = *(_QWORD *)(a1 + 288);
  v32 = *(_QWORD *)(a1 + 280);
  v25 = *(_OWORD *)(a1 + 296);
  v22 = *(_OWORD *)(a1 + 312);
  v20 = *(_QWORD *)(a1 + 328);
  v17 = *(_QWORD *)(a1 + 336);
  v52 = *(_QWORD *)(a1 + 352);
  v53 = *(_QWORD *)(a1 + 344);
  v50 = *(_QWORD *)(a1 + 368);
  v51 = *(_QWORD *)(a1 + 360);
  v48 = *(_QWORD *)(a1 + 384);
  v49 = *(_QWORD *)(a1 + 376);
  v46 = *(_QWORD *)(a1 + 400);
  v47 = *(_QWORD *)(a1 + 392);
  v30 = *(_OWORD *)(a1 + 408);
  v28 = *(_OWORD *)(a1 + 424);
  v24 = *(_OWORD *)(a1 + 440);
  v21 = *(_QWORD *)(a1 + 456);
  v19 = *(_QWORD *)(a1 + 464);
  v55 = *(_OWORD *)(a1 + 744);
  v56 = *(_OWORD *)(a1 + 728);
  v3 = *(_QWORD *)(a1 + 480);
  v2 = *(_QWORD *)(a1 + 488);
  v5 = *(_QWORD *)(a1 + 496);
  v4 = *(_QWORD *)(a1 + 504);
  v6 = *(_QWORD *)(a1 + 512);
  v7 = *(_QWORD *)(a1 + 520);
  v8 = *(_QWORD *)(a1 + 528);
  v9 = *(_QWORD *)(a1 + 536);
  v10 = *(_QWORD *)(a1 + 544);
  v12 = *(_QWORD *)(a1 + 552);
  v13 = *(_QWORD *)(a1 + 560);
  v14 = *(_QWORD *)(a1 + 568);
  v15 = *(_QWORD *)(a1 + 576);
  v16 = *(_QWORD *)(a1 + 584);
  v23 = *(_QWORD *)(a1 + 600);
  v26 = *(_QWORD *)(a1 + 608);
  v39 = *(_QWORD *)(a1 + 664);
  v40 = *(_QWORD *)(a1 + 672);
  v41 = *(_QWORD *)(a1 + 680);
  v42 = *(_QWORD *)(a1 + 688);
  v43 = *(_QWORD *)(a1 + 696);
  v44 = *(_QWORD *)(a1 + 704);
  v45 = *(_QWORD *)(a1 + 712);
  v54 = *(_QWORD *)(a1 + 720);
  v29 = *(_QWORD *)(a1 + 760);
  v27 = *(_QWORD *)(a1 + 768);
  v18 = *(_BYTE *)(a1 + 616);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C4174(v38, v37, v36, v35, v34, v33, v32, v31, v25, *((uint64_t *)&v25 + 1), v22, *((uint64_t *)&v22 + 1), v20, v17);
  sub_1004C3718(v53, v52, v51, v50, v49, v48, v47, v46, v30, *((uint64_t *)&v30 + 1), v28, *((uint64_t *)&v28 + 1), v24, *((uint64_t *)&v24 + 1), v21, v19);
  sub_1004C41DC(v3, v2, v5, v4, v6, v7, v8);
  sub_1004C41DC(v9, v10, v12, v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  sub_1004C4218(v23, v26, v18);
  sub_1004C4174(v39, v40, v41, v42, v43, v44, v45, v54, v56, *((uint64_t *)&v56 + 1), v55, *((uint64_t *)&v55 + 1), v29, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100D52B1C()
{
  unint64_t result;

  result = qword_101410310;
  if (!qword_101410310)
  {
    result = swift_getWitnessTable(&unk_100F3552C, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_101410310);
  }
  return result;
}

unint64_t sub_100D52B60()
{
  unint64_t result;

  result = qword_101410318;
  if (!qword_101410318)
  {
    result = swift_getWitnessTable(&unk_100F35504, &type metadata for CRLWPStickyNotePresetData);
    atomic_store(result, (unint64_t *)&qword_101410318);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLWPStickyNotePresetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100D52BF0 + 4 * byte_100F35265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100D52C24 + 4 * asc_100F35260[v4]))();
}

uint64_t sub_100D52C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D52C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D52C34);
  return result;
}

uint64_t sub_100D52C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D52C48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100D52C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D52C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNotePresetData.CodingKeys()
{
  return &type metadata for CRLWPStickyNotePresetData.CodingKeys;
}

unint64_t sub_100D52C74()
{
  unint64_t result;

  result = qword_101410320;
  if (!qword_101410320)
  {
    result = swift_getWitnessTable(&unk_100F35628, &type metadata for CRLWPStickyNotePresetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410320);
  }
  return result;
}

id sub_100D52CB8()
{
  char *v0;
  id v1;
  char *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  objc_super v12;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_delegate]);
  v1 = objc_allocWithZone((Class)type metadata accessor for CRLImagePlaygroundViewControllerDelegate());
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_gpDelegate] = v3;
  v5 = objc_allocWithZone((Class)type metadata accessor for ImagePlaygroundViewController(0, v4));
  v6 = v3;
  v7 = objc_msgSend(v5, "init");
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] = v7;
  v8 = v7;

  v9 = (char *)v6;
  dispatch thunk of ImagePlaygroundViewController.delegate.setter(v6);
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for CRLGenerativePlaygroundHelper();
  v10 = objc_msgSendSuper2(&v12, "init");
  swift_unknownObjectWeakAssign(&v9[OBJC_IVAR____TtC8FreeformP33_A57276A3C6F5E8852856D4D908CBDB8040CRLImagePlaygroundViewControllerDelegate_helper], v10);

  return v10;
}

uint64_t sub_100D52E0C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  __n128 v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  __n128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v28).n128_u64[0];
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, "generateImage", v12);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1012A37B8, 48, 7);
  v18[2] = a2;
  v18[3] = v15;
  v18[4] = a3;
  v18[5] = a4;
  aBlock[4] = sub_100D5740C;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_1012A37D0;
  v19 = _Block_copy(aBlock);
  v20 = v31;
  v21 = a2;
  v22 = v15;
  swift_retain(a4);
  v23 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_1004CB65C();
  v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v26 = sub_100503E88();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v8, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v28);
}

uint64_t sub_100D5302C(int a1, id a2, uint64_t (*a3)(uint64_t))
{
  id v4;
  uint64_t v5;

  if (a2)
    v4 = objc_msgSend(a2, "UIImage");
  else
    v4 = 0;
  v5 = dispatch thunk of ImagePlaygroundViewController.sourceImage.setter(v4);
  return a3(v5);
}

double sub_100D5308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject(&unk_1012A3830, 48, 7);
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a5;
  v15[5] = a6;
  swift_retain(a3);
  v16 = sub_1004C0F54(a5, a6);
  static TaskPriority.userInitiated.getter(v16);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 0, 1, v17);
  type metadata accessor for MainActor(0);
  swift_retain(a4);
  swift_bridgeObjectRetain(a1);
  swift_retain(v15);
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_1012A3858, 72, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = a4;
  v20[5] = a1;
  v20[6] = 0;
  v20[7] = sub_100D57470;
  v20[8] = v15;
  v21 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_1013E1968, (uint64_t)v20);
  swift_release(v15);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100D531F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _QWORD, uint64_t);
  void (*v30)(_BYTE *, uint64_t);
  __n128 v31;
  _BYTE *v32;
  void *v33;
  NSURL *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _BYTE *v41;
  void *v42;
  void *v43;
  NSURL *v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  __n128 v55;
  id v56;
  __n128 v57;
  void *v58;
  uint64_t v59;
  uint64_t inited;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v73[16];
  unint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[8];
  uint64_t v86;
  char v87[8];
  char v88[8];
  uint64_t v89;
  uint64_t v90;
  char v91[8];
  char v92[96];
  id v93;
  uint64_t v94;
  NSURL v95;

  v79 = a3;
  v82 = a4;
  v6 = type metadata accessor for URL.DirectoryHint(0);
  v83 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = &v73[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v11 = &v73[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v78 = &v73[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v73[-v15];
  v18 = __chkstk_darwin(v17);
  v20 = &v73[-v19];
  v77 = a1;
  v75 = (void *)URL.lastPathComponent.getter(v18);
  v80 = v21;
  v22 = objc_msgSend(a2, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

  v24 = UUID.init()(v23);
  v25 = (void *)UUID.uuidString.getter(v24);
  v27 = v26;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v81);
  v93 = v25;
  v94 = v27;
  v28 = v83;
  v29 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v83 + 104);
  v29(v8, enum case for URL.DirectoryHint.isDirectory(_:), v6);
  v74 = sub_1004D292C();
  URL.appending<A>(path:directoryHint:)(&v93, v8, &type metadata for String);
  v30 = *(void (**)(_BYTE *, uint64_t))(v28 + 8);
  v76 = v6;
  v30(v8, v6);
  v31 = swift_bridgeObjectRelease(v94);
  v81 = v12;
  v32 = v16;
  v33 = v79;
  v83 = *(_QWORD *)(v12 + 8);
  ((void (*)(_BYTE *, uint64_t, __n128))v83)(v32, v84, v31);
  URL._bridgeToObjectiveC()(v34);
  v36 = v35;
  v93 = 0;
  LODWORD(v28) = objc_msgSend(v33, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v35, 1, 0, &v93);

  v37 = v93;
  if ((_DWORD)v28)
  {
    v38 = v80;
    v93 = v75;
    v94 = v80;
    v39 = v76;
    v29(v8, enum case for URL.DirectoryHint.notDirectory(_:), v76);
    v40 = v37;
    v41 = v78;
    URL.appending<A>(component:directoryHint:)(&v93, v8, &type metadata for String, v74);
    v30(v8, v39);
    swift_bridgeObjectRelease(v38);
    URL._bridgeToObjectiveC()(&v95);
    v43 = v42;
    URL._bridgeToObjectiveC()(v44);
    v46 = v45;
    v93 = 0;
    LODWORD(v38) = objc_msgSend(v33, "copyItemAtURL:toURL:error:", v43, v45, &v93);

    v47 = v93;
    if ((_DWORD)v38)
    {
      v48 = v93;
      v49 = v84;
      ((void (*)(_BYTE *, uint64_t))v83)(v20, v84);
      v50 = v81;
      v51 = v82;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v81 + 32))(v82, v41, v49);
      v52 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v52, 1, v84);
    }
    v79 = v20;
    v56 = v93;
    v54 = _convertNSErrorToError(_:)(v47);

    swift_willThrow(v57);
    ((void (*)(_BYTE *, uint64_t))v83)(v41, v84);
  }
  else
  {
    v79 = v20;
    v53 = v93;
    swift_bridgeObjectRelease(v80);
    v54 = _convertNSErrorToError(_:)(v37);

    swift_willThrow(v55);
  }
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, &v93, 0, 0);
  v58 = (void *)static OS_os_log.crlInsertMedia;
  v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v59, v92);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v54, v91, v88);
  v61 = v89;
  v62 = v90;
  v63 = v58;
  v64 = Error.publicDescription.getter(v61, v62);
  v66 = v65;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v67 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v67;
  *(_QWORD *)(inited + 32) = v64;
  *(_QWORD *)(inited + 40) = v66;
  swift_getErrorValue(v54, v87, v85);
  v68 = Error.fullDescription.getter(v86);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v67;
  *(_QWORD *)(inited + 72) = v68;
  *(_QWORD *)(inited + 80) = v69;
  v70 = static os_log_type_t.error.getter(v68);
  sub_100A06EBC((uint64_t)v63, &_mh_execute_header, v70, "Error copying asset to temporary directory: %{public}@ <%@>", 59, 2, inited);
  swift_setDeallocating(inited);
  v71 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v71);

  swift_errorRelease(v54);
  ((void (*)(_BYTE *, uint64_t))v83)(v79, v84);
  v52 = 1;
  v51 = v82;
  v50 = v81;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v52, 1, v84);
}

id sub_100D5380C(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLGenerativePlaygroundHelper);
}

uint64_t type metadata accessor for CRLGenerativePlaygroundHelper()
{
  return objc_opt_self(_TtC8Freeform29CRLGenerativePlaygroundHelper);
}

id sub_100D539CC()
{
  return sub_1004DFAE4(0, type metadata accessor for CRLImagePlaygroundViewControllerDelegate);
}

uint64_t type metadata accessor for CRLImagePlaygroundViewControllerDelegate()
{
  return objc_opt_self(_TtC8FreeformP33_A57276A3C6F5E8852856D4D908CBDB8040CRLImagePlaygroundViewControllerDelegate);
}

id sub_100D53A44()
{
  id *v0;

  return objc_msgSend(*v0, "isGEnerativePlaygroundImageItem");
}

void sub_100D53A6C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v14)
  {
    v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v15)
    {
      __break(1u);
      return;
    }
    (*(void (**)(__n128))(*(_QWORD *)v15 + 760))(v11);
    sub_1004D29BC((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v13);
    v16 = v14;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v13, v3);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
    v17 = (void *)CRAttributedString.attributedString.getter(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v18 = objc_msgSend(v17, "string");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v20 = v19;
    v22 = v21;

    v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v23 = v20 & 0xFFFFFFFFFFFFLL;
    if (!v23)
      goto LABEL_11;
    v24 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
    v26 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v24, v25));
    if (v26)
    {
      v27 = v26;
      v28 = objc_opt_self(CRLWPSelection);
      v29 = (void *)swift_dynamicCastObjCClass(v27, v28);
      if (v29)
      {
        v30 = Range<>.init(_:in:)(objc_msgSend(v29, "range"));
        if ((v32 & 1) == 0)
        {
          v33 = String.subscript.getter(v30, v31, v20, v22);
          v35 = v34;
          v37 = v36;
          v39 = v38;
          swift_bridgeObjectRelease();
          if ((v33 ^ v35) >> 14)
          {
            v42 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
            v43 = swift_allocObject(v42, 48, 7);
            *(_OWORD *)(v43 + 16) = xmmword_100EF5E40;
            v44 = static String._fromSubstring(_:)(v33, v35, v37, v39, (__n128)xmmword_100EF5E40);
            v46 = v45;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v43 + 32) = v44;
            *(_QWORD *)(v43 + 40) = v46;

            return;
          }

LABEL_11:
          swift_bridgeObjectRelease();
          return;
        }
      }

    }
    v40 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v41 + 32) = v20;
    *(_QWORD *)(v41 + 40) = v22;
  }
}

uint64_t sub_100D53E04(uint64_t a1)
{
  id *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*v1, "generativePlaygroundStringsFor:", a1);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

  return v3;
}

void sub_100D53E54(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v14)
  {
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(_QWORD *)v14 + 760))(v11);
  sub_1004D29BC((uint64_t)&v9[*(int *)(v7 + 20)], (uint64_t)v13);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v13, v3);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
  v15 = (void *)CRAttributedString.attributedString.getter(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = objc_msgSend(v15, "string");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;
  v20 = v19;

  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v21)
    goto LABEL_10;
  v22 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
  v24 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v22, v23));
  if (!v24)
  {
LABEL_12:
    v38 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v39 = swift_allocObject(v38, 48, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v39 + 32) = v18;
    *(_QWORD *)(v39 + 40) = v20;
    return;
  }
  v25 = v24;
  v26 = objc_opt_self(CRLWPSelection);
  v27 = (void *)swift_dynamicCastObjCClass(v25, v26);
  if (!v27 || (v28 = Range<>.init(_:in:)(objc_msgSend(v27, "range")), (v30 & 1) != 0))
  {

    goto LABEL_12;
  }
  v31 = String.subscript.getter(v28, v29, v18, v20);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  if (!((v31 ^ v33) >> 14))
  {

LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  v40 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v41 = swift_allocObject(v40, 48, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100EF5E40;
  v42 = static String._fromSubstring(_:)(v31, v33, v35, v37, (__n128)xmmword_100EF5E40);
  v44 = v43;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 32) = v42;
  *(_QWORD *)(v41 + 40) = v44;

}

void sub_100D5415C(void *a1)
{
  sub_100D53E54(a1);
}

_QWORD *sub_100D5417C(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, __n128);
  void *v52;
  _BYTE *v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;

  v52 = a2;
  v53 = a3;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v50 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v44 = (char *)&v42 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v12);
  v55 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v45 = v4;
  if (v17)
  {
    v49 = v11;
    v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v42 = a1;
    v43 = v18;
    v19 = a1 + v18;
    v20 = *(_QWORD *)(v5 + 72);
    v51 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v21 = swift_bridgeObjectRetain(a1);
    v54 = _swiftEmptyArrayStorage;
    v47 = v20;
    v48 = v16;
    do
    {
      v51(v16, v19, v4, v21);
      v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v46)(v16, 0, 1, v4);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v25(v16, 1, v4) == 1)
      {
        a1 = v42;
        goto LABEL_17;
      }
      v26 = v19;
      v27 = v17;
      v28 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v29 = v4;
      v30 = (uint64_t)v55;
      v31 = v5;
      v32 = (uint64_t)v49;
      v28(v49, v16, v29);
      v33 = v56;
      sub_100D531F8(v32, v52, v53, v30);
      v56 = v33;
      if (v33)
      {
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v29);
        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v42);
        return v54;
      }
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v29);
      if (v25((char *)v30, 1, v29) == 1)
      {
        sub_1004CB800((uint64_t)v55, &qword_1013E04D0);
        v5 = v31;
        v22 = v47;
        v16 = v48;
        v4 = v29;
        v23 = v27;
        v24 = v26;
      }
      else
      {
        v34 = v44;
        v28(v44, v55, v29);
        v28(v50, v34, v29);
        if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
          v54 = (_QWORD *)sub_100D0FAC8(0, v54[2] + 1, 1, (unint64_t)v54);
        v5 = v31;
        v23 = v27;
        v36 = v54[2];
        v35 = v54[3];
        v16 = v48;
        v24 = v26;
        if (v36 >= v35 >> 1)
          v54 = (_QWORD *)sub_100D0FAC8(v35 > 1, v36 + 1, 1, (unint64_t)v54);
        v37 = v54;
        v54[2] = v36 + 1;
        v22 = v47;
        v38 = (char *)v37 + v43 + v36 * v47;
        v4 = v45;
        v28(v38, v50, v45);
      }
      v19 = v24 + v22;
      v17 = v23 - 1;
    }
    while (v17);
    a1 = v42;
    v46(v16, 1, 1, v45, v21);
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    v40 = swift_bridgeObjectRetain(a1);
    v54 = _swiftEmptyArrayStorage;
    v39(v16, 1, 1, v45, v40);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v54;
}

void sub_100D54518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int64_t v28;
  _QWORD v29[2];
  _QWORD v30[5];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = a3;
  v36 = a1;
  v35 = a2;
  v27 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v28 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a3);
  v8 = 0;
  v9 = &type metadata for AnyHashable;
  v25 = v4;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v8 << 6);
      goto LABEL_25;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v28)
      goto LABEL_29;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v28)
        goto LABEL_29;
      v15 = *(_QWORD *)(v27 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v28)
          goto LABEL_29;
        v15 = *(_QWORD *)(v27 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v28)
            goto LABEL_29;
          v15 = *(_QWORD *)(v27 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_24:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_25:
    sub_1004B8968(*(_QWORD *)(v4 + 48) + 40 * v13, (uint64_t)v33);
    v31[0] = v33[0];
    v31[1] = v33[1];
    v32 = v34;
    sub_1004B8968((uint64_t)v31, (uint64_t)v30);
    v17 = sub_1004B804C(&qword_1014103B8);
    if (swift_dynamicCast(v29, v30, v9, v17, 6))
    {
      v18 = v9;
      v19 = v29[0];
      v20 = v29[1];
      ObjectType = swift_getObjectType(v29[0]);
      v30[0] = v19;
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20) & 1) != 0)
      {
        v22 = swift_unknownObjectRetain(v19);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v24 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v19);
        specialized Array._endMutation()(v10);
        v4 = v25;
      }
      v30[0] = v19;
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a4, ObjectType, v20);
      sub_10061EAEC(v11);
      swift_unknownObjectRelease(v19);
      v9 = v18;
    }
    sub_1004B89A4((uint64_t)v31);
  }
  v16 = v14 + 4;
  if (v16 >= v28)
  {
LABEL_29:
    swift_release(v4);
    return;
  }
  v15 = *(_QWORD *)(v27 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v28)
      goto LABEL_29;
    v15 = *(_QWORD *)(v27 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
}

void sub_100D547E0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  Class isa;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  __n128 v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  void *Strong;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD aBlock[5];
  _QWORD *v92;

  v8 = type metadata accessor for ImagePlaygroundConcept(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v87 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v85 = *(_QWORD *)(v15 - 8);
  v86 = v15;
  v16 = __chkstk_darwin(v15);
  v84 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS.QoSClass(0, v16);
  v82 = *(_QWORD *)(v18 - 8);
  v83 = v18;
  __chkstk_darwin(v18);
  v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1012A3880, 32, 7);
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  v89 = a3;
  swift_retain(a3);
  v88 = a4;
  v21 = objc_msgSend(a1, "editorController");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(a1, "selectionModelTranslator");
    if (v23)
    {
      v24 = v23;
      v79 = v20;
      v73 = v13;
      v74 = v12;
      v76 = v22;
      v25 = objc_msgSend(v22, "selectionPath");
      v80 = v24;
      v26 = objc_msgSend(v24, "infosForSelectionPath:", v25);
      v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v28 = v25;
      sub_100D54518((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v27, (uint64_t)v28);
      v77 = v29;
      v31 = v30;
      swift_bridgeObjectRelease(v27);
      v75 = v28;

      v78 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController);
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10060098C(0, v32, 0);
        v33 = (_QWORD *)aBlock[0];
        v34 = (_QWORD *)(v31 + 40);
        do
        {
          v35 = *(v34 - 1);
          v36 = *v34;
          v37 = swift_bridgeObjectRetain(*v34);
          static ImagePlaygroundConcept.text(_:)(v35, v36, v37);
          swift_bridgeObjectRelease(v36);
          aBlock[0] = v33;
          v39 = v33[2];
          v38 = v33[3];
          if (v39 >= v38 >> 1)
          {
            sub_10060098C(v38 > 1, v39 + 1, 1);
            v33 = (_QWORD *)aBlock[0];
          }
          v34 += 2;
          v33[2] = v39 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v39, v11, v8);
          --v32;
        }
        while (v32);
        v40 = swift_bridgeObjectRelease(v31);
      }
      else
      {
        v40 = swift_bridgeObjectRelease(v31);
        v33 = _swiftEmptyArrayStorage;
      }
      v44 = v78;
      v45 = v79;
      dispatch thunk of ImagePlaygroundViewController.concepts.setter(v33, v40);
      v46 = v77;
      v47 = v80;
      if ((unint64_t)v77 >> 62)
      {
        if (v77 < 0)
          v71 = v77;
        else
          v71 = v77 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v77);
        v72 = _CocoaArrayWrapper.endIndex.getter(v71);
        swift_bridgeObjectRelease(v46);
        if (v72)
          goto LABEL_17;
      }
      else if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        v48 = objc_msgSend(a1, "board");
        if (v48)
        {
          v49 = v48;
          v50 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v48);
          sub_1004B804C(&qword_1013E0670);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v50, "setInfos:", isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

          sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
          v53 = v81;
          v52 = v82;
          v54 = v83;
          (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v81, enum case for DispatchQoS.QoSClass.default(_:), v83);
          v55 = (void *)static OS_dispatch_queue.global(qos:)(v53);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
          v56 = (_QWORD *)swift_allocObject(&unk_1012A38A8, 48, 7);
          v56[2] = v50;
          v56[3] = v44;
          v56[4] = sub_100D574FC;
          v56[5] = v45;
          aBlock[4] = sub_100D57544;
          v92 = v56;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(_QWORD *)"";
          aBlock[2] = sub_1005D2FC0;
          aBlock[3] = &unk_1012A38C0;
          v57 = _Block_copy(aBlock);
          v58 = v50;
          v59 = v44;
          v60 = swift_retain(v45);
          v61 = v84;
          static DispatchQoS.unspecified.getter(v60);
          v90 = _swiftEmptyArrayStorage;
          v62 = sub_1004CB65C();
          v63 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
          v64 = sub_100503E88();
          v65 = v87;
          v66 = v74;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v63, v64, v74, v62);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v65, v57);

          _Block_release(v57);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v65, v66);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v61, v86);
          v67 = v92;
          swift_release(v45);
          swift_release(v67);
          return;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 104, "No board", 8, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 104, (uint64_t)"No board", 8, 2u);
        v47 = v80;
      }
      swift_bridgeObjectRelease(v46);
      dispatch thunk of ImagePlaygroundViewController.sourceImage.setter(0);
      v68 = v89 + 16;
      swift_beginAccess(v89 + 16, aBlock, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v68);
      if (Strong)
      {
        v70 = Strong;
        objc_msgSend(Strong, "presentViewController:animated:completion:", *(_QWORD *)&v88[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
        swift_release(v45);

      }
      else
      {
        swift_release(v45);

      }
      return;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80, "No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 80, (uint64_t)"No selection model translator", 29, 2u);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79, "No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 79, (uint64_t)"No editor controller", 20, 2u);
  }
  v41 = v89 + 16;
  swift_beginAccess(v89 + 16, aBlock, 0, 0);
  v42 = (void *)swift_unknownObjectWeakLoadStrong(v41);
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "presentViewController:animated:completion:", *(_QWORD *)&v88[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
    swift_release(v20);

  }
  else
  {
    swift_release(v20);
  }
}

uint64_t sub_100D550BC(uint64_t a1, void (*a2)(_QWORD *, Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *)(CKRecordID recordID, Swift::String recordType), uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  NSString v35;
  id v36;
  char *v37;
  void *v38;
  char *v39;
  id v40;
  id v41;
  _BYTE *v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  void *v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  char *v68;
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD *, Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *)(CKRecordID, Swift::String), uint64_t);
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v81;
  void (*v82)(char *, unint64_t, uint64_t, __n128);
  char v83[8];
  uint64_t v84;
  char v85[8];
  char v86[8];
  uint64_t v87;
  uint64_t v88;
  char v89[16];
  char v90[96];
  char *v91;

  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v76 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v71 - v9;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v75 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v79 = (char *)&v71 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v71 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v73 = a3;
    v74 = a2;
    v91 = (char *)_swiftEmptyArrayStorage;
    v77 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v20 = a1 + v77;
    v21 = *(_QWORD *)(v12 + 72);
    v82 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 16);
    v72 = a1;
    v22 = swift_bridgeObjectRetain(a1);
    v78 = v12;
    v81 = v21;
    while (1)
    {
      v82(v10, v20, v11, v22);
      v80 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
      v80(v10, 0, 1, v11);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v23(v10, 1, v11) == 1)
        break;
      v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v24(v18, v10, v11);
      if (URL.startAccessingSecurityScopedResource()())
      {
        v24(v79, v18, v11);
        v25 = v91;
        if ((swift_isUniquelyReferenced_nonNull_native(v91) & 1) == 0)
        {
          sub_1006009A8(0, *((_QWORD *)v25 + 2) + 1, 1);
          v25 = v91;
        }
        v27 = *((_QWORD *)v25 + 2);
        v26 = *((_QWORD *)v25 + 3);
        if (v27 >= v26 >> 1)
        {
          sub_1006009A8(v26 > 1, v27 + 1, 1);
          v25 = v91;
        }
        *((_QWORD *)v25 + 2) = v27 + 1;
        v21 = v81;
        v24(&v25[v77 + v27 * v81], v79, v11);
        v91 = v25;
        v12 = v78;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
      }
      v20 += v21;
      if (!--v19)
      {
        v80(v10, 1, 1, v11);
        break;
      }
    }
    v32 = v72;
    swift_bridgeObjectRelease(v72);
    sub_1004CB800((uint64_t)v10, &qword_1013E04D0);
    v33 = v91;
    v34 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    v35 = String._bridgeToObjectiveC()();
    v91 = 0;
    v36 = objc_msgSend(v34, "initWithSignature:error:", v35, &v91);

    v37 = v91;
    if (v36)
    {
      v38 = (void *)objc_opt_self(NSFileManager);
      v39 = v37;
      v40 = objc_msgSend(v38, "defaultManager");
      v41 = v36;
      v42 = v40;
      v43 = sub_100D5417C(v32, v41, v42);

      v44 = swift_allocObject(&unk_1012A3808, 24, 7);
      *(_QWORD *)(v44 + 16) = v41;
      v45 = v41;
      v74(v43, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v44);

      swift_bridgeObjectRelease(v43);
      swift_release(v44);
    }
    else
    {
      v46 = v91;
      v47 = _convertNSErrorToError(_:)(v37);

      swift_willThrow(v48);
      if (qword_1013DD7B0 != -1)
        swift_once(&qword_1013DD7B0, sub_100A03678);
      swift_beginAccess(&static OS_os_log.crlInsertMedia, &v91, 0, 0);
      v49 = (void *)static OS_os_log.crlInsertMedia;
      v50 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v50, v90);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      swift_getErrorValue(v47, v89, v86);
      v52 = v87;
      v53 = v88;
      v79 = v49;
      v54 = Error.publicDescription.getter(v52, v53);
      v56 = v55;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v57 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v57;
      *(_QWORD *)(inited + 32) = v54;
      *(_QWORD *)(inited + 40) = v56;
      swift_getErrorValue(v47, v85, v83);
      v58 = Error.fullDescription.getter(v84);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v57;
      *(_QWORD *)(inited + 72) = v58;
      *(_QWORD *)(inited + 80) = v59;
      v60 = static os_log_type_t.error.getter(v58);
      v61 = v79;
      sub_100A06EBC((uint64_t)v79, &_mh_execute_header, v60, "Error creating temporary directory: %{public}@ <%@>", 51, 2, inited);
      swift_setDeallocating(inited);
      v62 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v62);

      v74(_swiftEmptyArrayStorage, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      swift_errorRelease(v47);
    }
    v63 = v33[2];
    v64 = v76;
    v65 = v78;
    v66 = v75;
    v67 = v80;
    if (v63)
    {
      v68 = (char *)v33 + v77;
      v69 = swift_retain(v33);
      while (1)
      {
        v82(v64, (unint64_t)v68, v11, v69);
        v67(v64, 0, 1, v11);
        if (v23(v64, 1, v11) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v66, v64, v11);
        URL.stopAccessingSecurityScopedResource()();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v11);
        v68 += v81;
        if (!--v63)
          goto LABEL_27;
      }
    }
    else
    {
      v69 = swift_retain(v33);
LABEL_27:
      v70.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v67)(v64, 1, 1, v11, v69);
    }
    return swift_release_n(v33, 2, v70);
  }
  else
  {
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, &v91, 0, 0);
    v28 = (id)static OS_os_log.crlInsertMedia;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "No URLs.", 8, 2, (uint64_t)_swiftEmptyArrayStorage);

    return ((uint64_t (*)(_QWORD *, Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *)(CKRecordID, Swift::String), _QWORD))a2)(_swiftEmptyArrayStorage, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

void sub_100D5585C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  double *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  Class isa;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  void *v57;
  id v58;
  id v59;
  __n128 v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t Strong;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  double *v91;
  _QWORD aBlock[5];
  _QWORD *v93;

  v8 = type metadata accessor for ImagePlaygroundConcept(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v88 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v86 = *(_QWORD *)(v15 - 8);
  v87 = v15;
  v16 = __chkstk_darwin(v15);
  v85 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS.QoSClass(0, v16);
  v83 = *(_QWORD *)(v18 - 8);
  v84 = v18;
  __chkstk_darwin(v18);
  v82 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject(&unk_1012A3740, 32, 7);
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  v90 = a3;
  swift_retain(a3);
  v89 = a4;
  v21 = objc_msgSend(a1, "editorController");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(a1, "selectionModelTranslator");
    if (v23)
    {
      v24 = v23;
      v80 = v20;
      v74 = v13;
      v75 = v12;
      v77 = v22;
      v25 = objc_msgSend(v22, "selectionPath");
      v81 = v24;
      v26 = objc_msgSend(v24, "infosForSelectionPath:", v25);
      v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

      v28 = v25;
      sub_100D54518((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v27, (uint64_t)v28);
      v78 = v29;
      v31 = v30;
      swift_bridgeObjectRelease();
      v76 = v28;

      v79 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController);
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10060098C(0, v32, 0);
        v33 = (double *)aBlock[0];
        v34 = (_QWORD *)(v31 + 40);
        do
        {
          v35 = *(v34 - 1);
          v36 = *v34;
          v37 = swift_bridgeObjectRetain(*v34);
          static ImagePlaygroundConcept.text(_:)(v35, v36, v37);
          swift_bridgeObjectRelease();
          aBlock[0] = v33;
          v39 = *((_QWORD *)v33 + 2);
          v38 = *((_QWORD *)v33 + 3);
          if (v39 >= v38 >> 1)
          {
            sub_10060098C(v38 > 1, v39 + 1, 1);
            v33 = (double *)aBlock[0];
          }
          v34 += 2;
          *((_QWORD *)v33 + 2) = v39 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v39, v11, v8);
          --v32;
        }
        while (v32);
        v40 = swift_bridgeObjectRelease();
      }
      else
      {
        v40 = swift_bridgeObjectRelease();
        v33 = _swiftEmptyArrayStorage;
      }
      v45 = v79;
      v46 = v80;
      dispatch thunk of ImagePlaygroundViewController.concepts.setter(v33, v40);
      v47 = v81;
      if ((unint64_t)v78 >> 62)
      {
        if (v78 < 0)
          v72 = v78;
        else
          v72 = v78 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v78);
        v73 = _CocoaArrayWrapper.endIndex.getter(v72);
        swift_bridgeObjectRelease();
        if (v73)
          goto LABEL_17;
      }
      else if (*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        v48 = objc_msgSend(a1, "board");
        if (v48)
        {
          v49 = v48;
          v50 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v48);
          sub_1004B804C(&qword_1013E0670);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v50, "setInfos:", isa, swift_bridgeObjectRelease().n128_f64[0]);

          sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
          v53 = v82;
          v52 = v83;
          v54 = v84;
          (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, enum case for DispatchQoS.QoSClass.default(_:), v84);
          v55 = (void *)static OS_dispatch_queue.global(qos:)(v53);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
          v56 = (_QWORD *)swift_allocObject(&unk_1012A3768, 48, 7);
          v56[2] = v50;
          v56[3] = v45;
          v56[4] = sub_100D573D8;
          v56[5] = v46;
          aBlock[4] = sub_100D573E4;
          v93 = v56;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(_QWORD *)"";
          aBlock[2] = sub_1005D2FC0;
          aBlock[3] = &unk_1012A3780;
          v57 = _Block_copy(aBlock);
          v58 = v50;
          v59 = v45;
          v60 = swift_retain(v46);
          v61 = v85;
          static DispatchQoS.unspecified.getter(v60);
          v91 = _swiftEmptyArrayStorage;
          v62 = sub_1004CB65C();
          v63 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
          v64 = sub_100503E88();
          v65 = v88;
          v66 = v75;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v91, v63, v64, v75, v62);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v65, v57);

          _Block_release(v57);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v65, v66);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v87);
          v67 = v93;
          swift_release(v46);
          swift_release(v67);
          return;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 104, "No board", 8, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 104, (uint64_t)"No board", 8, 2u);
        v47 = v81;
      }
      swift_bridgeObjectRelease();
      dispatch thunk of ImagePlaygroundViewController.sourceImage.setter(0);
      v68 = v90 + 16;
      swift_beginAccess(v90 + 16, aBlock, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v68);
      if (Strong)
      {
        v70 = (void *)Strong;
        v71 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

        objc_msgSend(v71, "presentViewController:animated:completion:", *(_QWORD *)&v89[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
        swift_release(v46);

      }
      else
      {
        swift_release(v46);

      }
      return;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80, "No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 80, (uint64_t)"No selection model translator", 29, 2u);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79, "No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 79, (uint64_t)"No editor controller", 20, 2u);
  }
  v41 = v90 + 16;
  swift_beginAccess(v90 + 16, aBlock, 0, 0);
  v42 = swift_unknownObjectWeakLoadStrong(v41);
  if (v42)
  {
    v43 = (void *)v42;
    v44 = *(id *)(v42 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

    objc_msgSend(v44, "presentViewController:animated:completion:", *(_QWORD *)&v89[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
    swift_release(v20);

  }
  else
  {
    swift_release(v20);
  }
}

void sub_100D56178(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  double *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double *v37;
  id v38;
  NSString v39;
  id v40;
  double *v41;
  void *v42;
  double *v43;
  _BYTE *v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  double *v56;
  uint64_t v57;
  __n128 v58;
  void *v59;
  uint64_t v60;
  uint64_t inited;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  double (*v80)(char *, uint64_t, uint64_t, uint64_t, __n128);
  double *v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  double *v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(char *, unint64_t, uint64_t, __n128);
  char v96[8];
  uint64_t v97;
  char v98[8];
  char v99[8];
  uint64_t v100;
  uint64_t v101;
  char v102[16];
  char v103[104];
  double *v104;

  v89 = a2;
  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v86 - v7;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v92 = (double *)((char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v16 = (char *)&v86 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v87 = v14;
    v88 = v5;
    v104 = _swiftEmptyArrayStorage;
    v90 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v18 = a1 + v90;
    v19 = *(_QWORD *)(v10 + 72);
    v95 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
    v86 = a1;
    v20 = swift_bridgeObjectRetain(a1);
    v91 = v10;
    v94 = v19;
    while (1)
    {
      v95(v8, v18, v9, v20);
      v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v93(v8, 0, 1, v9);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (v21(v8, 1, v9) == 1)
        break;
      v22 = v10;
      v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23(v16, v8, v9);
      if (URL.startAccessingSecurityScopedResource()())
      {
        v23((char *)v92, v16, v9);
        v24 = v104;
        if ((swift_isUniquelyReferenced_nonNull_native(v104) & 1) == 0)
        {
          sub_1006009A8(0, *((_QWORD *)v24 + 2) + 1, 1);
          v24 = v104;
        }
        v26 = *((_QWORD *)v24 + 2);
        v25 = *((_QWORD *)v24 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_1006009A8(v25 > 1, v26 + 1, 1);
          v24 = v104;
        }
        *((_QWORD *)v24 + 2) = v26 + 1;
        v27 = (char *)v24 + v90 + v26 * v94;
        v19 = v94;
        v23(v27, (char *)v92, v9);
        v104 = v24;
        v10 = v91;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v9);
        v10 = v22;
      }
      v18 += v19;
      if (!--v17)
      {
        v93(v8, 1, 1, v9);
        break;
      }
    }
    v36 = v86;
    swift_bridgeObjectRelease();
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
    v37 = v104;
    v38 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    v39 = String._bridgeToObjectiveC()();
    v104 = 0;
    v40 = objc_msgSend(v38, "initWithSignature:error:", v39, &v104);

    v41 = v104;
    v92 = v37;
    if (v40)
    {
      v42 = (void *)objc_opt_self(NSFileManager);
      v43 = v41;
      v44 = objc_msgSend(v42, "defaultManager");
      v45 = v40;
      v46 = sub_100D5417C(v36, v45, v44);

      v47 = swift_allocObject(&unk_1012A36C8, 24, 7);
      *(_QWORD *)(v47 + 16) = v45;
      v48 = swift_allocObject(&unk_1012A36F0, 32, 7);
      *(_QWORD *)(v48 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      *(_QWORD *)(v48 + 24) = v47;
      v49 = v45;
      swift_retain(v47);
      v50 = v89;
      sub_100877224((uint64_t)v46, sub_1005B72B0, v48);
      v51 = v50;
      *(_QWORD *)&v52 = swift_release(v48).n128_u64[0];
      v53 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
      v54 = *(_QWORD *)(v51 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
      if (v54)
      {
        objc_msgSend(*(id *)(v54 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController), "dismissViewControllerAnimated:completion:", 1, 0, v52);
        v55 = *(void **)(v51 + v53);
      }
      else
      {
        v55 = 0;
      }
      *(_QWORD *)(v51 + v53) = 0;

      swift_bridgeObjectRelease();
      swift_release(v47);

      v78 = v88;
      v10 = v91;
      v79 = v87;
      v80 = (double (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v93;
      v81 = v92;
      v82 = *((_QWORD *)v92 + 2);
      if (v82)
        goto LABEL_29;
    }
    else
    {
      v56 = v104;
      v57 = _convertNSErrorToError(_:)(v41);

      swift_willThrow(v58);
      if (qword_1013DD7B0 != -1)
        swift_once(&qword_1013DD7B0, sub_100A03678);
      swift_beginAccess(&static OS_os_log.crlInsertMedia, &v104, 0, 0);
      v59 = (void *)static OS_os_log.crlInsertMedia;
      v60 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v60, v103);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      swift_getErrorValue(v57, v102, v99);
      v62 = v100;
      v63 = v101;
      v64 = v59;
      v65 = Error.publicDescription.getter(v62, v63);
      v67 = v66;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v68 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v68;
      *(_QWORD *)(inited + 32) = v65;
      *(_QWORD *)(inited + 40) = v67;
      v91 = v57;
      swift_getErrorValue(v57, v98, v96);
      v69 = Error.fullDescription.getter(v97);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v68;
      *(_QWORD *)(inited + 72) = v69;
      *(_QWORD *)(inited + 80) = v70;
      v71 = static os_log_type_t.error.getter(v69);
      sub_100A06EBC((uint64_t)v64, &_mh_execute_header, v71, "Error creating temporary directory: %{public}@ <%@>", 51, 2, inited);
      swift_setDeallocating(inited);
      v72 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v72);

      v73 = swift_allocObject(&unk_1012A36A0, 32, 7);
      *(_QWORD *)(v73 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      *(_QWORD *)(v73 + 24) = 0;
      v74 = v89;
      sub_100877224((uint64_t)_swiftEmptyArrayStorage, sub_1005B71BC, v73);
      *(_QWORD *)&v75 = swift_release(v73).n128_u64[0];
      v76 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
      v77 = *(char **)(v74 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
      if (v77)
      {
        objc_msgSend(*(id *)&v77[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], "dismissViewControllerAnimated:completion:", 1, 0, v75);
        v77 = *(char **)(v74 + v76);
      }
      v78 = v88;
      v79 = v87;
      v80 = (double (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v93;
      v81 = v92;
      *(_QWORD *)(v74 + v76) = 0;

      swift_errorRelease(v91);
      v82 = *((_QWORD *)v81 + 2);
      if (v82)
      {
LABEL_29:
        v84 = (char *)v81 + v90;
        v83 = swift_retain(v81);
        while (1)
        {
          v95(v78, (unint64_t)v84, v9, v83);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v80)(v78, 0, 1, v9);
          if (v21(v78, 1, v9) == 1)
            break;
          (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v79, v78, v9);
          URL.stopAccessingSecurityScopedResource()();
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v79, v9);
          v84 += v94;
          if (!--v82)
            goto LABEL_32;
        }
LABEL_33:
        swift_release_n(v81, 2, v85);
        return;
      }
    }
    v83 = swift_retain(v81);
LABEL_32:
    v85.n128_f64[0] = v80(v78, 1, 1, v9, v83);
    goto LABEL_33;
  }
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, &v104, 0, 0);
  v28 = (id)static OS_os_log.crlInsertMedia;
  v30 = static os_log_type_t.default.getter(v29);
  sub_100A06EBC((uint64_t)v28, &_mh_execute_header, v30, "No URLs.", 8, 2, (uint64_t)_swiftEmptyArrayStorage);

  v31 = swift_allocObject(&unk_1012A3718, 32, 7);
  *(_QWORD *)(v31 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
  *(_QWORD *)(v31 + 24) = 0;
  v32 = v89;
  sub_100877224((uint64_t)_swiftEmptyArrayStorage, sub_1005B72B0, v31);
  *(_QWORD *)&v33 = swift_release(v31).n128_u64[0];
  v34 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
  v35 = *(char **)(v32 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
  if (v35)
  {
    objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], "dismissViewControllerAnimated:completion:", 1, 0, v33);
    v35 = *(char **)(v32 + v34);
  }
  *(_QWORD *)(v32 + v34) = 0;

}

void sub_100D56A90(void *a1)
{
  char v2;
  char v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  ValueMetadata *v39;
  unint64_t v40;

  v39 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  v40 = sub_10054F350();
  v2 = isFeatureEnabled(_:)(v38);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
  if ((v2 & 1) == 0)
    return;
  v39 = &type metadata for CRLFeatureFlags;
  v40 = sub_1004DB6DC();
  LOBYTE(v38[0]) = 12;
  v3 = isFeatureEnabled(_:)(v38);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
  if ((v3 & 1) == 0
    || !objc_msgSend((id)type metadata accessor for ImagePlaygroundViewController(0, v4), "available"))
  {
    return;
  }
  v5 = objc_msgSend(a1, "editorController");
  if (!v5)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 62, "No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 62, (uint64_t)"No editor controller", 20, 2u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(a1, "selectionModelTranslator");
  if (!v7)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 63, "No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 63, (uint64_t)"No selection model translator", 29, 2u);

    return;
  }
  v28 = v7;
  v29 = objc_msgSend(v6, "selectionPath");
  v8 = objc_msgSend(v28, "infosForSelectionPath:");
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v10 = 0;
  v11 = v9 + 56;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v9 + 56);
  v15 = (unint64_t)(v12 + 63) >> 6;
  if (v14)
    goto LABEL_11;
LABEL_12:
  v18 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v18 >= v15)
  {
LABEL_33:

    swift_release(v9);
    return;
  }
  v19 = *(_QWORD *)(v11 + 8 * v18);
  ++v10;
  if (!v19)
  {
    v10 = v18 + 1;
    if (v18 + 1 >= v15)
      goto LABEL_33;
    v19 = *(_QWORD *)(v11 + 8 * v10);
    if (!v19)
    {
      v10 = v18 + 2;
      if (v18 + 2 >= v15)
        goto LABEL_33;
      v19 = *(_QWORD *)(v11 + 8 * v10);
      if (!v19)
      {
        v20 = v18 + 3;
        if (v20 < v15)
        {
          v19 = *(_QWORD *)(v11 + 8 * v20);
          if (v19)
          {
            v10 = v20;
            goto LABEL_25;
          }
          while (1)
          {
            v10 = v20 + 1;
            if (__OFADD__(v20, 1))
              break;
            if (v10 >= v15)
              goto LABEL_33;
            v19 = *(_QWORD *)(v11 + 8 * v10);
            ++v20;
            if (v19)
              goto LABEL_25;
          }
LABEL_39:
          __break(1u);
          return;
        }
        goto LABEL_33;
      }
    }
  }
LABEL_25:
  v14 = (v19 - 1) & v19;
  for (i = __clz(__rbit64(v19)) + (v10 << 6); ; i = v16 | (v10 << 6))
  {
    sub_1004B8968(*(_QWORD *)(v9 + 48) + 40 * i, (uint64_t)v38);
    v21 = sub_1004B804C(&qword_1014103A8);
    if ((swift_dynamicCast(v33, v38, &type metadata for AnyHashable, v21, 6) & 1) == 0)
    {
      v34 = 0;
      memset(v33, 0, sizeof(v33));
      sub_1004CB800((uint64_t)v33, &qword_1014103B0);
      if (!v14)
        goto LABEL_12;
      goto LABEL_11;
    }
    sub_1004DB728(v33, (uint64_t)v35);
    v22 = v36;
    v23 = v37;
    sub_1004BB5A4(v35, v36);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_1004E90B0((uint64_t)v35, (uint64_t)v30);
    if ((v24 & 1) != 0)
    {

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
      swift_release(v9);
      goto LABEL_37;
    }
    v25 = v31;
    v26 = v32;
    sub_1004BB5A4(v30, v31);
    v27 = *(_QWORD *)((*(uint64_t (**)(id, uint64_t, uint64_t))(v26 + 16))(v29, v25, v26) + 16);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
    if (v27)
      break;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v35);
    if (!v14)
      goto LABEL_12;
LABEL_11:
    v16 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
  }
  swift_release(v9);

LABEL_37:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v35);
}

void sub_100D56F68()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  NSURL *v7;
  void *v8;
  void *v9;
  void *v10;
  _BYTE v11[24];

  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, v11, 0, 0);
  v1 = (id)static OS_os_log.crlInsertMedia;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC8FreeformP33_A57276A3C6F5E8852856D4D908CBDB8040CRLImagePlaygroundViewControllerDelegate_helper);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_delegate);
    if (v6)
    {
      v8 = (void *)v6;
      URL._bridgeToObjectiveC()(v7);
      v10 = v9;
      objc_msgSend(v8, "generativePlaygroundHelper:didCreateImageAt:", v5, v9);

      swift_unknownObjectRelease(v8);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 181, "No delegate", 11, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 181, (uint64_t)"No delegate", 11, 2u);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 180, "No helper", 9, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 180, (uint64_t)"No helper", 9, 2u);
  }
}

void sub_100D57198()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, v8, 0, 0);
  v1 = (id)static OS_os_log.crlInsertMedia;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtC8FreeformP33_A57276A3C6F5E8852856D4D908CBDB8040CRLImagePlaygroundViewControllerDelegate_helper);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_delegate);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "generativePlaygroundHelperDidCancel:", v5);

      swift_unknownObjectRelease(v7);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 190, "No delegate", 11, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 190, (uint64_t)"No delegate", 11, 2u);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 189, "No helper", 9, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2u, 189, (uint64_t)"No helper", 9, 2u);
  }
}

uint64_t sub_100D573B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100D573D8()
{
  uint64_t v0;

  sub_100876FC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100D573E4()
{
  uint64_t v0;

  return sub_100D52E0C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

double sub_100D573F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D57400(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100D5740C()
{
  uint64_t v0;

  return sub_100D5302C(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100D57418()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100D5743C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100D57470()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1)
    return v1(result);
  return result;
}

uint64_t sub_100D574AC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100D574FC()
{
  uint64_t v0;

  sub_100541220(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100D57508()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100D57564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(_QWORD *)(a3 + 16) && (v13 = sub_100843264(a2), (v14 & 1) != 0))
  {
    v15 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v13) + 40);
    sub_1004E1B3C(a2, (uint64_t)v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if ((v15 & 1) != 0)
    {
      v16 = 1;
      goto LABEL_10;
    }
  }
  else
  {
    sub_1004E1B3C(a2, (uint64_t)v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  }
  if (*(_QWORD *)(a3 + 16) && (v17 = sub_100843264((uint64_t)v12), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v17);
    swift_beginAccess(v19 + 24, v23, 0, 0);
    v20 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain(v20);
    v16 = sub_10062158C((uint64_t)v9, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1004BBB8C((uint64_t)v12);
  return v16 & 1;
}

uint64_t sub_100D576F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 43, 7);
}

uint64_t type metadata accessor for CRLTransientSyncExclusionCollection.BoardSyncExclusionCollection()
{
  return objc_opt_self(_TtCV8Freeform35CRLTransientSyncExclusionCollection28BoardSyncExclusionCollection);
}

ValueMetadata *type metadata accessor for CRLTransientSyncExclusionCollection()
{
  return &type metadata for CRLTransientSyncExclusionCollection;
}

uint64_t sub_100D57754(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_100843264(a1), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_retain(v10);
  }
  else
  {
    v11 = type metadata accessor for CRLTransientSyncExclusionCollection.BoardSyncExclusionCollection();
    v10 = swift_allocObject(v11, 43, 7);
    *(_WORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = &_swiftEmptySetSingleton;
    *(_QWORD *)(v10 + 32) = &_swiftEmptySetSingleton;
    *(_WORD *)(v10 + 40) = 0;
    *(_BYTE *)(v10 + 42) = 0;
    sub_1004E1B3C(a1, (uint64_t)v6);
    swift_retain(v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_10082A00C(v10, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    *v2 = v15;
    swift_bridgeObjectRelease();
    sub_1004BBB8C((uint64_t)v6);
  }
  return v10;
}

double sub_100D57874(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  double result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = *v2;
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = sub_100843264(a2);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_beginAccess(v12 + 24, v15, 33, 0);
      swift_retain(v12);
      sub_100B26E60(a1, (uint64_t)v8);
      sub_1004C1F2C((uint64_t)v8);
      swift_endAccess(v15);
      if (*(_BYTE *)(v12 + 41) == 1)
      {
        *(_BYTE *)(v12 + 16) = 0;
        *(_BYTE *)(v12 + 40) = 0;
      }
      if (*(_BYTE *)(v12 + 42) == 1)
      {
        *(_BYTE *)(v12 + 16) = 0;
        *(_BYTE *)(v12 + 40) = 0;
        v13 = *(_QWORD *)(v12 + 24);
        *(_QWORD *)(v12 + 24) = &_swiftEmptySetSingleton;
        swift_release(v12);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
      }
      else
      {
        *(_QWORD *)&result = swift_release(v12).n128_u64[0];
      }
    }
  }
  return result;
}

double sub_100D5798C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v5;
  double result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = *v2;
  if (*(_QWORD *)(v3 + 16))
  {
    v5 = sub_100843264(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
      *(_BYTE *)(v8 + 16) = 0;
      if ((a2 & 1) != 0)
        *(_BYTE *)(v8 + 40) = 0;
      if (*(_BYTE *)(v8 + 42) == 1)
      {
        *(_BYTE *)(v8 + 16) = 0;
        *(_BYTE *)(v8 + 40) = 0;
        swift_beginAccess(v8 + 24, v10, 1, 0);
        v9 = *(_QWORD *)(v8 + 24);
        *(_QWORD *)(v8 + 24) = &_swiftEmptySetSingleton;
        *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_100D57A14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100D57A48 + 4 * byte_100F357F0[a1]))(0x6E6F697469736F70, 0xE800000000000000);
}

uint64_t sub_100D57A48()
{
  return 1702521203;
}

uint64_t sub_100D57A58()
{
  return 0x656C676E61;
}

uint64_t sub_100D57A6C()
{
  return 0x6C61566874646977;
}

uint64_t sub_100D57A88()
{
  return 0x6156746867696568;
}

uint64_t sub_100D57AA8()
{
  return 0x746E6F7A69726F68;
}

uint64_t sub_100D57ACC()
{
  return 0x6C61636974726576;
}

unint64_t sub_100D57AEC()
{
  return 0xD000000000000010;
}

uint64_t sub_100D57B0C(_QWORD *a1)
{
  float *v1;
  uint64_t v2;
  float *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1014105A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D58504();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLCanvasInfoGeometryData.CodingKeys, &type metadata for CRLCanvasInfoGeometryData.CodingKeys, v11, v9, v10);
  v23 = *(_QWORD *)v3;
  HIBYTE(v22) = 0;
  v12 = sub_100786B14();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, (char *)&v22 + 7, v5, &type metadata for CRLPointData, v12);
  if (!v2)
  {
    v23 = *((_QWORD *)v3 + 1);
    HIBYTE(v22) = 1;
    v13 = sub_1009390DC();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, (char *)&v22 + 7, v5, &type metadata for CRLSizeData, v13);
    v14 = v3[4];
    LOBYTE(v23) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v14);
    v15 = *((unsigned __int8 *)v3 + 20);
    LOBYTE(v23) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v23, v5);
    v16 = *((unsigned __int8 *)v3 + 21);
    LOBYTE(v23) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v16, &v23, v5);
    v17 = *((unsigned __int8 *)v3 + 22);
    LOBYTE(v23) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v23, v5);
    v18 = *((unsigned __int8 *)v3 + 23);
    LOBYTE(v23) = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v18, &v23, v5);
    v23 = *((_QWORD *)v3 + 3);
    HIBYTE(v22) = 7;
    v19 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v20 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, (char *)&v22 + 7, v5, v19, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_100D57D64(char *a1, char *a2)
{
  return qword_100F35BF8[*a1] == qword_100F35BF8[*a2];
}

Swift::Int sub_100D57D88()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F35BF8[v1]);
  return Hasher._finalize()();
}

void sub_100D57DD4()
{
  char *v0;

  Hasher._combine(_:)(qword_100F35BF8[*v0]);
}

Swift::Int sub_100D57E08(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F35BF8[v2]);
  return Hasher._finalize()();
}

void sub_100D57E50(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F35BF8[*v1];
}

uint64_t sub_100D57E68()
{
  unsigned __int8 *v0;

  return sub_100D57A14(*v0);
}

uint64_t sub_100D57E70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100D58670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100D57E94()
{
  char *v0;

  return qword_100F35BF8[*v0];
}

void sub_100D57EAC(_QWORD *a1@<X8>)
{
  *a1 = &off_1012641E0;
}

uint64_t sub_100D57EBC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D584BC();
  v5 = sub_100D58504();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100D57F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D58504();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D57F28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D58504();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100D57F50(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_100D57B08(v5, v6) & 1;
}

double sub_100D57F88@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];

  sub_100D589FC(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100D57FC0(_QWORD *a1)
{
  return sub_100D57B0C(a1);
}

uint64_t sub_100D57FD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D58D08();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D58014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100D583DC();
  v7 = sub_100D58D4C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D58070(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D58D08();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100D580A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D5862C();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100D580F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100D5862C();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D58138(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D5862C();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100D58170(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && ((*(unsigned __int8 *)(a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 21) ^ *(unsigned __int8 *)(a2 + 21)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 22) ^ *(unsigned __int8 *)(a2 + 22)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 23) ^ *(unsigned __int8 *)(a2 + 23)) & 1) == 0)
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t initializeWithCopy for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLCanvasInfoGeometryData()
{
  return &type metadata for CRLCanvasInfoGeometryData;
}

unint64_t sub_100D5834C()
{
  unint64_t result;

  result = qword_101410540;
  if (!qword_101410540)
  {
    result = swift_getWitnessTable(&unk_100F3582C, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_101410540);
  }
  return result;
}

unint64_t sub_100D58394()
{
  unint64_t result;

  result = qword_101410548;
  if (!qword_101410548)
  {
    result = swift_getWitnessTable(&unk_100F35874, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_101410548);
  }
  return result;
}

unint64_t sub_100D583DC()
{
  unint64_t result;

  result = qword_101410550;
  if (!qword_101410550)
  {
    result = swift_getWitnessTable(&unk_100F358D4, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_101410550);
  }
  return result;
}

unint64_t sub_100D5842C()
{
  unint64_t result;

  result = qword_101410558;
  if (!qword_101410558)
  {
    result = swift_getWitnessTable(&unk_100F35954, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410558);
  }
  return result;
}

unint64_t sub_100D58474()
{
  unint64_t result;

  result = qword_101410560;
  if (!qword_101410560)
  {
    result = swift_getWitnessTable(&unk_100F35A64, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410560);
  }
  return result;
}

unint64_t sub_100D584BC()
{
  unint64_t result;

  result = qword_101410568;
  if (!qword_101410568)
  {
    result = swift_getWitnessTable(&unk_100F35A2C, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410568);
  }
  return result;
}

unint64_t sub_100D58504()
{
  unint64_t result;

  result = qword_101410570;
  if (!qword_101410570)
  {
    result = swift_getWitnessTable(&unk_100F3598C, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410570);
  }
  return result;
}

unint64_t sub_100D5854C()
{
  unint64_t result;

  result = qword_101410578;
  if (!qword_101410578)
  {
    result = swift_getWitnessTable(&unk_100F35A04, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410578);
  }
  return result;
}

unint64_t sub_100D58594()
{
  unint64_t result;

  result = qword_101410580;
  if (!qword_101410580)
  {
    result = swift_getWitnessTable(&unk_100F359DC, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101410580);
  }
  return result;
}

unint64_t sub_100D585DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101410588;
  if (!qword_101410588)
  {
    v1 = sub_1004CB6A4(&qword_101410590);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_101410588);
  }
  return result;
}

unint64_t sub_100D5862C()
{
  unint64_t result;

  result = qword_101410598;
  if (!qword_101410598)
  {
    result = swift_getWitnessTable(&unk_100F3590C, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_101410598);
  }
  return result;
}

uint64_t sub_100D58670(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697469736F70, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702521203, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C676E61, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6C61566874646977 && a2 == 0xEA00000000006469)
  {
    v9 = 0xEA00000000006469;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C61566874646977, 0xEA00000000006469, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x6156746867696568 && a2 == 0xEB0000000064696CLL)
  {
    v10 = 0xEB0000000064696CLL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6156746867696568, 0xEB0000000064696CLL, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x746E6F7A69726F68 && a2 == 0xEE0070696C466C61)
  {
    v11 = 0xEE0070696C466C61;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F7A69726F68, 0xEE0070696C466C61, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6C61636974726576 && a2 == 0xEC00000070696C46)
  {
    v12 = 0xEC00000070696C46;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C61636974726576, 0xEC00000070696C46, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 7;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_100D589FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  char v29;
  uint64_t v30;

  v5 = sub_1004B804C(&qword_1014105A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100D58504();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLCanvasInfoGeometryData.CodingKeys, &type metadata for CRLCanvasInfoGeometryData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
    v12 = sub_100786A28();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLPointData, &v29, v5, &type metadata for CRLPointData, v12);
    v13 = v30;
    v29 = 1;
    v14 = sub_100939098();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLSizeData, &v29, v5, &type metadata for CRLSizeData, v14);
    v15 = v30;
    LOBYTE(v30) = 2;
    KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    v17 = v16;
    LOBYTE(v30) = 3;
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    LOBYTE(v30) = 4;
    v19 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    LOBYTE(v30) = 5;
    v28 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    LOBYTE(v30) = 6;
    v27 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
    v20 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v29 = 7;
    v21 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v20, &v29, v5, v20, v21);
    HIDWORD(v25) = v19 & 1;
    v26 = v18 & 1;
    v22 = v28 & 1;
    v23 = v27 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v24 = v30;
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v15;
    *(_DWORD *)(a2 + 16) = v17;
    *(_BYTE *)(a2 + 20) = v26;
    *(_BYTE *)(a2 + 21) = BYTE4(v25);
    *(_BYTE *)(a2 + 22) = v22;
    *(_BYTE *)(a2 + 23) = v23;
    *(_QWORD *)(a2 + 24) = v24;
  }
}

unint64_t sub_100D58D08()
{
  unint64_t result;

  result = qword_1014105B0;
  if (!qword_1014105B0)
  {
    result = swift_getWitnessTable(&unk_100F35AB4, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_1014105B0);
  }
  return result;
}

unint64_t sub_100D58D4C()
{
  unint64_t result;

  result = qword_1014105B8;
  if (!qword_1014105B8)
  {
    result = swift_getWitnessTable(&unk_100F35A8C, &type metadata for CRLCanvasInfoGeometryData);
    atomic_store(result, (unint64_t *)&qword_1014105B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLCanvasInfoGeometryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100D58DDC + 4 * byte_100F357FD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100D58E10 + 4 * byte_100F357F8[v4]))();
}

uint64_t sub_100D58E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D58E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D58E20);
  return result;
}

uint64_t sub_100D58E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D58E34);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100D58E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D58E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasInfoGeometryData.CodingKeys()
{
  return &type metadata for CRLCanvasInfoGeometryData.CodingKeys;
}

unint64_t sub_100D58E60()
{
  unint64_t result;

  result = qword_1014105C0;
  if (!qword_1014105C0)
  {
    result = swift_getWitnessTable(&unk_100F35BC8, &type metadata for CRLCanvasInfoGeometryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1014105C0);
  }
  return result;
}

uint64_t sub_100D58EA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_100D58EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = _convertErrorToNSError(_:)(a1);
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_100D5915C()
{
  return type metadata accessor for CRLMemoryWriteChannel(0);
}

uint64_t type metadata accessor for CRLMemoryWriteChannel(uint64_t a1)
{
  uint64_t result;

  result = qword_101410660;
  if (!qword_101410660)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLMemoryWriteChannel);
  return result;
}

uint64_t sub_100D591A0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for DispatchData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100D5920C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  v3 = sub_100D5C3EC(a1);
  swift_bridgeObjectRelease();
  *a2 = v3;
}

uint64_t sub_100D59248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[82] = v1;
  v2[81] = a1;
  v3 = type metadata accessor for URL(0);
  v2[83] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[84] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[85] = swift_task_alloc(v5);
  v2[86] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v2[87] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[88] = v7;
  v2[89] = v8;
  return swift_task_switch(sub_100D592F4, v7, v8);
}

uint64_t sub_100D592F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t Receipt;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v31;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  v1 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 664);
  v31 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 648);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 424, 0, 0);
  v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 720) = v6;
  inited = swift_initStackObject(v6, v0 + 264);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v9 = sub_100952438();
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(v0 + 728) = v12;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v14 = static os_log_type_t.debug.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "(ARViewBackend) loadScene(%@)", 29, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v0 + 736) = v15;
  swift_arrayDestroy(inited + 32, 1, v15);

  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v16(v1, v4, v3);
  v16(v31, v1, v3);
  Receipt = type metadata accessor for CRLUSDRendering.LoadReceipt(0);
  v18 = swift_allocObject(Receipt, *(unsigned int *)(Receipt + 48), *(unsigned __int16 *)(Receipt + 52));
  *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  *(_QWORD *)(v0 + 744) = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url, v31, v3);
  v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest);
  *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  swift_release(v19);
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable);
  *(_QWORD *)(v18 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  swift_release(v20);
  v21 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  *(_QWORD *)(v0 + 752) = v21;
  v22 = (unsigned int *)(v4 + *(int *)(v21 + 24));
  v23 = *v22;
  v25 = *((_QWORD *)v22 + 2);
  v24 = *((_QWORD *)v22 + 3);
  v26 = *((_QWORD *)v22 + 8);
  v27 = *((_OWORD *)v22 + 2);
  v28 = *((_OWORD *)v22 + 3);
  *(_QWORD *)(v0 + 16) = v18;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = v23;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = v25;
  *(_QWORD *)(v0 + 56) = v24;
  *(_OWORD *)(v0 + 64) = v27;
  *(_OWORD *)(v0 + 80) = v28;
  *(_QWORD *)(v0 + 96) = v26;
  swift_retain(v18);
  sub_100D5C424(v0 + 16);
  swift_release(v18);
  v29 = (_QWORD *)swift_task_alloc(dword_1013FBD74);
  *(_QWORD *)(v0 + 760) = v29;
  *v29 = v0;
  v29[1] = sub_100D5957C;
  return sub_100956FAC();
}

uint64_t sub_100D5957C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 760);
  v3[96] = a1;
  v3[97] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100D59A08;
  else
    v5 = sub_100D595EC;
  return swift_task_switch(v5, v3[88], v3[89]);
}

uint64_t sub_100D595EC()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  double *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;

  v1 = *(_QWORD **)(v0 + 656);
  swift_release(*(_QWORD *)(v0 + 696));
  v2 = (id)static OS_os_log.crlThreeDimensionalObjects;
  v4 = static os_log_type_t.debug.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "(ARViewBackend) loadScene(): entity loaded", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = v1[6];
  v5 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v9 = v1[10];
  v10 = v1[11];
  v12 = v1[12];
  v11 = v1[13];
  v13 = v1[14];
  v14 = v1[15];
  v15 = v1[16];
  if (v8 >> 62)
  {
    v45 = *(_QWORD *)(v0 + 744);
    v46 = *(_QWORD *)(v0 + 768);
    v48 = *(_QWORD *)(v0 + 672);
    v50 = *(_QWORD *)(v0 + 664);
    v52 = *(_QWORD *)(v0 + 688);
    v18 = v1[7];
    sub_1009D7CF4(v6, v5, v7, v8);
    swift_release(v45);
    swift_release(v46);
    v19.n128_f64[0] = sub_1009D7D68(v6, v18, v7, v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v48 + 8))(v52, v50, v19);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 744);
    *(_DWORD *)(v0 + 448) = v7;
    *(_QWORD *)(v0 + 464) = v9;
    *(_QWORD *)(v0 + 472) = v10;
    *(_QWORD *)(v0 + 480) = v12;
    *(_QWORD *)(v0 + 488) = v11;
    *(_QWORD *)(v0 + 496) = v13;
    *(_QWORD *)(v0 + 504) = v14;
    *(_QWORD *)(v0 + 512) = v15;
    v17 = *(_QWORD *)(v0 + 768);
    if (v16 == v6)
    {
      v40 = *(_QWORD *)(v0 + 768);
      v42 = v16;
      v47 = *(_QWORD *)(v0 + 672);
      v49 = *(_QWORD *)(v0 + 664);
      v51 = *(_QWORD *)(v0 + 688);
      v41 = *(_QWORD *)(v0 + 656);
      v20 = (double *)(*(_QWORD *)(v0 + 648) + *(int *)(*(_QWORD *)(v0 + 752) + 28));
      v21 = *v20;
      v22 = v20[1];
      v23 = v20[2];
      v24 = v20[3];
      v43 = v5;
      v25 = v5;
      v44 = v7;
      v26 = _s13ARViewBackendC17ARViewCoordinatorCMa();
      swift_allocObject(v26, 184, 15);
      sub_1009D7CF4(v6, v25, v7, v8);
      swift_retain(v40);
      v28 = v27;
      v29 = sub_100D5C674(v27, v0 + 448, v21, v22, v23, v24);
      swift_release(v28);
      v53 = &_swiftEmptySetSingleton;
      v30 = *(_QWORD *)(v29 + 168);
      *(_QWORD *)(v0 + 640) = v30;
      v31 = swift_allocObject(&unk_1012A3E48, 24, 7);
      swift_weakInit(v31 + 16, v41);
      swift_retain(v30);
      v32 = sub_1004B804C(&qword_1014109E0);
      v33 = sub_100D5D604();
      v34 = Publisher<>.sink(receiveValue:)(sub_100D5D5FC, v31, v32, v33);
      swift_release(v31);
      swift_release(*(_QWORD *)(v0 + 640));
      AnyCancellable.store(in:)(&v53);
      swift_release(v34);
      v35 = v53;
      *(_QWORD *)(v0 + 336) = v42;
      *(_QWORD *)(v0 + 344) = v29;
      *(_QWORD *)(v0 + 352) = v35;
      *(_QWORD *)(v0 + 360) = 0x4000000000000000;
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_OWORD *)(v0 + 400) = 0u;
      *(_QWORD *)(v0 + 416) = 0;
      swift_retain(v42);
      swift_retain(v29);
      sub_100D5C424(v0 + 336);
      swift_release(v28);
      v36 = swift_bridgeObjectRelease();
      swift_release_n(v29, 2, v36);
      swift_release(v42);
      sub_1009D7D68(v6, v43, v44, v8);
      v37 = swift_release(v42);
      (*(void (**)(uint64_t, uint64_t, __n128))(v47 + 8))(v51, v49, v37);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 672) + 8))(*(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 664));
      swift_release(v16);
      swift_release(v17);
    }
  }
  v38 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 688));
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D59A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD *)(v0 + 744);
  v26 = *(_QWORD *)(v0 + 728);
  v27 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 720);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(_QWORD *)(v0 + 672);
  v6 = *(_QWORD *)(v0 + 664);
  swift_release(*(_QWORD *)(v0 + 696));
  v7 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
  v8 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(v3, v0 + 104);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 632, v0 + 544);
  v10 = *(_QWORD *)(v0 + 552);
  v11 = *(_QWORD *)(v0 + 560);
  v12 = v8;
  v13 = Error.localizedDescription.getter(v10, v11);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v26;
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v14;
  v15 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v15, "(ARViewBackend) loadScene() error: %{public}@", 45, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v27);

  *(_QWORD *)(v0 + 616) = v1;
  swift_errorRetain(v1);
  v16 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v0 + 568, v0 + 616, v16, &type metadata for CRLUSDRendering.RendererError, 6))
  {
    v17 = *(_QWORD *)(v0 + 568);
    v18 = *(_QWORD *)(v0 + 576);
    v19 = *(unsigned __int8 *)(v0 + 584);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 776);
    *(_QWORD *)(v0 + 608) = v20;
    swift_errorRetain(v20);
    if ((swift_dynamicCast(v0 + 592, v0 + 608, v16, &type metadata for CRLUSDRendererExtensionShared.ExtensionError, 6) & 1) != 0)
    {
      v17 = *(_QWORD *)(v0 + 592);
      v18 = *(_QWORD *)(v0 + 600);
      v19 = 4;
    }
    else
    {
      swift_getErrorValue(*(_QWORD *)(v0 + 776), v0 + 624, v0 + 520);
      v17 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
      v18 = v21;
      v19 = 2;
    }
  }
  v22 = *(_QWORD *)(v0 + 688);
  v23 = *(_QWORD *)(v0 + 680);
  *(_QWORD *)(v0 + 176) = v17;
  *(_QWORD *)(v0 + 184) = v18;
  *(_QWORD *)(v0 + 192) = v19;
  *(_QWORD *)(v0 + 200) = 0x8000000000000000;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_QWORD *)(v0 + 256) = 0;
  sub_100D5C424(v0 + 176);
  sub_100689EEC(v17, v18, v19);
  swift_willThrow(v24);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100D59C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    if (swift_unknownObjectWeakLoadStrong(Strong + 16))
      __asm { BR              X10 }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D59E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v2 + 184) = *(_DWORD *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v2 + 120) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v2 + 128) = v1;
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v4;
  *(_OWORD *)(v2 + 152) = v3;
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(a1 + 64);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 176) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D59F20, v6, v7);
}

uint64_t sub_100D59F20()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD **)(v0 + 128);
  v2 = swift_release(*(_QWORD *)(v0 + 176));
  v4 = v1[6];
  v3 = v1[7];
  v6 = v1[8];
  v5 = v1[9];
  if (v5 >> 62 == 1)
  {
    v12 = *(_QWORD *)(v0 + 104);
    *(_OWORD *)(v3 + 16) = *(_OWORD *)v12;
    v13 = *(_OWORD *)(v12 + 16);
    v14 = *(_OWORD *)(v12 + 32);
    v15 = *(_OWORD *)(v12 + 48);
    *(_QWORD *)(v3 + 80) = *(_QWORD *)(v12 + 64);
    *(_OWORD *)(v3 + 48) = v14;
    *(_OWORD *)(v3 + 64) = v15;
    *(_OWORD *)(v3 + 32) = v13;
    sub_1009D7CF4(v4, v3, v6, v5);
    swift_retain(v3);
    sub_100D5AF38();
    swift_release(v3);
    goto LABEL_5;
  }
  if (!(v5 >> 62))
  {
    v7 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v10 = *(unsigned int *)(v0 + 184);
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 48) = v9;
    *(_QWORD *)(v0 + 56) = v8;
    v11 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 80) = v11;
    *(_QWORD *)(v0 + 96) = v7;
    sub_1009D7CF4(v4, v3, v6, v5);
    sub_100D5C424(v0 + 16);
LABEL_5:
    v2.n128_f64[0] = sub_1009D7D68(v4, v3, v6, v5);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100D5A0BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D5A128, v4, v5);
}

uint64_t sub_100D5A128()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v1 + 72) >> 62 == 1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 56);
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    swift_retain(v3);
    if (v4)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
      v6 = (double *)(v5 + 40);
      do
      {
        switch(*(_BYTE *)v6)
        {
          case 2:
            sub_100D5A6A4();
            break;
          case 3:
            sub_100D5A6B0();
            break;
          case 4:
            sub_100D5AD08();
            break;
          case 5:
            sub_100D5A8F4();
            break;
          default:
            sub_100D5A20C(*(_BYTE *)v6 & 1, *(v6 - 1));
            break;
        }
        v6 += 2;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    v2 = swift_release(v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_100D5A20C(char a1, double a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  _OWORD v61[2];
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  _QWORD *v65;
  char v66[32];

  v5 = (_QWORD *)(v2 + 176);
  swift_beginAccess(v2 + 176, v66, 0, 0);
  v6 = *(_QWORD *)(v2 + 176);
  v51 = v6 + 64;
  v7 = 1 << *(_BYTE *)(v6 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v6 + 64);
  v53 = (unint64_t)(v7 + 63) >> 6;
  v54 = v2;
  v55 = *(_QWORD *)(v2 + 176);
  swift_bridgeObjectRetain(v6);
  v10 = 0;
  v52 = a1 & 1;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_23;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_44;
    if (v16 >= v53)
      break;
    v17 = *(_QWORD *)(v51 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v53)
        break;
      v17 = *(_QWORD *)(v51 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v53)
          break;
        v17 = *(_QWORD *)(v51 + 8 * v10);
        if (!v17)
        {
          v18 = v16 + 3;
          if (v18 >= v53)
            break;
          v17 = *(_QWORD *)(v51 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v10 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_46;
              if (v10 >= v53)
                goto LABEL_40;
              v17 = *(_QWORD *)(v51 + 8 * v10);
              ++v18;
              if (v17)
                goto LABEL_22;
            }
          }
          v10 = v18;
        }
      }
    }
LABEL_22:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_23:
    v19 = 16 * v15;
    v20 = (uint64_t *)(*(_QWORD *)(v55 + 48) + v19);
    v21 = v20[1];
    v59 = *v20;
    v22 = (uint64_t *)(*(_QWORD *)(v55 + 56) + v19);
    v13 = *v22;
    v23 = v22[1];
    if (!v23)
    {
      swift_bridgeObjectRetain(v21);
      swift_retain(v13);
LABEL_29:
      v56 = v9;
      v57 = v10;
      v26 = AnimationResource.repeat(duration:)(INFINITY);
      v27 = Entity.playAnimation(_:transitionDuration:startsPaused:)(v26, v52, a2);
      v28 = v5;
      swift_beginAccess(v5, v61, 33, 0);
      swift_retain(v13);
      swift_retain(v27);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65 = *(_QWORD **)(v54 + 176);
      v30 = v65;
      *(_QWORD *)(v54 + 176) = 0x8000000000000000;
      v32 = sub_100842E98(v59, v21);
      v33 = v30[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        __break(1u);
        return;
      }
      v36 = v31;
      if (v30[3] < v35)
      {
        sub_10081D974(v35, isUniquelyReferenced_nonNull_native);
        v37 = sub_100842E98(v59, v21);
        if ((v36 & 1) != (v38 & 1))
          goto LABEL_47;
        v32 = v37;
        v39 = v65;
        if ((v36 & 1) == 0)
          goto LABEL_36;
LABEL_4:
        v11 = (_QWORD *)(v39[7] + 16 * v32);
        v12 = v11[1];
        swift_release(*v11);
        swift_release(v12);
        *v11 = v13;
        v11[1] = v27;
LABEL_5:
        v5 = v28;
        *v28 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess(v61);
        swift_release(v13);
        swift_release(v26);
        swift_release(v27);
        v13 = v23;
        v9 = v56;
        v10 = v57;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v39 = v65;
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_100830AE0();
        v39 = v65;
        if ((v36 & 1) != 0)
          goto LABEL_4;
      }
LABEL_36:
      v39[(v32 >> 6) + 8] |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v59;
      v40[1] = v21;
      v41 = (_QWORD *)(v39[7] + 16 * v32);
      *v41 = v13;
      v41[1] = v27;
      v42 = v39[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_45;
      v39[2] = v44;
      swift_bridgeObjectRetain(v21);
      goto LABEL_5;
    }
    swift_bridgeObjectRetain(v21);
    swift_retain(v13);
    v24 = swift_retain(v23);
    if ((AnimationPlaybackController.isValid.getter(v24) & 1) == 0)
      goto LABEL_29;
    v25 = swift_bridgeObjectRelease();
    if ((dispatch thunk of AnimationPlaybackController.isPaused.getter(v25) & 1) != 0)
      dispatch thunk of AnimationPlaybackController.resume()();
    swift_release(v23);
LABEL_6:
    swift_release(v13);
  }
LABEL_40:
  swift_release(v55);
  v58 = *(_OWORD *)(v54 + 128);
  v60 = *(_OWORD *)(v54 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v54 + 176));
  sub_1009B9F18(v45);
  v47 = v46;
  v48 = objc_msgSend(*(id *)(v54 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
  v49 = v48;
  if (v48)

  v50 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  v61[0] = v60;
  v61[1] = v58;
  v62 = v47;
  v63 = v49 != 0;
  v64 = v50;
  CurrentValueSubject.send(_:)(v61);
  swift_bridgeObjectRelease();
  swift_release(v47);
}

void sub_100D5A6A4()
{
  sub_100D5A6BC((void (*)(void))&dispatch thunk of AnimationPlaybackController.pause());
}

void sub_100D5A6B0()
{
  sub_100D5A6BC((void (*)(void))&dispatch thunk of AnimationPlaybackController.resume());
}

void sub_100D5A6BC(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  _BYTE v31[24];

  v3 = v1;
  swift_beginAccess(v1 + 176, v31, 0, 0);
  v4 = *(_QWORD *)(v1 + 176);
  v5 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 176));
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_21:
    v16 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v12);
    v17 = v16[1];
    if (v17)
    {
      v18 = *v16;
      swift_retain(*v16);
      v19 = swift_retain(v17);
      if ((AnimationPlaybackController.isValid.getter(v19) & 1) != 0)
        a1();
      swift_release(v17);
      swift_release(v18);
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  if (v13 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_20;
  v10 = v13 + 1;
  if (v13 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
    goto LABEL_20;
  v10 = v13 + 2;
  if (v13 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_20:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_21;
  }
  v15 = v13 + 3;
  if (v15 < v9)
  {
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v10 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_28;
        if (v10 >= v9)
          goto LABEL_24;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        ++v15;
        if (v14)
          goto LABEL_20;
      }
    }
    v10 = v15;
    goto LABEL_20;
  }
LABEL_24:
  swift_release(v4);
  v25 = *(_OWORD *)(v3 + 128);
  v26 = *(_OWORD *)(v3 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + 176));
  sub_1009B9F18(v20);
  v22 = v21;
  v23 = objc_msgSend(*(id *)(v3 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
  v24 = v23;
  if (v23)

  v27[0] = v26;
  v27[1] = v25;
  v28 = v22;
  v29 = v24 != 0;
  v30 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)(v27);
  swift_bridgeObjectRelease();
  swift_release(v22);
}

void sub_100D5A8F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  __int128 v48;
  int64_t v49;
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  _QWORD *v55;
  char v56[32];

  v1 = (_QWORD *)(v0 + 176);
  swift_beginAccess(v0 + 176, v56, 0, 0);
  v2 = *(_QWORD *)(v0 + 176);
  v44 = v0;
  v45 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v46 = (unint64_t)(v3 + 63) >> 6;
  v47 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain(v2);
  for (i = 0; ; i = v49)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (i << 6);
      goto LABEL_22;
    }
    v11 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_43;
    if (v11 >= v46)
      break;
    v12 = *(_QWORD *)(v45 + 8 * v11);
    ++i;
    if (!v12)
    {
      i = v11 + 1;
      if (v11 + 1 >= v46)
        break;
      v12 = *(_QWORD *)(v45 + 8 * i);
      if (!v12)
      {
        i = v11 + 2;
        if (v11 + 2 >= v46)
          break;
        v12 = *(_QWORD *)(v45 + 8 * i);
        if (!v12)
        {
          v13 = v11 + 3;
          if (v13 >= v46)
            break;
          v12 = *(_QWORD *)(v45 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              i = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_44;
              if (i >= v46)
                goto LABEL_38;
              v12 = *(_QWORD *)(v45 + 8 * i);
              ++v13;
              if (v12)
                goto LABEL_21;
            }
          }
          i = v13;
        }
      }
    }
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (i << 6);
LABEL_22:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v47 + 48) + v14);
    v17 = *v15;
    v16 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v47 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    v49 = i;
    if (v19)
    {
      swift_retain_n(v19, 2);
      swift_bridgeObjectRetain(v16);
      v21 = swift_retain(v20);
      if ((AnimationPlaybackController.isValid.getter(v21) & 1) != 0)
        dispatch thunk of AnimationPlaybackController.stop()();
      swift_release(v19);
    }
    else
    {
      swift_bridgeObjectRetain(v16);
      swift_retain(v20);
    }
    swift_beginAccess(v1, v51, 33, 0);
    swift_retain(v20);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55 = (_QWORD *)*v1;
    v23 = v55;
    *v1 = 0x8000000000000000;
    v25 = sub_100842E98(v17, v16);
    v26 = v23[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
      return;
    }
    v29 = v24;
    if (v23[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v32 = v55;
        if ((v24 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_100830AE0();
        v32 = v55;
        if ((v29 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_10081D974(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_100842E98(v17, v16);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_45;
      v25 = v30;
      v32 = v55;
      if ((v29 & 1) != 0)
      {
LABEL_4:
        v7 = (_QWORD *)(v32[7] + 16 * v25);
        v8 = v7[1];
        swift_release(*v7);
        swift_release(v8);
        *v7 = v20;
        v7[1] = 0;
        goto LABEL_5;
      }
    }
    v32[(v25 >> 6) + 8] |= 1 << v25;
    v33 = (uint64_t *)(v32[6] + 16 * v25);
    *v33 = v17;
    v33[1] = v16;
    v34 = (_QWORD *)(v32[7] + 16 * v25);
    *v34 = v20;
    v34[1] = 0;
    v35 = v32[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_42;
    v32[2] = v37;
    swift_bridgeObjectRetain(v16);
LABEL_5:
    *v1 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(v51);
    swift_release(v20);
    swift_release(v19);
  }
LABEL_38:
  swift_release(v47);
  v48 = *(_OWORD *)(v44 + 128);
  v50 = *(_OWORD *)(v44 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v44 + 176));
  sub_1009B9F18(v38);
  v40 = v39;
  v41 = objc_msgSend(*(id *)(v44 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
  v42 = v41;
  if (v41)

  v43 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  v51[0] = v50;
  v51[1] = v48;
  v52 = v40;
  v53 = v42 != 0;
  v54 = v43;
  CurrentValueSubject.send(_:)(v51);
  swift_bridgeObjectRelease();
  swift_release(v40);
}

void sub_100D5AD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  _BYTE v29[24];

  v1 = v0;
  swift_beginAccess(v0 + 176, v29, 0, 0);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v15 = v14[1];
    if (v15)
    {
      v16 = *v14;
      swift_retain(*v14);
      v17 = swift_retain(v15);
      if ((AnimationPlaybackController.isValid.getter(v17) & 1) != 0)
        AnimationPlaybackController.time.setter(0.0);
      swift_release(v15);
      swift_release(v16);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  if (v11 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  v12 = *(_QWORD *)(v3 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 < v7)
  {
    v12 = *(_QWORD *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v8 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_28;
        if (v8 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        ++v13;
        if (v12)
          goto LABEL_20;
      }
    }
    v8 = v13;
    goto LABEL_20;
  }
LABEL_24:
  swift_release(v2);
  v23 = *(_OWORD *)(v1 + 128);
  v24 = *(_OWORD *)(v1 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 176));
  sub_1009B9F18(v18);
  v20 = v19;
  v21 = objc_msgSend(*(id *)(v1 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
  v22 = v21;
  if (v21)

  v25[0] = v24;
  v25[1] = v23;
  v26 = v20;
  v27 = v22 != 0;
  v28 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)(v25);
  swift_bridgeObjectRelease();
  swift_release(v20);
}

uint64_t sub_100D5AF38()
{
  __n128 *v0;
  float v1;
  float v2;
  float v3;
  float v4;
  float v5;
  float v6;
  uint64_t v7;
  uint64_t inited;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  __n128 v14;
  _BYTE v15[32];
  _BYTE v16[48];

  v1 = v0[1].n128_f32[0];
  v2 = BoundingBox.boundingRadius.getter(v0[7], v0[8]);
  v3 = (float)((float)(v1 * 0.5) * 3.1416) / 180.0;
  if (v1 <= 0.0)
    v3 = 0.0087266;
  v4 = sinf(v3);
  v5 = v0[1].n128_f32[0];
  v6 = v2 / v4;
  v7 = sub_1004B804C((uint64_t *)&unk_1013FF9C0);
  inited = swift_initStackObject(v7, v16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = 0;
  *(float *)(inited + 40) = v6;
  sub_1009BA1D0(inited);
  v14 = v9;
  swift_setDeallocating(inited);
  v10 = type metadata accessor for AnchorEntity(0);
  HasTransform.position.setter(v10, &protocol witness table for Entity, v14);
  v11 = type metadata accessor for PerspectiveCamera(0);
  v12 = (void (*)(_BYTE *, _QWORD))HasPerspectiveCamera.camera.modify(v15, v11, &protocol witness table for PerspectiveCamera);
  PerspectiveCameraComponent.fieldOfViewInDegrees.setter(v5);
  v12(v15, 0);
  return HasTransform.orientation.setter(v10, &protocol witness table for Entity, v0[2]);
}

uint64_t sub_100D5B078()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(*(_QWORD *)(v0 + 152));
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(*(_QWORD *)(v0 + 168));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
  return v0;
}

uint64_t sub_100D5B0C4()
{
  uint64_t v0;

  sub_100D5B078();
  return swift_deallocClassInstance(v0, 184, 15);
}

uint64_t sub_100D5B0E4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  sub_1004CBB0C((uint64_t)(v0 + 2));
  sub_1009D7D68(v0[6], v0[7], v0[8], v0[9]);
  v1 = (char *)v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100D5B168()
{
  return _s13ARViewBackendCMa(0);
}

uint64_t _s13ARViewBackendCMa(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101410698, (uint64_t)&_s13ARViewBackendCMn);
}

uint64_t sub_100D5B184(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100F35CA0;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_100F35CB8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s13ARViewBackendC17ARViewCoordinatorCMa()
{
  return objc_opt_self(_TtCCO8Freeform15CRLUSDRendering13ARViewBackend17ARViewCoordinator);
}

uint64_t type metadata accessor for CRLARView(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101410928, (uint64_t)&nominal type descriptor for CRLARView);
}

uint64_t sub_100D5B248(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_101410918);
}

uint64_t sub_100D5B290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100D5B2D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1014106AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_100D59248(a1);
}

uint64_t sub_100D5B320(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1014106B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100D59E90(a1);
}

uint64_t sub_100D5B36C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 128) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 80) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = v6;
  return swift_task_switch(sub_100D5B3DC, v5, v6);
}

uint64_t sub_100D5B3DC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = sub_1004B804C(&qword_1013EAF60);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_QWORD *)(v0 + 104) = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = v2;
  *(_BYTE *)(inited + 40) = v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1014106BC);
  *(_QWORD *)(v0 + 112) = v5;
  *v5 = v0;
  v5[1] = sub_100694C9C;
  return sub_100D5A0BC(inited);
}

uint64_t sub_100D5B46C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1014106BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_100D5A0BC(a1);
}

uint64_t sub_100D5B4B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1014109C0 + dword_1014109C0);
  v1 = (_QWORD *)swift_task_alloc(unk_1014109C4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10065E614;
  return v3();
}

double sub_100D5B510(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = sub_1004B804C(&qword_1013EE580);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for MainActor(0);
  v12 = a2;
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = (char *)swift_allocObject(&unk_1012A3DF8, v15 + v6, v14 | 7);
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v16 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1014109D8, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100D5B678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_1004B804C(&qword_1013EE580);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[6] = v8;
  v5[7] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D5B714, v10, v11);
}

uint64_t sub_100D5B714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(void **)(v0 + 16);
  v7 = swift_release(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v1, v5, v4, v7);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1012A3E20, v9 + v2, v8 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v1, v4);
  dispatch thunk of ARView.snapshot(saveToHDR:completion:)(0, sub_100D5D548, v10);
  objc_msgSend(v6, "bounds", swift_release(v10).n128_f64[0]);
  objc_msgSend(v6, "setNeedsDisplayInRect:");
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D5B7F8(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;

  v4 = a1;
  v1 = a1;
  v2 = sub_1004B804C(&qword_1013EE580);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

double sub_100D5B83C()
{
  char *v0;
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for CRLARView(0);
  objc_msgSendSuper2(&v16, "didMoveToSuperview");
  Strong = swift_weakLoadStrong(&v0[qword_101410910]);
  if (Strong)
  {
    v3 = Strong;
    v9 = *(_OWORD *)(Strong + 112);
    v10 = *(_OWORD *)(Strong + 128);
    swift_beginAccess(Strong + 176, v15, 0, 0);
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 176));
    sub_1009B9F18(v4);
    v6 = v5;
    v7 = objc_msgSend(*(id *)(v3 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
    v8 = v7;
    if (v7)

    v11[0] = v9;
    v11[1] = v10;
    v12 = v6;
    v13 = v8 != 0;
    v14 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
    CurrentValueSubject.send(_:)(v11);
    swift_release(v6);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

void sub_100D5B958(void *a1)
{
  id v1;

  v1 = a1;
  sub_100D5B83C();

}

id sub_100D5B98C(char *a1, uint64_t a2, uint64_t a3)
{
  objc_super v6;

  swift_weakInit(&a1[qword_101410910], 0);
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for CRLARView(0);
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_100D5B9E8(char *a1, double a2, double a3, double a4, double a5)
{
  objc_super v11;

  swift_weakInit(&a1[qword_101410910], 0);
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLARView(0);
  return objc_msgSendSuper2(&v11, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t sub_100D5BA6C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v13 = type metadata accessor for ARView.CameraMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (char *)objc_allocWithZone(v6);
  swift_weakInit(&v17[qword_101410910], 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v18 = ARView.init(frame:cameraMode:automaticallyConfigureSession:)(v16, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v18;
}

uint64_t sub_100D5BB60()
{
  uint64_t v0;

  return swift_weakDestroy(v0 + qword_101410910);
}

id sub_100D5BB70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLARView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D5BBA4(uint64_t a1)
{
  return swift_weakDestroy(a1 + qword_101410910);
}

uint64_t sub_100D5BBB4()
{
  return type metadata accessor for CRLARView(0);
}

ValueMetadata *_s13ARViewBackendC17ARViewCoordinatorC22InternalAnimationStateOMa()
{
  return &_s13ARViewBackendC17ARViewCoordinatorC22InternalAnimationStateON;
}

double _s13ARViewBackendC12BackendStateOwxx(uint64_t *a1)
{
  return sub_1009D7D68(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *_s13ARViewBackendC12BackendStateOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  sub_1009D7CF4(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s13ARViewBackendC12BackendStateOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v17 = a2[9];
  v18 = a2[10];
  sub_1009D7CF4(*a2, v4, v5, v6);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v17;
  a1[10] = v18;
  sub_1009D7D68(v12, v13, v14, v15);
  return a1;
}

uint64_t _s13ARViewBackendC12BackendStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v3;
  sub_1009D7D68(v4, v6, v5, v7);
  return a1;
}

uint64_t _s13ARViewBackendC12BackendStateOwet(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 24);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double _s13ARViewBackendC12BackendStateOwst(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)(a1 + 24) = -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_QWORD *)(a1 + 80) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100D5BEB8(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(_QWORD *)(result + 24) = a2 << 62;
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 3);
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_QWORD *)(result + 80) = 0;
    *(_QWORD *)(result + 24) = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *_s13ARViewBackendC12BackendStateOMa()
{
  return &_s13ARViewBackendC12BackendStateON;
}

ValueMetadata *_s13ARViewBackendC5FlagsVMa()
{
  return &_s13ARViewBackendC5FlagsVN;
}

unint64_t sub_100D5BF14()
{
  unint64_t result;

  result = qword_101410978;
  if (!qword_101410978)
  {
    result = swift_getWitnessTable(&unk_100F35DBC, &_s13ARViewBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_101410978);
  }
  return result;
}

unint64_t sub_100D5BF5C()
{
  unint64_t result;

  result = qword_101410980;
  if (!qword_101410980)
  {
    result = swift_getWitnessTable(&unk_100F35D8C, &_s13ARViewBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_101410980);
  }
  return result;
}

unint64_t sub_100D5BFA4()
{
  unint64_t result;

  result = qword_101410988;
  if (!qword_101410988)
  {
    result = swift_getWitnessTable(&unk_100F35DE4, &_s13ARViewBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_101410988);
  }
  return result;
}

unint64_t sub_100D5BFEC()
{
  unint64_t result;

  result = qword_101410990;
  if (!qword_101410990)
  {
    result = swift_getWitnessTable(&unk_100F35E1C, &_s13ARViewBackendC5FlagsVN);
    atomic_store(result, (unint64_t *)&qword_101410990);
  }
  return result;
}

void sub_100D5C030(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v46 = a1[2];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  swift_bridgeObjectRetain(a1);
  v50 = v6;
  v51 = v5;
  v9 = (_QWORD *)*a3;
  swift_retain(v8);
  swift_bridgeObjectRetain(v5);
  swift_retain(v7);
  v11 = sub_100842E98(v6, v5);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_100830AE0();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v6;
    v22[1] = v5;
    v23 = (_QWORD *)(v21[7] + 16 * v11);
    *v23 = v7;
    v23[1] = v8;
    v24 = v21[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v26;
    v27 = v46 - 1;
    if (v46 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v28 = a1 + 11;
    while (1)
    {
      v29 = *(v28 - 2);
      v7 = *(v28 - 1);
      v8 = *v28;
      v50 = *(v28 - 3);
      v30 = v50;
      v51 = v29;
      v31 = (_QWORD *)*a3;
      swift_retain(v8);
      swift_bridgeObjectRetain(v29);
      swift_retain(v7);
      v32 = sub_100842E98(v50, v29);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v25 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v25)
        break;
      v37 = v33;
      if (v31[3] < v36)
      {
        sub_10081D974(v36, 1);
        v32 = sub_100842E98(v50, v29);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v30;
      v40[1] = v29;
      v41 = (_QWORD *)(v39[7] + 16 * v32);
      *v41 = v7;
      v41[1] = v8;
      v42 = v39[2];
      v25 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v25)
        goto LABEL_24;
      v28 += 4;
      v39[2] = v43;
      if (!--v27)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10081D974(v14, a2 & 1);
  v16 = sub_100842E98(v6, v5);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v19);
    v52 = v18;
    swift_errorRetain(v18);
    v20 = sub_1004B804C(&qword_1013E0210);
    if ((swift_dynamicCast(v20, &v52, v20, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release(v8);
      swift_release(v7);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v52);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v48 = 0;
  v49 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000100FE7890;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)(&v50, &v48, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v48, v49, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

uint64_t sub_100D5C3EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100D5C424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v5 = v1 + 48;
  v7 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v10 = v4;
  sub_100694E14(a1, v5);
  sub_100D5D588(a1);
  sub_1009D7D68(v10, v6, v7, v8);
  result = swift_unknownObjectWeakLoadStrong(v5 - 32);
  if (result)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_100D5C674(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __n128 v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  objc_class *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t started;
  __n128 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t (*v58)(__int128 *, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::String v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  double *v77;
  double v78;
  _QWORD *v79;
  _QWORD *v80;
  __int128 v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  id v89;
  id v90;
  unint64_t v91;
  uint64_t result;
  uint64_t v93;
  objc_class *v94;
  __n128 v95;
  __int128 v96;
  double *v97;
  __int128 v98;
  __n128 v99;
  unint64_t v100;
  BOOL v101;
  unint64_t v102;
  uint64_t v103;

  v7 = v6;
  v14 = type metadata accessor for ARView.Environment.Background(0);
  __chkstk_darwin(v14);
  *(_QWORD *)&v96 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ARView.CameraMode(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + 96) = a1;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v7 + 64) = v20;
  *(_QWORD *)(v7 + 80) = *(_QWORD *)(a2 + 64);
  v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 32) = v21;
  v22 = type metadata accessor for AnchorEntity(0);
  sub_1009BA1D0((uint64_t)&off_101264D38);
  v95 = v23;
  swift_retain(a1);
  v24 = AnchorEntity.__allocating_init(world:)(v95);
  *(_QWORD *)(v7 + 144) = v24;
  v26 = type metadata accessor for Entity(0, v25);
  *(double *)&v27 = HasTransform.visualBounds(recursive:relativeTo:excludeInactive:)(1, 0, 0, v26, &protocol witness table for Entity);
  *(_OWORD *)(v7 + 112) = v27;
  *(_OWORD *)(v7 + 128) = v28;
  v29 = BoundingBox.center.getter();
  v30.n128_u64[0] = (unint64_t)vsub_f32(0, (float32x2_t)v29.n128_u64[0]);
  v30.n128_f32[2] = 0.0 - v29.n128_f32[2];
  v30.n128_u32[3] = 0;
  v31 = v7;
  HasTransform.position.setter(v26, &protocol witness table for Entity, v30);
  v32 = swift_retain(v24);
  HasHierarchy.addChild(_:preservingWorldTransform:)(a1, 0, v22, &protocol witness table for Entity, v32);
  swift_release(v24);
  v33 = type metadata accessor for PerspectiveCamera(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = PerspectiveCamera.init()();
  *(_QWORD *)(v7 + 152) = v34;
  sub_1009BA1D0((uint64_t)&off_101264D68);
  v36 = AnchorEntity.__allocating_init(world:)(v35);
  *(_QWORD *)(v7 + 160) = v36;
  swift_retain(v36);
  v37 = swift_retain(v34);
  HasHierarchy.addChild(_:preservingWorldTransform:)(v38, 0, v22, &protocol witness table for Entity, v37);
  swift_release(v34);
  swift_release(v36);
  v39 = (objc_class *)type metadata accessor for CRLARView(0);
  *(_QWORD *)(v31 + 88) = objc_msgSend(objc_allocWithZone(v39), "initWithFrame:", a3, a4, a5, a6);
  v40 = ((uint64_t (*)(void))dispatch thunk of ARView.scene.getter)();
  v41 = dispatch thunk of Scene.__interactionService.getter();
  v42 = swift_release(v40);
  v43 = type metadata accessor for __RKEntityInteractionManager(0, v42);
  if (swift_dynamicCastClass(v41, v43))
  {
    dispatch thunk of __RKEntityInteractionManager.areInteractionsEnabled.setter(0);
    started = dispatch thunk of __RKEntityInteractionManager.automaticallyInvokesStartTrigger.setter(0);
    dispatch thunk of __RKEntityInteractionManager.__removeAllInteractions()(started);
  }
  v45 = swift_unknownObjectRelease(v41);
  v46 = *(void **)(v31 + 88);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v17 + 104))(v19, enum case for ARView.CameraMode.nonAR(_:), v16, v45);
  ARView.cameraMode.setter(v19);
  v47 = dispatch thunk of ARView.scene.getter(objc_msgSend(v46, "setUserInteractionEnabled:", 0));
  v48 = *(_QWORD *)(v31 + 144);
  v49 = swift_retain(v48);
  dispatch thunk of Scene.addAnchor(_:)(v50, &protocol witness table for AnchorEntity, v49);
  swift_release(v48);
  swift_release(v47);
  v52 = dispatch thunk of ARView.scene.getter(v51);
  v53 = *(_QWORD *)(v31 + 160);
  v54 = swift_retain(v53);
  dispatch thunk of Scene.addAnchor(_:)(v55, &protocol witness table for AnchorEntity, v54);
  swift_release(v53);
  swift_release(v52);
  v56 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v57 = v96;
  static ARView.Environment.Background.color(_:)();

  v58 = (uint64_t (*)(__int128 *, _QWORD))dispatch thunk of ARView.environment.modify(&v98);
  ARView.Environment.background.setter(v57);
  v59 = v58(&v98, 0);
  v60 = Entity.availableAnimations.getter(v59);
  v61 = v60;
  if ((unint64_t)v60 >> 62)
  {
    if (v60 >= 0)
      v60 &= 0xFFFFFFFFFFFFFF8uLL;
    v62 = _CocoaArrayWrapper.endIndex.getter(v60);
    if (v62)
    {
LABEL_5:
      v97 = _swiftEmptyArrayStorage;
      sub_100600B68(0, v62 & ~(v62 >> 63), 0);
      if (v62 < 0)
      {
        __break(1u);
        result = swift_unexpectedError(v61, "Swift/Dictionary.swift", 22, 1, 489);
        __break(1u);
        return result;
      }
      v94 = v39;
      v95.n128_u64[0] = v31;
      v63 = 0;
      v64 = v97;
      *(_QWORD *)&v96 = v61 & 0xC000000000000001;
      v65 = v61;
      v66 = v62;
      do
      {
        if ((_QWORD)v96)
        {
          v67 = specialized _ArrayBuffer._getElementSlowPath(_:)(v63, v61);
        }
        else
        {
          v67 = *(_QWORD *)(v61 + 8 * v63 + 32);
          swift_retain(v67);
        }
        v103 = ObjectIdentifier.hashValue.getter(v67);
        *(_QWORD *)&v98 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        *((_QWORD *)&v98 + 1) = v68;
        v69._countAndFlagsBits = 47;
        v69._object = (void *)0xE100000000000000;
        String.append(_:)(v69);
        v70 = AnimationResource.name.getter();
        if (v71)
        {
          v72 = v71;
        }
        else
        {
          v70 = 0x64656D616E6E75;
          v72 = 0xE700000000000000;
        }
        v73 = v72;
        String.append(_:)(*(Swift::String *)&v70);
        swift_bridgeObjectRelease();
        v74 = v98;
        v97 = v64;
        v76 = *((_QWORD *)v64 + 2);
        v75 = *((_QWORD *)v64 + 3);
        if (v76 >= v75 >> 1)
        {
          sub_100600B68(v75 > 1, v76 + 1, 1);
          v64 = v97;
        }
        ++v63;
        *((_QWORD *)v64 + 2) = v76 + 1;
        v77 = &v64[4 * v76];
        *((_OWORD *)v77 + 2) = v74;
        *((_QWORD *)v77 + 6) = v67;
        v77[7] = 0.0;
        v61 = v65;
      }
      while (v66 != v63);
      swift_bridgeObjectRelease();
      v31 = v95.n128_u64[0];
      v39 = v94;
      v78 = v64[2];
      if (v78 != 0.0)
        goto LABEL_17;
LABEL_22:
      v79 = _swiftEmptyDictionarySingleton;
      goto LABEL_23;
    }
  }
  else
  {
    v62 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v62)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v64 = _swiftEmptyArrayStorage;
  v78 = _swiftEmptyArrayStorage[2];
  if (v78 == 0.0)
    goto LABEL_22;
LABEL_17:
  sub_1004B804C(&qword_1013F4EE8);
  v79 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(*(_QWORD *)&v78);
LABEL_23:
  *(_QWORD *)&v98 = v79;
  swift_bridgeObjectRetain(v64);
  sub_100D5C030(v80, 1, &v98);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v31 + 176) = v98;
  v81 = *(_OWORD *)(v31 + 112);
  v95 = *(__n128 *)(v31 + 128);
  v96 = v81;
  v82 = sub_1008D6E10((uint64_t)_swiftEmptyArrayStorage);
  v83 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  v98 = v96;
  v99 = v95;
  v100 = v82;
  v101 = 0;
  v102 = v83;
  v84 = sub_1004B804C(&qword_1014109E0);
  swift_allocObject(v84, *(unsigned int *)(v84 + 48), *(unsigned __int16 *)(v84 + 52));
  *(_QWORD *)(v31 + 168) = CurrentValueSubject.init(_:)(&v98);
  v85 = swift_dynamicCastClass(*(_QWORD *)(v31 + 88), v39);
  if (v85)
    swift_weakAssign(v85 + qword_101410910, v31);
  sub_100D5AF38();
  swift_beginAccess(v31 + 176, &v97, 0, 0);
  swift_bridgeObjectRetain(*(_QWORD *)(v31 + 176));
  sub_1009B9F18(v86);
  v88 = v87;
  v89 = objc_msgSend(*(id *)(v31 + 88), "superview", swift_bridgeObjectRelease().n128_f64[0]);
  v90 = v89;
  if (v89)

  v91 = sub_1008D6BFC((uint64_t)_swiftEmptyArrayStorage);
  v98 = v96;
  v99 = v95;
  v100 = v88;
  v101 = v90 != 0;
  v102 = v91;
  CurrentValueSubject.send(_:)(&v98);
  swift_release(v88);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100D5CD98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = v2;
  v1[5] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[6] = v3;
  v1[7] = v4;
  return swift_task_switch(sub_100D5CE08, v3, v4);
}

uint64_t sub_100D5CE08()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  CGRect v20;
  CGRect v21;

  v1 = objc_msgSend(*(id *)(v0 + 24), "superview");

  if (v1)
  {
    v2 = 0;
  }
  else
  {
    v3 = *(void **)(v0 + 24);
    objc_msgSend(v3, "bounds");
    v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
    objc_msgSend(v2, "addSubview:", v3);
  }
  *(_QWORD *)(v0 + 64) = v2;
  objc_msgSend(*(id *)(v0 + 24), "frame");
  if (CGRectIsEmpty(v20))
  {
    v8 = objc_msgSend(*(id *)(v0 + 24), "superview");
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v0 + 24);
      objc_msgSend(v8, "setNeedsLayout");
      objc_msgSend(v9, "layoutIfNeeded");
      objc_msgSend(v10, "frame");
      if (CGRectIsEmpty(v21))
        objc_msgSend(*(id *)(v0 + 24), "setFrame:", 0.0, 0.0, 300.0, 300.0);

    }
  }
  v11 = objc_msgSend(*(id *)(v0 + 24), "frame");
  if (v12 != v13)
  {
    if (v12 <= v13)
      v12 = v13;
    v11 = objc_msgSend(*(id *)(v0 + 24), "setFrame:", 0.0, 0.0, v12, v12);
  }
  v14 = *(_QWORD *)(v0 + 24);
  v15 = static MainActor.shared.getter(v11);
  *(_QWORD *)(v0 + 72) = v15;
  v16 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 80) = v16;
  *(_QWORD *)(v16 + 16) = v14;
  v17 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v17;
  v18 = sub_1004B804C((uint64_t *)&unk_101409880);
  *v17 = v0;
  v17[1] = sub_100D5D030;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v15, &protocol witness table for MainActor, 0xD000000000000012, 0x800000010100F010, sub_100D5D3C4, v16, v18);
}

uint64_t sub_100D5D030()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(*v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100D5D098, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100D5D098()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 40)).n128_u64[0];
  v3 = *(void **)(v0 + 16);
  if (v1)
  {
    v4 = objc_msgSend(*(id *)(v0 + 24), "superview", v2);
    if (v4)
    {
      v5 = v4;
      v6 = *(void **)(v0 + 64);
      sub_1009F6AF0();
      v7 = v6;
      v8 = v5;
      LOBYTE(v5) = static NSObject.== infix(_:_:)(v8, v7);

      if ((v5 & 1) != 0)
        objc_msgSend(*(id *)(v0 + 24), "removeFromSuperview");
    }
  }
  v9 = *(void **)(v0 + 64);
  v10 = v3;
  v11 = objc_msgSend(v10, "CGImage");

  return (*(uint64_t (**)(id))(v0 + 8))(v11);
}

uint64_t sub_100D5D18C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[4] = v3;
  v1[5] = v4;
  return swift_task_switch(sub_100D5D1F8, v3, v4);
}

uint64_t sub_100D5D1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  __n128 v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v1 + 72) >> 62 == 1)
  {
    v2 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v0 + 48) = v2;
    v3 = *(void **)(v2 + 88);
    *(_QWORD *)(v0 + 56) = v3;
    v4 = unk_1014109CC;
    v9 = (uint64_t (*)(uint64_t))((char *)&dword_1014109C8 + dword_1014109C8);
    v5 = v3;
    swift_retain(v2);
    v6 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 64) = v6;
    *v6 = v0;
    v6[1] = sub_100D5D2BC;
    return v9((uint64_t)v5);
  }
  else
  {
    v8 = swift_release(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v8);
  }
}

uint64_t sub_100D5D2BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(v4 + 40);
    v8 = sub_100D5D37C;
  }
  else
  {

    *(_QWORD *)(v4 + 80) = a1;
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(v4 + 40);
    v8 = sub_100D5D338;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100D5D338()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 80), v2);
}

uint64_t sub_100D5D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);

  swift_release(v2);
  v3 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

double sub_100D5D3C4(uint64_t a1)
{
  uint64_t v1;

  return sub_100D5B510(a1, *(void **)(v1 + 16));
}

uint64_t sub_100D5D3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EE580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D5D44C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EE580) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1014109D4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100D5B678(a1, v5, v6, v7, v8);
}

uint64_t sub_100D5D4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013EE580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D5D548(void *a1)
{
  sub_1004B804C(&qword_1013EE580);
  return sub_100D5B7F8(a1);
}

uint64_t sub_100D5D588(uint64_t a1)
{
  sub_1009D7CF4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_100D5D5D8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100D5D5FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100D59C84(a1, v1);
}

unint64_t sub_100D5D604()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014109E8;
  if (!qword_1014109E8)
  {
    v1 = sub_1004CB6A4(&qword_1014109E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014109E8);
  }
  return result;
}

uint64_t *sub_100D5D650(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v20);
  }
  return a1;
}

uint64_t sub_100D5D720(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t sub_100D5D788(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v19);
  return a1;
}

uint64_t sub_100D5D82C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100D5D90C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100D5D984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100D5DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D5DA40);
}

uint64_t sub_100D5DA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100D5DAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D5DACC);
}

uint64_t sub_100D5DACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t _s17CategoryViewModelVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_101410A48;
  if (!qword_101410A48)
    return swift_getSingletonMetadata(a1, &_s17CategoryViewModelVMn);
  return result;
}

uint64_t sub_100D5DB84(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F35F48;
    v4[2] = &unk_100F35F60;
    v4[3] = &unk_100F35F48;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_100D5DC10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  v6 = (int *)_s17CategoryViewModelVMa(0);
  v7 = (uint64_t *)(v1 + v6[5]);
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = (uint64_t *)(v2 + v6[6]);
  v11 = v10[1];
  if (v11)
  {
    v12 = *v10;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v11);
    String.hash(into:)(a1, v12, v11);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v13 = (uint64_t *)(v2 + v6[7]);
  v14 = *v13;
  v15 = v13[1];
  swift_bridgeObjectRetain(v15);
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease(v15);
  Hasher._combine(_:)(*(_QWORD *)(v2 + v6[8]));
}

Swift::Int sub_100D5DD3C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100D5DC10((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100D5DD7C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100D5DC10((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100D5DDB8()
{
  return sub_1004B7878(&qword_101410A90, _s17CategoryViewModelVMa, (uint64_t)&unk_100F35F78);
}

BOOL sub_100D5DDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = _s17CategoryViewModelVMa(0);
  __chkstk_darwin(v4);
  v57 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v56 = (uint64_t)&v54 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v54 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v54 - v24;
  v26 = static UUID.== infix(_:_:)(a1);
  sub_100D5E248(a1, (uint64_t)v25);
  sub_100D5E248(a2, (uint64_t)v22);
  if ((v26 & 1) == 0)
  {
    sub_100D5E28C((uint64_t)v25);
    sub_100D5E28C((uint64_t)v22);
    sub_100D5E248(a1, (uint64_t)v19);
    sub_100D5E248(a2, (uint64_t)v16);
    goto LABEL_9;
  }
  v55 = v4;
  v27 = *(int *)(v4 + 20);
  v28 = *(_QWORD *)&v25[v27];
  v29 = *(_QWORD *)&v25[v27 + 8];
  v30 = &v22[v27];
  v31 = *((_QWORD *)v30 + 1);
  if (v28 == *(_QWORD *)v30 && v29 == v31)
  {
    sub_100D5E28C((uint64_t)v25);
    sub_100D5E28C((uint64_t)v22);
    sub_100D5E248(a1, (uint64_t)v19);
    sub_100D5E248(a2, (uint64_t)v16);
    goto LABEL_11;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, *(_QWORD *)v30, v31, 0);
  sub_100D5E28C((uint64_t)v25);
  sub_100D5E28C((uint64_t)v22);
  sub_100D5E248(a1, (uint64_t)v19);
  sub_100D5E248(a2, (uint64_t)v16);
  if ((v33 & 1) == 0)
  {
LABEL_9:
    sub_100D5E28C((uint64_t)v16);
    sub_100D5E28C((uint64_t)v19);
LABEL_23:
    sub_100D5E248(a1, (uint64_t)v13);
    sub_100D5E248(a2, (uint64_t)v10);
    goto LABEL_24;
  }
LABEL_11:
  v34 = *(int *)(v55 + 24);
  v35 = &v19[v34];
  v36 = *(_QWORD *)&v19[v34 + 8];
  v37 = &v16[v34];
  v38 = *((_QWORD *)v37 + 1);
  if (!v36)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v37 + 1));
    sub_100D5E28C((uint64_t)v16);
    sub_100D5E28C((uint64_t)v19);
    if (!v38)
    {
LABEL_28:
      sub_100D5E248(a1, (uint64_t)v13);
      sub_100D5E248(a2, (uint64_t)v10);
      goto LABEL_29;
    }
    v41 = v38;
    goto LABEL_22;
  }
  if (!v38)
  {
    swift_bridgeObjectRetain(v36);
    sub_100D5E28C((uint64_t)v16);
    sub_100D5E28C((uint64_t)v19);
    v41 = v36;
LABEL_22:
    swift_bridgeObjectRelease(v41);
    goto LABEL_23;
  }
  if (*(_QWORD *)v35 == *(_QWORD *)v37 && v36 == v38)
  {
    swift_bridgeObjectRetain(v36);
    sub_100D5E28C((uint64_t)v16);
    sub_100D5E28C((uint64_t)v19);
    swift_bridgeObjectRelease(v36);
    goto LABEL_28;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v35, v36, *(_QWORD *)v37, *((_QWORD *)v37 + 1), 0);
  swift_bridgeObjectRetain(v36);
  sub_100D5E28C((uint64_t)v16);
  sub_100D5E28C((uint64_t)v19);
  swift_bridgeObjectRelease(v36);
  sub_100D5E248(a1, (uint64_t)v13);
  sub_100D5E248(a2, (uint64_t)v10);
  if ((v40 & 1) == 0)
  {
LABEL_24:
    sub_100D5E28C((uint64_t)v13);
    sub_100D5E28C((uint64_t)v10);
    v42 = v56;
    sub_100D5E248(a1, v56);
    v43 = v57;
    sub_100D5E248(a2, v57);
    goto LABEL_25;
  }
LABEL_29:
  v45 = v55;
  v46 = *(int *)(v55 + 28);
  v47 = *(_QWORD *)&v13[v46];
  v48 = *(_QWORD *)&v13[v46 + 8];
  v49 = &v10[v46];
  v50 = *((_QWORD *)v49 + 1);
  if (v47 == *(_QWORD *)v49 && v48 == v50)
  {
    sub_100D5E28C((uint64_t)v13);
    sub_100D5E28C((uint64_t)v10);
    v42 = v56;
    sub_100D5E248(a1, v56);
    v43 = v57;
    sub_100D5E248(a2, v57);
LABEL_33:
    v52 = *(_QWORD *)(v42 + *(int *)(v45 + 32));
    sub_100D5E28C(v42);
    v53 = *(_QWORD *)(v43 + *(int *)(v45 + 32));
    sub_100D5E28C(v43);
    return v52 == v53;
  }
  v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, *(_QWORD *)v49, v50, 0);
  sub_100D5E28C((uint64_t)v13);
  sub_100D5E28C((uint64_t)v10);
  v42 = v56;
  sub_100D5E248(a1, v56);
  v43 = v57;
  sub_100D5E248(a2, v57);
  if ((v51 & 1) != 0)
    goto LABEL_33;
LABEL_25:
  sub_100D5E28C(v43);
  sub_100D5E28C(v42);
  return 0;
}

uint64_t sub_100D5E248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17CategoryViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D5E28C(uint64_t a1)
{
  uint64_t v2;

  v2 = _s17CategoryViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100D5E2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t result;
  CKRecordID v7;
  Swift::String v8;

  v4 = (*(uint64_t (**)(void))(a2 + 8))();
  v5 = swift_release(v4);
  if (v4 || ((*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 40))(a1, a2, v5) & 1) == 0)
    return 1;
  sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v7, v8);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

uint64_t CRLTransactablePropertyMapKeys.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100D5E438 + 4 * byte_100F35FE0[a1]))(0x61446E6F6D6D6F63, 0xEA00000000006174);
}

uint64_t sub_100D5E438()
{
  return 0x656E6961746E6F63;
}

uint64_t sub_100D5E45C()
{
  return 0x7461446472616F62;
}

uint64_t sub_100D5E4A0()
{
  return 0x61746144656C6966;
}

uint64_t sub_100D5E4E0()
{
  return 0x646E616865657266;
}

uint64_t sub_100D5E500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(__n128);
  __n128 v8;
  unint64_t v10;
  _BYTE *v11;
  __n128 v12;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  swift_release(v6);
  if (v6 || *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    v10 = sub_10077F578();
    swift_allocError(&type metadata for CRLTransactableError, v10, 0, 0);
    *v11 = 0;
    return swift_willThrow(v12);
  }
  else
  {
    v7 = *(void (**)(__n128))(a3 + 16);
    v8 = swift_retain(a1);
    v7(v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  }
}

uint64_t sub_100D5E5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  __n128 v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  __n128 v12;
  unint64_t v13;
  _BYTE *v14;
  __n128 v15;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  v7 = v6(a2, a3);
  v8 = swift_release(v7);
  if (!v7)
  {
LABEL_5:
    v13 = sub_10077F578();
    swift_allocError(&type metadata for CRLTransactableError, v13, 0, 0);
    *v14 = 1;
    return swift_willThrow(v15);
  }
  result = ((uint64_t (*)(uint64_t, uint64_t, __n128))v6)(a2, a3, v8);
  if (result)
  {
    v10 = result;
    v11 = static UUID.== infix(_:_:)(result + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id);
    v12 = swift_release(v10);
    if ((v11 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(a3 + 120))(a1, a2, a3, v12);
      return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a3 + 16))(0, a2, a3);
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D5E6C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = CRLTransactablePropertyMapKeys.rawValue.getter(*a1);
  v5 = v4;
  v6 = CRLTransactablePropertyMapKeys.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100D5E748()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = CRLTransactablePropertyMapKeys.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100D5E7A8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = CRLTransactablePropertyMapKeys.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100D5E7E8(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = CRLTransactablePropertyMapKeys.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100D5E844@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8Freeform30CRLTransactablePropertyMapKeysO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100D5E870@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = CRLTransactablePropertyMapKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100D5E898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100D5E8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t _s8Freeform30CRLTransactablePropertyMapKeysO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265B48, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

unint64_t sub_100D5E9B4()
{
  unint64_t result;

  result = qword_101410A98;
  if (!qword_101410A98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLTransactablePropertyMapKeys, &type metadata for CRLTransactablePropertyMapKeys);
    atomic_store(result, (unint64_t *)&qword_101410A98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLTransactablePropertyMapKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100D5EA44 + 4 * byte_100F35FEF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_100D5EA78 + 4 * byte_100F35FEA[v4]))();
}

uint64_t sub_100D5EA78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D5EA80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D5EA88);
  return result;
}

uint64_t sub_100D5EA94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D5EA9CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100D5EAA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D5EAA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactablePropertyMapKeys()
{
  return &type metadata for CRLTransactablePropertyMapKeys;
}

uint64_t sub_100D5EAC4()
{
  return type metadata accessor for CRLTransactableUndoingMutations(0);
}

uint64_t type metadata accessor for CRLTransactableUndoingMutations(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101410AC8, (uint64_t)&nominal type descriptor for CRLTransactableUndoingMutations);
}

uint64_t sub_100D5EAE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100D5EB58()
{
  return type metadata accessor for CRLTransactableObservableDeltas(0);
}

uint64_t type metadata accessor for CRLTransactableObservableDeltas(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101410BB0, (uint64_t)&nominal type descriptor for CRLTransactableObservableDeltas);
}

uint64_t sub_100D5EB74(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = &unk_100F36120;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLTransactableError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100D5EC44 + 4 * byte_100F35FF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100D5EC78 + 4 * byte_100F35FF4[v4]))();
}

uint64_t sub_100D5EC78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D5EC80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D5EC88);
  return result;
}

uint64_t sub_100D5EC94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D5EC9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100D5ECA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D5ECA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactableError()
{
  return &type metadata for CRLTransactableError;
}

unint64_t sub_100D5ECC8()
{
  unint64_t result;

  result = qword_101410C50;
  if (!qword_101410C50)
  {
    result = swift_getWitnessTable(&unk_100F361E8, &type metadata for CRLTransactableError);
    atomic_store(result, (unint64_t *)&qword_101410C50);
  }
  return result;
}

uint64_t sub_100D5ED0C(uint64_t a1, uint64_t a2)
{
  return sub_100D5ED54(a1, a2, &qword_1013F5530, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t *)&unk_101406B00, (uint64_t (*)(char *, char *))sub_100C10AB4);
}

uint64_t sub_100D5ED30(uint64_t a1, uint64_t a2)
{
  return sub_100D5ED54(a1, a2, (uint64_t *)&unk_1013F02C0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t *)&unk_1013F02E0, (uint64_t (*)(char *, char *))sub_1005E3918);
}

uint64_t sub_100D5ED54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5, uint64_t (*a6)(char *, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  uint64_t (*v30)(char *, char *);
  char *v31;

  v29 = a5;
  v30 = a6;
  v28 = a4;
  v9 = sub_1004B804C(a3);
  v10 = __chkstk_darwin(v9);
  v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - v12;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v28 - v19;
  v21 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v21);
  v22 = a2;
  CRRegister.wrappedValue.getter(v21);
  LOBYTE(a2) = static UUID.== infix(_:_:)(v20);
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24 = v18;
  v25 = (uint64_t)v31;
  v23(v24, v14);
  v23(v20, v14);
  sub_1004CB7BC(a1, (uint64_t)v13, a3);
  sub_1004CB7BC(v22, v25, a3);
  if ((a2 & 1) != 0)
    v26 = sub_100D5F27C(v25, a3, v28, v29, v30);
  else
    v26 = 0;
  sub_1004CB800(v25, a3);
  sub_1004CB800((uint64_t)v13, a3);
  return v26 & 1;
}

uint64_t sub_100D5EF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_100D5EF98(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for CRLShapeItemParentAffinity, a8, &qword_1013F5530, &qword_10140A8D8, (uint64_t)&unk_100F2E2E0);
}

uint64_t sub_100D5EF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_100D5EF98(a1, a2, a3, a4, a5, a6, a7, type metadata accessor for CRLBoardItemParentAffinity, a8, (uint64_t *)&unk_1013F02C0, &qword_1013E6A78, (uint64_t)&unk_100EFD714);
}

uint64_t sub_100D5EF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t)@<X7>, uint64_t a9@<X8>, uint64_t *a10, unint64_t *a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  int v38;
  int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  _QWORD v48[16];
  _OWORD v49[8];

  v46 = a8;
  v47 = a1;
  v42 = a6;
  v43 = a7;
  v41 = a5;
  v38 = a3;
  v39 = a4;
  v35 = a2;
  v37 = a12;
  v36 = a11;
  v14 = sub_1004B804C(qword_1013E6988);
  v44 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  __chkstk_darwin(v14);
  v40 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a8(0);
  __chkstk_darwin(v33);
  v17 = (char *)&v30 - v16;
  v18 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v18 - 8);
  v19 = v32;
  __chkstk_darwin(v18);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(a10);
  v34 = a9 + *(int *)(v22 + 52);
  sub_1004C3A10(v49);
  sub_1004C4938((uint64_t)v49, (uint64_t)v48, (uint64_t *)&unk_1013F02D0);
  v23 = sub_1004B804C((uint64_t *)&unk_1013F02D0);
  v31 = v23;
  v24 = sub_1005E3390();
  CRRegister.init(wrappedValue:)(v48, v23, v24);
  *(_QWORD *)(a9 + *(int *)(v22 + 56)) = &_swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v47, v18);
  CRRegister.init(_:)(v21, v18, &protocol witness table for UUID);
  v25 = v35;
  v26 = v46;
  sub_1004B8460(v35, (uint64_t)v17, v46);
  v27 = sub_1004B7878(v36, v26, v37);
  CRRegister.init(_:)(v17, v33, v27);
  LOBYTE(v48[0]) = v38;
  CRRegister.init(_:)(v48, &type metadata for Bool, &protocol witness table for Bool);
  LOBYTE(v48[0]) = v39;
  CRRegister.init(_:)(v48, &type metadata for Bool, &protocol witness table for Bool);
  v48[0] = v41;
  v48[1] = v42;
  CRRegister.init(_:)(v48, &type metadata for String, &protocol witness table for String);
  sub_1004C4938(v43, (uint64_t)v48, (uint64_t *)&unk_1013F02D0);
  v28 = v40;
  CRRegister.init(_:)(v48, v31, v24);
  sub_1004B84A4(v25, v46);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v47, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 40))(v34, v28, v45);
}

uint64_t sub_100D5F27C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t (*a5)(char *, char *))
{
  uint64_t (*v5)(char *, char *);
  uint64_t (*v7)(char *, char *);
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t (*v35)(_QWORD);
  uint64_t *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t (*v65)(char *, char *);
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  _OWORD v70[8];
  _OWORD v71[8];
  uint64_t v72[16];
  uint64_t v73[16];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[8];
  _OWORD v91[8];
  uint64_t v92[16];
  uint64_t v93[16];
  _BYTE v94[128];
  _OWORD v95[9];

  v64 = a2;
  v65 = a5;
  v62 = a4;
  v63 = a1;
  v7 = v5;
  v8 = (uint64_t *)sub_1004B804C(a2);
  v9 = __chkstk_darwin(v8);
  v68 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v69 = (char *)&v60 - v12;
  v13 = __chkstk_darwin(v11);
  v66 = (char *)&v60 - v14;
  v15 = __chkstk_darwin(v13);
  v67 = (uint64_t)&v60 - v16;
  v17 = __chkstk_darwin(v15);
  v60 = (uint64_t)&v60 - v18;
  v19 = __chkstk_darwin(v17);
  v61 = (uint64_t)&v60 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v60 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v60 - v24;
  v26 = a3(0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v31 = (char *)&v60 - v30;
  v32 = sub_1004B804C(v62);
  CRRegister.wrappedValue.getter(v32);
  v62 = v8;
  v33 = v63;
  CRRegister.wrappedValue.getter(v32);
  v34 = v65(v31, v29);
  v35 = a3;
  v36 = v64;
  sub_1004B84A4((uint64_t)v29, v35);
  sub_1004B84A4((uint64_t)v31, v35);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v25, v36);
  sub_1004CB7BC(v33, (uint64_t)v23, v36);
  if ((v34 & 1) == 0)
  {
    sub_1004CB800((uint64_t)v23, v36);
    sub_1004CB800((uint64_t)v25, v36);
    v40 = v61;
    sub_1004CB7BC((uint64_t)v7, v61, v36);
    v41 = v60;
    sub_1004CB7BC(v33, v60, v36);
    v44 = (uint64_t)v68;
    v43 = (uint64_t)v69;
    v45 = (uint64_t)v66;
LABEL_8:
    sub_1004CB800(v41, v36);
    sub_1004CB800(v40, v36);
    v50 = v67;
    sub_1004CB7BC((uint64_t)v7, v67, v36);
    sub_1004CB7BC(v33, v45, v36);
    goto LABEL_9;
  }
  v37 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v37);
  v38 = LOBYTE(v90[0]);
  CRRegister.wrappedValue.getter(v37);
  v39 = LOBYTE(v90[0]);
  sub_1004CB800((uint64_t)v23, v36);
  sub_1004CB800((uint64_t)v25, v36);
  v40 = v61;
  sub_1004CB7BC((uint64_t)v7, v61, v36);
  v41 = v60;
  sub_1004CB7BC(v33, v60, v36);
  v42 = v38 == v39;
  v44 = (uint64_t)v68;
  v43 = (uint64_t)v69;
  v45 = (uint64_t)v66;
  if (!v42)
    goto LABEL_8;
  v46 = v40;
  v47 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v47);
  LODWORD(v65) = LOBYTE(v90[0]);
  CRRegister.wrappedValue.getter(v47);
  v48 = LOBYTE(v90[0]);
  sub_1004CB800(v41, v36);
  v49 = v46;
  v44 = (uint64_t)v68;
  sub_1004CB800(v49, v36);
  v50 = v67;
  sub_1004CB7BC((uint64_t)v7, v67, v36);
  sub_1004CB7BC(v33, v45, v36);
  v43 = (uint64_t)v69;
  if ((_DWORD)v65 != v48)
  {
LABEL_9:
    sub_1004CB800(v45, v36);
    sub_1004CB800(v50, v36);
    sub_1004CB7BC((uint64_t)v7, v43, v36);
    sub_1004CB7BC(v33, v44, v36);
LABEL_10:
    sub_1004CB800(v44, v36);
    sub_1004CB800(v43, v36);
    goto LABEL_11;
  }
  v65 = v7;
  v51 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v51);
  v52 = *((_QWORD *)&v90[0] + 1);
  v53 = *(_QWORD *)&v90[0];
  v54 = (uint64_t)v66;
  CRRegister.wrappedValue.getter(v51);
  v55 = *((_QWORD *)&v90[0] + 1);
  if (__PAIR128__(v52, v53) == v90[0])
  {
    swift_bridgeObjectRelease_n(v52, 2);
    sub_1004CB800(v54, v36);
    sub_1004CB800(v67, v36);
    sub_1004CB7BC((uint64_t)v65, v43, v36);
    sub_1004CB7BC(v33, v44, v36);
  }
  else
  {
    v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v52, *(_QWORD *)&v90[0], *((_QWORD *)&v90[0] + 1), 0);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v55);
    sub_1004CB800(v54, v36);
    sub_1004CB800(v67, v36);
    sub_1004CB7BC((uint64_t)v65, v43, v36);
    sub_1004CB7BC(v33, v44, v36);
    if ((v58 & 1) == 0)
      goto LABEL_10;
  }
  v59 = sub_1004B804C(qword_1013E6988);
  CRRegister.wrappedValue.getter(v59);
  sub_1004C4938((uint64_t)v90, (uint64_t)v92, (uint64_t *)&unk_1013F02D0);
  CRRegister.wrappedValue.getter(v59);
  sub_1004C4938((uint64_t)v90, (uint64_t)v93, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v92, (uint64_t)v90, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v93, (uint64_t)v91, (uint64_t *)&unk_1013F02D0);
  sub_1004C4938((uint64_t)v92, (uint64_t)v94, (uint64_t *)&unk_1013F02D0);
  if (sub_1005E3F34((uint64_t)v94) == 1)
  {
    sub_1004CB800(v44, v36);
    sub_1004CB800(v43, v36);
    sub_1004C4938((uint64_t)v91, (uint64_t)v95, (uint64_t *)&unk_1013F02D0);
    sub_1004C4938((uint64_t)v95, (uint64_t)&v74, (uint64_t *)&unk_1013F02D0);
    if (sub_1005E3F34((uint64_t)&v74) == 1)
    {
      sub_1004C4938((uint64_t)v90, (uint64_t)v73, (uint64_t *)&unk_1013F02D0);
      sub_1005E402C(v73);
      v56 = 1;
      return v56 & 1;
    }
  }
  else
  {
    sub_1004C4938((uint64_t)v93, (uint64_t)v73, (uint64_t *)&unk_1013F02D0);
    if (sub_1005E3F34((uint64_t)v73) != 1)
    {
      sub_1004C4938((uint64_t)v92, (uint64_t)v70, (uint64_t *)&unk_1013F02D0);
      v95[4] = v70[4];
      v95[5] = v70[5];
      v95[6] = v70[6];
      v95[7] = v70[7];
      v95[0] = v70[0];
      v95[1] = v70[1];
      v95[2] = v70[2];
      v95[3] = v70[3];
      sub_1004C4938((uint64_t)v93, (uint64_t)v71, (uint64_t *)&unk_1013F02D0);
      v78 = v71[4];
      v79 = v71[5];
      v80 = v71[6];
      v81 = v71[7];
      v74 = v71[0];
      v75 = v71[1];
      v76 = v71[2];
      v77 = v71[3];
      sub_1005E4084(v70);
      v56 = sub_10080B508(v95, &v74);
      sub_1005E402C(v93);
      sub_1005E402C(v92);
      sub_1004CB800(v44, v36);
      sub_1004CB800(v43, v36);
      sub_1004C4938((uint64_t)v90, (uint64_t)v72, (uint64_t *)&unk_1013F02D0);
      sub_1005E402C(v72);
      return v56 & 1;
    }
    sub_1004C4938((uint64_t)v92, (uint64_t)&v74, (uint64_t *)&unk_1013F02D0);
    sub_1005E4084(&v74);
    sub_1004CB800(v44, v36);
    sub_1004CB800(v43, v36);
    sub_1005E402C(v92);
  }
  v86 = v91[4];
  v87 = v91[5];
  v88 = v91[6];
  v89 = v91[7];
  v82 = v91[0];
  v83 = v91[1];
  v84 = v91[2];
  v85 = v91[3];
  v78 = v90[4];
  v79 = v90[5];
  v80 = v90[6];
  v81 = v90[7];
  v74 = v90[0];
  v75 = v90[1];
  v76 = v90[2];
  v77 = v90[3];
  sub_1005E3F4C((uint64_t)&v74);
LABEL_11:
  v56 = 0;
  return v56 & 1;
}

uint64_t sub_100D5FA6C()
{
  uint64_t result;

  qword_1014814E8 = 97;
  unk_1014814F0 = 0xE100000000000000;
  qword_1014814F8 = swift_getKeyPath(&unk_100F36798);
  unk_101481500 = 98;
  qword_101481508 = 0xE100000000000000;
  qword_101481510 = swift_getKeyPath(&unk_100F367B8);
  qword_101481518 = 99;
  qword_101481520 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F367D8);
  qword_101481528 = result;
  return result;
}

double sub_100D5FADC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1013DDF28 != -1)
    swift_once(&qword_1013DDF28, sub_100D5FA6C);
  v2 = unk_1014814F0;
  v4 = qword_1014814F8;
  v3 = unk_101481500;
  v5 = qword_101481508;
  v6 = qword_101481510;
  v7 = qword_101481518;
  v8 = qword_101481520;
  v9 = qword_101481528;
  *a1 = qword_1014814E8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&result = swift_retain(v9).n128_u64[0];
  return result;
}

uint64_t sub_100D5FB88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100D5FBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  *(_QWORD *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for CRLContainerItemCRDTData(0) + 20)) = _swiftEmptyDictionarySingleton;
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  CROrderedSet.init()(v2, &protocol witness table for UUID, v3);
  v6 = 0;
  CRRegister.init(wrappedValue:)(&v6, &type metadata for Bool, &protocol witness table for Bool);
  v5 = 0;
  return CRRegister.init(wrappedValue:)(&v5, &type metadata for Bool, &protocol witness table for Bool);
}

uint64_t sub_100D5FCA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F6DA8, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F365A8);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100D5FCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100D5FD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_100D5FD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100D5FDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100D5FE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100D5FE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100D5FEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D5FF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100D5FFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100D5FFF0()
{
  sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100D60030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100D60080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_100D600D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7498, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36608);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100D60134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7498, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36608);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100D601A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.init(from:)(a1, a2, v4);
}

uint64_t sub_100D6020C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D60268(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100D602B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _BYTE v17[120];
  _BYTE v18[232];
  _BYTE v19[48];
  uint64_t v20;
  _BYTE v21[128];
  _OWORD v22[8];
  _BYTE v23[240];

  v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  v12 = (int *)type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  *(_QWORD *)(a1 + v12[7]) = _swiftEmptyDictionarySingleton;
  UUID.init()(v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  CRRegister.init(wrappedValue:)(v8, v5, &protocol witness table for UUID);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  v14 = a1 + v12[5];
  UUID.init()(v13);
  sub_1004C3A10(v22);
  sub_1004C4938((uint64_t)v22, (uint64_t)v21, (uint64_t *)&unk_1013F02D0);
  sub_100C09420((uint64_t)v4);
  sub_100D5EF98((uint64_t)v11, (uint64_t)v4, 0, 0, 0, 0xE000000000000000, (uint64_t)v21, type metadata accessor for CRLShapeItemParentAffinity, v14, &qword_1013F5530, &qword_10140A8D8, (uint64_t)&unk_100F2E2E0);
  v15 = a1 + v12[6];
  memset(v17, 0, 112);
  sub_1004C39E8((uint64_t)v23);
  sub_1004C4938((uint64_t)v23, (uint64_t)v18, (uint64_t *)&unk_1013F1530);
  memset(v19, 0, sizeof(v19));
  v20 = 0;
  sub_100C085D8((uint64_t)v17, (uint64_t)v18, (uint64_t)v19, (uint64_t)v19, v15, 0.0);
  *(_QWORD *)(v15 + *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20)) = _swiftEmptyDictionarySingleton;
  result = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(_QWORD *)(v15 + *(int *)(result + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100D604F8()
{
  uint64_t result;

  qword_101481530 = 97;
  *(_QWORD *)algn_101481538 = 0xE100000000000000;
  qword_101481540 = swift_getKeyPath(&unk_100F367F8);
  unk_101481548 = 98;
  qword_101481550 = 0xE100000000000000;
  qword_101481558 = swift_getKeyPath(&unk_100F36818);
  qword_101481560 = 99;
  qword_101481568 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F36838);
  qword_101481570 = result;
  return result;
}

double sub_100D60568@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1013DDF30 != -1)
    swift_once(&qword_1013DDF30, sub_100D604F8);
  v2 = *(_QWORD *)algn_101481538;
  v4 = qword_101481540;
  v3 = unk_101481548;
  v5 = qword_101481550;
  v6 = qword_101481558;
  v7 = qword_101481560;
  v8 = qword_101481568;
  v9 = qword_101481570;
  *a1 = qword_101481530;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&result = swift_retain(v9).n128_u64[0];
  return result;
}

uint64_t sub_100D60614(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100D60658(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1014110E8, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36338);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100D60698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100D606F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_100D60740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100D60790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100D607F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100D60848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100D60898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D608F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100D60958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100D609A8()
{
  sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100D609E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100D60A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_100D60A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100D60AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100D60B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.init(from:)(a1, a2, v4);
}

uint64_t sub_100D60BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.encode(to:)(a1, a2, v4);
}

uint64_t sub_100D60C20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100D60C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_101481578;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1004B8460(v3, a1, type metadata accessor for CRLContainerItemCRDTData);
}

void (*sub_100D60CC8(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLContainerItemCRDTData(0) - 8) + 64);
  v3[10] = malloc(v4);
  v5 = malloc(v4);
  v6 = qword_101481578;
  v3[11] = v5;
  v3[12] = v6;
  v7 = v1 + v6;
  swift_beginAccess(v7, v3, 0, 0);
  sub_1004B8460(v7, (uint64_t)v5, type metadata accessor for CRLContainerItemCRDTData);
  return sub_100D60D70;
}

void sub_100D60D70(char **a1, char a2)
{
  char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = *a1;
  v4 = (void *)*((_QWORD *)*a1 + 11);
  v3 = *((_QWORD *)*a1 + 12);
  v5 = (void *)*((_QWORD *)*a1 + 10);
  v6 = *((_QWORD *)*a1 + 9) + v3;
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(*((_QWORD *)*a1 + 11), (uint64_t)v5, type metadata accessor for CRLContainerItemCRDTData);
    swift_beginAccess(v6, v2 + 24, 33, 0);
    sub_100D6454C((uint64_t)v5, v6);
    swift_endAccess(v2 + 24);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLContainerItemCRDTData);
  }
  else
  {
    swift_beginAccess(*((_QWORD *)*a1 + 9) + v3, v2 + 48, 33, 0);
    sub_100D6454C((uint64_t)v4, v6);
    swift_endAccess(v2 + 48);
  }
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLContainerItemCRDTData);
  free(v4);
  free(v5);
  free(v2);
}

uint64_t sub_100D60E50()
{
  return 8;
}

double sub_100D60E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLFreehandItemData(0);
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    v9 = v7 + qword_101481578;
    swift_beginAccess(v7 + qword_101481578, v12, 0, 0);
    sub_1004B8460(v9, (uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_beginAccess(v1 + qword_101481578, v11, 33, 0);
    v10 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    swift_retain(a1);
    CRStruct_3.merge(_:)(v5, v3, v10);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_endAccess(v11);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100D60F8C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v35;
  uint64_t v36;
  _BYTE v37[24];
  _BYTE v38[24];

  v2 = v1;
  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4);
  v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  v18 = *(_QWORD *)(*v2 + 632);
  v19 = (uint64_t)v2 + v18;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v18, v37, 0, 0);
    sub_1004CB7BC(v19, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
    v20 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v12, v20);
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
    v21 = (uint64_t)v2 + qword_101481578;
    swift_beginAccess((char *)v2 + qword_101481578, v38, 0, 0);
    sub_1004B8460(v21, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
    v22 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    CRStruct_3.copy(renamingReferences:)(0, v6, v22);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v18, v38, 0, 0);
    sub_1004CB7BC(v19, (uint64_t)v17, (uint64_t *)&unk_1013F02C0);
    v23 = (uint64_t)v2 + qword_101481578;
    swift_beginAccess((char *)v2 + qword_101481578, v37, 0, 0);
    sub_1004B8460(v23, (uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  sub_1004CB7BC((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v35 = v17;
  v24 = (uint64_t)v11;
  sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  v25 = v2[4];
  v26 = v2[5];
  v29 = v2 + 2;
  v28 = v2[2];
  v27 = v29[1];
  v30 = type metadata accessor for CRLFreehandItemData(0);
  v31 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  sub_1004B8460((uint64_t)v8, v31 + qword_101481578, type metadata accessor for CRLFreehandDrawingCRDTData);
  v32 = v36;
  sub_1004B8460((uint64_t)v8, v36, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100A11684(v32, v31 + qword_1014805D0);
  sub_1004C4938((uint64_t)v14, v31 + *(_QWORD *)(*(_QWORD *)v31 + 632), (uint64_t *)&unk_1013F02C0);
  v33 = sub_1005E1000(v27, v25, v26, v28);
  sub_1004B84A4(v24, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004CB800((uint64_t)v35, (uint64_t *)&unk_1013F02C0);
  return v33;
}

uint64_t sub_100D61304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v24[24];
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];

  v3 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v24[-v7];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v24[-v13];
  v15 = type metadata accessor for CRLFreehandItemData(0);
  v16 = swift_dynamicCastClass(a1, v15);
  if (!v16)
    goto LABEL_5;
  v17 = v16;
  v18 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v18, v27, 0, 0);
  sub_1004CB7BC(v18, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v19 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
  swift_beginAccess(v19, v26, 0, 0);
  sub_1004CB7BC(v19, (uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v19) = sub_100D5ED54((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_1013F02C0, type metadata accessor for CRLBoardItemParentAffinity, (uint64_t *)&unk_1013F02E0, (uint64_t (*)(char *, char *))sub_1005E3918);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  if ((v19 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v22 = 0;
    return v22 & 1;
  }
  v20 = v1 + qword_101481578;
  swift_beginAccess(v20, v25, 0, 0);
  sub_1004B8460(v20, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  v21 = v17 + qword_101481578;
  swift_beginAccess(v17 + qword_101481578, v24, 0, 0);
  sub_1004B8460(v21, (uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
  v22 = sub_100D64020((uint64_t)v8, (uint64_t)v5);
  swift_release(a1);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v22 & 1;
}

uint64_t sub_100D61568(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_101481578;
  swift_beginAccess(v2 + qword_101481578, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
    v12 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    CRStruct_3.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013F7498, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36608);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v16;
}

uint64_t sub_100D61734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v17[-v7];
  v9 = type metadata accessor for CRLFreehandItemData(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (v10)
  {
    v11 = v10;
    v12 = v1 + qword_101481578;
    swift_beginAccess(v12, v18, 0, 0);
    sub_1004B8460(v12, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
    v13 = v11 + qword_101481578;
    swift_beginAccess(v11 + qword_101481578, v17, 0, 0);
    sub_1004B8460(v13, (uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    v14 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    v15 = CRStruct_3.hasDelta(from:)(v5, v3, v14);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
    return v15 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLFreehandDrawingItemData.swift", 41, 2, 148, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100D618E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_101411148);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_101481578;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
    v19 = v17 + qword_101481578;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLFreehandDrawingCRDTData);
    v20 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    swift_retain(a1);
    v21 = v31;
    CRStruct_3.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_101411148);
    v22 = sub_1004B804C(&qword_101411128);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_101411148);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_101411148);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_101411120, &qword_101411128, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_101411148);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLFreehandDrawingItemData.swift", 41, 2, 161, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100D61C58(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v3 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v3);
  v46 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101411128);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v13 = sub_1004CBA30(&qword_101411120, &qword_101411128, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
  v14 = a2;
  LOBYTE(a2) = v9;
  v16 = v48;
  PartialCRDT.init(serializedData:)(a1, v14, v9, v13);
  if (!v16)
  {
    v43 = v8;
    v44 = v6;
    v45 = v5;
    v48 = v10;
    v17 = v47;
    swift_beginAccess(v47 + qword_101481578, v51, 33, 0);
    v18 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
    v19 = sub_1004B7878(&qword_101411140, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36770);
    LODWORD(a2) = CRStruct_3.merge(delta:)(v12, v18, v19);
    swift_endAccess(v51);
    if ((a2 & 1) == 0)
    {
      v41 = v9;
      v42 = a2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v20 = (void *)static OS_os_log.realTimeSync;
      v21 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v21, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v23 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
      swift_beginAccess(v23, v49, 0, 0);
      v24 = v23;
      v25 = v46;
      sub_1004CB7BC(v24, v46, (uint64_t *)&unk_1013F02C0);
      v26 = v20;
      v27 = sub_1004B804C(&qword_1013E1A80);
      v28 = v43;
      CRRegister.wrappedValue.getter(v27);
      v29 = sub_1004CB800(v25, (uint64_t *)&unk_1013F02C0);
      v30 = UUID.uuidString.getter(v29);
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v33 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v33;
      *(_QWORD *)(inited + 32) = v30;
      *(_QWORD *)(inited + 40) = v32;
      v52 = v17;
      v34 = type metadata accessor for CRLFreehandItemData(0);
      swift_retain(v17);
      v35 = String.init<A>(describing:)(&v52, v34);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v33;
      *(_QWORD *)(inited + 72) = v35;
      *(_QWORD *)(inited + 80) = v36;
      v37 = static os_log_type_t.error.getter(v35);
      sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v37, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      a2 = *(_QWORD *)(inited + 16);
      v38 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, a2, v38);

      LOBYTE(a2) = v42;
      v9 = v41;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
  }
  return a2 & 1;
}

unint64_t sub_100D62034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _BYTE v10[8];
  _BYTE v11[24];

  v1 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1005DA690();
  v5 = v0 + qword_101481578;
  swift_beginAccess(v5, v11, 0, 0);
  sub_1004B8460(v5, (uint64_t)v3, type metadata accessor for CRLFreehandDrawingCRDTData);
  v6 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v6);
  v7 = v10[7];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLFreehandDrawingCRDTData);
  v8 = 0x3000000000000;
  if (v4 > 0x3000000000000)
    v8 = v4;
  if (v7)
    return v8;
  else
    return v4;
}

uint64_t sub_100D62124()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_101481578, type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100D6214C()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004B84A4(v0 + qword_101481578, type metadata accessor for CRLFreehandDrawingCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLFreehandItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101410C80, (uint64_t)&nominal type descriptor for CRLFreehandItemData);
}

uint64_t sub_100D621CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLFreehandDrawingCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 712);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101410FF0, (uint64_t)&nominal type descriptor for CRLFreehandDrawingCRDTData);
}

char *sub_100D6224C(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLContainerItemCRDTData(0) + 20);
    v9 = *(_QWORD *)&a2[v8];
    *(_QWORD *)&a1[v8] = v9;
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    swift_bridgeObjectRetain(v9);
    v13 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v12, v13);
    v14(&a1[a3[6]], &a2[a3[6]], v13);
    v15 = a3[7];
    v16 = *(_QWORD *)&a2[v15];
    *(_QWORD *)&a1[v15] = v16;
    swift_bridgeObjectRetain(v16);
  }
  return a1;
}

double sub_100D6234C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLContainerItemCRDTData(0);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D623F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLContainerItemCRDTData(0) + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  swift_bridgeObjectRetain(v8);
  v12 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v13(a1 + a3[6], a2 + a3[6], v12);
  v14 = a3[7];
  v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t sub_100D624C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLContainerItemCRDTData(0) + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  v13(a1 + a3[6], a2 + a3[6], v12);
  v14 = a3[7];
  v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D625B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100D62680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D6275C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D62768);
}

uint64_t sub_100D62768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for CRLContainerItemCRDTData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100D62814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D62820);
}

uint64_t sub_100D62820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for CRLContainerItemCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_100D628C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v2 = type metadata accessor for CRLContainerItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_100D6295C();
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 4, &v6, a1 + 16);
    }
  }
}

void sub_100D6295C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1013E2870)
  {
    v0 = type metadata accessor for CRRegister(0, &type metadata for Bool, &protocol witness table for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1013E2870);
  }
}

uint64_t *sub_100D629B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v58 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v58 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v58);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E1A80);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    v12 = (int *)sub_1004B804C(&qword_1013F5530);
    v13 = v12[9];
    v14 = &v10[v13];
    v15 = &v11[v13];
    v16 = sub_1004B804C((uint64_t *)&unk_101406B00);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[10];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21(&v10[v12[11]], &v11[v12[11]], v20);
    v22 = v12[12];
    v23 = &v10[v22];
    v24 = &v11[v22];
    v25 = sub_1004B804C(&qword_1013E1980);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = v12[13];
    v27 = &v10[v26];
    v28 = &v11[v26];
    v29 = sub_1004B804C(qword_1013E6988);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    v30 = v12[14];
    v31 = *(_QWORD *)&v11[v30];
    *(_QWORD *)&v10[v30] = v31;
    v32 = a3[6];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    swift_bridgeObjectRetain(v31);
    v35 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    v37 = v36[5];
    v38 = &v33[v37];
    v39 = &v34[v37];
    v40 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    v41 = v36[6];
    v42 = &v33[v41];
    v43 = &v34[v41];
    v44 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
    v45(v42, v43, v44);
    v45(&v33[v36[7]], &v34[v36[7]], v44);
    v46 = v36[8];
    v47 = &v33[v46];
    v48 = &v34[v46];
    v49 = sub_1004B804C(&qword_1013F55A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
    v50 = v36[9];
    v51 = *(_QWORD *)&v34[v50];
    *(_QWORD *)&v33[v50] = v51;
    v52 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
    v53 = *(_QWORD *)&v34[v52];
    *(_QWORD *)&v33[v52] = v53;
    v54 = *(int *)(type metadata accessor for CRLFreehandDrawingShapeCRDTData(0) + 20);
    v55 = *(_QWORD *)&v34[v54];
    *(_QWORD *)&v33[v54] = v55;
    v56 = a3[7];
    v57 = *(uint64_t *)((char *)a2 + v56);
    *(uint64_t *)((char *)a1 + v56) = v57;
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v57);
  }
  return a1;
}

double sub_100D62CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  double result;

  v4 = sub_1004B804C(&qword_1013E1A80);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v5(v6, v4);
  v7 = (int *)sub_1004B804C(&qword_1013F5530);
  v8 = v6 + v7[9];
  v9 = sub_1004B804C((uint64_t *)&unk_101406B00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v7[10];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v6 + v7[11], v11);
  v13 = v6 + v7[12];
  v14 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v6 + v7[13];
  v16 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  v17 = a1 + *(int *)(a2 + 24);
  v18 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v20 = v17 + v19[5];
  v21 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  v22 = v17 + v19[6];
  v23 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
  v24(v22, v23);
  v24(v17 + v19[7], v23);
  v25 = v17 + v19[8];
  v26 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D62EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)sub_1004B804C(&qword_1013F5530);
  v12 = v11[9];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_101406B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[10];
  v17 = v9 + v16;
  v18 = v10 + v16;
  v19 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  v21 = v11[12];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = v11[13];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v29 = v11[14];
  v30 = *(_QWORD *)(v10 + v29);
  *(_QWORD *)(v9 + v29) = v30;
  v31 = a3[6];
  v32 = a1 + v31;
  v33 = a2 + v31;
  swift_bridgeObjectRetain(v30);
  v34 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v36 = v35[5];
  v37 = v32 + v36;
  v38 = v33 + v36;
  v39 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  v40 = v35[6];
  v41 = v32 + v40;
  v42 = v33 + v40;
  v43 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
  v44(v41, v42, v43);
  v44(v32 + v35[7], v33 + v35[7], v43);
  v45 = v35[8];
  v46 = v32 + v45;
  v47 = v33 + v45;
  v48 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  v49 = v35[9];
  v50 = *(_QWORD *)(v33 + v49);
  *(_QWORD *)(v32 + v49) = v50;
  v51 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v52 = *(_QWORD *)(v33 + v51);
  *(_QWORD *)(v32 + v51) = v52;
  v53 = *(int *)(type metadata accessor for CRLFreehandDrawingShapeCRDTData(0) + 20);
  v54 = *(_QWORD *)(v33 + v53);
  *(_QWORD *)(v32 + v53) = v54;
  v55 = a3[7];
  v56 = *(_QWORD *)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v56;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRetain(v56);
  return a1;
}

uint64_t sub_100D631B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)sub_1004B804C(&qword_1013F5530);
  v12 = v11[9];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_101406B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[10];
  v17 = v9 + v16;
  v18 = v10 + v16;
  v19 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  v21 = v11[12];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = v11[13];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  v29 = v11[14];
  v30 = *(_QWORD *)(v10 + v29);
  *(_QWORD *)(v9 + v29) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease();
  v31 = a3[6];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v36 = v35[5];
  v37 = v32 + v36;
  v38 = v33 + v36;
  v39 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = v35[6];
  v41 = v32 + v40;
  v42 = v33 + v40;
  v43 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 24);
  v44(v41, v42, v43);
  v44(v32 + v35[7], v33 + v35[7], v43);
  v45 = v35[8];
  v46 = v32 + v45;
  v47 = v33 + v45;
  v48 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  v49 = v35[9];
  v50 = *(_QWORD *)(v33 + v49);
  *(_QWORD *)(v32 + v49) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease();
  v51 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v52 = *(_QWORD *)(v33 + v51);
  *(_QWORD *)(v32 + v51) = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease();
  v53 = *(int *)(type metadata accessor for CRLFreehandDrawingShapeCRDTData(0) + 20);
  v54 = *(_QWORD *)(v33 + v53);
  *(_QWORD *)(v32 + v53) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease();
  v55 = a3[7];
  v56 = *(_QWORD *)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D634A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)sub_1004B804C(&qword_1013F5530);
  v12 = v11[9];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_101406B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v11[10];
  v17 = v9 + v16;
  v18 = v10 + v16;
  v19 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  v21 = v11[12];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = v11[13];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  *(_QWORD *)(v9 + v11[14]) = *(_QWORD *)(v10 + v11[14]);
  v29 = a3[6];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v34 = v33[5];
  v35 = v30 + v34;
  v36 = v31 + v34;
  v37 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  v38 = v33[6];
  v39 = v30 + v38;
  v40 = v31 + v38;
  v41 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  v43 = v33[8];
  v44 = v30 + v43;
  v45 = v31 + v43;
  v46 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  *(_QWORD *)(v30 + v33[9]) = *(_QWORD *)(v31 + v33[9]);
  v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(v30 + *(int *)(v47 + 20)) = *(_QWORD *)(v31 + *(int *)(v47 + 20));
  v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(_QWORD *)(v30 + *(int *)(v48 + 20)) = *(_QWORD *)(v31 + *(int *)(v48 + 20));
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100D63748(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)sub_1004B804C(&qword_1013F5530);
  v12 = v11[9];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_101406B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[10];
  v17 = v9 + v16;
  v18 = v10 + v16;
  v19 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  v21 = v11[12];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = sub_1004B804C(&qword_1013E1980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v11[13];
  v26 = v9 + v25;
  v27 = v10 + v25;
  v28 = sub_1004B804C(qword_1013E6988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  *(_QWORD *)(v9 + v11[14]) = *(_QWORD *)(v10 + v11[14]);
  swift_bridgeObjectRelease();
  v29 = a3[6];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v34 = v33[5];
  v35 = v30 + v34;
  v36 = v31 + v34;
  v37 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  v38 = v33[6];
  v39 = v30 + v38;
  v40 = v31 + v38;
  v41 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  v43 = v33[8];
  v44 = v30 + v43;
  v45 = v31 + v43;
  v46 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  *(_QWORD *)(v30 + v33[9]) = *(_QWORD *)(v31 + v33[9]);
  swift_bridgeObjectRelease();
  v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(v30 + *(int *)(v47 + 20)) = *(_QWORD *)(v31 + *(int *)(v47 + 20));
  swift_bridgeObjectRelease();
  v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(_QWORD *)(v30 + *(int *)(v48 + 20)) = *(_QWORD *)(v31 + *(int *)(v48 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100D63A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D63A20);
}

uint64_t sub_100D63A20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1004B804C(&qword_1013E1A80);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C(&qword_1013F5530);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_100D63AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D63B00);
}

uint64_t sub_100D63B00(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1004B804C(&qword_1013E1A80);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C(&qword_1013F5530);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101411088, (uint64_t)&nominal type descriptor for CRLFreehandDrawingShapeItemBucketCRDT);
}

void sub_100D63BE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1005E32D0(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100D63C90(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(319);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_100D63C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_101411098)
  {
    v2 = type metadata accessor for CRLShapeItemParentAffinity(255);
    v3 = sub_1004B7878((unint64_t *)&unk_1014110A0, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t)&unk_100F2E9FC);
    v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_101411098);
  }
}

uint64_t sub_100D63D08()
{
  return sub_1004B7878(&qword_1014110D8, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F362B8);
}

uint64_t sub_100D63D34()
{
  return sub_1004B7878(&qword_1014110E0, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36300);
}

uint64_t sub_100D63D60()
{
  return sub_1004B7878(&qword_1014110E8, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36338);
}

uint64_t sub_100D63D8C()
{
  return sub_1004CBA30(&qword_1014110F0, &qword_1014110F8, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
}

uint64_t sub_100D63DB8()
{
  return sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
}

uint64_t sub_100D63DE4()
{
  return sub_1004B7878(&qword_101411100, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36418);
}

uint64_t sub_100D63E10()
{
  return sub_1004CBA30(&qword_1013E6A50, &qword_1013E1A80, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100D63E3C()
{
  return sub_1004CBA30(&qword_1013F7468, &qword_1013F5530, (uint64_t)&unk_100EFD44C);
}

uint64_t sub_100D63E68()
{
  return sub_1004B7878(&qword_1013E3F48, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0C8);
}

uint64_t sub_100D63E94()
{
  return sub_1004B7878(&qword_101411108, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36478);
}

uint64_t sub_100D63EC0()
{
  return sub_1004B7878(&qword_101411110, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36528);
}

uint64_t sub_100D63EEC()
{
  return sub_1004B7878(&qword_101411118, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36570);
}

uint64_t sub_100D63F18()
{
  return sub_1004B7878(&qword_1013F6DA8, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F365A8);
}

uint64_t sub_100D63F44()
{
  return sub_1004CBA30(&qword_101411120, &qword_101411128, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
}

uint64_t sub_100D63F70()
{
  return sub_1004B7878(&qword_1013F7498, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36608);
}

uint64_t sub_100D63F9C()
{
  return sub_1004B7878(&qword_101411130, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F36688);
}

uint64_t sub_100D63FC8()
{
  return sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
}

uint64_t sub_100D63FF4()
{
  return sub_1004B7878(&qword_101411138, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F366E8);
}

uint64_t sub_100D64020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  _BYTE v24[16];

  v4 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v24[-v8];
  __chkstk_darwin(v10);
  v12 = &v24[-v11];
  __chkstk_darwin(v13);
  v15 = &v24[-v14];
  v16 = type metadata accessor for UUID(0);
  v17 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  LOBYTE(v16) = static CROrderedSet.== infix(_:_:)(a1, a2, v16, &protocol witness table for UUID, v17);
  sub_1004B8460(a1, (uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B8460(a2, (uint64_t)v12, type metadata accessor for CRLFreehandDrawingCRDTData);
  if ((v16 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLFreehandDrawingCRDTData);
    goto LABEL_5;
  }
  v18 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v18);
  v19 = v24[13];
  CRRegister.wrappedValue.getter(v18);
  LODWORD(v18) = v24[12];
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLFreehandDrawingCRDTData);
  if (v19 != (_DWORD)v18)
  {
LABEL_5:
    v22 = 0;
    goto LABEL_6;
  }
  v20 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v20);
  v21 = v24[15];
  CRRegister.wrappedValue.getter(v20);
  v22 = v21 ^ v24[14] ^ 1;
LABEL_6:
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v22 & 1;
}

BOOL sub_100D64294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  __chkstk_darwin(v31);
  v33 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v32 = (uint64_t)&v30 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - v18;
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  CRRegister.wrappedValue.getter(v20);
  LOBYTE(v20) = static UUID.== infix(_:_:)(v19);
  v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v16, v13);
  v21(v19, v13);
  sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_1004B8460(a2, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  if ((v20 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    v24 = v32;
    sub_1004B8460(a1, v32, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    v28 = a2;
    v26 = v33;
    sub_1004B8460(v28, v33, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    goto LABEL_5;
  }
  v22 = v31;
  v23 = sub_100D5ED54((uint64_t)&v12[*(int *)(v31 + 20)], (uint64_t)&v9[*(int *)(v31 + 20)], &qword_1013F5530, type metadata accessor for CRLShapeItemParentAffinity, (uint64_t *)&unk_101406B00, (uint64_t (*)(char *, char *))sub_100C10AB4);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v24 = v32;
  sub_1004B8460(a1, v32, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v25 = a2;
  v26 = v33;
  sub_1004B8460(v25, v33, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  if ((v23 & 1) == 0)
  {
LABEL_5:
    v27 = 0;
    goto LABEL_6;
  }
  v27 = sub_100C09DB8(v24 + *(int *)(v22 + 24), v26 + *(int *)(v22 + 24));
LABEL_6:
  sub_1004B84A4(v26, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_1004B84A4(v24, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  return v27;
}

uint64_t sub_100D6454C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D64598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_101481580);
  sub_1004F2A1C(v17, (uint64_t)qword_101481580);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x726F6C6F43, 0xE500000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_100D647C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  char *v67;
  _BYTE *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t result;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  void (*v115)(char *);
  unsigned int v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v120 = (char *)&v103 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v108 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v6 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1014111B8);
  v17 = sub_1004B804C(&qword_1013F9298);
  v18 = *(_QWORD *)(v17 - 8);
  v119 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v105 = 8 * v119;
  v21 = swift_allocObject(v16, v20 + 8 * v119, v19 | 7);
  v106 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100F21D60;
  v110 = v21 + v20;
  v22 = *(int *)(v17 + 48);
  v112 = v17;
  v104 = v21 + v20 + v22;
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x6B63616C42, 0xE500000000000000);
  static Locale.current.getter(v23);
  v116 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v115 = *(void (**)(char *))(v4 + 104);
  v118 = v6;
  v24 = v114;
  v115(v6);
  v25 = v15;
  v26 = v12;
  v27 = v12;
  v28 = v9;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Black color display representation", 34, 2);
  v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v29 = v108;
  v30 = v111;
  v107(v108, 1, 1, v111);
  v117 = type metadata accessor for DisplayRepresentation.Image(0);
  v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56);
  v31 = v120;
  v113(v120, 1, 1, v117);
  v32 = v29;
  DisplayRepresentation.init(title:subtitle:image:)(v25, v29, v31);
  v33 = v110;
  v104 = v110 + v119 + *(int *)(v17 + 48);
  *(_BYTE *)(v110 + v119) = 1;
  v34 = String.LocalizationValue.init(stringLiteral:)(1702194242, 0xE400000000000000);
  static Locale.current.getter(v34);
  v35 = v118;
  ((void (*)(char *, _QWORD, uint64_t))v115)(v118, v116, v24);
  v36 = v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v27, 0x6E497070414C5243, 0xED000073746E6574, v28, v35, "Blue color display representation", 33, 2);
  v37 = v32;
  v38 = v107;
  v107(v32, 1, 1, v30);
  v39 = v31;
  v40 = v31;
  v41 = v117;
  v42 = v113;
  v113(v40, 1, 1, v117);
  DisplayRepresentation.init(title:subtitle:image:)(v36, v37, v39);
  v43 = v119;
  v104 = 2 * v119;
  v44 = (_BYTE *)(v33 + 2 * v119);
  v103 = &v44[*(int *)(v112 + 48)];
  *v44 = 2;
  v45 = v27;
  v46 = String.LocalizationValue.init(stringLiteral:)(2036429383, 0xE400000000000000);
  v109 = v28;
  static Locale.current.getter(v46);
  v47 = v118;
  v48 = v116;
  v49 = (void (*)(char *, uint64_t, uint64_t))v115;
  ((void (*)(char *, _QWORD, uint64_t))v115)(v118, v116, v114);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v45, 0x6E497070414C5243, 0xED000073746E6574, v28, v47, "Gray color display representation", 33, 2);
  v50 = v108;
  v51 = v111;
  v38(v108, 1, 1, v111);
  v52 = v120;
  v42(v120, 1, 1, v41);
  v53 = v36;
  v54 = v36;
  v55 = v50;
  DisplayRepresentation.init(title:subtitle:image:)(v54, v50, v52);
  v56 = v110;
  v57 = (_BYTE *)(v110 + v104 + v43);
  v58 = v112;
  v104 = (uint64_t)&v57[*(int *)(v112 + 48)];
  *v57 = 3;
  v59 = v45;
  v60 = String.LocalizationValue.init(stringLiteral:)(0x6E65657247, 0xE500000000000000);
  v61 = v109;
  static Locale.current.getter(v60);
  v62 = v118;
  v63 = v48;
  v64 = v114;
  v49(v118, v63, v114);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v59, 0x6E497070414C5243, 0xED000073746E6574, v61, v62, "Green color display representation", 34, 2);
  v65 = v55;
  v66 = v107;
  v107(v55, 1, 1, v51);
  v67 = v120;
  v113(v120, 1, 1, v117);
  DisplayRepresentation.init(title:subtitle:image:)(v53, v55, v67);
  v104 = 4 * v119;
  v68 = (_BYTE *)(v56 + 4 * v119);
  v103 = &v68[*(int *)(v58 + 48)];
  *v68 = 4;
  v69 = v59;
  v70 = String.LocalizationValue.init(stringLiteral:)(0x65676E61724FLL, 0xE600000000000000);
  v71 = v109;
  static Locale.current.getter(v70);
  v72 = v118;
  v73 = v116;
  v74 = (void (*)(char *, uint64_t, uint64_t))v115;
  ((void (*)(char *, _QWORD, uint64_t))v115)(v118, v116, v64);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v59, 0x6E497070414C5243, 0xED000073746E6574, v71, v72, "Orange color display representation", 35, 2);
  v75 = v111;
  v66(v65, 1, 1, v111);
  v76 = v120;
  v113(v120, 1, 1, v117);
  v77 = v53;
  DisplayRepresentation.init(title:subtitle:image:)(v53, v65, v76);
  v78 = v110;
  v79 = (_BYTE *)(v110 + v104 + v119);
  v80 = v112;
  v104 = (uint64_t)&v79[*(int *)(v112 + 48)];
  *v79 = 5;
  v81 = String.LocalizationValue.init(stringLiteral:)(0x656C70727550, 0xE600000000000000);
  v82 = v109;
  static Locale.current.getter(v81);
  v83 = v118;
  v84 = v114;
  v74(v118, v73, v114);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v69, 0x6E497070414C5243, 0xED000073746E6574, v82, v83, "Purple color display representation", 35, 2);
  v85 = v108;
  v86 = v75;
  v87 = v107;
  v107(v108, 1, 1, v86);
  v88 = v120;
  v89 = v117;
  v90 = v113;
  v113(v120, 1, 1, v117);
  DisplayRepresentation.init(title:subtitle:image:)(v77, v85, v88);
  v91 = (_BYTE *)(v78 + 6 * v119);
  v104 = (uint64_t)&v91[*(int *)(v80 + 48)];
  *v91 = 6;
  v92 = String.LocalizationValue.init(stringLiteral:)(6579538, 0xE300000000000000);
  v93 = v109;
  static Locale.current.getter(v92);
  v94 = v118;
  ((void (*)(char *, _QWORD, uint64_t))v115)(v118, v116, v84);
  v95 = v77;
  v96 = v69;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v69, 0x6E497070414C5243, 0xED000073746E6574, v93, v94, "Red color display representation", 32, 2);
  v97 = v85;
  v98 = v85;
  v99 = v111;
  v87(v98, 1, 1, v111);
  v100 = v120;
  v90(v120, 1, 1, v89);
  DisplayRepresentation.init(title:subtitle:image:)(v95, v97, v100);
  *(_BYTE *)(v110 + v105 - v119) = 7;
  v101 = String.LocalizationValue.init(stringLiteral:)(0x776F6C6C6559, 0xE600000000000000);
  static Locale.current.getter(v101);
  ((void (*)(char *, _QWORD, uint64_t))v115)(v94, v116, v114);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v96, 0x6E497070414C5243, 0xED000073746E6574, v93, v94, "Yellow color display representation", 35, 2);
  v87(v97, 1, 1, v99);
  v90(v100, 1, 1, v117);
  DisplayRepresentation.init(title:subtitle:image:)(v95, v97, v100);
  result = sub_1008D8624(v106);
  qword_101481598 = result;
  return result;
}

void sub_100D6517C(char *a1)
{
  sub_10083CB48(*a1);
}

unint64_t sub_100D6518C()
{
  unint64_t result;

  result = qword_101411150;
  if (!qword_101411150)
  {
    result = swift_getWitnessTable(&unk_100F36874, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411150);
  }
  return result;
}

void sub_100D651D0()
{
  char *v0;

  sub_10083D934(0, *v0);
}

void sub_100D651DC(uint64_t a1)
{
  char *v1;

  sub_10083D350(a1, *v1);
}

void sub_100D651E4(uint64_t a1)
{
  char *v1;

  sub_10083D934(a1, *v1);
}

unint64_t sub_100D651EC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100D65A04(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100D65218()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100D65244 + 4 * byte_100F36858[*v0]))();
}

void sub_100D65244(_QWORD *a1@<X8>)
{
  *a1 = 1702194274;
  a1[1] = 0xE400000000000000;
}

void sub_100D65258(_QWORD *a1@<X8>)
{
  *a1 = 2036429415;
  a1[1] = 0xE400000000000000;
}

void sub_100D6526C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6E65657267;
  a1[1] = v1;
}

void sub_100D65280(_QWORD *a1@<X8>)
{
  *a1 = 0x65676E61726FLL;
  a1[1] = 0xE600000000000000;
}

void sub_100D65298(_QWORD *a1@<X8>)
{
  *a1 = 0x656C70727570;
  a1[1] = 0xE600000000000000;
}

void sub_100D652B0(_QWORD *a1@<X8>)
{
  *a1 = 6579570;
  a1[1] = 0xE300000000000000;
}

void sub_100D652C4(_QWORD *a1@<X8>)
{
  *a1 = 0x776F6C6C6579;
  a1[1] = 0xE600000000000000;
}

unint64_t sub_100D652E0()
{
  unint64_t result;

  result = qword_101411158;
  if (!qword_101411158)
  {
    result = swift_getWitnessTable(&unk_100F36954, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411158);
  }
  return result;
}

unint64_t sub_100D65328()
{
  unint64_t result;

  result = qword_101411160;
  if (!qword_101411160)
  {
    result = swift_getWitnessTable(&unk_100F3698C, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411160);
  }
  return result;
}

unint64_t sub_100D65370()
{
  unint64_t result;

  result = qword_101411168;
  if (!qword_101411168)
  {
    result = swift_getWitnessTable(&unk_100F368DC, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411168);
  }
  return result;
}

unint64_t sub_100D653B8()
{
  unint64_t result;

  result = qword_101411170;
  if (!qword_101411170)
  {
    result = swift_getWitnessTable(&unk_100F369BC, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411170);
  }
  return result;
}

unint64_t sub_100D65400()
{
  unint64_t result;

  result = qword_101411178;
  if (!qword_101411178)
  {
    result = swift_getWitnessTable(&unk_100F369E4, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411178);
  }
  return result;
}

unint64_t sub_100D65448()
{
  unint64_t result;

  result = qword_101411180;
  if (!qword_101411180)
  {
    result = swift_getWitnessTable(&unk_100F36A0C, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411180);
  }
  return result;
}

unint64_t sub_100D65490()
{
  unint64_t result;

  result = qword_101411188;
  if (!qword_101411188)
  {
    result = swift_getWitnessTable(&unk_100F36A64, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411188);
  }
  return result;
}

uint64_t sub_100D654D4@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DDF38 != -1)
    swift_once(&qword_1013DDF38, sub_100D64598);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_101481580);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_100D65544(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100D20970();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

uint64_t sub_100D65584(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D20970();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100D655C0()
{
  unint64_t result;

  result = qword_101411190;
  if (!qword_101411190)
  {
    result = swift_getWitnessTable(&unk_100F36AA4, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411190);
  }
  return result;
}

unint64_t sub_100D65608()
{
  unint64_t result;

  result = qword_101411198;
  if (!qword_101411198)
  {
    result = swift_getWitnessTable(&unk_100F36ACC, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_101411198);
  }
  return result;
}

unint64_t sub_100D65650()
{
  unint64_t result;

  result = qword_1014111A0;
  if (!qword_1014111A0)
  {
    result = swift_getWitnessTable(&unk_100F3689C, &type metadata for CRLColorEntity);
    atomic_store(result, (unint64_t *)&qword_1014111A0);
  }
  return result;
}

double sub_100D65694()
{
  double result;

  if (qword_1013DDF40 != -1)
    swift_once(&qword_1013DDF40, sub_100D647C4);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_101481598).n128_u64[0];
  return result;
}

uint64_t sub_100D656D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D65490();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100D65710()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014111A8;
  if (!qword_1014111A8)
  {
    v1 = sub_1004CB6A4(&qword_1014111B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1014111A8);
  }
  return result;
}

void sub_100D6575C(_QWORD *a1@<X8>)
{
  *a1 = &off_101263B60;
}

uint64_t storeEnumTagSinglePayload for CRLColorEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100D657B8 + 4 * byte_100F36865[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100D657EC + 4 * byte_100F36860[v4]))();
}

uint64_t sub_100D657EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D657F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D657FCLL);
  return result;
}

uint64_t sub_100D65808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D65810);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100D65814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D6581C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLColorEntity()
{
  return &type metadata for CRLColorEntity;
}

void sub_100D65838(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100D6585C()
{
  if (qword_1013DCE40 != -1)
    swift_once(&qword_1013DCE40, sub_1006B7FCC);
  return qword_10147F180;
}

unint64_t sub_100D65A04(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101265C58, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

char *sub_100D65A8C(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  void *v4;
  objc_super v6;

  v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_canCenter] = 1;
  v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_isVertical] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_hudHeight] = 0x404B800000000000;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CRLWPEditMenuController();
  v3 = (char *)objc_msgSendSuper2(&v6, "init");
  v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = a1;

  return v3;
}

id sub_100D65B54(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath) = a1;
  v3 = a1;

  result = *(id *)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (result)
  {
    result = objc_msgSend(result, "layerHost");
    if (result)
    {
      v5 = result;
      if ((objc_msgSend(result, "respondsToSelector:", "asUIKitHost") & 1) != 0)
      {
        v6 = objc_msgSend(v5, "asUIKitHost");
        result = (id)swift_unknownObjectRelease(v5);
        if (!v6)
          return result;
        objc_msgSend(v6, "showEditUIForSelectionPath:", v3);
        v5 = v6;
      }
      return (id)swift_unknownObjectRelease(v5);
    }
  }
  return result;
}

id sub_100D65C78()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath) = 0;

  result = *(id *)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (result)
  {
    result = objc_msgSend(result, "layerHost");
    if (result)
    {
      v3 = result;
      if ((objc_msgSend(result, "respondsToSelector:", "asUIKitHost") & 1) != 0)
      {
        v4 = objc_msgSend(v3, "asUIKitHost");
        result = (id)swift_unknownObjectRelease(v3);
        if (!v4)
          return result;
        objc_msgSend(v4, "hideEditMenu");
        v3 = v4;
      }
      return (id)swift_unknownObjectRelease(v3);
    }
  }
  return result;
}

double sub_100D65D64(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  char *v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  double x;
  CGFloat y;
  double width;
  double height;
  CGFloat MidX;
  double v49;
  double v51[4];
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = v1;
  v3 = OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (!v4)
    return CGRectNull.origin.x;
  v6 = v4;
  v7 = objc_msgSend(v6, "selectionModelTranslator");
  if (!v7
    || (v8 = v7,
        v9 = objc_msgSend(v7, "infoForSelectionPath:", a1),
        v8,
        !v9))
  {
LABEL_17:

    return CGRectNull.origin.x;
  }
  v10 = type metadata accessor for CRLWPStorage();
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11
    || (v12 = v11, (v13 = *(void **)(v2 + v3)) == 0)
    || (v14 = objc_msgSend(v13, "layoutForInfo:", v12)) == 0)
  {
LABEL_16:
    swift_unknownObjectRelease(v9);
    goto LABEL_17;
  }
  v15 = v14;
  v16 = type metadata accessor for CRLWPLayout();
  v17 = swift_dynamicCastClass(v15, v16);
  if (!v17)
  {

    goto LABEL_16;
  }
  v18 = (char *)v17;
  v19 = sub_1006C2E3C();
  v21 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v19, v20));
  if (!v21)
  {
LABEL_21:
    swift_unknownObjectRelease(v9);

    goto LABEL_17;
  }
  v22 = v21;
  v23 = objc_opt_self(CRLWPSelection);
  v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
  if (!v24)
  {

    goto LABEL_21;
  }
  v25 = objc_msgSend(v24, "superRange");
  v27 = v26;
  v28 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  v29 = (void *)sub_10060EDE4((uint64_t)v25, v27);
  if (qword_1013DCB58 != -1)
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v30 = (id)qword_10147ECB0;
  v31 = v29;
  sub_1006255CC(v18, v31, v51);

  objc_msgSend(v18, "rectInRoot:", v51[0], v51[1], v51[2], v51[3]);
  objc_msgSend(v6, "convertUnscaledToBoundsRect:");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  objc_msgSend(v6, "visibleBoundsRect");
  v57.origin.x = v40;
  v57.origin.y = v41;
  v57.size.width = v42;
  v57.size.height = v43;
  v52.origin.x = v33;
  v52.origin.y = v35;
  v52.size.width = v37;
  v52.size.height = v39;
  v53 = CGRectIntersection(v52, v57);
  x = v53.origin.x;
  y = v53.origin.y;
  width = v53.size.width;
  height = v53.size.height;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_canCenter) == 1)
  {
    MidX = CGRectGetMidX(v53);
    v54.origin.x = x;
    v54.origin.y = y;
    v54.size.width = width;
    v54.size.height = height;
    v55.origin.y = CGRectGetMinY(v54);
    v55.size.width = 0.0;
    v55.origin.x = MidX;
    v55.size.height = height;
    v56 = CGRectInset(v55, -0.5, -0.5);
    x = v56.origin.x;
    y = v56.origin.y;
    width = v56.size.width;
    height = v56.size.height;
  }
  v49 = sub_100D66178(*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_isVertical), x, y, width, height);

  swift_unknownObjectRelease(v9);
  return v49;
}

id sub_100D660F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPEditMenuController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPEditMenuController()
{
  return objc_opt_self(_TtC8Freeform23CRLWPEditMenuController);
}

double sub_100D66178(char a1, double a2, CGFloat y, double a4, double a5)
{
  double x;
  double Width;
  double height;
  double v11;
  CGRect v13;

  x = a2;
  if ((a1 & 1) != 0)
    Width = CGRectGetWidth(*(CGRect *)&a2);
  else
    Width = CGRectGetHeight(*(CGRect *)&a2);
  height = a5;
  v11 = a4;
  if (sub_100D6621C(Width))
  {
    x = CGRectNull.origin.x;
    y = CGRectNull.origin.y;
    v11 = CGRectNull.size.width;
    height = CGRectNull.size.height;
  }
  v13.origin.x = x;
  v13.origin.y = y;
  v13.size.width = v11;
  v13.size.height = height;
  CGRectIsNull(v13);
  return x;
}

BOOL sub_100D6621C(double a1)
{
  return fabs(a1) < 0.00999999978 || a1 == 0.0;
}

char *sub_100D6623C()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  objc_super v25;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment] = 4;
  v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_decimalTab];
  *v1 = 46;
  v1[1] = 0xE100000000000000;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_defaultTabStops] = 1108344832;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphFill] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_firstLineIndent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_hyphenate] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_initialListStyle] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepLinesTogether] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepWithNext] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_leftIndent] = 0;
  v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_lineSpacing;
  v3 = objc_allocWithZone((Class)CRLWPLineSpacing);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "init");
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineLevel] = -1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineStyleType] = 0;
  v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_pageBreakBefore] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphBorders] = 0;
  v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleOffset;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone((Class)CRLWPRuleOffset), "init");
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleWidth] = 1065353216;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_rightIndent] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceBefore] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceAfter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphStroke] = 0;
  v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_tabs;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone((Class)CRLWPTabs), "init");
  v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_widowControl] = 1;

  v25.receiver = v4;
  v25.super_class = (Class)type metadata accessor for CRLWPParagraphStyle();
  v7 = objc_msgSendSuper2(&v25, "init");
  v8 = &v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift];
  *(_DWORD *)v8 = 0;
  v8[4] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = 0;
  v9 = &v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization];
  *(_QWORD *)v9 = 0;
  v9[8] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics] = 0;
  v10 = (void *)objc_opt_self(CRLColorFill);
  v11 = v7;
  v12 = objc_msgSend(v10, "blackColor");
  v13 = *(void **)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill];
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = v12;

  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer] = 0;
  *(_OWORD *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName] = xmmword_100F36B40;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures] = 0;

  swift_bridgeObjectRelease();
  v14 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)v14 = 1094713344;
  v14[4] = 0;
  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize] = 0;
  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = 0;
  v15 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning];
  *(_DWORD *)v15 = 0;
  v15[4] = 0;
  v16 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures];
  *(_DWORD *)v16 = 0;
  v16[4] = 0;
  v17 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth];
  *(_DWORD *)v18 = 1065353216;
  v18[4] = 0;
  v19 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript];
  *(_QWORD *)v19 = 0;
  v19[8] = 0;
  v20 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking];
  *(_DWORD *)v20 = 0;
  v20[4] = 0;
  v21 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth];
  *(_DWORD *)v22 = 1065353216;
  v22[4] = 0;
  v23 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection];
  *(_QWORD *)v23 = -1;
  v23[8] = 0;
  return v11;
}

id sub_100D66644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  int v9;
  id v10;
  double v11;
  id v12;
  void *v13;

  switch(a1)
  {
    case 29:
      v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment;
      goto LABEL_22;
    case 30:
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_decimalTab + 8));
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    case 31:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_defaultTabStops;
      goto LABEL_29;
    case 32:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphFill);
      if (!v4)
        goto LABEL_37;
      goto LABEL_33;
    case 33:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_firstLineIndent;
      goto LABEL_29;
    case 34:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle);
      if (!v4)
        goto LABEL_37;
      goto LABEL_33;
    case 35:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_hyphenate;
      goto LABEL_35;
    case 36:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_initialListStyle);
      if (!v4)
        goto LABEL_37;
      goto LABEL_33;
    case 37:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepLinesTogether;
      goto LABEL_35;
    case 38:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepWithNext;
      goto LABEL_35;
    case 39:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_leftIndent;
      goto LABEL_29;
    case 40:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_lineSpacing);
      v7 = v4;
      goto LABEL_37;
    case 41:
      v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineLevel;
      goto LABEL_22;
    case 42:
      v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineStyleType;
      goto LABEL_22;
    case 43:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_pageBreakBefore;
      goto LABEL_35;
    case 44:
      v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphBorders;
LABEL_22:
      v8 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)(v1 + v2));
      goto LABEL_36;
    case 45:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleOffset);
      if (!v4)
        goto LABEL_37;
      goto LABEL_33;
    case 46:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleWidth;
      goto LABEL_29;
    case 47:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_rightIndent;
      goto LABEL_29;
    case 48:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceAfter;
      goto LABEL_29;
    case 49:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceBefore;
LABEL_29:
      v9 = *(_DWORD *)(v1 + v5);
      v10 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v11) = v9;
      v8 = objc_msgSend(v10, "initWithFloat:", v11);
      goto LABEL_36;
    case 50:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphStroke);
      if (!v4)
        goto LABEL_37;
      goto LABEL_33;
    case 51:
      v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_tabs);
      if (v4)
LABEL_33:
        v12 = v4;
      goto LABEL_37;
    case 52:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_widowControl;
LABEL_35:
      v8 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", *(unsigned __int8 *)(v1 + v6));
      goto LABEL_36;
    case 53:
      v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
      if (!v13 || (v8 = objc_msgSend(v13, "referenceColor")) == 0)
        v8 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
LABEL_36:
      v4 = v8;
LABEL_37:
      result = v4;
      break;
    default:
      result = sub_100A14F90(a1);
      break;
  }
  return result;
}

void sub_100D6696C()
{
  uint64_t v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_decimalTab + 8));

  v1 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle) = 0;
  if (v1)
  {
    while (1)
    {
      v4 = v1;
      if (!swift_isUniquelyReferenced())
        break;
      v2 = *(char **)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle];
      v3 = v2;

      v1 = v2;
      if (!v2)
        goto LABEL_6;
    }
    v1 = v4;
  }
LABEL_6:

}

id sub_100D66A48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPParagraphStyle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPParagraphStyle()
{
  return objc_opt_self(_TtC8Freeform19CRLWPParagraphStyle);
}

uint64_t storeEnumTagSinglePayload for CRLWPShapeVerticalAlignmentData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100D66BC4 + 4 * byte_100F36B75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100D66BF8 + 4 * asc_100F36B70[v4]))();
}

uint64_t sub_100D66BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D66C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100D66C08);
  return result;
}

uint64_t sub_100D66C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100D66C1CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100D66C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100D66C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapeVerticalAlignmentData()
{
  return &type metadata for CRLWPShapeVerticalAlignmentData;
}

uint64_t sub_100D66C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100563198();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100D66CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100563198();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100D66CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100D66F2C();
  v7 = sub_100D66EE8();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D66D48(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D66F2C();
  v5 = sub_100563198();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100D66DB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100D66F2C();
  v5 = sub_100563198();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100D66E08(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100D66F2C();
  v3 = sub_100563198();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_100D66E58()
{
  unint64_t result;

  result = qword_1014112F8;
  if (!qword_1014112F8)
  {
    result = swift_getWitnessTable(&unk_100F36BA0, &type metadata for CRLWPShapeVerticalAlignmentData);
    atomic_store(result, (unint64_t *)&qword_1014112F8);
  }
  return result;
}

unint64_t sub_100D66EA0()
{
  unint64_t result;

  result = qword_101411300;
  if (!qword_101411300)
  {
    result = swift_getWitnessTable(&unk_100F36BE8, &type metadata for CRLWPShapeVerticalAlignmentData);
    atomic_store(result, (unint64_t *)&qword_101411300);
  }
  return result;
}

unint64_t sub_100D66EE8()
{
  unint64_t result;

  result = qword_101411308;
  if (!qword_101411308)
  {
    result = swift_getWitnessTable(&unk_100F36D48, &type metadata for CRLWPShapeVerticalAlignmentData);
    atomic_store(result, (unint64_t *)&qword_101411308);
  }
  return result;
}

unint64_t sub_100D66F2C()
{
  unint64_t result;

  result = qword_101411310;
  if (!qword_101411310)
  {
    result = swift_getWitnessTable(&unk_100F36C98, &type metadata for CRLWPShapeVerticalAlignmentData);
    atomic_store(result, (unint64_t *)&qword_101411310);
  }
  return result;
}

id sub_100D66FCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLGenerativePlaygroundAvailabilityHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLGenerativePlaygroundAvailabilityHelper()
{
  return objc_opt_self(_TtC8Freeform41CRLGenerativePlaygroundAvailabilityHelper);
}

uint64_t sub_100D6701C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t (*v34)();
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  _BYTE v42[24];
  uint64_t v43;

  v37 = a6;
  v38 = a2;
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v6 + 120;
  swift_beginAccess(v6 + 120, v41, 32, 0);
  v18 = *(_QWORD *)(v6 + 120);
  v19 = *(_QWORD *)(v18 + 16);
  v39 = a3;
  v40 = a4;
  v43 = a1;
  if (v19 && (v20 = sub_100843264(a1), (v21 & 1) != 0))
  {
    v22 = v20;
    v23 = *(_QWORD *)(v18 + 56);
    v24 = type metadata accessor for CRLBoardEntity(0);
    v36 = v13;
    v25 = *(_QWORD *)(v24 - 8);
    sub_1004B8460(v23 + *(_QWORD *)(v25 + 72) * v22, (uint64_t)v16, type metadata accessor for CRLBoardEntity);
    v13 = v36;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v16, 0, 1, v24);
  }
  else
  {
    v24 = type metadata accessor for CRLBoardEntity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
  }
  swift_endAccess(v41);
  type metadata accessor for CRLBoardEntity(0);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  v27 = v26(v16, 1, v24);
  sub_10086290C((uint64_t)v16);
  if (v27 == 1)
  {
    v28 = type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError(0);
    v29 = sub_100C80CF8();
    swift_allocError(v28, v29, 0, 0);
    v31 = v30;
    sub_1004B8460(v43, v30, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload(v31, v28, 0);
    return swift_willThrow(v32);
  }
  else
  {
    sub_1004B8460(v43, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess(v17, v42, 33, 0);
    v34 = sub_100CF9C00(v41, (uint64_t)v13);
    if (!v26(v35, 1, v24))
      sub_1006E7644(v38, v39, v40, a5, v37);
    ((void (*)(_QWORD *, _QWORD))v34)(v41, 0);
    swift_endAccess(v42);
    return sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_100D672AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 112);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLBoardEntityStore()
{
  return objc_opt_self(_TtC8Freeform19CRLBoardEntityStore);
}

uint64_t type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError(uint64_t a1)
{
  uint64_t result;

  result = qword_101411460;
  if (!qword_101411460)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardEntityStore.BoardEntityStoreError);
  return result;
}

uint64_t sub_100D67334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;

  v47 = a4;
  v42 = a2;
  v7 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v7);
  v45 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = __chkstk_darwin(v9);
  v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v39 - v12;
  v14 = sub_1004B804C(&qword_1013FE140);
  v15 = __chkstk_darwin(v14);
  v43 = (char **)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - v17;
  v40 = v4 + 120;
  swift_beginAccess(v4 + 120, v46, 32, 0);
  v44 = v4;
  v19 = *(_QWORD *)(v4 + 120);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_100843264(a1), (v21 & 1) != 0))
  {
    v22 = v20;
    v23 = *(_QWORD *)(v19 + 56);
    v24 = type metadata accessor for CRLBoardEntity(0);
    v39 = v13;
    v25 = *(_QWORD *)(v24 - 8);
    sub_1004B8460(v23 + *(_QWORD *)(v25 + 72) * v22, (uint64_t)v18, type metadata accessor for CRLBoardEntity);
    v13 = v39;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
  }
  else
  {
    v24 = type metadata accessor for CRLBoardEntity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
  }
  swift_endAccess(v46);
  type metadata accessor for CRLBoardEntity(0);
  v26 = *(_QWORD *)(v24 - 8);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v24);
  sub_10086290C((uint64_t)v18);
  if (v27 == 1)
  {
    sub_1004B8460(a1, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v44 + 112);
    v29 = a1;
    v30 = v41;
    sub_1004B8460(v29, v41, type metadata accessor for CRLBoardIdentifier);
    v31 = v45;
    sub_1004B8460(v47, v45, type metadata accessor for CRLBoardViewModelMetadata);
    swift_bridgeObjectRetain(a3);
    v32 = v43;
    sub_1006E7048(Strong, v30, v42, a3, v31, 0, 0xF000000000000000, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v24);
    swift_beginAccess(v40, v46, 33, 0);
    sub_10083E350((uint64_t)v32, (uint64_t)v13);
    return swift_endAccess(v46);
  }
  else
  {
    v34 = type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError(0);
    v35 = sub_100C80CF8();
    swift_allocError(v34, v35, 0, 0);
    v37 = v36;
    sub_1004B8460(a1, v36, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload(v37, v34, 1);
    return swift_willThrow(v38);
  }
}

uint64_t sub_100D6767C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    *v9 = *v10;
    v11 = v10[1];
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
    swift_storeEnumTagMultiPayload(a1, a3, v6);
  }
  return a1;
}

uint64_t sub_100D67730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    v6 = swift_getEnumCaseMultiPayload(a2, a3) == 1;
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
    swift_storeEnumTagMultiPayload(a1, a3, v6);
  }
  return a1;
}

unint64_t sub_100D677D4()
{
  unint64_t result;

  result = qword_101411498;
  if (!qword_101411498)
  {
    result = swift_getWitnessTable(&unk_100F36E90, &type metadata for CRLDeleteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_101411498);
  }
  return result;
}

uint64_t sub_100D6781C()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100D6784C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD v52[2];
  _QWORD v53[6];

  v51 = a1;
  v1 = type metadata accessor for InputConnectionBehavior(0);
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  __chkstk_darwin(v1);
  v48 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v3);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v46 = (char *)&v42 - v6;
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v43 = (char *)&v42 - v24;
  v45 = sub_1004B804C(&qword_1014114D0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x736472616F42, 0xE600000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v27(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter title for boards", 26, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010100F6C0);
  static Locale.current.getter(v28);
  v27(v12, v26, v9);
  v29 = v44;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter description for boards", 32, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v29, 0, 1, v19);
  v53[0] = 0;
  v30 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xED00003F73647261);
  static Locale.current.getter(v30);
  v27(v12, v26, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Prompt for selecting a board from the list", 42, 2);
  v31 = v46;
  IntentDialog.init(_:)(v22);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v33(v31, 0, 1, v32);
  v34 = v47;
  v33(v47, 1, 1, v32);
  v35 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, enum case for InputConnectionBehavior.default(_:), v50);
  v36 = sub_100511300();
  v37 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v43, v29, v53, v31, v34, v35, v36);
  v38 = v51;
  *v51 = v37;
  sub_1004B804C(&qword_1013E1128);
  v52[0] = 0xD00000000000001FLL;
  v52[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v52, &type metadata for String, &protocol witness table for String);
  v39 = type metadata accessor for AppDependencyManager(0);
  v40 = static AppDependencyManager.shared.getter(v39);
  result = AppDependency.__allocating_init(key:manager:)(v53, v40);
  v38[1] = result;
  v38[5] = (uint64_t)&type metadata for CRLDeleteBoardIntentPerformer;
  v38[6] = (uint64_t)&off_101297AE0;
  return result;
}

uint64_t sub_100D67D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_100D67D4C, 0, 0);
}

uint64_t sub_100D67D4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = IntentParameter.wrappedValue.getter(v0 + 7);
  v2 = v0[7];
  v0[10] = v2;
  AppDependency.wrappedValue.getter(v1);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v5 = (char *)&dword_1014078B0 + dword_1014078B0;
  v3 = (_QWORD *)swift_task_alloc(unk_1014078B4);
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_100D67DF4;
  return ((uint64_t (*)(uint64_t, _QWORD *))v5)(v2, v0 + 2);
}

uint64_t sub_100D67DF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v4 = sub_100C18C04;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v2 + 16));
    v4 = sub_100D67E70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100D67E70(uint64_t a1)
{
  uint64_t v1;

  static IntentResult.result<>()(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100D67EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_1014815A0);
  sub_1004F2A1C(v10, (uint64_t)qword_1014815A0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x42206574656C6544, 0xED0000736472616FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

unint64_t sub_100D6803C()
{
  unint64_t result;

  result = qword_1014114A0;
  if (!qword_1014114A0)
  {
    result = swift_getWitnessTable(&unk_100F36EB8, &type metadata for CRLDeleteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1014114A0);
  }
  return result;
}

unint64_t sub_100D68084()
{
  unint64_t result;

  result = qword_1014114A8;
  if (!qword_1014114A8)
  {
    result = swift_getWitnessTable(&unk_100F36F48, &type metadata for CRLDeleteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1014114A8);
  }
  return result;
}

unint64_t sub_100D680CC()
{
  unint64_t result;

  result = qword_1014114B0;
  if (!qword_1014114B0)
  {
    result = swift_getWitnessTable(&unk_100F36F70, &type metadata for CRLDeleteBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1014114B0);
  }
  return result;
}

uint64_t sub_100D68110(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C1B4, 1);
}

uint64_t sub_100D68120(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C18C, 1);
}

uint64_t sub_100D68130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DDF48 != -1)
    swift_once(&qword_1013DDF48, sub_100D67EA4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_1014815A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100D681A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_1004B804C(&qword_1014114E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014114E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, a1, a2);
  v10._countAndFlagsBits = 0x206574656C6544;
  v10._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(byte_100F36FA8);
  v12 = sub_1004B804C(&qword_1014114F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_100D68314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1014114DC);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1004CF80C;
  v4[8] = a1;
  v4[9] = v1;
  return swift_task_switch(sub_100D67D4C, 0, 0);
}

uint64_t sub_100D68378(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D6803C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLDeleteBoardIntent()
{
  return &type metadata for CRLDeleteBoardIntent;
}

uint64_t sub_100D683B0()
{
  return sub_1004CBA30(&qword_1014114C0, &qword_1014114C8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100D683DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100D68404()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_1014815B8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014815B8);
  return Tips.Event.init<>(id:)(0xD000000000000026, 0x800000010100F6E0);
}

ValueMetadata *type metadata accessor for CRLTipFollowParticipant()
{
  return &type metadata for CRLTipFollowParticipant;
}

uint64_t sub_100D68478@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  v43 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E6D80);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E6D88);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1004B804C(&qword_1013F5970);
  v38 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v9, v19);
  KeyPath = swift_getKeyPath(byte_100F37080);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v12, KeyPath, v9, v19);
  v21 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v21);
  v22 = swift_getKeyPath(byte_100F370B8);
  v23 = sub_1004CBA30(&qword_1013F5978, &qword_1013E6D88, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v16, v22, v13, v23);
  v24 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v24);
  v44 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v44, &type metadata for Int);
  v26 = v39;
  v25 = v40;
  v27 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v37, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v40);
  v28 = sub_1004B804C(&qword_1013F5980);
  v29 = v41;
  v41[3] = v28;
  v29[4] = sub_10085A054();
  sub_10050D1B0(v29);
  v30 = sub_1004CBA30(&qword_1013F5998, &qword_1013F5970, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v31 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v32 = v36;
  v33 = v42;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v18, v8, v27, v36, v42, v30, v31, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v18, v32);
}

uint64_t sub_100D687D0()
{
  return sub_100D689FC();
}

uint64_t sub_100D687F4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v0 = sub_1004B804C(&qword_1013E6D60);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Tips.Rule(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DDF50 != -1)
    swift_once(&qword_1013DDF50, sub_100D68404);
  v9 = sub_1004F2A1C(v0, (uint64_t)qword_1014815B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v9, v0);
  v10 = type metadata accessor for Tips.EmptyDonation(0);
  v11 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v12 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v4, sub_100D68478, 0, v10, v11, v12);
  v13 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = static Tips.RuleBuilder.buildPartialBlock(first:)(v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100D68970@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100D69084();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100D689B0()
{
  unint64_t result;

  result = qword_1014114F8;
  if (!qword_1014114F8)
  {
    result = swift_getWitnessTable(&unk_100F36FE8, &type metadata for CRLTipFollowParticipant);
    atomic_store(result, (unint64_t *)&qword_1014114F8);
  }
  return result;
}

uint64_t sub_100D689FC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  v10[0] = v5;
  v10[1] = v7;
  v8 = sub_1004D292C();
  return Text.init<A>(_:)(v10, &type metadata for String, v8);
}

void sub_100D68AF8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  *(_QWORD *)&v91 = v5;
  *((_QWORD *)&v91 + 1) = v7;
  v8 = sub_1004D292C();
  v9 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(589505315, 0xE400000000000000, 1, 0, &type metadata for String, v8);
  if (*(_QWORD *)(v9 + 16) == 2)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 16))
    {
      v10 = *(_QWORD *)(v9 + 48);
      v11 = *(_QWORD *)(v9 + 56);
      v91 = *(_OWORD *)(v9 + 32);
      v92 = v10;
      v93 = v11;
      v12 = sub_1006318F0();
      swift_bridgeObjectRetain(v11);
      v88 = v12;
      v13 = Text.init<A>(_:)(&v91, &type metadata for Substring, v12);
      v15 = v14;
      v17 = v16;
      v19 = v18 & 1;
      v20 = Image.init(systemName:)(0x73697370696C6C65, 0xEF656C637269632ELL);
      v21 = Text.init(_:)(v20);
      v23 = v22;
      v25 = v24 & 1;
      v27 = static Text.+ infix(_:_:)(v13, v15, v19, v17, v21, v22, v25, v26);
      v83 = v28;
      v84 = v27;
      v30 = v29;
      v85 = v31;
      sub_1005EFC24(v21, v23, v25);
      swift_bridgeObjectRelease();
      sub_1005EFC24(v13, v15, v19);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v9 + 16) >= 2uLL)
      {
        v32 = v30 & 1;
        v82 = *(_OWORD *)(v9 + 64);
        v34 = *(_QWORD *)(v9 + 80);
        v33 = *(_QWORD *)(v9 + 88);
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRelease();
        v91 = v82;
        v92 = v34;
        v93 = v33;
        v35 = Text.init<A>(_:)(&v91, &type metadata for Substring, v88);
        v37 = v36;
        v39 = v38 & 1;
        static Text.+ infix(_:_:)(v84, v83, v32, v85, v35, v36, v39, v40);
        sub_1005EFC24(v35, v37, v39);
        swift_bridgeObjectRelease();
        v41 = v84;
        v42 = v83;
        v43 = v32;
LABEL_10:
        sub_1005EFC24(v41, v42, v43);
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(_QWORD *)&v91 = v5;
  *((_QWORD *)&v91 + 1) = v7;
  v94[0] = 589505315;
  v94[1] = 0xE400000000000000;
  v44 = sub_100D69040();
  v45 = sub_1005ED1A0();
  v46 = BidirectionalCollection<>.starts<A>(with:)(v94, &type metadata for String, &type metadata for String, v44, v45);
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
  {
    v47 = Image.init(systemName:)(0x73697370696C6C65, 0xEF656C637269632ELL);
    v48 = Text.init(_:)(v47);
    if (*(_QWORD *)(v9 + 16))
    {
      v52 = v51;
      v53 = v50 & 1;
      v89 = *(_OWORD *)(v9 + 32);
      v55 = *(_QWORD *)(v9 + 48);
      v54 = *(_QWORD *)(v9 + 56);
      v56 = v48;
      v86 = v48;
      v57 = v49;
      swift_bridgeObjectRetain(v54);
      swift_bridgeObjectRelease();
      v91 = v89;
      v92 = v55;
      v93 = v54;
      v58 = sub_1006318F0();
      v59 = Text.init<A>(_:)(&v91, &type metadata for Substring, v58);
      v61 = v60;
      v63 = v62 & 1;
      static Text.+ infix(_:_:)(v56, v57, v53, v52, v59, v60, v63, v64);
      sub_1005EFC24(v59, v61, v63);
      swift_bridgeObjectRelease();
      v41 = v86;
      v42 = v57;
      v43 = v53;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  if (*(_QWORD *)(v9 + 16))
  {
    v90 = *(_OWORD *)(v9 + 32);
    v66 = *(_QWORD *)(v9 + 48);
    v65 = *(_QWORD *)(v9 + 56);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRelease();
    v91 = v90;
    v92 = v66;
    v93 = v65;
    v67 = sub_1006318F0();
    v68 = Text.init<A>(_:)(&v91, &type metadata for Substring, v67);
    v70 = v69;
    v87 = v69;
    v72 = v71;
    v74 = v73 & 1;
    v75 = Image.init(systemName:)(0x73697370696C6C65, 0xEF656C637269632ELL);
    v76 = Text.init(_:)(v75);
    v78 = v77;
    v80 = v79 & 1;
    static Text.+ infix(_:_:)(v68, v70, v74, v72, v76, v77, v80, v81);
    sub_1005EFC24(v76, v78, v80);
    swift_bridgeObjectRelease();
    v41 = v68;
    v42 = v87;
    v43 = v74;
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
}

unint64_t sub_100D69040()
{
  unint64_t result;

  result = qword_101411500;
  if (!qword_101411500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_101411500);
  }
  return result;
}

unint64_t sub_100D69084()
{
  unint64_t result;

  result = qword_101411508;
  if (!qword_101411508)
  {
    result = swift_getWitnessTable(&unk_100F37020, &type metadata for CRLTipFollowParticipant);
    atomic_store(result, (unint64_t *)&qword_101411508);
  }
  return result;
}

_QWORD *sub_100D690C8(void *a1, void *a2)
{
  _QWORD *v2;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;

  v2[4] = sub_1008D6AE0((uint64_t)_swiftEmptyArrayStorage);
  v2[5] = 0;
  v2[2] = a2;
  v2[3] = a1;
  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = a1;
  v7 = a2;
  v8 = objc_msgSend(v5, "defaultCenter");
  if (qword_1013DCAC8 != -1)
    swift_once(&qword_1013DCAC8, sub_100589738);
  v9 = qword_10147EA38;
  v10 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v11 = swift_allocObject(&unk_1012A4A28, 24, 7);
  swift_weakInit(v11 + 16, v2);
  v16[4] = sub_100D6B324;
  v17 = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(_QWORD *)"";
  v16[2] = sub_100568280;
  v16[3] = &unk_1012A4A40;
  v12 = _Block_copy(v16);
  v13 = objc_msgSend(v8, "addObserverForName:object:queue:usingBlock:", v9, 0, v10, v12, swift_release(v17).n128_f64[0]);

  _Block_release(v12);
  v14 = v2[5];
  v2[5] = v13;
  swift_unknownObjectRelease(v14);
  return v2;
}

double sub_100D69270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v13[2];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    v6 = Notification.userInfo.getter(Strong);
    if (v6)
    {
      v7 = v6;
      v13[0] = 0xD00000000000001DLL;
      v13[1] = 0x8000000100FB5A90;
      AnyHashable.init<A>(_:)(v13, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v7 + 16) && (v8 = sub_1008432BC((uint64_t)v14), (v9 & 1) != 0))
      {
        sub_1004CB6E8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      swift_bridgeObjectRelease(v7);
      sub_1004B89A4((uint64_t)v14);
      if (*((_QWORD *)&v16 + 1))
      {
        v10 = sub_1004B804C((uint64_t *)&unk_1013E49B8);
        if ((swift_dynamicCast(v14, &v15, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
        {
          v11 = v14[0];
          swift_retain(v5);
          sub_100D6AD28(v11, v5);
          v12 = swift_bridgeObjectRelease(v11);
          swift_release_n(v5, 2, v12);
        }
        else
        {
          *(_QWORD *)&result = swift_release(v5).n128_u64[0];
        }
        return result;
      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    swift_release(v5);
    sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
  }
  return result;
}

uint64_t sub_100D693E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLSharedBoardThumbnailManager()
{
  return objc_opt_self(_TtC8Freeform30CRLSharedBoardThumbnailManager);
}

void sub_100D694A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t inited;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  id v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[5];
  _QWORD *v63;
  char v64[72];
  char v65[32];
  char v66[32];

  v4 = v3;
  v56 = a3;
  v58 = a2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v54 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v54 + 64);
  __chkstk_darwin(v6);
  v57 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v59 = (uint64_t)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v3 + 32;
  swift_beginAccess(v3 + 32, v66, 0, 0);
  v17 = *(_QWORD *)(v3 + 32);
  if (!*(_QWORD *)(v17 + 16)
    || (swift_bridgeObjectRetain(v17), sub_100843264(a1), v19 = v18, swift_bridgeObjectRelease(v17), (v19 & 1) == 0))
  {
    sub_100C9F8F8(a1, (uint64_t)v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    v20 = v59;
    sub_1004B84E0((uint64_t)v13, v59, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100D6B06C(v20 + *(int *)(v14 + 28), (uint64_t)v10);
    v21 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v10, 1, v21);
    sub_1004CB800((uint64_t)v10, &qword_1013F5478);
    if (v22 == 1)
    {
      v23 = v20;
    }
    else
    {
      if (qword_1013DD8C8 != -1)
        swift_once(&qword_1013DD8C8, sub_100A069BC);
      swift_beginAccess(&static OS_os_log.shareState, v65, 0, 0);
      v24 = (void *)static OS_os_log.shareState;
      v53 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v53, v64);
      v52 = xmmword_100EF5E40;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v51 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v51;
      *(_QWORD *)(inited + 32) = v58;
      v26 = v56;
      *(_QWORD *)(inited + 40) = v56;
      v27 = v24;
      v28 = swift_bridgeObjectRetain(v26);
      v29 = static os_log_type_t.default.getter(v28);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "Share thumbnail was invalidated for %@", 38, 2, inited);
      swift_setDeallocating(inited);
      v50 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v50);

      v30 = (void *)objc_opt_self(NSTimer);
      v49 = a1;
      v31 = v57;
      sub_1004B8460(a1, v57, type metadata accessor for CRLBoardIdentifier);
      v32 = *(unsigned __int8 *)(v54 + 80);
      v33 = (v32 + 40) & ~v32;
      v34 = (_QWORD *)swift_allocObject(&unk_1012A49B0, v33 + v7, v32 | 7);
      v35 = v58;
      v34[2] = v58;
      v34[3] = v26;
      v34[4] = v4;
      sub_1004B84E0(v31, (uint64_t)v34 + v33, type metadata accessor for CRLBoardIdentifier);
      v62[4] = sub_100D6B14C;
      v63 = v34;
      v62[0] = _NSConcreteStackBlock;
      v62[1] = *(_QWORD *)"";
      v62[2] = sub_1004C6194;
      v62[3] = &unk_1012A49C8;
      v36 = _Block_copy(v62);
      v37 = v63;
      swift_bridgeObjectRetain(v26);
      swift_retain(v4);
      swift_release(v37);
      v38 = objc_msgSend(v30, "scheduledTimerWithTimeInterval:repeats:block:", 0, v36, 3600.0);
      _Block_release(v36);
      v39 = (void *)static OS_os_log.shareState;
      v40 = swift_initStackObject(v53, &v61);
      *(_OWORD *)(v40 + 16) = v52;
      v41 = v51;
      *(_QWORD *)(v40 + 56) = &type metadata for String;
      *(_QWORD *)(v40 + 64) = v41;
      *(_QWORD *)(v40 + 32) = v35;
      *(_QWORD *)(v40 + 40) = v26;
      swift_bridgeObjectRetain(v26);
      v42 = v39;
      v44 = static os_log_type_t.default.getter(v43);
      sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v44, "Share thumbnail timer created for %@", 36, 2, v40);
      swift_setDeallocating(v40);
      swift_arrayDestroy(v40 + 32, 1, v50);

      sub_1004B8460(v49, v31, type metadata accessor for CRLBoardIdentifier);
      swift_beginAccess(v55, v62, 33, 0);
      v45 = v38;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v4 + 32));
      v60 = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v4 + 32) = 0x8000000000000000;
      sub_10082AB64((uint64_t)v45, v31, isUniquelyReferenced_nonNull_native);
      v47 = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v4 + 32) = v60;
      swift_bridgeObjectRelease(v47);
      sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
      swift_endAccess(v62);

      v23 = v59;
    }
    sub_1004B84A4(v23, type metadata accessor for CRLBoardViewModelMetadata);
  }
}

void sub_100D69A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[72];
  _BYTE v34[24];

  v31 = a5;
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v34, 0, 0);
  v15 = (void *)static OS_os_log.shareState;
  v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v16, v33);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  v18 = v15;
  v19 = swift_bridgeObjectRetain(a3);
  v20 = static os_log_type_t.default.getter(v19);
  sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Share thumbnail timer fired for %@", 34, 2, inited);
  swift_setDeallocating(inited);
  v21 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v21);

  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  v23 = v31;
  sub_1004B8460(v31, (uint64_t)&v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for CRLBoardIdentifier);
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = (v24 + 40) & ~v24;
  v26 = (v10 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (_QWORD *)swift_allocObject(&unk_1012A4A00, v26 + 16, v24 | 7);
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = a4;
  sub_1004B84E0((uint64_t)v11, (uint64_t)v27 + v25, type metadata accessor for CRLBoardIdentifier);
  v28 = (_QWORD *)((char *)v27 + v26);
  *v28 = a2;
  v28[1] = a3;
  swift_bridgeObjectRetain(a3);
  swift_retain(a4);
  v29 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_101411630, (uint64_t)v27);
  swift_release(v29);
  swift_beginAccess(a4 + 32, v32, 33, 0);
  v30 = (void *)sub_100847838(v23);
  swift_endAccess(v32);

}

uint64_t sub_100D69CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_100D69CF0, 0, 0);
}

uint64_t sub_100D69CF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140DEFC);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_100D69D48;
  return sub_100C9C704(*(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_100D69D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = *(_QWORD *)(*v2 + 48);
  v5 = *v2;
  *(_QWORD *)(v5 + 56) = a1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_errorRelease(v1);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  if (!a1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  v7 = (_QWORD *)swift_task_alloc(dword_10141153C);
  *(_QWORD *)(v5 + 64) = v7;
  *v7 = v5;
  v7[1] = sub_100D69DF0;
  return sub_100D69E74(*(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), a1);
}

uint64_t sub_100D69DF0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_100D69E44, 0, 0);
}

uint64_t sub_100D69E44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D69E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[53] = a4;
  v5[54] = v4;
  v5[51] = a2;
  v5[52] = a3;
  v5[50] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[55] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[56] = v7;
  v5[57] = v8;
  return swift_task_switch(sub_100D69EE8, v7, v8);
}

uint64_t sub_100D69EE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  __n128 v19;
  uint64_t (*v20)(_QWORD, double);

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v2 = *(_QWORD *)(v0 + 416);
  v1 = *(void **)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  swift_beginAccess(&static OS_os_log.shareState, v0 + 336, 0, 0);
  v4 = (void *)static OS_os_log.shareState;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_QWORD *)(v0 + 464) = v5;
  inited = swift_initStackObject(v5, v0 + 88);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v7 = sub_1004CFC2C();
  *(_QWORD *)(v0 + 472) = v7;
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  v8 = v4;
  v9 = swift_bridgeObjectRetain(v2);
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Share thumbnail updating for %@", 31, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  *(_QWORD *)(v0 + 480) = v11;
  swift_arrayDestroy(inited + 32, 1, v11);

  v12 = objc_msgSend(v1, "copy");
  _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 304), v12);
  swift_unknownObjectRelease(v12);
  v13 = sub_1004DAF40();
  *(_QWORD *)(v0 + 488) = v13;
  if ((swift_dynamicCast(v0 + 384, v0 + 304, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
  {
    v14 = *(void **)(v0 + 384);
    *(_QWORD *)(v0 + 496) = v14;
    v15 = unk_1013E45B4;
    v20 = (uint64_t (*)(_QWORD, double))((char *)&dword_1013E45B0 + dword_1013E45B0);
    v16 = v14;
    v17 = (_QWORD *)swift_task_alloc(v15);
    *(_QWORD *)(v0 + 504) = v17;
    *v17 = v0;
    v17[1] = sub_100D6A114;
    return v20(*(_QWORD *)(v0 + 400), 2.0);
  }
  else
  {
    v19 = swift_release(*(_QWORD *)(v0 + 440));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v19);
  }
}

uint64_t sub_100D6A114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 504);
  v3[64] = a1;
  v3[65] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100D6A5F0;
  else
    v5 = sub_100D6A180;
  return swift_task_switch(v5, v3[56], v3[57]);
}

uint64_t sub_100D6A180()
{
  uint64_t v0;
  UIImage *v1;
  NSData *v2;
  __n128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t *v50;
  __int128 v51;
  __int128 v52;
  void *v53;

  v1 = (UIImage *)objc_msgSend(*(id *)(v0 + 512), "UIImage");
  v2 = UIImagePNGRepresentation(v1);

  if (v2)
  {
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v8 = static CKShare.SystemFieldKey.thumbnailImageData.getter(v7);
    v10 = v9;
    if (v6 >> 60 != 15)
    {
      *((_QWORD *)&v52 + 1) = &type metadata for Data;
      v53 = &protocol witness table for Data;
      *(_QWORD *)&v51 = v4;
      *((_QWORD *)&v51 + 1) = v6;
      goto LABEL_6;
    }
  }
  else
  {
    v8 = static CKShare.SystemFieldKey.thumbnailImageData.getter(v3);
    v10 = v11;
    v4 = 0;
    v6 = 0xF000000000000000;
  }
  v53 = 0;
  v51 = 0u;
  v52 = 0u;
LABEL_6:
  *(_QWORD *)(v0 + 536) = v4;
  *(_QWORD *)(v0 + 528) = v6;
  v13 = *(_QWORD *)(v0 + 488);
  v12 = *(void **)(v0 + 496);
  sub_10057939C(v4, v6);
  CKRecordKeyValueSetting.subscript.setter(&v51, v8, v10, v13);
  if ((uint64_t)objc_msgSend(v12, "size") <= 0x100000)
  {
    v37 = *(void **)(v0 + 496);
    v38 = dword_10140DF04;
    v39 = v37;
    v40 = (_QWORD *)swift_task_alloc(v38);
    *(_QWORD *)(v0 + 544) = v40;
    *v40 = v0;
    v40[1] = sub_100D6A7DC;
    return sub_100C9CCDC(*(_QWORD *)(v0 + 400), (uint64_t)v37, 1);
  }
  else
  {
    v50 = (uint64_t *)(v0 + 392);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    v14 = *(void **)(v0 + 496);
    v15 = *(_QWORD *)(v0 + 480);
    v16 = *(_QWORD *)(v0 + 464);
    v48 = *(_QWORD *)(v0 + 440);
    v49 = *(void **)(v0 + 512);
    swift_beginAccess(&static OS_os_log.crlDefault, v0 + 360, 0, 0);
    v17 = (void *)static OS_os_log.crlDefault;
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v19 = v17;
    v20 = objc_msgSend(v14, "size");
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v20;
    v21 = static os_log_type_t.error.getter(v20);
    sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v21, "Guard CKShare size %d <= 1MB", 28, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v15);

    v22 = sub_1006743E4();
    v23 = swift_allocError(&type metadata for CRLZoneShareControllerError, v22, 0, 0);
    swift_willThrow(v24);
    swift_release(v48);
    sub_1004BE2FC(v4, v6);

    *(_QWORD *)(v0 + 392) = v23;
    swift_errorRetain(v23);
    v25 = sub_1004B804C(&qword_1013E0210);
    v26 = swift_dynamicCast(v25, v50, v25, &type metadata for CRLZoneShareControllerError, 0);
    v28 = *(_QWORD *)(v0 + 472);
    v27 = *(_QWORD *)(v0 + 480);
    v29 = *(_QWORD *)(v0 + 464);
    if ((v26 & 1) != 0)
    {
      swift_errorRelease(v23);
      v30 = (void *)static OS_os_log.shareState;
      v31 = swift_initStackObject(v29, v0 + 160);
      *(_OWORD *)(v31 + 16) = xmmword_100EF5E40;
      v32 = v30;
      v33 = UUID.uuidString.getter(v32);
      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = v28;
      *(_QWORD *)(v31 + 32) = v33;
      *(_QWORD *)(v31 + 40) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v35, "Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, v31);
      swift_setDeallocating(v31);
      swift_arrayDestroy(v31 + 32, 1, v27);

      v36 = *v50;
    }
    else
    {
      swift_errorRelease(*v50);
      v42 = (void *)static OS_os_log.shareState;
      v43 = swift_initStackObject(v29, v0 + 232);
      *(_OWORD *)(v43 + 16) = xmmword_100EF5E40;
      v44 = v42;
      v45 = UUID.uuidString.getter(v44);
      *(_QWORD *)(v43 + 56) = &type metadata for String;
      *(_QWORD *)(v43 + 64) = v28;
      *(_QWORD *)(v43 + 32) = v45;
      *(_QWORD *)(v43 + 40) = v46;
      v47 = static os_log_type_t.error.getter(v45);
      sub_100A06EBC((uint64_t)v44, &_mh_execute_header, v47, "Couldn't get board grid size thumbnail for board %@", 51, 2, v43);
      swift_setDeallocating(v43);
      swift_arrayDestroy(v43 + 32, 1, v27);

      v36 = v23;
    }
    swift_errorRelease(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100D6A5F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 496);
  swift_release(*(_QWORD *)(v0 + 440));

  v2 = *(_QWORD *)(v0 + 520);
  *(_QWORD *)(v0 + 392) = v2;
  swift_errorRetain(v2);
  v3 = sub_1004B804C(&qword_1013E0210);
  v4 = swift_dynamicCast(v3, v0 + 392, v3, &type metadata for CRLZoneShareControllerError, 0);
  v6 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 464);
  if ((v4 & 1) != 0)
  {
    swift_errorRelease(v2);
    v8 = (void *)static OS_os_log.shareState;
    inited = swift_initStackObject(v7, v0 + 160);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v10 = v8;
    v11 = UUID.uuidString.getter(v10);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v6;
    *(_QWORD *)(inited + 32) = v11;
    *(_QWORD *)(inited + 40) = v12;
    v13 = static os_log_type_t.error.getter(v11);
    sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v13, "Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v5);

    v14 = *(_QWORD *)(v0 + 392);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 392));
    v15 = (void *)static OS_os_log.shareState;
    v16 = swift_initStackObject(v7, v0 + 232);
    *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
    v17 = v15;
    v18 = UUID.uuidString.getter(v17);
    *(_QWORD *)(v16 + 56) = &type metadata for String;
    *(_QWORD *)(v16 + 64) = v6;
    *(_QWORD *)(v16 + 32) = v18;
    *(_QWORD *)(v16 + 40) = v19;
    v20 = static os_log_type_t.error.getter(v18);
    sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v20, "Couldn't get board grid size thumbnail for board %@", 51, 2, v16);
    swift_setDeallocating(v16);
    swift_arrayDestroy(v16 + 32, 1, v5);

    v14 = v2;
  }
  swift_errorRelease(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6A7DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 544);
  *(_QWORD *)(*v1 + 552) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 448);
    v5 = *(_QWORD *)(v2 + 456);
    v6 = sub_100D6A8B4;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 448);
    v5 = *(_QWORD *)(v2 + 456);
    v6 = sub_100D6A848;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100D6A848()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(void **)(v0 + 512);
  v4 = *(void **)(v0 + 496);
  v5 = *(_QWORD *)(v0 + 440);

  swift_release(v5);
  sub_1004BE2FC(v1, v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6A8B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(void **)(v0 + 512);
  v4 = *(void **)(v0 + 496);
  swift_release(*(_QWORD *)(v0 + 440));

  sub_1004BE2FC(v1, v2);
  v5 = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 392) = v5;
  swift_errorRetain(v5);
  v6 = sub_1004B804C(&qword_1013E0210);
  v7 = swift_dynamicCast(v6, v0 + 392, v6, &type metadata for CRLZoneShareControllerError, 0);
  v9 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 464);
  if ((v7 & 1) != 0)
  {
    swift_errorRelease(v5);
    v11 = (void *)static OS_os_log.shareState;
    inited = swift_initStackObject(v10, v0 + 160);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v13 = v11;
    v14 = UUID.uuidString.getter(v13);
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v9;
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v15;
    v16 = static os_log_type_t.error.getter(v14);
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v16, "Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v8);

    v17 = *(_QWORD *)(v0 + 392);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 392));
    v18 = (void *)static OS_os_log.shareState;
    v19 = swift_initStackObject(v10, v0 + 232);
    *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
    v20 = v18;
    v21 = UUID.uuidString.getter(v20);
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = v9;
    *(_QWORD *)(v19 + 32) = v21;
    *(_QWORD *)(v19 + 40) = v22;
    v23 = static os_log_type_t.error.getter(v21);
    sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v23, "Couldn't get board grid size thumbnail for board %@", 51, 2, v19);
    swift_setDeallocating(v19);
    swift_arrayDestroy(v19 + 32, 1, v8);

    v17 = v5;
  }
  swift_errorRelease(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100D6AAC0(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  swift_beginAccess(v1 + 32, v12, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain(v4);
    v5 = sub_100843264(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRelease(v4);
      if (qword_1013DD8C8 != -1)
        swift_once(&qword_1013DD8C8, sub_100A069BC);
      swift_beginAccess(&static OS_os_log.shareState, &v11, 0, 0);
      v8 = (id)static OS_os_log.shareState;
      v10 = static os_log_type_t.default.getter(v9);
      sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Share thumbnail timer firing early because board closed.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      objc_msgSend(v7, "fire");
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
    }
  }
  return result;
}

void sub_100D6ABD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  void *v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = v1 + 32;
  swift_beginAccess(v1 + 32, v14, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 32));
    v5 = sub_100843264(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRelease(v4);
      if (qword_1013DD8C8 != -1)
        swift_once(&qword_1013DD8C8, sub_100A069BC);
      swift_beginAccess(&static OS_os_log.shareState, v12, 0, 0);
      v8 = (id)static OS_os_log.shareState;
      v10 = static os_log_type_t.default.getter(v9);
      sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Share thumbnail timer invalidating early because board closed.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

      objc_msgSend(v7, "invalidate");
    }
    else
    {
      swift_bridgeObjectRelease(v4);
    }
  }
  swift_beginAccess(v3, v13, 33, 0);
  v11 = (void *)sub_100847838(a1);
  swift_endAccess(v13);

}

void sub_100D6AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;

  v39[1] = a2;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v3);
  v41 = (uint64_t)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v44 = (uint64_t)v39 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)v39 - v12;
  v14 = *(_QWORD *)(a1 + 56);
  v42 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v43 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v40 = v8;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v43)
      goto LABEL_26;
    v24 = *(_QWORD *)(v42 + 8 * v23);
    ++v18;
    if (!v24)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_26;
      v24 = *(_QWORD *)(v42 + 8 * v18);
      if (!v24)
      {
        v18 = v23 + 2;
        if (v23 + 2 >= v43)
          goto LABEL_26;
        v24 = *(_QWORD *)(v42 + 8 * v18);
        if (!v24)
        {
          v18 = v23 + 3;
          if (v23 + 3 >= v43)
            goto LABEL_26;
          v24 = *(_QWORD *)(v42 + 8 * v18);
          if (!v24)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v6 + 72) * v22, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v26 = v44;
    sub_1004B84E0((uint64_t)v13, v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B8460(v26, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload(v8, v5) == 2)
    {
      v27 = (uint64_t *)&v8[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
      v28 = v18;
      v29 = a1;
      v30 = v13;
      v31 = v6;
      v32 = v5;
      v33 = *v27;
      v34 = v27[1];
      v35 = (uint64_t)v8;
      v36 = v41;
      sub_1004B84E0(v35, v41, type metadata accessor for CRLBoardIdentifier);
      v37 = v33;
      a1 = v29;
      v18 = v28;
      sub_100D694A4(v36, v37, v34);
      v38 = v34;
      v5 = v32;
      v6 = v31;
      v13 = v30;
      swift_bridgeObjectRelease(v38);
      v19 = v36;
      v8 = v40;
      v20 = type metadata accessor for CRLBoardIdentifier;
    }
    else
    {
      v19 = (uint64_t)v8;
      v20 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    }
    sub_1004B84A4(v19, v20);
    sub_1004B84A4(v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  v25 = v23 + 4;
  if (v25 >= v43)
  {
LABEL_26:
    swift_release(a1);
    return;
  }
  v24 = *(_QWORD *)(v42 + 8 * v25);
  if (v24)
  {
    v18 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v18 >= v43)
      goto LABEL_26;
    v24 = *(_QWORD *)(v42 + 8 * v18);
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100D6B06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F5478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D6B0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

void sub_100D6B14C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 80);
  sub_100D69A40(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

double sub_100D6B190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D6B1A0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100D6B1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = ((*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100D6B260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = v0 + v3;
  v6 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = *v6;
  v8 = v6[1];
  v9 = (_QWORD *)swift_task_alloc(dword_10141162C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1004CF80C;
  v9[4] = v7;
  v9[5] = v8;
  v9[2] = v4;
  v9[3] = v5;
  return swift_task_switch(sub_100D69CF0, 0, 0);
}

uint64_t sub_100D6B300()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100D6B324(uint64_t a1)
{
  uint64_t v1;

  return sub_100D69270(a1, v1);
}

uint64_t sub_100D6B334()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLiOSPencilTrayPickerFillImageProvider()
{
  return objc_opt_self(_TtC8Freeform39CRLiOSPencilTrayPickerFillImageProvider);
}

uint64_t type metadata accessor for CRLiOSPencilTrayPickerImageProvider()
{
  return objc_opt_self(_TtC8Freeform35CRLiOSPencilTrayPickerImageProvider);
}

void CRLChangeRecord.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLChangeRecord", 24, "init()", 6, 0);
  __break(1u);
}

id CRLChangeRecord.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLChangeRecord();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLChangeRecord()
{
  return objc_opt_self(_TtC8Freeform15CRLChangeRecord);
}

id sub_100D6B504(int a1, void *a2)
{
  char *v2;
  char *v4;
  id v5;
  unint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  id v10;
  objc_super v12;
  objc_super v13;

  *(_DWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind] = a1;
  if (a2)
  {
    v4 = v2;
    v5 = a2;
  }
  else
  {
    v6 = sub_1008E01A8((uint64_t)_swiftEmptyArrayStorage);
    v7 = (objc_class *)type metadata accessor for CRLPropertyMap();
    v8 = (char *)objc_allocWithZone(v7);
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v6;
    v13.receiver = v8;
    v13.super_class = v7;
    v9 = v2;
    v5 = objc_msgSendSuper2(&v13, "init");
  }
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details] = v5;
  v10 = a2;

  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for CRLChangeRecord();
  return objc_msgSendSuper2(&v12, "init");
}

double sub_100D6B5C8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  if (a1)
  {
    v10 = 0;
    v11 = 0;
    sub_1001E9764(a1, (_WORD *)&v11 + 1, &v11, &v10);
    v1 = v10;
    if (v10)
    {
      v2 = sub_1004B804C(&qword_1013E77B0);
      v3 = swift_allocObject(v2, 44, 7);
      *(_QWORD *)&result = 3;
      *(_OWORD *)(v3 + 16) = xmmword_100EF5550;
      v5 = (unsigned __int16)v11;
      *(_DWORD *)(v3 + 32) = HIWORD(v11);
      *(_DWORD *)(v3 + 36) = v5;
      *(_DWORD *)(v3 + 40) = v1;
    }
    else
    {
      v6 = (unsigned __int16)v11;
      v7 = sub_1004B804C(&qword_1013E77B0);
      if (v6)
      {
        v8 = swift_allocObject(v7, 40, 7);
        *(_QWORD *)&result = 2;
        *(_OWORD *)(v8 + 16) = xmmword_100EF5A10;
        *(_DWORD *)(v8 + 32) = HIWORD(v11);
        *(_DWORD *)(v8 + 36) = v6;
      }
      else
      {
        v9 = swift_allocObject(v7, 36, 7);
        *(_QWORD *)&result = 1;
        *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
        *(_DWORD *)(v9 + 32) = HIWORD(v11);
      }
    }
  }
  return result;
}

uint64_t sub_100D6B6D0(uint64_t a1)
{
  unint64_t v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(_DWORD *)(a1 + 32);
    if (v1 == 1)
    {
      v3 = 0;
      v4 = 0;
      swift_bridgeObjectRelease(a1);
      if (v2)
        goto LABEL_15;
    }
    else
    {
      v4 = *(_DWORD *)(a1 + 36);
      if (v1 >= 3)
      {
        v3 = *(_DWORD *)(a1 + 40);
        swift_bridgeObjectRelease(a1);
        if (v2)
          goto LABEL_15;
      }
      else
      {
        v3 = 0;
        swift_bridgeObjectRelease(a1);
        if (v2)
          goto LABEL_15;
      }
    }
    if (!v4 && !v3)
      goto LABEL_12;
LABEL_15:
    if (v2 < 0x10000 && v4 < 0x10000)
      return sub_1001E9788((unsigned __int16)v2, (unsigned __int16)v4, v3);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease(a1);
LABEL_12:
  if (qword_1013DD8A8 != -1)
    swift_once(&qword_1013DD8A8, sub_100A06414);
  swift_beginAccess(&static OS_os_log.pasteboard, v8, 0, 0);
  v5 = (id)static OS_os_log.pasteboard;
  v6 = static os_log_type_t.error.getter(v5);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v6, "Empty CRLVersion unwrapped fromProtobufArray", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

  return 0;
}

unint64_t sub_100D6B858()
{
  unint64_t result;

  result = qword_101411868;
  if (!qword_101411868)
  {
    result = swift_getWitnessTable(&unk_100F3729C, &type metadata for CRLChangeSelectionFontSizeIntent);
    atomic_store(result, (unint64_t *)&qword_101411868);
  }
  return result;
}

unint64_t sub_100D6B8A0()
{
  unint64_t result;

  result = qword_101411870;
  if (!qword_101411870)
  {
    result = swift_getWitnessTable(&unk_100F372C4, &type metadata for CRLChangeSelectionFontSizeIntent);
    atomic_store(result, (unint64_t *)&qword_101411870);
  }
  return result;
}

uint64_t sub_100D6B8E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C43C, 1);
}

uint64_t sub_100D6B8F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C414, 1);
}

uint64_t sub_100D6B904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch(sub_100D6B91C, 0, 0);
}

uint64_t sub_100D6B91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 152) = sub_1004BB5A4(*(_QWORD **)(v0 + 144), *(_QWORD *)(*(_QWORD *)(v0 + 144) + 24));
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 160) = v1;
  *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D6B998, v2, v3);
}

uint64_t sub_100D6B998()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[19];
  swift_release(v0[21]);
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess(v2, v0 + 11, 0, 0);
  v3 = *v2;
  v0[22] = *v2;
  swift_bridgeObjectRetain(v3);
  return swift_task_switch(sub_100D6BA10, 0, 0);
}

uint64_t sub_100D6BA10()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 176) + 16) && (v1 = sub_100843264(*(_QWORD *)(v0 + 136)), (v2 & 1) != 0))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 176) + 56) + 8 * v1);
    *(_QWORD *)(v0 + 184) = v3;
    swift_retain(v3);
    v4 = (char *)objc_msgSend(*(id *)(v3 + 24), "anyObject", swift_bridgeObjectRelease().n128_f64[0]);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v0 + 160);
      v7 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      *(_QWORD *)(v0 + 192) = v7;
      v8 = v7;

      *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v9);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      return swift_task_switch(sub_100D6BCE8, v10, v11);
    }
    swift_release(v3);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v13 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 112, 0, 0);
  v14 = (void *)static OS_os_log.appIntents;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v17 = v14;
  v30 = UUID.uuidString.getter(v17);
  v31 = v18;
  swift_bridgeObjectRetain(v18);
  v19._countAndFlagsBits = 58;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(v13 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v21 = *v20;
  v22 = (void *)v20[1];
  swift_bridgeObjectRetain(v31);
  v23._countAndFlagsBits = v21;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v24 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 40) = v31;
  v25 = static os_log_type_t.error.getter(v24);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v25, "Board is not currently open or is missing controllers - %@", 58, 2, inited);
  swift_setDeallocating(inited);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v26);

  v27 = type metadata accessor for _PrebuiltAppIntentError(0);
  v28 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v27, v28, 0, 0);
  v29.n128_f64[0] = static _UnrecoverableError.actionNotAllowed.getter();
  swift_willThrow(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6BCE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = objc_msgSend(*(id *)(v0 + 192), "editorController", swift_release(*(_QWORD *)(v0 + 200)).n128_f64[0]);
  return swift_task_switch(sub_100D6BD40, 0, 0);
}

uint64_t sub_100D6BD40()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = swift_release(*(_QWORD *)(v0 + 184));
  if (v1)
    return (*(uint64_t (**)(_QWORD, _QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 208), v2);

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v4 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 112, 0, 0);
  v5 = (void *)static OS_os_log.appIntents;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v8 = v5;
  v21 = UUID.uuidString.getter(v8);
  v22 = v9;
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = 58;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v12 = *v11;
  v13 = (void *)v11[1];
  swift_bridgeObjectRetain(v22);
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v15 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 32) = v21;
  *(_QWORD *)(inited + 40) = v22;
  v16 = static os_log_type_t.error.getter(v15);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v16, "Board is not currently open or is missing controllers - %@", 58, 2, inited);
  swift_setDeallocating(inited);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v17);

  v18 = type metadata accessor for _PrebuiltAppIntentError(0);
  v19 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v18, v19, 0, 0);
  v20.n128_f64[0] = static _UnrecoverableError.actionNotAllowed.getter();
  swift_willThrow(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6BF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch(sub_100D6BF8C, 0, 0);
}

uint64_t sub_100D6BF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 152) = sub_1004BB5A4(*(_QWORD **)(v0 + 144), *(_QWORD *)(*(_QWORD *)(v0 + 144) + 24));
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 160) = v1;
  *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100D6C008, v2, v3);
}

uint64_t sub_100D6C008()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = (_QWORD *)v0[19];
  swift_release(v0[21]);
  v2 = (uint64_t *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess(v2, v0 + 11, 0, 0);
  v3 = *v2;
  v0[22] = *v2;
  swift_bridgeObjectRetain(v3);
  return swift_task_switch(sub_100D6C080, 0, 0);
}

uint64_t sub_100D6C080()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 176) + 16) && (v1 = sub_100843264(*(_QWORD *)(v0 + 136)), (v2 & 1) != 0))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 176) + 56) + 8 * v1);
    *(_QWORD *)(v0 + 184) = v3;
    swift_retain(v3);
    v4 = (char *)objc_msgSend(*(id *)(v3 + 24), "anyObject", swift_bridgeObjectRelease().n128_f64[0]);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v0 + 160);
      v7 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      *(_QWORD *)(v0 + 192) = v7;
      v8 = v7;

      *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v9);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
      return swift_task_switch(sub_100D6C358, v10, v11);
    }
    swift_release(v3);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v13 = *(_QWORD *)(v0 + 136);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 112, 0, 0);
  v14 = (void *)static OS_os_log.appIntents;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v17 = v14;
  v30 = UUID.uuidString.getter(v17);
  v31 = v18;
  swift_bridgeObjectRetain(v18);
  v19._countAndFlagsBits = 58;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(v13 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v21 = *v20;
  v22 = (void *)v20[1];
  swift_bridgeObjectRetain(v31);
  v23._countAndFlagsBits = v21;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v24 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 32) = v30;
  *(_QWORD *)(inited + 40) = v31;
  v25 = static os_log_type_t.error.getter(v24);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v25, "Board is not currently open or is missing controllers - %@", 58, 2, inited);
  swift_setDeallocating(inited);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v26);

  v27 = type metadata accessor for _PrebuiltAppIntentError(0);
  v28 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v27, v28, 0, 0);
  v29.n128_f64[0] = static _UnrecoverableError.actionNotAllowed.getter();
  swift_willThrow(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6C358()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = objc_msgSend(*(id *)(v0 + 192), "editorController", swift_release(*(_QWORD *)(v0 + 200)).n128_f64[0]);
  return swift_task_switch(sub_100D6D744, 0, 0);
}

uint64_t sub_100D6C3B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unsigned int v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  unsigned int v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD v80[7];

  v72 = a1;
  v77 = type metadata accessor for InputConnectionBehavior(0);
  v71 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v75 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v74 = (char *)&v58 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v8;
  v9 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v9);
  v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v69 = v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v63 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v62 = v13;
  v28(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  v61 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a board", 34, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100FAFCC0);
  static Locale.current.getter(v29);
  v28(v15, v27, v13);
  v30 = v73;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a board", 40, 2);
  v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v68(v30, 0, 1, v22);
  v31 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v64 = v33;
  v34 = v74;
  v33(v74, 1, 1, v32);
  v35 = v75;
  v33(v75, 1, 1, v32);
  v66 = sub_1004B804C(&qword_1013E1128);
  v67 = 0x8000000100FAFD20;
  v78 = 0xD00000000000001FLL;
  v79 = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v65 = type metadata accessor for AppDependencyManager(0);
  v36 = static AppDependencyManager.shared.getter(v65);
  v80[0] = AppDependency.__allocating_init(key:manager:)(v80, v36);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v71 = *(_QWORD *)(v71 + 104);
  v37 = v76;
  ((void (*)(char *))v71)(v76);
  v38 = sub_100501D10();
  v57 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v39 = v25;
  v40 = v25;
  v41 = v73;
  v42 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v40, v73, v59, v34, v35, v37, v80, &type metadata for CRLOpenBoardsOptionsProvider, v38, v57);
  v43 = v72;
  *v72 = v42;
  v70 = sub_1004B804C(&qword_101411898);
  v44 = String.LocalizationValue.init(stringLiteral:)(1702521171, 0xE400000000000000);
  static Locale.current.getter(v44);
  v45 = v63;
  v46 = v62;
  v47 = v61;
  v61(v15, v63, v62);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a font size", 38, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x800000010100FB40);
  static Locale.current.getter(v48);
  v47(v15, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a font size", 44, 2);
  v68(v41, 0, 1, v69);
  LOBYTE(v80[0]) = 10;
  v49 = v74;
  v50 = v64;
  v64(v74, 1, 1, v32);
  v51 = v75;
  v50(v75, 1, 1, v32);
  v52 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v71)(v76, v60, v77);
  v53 = sub_100D41A80();
  v43[1] = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v39, v41, v80, v49, v51, v52, &off_101263D50, v53);
  v78 = 0xD00000000000001FLL;
  v79 = v67;
  v54 = AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v55 = static AppDependencyManager.shared.getter(v54);
  result = AppDependency.__allocating_init(key:manager:)(v80, v55);
  v43[2] = result;
  v43[6] = (uint64_t)&type metadata for CRLChangeSelectionFontSizeIntentPerformer;
  v43[7] = (uint64_t)&off_101289B00;
  return result;
}

uint64_t sub_100D6CAD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardEntity(0);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[12] = v5;
  v2[13] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[14] = v6;
  v2[15] = v7;
  return swift_task_switch(sub_100D6CB84, v6, v7);
}

uint64_t sub_100D6CB84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v2 = v0[10];
  v1 = (_QWORD *)v0[11];
  v3 = v0[9];
  IntentParameter.wrappedValue.getter(v1);
  sub_1004E1B3C((uint64_t)v1 + *(int *)(v2 + 40), v3);
  v4 = sub_1004B84A4((uint64_t)v1, type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter(v4);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v7 = (char *)&dword_1014118A8 + dword_1014118A8;
  v5 = (_QWORD *)swift_task_alloc(unk_1014118AC);
  v0[16] = v5;
  *v5 = v0;
  v5[1] = sub_100D6CC54;
  return ((uint64_t (*)(_QWORD, _QWORD *))v7)(v0[9], v0 + 2);
}

uint64_t sub_100D6CC54(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 128);
  v5[17] = a2;
  v5[18] = v2;
  swift_task_dealloc(v6);
  sub_1004B84A4(v5[9], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    v7 = v5[14];
    v8 = v5[15];
    v9 = sub_100D6D1AC;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5 + 2);

    v7 = v5[14];
    v8 = v5[15];
    v9 = sub_100D6CCF4;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100D6CCF4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_100501D54();
  if (v1)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v1, v2);
  else
    ObjCClassFromMetadata = 0;
  v4 = objc_msgSend(*(id *)(v0 + 136), "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  *(_QWORD *)(v0 + 152) = v4;
  v5 = objc_opt_self(CRLWPShapeEditor);
  v6 = swift_dynamicCastObjCClass(v4, v5);
  *(_QWORD *)(v0 + 160) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 176));
    *(_BYTE *)(v0 + 177) = *(_BYTE *)(v0 + 176);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v8);
    v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    return swift_task_switch(sub_100D6CE28, v9, v10);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 104);
    swift_unknownObjectRelease(v4);
    swift_release(v12);
    v13 = *(void **)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 72);
    static IntentResult.result<>()(v16);

    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_100D6CE28()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  float v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t KeyPath;
  char *v14;
  char *v15;
  uint64_t v16;

  v1 = *(char *)(v0 + 177);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 168)).n128_u64[0];
  v3 = flt_100F37378[v1];
  v4 = objc_msgSend(*(id *)(v0 + 160), "interactiveCanvasController", v2);
  v5 = objc_msgSend(v4, "commandController");

  if (!v5)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"groupWPEditorActions(do:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPShapeEditor+CRLWPTextInspecting.swift", 102, 2, 260, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"groupWPEditorActions(do:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPShapeEditor+CRLWPTextInspecting.swift", 102, 2u, 260, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_19:
    swift_task_switch(sub_100D6D13C, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
    return;
  }
  v6 = objc_msgSend(*(id *)(v0 + 160), "wpEditors", sub_1006A9664(0));
  v7 = type metadata accessor for CRLWPEditor(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v8);
    if (v9)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease_n(v8, 2);
    sub_1006A984C(0);

    goto LABEL_19;
  }
  if (v8 < 0)
    v16 = v8;
  else
    v16 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v9 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v9)
    goto LABEL_18;
LABEL_4:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      else
        v11 = *(id *)(v8 + 8 * i + 32);
      v12 = v11;
      KeyPath = swift_getKeyPath("XCT");
      v14 = sub_10073138C();
      if (v14)
      {
        v15 = v14;
        sub_100DC17A4(KeyPath, *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], v3);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2930, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2930, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      swift_release(KeyPath);

    }
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_100D6D13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 104));
  v2 = swift_unknownObjectRelease(v1);
  v3 = *(void **)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  static IntentResult.result<>()(v2);

  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6D1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 104));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D6D20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_1014815D0);
  sub_1004F2A1C(v10, (uint64_t)qword_1014815D0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000010100FC00);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100D6D398()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1014118B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014118B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100D6D64C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 2, &type metadata for CRLChangeSelectionFontSizeIntent, v6);
  v7._object = (void *)0x800000010100FBE0;
  v7._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("@CT");
  v9 = sub_1004B804C(&qword_1014118C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(" CT");
  v12 = sub_1004B804C(&qword_1014118C8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLChangeSelectionFontSizeIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLChangeSelectionFontSizeIntent, v6);
}

uint64_t sub_100D6D560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DDF58 != -1)
    swift_once(&qword_1013DDF58, sub_100D6D20C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_1014815D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100D6D5D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1014118A4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100D6CAD0(a1);
}

unint64_t sub_100D6D628(uint64_t a1)
{
  unint64_t result;

  result = sub_100D6D64C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100D6D64C()
{
  unint64_t result;

  result = qword_101411880;
  if (!qword_101411880)
  {
    result = swift_getWitnessTable(&unk_100F371F0, &type metadata for CRLChangeSelectionFontSizeIntent);
    atomic_store(result, (unint64_t *)&qword_101411880);
  }
  return result;
}

uint64_t sub_100D6D690(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100D6D64C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLChangeSelectionFontSizeIntent()
{
  return &type metadata for CRLChangeSelectionFontSizeIntent;
}

uint64_t sub_100D6D6C8()
{
  return sub_1004CBA30(&qword_101411888, &qword_101411890, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100D6D6F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100D6D71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100D6D780(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_100D6DE20(a1, a2);

  return v6;
}

void sub_100D6D974(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  CKRecordID v17;
  Swift::String v18;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLShapeItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFill.swift", 89, 2, 32, "Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFill.swift", 89, 2u, 32, (uint64_t)"Unable to retrieve shape item.", 30, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v14 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill);
    v15 = v14;
    sub_100923950(v14);
    v16 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_100D6DC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_actionString + 8));
}

id sub_100D6DC88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetFill(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100D6DD20()
{
  return type metadata accessor for CRLCommandSetFill(0);
}

uint64_t type metadata accessor for CRLCommandSetFill(uint64_t a1)
{
  uint64_t result;

  result = qword_101411910;
  if (!qword_101411910)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetFill);
  return result;
}

uint64_t sub_100D6DD64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100F373D0;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100D6DDE4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

id sub_100D6DE20(uint64_t a1, void *a2)
{
  char *v2;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  id v24;
  objc_class *v25;
  id v26;
  uint64_t v28;
  _QWORD v29[4];
  __objc2_prot *v30;
  objc_super v31;

  v5 = &v2[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_actionString];
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = v2;
  v8 = objc_msgSend(v6, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;
  v15 = v14;

  *(_QWORD *)v5 = v13;
  *((_QWORD *)v5 + 1) = v15;
  v16 = &v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_id];
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  if (a2 && (v30 = &OBJC_PROTOCOL___NSCopying, (v19 = swift_dynamicCastObjCProtocolConditional(a2, 1, &v30)) != 0))
  {
    v20 = (void *)v19;
    v21 = a2;
    v22 = objc_msgSend(v20, "copyWithZone:", 0);
    _bridgeAnyObjectToAny(_:)(v29, v22);

    swift_unknownObjectRelease(v22);
    v23 = sub_100D6E044();
    swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v23, 7);
    *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill] = v28;
  }
  else
  {
    *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill] = a2;
    v24 = a2;
  }

  v25 = (objc_class *)type metadata accessor for CRLCommandSetFill(0);
  v31.receiver = v7;
  v31.super_class = v25;
  v26 = objc_msgSendSuper2(&v31, "init");
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
  return v26;
}

unint64_t sub_100D6E044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F3910;
  if (!qword_1013F3910)
  {
    v1 = objc_opt_self(CRLFill);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F3910);
  }
  return result;
}

_QWORD *sub_100D6E080(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit(a1, a2);
    v4[1] = a2[1];
    *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
    v8 = (void *)a2[4];
    v7 = a2[5];
    v4[4] = v8;
    v4[5] = v7;
    v9 = a2[6];
    v10 = *(int *)(a3 + 32);
    v11 = (char *)v4 + v10;
    v12 = (uint64_t)a2 + v10;
    v4[6] = v9;
    v13 = type metadata accessor for EditMode(0);
    v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v8;
    swift_bridgeObjectRetain(v7);
    v16 = swift_retain(v9);
    v14(v11, v12, v13, v16);
    v17 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
    v18 = *(_QWORD *)(v12 + v17);
    *(_QWORD *)&v11[v17] = v18;
    v19 = *(int *)(a3 + 36);
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (uint64_t)a2 + v19;
    v23 = *(void **)v21;
    v22 = *(_QWORD *)(v21 + 8);
    *v20 = *(_QWORD *)v21;
    v20[1] = v22;
    swift_retain(v18);
    v24 = v23;
  }
  swift_retain(v22);
  return v4;
}

double sub_100D6E19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  swift_unknownObjectWeakDestroy(a1);

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(a1 + 48));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = sub_1004B804C(&qword_101411920);
  swift_release(*(_QWORD *)(v4 + *(int *)(v6 + 28)));
  v7 = a1 + *(int *)(a2 + 36);

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v7 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100D6E230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, __n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;

  v6 = swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v7;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(int *)(a3 + 32);
  v11 = v6 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(v6 + 48) = v9;
  v13 = type metadata accessor for EditMode(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v8;
  swift_bridgeObjectRetain(v7);
  v16 = swift_retain(v9);
  v14(v11, v12, v13, v16);
  v17 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v18 = *(_QWORD *)(v12 + v17);
  *(_QWORD *)(v11 + v17) = v18;
  v19 = *(int *)(a3 + 36);
  v20 = (_QWORD *)(a1 + v19);
  v21 = a2 + v19;
  v23 = *(void **)v21;
  v22 = *(_QWORD *)(v21 + 8);
  *v20 = *(_QWORD *)v21;
  v20[1] = v22;
  swift_retain(v18);
  v24 = v23;
  swift_retain(v22);
  return a1;
}

uint64_t sub_100D6E31C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (_QWORD *)swift_unknownObjectWeakCopyAssign(a1, a2);
  v6[1] = a2[1];
  v6[2] = a2[2];
  v6[3] = a2[3];
  v7 = (void *)a2[4];
  v8 = (void *)v6[4];
  v6[4] = v7;
  v9 = v7;

  v10 = a2[5];
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + 48);
  v12 = a2[6];
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v11);
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v18 = *(_QWORD *)(v14 + v17);
  v19 = *(_QWORD *)&v15[v17];
  *(_QWORD *)(v14 + v17) = v19;
  swift_retain(v19);
  swift_release(v18);
  v20 = *(int *)(a3 + 36);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(void **)(a1 + v20);
  v24 = *(void **)v22;
  *v21 = *(_QWORD *)v22;
  v25 = v24;

  v26 = v21[1];
  v27 = *((_QWORD *)v22 + 1);
  v21[1] = v27;
  swift_retain(v27);
  swift_release(v26);
  return a1;
}

uint64_t sub_100D6E440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = swift_unknownObjectWeakTakeInit(a1, a2);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v6 + 16) = v7;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(int *)(a3 + 32);
  v9 = v6 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = sub_1004B804C(&qword_101411920);
  *(_QWORD *)(v9 + *(int *)(v12 + 28)) = *(_QWORD *)(v10 + *(int *)(v12 + 28));
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_100D6E4E4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;

  v6 = (_QWORD *)swift_unknownObjectWeakTakeAssign(a1, a2);
  v6[1] = a2[1];
  v6[2] = a2[2];
  v7 = a2[4];
  v8 = (void *)v6[4];
  v6[3] = a2[3];
  v6[4] = v7;

  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_release(v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v15 = *(_QWORD *)(v11 + v14);
  *(_QWORD *)(v11 + v14) = *(_QWORD *)&v12[v14];
  swift_release(v15);
  v16 = *(int *)(a3 + 36);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = *(void **)(a1 + v16);
  *v17 = *v18;

  v20 = v17[1];
  v17[1] = v18[1];
  swift_release(v20);
  return a1;
}

uint64_t sub_100D6E5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D6E5E4);
}

uint64_t sub_100D6E5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    else
      return 0;
  }
  else
  {
    v7 = sub_1004B804C(&qword_101411920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v7);
  }
}

uint64_t sub_100D6E664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D6E670);
}

char *sub_100D6E670(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
    *((_QWORD *)result + 1) = 1;
  }
  else
  {
    v7 = sub_1004B804C(&qword_101411920);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CRLCompactScenesListUI_i(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101411980, (uint64_t)&nominal type descriptor for CRLCompactScenesListUI_i);
}

void sub_100D6E700(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100F37440;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_100F37458;
  v4[3] = &unk_100F37458;
  sub_10076A270(319, (unint64_t *)&unk_101411990, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100F37470;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_100D6E7AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C540, 1);
}

void sub_100D6E7BC(void (*a1)(_QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD v21[2];

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain(a3);
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = 8 * i;
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + v17);
    v21[0] = *(_QWORD *)(*(_QWORD *)(a3 + 48) + v17);
    v21[1] = v18;
    v19 = swift_retain(v18);
    a1(v21, v19);
    if (v3)
    {
      swift_release(a3);
      v20 = v18;
      goto LABEL_27;
    }
    swift_release(v18);
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
      break;
    if (v11 >= v10)
      goto LABEL_26;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v10)
        goto LABEL_26;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_16;
      v16 = v11 + 2;
      if (v11 + 2 >= v10)
        goto LABEL_26;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_16;
      v16 = v11 + 3;
      if (v11 + 3 >= v10)
        goto LABEL_26;
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_16:
        v11 = v16;
        goto LABEL_17;
      }
      v16 = v11 + 4;
      if (v11 + 4 < v10)
      {
        v15 = *(_QWORD *)(v6 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            v11 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_29;
            if (v11 >= v10)
              goto LABEL_26;
            v15 = *(_QWORD *)(v6 + 8 * v11);
            ++v16;
            if (v15)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      v20 = a3;
LABEL_27:
      swift_release(v20);
      return;
    }
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_100D6E968(void (*a1)(char *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(char *, __n128);

  v28 = a1;
  v27 = sub_1004B804C(&qword_1013E60A0);
  __chkstk_darwin(v27);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  v10 = *(_QWORD *)(a3 + 64);
  v25 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain(a3);
  v14 = 0;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v14 << 6);
LABEL_5:
    v17 = *(_QWORD *)(a3 + 48);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v18);
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v16);
    *(_QWORD *)&v9[*(int *)(v27 + 48)] = v19;
    sub_1004C4938((uint64_t)v9, (uint64_t)v6, &qword_1013E60A0);
    v20 = swift_retain(v19);
    v28(v6, v20);
    sub_1004CB800((uint64_t)v6, &qword_1013E60A0);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v26)
    goto LABEL_24;
  v22 = *(_QWORD *)(v25 + 8 * v14);
  if (v22)
  {
LABEL_19:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v14 << 6);
    goto LABEL_5;
  }
  v23 = v14 + 1;
  if (v14 + 1 >= v26)
    goto LABEL_24;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v14 + 2;
  if (v14 + 2 >= v26)
    goto LABEL_24;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v14 + 3;
  if (v14 + 3 >= v26)
    goto LABEL_24;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v14 + 4;
  if (v14 + 4 >= v26)
  {
LABEL_24:
    swift_release(a3);
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
LABEL_18:
    v14 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v26)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100D6EBD8(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(_QWORD *, _QWORD);
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  char *v30;
  uint64_t v31;
  void (*v32)(_QWORD *);
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD v39[4];
  uint64_t v40;

  v32 = a1;
  v33 = a2;
  v3 = type metadata accessor for IndexSet.Index(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v37 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v36 = (char *)&v29 - v7;
  v8 = type metadata accessor for IndexSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101407510);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v9;
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v29(v11, v2, v8, v13);
  v16 = sub_1004B7878(&qword_1013F6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  v30 = v11;
  dispatch thunk of Sequence.makeIterator()(v8, v16);
  v17 = &v15[*(int *)(v12 + 36)];
  v38 = v4;
  v34 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v35 = v15;
  v18 = v36;
  v19 = v37;
  while (1)
  {
    v34(v18, v17, v3);
    v20 = sub_1004B7878(&qword_1013F6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    dispatch thunk of Collection.endIndex.getter(v8, v20);
    sub_1004B7878(&qword_1013F6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v19);
    v22 = *(void (**)(char *, uint64_t))(v38 + 8);
    v22(v19, v3);
    v22(v18, v3);
    if ((v21 & 1) != 0)
      break;
    v23 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v39, v17, v8, v20);
    v25 = *v24;
    v23(v39, 0);
    v26 = v30;
    ((void (*)(char *, char *, uint64_t))v29)(v30, v15, v8);
    dispatch thunk of Collection.formIndex(after:)(v17, v8, v20);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v8);
    v39[0] = v25;
    v27 = v40;
    v32(v39);
    if (v27)
      break;
    v40 = 0;
  }
  return sub_1004CB800((uint64_t)v15, &qword_101407510);
}

uint64_t sub_100D6EEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100D6EF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100D6F03C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100D6F05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100D6F070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a3);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v5 = sub_1004B804C(&qword_101412230);
  return sub_100D6F0B8(a1, a2 + *(int *)(v5 + 44));
}

uint64_t sub_100D6F0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  id v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  __int128 v56;
  unsigned __int8 v57;

  v53 = a2;
  v3 = sub_1004B804C(&qword_101412238);
  __chkstk_darwin(v3);
  v54 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v52 = (char *)&v45 - v6;
  v7 = type metadata accessor for EditMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - v11;
  v13 = (int *)type metadata accessor for CRLScenesListUI_i(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - v17;
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(void **)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 40);
  LOBYTE(v55[0]) = *(_BYTE *)(a1 + 32);
  v55[1] = v22;
  v46 = v21;
  v50 = sub_1004B804C(&qword_101401590);
  State.projectedValue.getter(v50);
  v48 = *((_QWORD *)&v56 + 1);
  v49 = v56;
  v47 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v12, enum case for EditMode.inactive(_:), v7);
  v15[1] = v20;
  swift_unknownObjectWeakInit(v15);
  swift_unknownObjectRelease(Strong);
  v23 = type metadata accessor for CRLScenesPopoverState(0);
  v24 = sub_1004B7878(&qword_10140B870, type metadata accessor for CRLScenesPopoverState, (uint64_t)&unk_100F117F4);
  v15[2] = ObservedObject.init(wrappedValue:)(v46, v23, v24);
  v15[3] = v25;
  v55[0] = &_swiftEmptySetSingleton;
  v26 = sub_1004B804C(&qword_10140B878);
  State.init(wrappedValue:)(&v56, v55, v26);
  v27 = *((_QWORD *)&v56 + 1);
  v15[4] = v56;
  v15[5] = v27;
  v28 = (_QWORD *)((char *)v15 + v13[7]);
  v29 = v51;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v51, v12, v7);
  State.init(wrappedValue:)(v28, v29, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  v30 = v13[8];
  v55[0] = 0;
  v31 = sub_1004B804C(&qword_10140B880);
  State.init(wrappedValue:)(&v56, v55, v31);
  *(_OWORD *)((char *)v15 + v30) = v56;
  v32 = (char *)v15 + v13[9];
  v33 = v48;
  *(_QWORD *)v32 = v49;
  *((_QWORD *)v32 + 1) = v33;
  v32[16] = v47;
  sub_1004B84E0((uint64_t)v15, (uint64_t)v18, type metadata accessor for CRLScenesListUI_i);
  v34 = *(_QWORD *)(a1 + 40);
  LOBYTE(v56) = *(_BYTE *)(a1 + 32);
  *((_QWORD *)&v56 + 1) = v34;
  v35 = State.wrappedValue.getter(v50);
  if (LOBYTE(v55[0]) == 1)
  {
    v37 = (uint64_t)v52;
    Divider.init()(v35);
    v39 = type metadata accessor for Divider(0, v38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v37, 0, 1, v39);
  }
  else
  {
    v40 = type metadata accessor for Divider(0, v36);
    v37 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v52, 1, 1, v40);
  }
  sub_1004B8460((uint64_t)v18, (uint64_t)v15, type metadata accessor for CRLScenesListUI_i);
  v41 = v54;
  sub_1004CB7BC(v37, v54, &qword_101412238);
  v42 = v53;
  sub_1004B8460((uint64_t)v15, v53, type metadata accessor for CRLScenesListUI_i);
  v43 = sub_1004B804C(qword_101412240);
  sub_1004CB7BC(v41, v42 + *(int *)(v43 + 48), &qword_101412238);
  sub_1004CB800(v37, &qword_101412238);
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLScenesListUI_i);
  sub_1004CB800(v41, &qword_101412238);
  return sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLScenesListUI_i);
}

uint64_t sub_100D6F4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_1004B804C(&qword_101412220);
  v1 = sub_1004CBA30(&qword_101412228, &qword_101412220, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return NavigationStack.init<>(root:)(sub_100D86B80, &v3, v0, v1);
}

uint64_t sub_100D6F530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  id v16;

  v1 = v0;
  v2 = type metadata accessor for CRLScenesListUI_i(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101411920);
  v10 = State.wrappedValue.getter(v9);
  v11 = EditMode.isEditing.getter(v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLScenesListUI_i);
  if ((v11 & 1) == 0)
  {
    v15 = *(_OWORD *)&v4[*(int *)(v2 + 32)];
    v12 = sub_1004B804C(&qword_101411C58);
    State.wrappedValue.getter(v12);
    if (!v16)
    {
      v13 = 0;
      goto LABEL_6;
    }

  }
  v13 = 1;
LABEL_6:
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLScenesListUI_i);
  return v13;
}

uint64_t sub_100D6F680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  void *v51;
  uint64_t KeyPath;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char *v56;
  id v57;
  NSString v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  char v178[8];
  uint64_t v179;
  uint64_t v180;
  void *v181;
  unint64_t v182;
  void *v183;
  _QWORD v184[2];

  v171 = a1;
  v2 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v2);
  v164 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for CRLScenesListUI_i(0);
  v173 = *(_QWORD *)(v162 - 8);
  v5 = __chkstk_darwin(v162);
  v174 = v6;
  v172 = (uint64_t)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for ContentMarginPlacement(0, v5);
  v7 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v9 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101411A30);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1004B804C(&qword_101412378);
  v143 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v15 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1004B804C(&qword_101412380);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v135 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1004B804C(&qword_101412388);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v139 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1004B804C(&qword_101412390);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1004B804C(&qword_101412398);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v148 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1004B804C(&qword_1014123A0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_1004B804C(&qword_1014123A8);
  __chkstk_darwin(v147);
  v154 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1004B804C(&qword_1014123B0);
  __chkstk_darwin(v175);
  v158 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_1004B804C(&qword_1014123B8);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v159 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_1004B804C(&qword_1014123C0);
  __chkstk_darwin(v176);
  v163 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1014123C8);
  v169 = *(_QWORD *)(v25 - 8);
  v170 = v25;
  __chkstk_darwin(v25);
  v168 = (char *)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1014123D0);
  v166 = *(_QWORD *)(v27 - 8);
  v167 = v27;
  __chkstk_darwin(v27);
  v165 = (char *)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = (_QWORD *)v1;
  v179 = v1;
  v29 = sub_1004B804C(&qword_101411A68);
  v30 = sub_100D77B40();
  List<>.init(content:)(sub_100D87658, v178, v29, v30);
  v32 = static Edge.Set.horizontal.getter(v31);
  if (qword_1013DD2D8 != -1)
    swift_once(&qword_1013DD2D8, sub_10087C664);
  v33 = qword_10147F9B0;
  static ContentMarginPlacement.scrollContent.getter();
  v34 = sub_1004CBA30(&qword_101411A28, &qword_101411A30, (uint64_t)&protocol conformance descriptor for List<A, B>);
  View.contentMargins(_:_:for:)(v32, v33, 0, v9, v10, v34);
  v35 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36 = v136;
  v35(v9, v136);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v38 = static Edge.Set.vertical.getter(v37);
  static ContentMarginPlacement.scrollContent.getter();
  v180 = v10;
  v181 = (void *)v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v40 = v135;
  v41 = v137;
  View.contentMargins(_:_:for:)(v38, 0, 0, v9, v137, OpaqueTypeConformance2);
  v35(v9, v36);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v15, v41);
  v42 = (uint64_t)v177;
  v43 = v172;
  sub_1004B8460((uint64_t)v177, v172, type metadata accessor for CRLScenesListUI_i);
  v44 = *(unsigned __int8 *)(v173 + 80);
  v45 = (v44 + 16) & ~v44;
  v173 = v44 | 7;
  v174 += v45;
  v46 = swift_allocObject(&unk_1012A5600, v174, v44 | 7);
  v143 = v45;
  sub_1004B84E0(v43, v46 + v45, type metadata accessor for CRLScenesListUI_i);
  v180 = v41;
  v181 = (void *)OpaqueTypeConformance2;
  v47 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
  v48 = v139;
  v49 = v140;
  View.onScrollGeometryChange<A>(for:of:action:)(&type metadata for Bool, sub_100D71480, 0, sub_100D87664, v46, v140, &type metadata for Bool, v47, &protocol witness table for Bool);
  v50 = swift_release(v46);
  (*(void (**)(char *, uint64_t, __n128))(v138 + 8))(v40, v49, v50);
  v51 = *(void **)(v42 + 24);
  KeyPath = swift_getKeyPath("(BT");
  v53 = swift_getKeyPath("\bBT");
  v54 = v51;
  static Published.subscript.getter(&v180, v54, KeyPath, v53);

  swift_release(KeyPath);
  swift_release(v53);
  if ((unint64_t)v180 >> 62)
  {
    if (v180 < 0)
      v132 = v180;
    else
      v132 = v180 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v180);
    v55 = _CocoaArrayWrapper.endIndex.getter(v132);
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = *(_QWORD *)((v180 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v56 = v48;
  if (v55)
  {
    v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v58 = String._bridgeToObjectiveC()();
    v59 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v57, "localizedStringForKey:value:table:", v58, v59, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v62 = v61;
    v64 = v63;

  }
  else
  {
    v62 = 0;
    v64 = 0xE000000000000000;
  }
  v184[0] = v62;
  v184[1] = v64;
  v180 = v49;
  v181 = &type metadata for Bool;
  v182 = v47;
  v183 = &protocol witness table for Bool;
  v65 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
  v66 = sub_1004D292C();
  v67 = v144;
  v68 = v142;
  View.navigationTitle<A>(_:)(v184, v142, &type metadata for String, v65, v66);
  v69 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v56, v68, v69);
  v70 = v156;
  v71 = v155;
  v72 = v157;
  (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v155, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v157);
  v180 = v68;
  v181 = &type metadata for String;
  v182 = v65;
  v183 = (void *)v66;
  v73 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v74 = v148;
  v75 = v146;
  View.navigationBarTitleDisplayMode(_:)(v71, v146, v73);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
  v76 = (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v67, v75);
  __chkstk_darwin(v76);
  v77 = v177;
  v133 = (uint64_t)v177;
  v78 = sub_1004B804C(&qword_1014123D8);
  v180 = v75;
  v181 = (void *)v73;
  v79 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v80 = sub_1004CB6A4(&qword_1014123E0);
  v81 = sub_100D876B8();
  v180 = v80;
  v181 = (void *)v81;
  v82 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v83 = v151;
  v84 = v150;
  View.toolbar<A>(content:)(sub_100D876B0, &v134 - 4, v150, v78, v79, v82);
  v85 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v74, v84);
  v86 = static Alignment.center.getter(v85);
  v88 = v87;
  v89 = (uint64_t)v154;
  v90 = (uint64_t)&v154[*(int *)(v147 + 36)];
  sub_100D729EC((uint64_t)v77, v90);
  v91 = (uint64_t *)(v90 + *(int *)(sub_1004B804C(&qword_101412400) + 36));
  *v91 = v86;
  v91[1] = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v89, v83, v153);
  v92 = swift_getKeyPath(byte_100F37520);
  v93 = sub_1004B804C(&qword_101411920);
  v94 = (uint64_t)v164;
  State.projectedValue.getter(v93);
  v95 = sub_1004B804C(&qword_101411B00);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 0, 1, v95);
  v96 = (uint64_t)v158;
  v97 = (uint64_t *)&v158[*(int *)(v175 + 36)];
  v98 = sub_1004B804C(&qword_101411A58);
  sub_1004CB7BC(v94, (uint64_t)v97 + *(int *)(v98 + 28), &qword_101409320);
  *v97 = v92;
  sub_1004CB7BC(v89, v96, &qword_1014123A8);
  sub_1004CB800(v94, &qword_101409320);
  sub_1004CB800(v89, &qword_1014123A8);
  v99 = (void *)v77[5];
  v180 = v77[4];
  v181 = v99;
  v100 = sub_1004B804C(&qword_101411CE8);
  State.wrappedValue.getter(v100);
  v101 = v172;
  sub_1004B8460((uint64_t)v77, v172, type metadata accessor for CRLScenesListUI_i);
  v102 = v174;
  v103 = swift_allocObject(&unk_1012A5628, v174, v173);
  v104 = v143;
  sub_1004B84E0(v101, v103 + v143, type metadata accessor for CRLScenesListUI_i);
  v105 = sub_1004B804C(&qword_10140B878);
  v106 = sub_100D87838();
  v107 = sub_1004CBA30(&qword_101411ED8, &qword_10140B878, (uint64_t)&protocol conformance descriptor for Set<A>);
  v108 = v159;
  View.onChange<A>(of:initial:_:)(v184, 0, sub_100D87824, v103, v175, v105, v106, v107);
  swift_release(v103);
  swift_bridgeObjectRelease();
  sub_1004CB800(v96, &qword_1014123B0);
  sub_1004B8460((uint64_t)v77, v101, type metadata accessor for CRLScenesListUI_i);
  v109 = v173;
  v110 = swift_allocObject(&unk_1012A5650, v102, v173);
  sub_1004B84E0(v101, v110 + v104, type metadata accessor for CRLScenesListUI_i);
  v111 = v160;
  v112 = (uint64_t)v163;
  v113 = v161;
  (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v163, v108, v161);
  v114 = (_QWORD *)(v112 + *(int *)(v176 + 36));
  *v114 = 0;
  v114[1] = 0;
  v114[2] = sub_100D87AD8;
  v114[3] = v110;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v113);
  v115 = (void *)v77[3];
  v116 = swift_getKeyPath(byte_100F37550);
  v117 = swift_getKeyPath(byte_100F37578);
  v118 = v115;
  static Published.subscript.getter(&v180, v118, v116, v117);

  swift_release(v116);
  swift_release(v117);
  sub_1004B8460((uint64_t)v77, v101, type metadata accessor for CRLScenesListUI_i);
  v119 = v102;
  v120 = v109;
  v121 = swift_allocObject(&unk_1012A5678, v119, v109);
  sub_1004B84E0(v101, v121 + v104, type metadata accessor for CRLScenesListUI_i);
  v122 = sub_100D87AF0();
  v123 = v168;
  v124 = v176;
  View.onChange<A>(of:initial:_:)(&v180, 0, sub_100D87AD8, v121, v176, &type metadata for Bool, v122, &protocol witness table for Bool);
  swift_release(v121);
  sub_1004CB800(v112, &qword_1014123C0);
  v125 = (uint64_t)v177;
  LOBYTE(v184[0]) = sub_100D6F530() & 1;
  sub_1004B8460(v125, v101, type metadata accessor for CRLScenesListUI_i);
  v126 = swift_allocObject(&unk_1012A56A0, v174, v120);
  sub_1004B84E0(v101, v126 + v104, type metadata accessor for CRLScenesListUI_i);
  v180 = v124;
  v181 = &type metadata for Bool;
  v182 = v122;
  v183 = &protocol witness table for Bool;
  v127 = swift_getOpaqueTypeConformance2(&v180, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v128 = v165;
  v129 = v170;
  View.onChange<A>(of:initial:_:)(v184, 0, sub_100D87BCC, v126, v170, &type metadata for Bool, v127, &protocol witness table for Bool);
  v130 = swift_release(v126);
  (*(void (**)(char *, uint64_t, __n128))(v169 + 8))(v123, v129, v130);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v166 + 32))(v171, v128, v167);
}

uint64_t sub_100D705F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v65 = a2;
  v3 = type metadata accessor for CRLScenesListUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101411AB0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1004B804C(&qword_101411AA0);
  __chkstk_darwin(v58);
  v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1004B804C(&qword_101411A90);
  __chkstk_darwin(v62);
  v61 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_101411A80);
  *(_QWORD *)&v11 = __chkstk_darwin(v64).n128_u64[0];
  v63 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath("(BT", v11);
  v15 = swift_getKeyPath("\bBT");
  v16 = v13;
  static Published.subscript.getter(&v66, v16, KeyPath, v15);

  swift_release(KeyPath);
  *(_QWORD *)&v17 = swift_release(v15).n128_u64[0];
  v54 = swift_getKeyPath("8AT", v17);
  v18 = a1;
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLScenesListUI_i);
  v19 = *(unsigned __int8 *)(v4 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v5;
  v55 = v19 | 7;
  v53 = v20 + v5;
  v22 = swift_allocObject(&unk_1012A5768, v20 + v5, v19 | 7);
  sub_1004B84E0((uint64_t)v6, v22 + v20, type metadata accessor for CRLScenesListUI_i);
  v23 = sub_1004B804C(&qword_1013F6740);
  v24 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v25 = sub_1004CBA30(&qword_101411CC8, &qword_1013F6740, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = sub_1004B7878(&qword_10140B790, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
  v27 = sub_1004B7878(&qword_101411AB8, type metadata accessor for CRLSceneRowItemUI_i, (uint64_t)&unk_100F3773C);
  v28 = v56;
  ForEach<>.init(_:id:content:)(&v66, v54, sub_100D87D00, v22, v23, v24, v25, v26, v27);
  v29 = v18;
  sub_1004B8460(v18, (uint64_t)v6, type metadata accessor for CRLScenesListUI_i);
  v30 = v55;
  v31 = swift_allocObject(&unk_1012A5790, v21, v55);
  sub_1004B84E0((uint64_t)v6, v31 + v20, type metadata accessor for CRLScenesListUI_i);
  v32 = swift_allocObject(&unk_1012A57B8, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_100D87D74;
  *(_QWORD *)(v32 + 24) = v31;
  v34 = v59;
  v33 = v60;
  v35 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v28, v60);
  v36 = (_QWORD *)(v35 + *(int *)(v58 + 36));
  *v36 = sub_100D87FBC;
  v36[1] = v32;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v33);
  v37 = v29;
  sub_1004B8460(v29, (uint64_t)v6, type metadata accessor for CRLScenesListUI_i);
  v38 = swift_allocObject(&unk_1012A57E0, v53, v30);
  sub_1004B84E0((uint64_t)v6, v38 + v20, type metadata accessor for CRLScenesListUI_i);
  v39 = swift_allocObject(&unk_1012A5808, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_100D87E0C;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = v61;
  sub_1004CB7BC(v35, v61, &qword_101411AA0);
  v41 = (uint64_t (**)())(v40 + *(int *)(v62 + 36));
  *v41 = sub_1005A46E8;
  v41[1] = (uint64_t (*)())v39;
  sub_1004CB800(v35, &qword_101411AA0);
  v42 = *(void **)(v29 + 24);
  v43 = swift_getKeyPath(byte_100F37550);
  v44 = swift_getKeyPath(byte_100F37578);
  v45 = v42;
  static Published.subscript.getter(&v66, v45, v43, v44);

  swift_release(v43);
  swift_release(v44);
  LOBYTE(v43) = v66;
  v46 = v63;
  sub_1004CB7BC(v40, v63, &qword_101411A90);
  *(_BYTE *)(v46 + *(int *)(v64 + 36)) = v43;
  sub_1004CB800(v40, &qword_101411A90);
  v47 = *(void **)(v37 + 24);
  v48 = swift_getKeyPath(byte_100F37550);
  v49 = swift_getKeyPath(byte_100F37578);
  v50 = v47;
  static Published.subscript.getter(&v66, v50, v48, v49);

  swift_release(v48);
  swift_release(v49);
  LOBYTE(v48) = v66;
  v51 = v65;
  sub_1004CB7BC(v46, v65, &qword_101411A80);
  *(_BYTE *)(v51 + *(int *)(sub_1004B804C(&qword_101411A68) + 36)) = v48;
  return sub_1004CB800(v46, &qword_101411A80);
}

uint64_t sub_100D70B5C@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v36 = a3;
  v5 = sub_1004B804C(&qword_101411CD8);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1004B804C(&qword_1013F0C10);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1004B804C(&qword_101411CE0);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *a1;
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  v34 = a2[1];
  v35 = Strong;
  v16 = (void *)a2[3];
  v17 = a2[5];
  *(_QWORD *)&v37 = a2[4];
  *((_QWORD *)&v37 + 1) = v17;
  v18 = v14;
  v19 = v16;
  v20 = sub_1004B804C(&qword_101411CE8);
  State.projectedValue.getter(v20);
  v21 = v38;
  v22 = v39;
  v37 = *(_OWORD *)((char *)a2 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 32));
  v23 = sub_1004B804C(&qword_101411C58);
  State.projectedValue.getter(v23);
  v33 = v38;
  v24 = v39;
  *v13 = swift_getKeyPath(byte_100F37520);
  v25 = sub_1004B804C(&qword_101409318);
  swift_storeEnumTagMultiPayload(v13, v25, 0);
  *v10 = swift_getKeyPath("(AT");
  v26 = sub_1004B804C(&qword_1013F0BF0);
  swift_storeEnumTagMultiPayload(v10, v26, 0);
  *v7 = swift_getKeyPath(byte_100F37648);
  v27 = sub_1004B804C(&qword_101409328);
  v28 = swift_storeEnumTagMultiPayload(v7, v27, 0);
  v29 = FocusState.init<>()(v28);
  return sub_100D70DBC((uint64_t)v18, v35, v34, (uint64_t)v19, (uint64_t)v13, (uint64_t)v10, (uint64_t)v7, v21, v36, *((uint64_t *)&v21 + 1), v22, v33, v24, 0, 0, 0xE000000000000000, 1, 0, v29 & 1,
           v31,
           v30 & 1);
}

uint64_t sub_100D70DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, uint64_t a20,char a21)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  _QWORD v45[2];
  __int128 v46;
  uint64_t v47;

  *a9 = a1;
  a9[2] = a3;
  swift_unknownObjectWeakInit(a9 + 1);
  swift_unknownObjectRelease(a2);
  v27 = type metadata accessor for CRLScenesPopoverState(0);
  v28 = sub_1004B7878(&qword_10140B870, type metadata accessor for CRLScenesPopoverState, (uint64_t)&unk_100F117F4);
  a9[3] = ObservedObject.init(wrappedValue:)(a4, v27, v28);
  a9[4] = v29;
  v30 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1004C4938(a5, (uint64_t)a9 + v30[7], &qword_101411CE0);
  sub_1004C4938(a6, (uint64_t)a9 + v30[8], &qword_1013F0C10);
  sub_1004C4938(a7, (uint64_t)a9 + v30[9], &qword_101411CD8);
  v31 = (_QWORD *)((char *)a9 + v30[10]);
  *v31 = a8;
  v31[1] = a10;
  v31[2] = a11;
  v32 = (char *)a9 + v30[11];
  *(_OWORD *)v32 = a12;
  *((_QWORD *)v32 + 2) = a13;
  v33 = v30[12];
  v45[0] = a14;
  v34 = sub_1004B804C(&qword_101411CF0);
  State.init(wrappedValue:)(&v46, v45, v34);
  *(_OWORD *)((char *)a9 + v33) = v46;
  v35 = (char *)a9 + v30[13];
  v45[0] = a15;
  v45[1] = a16;
  State.init(wrappedValue:)(&v46, v45, &type metadata for String);
  v36 = v47;
  *(_OWORD *)v35 = v46;
  *((_QWORD *)v35 + 2) = v36;
  v37 = (char *)a9 + v30[14];
  LOBYTE(v45[0]) = a17;
  State.init(wrappedValue:)(&v46, v45, &type metadata for Bool);
  v38 = *((_QWORD *)&v46 + 1);
  *v37 = v46;
  *((_QWORD *)v37 + 1) = v38;
  v39 = (char *)a9 + v30[15];
  LOBYTE(v45[0]) = a18;
  v40 = State.init(wrappedValue:)(&v46, v45, &type metadata for Bool);
  v41 = *((_QWORD *)&v46 + 1);
  *v39 = v46;
  *((_QWORD *)v39 + 1) = v41;
  v42 = (char *)a9 + v30[16];
  *v42 = a19;
  *((_QWORD *)v42 + 1) = a20;
  v42[16] = a21;
  return AccessibilityFocusState.init<>()(v40);
}

double sub_100D71028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  double result;
  uint64_t v15;

  v6 = *(void **)(a3 + 24);
  KeyPath = swift_getKeyPath("(BT");
  v8 = swift_getKeyPath("\bBT");
  v9 = v6;
  static Published.subscript.getter(&v15, v9, KeyPath, v8);

  swift_release(KeyPath);
  swift_release(v8);
  v10 = sub_1004B804C(&qword_1013F6740);
  v11 = sub_1004CBA30(&qword_101411CD0, &qword_1013F6740, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v10, v11);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    sub_100C44CEC(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_100D71138(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[8];

  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v5 = Strong;
    __chkstk_darwin(Strong);
    v8[2] = a2;
    v8[3] = v6;
    v8[4] = v7;
    sub_100D6EBD8(sub_100D87E48, (uint64_t)v8);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

void sub_100D711C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  char v22[40];
  char v23[72];
  uint64_t v24;

  v2 = *a1;
  v3 = *(void **)(a2 + 24);
  KeyPath = swift_getKeyPath("(BT");
  v5 = swift_getKeyPath("\bBT");
  v6 = v3;
  static Published.subscript.getter(&v24, v6, KeyPath, v5);

  swift_release(KeyPath);
  swift_release(v5);
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v21 = v24;
    else
      v21 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v7 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  if (v2 >= v7)
  {
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v23);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for Int;
    *(_QWORD *)(inited + 64) = &protocol witness table for Int;
    *(_QWORD *)(inited + 32) = v2;
    sub_100757E04(&_mh_execute_header, (uint64_t)"body", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesListUI_i.swift", 87, 2, 76, "Tried to delete scene at invalid index: %d", 42, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"body", 4, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesListUI_i.swift", 87, 2u, 76, (uint64_t)"Tried to delete scene at invalid index: %d", 42, 2u);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v20);
  }
  else
  {
    v9 = swift_getKeyPath("(BT", v8);
    v10 = swift_getKeyPath("\bBT");
    v11 = v6;
    static Published.subscript.getter(&v24, v11, v9, v10);

    swift_release(v9);
    swift_release(v10);
    if ((v24 & 0xC000000000000001) != 0)
    {
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v24);
      goto LABEL_8;
    }
    if (v2 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v2 < *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(id *)(v24 + 8 * v2 + 32);
LABEL_8:
      v13 = v12;
      swift_bridgeObjectRelease();
      v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v15 = swift_initStackObject(v14, v22);
      *(_OWORD *)(v15 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v15 + 32) = v13;
      v24 = v15;
      specialized Array._endMutation()(v15);
      v16 = v24;
      v17 = v13;
      sub_100C447B8(v16);
      swift_bridgeObjectRelease();

      return;
    }
    __break(1u);
  }
}

uint64_t sub_100D71480@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  uint64_t result;
  double v7;
  CGRect v8;

  v2 = ScrollGeometry.contentSize.getter();
  v4 = v3;
  v8.origin.x = ScrollGeometry.bounds.getter(v2);
  v5 = v4 - CGRectGetHeight(v8);
  result = ScrollGeometry.contentOffset.getter();
  *a1 = v7 + 1.0 < v5;
  return result;
}

unsigned __int8 *sub_100D714D4(unsigned __int8 *result, unsigned __int8 *a2, uint64_t a3)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *a2;
  if (*result != v3)
  {
    v4 = (uint64_t *)(a3 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 36));
    v5 = *v4;
    v6 = v4[1];
    LOBYTE(v4) = *((_BYTE *)v4 + 16);
    v9 = v5;
    v10 = v6;
    v11 = (char)v4;
    v8 = v3;
    v7 = sub_1004B804C(&qword_101412470);
    return (unsigned __int8 *)Binding.wrappedValue.setter(&v8, v7);
  }
  return result;
}

uint64_t sub_100D71548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t KeyPath;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  id v91;

  v88 = a2;
  v85 = sub_1004B804C(&qword_101412440);
  __chkstk_darwin(v85);
  v86 = (uint64_t)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1004B804C(&qword_101411B28);
  v80 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v79 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101411B30);
  __chkstk_darwin(v5);
  v82 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v87 = (char *)&v78 - v8;
  v9 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v9);
  v81 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101412448);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_101412450);
  __chkstk_darwin(v15);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v84 = (char *)&v78 - v19;
  v89 = sub_1004B804C(&qword_1014123E0);
  __chkstk_darwin(v89);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v25 = (char *)&v78 - v24;
  v26 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath("(BT", v23);
  v28 = swift_getKeyPath("\bBT");
  v29 = v26;
  static Published.subscript.getter(&v90, v29, KeyPath, v28);

  swift_release(KeyPath);
  swift_release(v28);
  if ((unint64_t)v90 >> 62)
  {
    if ((uint64_t)v90 < 0)
      v77 = v90;
    else
      v77 = v90 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v90);
    v30 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v30)
  {
    v90 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 32));
    v31 = sub_1004B804C(&qword_101411C58);
    v32 = State.wrappedValue.getter(v31);
    if (v91)
    {

      v33 = sub_1004B804C(&qword_101412468);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
      v34 = sub_1004CBA30(&qword_101412460, &qword_101412448, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
      *(_QWORD *)&v90 = v11;
      *((_QWORD *)&v90 + 1) = v34;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      v36 = (uint64_t)v84;
      static ToolbarContentBuilder.buildIf<A>(_:)(v17, v33, OpaqueTypeConformance2);
      sub_1004CB800((uint64_t)v17, &qword_101412450);
    }
    else
    {
      v78 = v12;
      v39 = a1;
      v40 = v81;
      v41 = static ToolbarItemPlacement.topBarLeading.getter(v32);
      __chkstk_darwin(v41);
      *(&v78 - 2) = v39;
      v42 = sub_1004B804C(&qword_101411BB8);
      v43 = sub_100D87C20();
      v44 = v40;
      a1 = v39;
      ToolbarItem<>.init(placement:content:)(v44, sub_100D87C18, &v78 - 4, v42, v43);
      v45 = sub_1004CBA30(&qword_101412460, &qword_101412448, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
      static ToolbarContentBuilder.buildBlock<A>(_:)(v14, v11, v45);
      v46 = sub_1004B804C(&qword_101412468);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v17, 0, 1, v46);
      *(_QWORD *)&v90 = v11;
      *((_QWORD *)&v90 + 1) = v45;
      v47 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      v48 = v84;
      static ToolbarContentBuilder.buildIf<A>(_:)(v17, v46, v47);
      sub_1004CB800((uint64_t)v17, &qword_101412450);
      v49 = v11;
      v36 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v49);
    }
    v50 = *(void **)(a1 + 24);
    v51 = swift_getKeyPath(byte_100F37550);
    v52 = swift_getKeyPath(byte_100F37578);
    v53 = v50;
    static Published.subscript.getter(&v90, v53, v51, v52);

    swift_release(v51);
    v54 = swift_release(v52);
    v55 = (uint64_t)v87;
    if ((v90 & 1) != 0)
    {
      v56 = sub_1004B804C(&qword_101411B58);
      v57 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v82, 1, 1, v56);
      v58 = sub_1004CBA30(&qword_101411B50, &qword_101411B28, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
      *(_QWORD *)&v90 = v83;
      *((_QWORD *)&v90 + 1) = v58;
      v59 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      static ToolbarContentBuilder.buildIf<A>(_:)(v57, v56, v59);
      sub_1004CB800(v57, &qword_101411B30);
    }
    else
    {
      v60 = v81;
      v61 = static ToolbarItemPlacement.topBarTrailing.getter(v54);
      __chkstk_darwin(v61);
      *(&v78 - 2) = a1;
      v62 = sub_1004B804C(&qword_101411B38);
      v63 = sub_100D82B3C();
      v64 = v79;
      ToolbarItem<>.init(placement:content:)(v60, sub_100D87CA4, &v78 - 4, v62, v63);
      v65 = sub_1004CBA30(&qword_101411B50, &qword_101411B28, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
      v67 = (uint64_t)v82;
      v66 = v83;
      static ToolbarContentBuilder.buildBlock<A>(_:)(v64, v83, v65);
      v68 = sub_1004B804C(&qword_101411B58);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 0, 1, v68);
      *(_QWORD *)&v90 = v66;
      *((_QWORD *)&v90 + 1) = v65;
      v69 = swift_getOpaqueTypeConformance2(&v90, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      static ToolbarContentBuilder.buildIf<A>(_:)(v67, v68, v69);
      sub_1004CB800(v67, &qword_101411B30);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v64, v66);
    }
    v70 = v85;
    v71 = v86;
    v72 = v86 + *(int *)(v85 + 48);
    sub_1004CB7BC(v36, v86, &qword_101412450);
    sub_1004CB7BC(v55, v72, &qword_101411B30);
    TupleToolbarContent.init(_:)(v71, v70);
    v73 = sub_1004B804C(&qword_1014123F8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v21, 0, 1, v73);
    v74 = sub_1004CBA30(&qword_1014123F0, &qword_1014123F8, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    static ToolbarContentBuilder.buildIf<A>(_:)(v21, v73, v74);
    sub_1004CB800((uint64_t)v21, &qword_1014123E0);
    sub_1004CB800(v55, &qword_101411B30);
    sub_1004CB800(v36, &qword_101412450);
  }
  else
  {
    v37 = sub_1004B804C(&qword_1014123F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v21, 1, 1, v37);
    v38 = sub_1004CBA30(&qword_1014123F0, &qword_1014123F8, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    static ToolbarContentBuilder.buildIf<A>(_:)(v21, v37, v38);
    sub_1004CB800((uint64_t)v21, &qword_1014123E0);
  }
  v75 = sub_100D876B8();
  static ToolbarContentBuilder.buildBlock<A>(_:)(v25, v89, v75);
  return sub_1004CB800((uint64_t)v25, &qword_1014123E0);
}

uint64_t sub_100D71D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[16];
  uint64_t v56;
  _QWORD v57[2];

  v54 = a2;
  v3 = type metadata accessor for BorderlessButtonMenuStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1004B804C(&qword_101411B90);
  v51 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101411B98);
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1004B804C(&qword_101411BA0);
  __chkstk_darwin(v46);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1004B804C(&qword_101411BA8);
  __chkstk_darwin(v45);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1004B804C(&qword_101411BB0);
  __chkstk_darwin(v47);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a1;
  v18 = sub_1004B804C(&qword_101411BF0);
  v19 = sub_1004B804C(&qword_101411BF8);
  v20 = sub_1004CBA30(&qword_101411C00, &qword_101411BF0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v21 = sub_1004CBA30(&qword_101411C08, &qword_101411BF8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v22 = Menu.init(content:label:)(sub_100D87CC4, v55, sub_100D72528, 0, v18, v19, v20, v21);
  BorderlessButtonMenuStyle.init()(v22);
  v23 = sub_1004CBA30(&qword_101411C10, &qword_101411B90, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v24 = sub_1004B7878(&qword_101411C18, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonMenuStyle);
  v25 = v48;
  v26 = v52;
  View.menuStyle<A>(_:)(v6, v48, v52, v23, v24);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v26);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v25);
  KeyPath = swift_getKeyPath(byte_100F37598);
  v29 = v49;
  v28 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v13, v11, v50);
  v30 = &v13[*(int *)(v46 + 36)];
  *(_QWORD *)v30 = KeyPath;
  v30[8] = 2;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v15, &qword_101411BA0);
  *(_WORD *)&v15[*(int *)(v45 + 36)] = 257;
  v31 = sub_1004CB800((uint64_t)v13, &qword_101411BA0);
  v32 = static Color.accentColor.getter(v31);
  sub_1004CB7BC((uint64_t)v15, (uint64_t)v17, &qword_101411BA8);
  v33 = v47;
  *(_QWORD *)&v17[*(int *)(v47 + 36)] = v32;
  sub_1004CB800((uint64_t)v15, &qword_101411BA8);
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;
  v41 = v40;

  v57[0] = v39;
  v57[1] = v41;
  v42 = sub_100D82E28();
  v43 = sub_1004D292C();
  View.accessibilityLabel<A>(_:)(v57, v33, &type metadata for String, v42, v43);
  swift_bridgeObjectRelease();
  return sub_1004CB800((uint64_t)v17, &qword_101411BB0);
}

uint64_t sub_100D72208@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v3 = type metadata accessor for CRLScenesListUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E7038);
  v37 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v38 = (char *)&v36 - v10;
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - v12;
  __chkstk_darwin(v13);
  v41 = (char *)&v36 - v14;
  if (qword_1013DD330 != -1)
    swift_once(&qword_1013DD330, sub_10087E46C);
  v15 = *(_QWORD *)algn_10147FA48;
  v42 = qword_10147FA40;
  v43 = *(_QWORD *)algn_10147FA48;
  sub_1004B8460(a1, (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLScenesListUI_i);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = v17 + v5;
  v19 = v16 | 7;
  v20 = swift_allocObject(&unk_1012A5718, v17 + v5, v16 | 7);
  sub_1004B84E0((uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v17, type metadata accessor for CRLScenesListUI_i);
  v21 = sub_1004D292C();
  v22 = swift_bridgeObjectRetain(v15);
  Button<>.init<A>(_:action:)(&v42, sub_100D87CD0, v20, &type metadata for String, v21, v22);
  if (qword_1013DD340 != -1)
    swift_once(&qword_1013DD340, sub_10087E62C);
  v23 = *(_QWORD *)algn_10147FA68;
  v42 = qword_10147FA60;
  v43 = *(_QWORD *)algn_10147FA68;
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLScenesListUI_i);
  v24 = swift_allocObject(&unk_1012A5740, v18, v19);
  sub_1004B84E0((uint64_t)v6, v24 + v17, type metadata accessor for CRLScenesListUI_i);
  v25 = swift_bridgeObjectRetain(v23);
  v26 = v36;
  Button<>.init<A>(_:action:)(&v42, sub_100D87CE8, v24, &type metadata for String, v21, v25);
  v28 = v37;
  v27 = v38;
  v29 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v30 = v41;
  v29(v38, v41, v7);
  v31 = v39;
  v29(v39, v26, v7);
  v32 = v40;
  v29(v40, v27, v7);
  v33 = sub_1004B804C(&qword_101411C50);
  v29(&v32[*(int *)(v33 + 48)], v31, v7);
  v34 = *(void (**)(char *, uint64_t))(v28 + 8);
  v34(v26, v7);
  v34(v30, v7);
  v34(v31, v7);
  return ((uint64_t (*)(char *, uint64_t))v34)(v27, v7);
}

uint64_t sub_100D7252C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  id v55;

  v53 = a2;
  v3 = type metadata accessor for EditMode(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for EditButton(0);
  v46 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_101411C60);
  v48 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v47 = (char *)&v42 - v9;
  v49 = sub_1004B804C(&qword_101411C68);
  __chkstk_darwin(v49);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLScenesListUI_i(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v50 = sub_1004B804C(&qword_1013E7038);
  v15 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  v54 = *(_OWORD *)(a1 + *(int *)(v12 + 32));
  v19 = sub_1004B804C(&qword_101411C58);
  State.wrappedValue.getter(v19);
  v20 = v55;

  if (v20)
  {
    sub_1004B8460(v18, (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLScenesListUI_i);
    v21 = *(unsigned __int8 *)(v13 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = swift_allocObject(&unk_1012A56F0, v22 + v14, v21 | 7);
    sub_1004B84E0((uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for CRLScenesListUI_i);
    Button.init(action:label:)(sub_100D87CB0, v23, sub_100D729E8, 0, &type metadata for Text, &protocol witness table for Text);
    v24 = v50;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v50);
    swift_storeEnumTagMultiPayload(v11, v49, 0);
    v25 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    v26 = sub_1004B7878(&qword_101411B48, (uint64_t (*)(uint64_t))&type metadata accessor for EditButton, (uint64_t)&protocol conformance descriptor for EditButton);
    *(_QWORD *)&v54 = v51;
    *((_QWORD *)&v54 + 1) = v26;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v24, v52, v25, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v24);
  }
  else
  {
    v29 = v43;
    EditButton.init()();
    v30 = sub_1004B804C(&qword_101411920);
    v31 = State.wrappedValue.getter(v30);
    v32 = EditMode.isEditing.getter(v31);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
    v33 = sub_1004B7878(&qword_101411B48, (uint64_t (*)(uint64_t))&type metadata accessor for EditButton, (uint64_t)&protocol conformance descriptor for EditButton);
    v34 = v32 & 1;
    v35 = v42;
    v36 = v51;
    View.bold(_:)(v34, v51, v33);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v36);
    v38 = v47;
    v37 = v48;
    v39 = v52;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v35, v52);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v11, v38, v39);
    swift_storeEnumTagMultiPayload(v11, v49, 1);
    v40 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    *(_QWORD *)&v54 = v36;
    *((_QWORD *)&v54 + 1) = v33;
    v41 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v50, v39, v40, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
}

uint64_t sub_100D72990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;

  v4 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 32));
  v3 = 0;
  v1 = sub_1004B804C(&qword_101411C58);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100D729EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];

  v4 = type metadata accessor for CRLScenesListUI_i(0);
  v52 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v52 + 64);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1004B804C(&qword_101412428);
  v6 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1004B804C(&qword_101412430);
  __chkstk_darwin(v49);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101412438);
  v55 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v51 = (uint64_t)&v48 - v16;
  v53 = a1;
  v17 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath("(BT", v15);
  v19 = swift_getKeyPath("\bBT");
  v20 = v17;
  static Published.subscript.getter(v57, v20, KeyPath, v19);

  swift_release(KeyPath);
  swift_release(v19);
  if (v57[0] >> 62)
  {
    if (v57[0] < 0)
      v47 = v57[0];
    else
      v47 = v57[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v57[0]);
    v21 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((v57[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v22 = swift_bridgeObjectRelease();
  if (v21)
  {
    v23 = 1;
  }
  else
  {
    v48 = a2;
    if (qword_1013DD300 != -1)
      swift_once(&qword_1013DD300, sub_10087DF4C);
    v24 = *(_QWORD *)algn_10147F9E8;
    v57[0] = qword_10147F9E0;
    v57[1] = *(_QWORD *)algn_10147F9E8;
    v25 = swift_getKeyPath(byte_100F37550, v48);
    v26 = swift_getKeyPath(byte_100F37578);
    swift_bridgeObjectRetain(v24);
    v27 = v20;
    static Published.subscript.getter(v56, v27, v25, v26);

    swift_release(v25);
    swift_release(v26);
    if (LOBYTE(v56[0]) == 1)
    {
      a2 = v48;
      if (qword_1013DD310 != -1)
        swift_once(&qword_1013DD310, sub_10087E0F4);
      v28 = &qword_10147FA00;
    }
    else
    {
      a2 = v48;
      if (qword_1013DD308 != -1)
        swift_once(&qword_1013DD308, sub_10087E024);
      v28 = &qword_10147F9F0;
    }
    v29 = *v28;
    swift_bridgeObjectRetain(v28[1]);
    v56[0] = v29;
    v56[1] = v30;
    v31 = sub_1004D292C();
    v32 = Text.init<A>(_:)(v56, &type metadata for String, v31);
    ContentUnavailableView<>.init<A>(_:image:description:)(v57, 0x6365722E72617473, 0xEE00656C676E6174, v32, v34, v33 & 1, v35, &type metadata for String, v31);
    if (qword_1013DD2D0 != -1)
      swift_once(&qword_1013DD2D0, sub_10087C62C);
    v36 = Color.init(_:)((id)qword_10147F9A8);
    v37 = static Edge.Set.all.getter(v36);
    v38 = v50;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v50);
    v39 = &v10[*(int *)(v49 + 36)];
    *(_QWORD *)v39 = v36;
    v39[8] = v37;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
    v40 = v54;
    sub_1004B8460(v53, v54, type metadata accessor for CRLScenesListUI_i);
    v41 = *(unsigned __int8 *)(v52 + 80);
    v42 = (v41 + 16) & ~v41;
    v43 = swift_allocObject(&unk_1012A56C8, v42 + v5, v41 | 7);
    sub_1004B84E0(v40, v43 + v42, type metadata accessor for CRLScenesListUI_i);
    sub_1004CB7BC((uint64_t)v10, (uint64_t)v13, &qword_101412430);
    v44 = (uint64_t (**)())&v13[*(int *)(v11 + 36)];
    *v44 = sub_100D87C04;
    v44[1] = (uint64_t (*)())v43;
    v44[2] = 0;
    v44[3] = 0;
    sub_1004CB800((uint64_t)v10, &qword_101412430);
    v45 = v51;
    sub_1004C4938((uint64_t)v13, v51, &qword_101412438);
    sub_1004C4938(v45, a2, &qword_101412438);
    v23 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v55 + 56))(a2, v23, 1, v11, v22);
}

uint64_t sub_100D72EC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v2 = type metadata accessor for EditMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v14 - v8;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))((char *)&v14 - v8, enum case for EditMode.inactive(_:), v2, v7);
  v10 = type metadata accessor for CRLScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  v11 = sub_1004B804C(&qword_101411920);
  State.wrappedValue.setter(v5, v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  v16 = *(_OWORD *)(a1 + *(int *)(v10 + 32));
  v15 = 0;
  v12 = sub_1004B804C(&qword_101411C58);
  return State.wrappedValue.setter(&v15, v12);
}

uint64_t sub_100D72FF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC(a1, (uint64_t)v4, &qword_101409320);
  return EnvironmentValues.editMode.setter(v4);
}

double sub_100D73070(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  double result;
  uint64_t v4;

  v1 = (char *)*(id *)(a1 + 24);
  v2 = sub_1004B804C(&qword_101411CE8);
  State.wrappedValue.getter(v2);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete] = v4;

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D730E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for EditMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, enum case for EditMode.inactive(_:), v0, v5);
  type metadata accessor for CRLScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1004B804C(&qword_101411920);
  State.wrappedValue.setter(v3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
}

double sub_100D731CC(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  double result;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;

  v2 = sub_100D6F530() & 1;
  v3 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath(byte_100F379D0);
  v5 = swift_getKeyPath(byte_100F379F8);
  v6 = v3;
  static Published.subscript.getter(&v12, v6, KeyPath, v5);

  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  if (v2 != v12)
  {
    v9 = __chkstk_darwin(v7);
    v10 = static Animation.default.getter(v9);
    withAnimation<A>(_:_:)(v11);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D732BC(uint64_t a1)
{
  id v1;
  char v2;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  v1 = *(id *)(a1 + 24);
  v2 = sub_100D6F530();
  KeyPath = swift_getKeyPath(byte_100F379D0);
  v4 = swift_getKeyPath(byte_100F379F8);
  v6 = v2 & 1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t sub_100D73340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  __int128 v15;
  void *v16;

  v1 = v0;
  v2 = type metadata accessor for CRLCompactScenesListUI_i(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101411920);
  v10 = State.wrappedValue.getter(v9);
  v11 = EditMode.isEditing.getter(v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLCompactScenesListUI_i);
  if ((v11 & 1) != 0)
  {
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLCompactScenesListUI_i);
    return 1;
  }
  v15 = *(_OWORD *)&v4[*(int *)(v2 + 36)];
  v12 = sub_1004B804C(&qword_101411C58);
  State.wrappedValue.getter(v12);
  v13 = v16;
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLCompactScenesListUI_i);
  if (v13)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_100D734A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  void *v32;
  uint64_t KeyPath;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  __n128 v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char v130[16];
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  void *v134;
  unint64_t v135;
  void *v136;

  v126 = a2;
  v116 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v119 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v120 = v3;
  v129 = (uint64_t)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v4);
  v117 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v109 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v107 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101411A30);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101411A18);
  __chkstk_darwin(v11);
  v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1004B804C(&qword_101411A10);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v15 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1004B804C(&qword_101411A00);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1004B804C(&qword_101411A60);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1004B804C(&qword_1014119F8);
  __chkstk_darwin(v110);
  v115 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1004B804C(&qword_1014119E0);
  __chkstk_darwin(v127);
  v118 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C(&qword_1014119D8);
  v124 = *(_QWORD *)(v20 - 8);
  v125 = v20;
  __chkstk_darwin(v20);
  v128 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1014119D0);
  v122 = *(_QWORD *)(v22 - 8);
  v123 = v22;
  __chkstk_darwin(v22);
  v121 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = a1;
  v24 = sub_1004B804C(&qword_101411A68);
  v25 = sub_100D77B40();
  v26 = List<>.init(content:)(sub_100D77B38, v130, v24, v25);
  v27 = static Alignment.center.getter(v26);
  v29 = v28;
  v30 = (uint64_t)&v13[*(int *)(v11 + 36)];
  sub_100D749F8(a1, v30);
  v31 = (uint64_t *)(v30 + *(int *)(sub_1004B804C(&qword_101411A40) + 36));
  *v31 = v27;
  v31[1] = v29;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  v104 = a1;
  v32 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath("(BT");
  v34 = swift_getKeyPath("\bBT");
  v35 = v32;
  static Published.subscript.getter(&v133, v35, KeyPath, v34);

  swift_release(KeyPath);
  swift_release(v34);
  if ((unint64_t)v133 >> 62)
  {
    if (v133 < 0)
      v100 = v133;
    else
      v100 = v133 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v133);
    v36 = _CocoaArrayWrapper.endIndex.getter(v100);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v36)
  {
    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v36 = v41;
    v43 = v42;

  }
  else
  {
    v43 = 0xE000000000000000;
  }
  v133 = v36;
  v134 = (void *)v43;
  v44 = sub_100D77A9C();
  v45 = sub_1004D292C();
  View.navigationTitle<A>(_:)(&v133, v11, &type metadata for String, v44, v45);
  swift_bridgeObjectRelease();
  sub_1004CB800((uint64_t)v13, &qword_101411A18);
  v46 = v109;
  v47 = v107;
  v48 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v107, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v111);
  v133 = v11;
  v134 = &type metadata for String;
  v135 = v44;
  v136 = (void *)v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v133, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v50 = v105;
  v51 = v103;
  View.navigationBarTitleDisplayMode(_:)(v47, v103, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v15, v51);
  __chkstk_darwin(v52);
  v53 = v104;
  *(&v102 - 2) = v104;
  v54 = sub_1004B804C(&qword_101411A08);
  v133 = v51;
  v134 = (void *)OpaqueTypeConformance2;
  v55 = swift_getOpaqueTypeConformance2(&v133, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v56 = sub_1004CBA30(&qword_101411A48, &qword_101411A08, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  v57 = v112;
  v58 = v108;
  View.toolbar<A>(content:)(sub_100D82910, &v102 - 4, v108, v54, v55, v56);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v50, v58);
  v59 = swift_getKeyPath(byte_100F37520);
  v60 = sub_1004B804C(&qword_101411920);
  v61 = (uint64_t)v117;
  State.projectedValue.getter(v60);
  v62 = sub_1004B804C(&qword_101411B00);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 0, 1, v62);
  v63 = (uint64_t)v115;
  v64 = (uint64_t *)&v115[*(int *)(v110 + 36)];
  v65 = sub_1004B804C(&qword_101411A58);
  sub_1004CB7BC(v61, (uint64_t)v64 + *(int *)(v65 + 28), &qword_101409320);
  *v64 = v59;
  v66 = v113;
  v67 = v114;
  (*(void (**)(uint64_t, char *, uint64_t))(v113 + 16))(v63, v57, v114);
  sub_1004CB800(v61, &qword_101409320);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v67);
  v68 = v129;
  sub_1004B8460(v53, v129, type metadata accessor for CRLCompactScenesListUI_i);
  v69 = *(unsigned __int8 *)(v119 + 80);
  v70 = (v69 + 16) & ~v69;
  v71 = v70 + v120;
  v72 = v69 | 7;
  v73 = swift_allocObject(&unk_1012A4C10, v70 + v120, v69 | 7);
  sub_1004B84E0(v68, v73 + v70, type metadata accessor for CRLCompactScenesListUI_i);
  v74 = v118;
  sub_1004CB7BC(v63, v118, &qword_1014119F8);
  v75 = v53;
  v76 = v71;
  v77 = v127;
  v78 = (_QWORD *)(v74 + *(int *)(v127 + 36));
  *v78 = 0;
  v78[1] = 0;
  v78[2] = sub_100D82940;
  v78[3] = v73;
  sub_1004CB800(v63, &qword_1014119F8);
  v79 = *(void **)(v75 + 32);
  v80 = swift_getKeyPath(byte_100F37550);
  v81 = swift_getKeyPath(byte_100F37578);
  v82 = v79;
  static Published.subscript.getter(&v133, v82, v80, v81);

  swift_release(v80);
  swift_release(v81);
  sub_1004B8460(v75, v68, type metadata accessor for CRLCompactScenesListUI_i);
  v83 = v72;
  v84 = swift_allocObject(&unk_1012A4C38, v76, v72);
  sub_1004B84E0(v68, v84 + v70, type metadata accessor for CRLCompactScenesListUI_i);
  v85 = sub_1006E1664(&qword_1014119E8, &qword_1014119E0, (void (*)(void))sub_100D77940);
  View.onChange<A>(of:initial:_:)(&v133, 0, sub_100D82940, v84, v77, &type metadata for Bool, v85, &protocol witness table for Bool);
  swift_release(v84);
  sub_1004CB800(v74, &qword_1014119E0);
  v86 = *(void **)(v75 + 32);
  v87 = swift_getKeyPath("(BT");
  v88 = swift_getKeyPath("\bBT");
  v89 = v86;
  static Published.subscript.getter(&v133, v89, v87, v88);

  swift_release(v87);
  swift_release(v88);
  if ((unint64_t)v133 >> 62)
  {
    if (v133 < 0)
      v101 = v133;
    else
      v101 = v133 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v133);
    v90 = _CocoaArrayWrapper.endIndex.getter(v101);
    swift_bridgeObjectRelease();
  }
  else
  {
    v90 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v132 = v90 == 0;
  v91 = v75;
  v92 = v129;
  sub_1004B8460(v91, v129, type metadata accessor for CRLCompactScenesListUI_i);
  v93 = swift_allocObject(&unk_1012A4C60, v76, v83);
  sub_1004B84E0(v92, v93 + v70, type metadata accessor for CRLCompactScenesListUI_i);
  v133 = v127;
  v134 = &type metadata for Bool;
  v135 = v85;
  v136 = &protocol witness table for Bool;
  v94 = swift_getOpaqueTypeConformance2(&v133, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v95 = v121;
  v96 = v125;
  v97 = v128;
  View.onChange<A>(of:initial:_:)(&v132, 0, sub_100D82B20, v93, v125, &type metadata for Bool, v94, &protocol witness table for Bool);
  v98 = swift_release(v93);
  (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v97, v96, v98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v122 + 32))(v126, v95, v123);
}

uint64_t sub_100D73FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)();
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v65 = a2;
  v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101411AB0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1004B804C(&qword_101411AA0);
  __chkstk_darwin(v58);
  v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1004B804C(&qword_101411A90);
  __chkstk_darwin(v62);
  v61 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_101411A80);
  *(_QWORD *)&v11 = __chkstk_darwin(v64).n128_u64[0];
  v63 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath("(BT", v11);
  v15 = swift_getKeyPath("\bBT");
  v16 = v13;
  static Published.subscript.getter(&v66, v16, KeyPath, v15);

  swift_release(KeyPath);
  *(_QWORD *)&v17 = swift_release(v15).n128_u64[0];
  v54 = swift_getKeyPath("8AT", v17);
  v18 = a1;
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLCompactScenesListUI_i);
  v19 = *(unsigned __int8 *)(v4 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v5;
  v55 = v19 | 7;
  v53 = v20 + v5;
  v22 = swift_allocObject(&unk_1012A4D78, v20 + v5, v19 | 7);
  sub_1004B84E0((uint64_t)v6, v22 + v20, type metadata accessor for CRLCompactScenesListUI_i);
  v23 = sub_1004B804C(&qword_1013F6740);
  v24 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v25 = sub_1004CBA30(&qword_101411CC8, &qword_1013F6740, (uint64_t)&protocol conformance descriptor for [A]);
  v26 = sub_1004B7878(&qword_10140B790, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
  v27 = sub_1004B7878(&qword_101411AB8, type metadata accessor for CRLSceneRowItemUI_i, (uint64_t)&unk_100F3773C);
  v28 = v56;
  ForEach<>.init(_:id:content:)(&v66, v54, sub_100D8325C, v22, v23, v24, v25, v26, v27);
  v29 = v18;
  sub_1004B8460(v18, (uint64_t)v6, type metadata accessor for CRLCompactScenesListUI_i);
  v30 = v55;
  v31 = swift_allocObject(&unk_1012A4DA0, v21, v55);
  sub_1004B84E0((uint64_t)v6, v31 + v20, type metadata accessor for CRLCompactScenesListUI_i);
  v32 = swift_allocObject(&unk_1012A4DC8, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_100D83274;
  *(_QWORD *)(v32 + 24) = v31;
  v34 = v59;
  v33 = v60;
  v35 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v28, v60);
  v36 = (_QWORD *)(v35 + *(int *)(v58 + 36));
  *v36 = sub_100D83288;
  v36[1] = v32;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v33);
  v37 = v29;
  sub_1004B8460(v29, (uint64_t)v6, type metadata accessor for CRLCompactScenesListUI_i);
  v38 = swift_allocObject(&unk_1012A4DF0, v53, v30);
  sub_1004B84E0((uint64_t)v6, v38 + v20, type metadata accessor for CRLCompactScenesListUI_i);
  v39 = swift_allocObject(&unk_1012A4E18, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_100D832B0;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = v61;
  sub_1004CB7BC(v35, v61, &qword_101411AA0);
  v41 = (uint64_t (**)())(v40 + *(int *)(v62 + 36));
  *v41 = sub_10054E858;
  v41[1] = (uint64_t (*)())v39;
  sub_1004CB800(v35, &qword_101411AA0);
  v42 = *(void **)(v29 + 32);
  v43 = swift_getKeyPath(byte_100F37550);
  v44 = swift_getKeyPath(byte_100F37578);
  v45 = v42;
  static Published.subscript.getter(&v66, v45, v43, v44);

  swift_release(v43);
  swift_release(v44);
  LOBYTE(v43) = v66;
  v46 = v63;
  sub_1004CB7BC(v40, v63, &qword_101411A90);
  *(_BYTE *)(v46 + *(int *)(v64 + 36)) = v43;
  sub_1004CB800(v40, &qword_101411A90);
  v47 = *(void **)(v37 + 32);
  v48 = swift_getKeyPath(byte_100F37550);
  v49 = swift_getKeyPath(byte_100F37578);
  v50 = v47;
  static Published.subscript.getter(&v66, v50, v48, v49);

  swift_release(v48);
  swift_release(v49);
  LOBYTE(v48) = v66;
  v51 = v65;
  sub_1004CB7BC(v46, v65, &qword_101411A80);
  *(_BYTE *)(v51 + *(int *)(sub_1004B804C(&qword_101411A68) + 36)) = v48;
  return sub_1004CB800(v46, &qword_101411A80);
}

uint64_t sub_100D74534@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v36 = a3;
  v5 = sub_1004B804C(&qword_101411CD8);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1004B804C(&qword_1013F0C10);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1004B804C(&qword_101411CE0);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *a1;
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  v34 = a2[1];
  v35 = Strong;
  v16 = (void *)a2[4];
  v17 = a2[6];
  *(_QWORD *)&v37 = a2[5];
  *((_QWORD *)&v37 + 1) = v17;
  v18 = v14;
  v19 = v16;
  v20 = sub_1004B804C(&qword_101411CE8);
  State.projectedValue.getter(v20);
  v21 = v38;
  v22 = v39;
  v37 = *(_OWORD *)((char *)a2 + *(int *)(type metadata accessor for CRLCompactScenesListUI_i(0) + 36));
  v23 = sub_1004B804C(&qword_101411C58);
  State.projectedValue.getter(v23);
  v33 = v38;
  v24 = v39;
  *v13 = swift_getKeyPath(byte_100F37520);
  v25 = sub_1004B804C(&qword_101409318);
  swift_storeEnumTagMultiPayload(v13, v25, 0);
  *v10 = swift_getKeyPath("(AT");
  v26 = sub_1004B804C(&qword_1013F0BF0);
  swift_storeEnumTagMultiPayload(v10, v26, 0);
  *v7 = swift_getKeyPath(byte_100F37648);
  v27 = sub_1004B804C(&qword_101409328);
  v28 = swift_storeEnumTagMultiPayload(v7, v27, 0);
  v29 = FocusState.init<>()(v28);
  return sub_100D70DBC((uint64_t)v18, v35, v34, (uint64_t)v19, (uint64_t)v13, (uint64_t)v10, (uint64_t)v7, v21, v36, *((uint64_t *)&v21 + 1), v22, v33, v24, 0, 0, 0xE000000000000000, 1, 0, v29 & 1,
           v31,
           v30 & 1);
}

double sub_100D74794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  double result;
  uint64_t v15;

  v6 = *(void **)(a3 + 32);
  KeyPath = swift_getKeyPath("(BT");
  v8 = swift_getKeyPath("\bBT");
  v9 = v6;
  static Published.subscript.getter(&v15, v9, KeyPath, v8);

  swift_release(KeyPath);
  swift_release(v8);
  v10 = sub_1004B804C(&qword_1013F6740);
  v11 = sub_1004CBA30(&qword_101411CD0, &qword_1013F6740, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v10, v11);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    sub_100C44CEC(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_100D748A4(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *a1;
  v4 = *(void **)(a2 + 32);
  KeyPath = swift_getKeyPath("(BT");
  v6 = swift_getKeyPath("\bBT");
  v7 = v4;
  static Published.subscript.getter(&v17, v7, KeyPath, v6);

  swift_release(KeyPath);
  swift_release(v6);
  if ((v17 & 0xC000000000000001) == 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v3 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(v17 + 8 * v3 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v17);
LABEL_5:
  v9 = v8;
  swift_bridgeObjectRelease();
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v12, &v16);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    *(_QWORD *)(inited + 32) = v9;
    v17 = inited;
    specialized Array._endMutation()(inited);
    v14 = v17;
    v15 = v9;
    sub_100C447B8(v14);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease(v11);
  }
  else
  {

  }
}

uint64_t sub_100D749F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  _QWORD v22[5];
  uint64_t v23;

  v4 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath("(BT");
  v6 = swift_getKeyPath("\bBT");
  v7 = v4;
  static Published.subscript.getter(&v23, v7, KeyPath, v6);

  swift_release(KeyPath);
  swift_release(v6);
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v20 = v23;
    else
      v20 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v8 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8)
  {
    v10 = sub_1004B804C(&qword_101411C70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
  else
  {
    __chkstk_darwin(v9);
    v22[2] = a1;
    __chkstk_darwin(v12);
    v21[2] = a1;
    v13 = sub_1004B804C(&qword_101411BF0);
    v14 = sub_1004B804C(&qword_101411C78);
    v15 = sub_1004B804C(&qword_101411C80);
    v16 = sub_1004CBA30(&qword_101411C00, &qword_101411BF0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v17 = sub_100D86A94(&qword_101411C88, &qword_101411C78);
    v18 = sub_100D83084();
    ContentUnavailableView.init(label:description:actions:)(sub_100D74C30, 0, sub_100D83074, v22, sub_100D8307C, v21, v13, v14, v15, v16, v17, v18);
    v19 = sub_1004B804C(&qword_101411C70);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
  }
}

uint64_t sub_100D74C30()
{
  uint64_t v0;
  unint64_t v1;
  __n128 v2;
  _QWORD v4[2];

  if (qword_1013DD300 != -1)
    swift_once(&qword_1013DD300, sub_10087DF4C);
  v0 = *(_QWORD *)algn_10147F9E8;
  v4[0] = qword_10147F9E0;
  v4[1] = *(_QWORD *)algn_10147F9E8;
  v1 = sub_1004D292C();
  v2 = swift_bridgeObjectRetain(v0);
  return Label<>.init<A>(_:image:)(v4, 0x6365722E72617473, 0xEE00656C676E6174, &type metadata for String, v1, v2);
}

double sub_100D74CDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;

  v4 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath(byte_100F37550);
  v6 = swift_getKeyPath(byte_100F37578);
  v7 = v4;
  static Published.subscript.getter(&v27, v7, KeyPath, v6);

  swift_release(KeyPath);
  swift_release(v6);
  if (v27 == 1)
  {
    if (qword_1013DD310 != -1)
      swift_once(&qword_1013DD310, sub_10087E0F4);
    v8 = &qword_10147FA00;
  }
  else
  {
    if (qword_1013DD308 != -1)
      swift_once(&qword_1013DD308, sub_10087E024);
    v8 = &qword_10147F9F0;
  }
  v9 = *v8;
  swift_bridgeObjectRetain(v8[1]);
  v27 = v9;
  v28 = v10;
  v11 = sub_1004D292C();
  v12 = Text.init<A>(_:)(&v27, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(&v27, v19, 0, 0, 1, v20, v21);
  v22 = v27;
  v23 = v28;
  v24 = v29;
  v25 = v30;
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v22;
  *(_BYTE *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v24;
  *(_BYTE *)(a2 + 56) = v25;
  result = *(double *)&v31;
  *(_OWORD *)(a2 + 64) = v31;
  return result;
}

uint64_t sub_100D74E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t KeyPath;
  uint64_t v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[3];

  v74 = a2;
  v3 = type metadata accessor for ControlSize(0);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  v4 = __chkstk_darwin(v3);
  v69 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for BorderedProminentButtonStyle(0, v4);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013F67A0);
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1004B804C(&qword_101411CC0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C(&qword_101411CB0);
  __chkstk_darwin(v60);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_101411CA0);
  v19 = *(_QWORD *)(v18 - 8);
  v72 = v18;
  v73 = v19;
  *(_QWORD *)&v20 = __chkstk_darwin(v18).n128_u64[0];
  v67 = (uint64_t)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v23 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath(byte_100F37550, v20);
  v25 = swift_getKeyPath(byte_100F37578);
  v26 = v23;
  static Published.subscript.getter(v75, v26, KeyPath, v25);

  swift_release(KeyPath);
  v27 = swift_release(v25);
  if ((v75[0] & 1) != 0)
  {
    v28 = 1;
    v29 = v74;
    v30 = v72;
  }
  else
  {
    v31 = v22;
    sub_1004B8460(v22, (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    v32 = *(unsigned __int8 *)(v9 + 80);
    v33 = (v32 + 16) & ~v32;
    v34 = swift_allocObject(&unk_1012A4D50, v33 + v10, v32 | 7);
    sub_1004B84E0((uint64_t)v11, v34 + v33, type metadata accessor for CRLCompactScenesListUI_i);
    v35 = sub_1004B804C(&qword_1013F67B8);
    v36 = sub_100D86A94((unint64_t *)&qword_1013F67C0, &qword_1013F67B8);
    v37 = Button.init(action:label:)(sub_100D82C9C, v34, sub_100D75344, 0, v35, v36);
    BorderedProminentButtonStyle.init()(v37);
    v38 = sub_1004CBA30(&qword_1013F67D0, &qword_1013F67A0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1004B7878(&qword_1013F67D8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    v40 = v64;
    v39 = v65;
    v41 = v62;
    View.buttonStyle<A>(_:)(v7, v62, v65, v38);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v39);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v41);
    v43 = v69;
    v42 = v70;
    v44 = v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v69, enum case for ControlSize.large(_:), v71);
    v45 = swift_getKeyPath("hAT");
    v46 = (uint64_t *)&v17[*(int *)(v60 + 36)];
    v47 = sub_1004B804C(&qword_1013F67E0);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))((char *)v46 + *(int *)(v47 + 28), v43, v44);
    *v46 = v45;
    v48 = v66;
    v49 = v68;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v17, v40, v68);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    v50 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v40, v49);
    v51 = *(_QWORD *)(v31 + 16);
    v52 = static Alignment.center.getter(v50);
    _FrameLayout.init(width:height:alignment:)(v75, v51, 0, 0, 1, v52, v53);
    v54 = v67;
    sub_1004CB7BC((uint64_t)v17, v67, &qword_101411CB0);
    v55 = v72;
    v56 = (_OWORD *)(v54 + *(int *)(v72 + 36));
    v57 = v75[1];
    *v56 = v75[0];
    v56[1] = v57;
    v56[2] = v75[2];
    sub_1004CB800((uint64_t)v17, &qword_101411CB0);
    v58 = v74;
    sub_1004C4938(v54, v74, &qword_101411CA0);
    v28 = 0;
    v29 = v58;
    v30 = v55;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v73 + 56))(v29, v28, 1, v30, v27);
}

__n128 sub_100D75344@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  _OWORD v25[9];

  if (qword_1013DD2F8 != -1)
    swift_once(&qword_1013DD2F8, sub_10087DE74);
  v2 = *((_QWORD *)&xmmword_10147F9D0 + 1);
  v25[0] = xmmword_10147F9D0;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v25, &type metadata for String, v3);
  v6 = v5;
  v8 = v7 & 1;
  v11 = Text.bold()(v4, v5, v7 & 1, v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  sub_1005EFC24(v4, v6, v8);
  swift_bridgeObjectRelease();
  v19 = static Alignment.center.getter(v18);
  sub_1006C94CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v25, 0.0, 1, 0.0, 1, v19, v20, v11, v13, v17, v15);
  sub_1005EFC24(v11, v13, v17);
  swift_bridgeObjectRelease();
  v21 = v25[7];
  *(_OWORD *)(a1 + 96) = v25[6];
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = v25[8];
  v22 = v25[3];
  *(_OWORD *)(a1 + 32) = v25[2];
  *(_OWORD *)(a1 + 48) = v22;
  v23 = v25[5];
  *(_OWORD *)(a1 + 64) = v25[4];
  *(_OWORD *)(a1 + 80) = v23;
  result = (__n128)v25[1];
  *(_OWORD *)a1 = v25[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100D754B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  void *v32;
  uint64_t KeyPath;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v102 = a2;
  v99 = sub_1004B804C(&qword_101411B08);
  __chkstk_darwin(v99);
  v98 = (char *)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1004B804C(&qword_101411B10);
  v93 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v92 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101411B18);
  __chkstk_darwin(v5);
  v95 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v97 = (char *)&v90 - v8;
  v101 = sub_1004B804C(&qword_101411B20);
  v105 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v104 = (char *)&v90 - v11;
  v12 = type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v94 = (char *)&v90 - v16;
  v17 = sub_1004B804C(&qword_101411B28);
  v91 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CRLCompactScenesListUI_i(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v90 - v24;
  v26 = sub_1004B804C(&qword_101411B30);
  __chkstk_darwin(v26);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v30 = __chkstk_darwin(v29).n128_u64[0];
  v103 = (uint64_t)&v90 - v31;
  v32 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath("(BT", v30);
  v34 = swift_getKeyPath("\bBT");
  v35 = v32;
  static Published.subscript.getter(&v106, v35, KeyPath, v34);

  swift_release(KeyPath);
  swift_release(v34);
  if ((unint64_t)v106 >> 62)
  {
    if (v106 < 0)
      v88 = v106;
    else
      v88 = v106 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v106);
    v36 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1004B8460(a1, (uint64_t)v25, type metadata accessor for CRLCompactScenesListUI_i);
  if (v36)
  {
    v37 = (void *)*((_QWORD *)v25 + 4);
    v38 = swift_getKeyPath(byte_100F37550);
    v39 = swift_getKeyPath(byte_100F37578);
    v40 = v37;
    static Published.subscript.getter(&v106, v40, v38, v39);

    swift_release(v38);
    swift_release(v39);
    LOBYTE(v38) = v106;
    v41 = sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLCompactScenesListUI_i);
    if ((v38 & 1) == 0)
    {
      v42 = v94;
      v43 = static ToolbarItemPlacement.topBarLeading.getter(v41);
      __chkstk_darwin(v43);
      *(&v90 - 2) = a1;
      v44 = sub_1004B804C(&qword_101411B38);
      v45 = sub_100D82B3C();
      ToolbarItem<>.init(placement:content:)(v42, sub_100D82B34, &v90 - 4, v44, v45);
      v46 = sub_1004CBA30(&qword_101411B50, &qword_101411B28, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
      static ToolbarContentBuilder.buildBlock<A>(_:)(v19, v17, v46);
      v47 = sub_1004B804C(&qword_101411B58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v28, 0, 1, v47);
      v106 = v17;
      v107 = v46;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
      static ToolbarContentBuilder.buildIf<A>(_:)(v28, v47, OpaqueTypeConformance2);
      sub_1004CB800((uint64_t)v28, &qword_101411B30);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v19, v17);
      goto LABEL_8;
    }
  }
  else
  {
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLCompactScenesListUI_i);
  }
  v50 = sub_1004B804C(&qword_101411B58);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v28, 1, 1, v50);
  v51 = sub_1004CBA30(&qword_101411B50, &qword_101411B28, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v106 = v17;
  v107 = v51;
  v52 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  static ToolbarContentBuilder.buildIf<A>(_:)(v28, v50, v52);
  sub_1004CB800((uint64_t)v28, &qword_101411B30);
LABEL_8:
  v54 = (uint64_t)v98;
  v53 = v99;
  v55 = (uint64_t)v97;
  v56 = static ToolbarItemPlacement.topBarTrailing.getter(v49);
  __chkstk_darwin(v56);
  *(&v90 - 2) = a1;
  v57 = sub_1004B804C(&qword_101411B60);
  v58 = sub_100D82C0C();
  v59 = v100;
  ToolbarItem<>.init(placement:content:)(v14, sub_100D82C04, &v90 - 4, v57, v58);
  v60 = v101;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v59, v101);
  v61 = *(void **)(a1 + 32);
  v62 = swift_getKeyPath("(BT");
  v63 = swift_getKeyPath("\bBT");
  v64 = v61;
  static Published.subscript.getter(&v106, v64, v62, v63);

  swift_release(v62);
  swift_release(v63);
  if ((unint64_t)v106 >> 62)
  {
    if (v106 < 0)
      v89 = v106;
    else
      v89 = v106 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v106);
    v65 = _CocoaArrayWrapper.endIndex.getter(v89);
    swift_bridgeObjectRelease();
  }
  else
  {
    v65 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1004B8460(a1, (uint64_t)v22, type metadata accessor for CRLCompactScenesListUI_i);
  if (!v65)
  {
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLCompactScenesListUI_i);
    goto LABEL_14;
  }
  v66 = sub_100D73340();
  v67 = sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLCompactScenesListUI_i);
  if ((v66 & 1) != 0)
  {
LABEL_14:
    v78 = sub_1004B804C(&qword_101411B88);
    v79 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v95, 1, 1, v78);
    v80 = sub_1004CBA30(&qword_101411B80, &qword_101411B10, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
    v106 = v96;
    v107 = v80;
    v81 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    static ToolbarContentBuilder.buildIf<A>(_:)(v79, v78, v81);
    sub_1004CB800(v79, &qword_101411B18);
    goto LABEL_15;
  }
  v68 = v94;
  v69 = static ToolbarItemPlacement.bottomBar.getter(v67);
  __chkstk_darwin(v69);
  *(&v90 - 2) = a1;
  v70 = sub_1004B804C(&qword_101411B70);
  v71 = sub_1004CBA30(&qword_101411B78, &qword_101411B70, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v72 = v92;
  ToolbarItemGroup.init(placement:content:)(v68, sub_100D82C90, &v90 - 4, v70, v71);
  v73 = sub_1004CBA30(&qword_101411B80, &qword_101411B10, (uint64_t)&protocol conformance descriptor for ToolbarItemGroup<A>);
  v75 = (uint64_t)v95;
  v74 = v96;
  static ToolbarContentBuilder.buildBlock<A>(_:)(v72, v96, v73);
  v76 = sub_1004B804C(&qword_101411B88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
  v106 = v74;
  v107 = v73;
  v77 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  static ToolbarContentBuilder.buildIf<A>(_:)(v75, v76, v77);
  sub_1004CB800(v75, &qword_101411B18);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v72, v74);
LABEL_15:
  v82 = v54 + *(int *)(v53 + 48);
  v83 = v54 + *(int *)(v53 + 64);
  v84 = v103;
  sub_1004CB7BC(v103, v54, &qword_101411B30);
  v86 = v104;
  v85 = v105;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v82, v104, v60);
  sub_1004CB7BC(v55, v83, &qword_101411B18);
  TupleToolbarContent.init(_:)(v54, v53);
  sub_1004CB800(v55, &qword_101411B18);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v60);
  return sub_1004CB800(v84, &qword_101411B30);
}

uint64_t sub_100D75E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  id v55;

  v53 = a2;
  v3 = type metadata accessor for EditMode(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for EditButton(0);
  v46 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_101411C60);
  v48 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v42 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v47 = (char *)&v42 - v9;
  v49 = sub_1004B804C(&qword_101411C68);
  __chkstk_darwin(v49);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v50 = sub_1004B804C(&qword_1013E7038);
  v15 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  v54 = *(_OWORD *)(a1 + *(int *)(v12 + 36));
  v19 = sub_1004B804C(&qword_101411C58);
  State.wrappedValue.getter(v19);
  v20 = v55;

  if (v20)
  {
    sub_1004B8460(v18, (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    v21 = *(unsigned __int8 *)(v13 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = swift_allocObject(&unk_1012A4D28, v22 + v14, v21 | 7);
    sub_1004B84E0((uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for CRLCompactScenesListUI_i);
    Button.init(action:label:)(sub_100D83060, v23, sub_100D729E8, 0, &type metadata for Text, &protocol witness table for Text);
    v24 = v50;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v50);
    swift_storeEnumTagMultiPayload(v11, v49, 0);
    v25 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    v26 = sub_1004B7878(&qword_101411B48, (uint64_t (*)(uint64_t))&type metadata accessor for EditButton, (uint64_t)&protocol conformance descriptor for EditButton);
    *(_QWORD *)&v54 = v51;
    *((_QWORD *)&v54 + 1) = v26;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v24, v52, v25, OpaqueTypeConformance2);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v24);
  }
  else
  {
    v29 = v43;
    EditButton.init()();
    v30 = sub_1004B804C(&qword_101411920);
    v31 = State.wrappedValue.getter(v30);
    v32 = EditMode.isEditing.getter(v31);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v45);
    v33 = sub_1004B7878(&qword_101411B48, (uint64_t (*)(uint64_t))&type metadata accessor for EditButton, (uint64_t)&protocol conformance descriptor for EditButton);
    v34 = v32 & 1;
    v35 = v42;
    v36 = v51;
    View.bold(_:)(v34, v51, v33);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v36);
    v38 = v47;
    v37 = v48;
    v39 = v52;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v35, v52);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v11, v38, v39);
    swift_storeEnumTagMultiPayload(v11, v49, 1);
    v40 = sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    *(_QWORD *)&v54 = v36;
    *((_QWORD *)&v54 + 1) = v33;
    v41 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v11, v50, v39, v40, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
}

uint64_t sub_100D76268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;

  v4 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLCompactScenesListUI_i(0) + 36));
  v3 = 0;
  v1 = sub_1004B804C(&qword_101411C58);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100D762C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E7038);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101411B60);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLCompactScenesListUI_i);
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_1012A4D00, v15 + v5, v14 | 7);
  sub_1004B84E0((uint64_t)v6, v16 + v15, type metadata accessor for CRLCompactScenesListUI_i);
  Button.init(action:label:)(sub_100D83008, v16, sub_100D729E8, 0, &type metadata for Text, &protocol witness table for Text);
  if ((sub_100D73340() & 1) != 0)
    v17 = 0.0;
  else
    v17 = 1.0;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  *(double *)&v13[*(int *)(v11 + 36)] = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1004C4938((uint64_t)v13, v20, &qword_101411B60);
}

double sub_100D7648C(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;
  unsigned __int8 v4;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled");
    sub_100C2F590(v4 ^ 1, 0, 0);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

void sub_100D764E8(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;
  v9 = v8;

  v33[0] = v7;
  v33[1] = v9;
  v10 = sub_1004D292C();
  v11 = Text.init<A>(_:)(v33, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Color.accentColor.getter(v11);
  v33[0] = v18;
  v19 = Text.foregroundStyle<A>(_:)(v33, v11, v13, v17, v15, &type metadata for Color, &protocol witness table for Color);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  sub_1005EFC24(v11, v13, v17);
  swift_release(v18);
  v26 = swift_bridgeObjectRelease();
  v27 = Text.bold()(v19, v21, v25, v23, v26);
  v29 = v28;
  LOBYTE(v15) = v30;
  v32 = v31;
  sub_1005EFC24(v19, v21, v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v27;
  *(_QWORD *)(a1 + 8) = v29;
  *(_BYTE *)(a1 + 16) = v15 & 1;
  *(_QWORD *)(a1 + 24) = v32;
}

uint64_t sub_100D7669C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t KeyPath;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  NSString v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD v106[3];

  v105 = a2;
  v3 = type metadata accessor for BorderlessButtonMenuStyle(0);
  v98 = *(_QWORD *)(v3 - 8);
  v99 = v3;
  __chkstk_darwin(v3);
  v96 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1004B804C(&qword_101411B90);
  v93 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v91 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_1004B804C(&qword_101411B98);
  v94 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v92 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1004B804C(&qword_101411BA0);
  __chkstk_darwin(v88);
  v90 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1004B804C(&qword_101411BA8);
  __chkstk_darwin(v87);
  v89 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1004B804C(&qword_101411BB0);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101411BB8);
  __chkstk_darwin(v10);
  v104 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v103 = (uint64_t)&v85 - v13;
  v14 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v85 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v85 + 64);
  __chkstk_darwin(v14);
  v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_101411BC0);
  v86 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v85 - v21;
  v23 = sub_1004B804C(&qword_101411BC8);
  __chkstk_darwin(v23);
  v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v27 = __chkstk_darwin(v26).n128_u64[0];
  v100 = (uint64_t)&v85 - v28;
  v29 = a1;
  v30 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath(byte_100F37550, v27);
  v32 = swift_getKeyPath(byte_100F37578);
  v33 = v30;
  static Published.subscript.getter(v106, v33, KeyPath, v32);

  swift_release(KeyPath);
  swift_release(v32);
  if ((v106[0] & 1) != 0)
  {
    v34 = sub_1004B804C(&qword_101411BE8);
    v35 = v100;
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v100, 1, 1, v34);
  }
  else
  {
    sub_1004B8460(v29, (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    v37 = *(unsigned __int8 *)(v85 + 80);
    v38 = (v37 + 16) & ~v37;
    v39 = swift_allocObject(&unk_1012A4C88, v38 + v15, v37 | 7);
    sub_1004B84E0((uint64_t)v16, v39 + v38, type metadata accessor for CRLCompactScenesListUI_i);
    v40 = sub_1004B804C(&qword_101411BD0);
    v41 = sub_1004CBA30(&qword_101411BD8, &qword_101411BD0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    Button.init(action:label:)(sub_100D82C9C, v39, sub_100D76F58, 0, v40, v41);
    v42 = v86;
    v43 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v43(v19, v22, v17);
    v43(v25, v19, v17);
    v44 = &v25[*(int *)(sub_1004B804C(&qword_101411BE0) + 48)];
    *(_QWORD *)v44 = 0;
    v44[8] = 1;
    v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v22, v17);
    v45(v19, v17);
    v46 = sub_1004B804C(&qword_101411BE8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v25, 0, 1, v46);
    v35 = v100;
    v36 = sub_1004C4938((uint64_t)v25, v100, &qword_101411BC8);
  }
  __chkstk_darwin(v36);
  *(&v85 - 2) = v29;
  v47 = sub_1004B804C(&qword_101411BF0);
  v48 = sub_1004B804C(&qword_101411BF8);
  v49 = sub_1004CBA30(&qword_101411C00, &qword_101411BF0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v50 = sub_1004CBA30(&qword_101411C08, &qword_101411BF8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v51 = v91;
  v52 = Menu.init(content:label:)(sub_100D82CF0, &v85 - 4, sub_100D72528, 0, v47, v48, v49, v50);
  v53 = v96;
  BorderlessButtonMenuStyle.init()(v52);
  v54 = sub_1004CBA30(&qword_101411C10, &qword_101411B90, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v55 = sub_1004B7878(&qword_101411C18, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonMenuStyle);
  v56 = v92;
  v57 = v95;
  v58 = v99;
  View.menuStyle<A>(_:)(v53, v95, v99, v54, v55);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v58);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v57);
  v59 = swift_getKeyPath(byte_100F37598);
  v60 = v94;
  v61 = (uint64_t)v90;
  v62 = v97;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v90, v56, v97);
  v63 = v61 + *(int *)(v88 + 36);
  *(_QWORD *)v63 = v59;
  *(_BYTE *)(v63 + 8) = 2;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v62);
  v64 = v89;
  sub_1004CB7BC(v61, v89, &qword_101411BA0);
  *(_WORD *)(v64 + *(int *)(v87 + 36)) = 257;
  v65 = sub_1004CB800(v61, &qword_101411BA0);
  v66 = static Color.accentColor.getter(v65);
  v67 = v102;
  sub_1004CB7BC(v64, v102, &qword_101411BA8);
  v68 = v101;
  *(_QWORD *)(v67 + *(int *)(v101 + 36)) = v66;
  sub_1004CB800(v64, &qword_101411BA8);
  v69 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v70 = String._bridgeToObjectiveC()();
  v71 = String._bridgeToObjectiveC()();
  v72 = objc_msgSend(v69, "localizedStringForKey:value:table:", v70, v71, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
  v74 = v73;
  v76 = v75;

  v106[0] = v74;
  v106[1] = v76;
  v77 = sub_100D82E28();
  v78 = sub_1004D292C();
  v79 = (uint64_t)v104;
  View.accessibilityLabel<A>(_:)(v106, v68, &type metadata for String, v77, v78);
  swift_bridgeObjectRelease();
  sub_1004CB800(v67, &qword_101411BB0);
  v80 = v103;
  sub_1004C4938(v79, v103, &qword_101411BB8);
  sub_1004CB7BC(v35, (uint64_t)v25, &qword_101411BC8);
  sub_1004CB7BC(v80, v79, &qword_101411BB8);
  v81 = v105;
  sub_1004CB7BC((uint64_t)v25, v105, &qword_101411BC8);
  v82 = sub_1004B804C(&qword_101411C48);
  v83 = v81 + *(int *)(v82 + 48);
  *(_QWORD *)v83 = 0;
  *(_BYTE *)(v83 + 8) = 1;
  sub_1004CB7BC(v79, v81 + *(int *)(v82 + 64), &qword_101411BB8);
  sub_1004CB800(v80, &qword_101411BB8);
  sub_1004CB800(v35, &qword_101411BC8);
  sub_1004CB800(v79, &qword_101411BB8);
  return sub_1004CB800((uint64_t)v25, &qword_101411BC8);
}

double sub_100D76F58@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  double result;
  uint64_t v20;
  __int128 v21;

  v20 = Image.init(systemName:)(0x6365722E73756C70, 0xEE00656C676E6174);
  if (qword_1013DD2F8 != -1)
    swift_once(&qword_1013DD2F8, sub_10087DE74);
  v2 = *((_QWORD *)&xmmword_10147F9D0 + 1);
  v21 = xmmword_10147F9D0;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(&v21, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Color.accentColor.getter(v4);
  *(_QWORD *)&v21 = v11;
  v12 = Text.foregroundStyle<A>(_:)(&v21, v4, v6, v10, v8, &type metadata for Color, &protocol witness table for Color);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  sub_1005EFC24(v4, v6, v10);
  swift_release(v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v20;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v14;
  *(_BYTE *)(a1 + 24) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  swift_retain(v20);
  sub_1006CCFD0(v12, v14, v18);
  swift_bridgeObjectRetain(v16);
  sub_1005EFC24(v12, v14, v18);
  swift_release(v20);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D770E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E7038);
  v37 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v38 = (char *)&v36 - v10;
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - v12;
  __chkstk_darwin(v13);
  v41 = (char *)&v36 - v14;
  if (qword_1013DD330 != -1)
    swift_once(&qword_1013DD330, sub_10087E46C);
  v15 = *(_QWORD *)algn_10147FA48;
  v42 = qword_10147FA40;
  v43 = *(_QWORD *)algn_10147FA48;
  sub_1004B8460(a1, (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = v17 + v5;
  v19 = v16 | 7;
  v20 = swift_allocObject(&unk_1012A4CB0, v17 + v5, v16 | 7);
  sub_1004B84E0((uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v17, type metadata accessor for CRLCompactScenesListUI_i);
  v21 = sub_1004D292C();
  v22 = swift_bridgeObjectRetain(v15);
  Button<>.init<A>(_:action:)(&v42, sub_100D82FD8, v20, &type metadata for String, v21, v22);
  if (qword_1013DD340 != -1)
    swift_once(&qword_1013DD340, sub_10087E62C);
  v23 = *(_QWORD *)algn_10147FA68;
  v42 = qword_10147FA60;
  v43 = *(_QWORD *)algn_10147FA68;
  sub_1004B8460(a1, (uint64_t)v6, type metadata accessor for CRLCompactScenesListUI_i);
  v24 = swift_allocObject(&unk_1012A4CD8, v18, v19);
  sub_1004B84E0((uint64_t)v6, v24 + v17, type metadata accessor for CRLCompactScenesListUI_i);
  v25 = swift_bridgeObjectRetain(v23);
  v26 = v36;
  Button<>.init<A>(_:action:)(&v42, sub_100D82FF0, v24, &type metadata for String, v21, v25);
  v28 = v37;
  v27 = v38;
  v29 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v30 = v41;
  v29(v38, v41, v7);
  v31 = v39;
  v29(v39, v26, v7);
  v32 = v40;
  v29(v40, v27, v7);
  v33 = sub_1004B804C(&qword_101411C50);
  v29(&v32[*(int *)(v33 + 48)], v31, v7);
  v34 = *(void (**)(char *, uint64_t))(v28 + 8);
  v34(v26, v7);
  v34(v30, v7);
  v34(v31, v7);
  return ((uint64_t (*)(char *, uint64_t))v34)(v27, v7);
}

double sub_100D77408(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = Strong;
    sub_100C44F44();
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

double sub_100D77440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v15[24];

  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(char **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v10, v15, 0, 0);
    v11 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10 + *(int *)(v11 + 36), v2);
    v12 = v9;
    v13 = sub_10054B7E8((uint64_t)v5, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    sub_100C4514C((uint64_t)v13);
    swift_unknownObjectRelease(v8);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100D7757C()
{
  uint64_t v0;

  v0 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_100D775C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for EditMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v10 - v6;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))((char *)&v10 - v6, enum case for EditMode.inactive(_:), v0, v5);
  type metadata accessor for CRLCompactScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  v8 = sub_1004B804C(&qword_101411920);
  State.wrappedValue.setter(v3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
}

void sub_100D776AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for EditMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v18 - v8;
  v10 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath("(BT", v7);
  v12 = swift_getKeyPath("\bBT");
  v13 = v10;
  static Published.subscript.getter(&v19, v13, KeyPath, v12);

  swift_release(KeyPath);
  swift_release(v12);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v17 = v19;
    else
      v17 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v14 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = swift_bridgeObjectRelease();
  if (!v14)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v9, enum case for EditMode.inactive(_:), v2, v15);
    type metadata accessor for CRLCompactScenesListUI_i(0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
    v16 = sub_1004B804C(&qword_101411920);
    State.wrappedValue.setter(v5, v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
}

uint64_t sub_100D77848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v0 = sub_1004B804C(&qword_1014119D0);
  v1 = sub_1004CB6A4(&qword_1014119D8);
  v6 = sub_1004CB6A4(&qword_1014119E0);
  v7 = &type metadata for Bool;
  v8 = sub_1006E1664(&qword_1014119E8, &qword_1014119E0, (void (*)(void))sub_100D77940);
  v9 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v6 = v1;
  v7 = &type metadata for Bool;
  v8 = OpaqueTypeConformance2;
  v9 = &protocol witness table for Bool;
  v3 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  return NavigationStack.init<>(root:)(sub_100D77938, &v5, v0, v3);
}

uint64_t sub_100D77938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D734A0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D77940()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;

  result = qword_1014119F0;
  if (!qword_1014119F0)
  {
    v1 = sub_1004CB6A4(&qword_1014119F8);
    v2 = sub_1004CB6A4(&qword_101411A00);
    v3 = sub_1004CB6A4(&qword_101411A08);
    v4 = sub_1004CB6A4(&qword_101411A10);
    v8 = sub_1004CB6A4(&qword_101411A18);
    v9 = &type metadata for String;
    v10 = sub_100D77A9C();
    v11 = sub_1004D292C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    v8 = v4;
    v9 = (void *)OpaqueTypeConformance2;
    v6 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    v7 = sub_1004CBA30(&qword_101411A48, &qword_101411A08, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    v8 = v2;
    v9 = (void *)v3;
    v10 = v6;
    v11 = v7;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    sub_1004CBA30(&qword_101411A50, &qword_101411A58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014119F0);
  }
  return result;
}

unint64_t sub_100D77A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411A20;
  if (!qword_101411A20)
  {
    v1 = sub_1004CB6A4(&qword_101411A18);
    sub_1004CBA30(&qword_101411A28, &qword_101411A30, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_1004CBA30(&qword_101411A38, &qword_101411A40, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411A20);
  }
  return result;
}

uint64_t sub_100D77B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D73FCC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D77B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411A70;
  if (!qword_101411A70)
  {
    v1 = sub_1004CB6A4(&qword_101411A68);
    sub_100D77BC4();
    sub_1004CBA30(&qword_101411AF0, &qword_101411AF8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411A70);
  }
  return result;
}

unint64_t sub_100D77BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411A78;
  if (!qword_101411A78)
  {
    v1 = sub_1004CB6A4(&qword_101411A80);
    sub_100D77C48();
    sub_1004CBA30(&qword_101411AE0, &qword_101411AE8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411A78);
  }
  return result;
}

unint64_t sub_100D77C48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411A88;
  if (!qword_101411A88)
  {
    v1 = sub_1004CB6A4(&qword_101411A90);
    sub_100D77CCC();
    sub_1004CBA30(&qword_101411AD0, &qword_101411AD8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411A88);
  }
  return result;
}

unint64_t sub_100D77CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411A98;
  if (!qword_101411A98)
  {
    v1 = sub_1004CB6A4(&qword_101411AA0);
    sub_100D77D50();
    sub_1004CBA30(&qword_101411AC0, &qword_101411AC8, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411A98);
  }
  return result;
}

unint64_t sub_100D77D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411AA8;
  if (!qword_101411AA8)
  {
    v1 = sub_1004CB6A4(&qword_101411AB0);
    sub_1004B7878(&qword_101411AB8, type metadata accessor for CRLSceneRowItemUI_i, (uint64_t)&unk_100F3773C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_101411AA8);
  }
  return result;
}

uint64_t type metadata accessor for CRLSceneRowItemUI_i(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101411D50, (uint64_t)&nominal type descriptor for CRLSceneRowItemUI_i);
}

uint64_t sub_100D77DE0()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v10;

  v1 = *(void **)(v0 + 32);
  KeyPath = swift_getKeyPath(byte_100F37790);
  v3 = swift_getKeyPath(byte_100F377B8);
  v4 = v1;
  static Published.subscript.getter(&v10, v4, KeyPath, v3);

  swift_release(KeyPath);
  swift_release(v3);
  v5 = v10;
  if (v10)
  {
    v6 = *(void **)v0;
    type metadata accessor for CRLSceneInfo(0);
    v7 = v6;
    v8 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v8, v7);

  }
  return v5 & 1;
}

uint64_t sub_100D77E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  id v22;

  v1 = v0;
  v2 = type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EditMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (_QWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BF0B80((uint64_t)v11);
  v12 = sub_1004B804C(&qword_101411B00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v11, &qword_101409320);
    sub_1004B8460(v0, (uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
  }
  else
  {
    Binding.wrappedValue.getter(v8);
    v13 = sub_1004CB800((uint64_t)v11, &qword_101411B00);
    v14 = EditMode.isEditing.getter(v13);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
    if ((v14 & 1) != 0)
      goto LABEL_6;
  }
  v15 = &v4[*(int *)(v2 + 44)];
  v16 = *(_OWORD *)v15;
  v17 = *((_QWORD *)v15 + 2);
  v20 = v16;
  v21 = v17;
  sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(&v22);
  if (!v22)
  {
    v18 = 0;
    goto LABEL_8;
  }

LABEL_6:
  v18 = 1;
LABEL_8:
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
  return v18;
}

double sub_100D78098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t KeyPath;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  double v28;
  uint64_t v29;
  uint64_t Strong;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t, __n128);
  __n128 v42;
  char v43;
  __n128 v44;
  double v45;
  _OWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void);
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  void (*v57)(char *, uint64_t, __n128);
  __n128 v58;
  char v59;
  __n128 v60;
  double v61;
  char v62;
  __n128 v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  void (*v83)(char *, uint64_t, __n128);
  __n128 v84;
  char v85;
  __n128 v86;
  char v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(void);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  char *v103;
  void (*v104)(char *, uint64_t, __n128);
  __n128 v105;
  char v106;
  __n128 v107;
  char *v108;
  __n128 v109;
  __n128 v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  double v125;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v124 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v120 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v123 = (char *)&v116 - v4;
  __chkstk_darwin(v5);
  v7 = (char *)&v116 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v116 - v9;
  __chkstk_darwin(v11);
  v119 = (char *)&v116 - v12;
  __chkstk_darwin(v13);
  v121 = (char *)&v116 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v116 - v16;
  *(_QWORD *)&v19 = __chkstk_darwin(v18).n128_u64[0];
  v21 = (char *)&v116 - v20;
  v22 = *(void **)(v0 + 32);
  KeyPath = swift_getKeyPath(byte_100F37880, v19);
  v24 = swift_getKeyPath(byte_100F378A8);
  v25 = v22;
  v26 = v0;
  v27 = v25;
  static Published.subscript.getter(&v125, v25, KeyPath, v24);

  swift_release(KeyPath);
  swift_release(v24);
  v28 = v125;
  v29 = v0 + 8;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (v28 < 1.0)
  {
    if (!Strong)
      goto LABEL_12;
    v117 = Strong;
    v118 = v0 + 8;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    v122 = v0;
    sub_100BF0BDC((uint64_t)v10);
    v31 = sub_1004B804C(&qword_1013E2AC8);
    v32 = (_QWORD *)v124;
    v33 = *(_QWORD *)(v124 + 72);
    v34 = *(unsigned __int8 *)(v124 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(v31, v35 + 3 * v33, v34 | 7);
    *(_OWORD *)(v36 + 16) = xmmword_100EF5550;
    v37 = v36 + v35;
    v38 = (void (*)(void))v32[13];
    ((void (*)(uint64_t, _QWORD, uint64_t))v38)(v37, enum case for DynamicTypeSize.accessibility3(_:), v1);
    v39 = v37 + v33;
    ((void (*)(uint64_t, _QWORD, uint64_t))v38)(v37 + v33, enum case for DynamicTypeSize.accessibility4(_:), v1);
    v121 = (char *)(v37 + 2 * v33);
    v38();
    v40 = (void (*)(char *, uint64_t, uint64_t))v32[2];
    v40(v7, v37, v1);
    sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
    LOBYTE(v33) = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10);
    v41 = (void (*)(char *, uint64_t, __n128))v32[1];
    v42 = swift_bridgeObjectRetain(v36);
    v41(v7, v1, v42);
    if ((v33 & 1) != 0
      || (v40(v7, v39, v1),
          v43 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10),
          ((void (*)(char *, uint64_t))v41)(v7, v1),
          (v43 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating(v36);
      swift_arrayDestroy(v37, *(_QWORD *)(v36 + 16), v1);
      swift_deallocClassInstance(v36, 32, 7);
      v44 = swift_unknownObjectRelease(v117);
      v41(v10, v1, v44);
      v45 = 75.0;
      v26 = v122;
      v29 = v118;
LABEL_14:
      v65 = *(void **)(v26 + 32);
      v66 = swift_getKeyPath(byte_100F37880);
      v67 = swift_getKeyPath(byte_100F378A8);
      v68 = v65;
      static Published.subscript.getter(&v125, v68, v66, v67);

      swift_release(v66);
      swift_release(v67);
      v69 = v125;
      v70 = swift_unknownObjectWeakLoadStrong(v29);
      v71 = (uint64_t)v123;
      if (v70)
      {
        v121 = (char *)v70;
        type metadata accessor for CRLSceneRowItemUI_i(0);
        sub_100BF0BDC(v71);
        v72 = sub_1004B804C(&qword_1013E2AC8);
        v73 = (_QWORD *)v124;
        v74 = *(_QWORD *)(v124 + 72);
        v75 = *(unsigned __int8 *)(v124 + 80);
        v76 = (v75 + 32) & ~v75;
        v77 = swift_allocObject(v72, v76 + 3 * v74, v75 | 7);
        *(_OWORD *)(v77 + 16) = xmmword_100EF5550;
        v78 = v77 + v76;
        v79 = (void (*)(void))v73[13];
        ((void (*)(uint64_t, _QWORD, uint64_t))v79)(v77 + v76, enum case for DynamicTypeSize.accessibility3(_:), v1);
        v80 = v78 + v74;
        ((void (*)(uint64_t, _QWORD, uint64_t))v79)(v78 + v74, enum case for DynamicTypeSize.accessibility4(_:), v1);
        v122 = v78 + 2 * v74;
        v79();
        v81 = (void (*)(char *, uint64_t, uint64_t))v73[2];
        v82 = v120;
        v81(v120, v78, v1);
        sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
        LOBYTE(v74) = dispatch thunk of static Equatable.== infix(_:_:)(v82, v71);
        v83 = (void (*)(char *, uint64_t, __n128))v73[1];
        v84 = swift_bridgeObjectRetain(v77);
        v83(v82, v1, v84);
        if ((v74 & 1) != 0
          || (v81(v82, v80, v1),
              v85 = dispatch thunk of static Equatable.== infix(_:_:)(v82, v123),
              ((void (*)(char *, uint64_t))v83)(v82, v1),
              (v85 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_setDeallocating(v77);
          swift_arrayDestroy(v78, *(_QWORD *)(v77 + 16), v1);
          swift_deallocClassInstance(v77, 32, 7);
          v86 = swift_unknownObjectRelease(v121);
          v83(v123, v1, v86);
        }
        else
        {
          v81(v82, v122, v1);
          v108 = v123;
          dispatch thunk of static Equatable.== infix(_:_:)(v82, v123);
          ((void (*)(char *, uint64_t))v83)(v82, v1);
          swift_bridgeObjectRelease();
          swift_setDeallocating(v77);
          swift_arrayDestroy(v78, *(_QWORD *)(v77 + 16), v1);
          swift_deallocClassInstance(v77, 32, 7);
          v109 = swift_unknownObjectRelease(v121);
          v83(v108, v1, v109);
        }
      }
      return v45 * v69;
    }
    v40(v7, (uint64_t)v121, v1);
    v62 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10);
    ((void (*)(char *, uint64_t))v41)(v7, v1);
    swift_bridgeObjectRelease();
    swift_setDeallocating(v36);
    swift_arrayDestroy(v37, *(_QWORD *)(v36 + 16), v1);
    swift_deallocClassInstance(v36, 32, 7);
    v63 = swift_unknownObjectRelease(v117);
    v41(v10, v1, v63);
    v26 = v122;
    v29 = v118;
    if ((v62 & 1) != 0)
      *(double *)&v64 = 75.0;
    else
LABEL_12:
      *(double *)&v64 = 50.0;
    v45 = *(double *)&v64;
    goto LABEL_14;
  }
  v46 = &unk_100EF5000;
  v122 = v0;
  if (!Strong)
    goto LABEL_20;
  v117 = Strong;
  v118 = v0 + 8;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100BF0BDC((uint64_t)v21);
  v47 = sub_1004B804C(&qword_1013E2AC8);
  v48 = (_QWORD *)v124;
  v49 = *(_QWORD *)(v124 + 72);
  v50 = *(unsigned __int8 *)(v124 + 80);
  v51 = (v50 + 32) & ~v50;
  v52 = swift_allocObject(v47, v51 + 3 * v49, v50 | 7);
  *(_OWORD *)(v52 + 16) = xmmword_100EF5550;
  v53 = v52 + v51;
  v54 = (void (*)(void))v48[13];
  ((void (*)(uint64_t, _QWORD, uint64_t))v54)(v53, enum case for DynamicTypeSize.accessibility3(_:), v1);
  v123 = (char *)(v53 + v49);
  v54();
  v55 = v53 + 2 * v49;
  ((void (*)(uint64_t, _QWORD, uint64_t))v54)(v55, enum case for DynamicTypeSize.accessibility5(_:), v1);
  v56 = (void (*)(char *, uint64_t, uint64_t))v48[2];
  v56(v17, v53, v1);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v49) = dispatch thunk of static Equatable.== infix(_:_:)(v17, v21);
  v57 = (void (*)(char *, uint64_t, __n128))v48[1];
  v58 = swift_bridgeObjectRetain(v52);
  v57(v17, v1, v58);
  if ((v49 & 1) == 0)
  {
    v56(v17, (uint64_t)v123, v1);
    v59 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v21);
    ((void (*)(char *, uint64_t))v57)(v17, v1);
    if ((v59 & 1) == 0)
    {
      v56(v17, v55, v1);
      v87 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v21);
      ((void (*)(char *, uint64_t))v57)(v17, v1);
      swift_bridgeObjectRelease();
      swift_setDeallocating(v52);
      swift_arrayDestroy(v53, *(_QWORD *)(v52 + 16), v1);
      swift_deallocClassInstance(v52, 32, 7);
      v88 = swift_unknownObjectRelease(v117);
      v57(v21, v1, v88);
      v26 = v122;
      v29 = v118;
      v46 = (_OWORD *)&unk_100EF5000;
      if ((v87 & 1) != 0)
      {
        *(double *)&v89 = 75.0;
LABEL_21:
        v61 = *(double *)&v89;
        goto LABEL_22;
      }
LABEL_20:
      *(double *)&v89 = 50.0;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating(v52);
  swift_arrayDestroy(v53, *(_QWORD *)(v52 + 16), v1);
  swift_deallocClassInstance(v52, 32, 7);
  v60 = swift_unknownObjectRelease(v117);
  v57(v21, v1, v60);
  v61 = 75.0;
  v26 = v122;
  v29 = v118;
  v46 = (_OWORD *)&unk_100EF5000;
LABEL_22:
  v90 = swift_unknownObjectWeakLoadStrong(v29);
  v91 = (uint64_t)v121;
  if (v90)
  {
    v123 = (char *)v90;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    sub_100BF0BDC(v91);
    v92 = sub_1004B804C(&qword_1013E2AC8);
    v93 = (_QWORD *)v124;
    v94 = *(_QWORD *)(v124 + 72);
    v95 = *(unsigned __int8 *)(v124 + 80);
    v96 = (v95 + 32) & ~v95;
    v97 = swift_allocObject(v92, v96 + 3 * v94, v95 | 7);
    *(_OWORD *)(v97 + 16) = v46[85];
    v98 = v97 + v96;
    v99 = (void (*)(void))v93[13];
    ((void (*)(uint64_t, _QWORD, uint64_t))v99)(v98, enum case for DynamicTypeSize.accessibility3(_:), v1);
    v100 = v91;
    v120 = (char *)(v98 + v94);
    v99();
    v101 = v98 + 2 * v94;
    ((void (*)(uint64_t, _QWORD, uint64_t))v99)(v101, enum case for DynamicTypeSize.accessibility5(_:), v1);
    v102 = (void (*)(char *, uint64_t, uint64_t))v93[2];
    v103 = v119;
    v102(v119, v98, v1);
    sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
    LOBYTE(v94) = dispatch thunk of static Equatable.== infix(_:_:)(v103, v100);
    v104 = (void (*)(char *, uint64_t, __n128))v93[1];
    v105 = swift_bridgeObjectRetain(v97);
    v104(v103, v1, v105);
    if ((v94 & 1) != 0
      || (v102(v103, (uint64_t)v120, v1),
          v106 = dispatch thunk of static Equatable.== infix(_:_:)(v103, v100),
          ((void (*)(char *, uint64_t))v104)(v103, v1),
          (v106 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating(v97);
      swift_arrayDestroy(v98, *(_QWORD *)(v97 + 16), v1);
      swift_deallocClassInstance(v97, 32, 7);
      v107 = swift_unknownObjectRelease(v123);
      v104((char *)v100, v1, v107);
      v26 = v122;
    }
    else
    {
      v102(v103, v101, v1);
      dispatch thunk of static Equatable.== infix(_:_:)(v103, v100);
      ((void (*)(char *, uint64_t))v104)(v103, v1);
      swift_bridgeObjectRelease();
      swift_setDeallocating(v97);
      swift_arrayDestroy(v98, *(_QWORD *)(v97 + 16), v1);
      swift_deallocClassInstance(v97, 32, 7);
      v110 = swift_unknownObjectRelease(v123);
      v104((char *)v100, v1, v110);
      v26 = v122;
    }
  }
  v111 = *(void **)(v26 + 32);
  v112 = swift_getKeyPath(byte_100F37880);
  v113 = swift_getKeyPath(byte_100F378A8);
  v114 = v111;
  static Published.subscript.getter(&v125, v114, v112, v113);

  swift_release(v112);
  swift_release(v113);
  return v61;
}

uint64_t sub_100D78CB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  id v23;
  __n128 v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  void (*v27)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;

  v1 = type metadata accessor for ColorScheme(0);
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  __chkstk_darwin(v1);
  v49 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v48 = (uint64_t)&v47 - v4;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v47 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v52 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v47 - v18;
  v53 = v0;
  v20 = (void *)v0[4];
  KeyPath = swift_getKeyPath(byte_100F37790, v17);
  v22 = swift_getKeyPath(byte_100F377B8);
  v23 = v20;
  static Published.subscript.getter(&v54, v23, KeyPath, v22);

  swift_release(KeyPath);
  v24 = swift_release(v22);
  v25 = v54;
  if (v54)
  {
    v26 = *(void (**)(char *, char *, uint64_t, __n128))(v6 + 16);
    v26(v19, &v54[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v5, v24);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v27)(v19, 0, 1, v5);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    v27(v19, 1, 1, v5, v24);
    v26 = *(void (**)(char *, char *, uint64_t, __n128))(v6 + 16);
  }
  ((void (*)(char *, uint64_t, uint64_t))v26)(v15, *v53 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v5);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v27)(v15, 0, 1, v5);
  v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC((uint64_t)v15, v28, (uint64_t *)&unk_1013E1A50);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v29((uint64_t)v10, 1, v5) != 1)
  {
    v30 = v52;
    sub_1004CB7BC((uint64_t)v10, v52, (uint64_t *)&unk_1013E1A50);
    if (v29(v28, 1, v5) != 1)
    {
      v33 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v47, v28, v5);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v33);
      v35 = *(void (**)(char *, uint64_t))(v6 + 8);
      v35(v33, v5);
      sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
      v35((char *)v30, v5);
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
      if ((v34 & 1) != 0)
        goto LABEL_12;
LABEL_10:
      v31 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemBackgroundColor");
      return Color.init(uiColor:)(v31);
    }
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v5);
LABEL_9:
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F62D0);
    goto LABEL_10;
  }
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E1A50);
  if (v29(v28, 1, v5) != 1)
    goto LABEL_9;
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
LABEL_12:
  type metadata accessor for CRLSceneRowItemUI_i(0);
  v36 = v48;
  sub_100BF0BAC(v48);
  v38 = v49;
  v37 = v50;
  v39 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, enum case for ColorScheme.dark(_:), v51);
  v40 = static ColorScheme.== infix(_:_:)(v36, v38);
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v38, v39);
  v42 = ((uint64_t (*)(uint64_t, uint64_t))v41)(v36, v39);
  v43 = static Color.accentColor.getter(v42);
  v45 = v43;
  if ((v40 & 1) != 0)
    v44.n128_u64[0] = 0x3FD3333333333333;
  else
    v44.n128_u64[0] = 0x3FC47AE147AE147BLL;
  v32 = Color.opacity(_:)(v43, v44);
  swift_release(v45);
  return v32;
}

uint64_t sub_100D79198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t KeyPath;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t OpaqueTypeConformance2;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  id *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  void *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t inited;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  double *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  double *v141;
  unint64_t v142;
  unint64_t v143;
  double *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  __n128 v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD *v162;
  __n128 v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  NSString v167;
  NSString v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  __n128 v179;
  uint64_t v180;
  id v181;
  id v182;
  char v183;
  __n128 v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, uint64_t);
  id v193;
  id v194;
  char v195;
  __n128 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  char *v206;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  _QWORD *v256;
  char *v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  int *v262;
  uint64_t v263;
  char v264[8];
  uint64_t v265;
  id v266[2];
  char v267[8];
  _BYTE v268[24];
  void *v269;

  v251 = a1;
  v250 = type metadata accessor for AccessibilityTraits(0);
  v248 = *(_QWORD *)(v250 - 8);
  __chkstk_darwin(v250);
  v249 = (char *)&v208 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v3);
  v247 = (char *)&v208 - v5;
  v246 = type metadata accessor for AccessibilityActionKind(0, v4);
  v245 = *(_QWORD *)(v246 - 8);
  v6 = __chkstk_darwin(v246);
  v244 = (char *)&v208 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for AccessibilityChildBehavior(0, v6);
  v231 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v230 = (char *)&v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for EditMode(0);
  v210 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v209 = (uint64_t *)((char *)&v208 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v10);
  v219 = (char *)&v208 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  v261 = *((_QWORD *)v262 - 1);
  v260 = *(_QWORD *)(v261 + 64);
  __chkstk_darwin(v262);
  v263 = (uint64_t)&v208 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_101411DD8);
  __chkstk_darwin(v13);
  v15 = (char *)&v208 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_101411DE0);
  __chkstk_darwin(v16);
  v18 = (char *)&v208 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_101411DE8);
  __chkstk_darwin(v19);
  v21 = (char *)&v208 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_101411DF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v208 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_1004B804C(&qword_101411DF8);
  v255 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v254 = (char *)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_1004B804C(&qword_101411E00);
  v218 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v252 = (char *)&v208 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_1004B804C(&qword_101411E08);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v253 = (char *)&v208 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_1004B804C(&qword_101411E10);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v222 = (char *)&v208 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_1004B804C(&qword_101411E18);
  v226 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v225 = (char *)&v208 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = (_QWORD *)sub_1004B804C(&qword_101411E20);
  v229 = *(v256 - 1);
  __chkstk_darwin(v256);
  v227 = (char *)&v208 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_1004B804C(&qword_101411E28);
  v234 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v257 = (char *)&v208 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = sub_1004B804C(&qword_101411E30);
  __chkstk_darwin(v243);
  v258 = (char *)&v208 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v236 = (char *)&v208 - v34;
  __chkstk_darwin(v35);
  v237 = (char *)&v208 - v36;
  __chkstk_darwin(v37);
  v259 = (char *)&v208 - v38;
  __chkstk_darwin(v39);
  v238 = (char *)&v208 - v40;
  __chkstk_darwin(v41);
  v242 = (char *)&v208 - v42;
  v241 = sub_1004B804C(&qword_101411E38);
  v240 = *(_QWORD *)(v241 - 8);
  v43 = __chkstk_darwin(v241);
  v239 = (char *)&v208 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = static VerticalAlignment.center.getter(v43);
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v45 = &v15[*(int *)(sub_1004B804C(&qword_101411E40) + 44)];
  *(_QWORD *)v45 = static VerticalAlignment.center.getter(v46);
  *((_QWORD *)v45 + 1) = 0;
  v45[16] = 0;
  v47 = sub_1004B804C(&qword_101411E48);
  sub_100D7A948(v1, &v45[*(int *)(v47 + 44)]);
  sub_1004CB7BC((uint64_t)v15, (uint64_t)v18, &qword_101411DD8);
  v48 = &v18[*(int *)(v16 + 36)];
  *(_OWORD *)v48 = xmmword_100F37400;
  *((_OWORD *)v48 + 1) = xmmword_100F37410;
  v48[32] = 0;
  v49 = sub_1004CB800((uint64_t)v15, &qword_101411DD8);
  v50 = static HorizontalAlignment.listRowSeparatorLeading.getter(v49);
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v21, &qword_101411DE0);
  v51 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v51 = v50;
  v51[1] = (uint64_t)sub_100D7CD58;
  v51[2] = 0;
  sub_1004CB800((uint64_t)v18, &qword_101411DE0);
  v52 = v1;
  v53 = sub_100D78CB4();
  *(_QWORD *)v268 = v53;
  swift_retain(v53);
  v54 = AnyView.init<A>(_:)(v268, &type metadata for Color, &protocol witness table for Color);
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v24, &qword_101411DE8);
  swift_release(v53);
  v233 = v22;
  *(_QWORD *)&v24[*(int *)(v22 + 36)] = v54;
  sub_1004CB800((uint64_t)v21, &qword_101411DE8);
  v265 = v52;
  v55 = sub_1004B804C(&qword_101411E50);
  v215 = v55;
  v56 = sub_100D85330();
  v57 = sub_100D85500();
  View.contextMenu<A>(menuItems:)(sub_100D85328, v264, v22, v55, v56, v57);
  sub_1004CB800((uint64_t)v24, &qword_101411DF0);
  v58 = v52;
  v212 = v52;
  v59 = *(void **)(v52 + 32);
  KeyPath = swift_getKeyPath(byte_100F37790);
  v61 = swift_getKeyPath(byte_100F377B8);
  v62 = v59;
  static Published.subscript.getter(v268, v62, KeyPath, v61);

  swift_release(KeyPath);
  swift_release(v61);
  v266[0] = *(id *)v268;
  v63 = v263;
  sub_1004B8460(v58, v263, type metadata accessor for CRLSceneRowItemUI_i);
  v64 = *(unsigned __int8 *)(v261 + 80);
  v65 = (v64 + 16) & ~v64;
  v66 = v65 + v260;
  v67 = v64 | 7;
  v68 = swift_allocObject(&unk_1012A4EC8, v65 + v260, v64 | 7);
  sub_1004B84E0(v63, v68 + v65, type metadata accessor for CRLSceneRowItemUI_i);
  v69 = sub_1004B804C(&qword_10140B880);
  *(_QWORD *)v268 = v233;
  *(_QWORD *)&v268[8] = v215;
  *(_QWORD *)&v268[16] = v56;
  v269 = (void *)v57;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v215 = OpaqueTypeConformance2;
  v71 = sub_100D85628();
  v72 = v216;
  v73 = OpaqueTypeConformance2;
  v74 = v254;
  View.onChange<A>(of:initial:_:)(v266, 0, sub_100D85614, v68, v216, v69, v73, v71);
  swift_release(v68);

  (*(void (**)(char *, uint64_t))(v255 + 8))(v74, v72);
  v75 = v212;
  v76 = v212 + v262[10];
  *(_QWORD *)v268 = *(_QWORD *)v76;
  v233 = v76;
  *(_OWORD *)&v268[8] = *(_OWORD *)(v76 + 8);
  v255 = sub_1004B804C(&qword_101411ED0);
  Binding.wrappedValue.getter(v266);
  v77 = v263;
  sub_1004B8460(v75, v263, type metadata accessor for CRLSceneRowItemUI_i);
  v260 = v66;
  v254 = (char *)v67;
  v78 = swift_allocObject(&unk_1012A4EF0, v66, v67);
  v261 = v65;
  v79 = v78 + v65;
  v80 = (uint64_t)v219;
  sub_1004B84E0(v77, v79, type metadata accessor for CRLSceneRowItemUI_i);
  v81 = sub_1004B804C(&qword_10140B878);
  *(_QWORD *)v268 = v72;
  *(_QWORD *)&v268[8] = v69;
  v216 = v69;
  *(_QWORD *)&v268[16] = v215;
  v269 = (void *)v71;
  v215 = v71;
  v82 = swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v83 = sub_1004CBA30(&qword_101411ED8, &qword_10140B878, (uint64_t)&protocol conformance descriptor for Set<A>);
  v84 = v217;
  v214 = v81;
  v213 = (void *)v83;
  v85 = v252;
  View.onChange<A>(of:initial:_:)(v266, 0, sub_100D85954, v78, v217, v81, v82, v83);
  v86 = v78;
  v87 = v84;
  swift_release(v86);
  v88 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v218 + 8))(v85, v84, v88);
  sub_100BF0B80(v80);
  v89 = sub_1004B804C(&qword_101411B00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v80, 1, v89) == 1)
  {
    sub_1004CB800(v80, &qword_101409320);
    v90 = 0;
  }
  else
  {
    v91 = v82;
    v92 = v209;
    Binding.wrappedValue.getter(v209);
    v93 = sub_1004CB800(v80, &qword_101411B00);
    v90 = EditMode.isEditing.getter(v93);
    v94 = v92;
    v82 = v91;
    (*(void (**)(_QWORD *, uint64_t))(v210 + 8))(v94, v211);
  }
  LOBYTE(v266[0]) = v90 & 1;
  v95 = v263;
  sub_1004B8460(v75, v263, type metadata accessor for CRLSceneRowItemUI_i);
  v96 = v260;
  v97 = v254;
  v98 = swift_allocObject(&unk_1012A4F18, v260, v254);
  v99 = v75;
  v100 = v261;
  sub_1004B84E0(v95, v98 + v261, type metadata accessor for CRLSceneRowItemUI_i);
  *(_QWORD *)v268 = v87;
  *(_QWORD *)&v268[8] = v214;
  *(_QWORD *)&v268[16] = v82;
  v269 = v213;
  v101 = swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v102 = v222;
  v103 = v221;
  v104 = v253;
  View.onChange<A>(of:initial:_:)(v266, 0, sub_100D85954, v98, v221, &type metadata for Bool, v101, &protocol witness table for Bool);
  v105 = swift_release(v98);
  (*(void (**)(char *, uint64_t, __n128))(v220 + 8))(v104, v103, v105);
  LOBYTE(v266[0]) = sub_100D77E9C() & 1;
  sub_1004B8460(v99, v95, type metadata accessor for CRLSceneRowItemUI_i);
  v106 = swift_allocObject(&unk_1012A4F40, v96, v97);
  sub_1004B84E0(v95, v106 + v100, type metadata accessor for CRLSceneRowItemUI_i);
  *(_QWORD *)v268 = v103;
  *(_QWORD *)&v268[8] = &type metadata for Bool;
  *(_QWORD *)&v268[16] = v101;
  v269 = &protocol witness table for Bool;
  v107 = swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v108 = v225;
  v109 = v224;
  View.onChange<A>(of:initial:_:)(v266, 0, sub_100D85998, v106, v224, &type metadata for Bool, v107, &protocol witness table for Bool);
  v110 = swift_release(v106);
  (*(void (**)(char *, uint64_t, __n128))(v223 + 8))(v102, v109, v110);
  v111 = v99 + v262[11];
  v112 = *(_OWORD *)v111;
  v113 = *(_QWORD *)(v111 + 16);
  *(_OWORD *)v268 = v112;
  *(_QWORD *)&v268[16] = v113;
  sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(v266);
  sub_1004B8460(v99, v95, type metadata accessor for CRLSceneRowItemUI_i);
  v114 = swift_allocObject(&unk_1012A4F68, v260, v97);
  sub_1004B84E0(v95, v114 + v261, type metadata accessor for CRLSceneRowItemUI_i);
  *(_QWORD *)v268 = v109;
  *(_QWORD *)&v268[8] = &type metadata for Bool;
  v115 = (id *)v99;
  *(_QWORD *)&v268[16] = v107;
  v269 = &protocol witness table for Bool;
  v116 = swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v117 = v227;
  v118 = v228;
  v119 = v216;
  v120 = (void *)v215;
  View.onChange<A>(of:initial:_:)(v266, 0, sub_100D859B0, v114, v228, v216, v116, v215);
  swift_release(v114);

  v121 = (*(uint64_t (**)(char *, uint64_t))(v226 + 8))(v108, v118);
  v122 = v230;
  static AccessibilityChildBehavior.combine.getter(v121);
  *(_QWORD *)v268 = v118;
  *(_QWORD *)&v268[8] = v119;
  *(_QWORD *)&v268[16] = v116;
  v269 = v120;
  v123 = (void *)swift_getOpaqueTypeConformance2(v268, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v124 = v256;
  View.accessibilityElement(children:)(v122, v256, v123);
  (*(void (**)(char *, uint64_t))(v231 + 8))(v122, v232);
  (*(void (**)(char *, _QWORD *))(v229 + 8))(v117, v124);
  v125 = sub_1004B804C(&qword_1013FF100);
  inited = swift_initStackObject(v125, v267);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v127 = (char *)*v115 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name;
  v128 = v127[1];
  *(_QWORD *)(inited + 32) = *v127;
  *(_QWORD *)(inited + 40) = v128;
  *(_OWORD *)v268 = *(_OWORD *)((char *)v115 + v262[12]);
  swift_bridgeObjectRetain(v128);
  v129 = sub_1004B804C(&qword_101411EE8);
  State.wrappedValue.getter(v129);
  v130 = v266[0];
  if (!v266[0])
  {
    v135 = 0;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    v132 = v243;
    v136 = *(_QWORD *)(inited + 40);
    if (v136)
      goto LABEL_12;
LABEL_8:
    v137 = _swiftEmptyArrayStorage;
    if (!v135)
      goto LABEL_20;
    goto LABEL_15;
  }
  v131 = objc_msgSend(v266[0], "crlaxDescription");

  v132 = v243;
  if (v131)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v131);
    v130 = v133;
    v135 = v134;

  }
  else
  {
    v130 = 0;
    v135 = 0;
  }
  *(_QWORD *)(inited + 48) = v130;
  *(_QWORD *)(inited + 56) = v135;
  v136 = *(_QWORD *)(inited + 40);
  if (!v136)
    goto LABEL_8;
LABEL_12:
  v138 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain(v136);
  v137 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v140 = *((_QWORD *)v137 + 2);
  v139 = *((_QWORD *)v137 + 3);
  if (v140 >= v139 >> 1)
    v137 = (double *)sub_100D0EF94((_QWORD *)(v139 > 1), v140 + 1, 1, v137);
  *((_QWORD *)v137 + 2) = v140 + 1;
  v141 = &v137[2 * v140];
  *((_QWORD *)v141 + 4) = v138;
  *((_QWORD *)v141 + 5) = v136;
  v130 = *(id *)(inited + 48);
  v135 = *(_QWORD *)(inited + 56);
  if (v135)
  {
LABEL_15:
    swift_bridgeObjectRetain(v135);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v137 = (double *)sub_100D0EF94(0, *((_QWORD *)v137 + 2) + 1, 1, v137);
    v143 = *((_QWORD *)v137 + 2);
    v142 = *((_QWORD *)v137 + 3);
    if (v143 >= v142 >> 1)
      v137 = (double *)sub_100D0EF94((_QWORD *)(v142 > 1), v143 + 1, 1, v137);
    *((_QWORD *)v137 + 2) = v143 + 1;
    v144 = &v137[2 * v143];
    *((_QWORD *)v144 + 4) = v130;
    *((_QWORD *)v144 + 5) = v135;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  *(_QWORD *)v268 = v137;
  v145 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v146 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v147 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v145, v146);
  v149 = v148;
  swift_bridgeObjectRelease();
  *(_QWORD *)v268 = v147;
  *(_QWORD *)&v268[8] = v149;
  v266[0] = v256;
  v266[1] = v123;
  v150 = swift_getOpaqueTypeConformance2(v266, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v151 = sub_1004D292C();
  v152 = v235;
  v153 = v150;
  v154 = v257;
  View.accessibilityLabel<A>(_:)(v268, v235, &type metadata for String, v153, v151);
  v155 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v234 + 8))(v154, v152, v155);
  v156 = (uint64_t *)((char *)*v115 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  v158 = *v156;
  v157 = v156[1];
  swift_bridgeObjectRetain_n(v157, 2);
  v159 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v161 = v159[2];
  v160 = v159[3];
  if (v161 >= v160 >> 1)
    v159 = sub_100D0EF94((_QWORD *)(v160 > 1), v161 + 1, 1, v159);
  v159[2] = v161 + 1;
  v162 = &v159[2 * v161];
  v162[4] = v158;
  v162[5] = v157;
  v163 = swift_bridgeObjectRelease();
  v164 = (uint64_t)v236;
  v165 = (uint64_t)v258;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)(v159, v132, &type metadata for String, v151, v163);
  swift_bridgeObjectRelease();
  sub_1004CB800(v165, &qword_101411E30);
  v166 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v167 = String._bridgeToObjectiveC()();
  v168 = String._bridgeToObjectiveC()();
  v169 = objc_msgSend(v166, "localizedStringForKey:value:table:", v167, v168, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v169);
  v171 = v170;
  v173 = v172;

  *(_QWORD *)v268 = v171;
  *(_QWORD *)&v268[8] = v173;
  v174 = (uint64_t)v237;
  ModifiedContent<>.accessibilityHint<A>(_:)(v268, v132, &type metadata for String, v151);
  swift_bridgeObjectRelease();
  v175 = sub_1004CB800(v164, &qword_101411E30);
  v176 = v244;
  static AccessibilityActionKind.default.getter(v175);
  v177 = v263;
  sub_1004B8460((uint64_t)v115, v263, type metadata accessor for CRLSceneRowItemUI_i);
  v178 = swift_allocObject(&unk_1012A4F90, v260, v254);
  sub_1004B84E0(v177, v178 + v261, type metadata accessor for CRLSceneRowItemUI_i);
  ModifiedContent<>.accessibilityAction(_:_:)(v176, sub_100D859C8, v178, v132);
  v179 = swift_release(v178);
  (*(void (**)(char *, uint64_t, __n128))(v245 + 8))(v176, v246, v179);
  sub_1004CB800(v174, &qword_101411E30);
  v180 = v233;
  *(_QWORD *)v268 = *(_QWORD *)v233;
  *(_OWORD *)&v268[8] = *(_OWORD *)(v233 + 8);
  Binding.wrappedValue.getter(v266);
  v181 = v266[0];
  v182 = *v115;
  v183 = sub_1006244F0(v182, (uint64_t)v181);

  v184 = swift_bridgeObjectRelease();
  if ((v183 & 1) != 0)
  {
    v185 = v247;
    static AccessibilityTraits.isSelected.getter(v184);
    v186 = v250;
  }
  else
  {
    *(_QWORD *)v268 = _swiftEmptyArrayStorage;
    v187 = sub_1004B7878(&qword_101411EF0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v188 = sub_1004B804C(&qword_101411EF8);
    v189 = sub_1004CBA30(&qword_101411F00, &qword_101411EF8, (uint64_t)&protocol conformance descriptor for [A]);
    v185 = v247;
    v186 = v250;
    dispatch thunk of SetAlgebra.init<A>(_:)(v268, v188, v189, v250, v187);
  }
  v190 = (uint64_t)v238;
  v191 = (uint64_t)v259;
  ModifiedContent<>.accessibilityAddTraits(_:)(v185, v132);
  v192 = *(void (**)(char *, uint64_t))(v248 + 8);
  v192(v185, v186);
  sub_1004CB800(v191, &qword_101411E30);
  *(_QWORD *)v268 = *(_QWORD *)v180;
  *(_OWORD *)&v268[8] = *(_OWORD *)(v180 + 8);
  Binding.wrappedValue.getter(v266);
  v193 = v266[0];
  v194 = *v115;
  v195 = sub_1006244F0(v194, (uint64_t)v193);

  v196 = swift_bridgeObjectRelease();
  if ((v195 & 1) != 0)
  {
    *(_QWORD *)v268 = _swiftEmptyArrayStorage;
    v197 = sub_1004B7878(&qword_101411EF0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v198 = sub_1004B804C(&qword_101411EF8);
    v199 = sub_1004CBA30(&qword_101411F00, &qword_101411EF8, (uint64_t)&protocol conformance descriptor for [A]);
    v200 = v249;
    dispatch thunk of SetAlgebra.init<A>(_:)(v268, v198, v199, v186, v197);
  }
  else
  {
    v200 = v249;
    static AccessibilityTraits.isSelected.getter(v196);
  }
  v201 = (uint64_t)v242;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v200, v132);
  v192(v200, v186);
  v202 = sub_1004CB800(v190, &qword_101411E30);
  __chkstk_darwin(v202);
  *(&v208 - 2) = (uint64_t)v115;
  v203 = sub_1004B804C(&qword_101411F08);
  v204 = sub_100D859E4();
  v205 = sub_100D85C28();
  v206 = v239;
  View.accessibilityActions<A>(_:)(sub_100D859DC, &v208 - 4, v132, v203, v204, v205);
  sub_1004CB800(v201, &qword_101411E30);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v240 + 32))(v251, v206, v241);
}

uint64_t sub_100D7A948@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t, __n128);
  __n128 v48;
  char v49;
  __n128 v50;
  char v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char v55;
  __n128 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t (*v123)@<X0>(uint64_t@<X8>);
  uint64_t v124;
  char v125;

  v115 = a2;
  v102 = sub_1004B804C(&qword_101411FB8);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101411FC0);
  __chkstk_darwin(v4);
  v103 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101411FC8);
  v111 = *(_QWORD *)(v6 - 8);
  v112 = v6;
  __chkstk_darwin(v6);
  v100 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101411FD0);
  __chkstk_darwin(v8);
  v114 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v113 = (uint64_t)&v95 - v11;
  v104 = type metadata accessor for DynamicTypeSize(0);
  v105 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v106 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v116 = (char *)&v95 - v14;
  v117 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v15 = *(_QWORD *)(v117 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v117);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1004B804C(&qword_101411FD8);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v95 - v20;
  v22 = sub_100D7B230();
  v24 = v23;
  sub_1004B8460(a1, (uint64_t)v17, type metadata accessor for CRLSceneRowItemUI_i);
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = v26 + v16;
  v28 = v25 | 7;
  v29 = swift_allocObject(&unk_1012A52B0, v27, v25 | 7);
  sub_1004B84E0((uint64_t)v17, v29 + v26, type metadata accessor for CRLSceneRowItemUI_i);
  v119 = v22;
  LOBYTE(v120) = v24 & 1;
  v121 = 0;
  v122 = 0;
  v123 = sub_100D85E34;
  v124 = v29;
  v125 = 0;
  sub_1004B8460(a1, (uint64_t)v17, type metadata accessor for CRLSceneRowItemUI_i);
  v30 = swift_allocObject(&unk_1012A52D8, v27, v28);
  sub_1004B84E0((uint64_t)v17, v30 + v26, type metadata accessor for CRLSceneRowItemUI_i);
  v31 = sub_1004B804C(&qword_101411FE0);
  v32 = sub_100D85E98();
  v107 = v21;
  View.onTapGesture(count:perform:)(1, sub_100D85E84, v30, v31, v32);
  swift_release(v30);
  swift_release(v124);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 8);
  if (!Strong)
    goto LABEL_7;
  v97 = Strong;
  v98 = a1;
  v34 = (uint64_t)v116;
  sub_100BF0BDC((uint64_t)v116);
  v35 = sub_1004B804C(&qword_1013E2AC8);
  v36 = (_QWORD *)v105;
  v37 = *(_QWORD *)(v105 + 72);
  v38 = *(unsigned __int8 *)(v105 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject(v35, v39 + 3 * v37, v38 | 7);
  *(_OWORD *)(v40 + 16) = xmmword_100EF5550;
  v41 = v40 + v39;
  v42 = (void (*)(void))v36[13];
  v43 = v104;
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v41, enum case for DynamicTypeSize.accessibility3(_:), v104);
  v44 = v41 + v37;
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v41 + v37, enum case for DynamicTypeSize.accessibility4(_:), v43);
  v96 = v41 + 2 * v37;
  v42();
  v45 = (void (*)(char *, uint64_t, uint64_t))v36[2];
  v46 = v106;
  v45(v106, v41, v43);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v37) = dispatch thunk of static Equatable.== infix(_:_:)(v46, v34);
  v47 = (void (*)(char *, uint64_t, __n128))v36[1];
  v48 = swift_bridgeObjectRetain(v40);
  v47(v46, v43, v48);
  if ((v37 & 1) != 0
    || (v45(v46, v44, v43),
        v49 = dispatch thunk of static Equatable.== infix(_:_:)(v46, v116),
        ((void (*)(char *, uint64_t))v47)(v46, v43),
        (v49 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating(v40);
    swift_arrayDestroy(v41, *(_QWORD *)(v40 + 16), v43);
    swift_deallocClassInstance(v40, 32, 7);
    v50 = swift_unknownObjectRelease(v97);
    v47(v116, v43, v50);
    LODWORD(v116) = 0;
    v51 = 1;
    a1 = v98;
    goto LABEL_8;
  }
  v45(v46, v96, v43);
  v52 = v46;
  v53 = v46;
  v54 = (uint64_t)v116;
  v55 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v116);
  ((void (*)(char *, uint64_t))v47)(v53, v43);
  swift_bridgeObjectRelease();
  swift_setDeallocating(v40);
  swift_arrayDestroy(v41, *(_QWORD *)(v40 + 16), v43);
  swift_deallocClassInstance(v40, 32, 7);
  v56 = swift_unknownObjectRelease(v97);
  v47((char *)v54, v43, v56);
  a1 = v98;
  if ((v55 & 1) != 0)
  {
    LODWORD(v116) = 0;
    v51 = 1;
  }
  else
  {
LABEL_7:
    v51 = 0;
    LODWORD(v116) = 1;
  }
LABEL_8:
  v57 = a1 + *(int *)(v117 + 56);
  v58 = *(_BYTE *)v57;
  v59 = *(_QWORD *)(v57 + 8);
  LOBYTE(v119) = v58;
  v120 = v59;
  v60 = sub_1004B804C(&qword_101401590);
  v61 = State.wrappedValue.getter(v60);
  if (v118 == 1)
  {
    __chkstk_darwin(v61);
    *(&v95 - 2) = a1;
    v62 = sub_1004B804C(&qword_101412018);
    v63 = sub_1004B804C(&qword_101412020);
    v64 = sub_100D85F3C();
    v65 = sub_1004CBA30(&qword_101412040, &qword_101412020, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v66 = v99;
    Menu.init(content:label:)(sub_100D85F34, &v95 - 4, sub_100D81BB0, 0, v62, v63, v64, v65);
    v67 = sub_1004CBA30(&qword_101412048, &qword_101411FB8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v68 = (uint64_t)v103;
    v69 = v102;
    View.accessibilityHidden(_:)(1, v102, v67);
    v70 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v66, v69);
    LOBYTE(v69) = static Edge.Set.trailing.getter(v70);
    v71 = EdgeInsets.init(_all:)(13.0);
    v73 = v72;
    v75 = v74;
    v77 = v76;
    v78 = v100;
    sub_1004CB7BC(v68, v100, &qword_101411FC0);
    v79 = v112;
    v80 = v78 + *(int *)(v112 + 36);
    *(_BYTE *)v80 = v69;
    *(double *)(v80 + 8) = v71;
    *(_QWORD *)(v80 + 16) = v73;
    *(_QWORD *)(v80 + 24) = v75;
    *(_QWORD *)(v80 + 32) = v77;
    *(_BYTE *)(v80 + 40) = 0;
    sub_1004CB800(v68, &qword_101411FC0);
    v81 = v78;
    v82 = v113;
    sub_1004C4938(v81, v113, &qword_101411FC8);
    v83 = 0;
  }
  else
  {
    v83 = 1;
    v79 = v112;
    v82 = v113;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v82, v83, 1, v79);
  v84 = v108;
  v85 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  v87 = v109;
  v86 = v110;
  v88 = v107;
  v85(v109, v107, v110);
  v89 = v114;
  sub_1004CB7BC(v82, v114, &qword_101411FD0);
  v90 = v115;
  v85(v115, v87, v86);
  v91 = sub_1004B804C(&qword_101412010);
  v92 = &v90[*(int *)(v91 + 48)];
  *(_QWORD *)v92 = 0;
  v92[8] = v51;
  v92[9] = (char)v116;
  sub_1004CB7BC(v89, (uint64_t)&v90[*(int *)(v91 + 64)], &qword_101411FD0);
  sub_1004CB800(v82, &qword_101411FD0);
  v93 = *(void (**)(char *, uint64_t))(v84 + 8);
  v93(v88, v86);
  sub_1004CB800(v89, &qword_101411FD0);
  return ((uint64_t (*)(char *, uint64_t))v93)(v87, v86);
}

uint64_t sub_100D7B230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  double (*v19)(char *, uint64_t, __n128);
  __n128 v20;
  char v21;
  __n128 v22;
  char v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for DynamicTypeSize(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - v6;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v27 = Strong;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    sub_100BF0BDC((uint64_t)v7);
    v10 = sub_1004B804C(&qword_1013E2AC8);
    v11 = *(_QWORD *)(v2 + 72);
    v12 = *(unsigned __int8 *)(v2 + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = swift_allocObject(v10, v13 + 3 * v11, v12 | 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EF5550;
    v15 = v14 + v13;
    v16 = *(void (**)(void))(v2 + 104);
    ((void (*)(uint64_t, _QWORD, uint64_t))v16)(v15, enum case for DynamicTypeSize.accessibility3(_:), v1);
    v17 = v15 + v11;
    ((void (*)(uint64_t, _QWORD, uint64_t))v16)(v15 + v11, enum case for DynamicTypeSize.accessibility4(_:), v1);
    v26 = v15 + 2 * v11;
    v16();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v18(v4, v15, v1);
    sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
    LOBYTE(v11) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v7);
    v19 = *(double (**)(char *, uint64_t, __n128))(v2 + 8);
    v20 = swift_bridgeObjectRetain(v14);
    v19(v4, v1, v20);
    if ((v11 & 1) != 0
      || (v18(v4, v17, v1),
          v21 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v7),
          ((void (*)(char *, uint64_t))v19)(v4, v1),
          (v21 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating(v14);
      swift_arrayDestroy(v15, *(_QWORD *)(v14 + 16), v1);
      swift_deallocClassInstance(v14, 32, 7);
      v22 = swift_unknownObjectRelease(v27);
      v9.n128_f64[0] = v19(v7, v1, v22);
      return static HorizontalAlignment.leading.getter(v9);
    }
    v18(v4, v26, v1);
    v24 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v7);
    ((void (*)(char *, uint64_t))v19)(v4, v1);
    swift_bridgeObjectRelease();
    swift_setDeallocating(v14);
    swift_arrayDestroy(v15, *(_QWORD *)(v14 + 16), v1);
    swift_deallocClassInstance(v14, 32, 7);
    v25 = swift_unknownObjectRelease(v27);
    v19(v7, v1, v25);
    if ((v24 & 1) != 0)
      return static HorizontalAlignment.leading.getter(v9);
  }
  return static VerticalAlignment.center.getter(v9);
}

uint64_t sub_100D7B508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_1004B804C(&qword_101412078);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - v6;
  v8 = sub_1004B804C(&qword_101412080);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - v12;
  sub_100D7B69C((uint64_t)&v17 - v12);
  sub_100D7BC0C((uint64_t)v7);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, &qword_101412080);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v4, &qword_101412078);
  sub_1004CB7BC((uint64_t)v10, a1, &qword_101412080);
  v14 = sub_1004B804C(&qword_101412088);
  sub_1004CB7BC((uint64_t)v4, a1 + *(int *)(v14 + 48), &qword_101412078);
  v15 = a1 + *(int *)(v14 + 64);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  sub_1004CB800((uint64_t)v7, &qword_101412078);
  sub_1004CB800((uint64_t)v13, &qword_101412080);
  sub_1004CB800((uint64_t)v4, &qword_101412078);
  return sub_1004CB800((uint64_t)v10, &qword_101412080);
}

uint64_t sub_100D7B69C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t KeyPath;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[4];
  _OWORD v80[3];

  v77 = a1;
  v78 = type metadata accessor for TaskPriority(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v75 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_1004B804C(&qword_101412100);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1004B804C(&qword_101412108);
  v68 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101412110);
  v13 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  v72 = v13;
  __chkstk_darwin(v12);
  v69 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_101412118);
  v73 = *(_QWORD *)(v15 - 8);
  v74 = v15;
  __chkstk_darwin(v15);
  v70 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v8 = static Alignment.center.getter(v17);
  v8[1] = v18;
  v19 = sub_1004B804C(&qword_101412120);
  sub_100D7F1A8((uint64_t)v1, (_QWORD *)((char *)v8 + *(int *)(v19 + 44)));
  v20 = static Edge.Set.trailing.getter();
  v21 = EdgeInsets.init(_all:)(15.0);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v11, &qword_101412100);
  v28 = &v11[*(int *)(v9 + 36)];
  *v28 = v20;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_1004CB800((uint64_t)v8, &qword_101412100);
  v29 = (void *)v1[4];
  KeyPath = swift_getKeyPath("8@T");
  v31 = swift_getKeyPath(byte_100F37860);
  v32 = v29;
  static Published.subscript.getter(v80, v32, KeyPath, v31);

  swift_release(KeyPath);
  swift_release(v31);
  sub_1004B8460((uint64_t)v1, (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
  v33 = *(unsigned __int8 *)(v4 + 80);
  v34 = (v33 + 16) & ~v33;
  v35 = v34 + v5;
  v65 = v33 | 7;
  v66 = v34 + v5;
  v36 = swift_allocObject(&unk_1012A54E0, v34 + v5, v33 | 7);
  v37 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B84E0((uint64_t)v37, v36 + v34, type metadata accessor for CRLSceneRowItemUI_i);
  v38 = sub_100D862B4();
  v39 = v69;
  v40 = v68;
  View.onChange<A>(of:initial:_:)(v80, 0, sub_100D86250, v36, v68, &type metadata for Bool, v38, &protocol witness table for Bool);
  swift_release(v36);
  sub_1004CB800((uint64_t)v11, &qword_101412108);
  v67 = v1;
  v41 = (_OWORD *)(*v1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect);
  v42 = v41[1];
  v80[0] = *v41;
  v80[1] = v42;
  sub_1004B8460((uint64_t)v1, (uint64_t)v37, type metadata accessor for CRLSceneRowItemUI_i);
  v43 = v35;
  v44 = v65;
  v45 = swift_allocObject(&unk_1012A5508, v43, v65);
  sub_1004B84E0((uint64_t)v37, v45 + v34, type metadata accessor for CRLSceneRowItemUI_i);
  type metadata accessor for CGRect(0);
  v47 = v46;
  v79[0] = v40;
  v79[1] = &type metadata for Bool;
  v79[2] = v38;
  v79[3] = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v79, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v49 = sub_1004B7878(&qword_101412138, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t)&protocol conformance descriptor for CGRect);
  v50 = v70;
  v51 = v71;
  View.onChange<A>(of:initial:_:)(v80, 0, sub_100D8633C, v45, v71, v47, OpaqueTypeConformance2, v49);
  v52 = swift_release(v45);
  (*(void (**)(char *, uint64_t, __n128))(v72 + 8))(v39, v51, v52);
  sub_1004B8460((uint64_t)v67, (uint64_t)v37, type metadata accessor for CRLSceneRowItemUI_i);
  v53 = swift_allocObject(&unk_1012A5530, v66, v44);
  v54 = sub_1004B84E0((uint64_t)v37, v53 + v34, type metadata accessor for CRLSceneRowItemUI_i);
  v55 = v75;
  static TaskPriority.userInitiated.getter(v54);
  v56 = sub_1004B804C(&qword_101412080);
  v57 = v77;
  v58 = (char *)(v77 + *(int *)(v56 + 36));
  v59 = type metadata accessor for _TaskModifier(0);
  v60 = v76;
  v61 = v78;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(&v58[*(int *)(v59 + 20)], v55, v78);
  *(_QWORD *)v58 = &unk_101412148;
  *((_QWORD *)v58 + 1) = v53;
  v63 = v73;
  v62 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v57, v50, v74);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v61);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v50, v62);
}

uint64_t sub_100D7BC0C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  uint64_t OpaqueTypeConformance2;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (**v73)();
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t Strong;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(void);
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  char *v116;
  void (*v117)(char *, uint64_t, __n128);
  __n128 v118;
  char v119;
  __n128 v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  __n128 v124;
  uint64_t KeyPath;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  __n128 v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;

  v2 = v1;
  v171 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v143 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v144 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v167 = (char *)&v139 - v6;
  v7 = sub_1004B804C(&qword_101412090);
  v164 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v162 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v163 = (char *)&v139 - v10;
  v170 = sub_1004B804C(&qword_101412098);
  v11 = __chkstk_darwin(v170);
  v13 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for SubmitLabel(0, v11);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(char **)(v16 + 64);
  __chkstk_darwin(v15);
  v146 = sub_1004B804C(&qword_1013F0E08);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v19 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1004B804C(&qword_1014120A0);
  v148 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1004B804C(&qword_1014120A8);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1004B804C(&qword_1014120B0);
  __chkstk_darwin(v149);
  v154 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1004B804C(&qword_1014120B8);
  __chkstk_darwin(v168);
  v159 = (uint64_t)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_1004B804C(&qword_1014120C0);
  v161 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v158 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v160 = (char *)&v139 - v26;
  v27 = v15;
  v28 = (char *)v2 + *(int *)(v15 + 60);
  v29 = *v28;
  v30 = *((_QWORD *)v28 + 1);
  LOBYTE(v174) = v29;
  v175 = (char *)v30;
  v31 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v31);
  if (v172 == 1)
  {
    v32 = LocalizedStringKey.init(stringLiteral:)(0, 0xE000000000000000);
    v166 = v7;
    v162 = (char *)v32;
    v144 = v33;
    v165 = v13;
    v140 = v34;
    v143 = v35;
    v36 = *(int *)(v15 + 52);
    v141 = v15;
    v37 = (char *)v2 + v36;
    v38 = *(_OWORD *)v37;
    v39 = *((_QWORD *)v37 + 2);
    v172 = v38;
    v173 = v39;
    v40 = sub_1004B804C(&qword_1013F0E10);
    State.projectedValue.getter(v40);
    v41 = v174;
    v139 = (uint64_t)v175;
    v43 = v176;
    v42 = v177;
    sub_1004B8460((uint64_t)v2, (uint64_t)&v139 - ((unint64_t)(v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    v44 = *(unsigned __int8 *)(v16 + 80);
    v167 = &v17[(v44 + 16) & ~v44];
    v45 = (v44 + 16) & ~v44;
    v163 = (char *)v45;
    v164 = v44 | 7;
    v46 = (char *)&v139 - ((unint64_t)(v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v47 = swift_allocObject(&unk_1012A5418, v167, v44 | 7);
    sub_1004B84E0((uint64_t)v46, v47 + v45, type metadata accessor for CRLSceneRowItemUI_i);
    TextField<>.init(_:text:onEditingChanged:onCommit:)(v162, v144, v140 & 1, v143, v41, v139, v43, v42, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, sub_100D861FC, v47);
    v48 = (char *)v2 + *(int *)(v27 + 64);
    v49 = (uint64_t)v2;
    v50 = *v48;
    v51 = *((_QWORD *)v48 + 1);
    LOBYTE(v48) = v48[16];
    LOBYTE(v172) = v50;
    *((_QWORD *)&v172 + 1) = v51;
    LOBYTE(v173) = (_BYTE)v48;
    v52 = sub_1004B804C(&qword_1014120F8);
    FocusState.projectedValue.getter(&v174, v52);
    v53 = v174;
    v54 = (uint64_t)v175;
    v55 = v176;
    v56 = sub_1004CBA30(&qword_1013F0E18, &qword_1013F0E08, (uint64_t)&protocol conformance descriptor for TextField<A>);
    v57 = v147;
    v58 = v146;
    View.focused(_:)(v53, v54, v55, v146, v56);
    swift_release(v54);
    v59 = swift_release(v53);
    v60 = (*(uint64_t (**)(char *, uint64_t, __n128))(v145 + 8))(v19, v58, v59);
    v61 = v155;
    static SubmitLabel.done.getter(v60);
    v174 = v58;
    v175 = (char *)v56;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v174, &opaque type descriptor for <<opaque return type of View.focused(_:)>>, 1);
    v63 = v151;
    v64 = v150;
    View.submitLabel(_:)(v61, v150, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v61, v157);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v57, v64);
    v65 = v49;
    sub_1004B8460(v49, (uint64_t)v46, type metadata accessor for CRLSceneRowItemUI_i);
    v66 = (uint64_t)v167;
    v67 = v164;
    v68 = swift_allocObject(&unk_1012A5440, v167, v164);
    v69 = v163;
    sub_1004B84E0((uint64_t)v46, (uint64_t)&v163[v68], type metadata accessor for CRLSceneRowItemUI_i);
    v70 = v152;
    v71 = (uint64_t)v154;
    v72 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v154, v63, v153);
    v73 = (uint64_t (**)())(v71 + *(int *)(v149 + 36));
    *v73 = sub_100D86214;
    v73[1] = (uint64_t (*)())v68;
    v73[2] = 0;
    v73[3] = 0;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v63, v72);
    sub_1004B8460(v65, (uint64_t)v46, type metadata accessor for CRLSceneRowItemUI_i);
    v74 = swift_allocObject(&unk_1012A5468, v66, v67);
    sub_1004B84E0((uint64_t)v46, (uint64_t)&v69[v74], type metadata accessor for CRLSceneRowItemUI_i);
    v75 = v159;
    sub_1004CB7BC(v71, v159, &qword_1014120B0);
    v76 = v168;
    v77 = (_QWORD *)(v75 + *(int *)(v168 + 36));
    *v77 = 0;
    v77[1] = 0;
    v77[2] = sub_100D861FC;
    v77[3] = v74;
    sub_1004CB800(v71, &qword_1014120B0);
    v78 = sub_1004B804C(&qword_1013FB130);
    AccessibilityFocusState.projectedValue.getter(&v174, v78);
    v79 = v174;
    v80 = (uint64_t)v175;
    v81 = v176;
    v82 = sub_1006E1664(&qword_1014120E8, &qword_1014120B8, (void (*)(void))sub_100D8611C);
    v83 = v158;
    View.accessibilityFocused(_:)(v79, v80, v81, v76, v82);
    swift_release(v80);
    swift_release(v79);
    sub_1004CB800(v75, &qword_1014120B8);
    v84 = v161;
    v85 = v160;
    v86 = v169;
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v160, v83, v169);
    v87 = v165;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v165, v85, v86);
    swift_storeEnumTagMultiPayload(v87, v170, 0);
    v174 = v76;
    v175 = (char *)v82;
    v88 = swift_getOpaqueTypeConformance2(&v174, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
    v89 = sub_1004CB6A4(&qword_1014120C8);
    v90 = sub_100D86098();
    v174 = v89;
    v175 = (char *)v90;
    v91 = swift_getOpaqueTypeConformance2(&v174, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    _ConditionalContent<>.init(storage:)(v87, v86, v166, v88, v91);
    return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v85, v86);
  }
  v93 = v7;
  v159 = v16;
  v160 = v17;
  v161 = (uint64_t)&v139 - ((unint64_t)(v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = (uint64_t *)(*v2 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  v95 = v94[1];
  v174 = *v94;
  v175 = (char *)v95;
  v96 = sub_1004D292C();
  swift_bridgeObjectRetain(v95);
  v97 = Text.init<A>(_:)(&v174, &type metadata for String, v96);
  v158 = v98;
  LODWORD(v157) = v99;
  v101 = v100;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 1);
  v103 = v13;
  v142 = v2;
  if (!Strong)
    goto LABEL_9;
  v154 = (char *)Strong;
  v155 = (char *)v97;
  v156 = v101;
  v165 = v13;
  v166 = v7;
  v104 = (uint64_t)v167;
  sub_100BF0BDC((uint64_t)v167);
  v105 = sub_1004B804C(&qword_1013E2AC8);
  v106 = (_QWORD *)v143;
  v107 = *(_QWORD *)(v143 + 72);
  v108 = *(unsigned __int8 *)(v143 + 80);
  v109 = (v108 + 32) & ~v108;
  v110 = 2 * v107;
  v111 = swift_allocObject(v105, v109 + 3 * v107, v108 | 7);
  *(_OWORD *)(v111 + 16) = xmmword_100EF5550;
  v112 = v111 + v109;
  v113 = (void (*)(void))v106[13];
  ((void (*)(uint64_t, _QWORD, uint64_t))v113)(v112, enum case for DynamicTypeSize.accessibility3(_:), v3);
  v114 = v112 + v107;
  ((void (*)(uint64_t, _QWORD, uint64_t))v113)(v114, enum case for DynamicTypeSize.accessibility4(_:), v3);
  v153 = v112 + v110;
  v113();
  v115 = (void (*)(char *, uint64_t, uint64_t))v106[2];
  v116 = v144;
  v115(v144, v112, v3);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v113) = dispatch thunk of static Equatable.== infix(_:_:)(v116, v104);
  v117 = (void (*)(char *, uint64_t, __n128))v106[1];
  v118 = swift_bridgeObjectRetain(v111);
  v117(v116, v3, v118);
  if ((v113 & 1) == 0)
  {
    v115(v116, v114, v3);
    v119 = dispatch thunk of static Equatable.== infix(_:_:)(v116, v167);
    ((void (*)(char *, uint64_t))v117)(v116, v3);
    if ((v119 & 1) == 0)
    {
      v115(v116, v153, v3);
      v122 = (uint64_t)v167;
      v123 = dispatch thunk of static Equatable.== infix(_:_:)(v116, v167);
      ((void (*)(char *, uint64_t))v117)(v116, v3);
      swift_bridgeObjectRelease();
      swift_setDeallocating(v111);
      swift_arrayDestroy(v112, *(_QWORD *)(v111 + 16), v3);
      swift_deallocClassInstance(v111, 32, 7);
      v124 = swift_unknownObjectRelease(v154);
      v117((char *)v122, v3, v124);
      v103 = v165;
      v93 = v166;
      v101 = v156;
      v97 = (uint64_t)v155;
      if ((v123 & 1) != 0)
      {
        v121 = 3;
        goto LABEL_10;
      }
LABEL_9:
      v121 = 1;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating(v111);
  swift_arrayDestroy(v112, *(_QWORD *)(v111 + 16), v3);
  swift_deallocClassInstance(v111, 32, 7);
  v120 = swift_unknownObjectRelease(v154);
  v117(v167, v3, v120);
  v121 = 3;
  v103 = v165;
  v93 = v166;
  v101 = v156;
  v97 = (uint64_t)v155;
LABEL_10:
  v174 = v97;
  v175 = v158;
  LOBYTE(v176) = v157 & 1;
  v177 = v101;
  v178 = KeyPath;
  v179 = v121;
  v180 = 0;
  v126 = v161;
  sub_1004B8460((uint64_t)v142, v161, type metadata accessor for CRLSceneRowItemUI_i);
  v127 = *(unsigned __int8 *)(v159 + 80);
  v128 = (v127 + 16) & ~v127;
  v129 = swift_allocObject(&unk_1012A53F0, &v160[v128], v127 | 7);
  sub_1004B84E0(v126, v129 + v128, type metadata accessor for CRLSceneRowItemUI_i);
  v130 = sub_1004B804C(&qword_1014120C8);
  v131 = sub_100D86098();
  v132 = v162;
  View.onTapGesture(count:perform:)(1, sub_100D86084, v129, v130, v131);
  swift_release(v129);
  sub_1005EFC24(v174, (uint64_t)v175, v176);
  swift_bridgeObjectRelease();
  v133 = swift_release(v178);
  v135 = v163;
  v134 = v164;
  (*(void (**)(char *, char *, uint64_t, __n128))(v164 + 32))(v163, v132, v93, v133);
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v103, v135, v93);
  swift_storeEnumTagMultiPayload(v103, v170, 1);
  v136 = sub_1006E1664(&qword_1014120E8, &qword_1014120B8, (void (*)(void))sub_100D8611C);
  v174 = v168;
  v175 = (char *)v136;
  v137 = swift_getOpaqueTypeConformance2(&v174, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
  v174 = v130;
  v175 = (char *)v131;
  v138 = swift_getOpaqueTypeConformance2(&v174, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  _ConditionalContent<>.init(storage:)(v103, v169, v93, v137, v138);
  return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v135, v93);
}

uint64_t sub_100D7C9E8(char **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char v43[40];
  _BYTE v44[24];
  char *v45;

  v2 = type metadata accessor for EditMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v6);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v9);
  v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (char *)a1 + *(int *)(v12 + 44);
  v14 = *((_QWORD *)v13 + 2);
  *(_OWORD *)v44 = *(_OWORD *)v13;
  *(_QWORD *)&v44[16] = v14;
  v15 = sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(&v45);
  if (!v45)
  {
    sub_1004B8460((uint64_t)a1, (uint64_t)v11, type metadata accessor for CRLSceneRowItemUI_i);
    sub_100BF0B80((uint64_t)v8);
    v24 = sub_1004B804C(&qword_101411B00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v8, 1, v24) == 1)
    {
      sub_1004CB800((uint64_t)v8, &qword_101409320);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLSceneRowItemUI_i);
    }
    else
    {
      Binding.wrappedValue.getter(v5);
      v25 = sub_1004CB800((uint64_t)v8, &qword_101411B00);
      v26 = EditMode.isEditing.getter(v25);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLSceneRowItemUI_i);
      if ((v26 & 1) != 0)
        goto LABEL_3;
    }
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
    if (Strong)
    {
      v28 = Strong;
      sub_100C43BCC(*a1);
      swift_unknownObjectRelease(v28);
    }
    v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v29, v43);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    v31 = *a1;
    *(_QWORD *)(inited + 32) = *a1;
    *(_QWORD *)v44 = inited;
    specialized Array._endMutation()(inited);
    v32 = *(_QWORD *)v44;
    if (*(_QWORD *)v44 >> 62)
    {
      if (*(uint64_t *)v44 < 0)
        v37 = *(_QWORD *)v44;
      else
        v37 = *(_QWORD *)v44 & 0xFFFFFFFFFFFFFF8;
      v38 = v31;
      swift_bridgeObjectRetain(v32);
      v39 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v39)
        goto LABEL_11;
    }
    else
    {
      v33 = *(_QWORD *)((*(_QWORD *)v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      v34 = v31;
      if (v33)
      {
LABEL_11:
        sub_1004B891C(v32);
        v36 = v35;
LABEL_17:
        swift_bridgeObjectRelease();
        v40 = (char *)a1 + *(int *)(v9 + 40);
        *(_QWORD *)v44 = *(_QWORD *)v40;
        *(_OWORD *)&v44[8] = *(_OWORD *)(v40 + 8);
        v45 = v36;
        v23 = sub_1004B804C(&qword_101411ED0);
        return Binding.wrappedValue.setter(&v45, v23);
      }
    }
    v36 = (char *)&_swiftEmptySetSingleton;
    goto LABEL_17;
  }

  sub_1004B8460((uint64_t)a1, (uint64_t)v11, type metadata accessor for CRLSceneRowItemUI_i);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLSceneRowItemUI_i);
LABEL_3:
  v16 = (char *)a1 + *(int *)(v9 + 60);
  v17 = *v16;
  v18 = *((_QWORD *)v16 + 1);
  v44[0] = v17;
  *(_QWORD *)&v44[8] = v18;
  LOBYTE(v45) = 1;
  v19 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(&v45, v19);
  v20 = *a1;
  v21 = *((_QWORD *)v13 + 2);
  *(_OWORD *)v44 = *(_OWORD *)v13;
  *(_QWORD *)&v44[16] = v21;
  v45 = v20;
  v22 = v20;
  v23 = v15;
  return Binding.wrappedValue.setter(&v45, v23);
}

uint64_t sub_100D7CD58()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.leading.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_100D7CD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t KeyPath;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  int *v122;
  char *v123;
  char *v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  uint64_t v168;
  id v169;

  v166 = a2;
  v153 = sub_1004B804C(&qword_101411EC0);
  __chkstk_darwin(v153);
  v141 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1004B804C(&qword_101411F68);
  __chkstk_darwin(v150);
  v152 = (uint64_t)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_1004B804C(&qword_101411EB0);
  __chkstk_darwin(v151);
  v146 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101411F70);
  __chkstk_darwin(v6);
  v142 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_101411F78);
  __chkstk_darwin(v8);
  v148 = (uint64_t)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v161 = (uint64_t)&v132 - v12;
  v145 = type metadata accessor for Divider(0, v11);
  v147 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v157 = (char *)&v132 - v15;
  __chkstk_darwin(v16);
  v158 = (char *)&v132 - v17;
  __chkstk_darwin(v18);
  v159 = (char *)&v132 - v19;
  __chkstk_darwin(v20);
  v162 = (char *)&v132 - v21;
  __chkstk_darwin(v22);
  v160 = (char *)&v132 - v23;
  v24 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v155 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v156 = v25;
  v154 = (uint64_t)&v132 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1004B804C(&qword_101411F80);
  v163 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin(v149);
  v143 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v132 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v132 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v132 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v132 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v132 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v132 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v132 - v46;
  v48 = sub_1004B804C(&qword_101411EA0);
  v164 = *(_QWORD *)(v48 - 8);
  v165 = v48;
  __chkstk_darwin(v48);
  v50 = (char *)&v132 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1 + *(int *)(v24 + 44);
  v52 = *(_OWORD *)v51;
  v53 = *(_QWORD *)(v51 + 16);
  v167 = v52;
  v168 = v53;
  sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(&v169);
  if (v169)
  {

    v54 = 1;
    v56 = v164;
    v55 = v165;
    v57 = v166;
  }
  else
  {
    v133 = v32;
    v134 = v29;
    v136 = v47;
    v137 = v35;
    v138 = v38;
    v139 = v41;
    v140 = v44;
    v135 = v50;
    v58 = a1;
    v59 = *(void **)(a1 + 32);
    KeyPath = swift_getKeyPath(byte_100F37550);
    v61 = swift_getKeyPath(byte_100F37578);
    v62 = v59;
    static Published.subscript.getter(&v167, v62, KeyPath, v61);

    swift_release(KeyPath);
    swift_release(v61);
    LOBYTE(KeyPath) = v167;
    v63 = v154;
    sub_1004B8460(v58, v154, type metadata accessor for CRLSceneRowItemUI_i);
    v64 = *(unsigned __int8 *)(v155 + 80);
    v65 = (v64 + 16) & ~v64;
    v66 = v65 + v156;
    v67 = v64 | 7;
    v68 = v58;
    if ((KeyPath & 1) != 0)
    {
      v69 = v64 | 7;
      v70 = swift_allocObject(&unk_1012A5210, v65 + v156, v64 | 7);
      v71 = v65;
      sub_1004B84E0(v63, v70 + v65, type metadata accessor for CRLSceneRowItemUI_i);
      v72 = sub_1004B804C(&qword_101411F88);
      v73 = sub_1004CBA30(&qword_101411F90, &qword_101411F88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v74 = v140;
      Button.init(action:label:)(sub_100D85E10, v70, sub_100D87FC8, 0, v72, v73);
      sub_1004B8460(v68, v63, type metadata accessor for CRLSceneRowItemUI_i);
      v75 = swift_allocObject(&unk_1012A5238, v66, v69);
      sub_1004B84E0(v63, v75 + v71, type metadata accessor for CRLSceneRowItemUI_i);
      v76 = v139;
      Button.init(action:label:)(sub_100D85D68, v75, sub_100D87FCC, 0, v72, v73);
      v77 = v163;
      v78 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
      v79 = v138;
      v80 = v149;
      v78(v138, v74, v149);
      v81 = v137;
      v78(v137, v76, v80);
      v82 = (uint64_t)v141;
      v78(v141, v79, v80);
      v83 = sub_1004B804C(&qword_101411FA0);
      v78((char *)(v82 + *(int *)(v83 + 48)), v81, v80);
      v84 = *(void (**)(char *, uint64_t))(v77 + 8);
      v84(v81, v80);
      v84(v79, v80);
      v85 = v152;
      sub_1004CB7BC(v82, v152, &qword_101411EC0);
      swift_storeEnumTagMultiPayload(v85, v150, 1);
      v86 = sub_1004CBA30(&qword_101411EA8, &qword_101411EB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v87 = sub_1004CBA30(&qword_101411EB8, &qword_101411EC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v88 = (uint64_t)v135;
      _ConditionalContent<>.init(storage:)(v85, v151, v153, v86, v87);
      sub_1004CB800(v82, &qword_101411EC0);
      v84(v76, v80);
      v89 = v74;
      v90 = v80;
    }
    else
    {
      v91 = swift_allocObject(&unk_1012A5148, v65 + v156, v64 | 7);
      sub_1004B84E0(v63, v91 + v65, type metadata accessor for CRLSceneRowItemUI_i);
      v92 = sub_1004B804C(&qword_101411F88);
      v156 = v92;
      v93 = v66;
      v94 = sub_1004CBA30(&qword_101411F90, &qword_101411F88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v95 = Button.init(action:label:)(sub_100D85CD0, v91, sub_100D87FD0, 0, v92, v94);
      Divider.init()(v95);
      v96 = sub_100D77DE0();
      v97 = v149;
      v98 = v68;
      v99 = v65;
      if ((v96 & 1) != 0)
      {
        v100 = 1;
        v101 = v161;
      }
      else
      {
        sub_1004B8460(v98, v63, type metadata accessor for CRLSceneRowItemUI_i);
        v102 = swift_allocObject(&unk_1012A5170, v93, v67);
        sub_1004B84E0(v63, v102 + v65, type metadata accessor for CRLSceneRowItemUI_i);
        v101 = v161;
        Button.init(action:label:)(sub_100D85CE8, v102, sub_100D87FD4, 0, v156, v94);
        v100 = 0;
      }
      v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56))(v101, v100, 1, v97);
      Divider.init()(v103);
      sub_1004B8460(v98, v63, type metadata accessor for CRLSceneRowItemUI_i);
      v104 = swift_allocObject(&unk_1012A5198, v93, v67);
      sub_1004B84E0(v63, v104 + v65, type metadata accessor for CRLSceneRowItemUI_i);
      v105 = v94;
      v106 = v156;
      Button.init(action:label:)(sub_100D85DDC, v104, sub_100D87FC8, 0, v156, v105);
      sub_1004B8460(v98, v63, type metadata accessor for CRLSceneRowItemUI_i);
      v107 = swift_allocObject(&unk_1012A51C0, v93, v67);
      sub_1004B84E0(v63, v107 + v99, type metadata accessor for CRLSceneRowItemUI_i);
      v108 = Button.init(action:label:)(sub_100D85D68, v107, sub_100D87FCC, 0, v106, v105);
      Divider.init()(v108);
      v109 = v142;
      static ButtonRole.destructive.getter(v110);
      v111 = type metadata accessor for ButtonRole(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v109, 0, 1, v111);
      sub_1004B8460(v98, v63, type metadata accessor for CRLSceneRowItemUI_i);
      v112 = swift_allocObject(&unk_1012A51E8, v93, v67);
      sub_1004B84E0(v63, v112 + v99, type metadata accessor for CRLSceneRowItemUI_i);
      v113 = v138;
      Button.init(role:action:label:)(v109, sub_100D85DF8, v112, sub_100D87FD8, 0, v106, v105);
      v114 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
      v115 = v137;
      v114(v137, v136, v97);
      v116 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
      v117 = v145;
      v116(v158, v160, v145);
      v118 = v148;
      sub_1004CB7BC(v161, v148, &qword_101411F78);
      v116(v157, v162, v117);
      v114(v133, v140, v97);
      v114(v134, v139, v97);
      v119 = v144;
      v116(v144, v159, v117);
      v120 = v143;
      v114(v143, v113, v97);
      v121 = v146;
      v114(v146, v115, v97);
      v122 = (int *)sub_1004B804C(&qword_101411F98);
      v116(&v121[v122[12]], v158, v117);
      sub_1004CB7BC(v118, (uint64_t)&v121[v122[16]], &qword_101411F78);
      v116(&v121[v122[20]], v157, v117);
      v123 = v133;
      v114(&v121[v122[24]], v133, v97);
      v124 = v134;
      v114(&v121[v122[28]], v134, v97);
      v116(&v121[v122[32]], v119, v117);
      v114(&v121[v122[36]], v120, v97);
      v84 = *(void (**)(char *, uint64_t))(v163 + 8);
      v84(v120, v97);
      v125 = *(void (**)(char *, uint64_t))(v147 + 8);
      v125(v119, v117);
      v84(v124, v97);
      v84(v123, v97);
      v125(v157, v117);
      sub_1004CB800(v148, &qword_101411F78);
      v125(v158, v117);
      v84(v137, v97);
      v126 = (uint64_t)v121;
      v127 = (uint64_t)v121;
      v128 = v152;
      sub_1004CB7BC(v126, v152, &qword_101411EB0);
      swift_storeEnumTagMultiPayload(v128, v150, 0);
      v129 = sub_1004CBA30(&qword_101411EA8, &qword_101411EB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v130 = sub_1004CBA30(&qword_101411EB8, &qword_101411EC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v88 = (uint64_t)v135;
      _ConditionalContent<>.init(storage:)(v128, v151, v153, v129, v130);
      sub_1004CB800(v127, &qword_101411EB0);
      v84(v138, v97);
      v125(v159, v117);
      v84(v139, v97);
      v84(v140, v97);
      v125(v162, v117);
      sub_1004CB800(v161, &qword_101411F78);
      v125(v160, v117);
      v89 = v136;
      v90 = v97;
    }
    v84(v89, v90);
    v55 = v165;
    v57 = v166;
    v56 = v164;
    sub_1004C4938(v88, v166, &qword_101411EA0);
    v54 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v57, v54, 1, v55);
}

void sub_100D7DB38(uint64_t a1)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  void *v28;

  v2 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath(byte_100F37790);
  v4 = swift_getKeyPath(byte_100F377B8);
  v5 = v2;
  static Published.subscript.getter(&v26, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  v6 = (void *)v26;
  if (!v26)
  {
    v14 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 40));
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v26 = v15;
    *(_QWORD *)&v27 = v16;
    *((_QWORD *)&v27 + 1) = v17;
    swift_retain(v15);
    swift_retain(v16);
    swift_bridgeObjectRetain(v17);
    v18 = sub_1004B804C(&qword_101411ED0);
    Binding.wrappedValue.getter(&v28);
    swift_bridgeObjectRelease();
    v26 = v15;
    *(_QWORD *)&v27 = v16;
    *((_QWORD *)&v27 + 1) = v17;
    v25 = &_swiftEmptySetSingleton;
    Binding.wrappedValue.setter(&v25, v18);
    swift_bridgeObjectRelease();
    swift_release(v16);
    swift_release(v15);
    return;
  }
  v7 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v7, &v24);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  *(_QWORD *)(inited + 32) = v6;
  v26 = inited;
  specialized Array._endMutation()(inited);
  v9 = v26;
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v19 = v26;
    else
      v19 = v26 & 0xFFFFFFFFFFFFFF8;
    v20 = v6;
    swift_bridgeObjectRetain(v9);
    v21 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_4;
LABEL_10:
    v13 = &_swiftEmptySetSingleton;
    goto LABEL_11;
  }
  v10 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v6;
  if (!v10)
    goto LABEL_10;
LABEL_4:
  sub_1004B891C(v9);
  v13 = v12;
LABEL_11:
  swift_bridgeObjectRelease();
  v22 = a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 40);
  v26 = *(_QWORD *)v22;
  v27 = *(_OWORD *)(v22 + 8);
  v28 = v13;
  v23 = sub_1004B804C(&qword_101411ED0);
  Binding.wrappedValue.setter(&v28, v23);

}

void sub_100D7DD40()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  void *v8;

  type metadata accessor for CRLSceneRowItemUI_i(0);
  LOBYTE(v8) = 0;
  v1 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(&v8, v1);
  v2 = sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(&v8);
  v3 = v8;
  if (v8)
  {
    v4 = *v0;
    type metadata accessor for CRLSceneInfo(0);
    v5 = v4;
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) != 0)
    {
      v8 = 0;
      Binding.wrappedValue.setter(&v8, v2);
    }
  }
}

uint64_t sub_100D7DE50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_100503E34();
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  sub_1004B8460(a1, (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1012A50F8, v14 + v10, v13 | 7);
  sub_1004B84E0((uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for CRLSceneRowItemUI_i);
  aBlock[4] = sub_100D85DA4;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_1012A5110;
  v16 = _Block_copy(aBlock);
  v17 = swift_release(v27);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v20 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
}

uint64_t sub_100D7E0B0(uint64_t a1)
{
  char v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[9];
  uint64_t v9;

  v2 = sub_100D77E9C();
  v3 = (char *)(a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 56));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8[1] = v4;
  v9 = v5;
  v8[0] = (v2 & 1) == 0;
  v6 = sub_1004B804C(&qword_101401590);
  return State.wrappedValue.setter(v8, v6);
}

void sub_100D7E124()
{
  id v0;
  id v1;

  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1004B804C(&qword_101411EE0);
  Binding.wrappedValue.getter(&v1);
  v0 = v1;

  if (!v0)
    sub_100D7DD40();
}

uint64_t sub_100D7E194(char **a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  unint64_t v19;
  __int128 v20;
  _BYTE v21[40];

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v3 = Strong;
    sub_100C43BCC(*a1);
    swift_unknownObjectRelease(v3);
  }
  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v4, v21);
  *(_OWORD *)(inited + 16) = xmmword_100EEF400;
  v6 = *a1;
  *(_QWORD *)(inited + 32) = *a1;
  v19 = inited;
  specialized Array._endMutation()(inited);
  if (v19 >> 62)
  {
    if ((v19 & 0x8000000000000000) != 0)
      v11 = v19;
    else
      v11 = v19 & 0xFFFFFFFFFFFFFF8;
    v12 = v6;
    swift_bridgeObjectRetain(v19);
    v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_5;
LABEL_10:
    v10 = &_swiftEmptySetSingleton;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v6;
  if (!v7)
    goto LABEL_10;
LABEL_5:
  sub_1004B891C(v19);
  v10 = v9;
LABEL_11:
  swift_bridgeObjectRelease();
  v14 = (char *)a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 40);
  v15 = *(_QWORD *)v14;
  v18 = v10;
  v19 = v15;
  v20 = *(_OWORD *)(v14 + 8);
  v16 = sub_1004B804C(&qword_101411ED0);
  return Binding.wrappedValue.setter(&v18, v16);
}

uint64_t sub_100D7E2BC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t KeyPath;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  char v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  uint64_t v92;
  int *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  void *v115;

  v106 = a2;
  v107 = sub_1004B804C(&qword_101411F38);
  __chkstk_darwin(v107);
  v101 = (uint64_t)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101411F40);
  __chkstk_darwin(v4);
  v100 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v99 = (uint64_t)&v98 - v7;
  __chkstk_darwin(v8);
  v108 = (uint64_t)&v98 - v9;
  __chkstk_darwin(v10);
  v110 = (uint64_t)&v98 - v11;
  v103 = sub_1004B804C(&qword_101411F48);
  __chkstk_darwin(v103);
  v105 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1004B804C(&qword_101411F28);
  __chkstk_darwin(v104);
  v98 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_101411BC0);
  v109 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v102 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v98 - v21;
  __chkstk_darwin(v23);
  v111 = (char *)&v98 - v24;
  *(_QWORD *)&v26 = __chkstk_darwin(v25).n128_u64[0];
  v112 = (char *)&v98 - v27;
  v28 = a1;
  v29 = a1[4];
  KeyPath = swift_getKeyPath(byte_100F37550, v26);
  v31 = swift_getKeyPath(byte_100F37578);
  v32 = v29;
  static Published.subscript.getter(&v113, v32, KeyPath, v31);

  swift_release(KeyPath);
  swift_release(v31);
  if (v113 == 1)
  {
    sub_1004B8460((uint64_t)v28, (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    v33 = *(unsigned __int8 *)(v15 + 80);
    v34 = (v33 + 16) & ~v33;
    v35 = v34 + v16;
    v36 = v33 | 7;
    v37 = swift_allocObject(&unk_1012A5058, v34 + v16, v33 | 7);
    sub_1004B84E0((uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v34, type metadata accessor for CRLSceneRowItemUI_i);
    v38 = sub_1004B804C(&qword_101411BD0);
    v39 = sub_1004CBA30(&qword_101411BD8, &qword_101411BD0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    Button.init(action:label:)(sub_100D85D80, v37, sub_100D87FDC, 0, v38, v39);
    sub_1004B8460((uint64_t)v28, (uint64_t)v17, type metadata accessor for CRLSceneRowItemUI_i);
    v40 = swift_allocObject(&unk_1012A5080, v35, v36);
    sub_1004B84E0((uint64_t)v17, v40 + v34, type metadata accessor for CRLSceneRowItemUI_i);
    v41 = v111;
    Button.init(action:label:)(sub_100D85D68, v40, sub_100D7ECC0, 0, v38, v39);
    v42 = v109;
    v43 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
    v44 = v112;
    v43(v22, v112, v18);
    v45 = v102;
    v43(v102, v41, v18);
    v46 = (uint64_t)v98;
    v43(v98, v22, v18);
    v47 = sub_1004B804C(&qword_101411F58);
    v43((char *)(v46 + *(int *)(v47 + 48)), v45, v18);
    v48 = *(void (**)(char *, uint64_t))(v42 + 8);
    v48(v45, v18);
    v48(v22, v18);
    v49 = v105;
    sub_1004CB7BC(v46, v105, &qword_101411F28);
    swift_storeEnumTagMultiPayload(v49, v103, 0);
    v50 = sub_1004CBA30(&qword_101411F20, &qword_101411F28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v51 = sub_1004CBA30(&qword_101411F30, &qword_101411F38, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v49, v104, v107, v50, v51);
    sub_1004CB800(v46, &qword_101411F28);
    v48(v41, v18);
    return ((uint64_t (*)(char *, uint64_t))v48)(v44, v18);
  }
  else
  {
    v53 = v15;
    v98 = v22;
    v54 = v108;
    v55 = (char *)v28 + *(int *)(v14 + 44);
    v56 = *(_OWORD *)v55;
    v57 = *((_QWORD *)v55 + 2);
    v113 = v56;
    v114 = v57;
    sub_1004B804C(&qword_101411EE0);
    Binding.wrappedValue.getter(&v115);
    v58 = v115;
    if (!v115)
      goto LABEL_6;
    v59 = *v28;
    type metadata accessor for CRLSceneInfo(0);
    v60 = v59;
    v61 = v58;
    v62 = static NSObject.== infix(_:_:)(v61, v60);

    if ((v62 & 1) != 0)
    {
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
      v63(v110, 1, 1, v18);
    }
    else
    {
LABEL_6:
      sub_1004B8460((uint64_t)v28, (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
      v64 = *(unsigned __int8 *)(v53 + 80);
      v65 = (v64 + 16) & ~v64;
      v66 = swift_allocObject(&unk_1012A4FB8, v65 + v16, v64 | 7);
      sub_1004B84E0((uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v66 + v65, type metadata accessor for CRLSceneRowItemUI_i);
      v67 = sub_1004B804C(&qword_101411BD0);
      v68 = sub_1004CBA30(&qword_101411BD8, &qword_101411BD0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v69 = v110;
      Button.init(action:label:)(sub_100D85CD0, v66, sub_100D7EE84, 0, v67, v68);
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
      v63(v69, 0, 1, v18);
    }
    if ((sub_100D77DE0() & 1) != 0)
    {
      v70 = 1;
    }
    else
    {
      sub_1004B8460((uint64_t)v28, (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
      v71 = *(unsigned __int8 *)(v53 + 80);
      v72 = (v71 + 16) & ~v71;
      v73 = swift_allocObject(&unk_1012A4FE0, v72 + v16, v71 | 7);
      sub_1004B84E0((uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v73 + v72, type metadata accessor for CRLSceneRowItemUI_i);
      v74 = sub_1004B804C(&qword_101411BD0);
      v75 = sub_1004CBA30(&qword_101411BD8, &qword_101411BD0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      Button.init(action:label:)(sub_100D85CE8, v73, sub_100D7EF8C, 0, v74, v75);
      v70 = 0;
    }
    v63(v54, v70, 1, v18);
    sub_1004B8460((uint64_t)v28, (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    v76 = *(unsigned __int8 *)(v53 + 80);
    v77 = (v76 + 16) & ~v76;
    v78 = v77 + v16;
    v79 = v76 | 7;
    v80 = swift_allocObject(&unk_1012A5008, v78, v76 | 7);
    sub_1004B84E0((uint64_t)v17, v80 + v77, type metadata accessor for CRLSceneRowItemUI_i);
    v81 = sub_1004B804C(&qword_101411BD0);
    v82 = sub_1004CBA30(&qword_101411BD8, &qword_101411BD0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v83 = v112;
    Button.init(action:label:)(sub_100D85D00, v80, sub_100D7F09C, 0, v81, v82);
    sub_1004B8460((uint64_t)v28, (uint64_t)v17, type metadata accessor for CRLSceneRowItemUI_i);
    v84 = swift_allocObject(&unk_1012A5030, v78, v79);
    sub_1004B84E0((uint64_t)v17, v84 + v77, type metadata accessor for CRLSceneRowItemUI_i);
    v85 = v111;
    Button.init(action:label:)(sub_100D85D68, v84, sub_100D87FE0, 0, v81, v82);
    v86 = v99;
    sub_1004CB7BC(v110, v99, &qword_101411F40);
    v87 = v100;
    sub_1004CB7BC(v108, v100, &qword_101411F40);
    v88 = v109;
    v89 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
    v90 = v98;
    v89(v98, v83, v18);
    v91 = v102;
    v89(v102, v85, v18);
    v92 = v101;
    sub_1004CB7BC(v86, v101, &qword_101411F40);
    v93 = (int *)sub_1004B804C(&qword_101411F50);
    sub_1004CB7BC(v87, v92 + v93[12], &qword_101411F40);
    v89((char *)(v92 + v93[16]), v90, v18);
    v89((char *)(v92 + v93[20]), v91, v18);
    v94 = *(void (**)(char *, uint64_t))(v88 + 8);
    v94(v91, v18);
    v94(v90, v18);
    sub_1004CB800(v87, &qword_101411F40);
    sub_1004CB800(v86, &qword_101411F40);
    v95 = v105;
    sub_1004CB7BC(v92, v105, &qword_101411F38);
    swift_storeEnumTagMultiPayload(v95, v103, 1);
    v96 = sub_1004CBA30(&qword_101411F20, &qword_101411F28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v97 = sub_1004CBA30(&qword_101411F30, &qword_101411F38, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v95, v104, v107, v96, v97);
    sub_1004CB800(v92, &qword_101411F38);
    v94(v111, v18);
    v94(v112, v18);
    sub_1004CB800(v108, &qword_101411F40);
    return sub_1004CB800(v110, &qword_101411F40);
  }
}

double sub_100D7ECC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  double result;
  _QWORD v13[2];

  v2 = Image.init(systemName:)(0xD00000000000001DLL, 0x8000000100FB1850);
  if (qword_1013DD348 != -1)
    swift_once(&qword_1013DD348, sub_10087E744);
  v3 = *(_QWORD *)algn_10147FA78;
  v13[0] = qword_10147FA70;
  v13[1] = *(_QWORD *)algn_10147FA78;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  v5 = Text.init<A>(_:)(v13, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v5;
  v11 = v10 & 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v10 & 1;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v2);
  sub_1006CCFD0(v5, v7, v11);
  swift_bridgeObjectRetain(v9);
  sub_1005EFC24(v5, v7, v11);
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D7EDD0(void **a1)
{
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v14;
  __int128 v15;
  uint64_t v16;

  v2 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v3 = (char *)a1 + *(int *)(v2 + 60);
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  LOBYTE(v15) = v4;
  *((_QWORD *)&v15 + 1) = v5;
  LOBYTE(v14) = 1;
  v6 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(&v14, v6);
  v7 = *a1;
  v8 = (char *)a1 + *(int *)(v2 + 44);
  v9 = *(_OWORD *)v8;
  v10 = *((_QWORD *)v8 + 2);
  v15 = v9;
  v16 = v10;
  v14 = v7;
  v11 = v7;
  v12 = sub_1004B804C(&qword_101411EE0);
  return Binding.wrappedValue.setter(&v14, v12);
}

double sub_100D7EE84@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  double result;
  _QWORD v13[2];

  v2 = Image.init(systemName:)(0x6C69636E6570, 0xE600000000000000);
  if (qword_1013DD318 != -1)
    swift_once(&qword_1013DD318, sub_10087E1C4);
  v3 = *(_QWORD *)algn_10147FA18;
  v13[0] = qword_10147FA10;
  v13[1] = *(_QWORD *)algn_10147FA18;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  v5 = Text.init<A>(_:)(v13, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v5;
  v11 = v10 & 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v10 & 1;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v2);
  sub_1006CCFD0(v5, v7, v11);
  swift_bridgeObjectRetain(v9);
  sub_1005EFC24(v5, v7, v11);
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D7EF8C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  double result;
  _QWORD v13[2];

  v2 = Image.init(systemName:)(0xD000000000000010, 0x800000010100FD20);
  if (qword_1013DD320 != -1)
    swift_once(&qword_1013DD320, sub_10087E2A4);
  v3 = *(_QWORD *)algn_10147FA28;
  v13[0] = qword_10147FA20;
  v13[1] = *(_QWORD *)algn_10147FA28;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  v5 = Text.init<A>(_:)(v13, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v5;
  v11 = v10 & 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v10 & 1;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v2);
  sub_1006CCFD0(v5, v7, v11);
  swift_bridgeObjectRetain(v9);
  sub_1005EFC24(v5, v7, v11);
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D7F09C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  double result;
  _QWORD v13[2];

  v2 = Image.init(systemName:)(0x7265746E697270, 0xE700000000000000);
  if (qword_1013DD338 != -1)
    swift_once(&qword_1013DD338, sub_10087E54C);
  v3 = *(_QWORD *)algn_10147FA58;
  v13[0] = qword_10147FA50;
  v13[1] = *(_QWORD *)algn_10147FA58;
  v4 = sub_1004D292C();
  swift_bridgeObjectRetain(v3);
  v5 = Text.init<A>(_:)(v13, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v5;
  v11 = v10 & 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v10 & 1;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v2);
  sub_1006CCFD0(v5, v7, v11);
  swift_bridgeObjectRetain(v9);
  sub_1005EFC24(v5, v7, v11);
  swift_release(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100D7F1A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t Strong;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  __n128 v51;
  char v52;
  __n128 v53;
  uint64_t v54;
  char v55;
  char *v56;
  void (*v57)(char *, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  void (*v74)(char *, uint64_t, __n128);
  __n128 v75;
  char v76;
  __n128 v77;
  char v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  uint64_t KeyPath;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t, uint64_t);
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  void (*v187)(char *, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  unsigned __int8 v202;
  void (*v203)(char *, uint64_t);
  char *v204;
  __int128 v205;
  char *v206;
  unsigned __int8 v207;
  uint64_t v208;
  char *v209;
  id v210[5];

  v196 = a2;
  v198 = 0x4052C00000000000;
  v180 = sub_1004B804C(&qword_101412170);
  __chkstk_darwin(v180);
  v185 = (uint64_t)&v157 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_1004B804C(&qword_101412178);
  v4 = __chkstk_darwin(v174);
  v183 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for SeparatorShapeStyle(0, v4);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v179 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for Image.ResizingMode(0);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v171 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1004B804C(&qword_101412180);
  __chkstk_darwin(v177);
  v176 = (char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101412188);
  __chkstk_darwin(v9);
  v178 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_1004B804C(&qword_101412190);
  __chkstk_darwin(v195);
  v175 = (uint64_t)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v184 = (uint64_t)&v157 - v13;
  v193 = sub_1004B804C(&qword_101412198);
  __chkstk_darwin(v193);
  v194 = (uint64_t)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = (_QWORD *)type metadata accessor for ControlSize(0);
  v168 = *(v170 - 1);
  __chkstk_darwin(v170);
  v167 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_1004B804C(&qword_1014121A0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v162 = (char *)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1004B804C(&qword_1014121A8);
  __chkstk_darwin(v164);
  v163 = (char *)&v157 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_1004B804C(&qword_1014121B0);
  __chkstk_darwin(v190);
  v161 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v169 = (uint64_t)&v157 - v20;
  v21 = sub_1004B804C(&qword_1014121B8);
  __chkstk_darwin(v21);
  v192 = (uint64_t)&v157 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v191 = (char *)&v157 - v24;
  v25 = type metadata accessor for DynamicTypeSize(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v157 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v157 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v157 - v33;
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v157 - v37;
  v189 = static Color.clear.getter(v36);
  v188 = a1 + 8;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 8);
  v40 = &unk_100EF5000;
  v197 = a1;
  if (!Strong)
    goto LABEL_6;
  v159 = Strong;
  v160 = v28;
  v186 = v31;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100BF0BDC((uint64_t)v38);
  v41 = sub_1004B804C(&qword_1013E2AC8);
  v42 = *(_QWORD *)(v26 + 72);
  v43 = *(unsigned __int8 *)(v26 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = swift_allocObject(v41, v44 + 3 * v42, v43 | 7);
  *(_OWORD *)(v45 + 16) = xmmword_100EF5550;
  v46 = v45 + v44;
  v47 = *(void (**)(void))(v26 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v46, enum case for DynamicTypeSize.accessibility3(_:), v25);
  v48 = v46 + v42;
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v46 + v42, enum case for DynamicTypeSize.accessibility4(_:), v25);
  v157 = v46 + 2 * v42;
  v47();
  v158 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v158(v34, v46, v25);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  LOBYTE(v42) = dispatch thunk of static Equatable.== infix(_:_:)(v34, v38);
  v49 = v38;
  v50 = *(void (**)(char *, uint64_t))(v26 + 8);
  v51 = swift_bridgeObjectRetain(v45);
  v187 = v50;
  ((void (*)(char *, uint64_t, __n128))v50)(v34, v25, v51);
  if ((v42 & 1) == 0)
  {
    v158(v34, v48, v25);
    v52 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v49);
    v187(v34, v25);
    if ((v52 & 1) == 0)
    {
      v158(v34, v157, v25);
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v49);
      v56 = v34;
      v57 = (void (*)(char *, uint64_t, __n128))v187;
      v187(v56, v25);
      swift_bridgeObjectRelease();
      swift_setDeallocating(v45);
      swift_arrayDestroy(v46, *(_QWORD *)(v45 + 16), v25);
      swift_deallocClassInstance(v45, 32, 7);
      v58 = swift_unknownObjectRelease(v159);
      v57(v49, v25, v58);
      v54 = 0x4052C00000000000;
      a1 = v197;
      v31 = v186;
      v28 = v160;
      v40 = &unk_100EF5000;
      if ((v55 & 1) != 0)
        goto LABEL_7;
LABEL_6:
      v54 = 0x4049000000000000;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating(v45);
  swift_arrayDestroy(v46, *(_QWORD *)(v45 + 16), v25);
  swift_deallocClassInstance(v45, 32, 7);
  v53 = swift_unknownObjectRelease(v159);
  ((void (*)(char *, uint64_t, __n128))v187)(v49, v25, v53);
  v54 = 0x4052C00000000000;
  a1 = v197;
  v31 = v186;
  v28 = v160;
  v40 = (_OWORD *)&unk_100EF5000;
LABEL_7:
  v59 = swift_unknownObjectWeakLoadStrong(v188);
  if (!v59)
    goto LABEL_12;
  v187 = (void (*)(char *, uint64_t))v59;
  v188 = v54;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100BF0BDC((uint64_t)v31);
  v60 = sub_1004B804C(&qword_1013E2AC8);
  v61 = *(_QWORD *)(v26 + 72);
  v62 = *(unsigned __int8 *)(v26 + 80);
  v63 = (v62 + 32) & ~v62;
  v64 = 2 * v61;
  v65 = swift_allocObject(v60, v63 + 3 * v61, v62 | 7);
  *(_OWORD *)(v65 + 16) = v40[85];
  v66 = v65 + v63;
  v67 = *(void (**)(void))(v26 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v67)(v66, enum case for DynamicTypeSize.accessibility3(_:), v25);
  v68 = v66 + v61;
  ((void (*)(uint64_t, _QWORD, uint64_t))v67)(v66 + v61, enum case for DynamicTypeSize.accessibility4(_:), v25);
  v69 = v31;
  v70 = v28;
  v186 = (char *)(v66 + v64);
  v67();
  v71 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v71(v28, v66, v25);
  sub_1004B7878((unint64_t *)&qword_1013E2AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v72 = v28;
  v73 = v69;
  LOBYTE(v69) = dispatch thunk of static Equatable.== infix(_:_:)(v72, v69);
  v74 = *(void (**)(char *, uint64_t, __n128))(v26 + 8);
  v75 = swift_bridgeObjectRetain(v65);
  v74(v70, v25, v75);
  if ((v69 & 1) != 0
    || (v71(v70, v68, v25),
        v76 = dispatch thunk of static Equatable.== infix(_:_:)(v70, v73),
        ((void (*)(char *, uint64_t))v74)(v70, v25),
        (v76 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating(v65);
    swift_arrayDestroy(v66, *(_QWORD *)(v65 + 16), v25);
    swift_deallocClassInstance(v65, 32, 7);
    v77 = swift_unknownObjectRelease(v187);
    v59 = ((uint64_t (*)(char *, uint64_t, __n128))v74)(v73, v25, v77);
    a1 = v197;
    v54 = v188;
    goto LABEL_13;
  }
  v71(v70, (uint64_t)v186, v25);
  v78 = dispatch thunk of static Equatable.== infix(_:_:)(v70, v73);
  ((void (*)(char *, uint64_t))v74)(v70, v25);
  swift_bridgeObjectRelease();
  swift_setDeallocating(v65);
  swift_arrayDestroy(v66, *(_QWORD *)(v65 + 16), v25);
  swift_deallocClassInstance(v65, 32, 7);
  v79 = swift_unknownObjectRelease(v187);
  v59 = ((uint64_t (*)(char *, uint64_t, __n128))v74)(v73, v25, v79);
  a1 = v197;
  v54 = v188;
  if ((v78 & 1) == 0)
LABEL_12:
    v198 = 0x4049000000000000;
LABEL_13:
  v80 = static Alignment.center.getter(v59);
  _FrameLayout.init(width:height:alignment:)(&v199, v54, 0, v198, 0, v80, v81);
  v82 = v199;
  v83 = v200;
  v198 = v201;
  LODWORD(v188) = v202;
  v187 = v203;
  v186 = v204;
  v205 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  v84 = sub_1004B804C(&qword_101411EE8);
  v85 = State.wrappedValue.getter(v84);
  if (v210[0])
  {
    v86 = v210[0];
    v170 = v86;
    v87 = Image.init(uiImage:)(objc_msgSend(v86, "UIImage"));

    v88 = v172;
    v89 = v171;
    v90 = v173;
    (*(void (**)(char *, _QWORD, uint64_t))(v172 + 104))(v171, enum case for Image.ResizingMode.stretch(_:), v173);
    v91 = Image.resizable(capInsets:resizingMode:)(v89, v87, 0.0, 0.0, 0.0, 0.0);
    v92 = swift_release(v87);
    (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v89, v90, v92);
    v93 = sub_100D78098();
    sub_100D78098();
    v95 = v94;
    v97 = static Alignment.center.getter(v96);
    v99 = _FrameLayout.init(width:height:alignment:)(&v205, *(_QWORD *)&v93, 0, v95, 0, v97, v98);
    v173 = v205;
    LODWORD(v172) = BYTE8(v205);
    v171 = v206;
    LODWORD(v169) = v207;
    v168 = v208;
    v167 = v209;
    v197 = v82;
    v100 = v179;
    SeparatorShapeStyle.init()(v99);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v210, 0, 0, _swiftEmptyArrayStorage, 0.5, 10.0, 0.0);
    v102 = v210[1];
    v101 = v210[2];
    v103 = v210[3];
    v104 = v210[4];
    v105 = v210[0];
    v106 = v174;
    v107 = (uint64_t)v183;
    v108 = v181;
    v109 = v182;
    v110 = (*(uint64_t (**)(char *, char *, uint64_t))(v181 + 16))(&v183[*(int *)(v174 + 52)], v100, v182);
    *(double *)v107 = *(double *)&v105 * 0.5;
    *(double *)(v107 + 8) = *(double *)&v105;
    *(_QWORD *)(v107 + 16) = v102;
    *(_QWORD *)(v107 + 24) = v101;
    *(_QWORD *)(v107 + 32) = v103;
    *(_QWORD *)(v107 + 40) = v104;
    *(_WORD *)(v107 + *(int *)(v106 + 56)) = 256;
    v111 = static Alignment.center.getter(v110);
    v113 = v112;
    v114 = v185;
    sub_1004CB7BC(v107, v185, &qword_101412178);
    v115 = (uint64_t *)(v114 + *(int *)(v180 + 36));
    *v115 = v111;
    v115[1] = v113;
    v116 = v177;
    v117 = (uint64_t)v176;
    sub_1004CB7BC(v114, (uint64_t)&v176[*(int *)(v177 + 36)], &qword_101412170);
    *(_QWORD *)v117 = v91;
    *(_QWORD *)(v117 + 8) = 0;
    *(_WORD *)(v117 + 16) = 1;
    *(_QWORD *)(v117 + 24) = v173;
    *(_BYTE *)(v117 + 32) = v172;
    *(_QWORD *)(v117 + 40) = v171;
    *(_BYTE *)(v117 + 48) = v169;
    v118 = v167;
    *(_QWORD *)(v117 + 56) = v168;
    *(_QWORD *)(v117 + 64) = v118;
    swift_retain(v91);
    sub_1004CB800(v114, &qword_101412170);
    sub_1004CB800(v107, &qword_101412178);
    v119 = v100;
    v82 = v197;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v119, v109);
    swift_release(v91);
    v120 = sub_100D86984();
    v121 = (uint64_t)v178;
    View.accessibilityHidden(_:)(1, v116, v120);
    v122 = sub_1004CB800(v117, &qword_101412180);
    v123 = static Color.white.getter(v122);
    LOBYTE(v117) = static Edge.Set.all.getter(v123);
    v124 = v175;
    sub_1004CB7BC(v121, v175, &qword_101412188);
    v125 = v195;
    v126 = v124 + *(int *)(v195 + 36);
    *(_QWORD *)v126 = v123;
    *(_BYTE *)(v126 + 8) = v117;
    sub_1004CB800(v121, &qword_101412188);
    v127 = &qword_101412190;
    v128 = v124;
    v129 = v184;
    sub_1004C4938(v128, v184, &qword_101412190);
    v130 = v194;
    sub_1004CB7BC(v129, v194, &qword_101412190);
    swift_storeEnumTagMultiPayload(v130, v193, 0);
    v131 = sub_100D8687C();
    v132 = sub_100D86AF4();
    v133 = (uint64_t)v191;
    _ConditionalContent<>.init(storage:)(v130, v125, v190, v131, v132);

    v134 = v129;
  }
  else
  {
    v135 = v162;
    ProgressView<>.init<>()(v85);
    v136 = v168;
    v137 = v167;
    v138 = v170;
    (*(void (**)(char *, _QWORD, _QWORD *))(v168 + 104))(v167, enum case for ControlSize.regular(_:), v170);
    KeyPath = swift_getKeyPath("hAT");
    v140 = v164;
    v141 = (uint64_t)v163;
    v142 = (uint64_t *)&v163[*(int *)(v164 + 36)];
    v143 = sub_1004B804C(&qword_1013F67E0);
    (*(void (**)(char *, char *, _QWORD *))(v136 + 16))((char *)v142 + *(int *)(v143 + 28), v137, v138);
    *v142 = KeyPath;
    v144 = v165;
    v145 = v166;
    (*(void (**)(uint64_t, char *, uint64_t))(v165 + 16))(v141, v135, v166);
    (*(void (**)(char *, _QWORD *))(v136 + 8))(v137, v138);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v135, v145);
    v146 = sub_100D867E0();
    v147 = (uint64_t)v161;
    View.accessibilityHidden(_:)(1, v140, v146);
    sub_1004CB800(v141, &qword_1014121A8);
    v127 = &qword_1014121B0;
    v148 = v169;
    sub_1004C4938(v147, v169, &qword_1014121B0);
    v149 = v194;
    sub_1004CB7BC(v148, v194, &qword_1014121B0);
    swift_storeEnumTagMultiPayload(v149, v193, 1);
    v150 = sub_100D8687C();
    v151 = sub_100D86AF4();
    v133 = (uint64_t)v191;
    _ConditionalContent<>.init(storage:)(v149, v195, v190, v150, v151);
    v134 = v148;
  }
  sub_1004CB800(v134, v127);
  v152 = v192;
  sub_1004CB7BC(v133, v192, &qword_1014121B8);
  v153 = v196;
  v154 = v189;
  *v196 = v189;
  *((_WORD *)v153 + 4) = 256;
  v153[2] = v82;
  *((_BYTE *)v153 + 24) = v83;
  v153[4] = v198;
  *((_BYTE *)v153 + 40) = v188;
  v155 = v186;
  v153[6] = (uint64_t)v187;
  v153[7] = (uint64_t)v155;
  v156 = sub_1004B804C(&qword_101412218);
  sub_1004CB7BC(v152, (uint64_t)v153 + *(int *)(v156 + 48), &qword_1014121B8);
  swift_retain(v154);
  sub_1004CB800(v133, &qword_1014121B8);
  sub_1004CB800(v152, &qword_1014121B8);
  swift_release(v154);
}

uint64_t sub_100D8030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_100D80378, v7, v8);
}

uint64_t sub_100D80378()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = **(_QWORD **)(v0 + 40);
  v2 = (_QWORD *)swift_task_alloc(dword_10140BA5C);
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_100D803D0;
  return sub_100C411FC(v1, 0);
}

uint64_t sub_100D803D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100D80428, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_100D80428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  *(_QWORD *)(v0 + 32) = v1;
  v3 = sub_1004B804C(&qword_101411EE8);
  State.wrappedValue.setter(v0 + 32, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100D804A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 8);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(a1 + 16);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
    sub_1004B8460(a1, (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v15);
    v19 = static MainActor.shared.getter(v18);
    v20 = *(unsigned __int8 *)(v7 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(a2, v22 + 16, v20 | 7);
    *(_QWORD *)(v23 + 16) = v19;
    *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
    sub_1004B84E0((uint64_t)v9, v23 + v21, type metadata accessor for CRLSceneRowItemUI_i);
    v24 = (uint64_t *)(v23 + v22);
    *v24 = v15;
    v24[1] = v16;
    v25 = sub_100521B98((uint64_t)v12, a3, v23);
    swift_release(v25);
    *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D8062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_100D80698, v7, v8);
}

uint64_t sub_100D80698()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = **(_QWORD **)(v0 + 40);
  v2 = (_QWORD *)swift_task_alloc(dword_10140BA5C);
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_100D806F0;
  return sub_100C411FC(v1, 1);
}

uint64_t sub_100D806F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100D87FC0, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_100D80748(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[7] = v3;
  v1[8] = v4;
  return swift_task_switch(sub_100D807B4, v3, v4);
}

uint64_t sub_100D807B4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  __n128 v5;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 40) + 8);
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v2 = **(_QWORD **)(v0 + 40);
    v3 = (_QWORD *)swift_task_alloc(dword_10140BA5C);
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_100D8083C;
    return sub_100C411FC(v2, 0);
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_100D8083C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100D80894, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100D80894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v3 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  *(_QWORD *)(v0 + 32) = v1;
  v4 = sub_1004B804C(&qword_101411EE8);
  State.wrappedValue.setter(v0 + 32, v4);
  v5 = swift_unknownObjectRelease(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_100D80914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t KeyPath;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(void);
  uint64_t v99;
  char *v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  void (*v108)(char *, uint64_t);
  void (*v109)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;

  v122 = a2;
  v3 = sub_1004B804C(&qword_101411F70);
  __chkstk_darwin(v3);
  v118 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101411F78);
  __chkstk_darwin(v5);
  v128 = (uint64_t)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v127 = (uint64_t)&v111 - v8;
  v10 = __chkstk_darwin(v9);
  v120 = (uint64_t)&v111 - v11;
  v126 = type metadata accessor for Divider(0, v10);
  v136 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v135 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v117 = (char *)&v111 - v14;
  __chkstk_darwin(v15);
  v119 = (char *)&v111 - v16;
  __chkstk_darwin(v17);
  v125 = (char *)&v111 - v18;
  __chkstk_darwin(v19);
  v123 = (char *)&v111 - v20;
  v21 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  __chkstk_darwin(v21);
  v24 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1004B804C(&qword_101411F80);
  v134 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v121 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v132 = (char *)&v111 - v27;
  __chkstk_darwin(v28);
  v131 = (char *)&v111 - v29;
  __chkstk_darwin(v30);
  v133 = (char *)&v111 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v111 - v33;
  v35 = sub_1004B804C(&qword_101412050);
  __chkstk_darwin(v35);
  v130 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v38 = __chkstk_darwin(v37).n128_u64[0];
  v40 = (char *)&v111 - v39;
  v41 = *(void **)(a1 + 32);
  KeyPath = swift_getKeyPath(byte_100F37550, v38);
  v43 = swift_getKeyPath(byte_100F37578);
  v44 = v41;
  static Published.subscript.getter((uint64_t *)((char *)&v137 + 1), v44, KeyPath, v43);

  swift_release(KeyPath);
  swift_release(v43);
  v129 = v40;
  if ((v137 & 0x100) != 0)
  {
    v45 = sub_1004B804C(&qword_101412060);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v40, 1, 1, v45);
  }
  else
  {
    sub_1004B8460(a1, (uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    v46 = *(unsigned __int8 *)(v22 + 80);
    v47 = (v46 + 16) & ~v46;
    v111 = v46 | 7;
    v48 = swift_allocObject(&unk_1012A5300, v47 + v23, v46 | 7);
    sub_1004B84E0((uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v48 + v47, type metadata accessor for CRLSceneRowItemUI_i);
    v49 = sub_1004B804C(&qword_101411F88);
    v50 = sub_1004CBA30(&qword_101411F90, &qword_101411F88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v116 = v34;
    v51 = Button.init(action:label:)(sub_100D85CD0, v48, sub_100D813A4, 0, v49, v50);
    Divider.init()(v51);
    v52 = sub_100D77DE0();
    v115 = a1;
    v114 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    v113 = v23;
    v112 = v22;
    if ((v52 & 1) != 0)
    {
      v53 = 1;
      v54 = v120;
    }
    else
    {
      sub_1004B8460(a1, (uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
      v55 = swift_allocObject(&unk_1012A5328, v47 + v23, v111);
      sub_1004B84E0((uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v47, type metadata accessor for CRLSceneRowItemUI_i);
      v54 = v120;
      Button.init(action:label:)(sub_100D85CE8, v55, sub_100D814E4, 0, v49, v50);
      v53 = 0;
    }
    v56 = v134;
    v57 = v124;
    v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v54, v53, 1, v124);
    v59 = v125;
    Divider.init()(v58);
    v60 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
    v61 = v133;
    v60(v133, v116, v57);
    v62 = v54;
    v63 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
    v64 = v126;
    v63(v119, v123, v126);
    v65 = v62;
    v66 = v127;
    sub_1004CB7BC(v65, v127, &qword_101411F78);
    v67 = v117;
    v63(v117, v59, v64);
    v68 = (uint64_t)v130;
    v60(v130, v61, v57);
    v69 = (int *)sub_1004B804C(&qword_101412058);
    v70 = v119;
    v63((char *)(v68 + v69[12]), v119, v64);
    sub_1004CB7BC(v66, v68 + v69[16], &qword_101411F78);
    v63((char *)(v68 + v69[20]), v67, v64);
    v71 = *(void (**)(char *, uint64_t))(v136 + 8);
    v71(v59, v64);
    sub_1004CB800(v120, &qword_101411F78);
    v71(v123, v64);
    v72 = *(void (**)(char *, uint64_t))(v134 + 8);
    v72(v116, v57);
    v71(v67, v64);
    sub_1004CB800(v66, &qword_101411F78);
    v71(v70, v64);
    v72(v133, v57);
    v73 = sub_1004B804C(&qword_101412060);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v68, 0, 1, v73);
    sub_1004C4938(v68, (uint64_t)v129, &qword_101412050);
    a1 = v115;
    v24 = v114;
    v23 = v113;
    v22 = v112;
  }
  sub_1004B8460(a1, (uint64_t)v24, type metadata accessor for CRLSceneRowItemUI_i);
  v74 = *(unsigned __int8 *)(v22 + 80);
  v75 = (v74 + 16) & ~v74;
  v76 = v75 + v23;
  v77 = v74 | 7;
  v78 = swift_allocObject(&unk_1012A5350, v75 + v23, v74 | 7);
  sub_1004B84E0((uint64_t)v24, v78 + v75, type metadata accessor for CRLSceneRowItemUI_i);
  v79 = sub_1004B804C(&qword_101411F88);
  v80 = sub_1004CBA30(&qword_101411F90, &qword_101411F88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Button.init(action:label:)(sub_100D86058, v78, sub_100D81774, 0, v79, v80);
  sub_1004B8460(a1, (uint64_t)v24, type metadata accessor for CRLSceneRowItemUI_i);
  v81 = swift_allocObject(&unk_1012A5378, v76, v77);
  sub_1004B84E0((uint64_t)v24, v81 + v75, type metadata accessor for CRLSceneRowItemUI_i);
  v82 = Button.init(action:label:)(sub_100D85D68, v81, sub_100D8191C, 0, v79, v80);
  Divider.init()(v82);
  v83 = (uint64_t)v24;
  v84 = a1;
  v85 = *(void **)(a1 + 32);
  v86 = swift_getKeyPath(byte_100F37550);
  v87 = swift_getKeyPath(byte_100F37578);
  v88 = v85;
  static Published.subscript.getter(&v137, v88, v86, v87);

  swift_release(v86);
  v89 = swift_release(v87);
  if ((v137 & 1) != 0)
  {
    v90 = 1;
    v91 = v128;
  }
  else
  {
    v92 = v118;
    static ButtonRole.destructive.getter(v89);
    v93 = type metadata accessor for ButtonRole(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 0, 1, v93);
    sub_1004B8460(v84, v83, type metadata accessor for CRLSceneRowItemUI_i);
    v94 = swift_allocObject(&unk_1012A53A0, v76, v77);
    sub_1004B84E0(v83, v94 + v75, type metadata accessor for CRLSceneRowItemUI_i);
    v91 = v128;
    Button.init(role:action:label:)(v92, sub_100D85DF8, v94, sub_100D81AB4, 0, v79, v80);
    v90 = 0;
  }
  v95 = v134;
  v96 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v134 + 56))(v91, v90, 1, v124, v89);
  v97 = (uint64_t)v130;
  sub_1004CB7BC((uint64_t)v129, (uint64_t)v130, &qword_101412050);
  v98 = *(void (**)(void))(v95 + 16);
  v99 = v91;
  v100 = v133;
  v98();
  v101 = v121;
  ((void (*)(char *, char *, uint64_t))v98)(v121, v132, v96);
  v102 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  v103 = v125;
  v104 = v126;
  v102(v125, v135, v126);
  v105 = v127;
  sub_1004CB7BC(v99, v127, &qword_101411F78);
  v106 = v122;
  sub_1004CB7BC(v97, v122, &qword_101412050);
  v107 = (int *)sub_1004B804C(&qword_101412068);
  ((void (*)(uint64_t, char *, uint64_t))v98)(v106 + v107[12], v100, v96);
  ((void (*)(uint64_t, char *, uint64_t))v98)(v106 + v107[16], v101, v96);
  v102((char *)(v106 + v107[20]), v103, v104);
  sub_1004CB7BC(v105, v106 + v107[24], &qword_101411F78);
  sub_1004CB800(v128, &qword_101411F78);
  v108 = *(void (**)(char *, uint64_t))(v136 + 8);
  v108(v135, v104);
  v109 = *(void (**)(char *, uint64_t))(v134 + 8);
  v109(v132, v96);
  v109(v131, v96);
  sub_1004CB800((uint64_t)v129, &qword_101412050);
  sub_1004CB800(v105, &qword_101411F78);
  v108(v103, v104);
  v109(v101, v96);
  v109(v133, v96);
  return sub_1004CB800((uint64_t)v130, &qword_101412050);
}

double sub_100D813A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  if (qword_1013DD318 != -1)
    swift_once(&qword_1013DD318, sub_10087E1C4);
  v2 = *(_QWORD *)algn_10147FA18;
  v13[0] = qword_10147FA10;
  v13[1] = *(_QWORD *)algn_10147FA18;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v13, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = Image.init(systemName:)(0x6C69636E6570, 0xE600000000000000);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v11;
  sub_1006CCFD0(v4, v6, v10);
  swift_bridgeObjectRetain(v8);
  sub_1005EFC24(v4, v6, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D814A0(void **a1)
{
  uint64_t Strong;
  double result;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v4 = Strong;
    sub_100C4456C(*a1);
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_100D814E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  if (qword_1013DD320 != -1)
    swift_once(&qword_1013DD320, sub_10087E2A4);
  v2 = *(_QWORD *)algn_10147FA28;
  v13[0] = qword_10147FA20;
  v13[1] = *(_QWORD *)algn_10147FA28;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v13, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = Image.init(systemName:)(0xD000000000000010, 0x800000010100FD20);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v11;
  sub_1006CCFD0(v4, v6, v10);
  swift_bridgeObjectRetain(v8);
  sub_1005EFC24(v4, v6, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D815E8(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EEF400;
    v14 = *a1;
    *(_QWORD *)(v13 + 32) = *a1;
    v24 = v13;
    specialized Array._endMutation()(v13);
    v15 = v24;
    v16 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    v17 = v14;
    objc_msgSend(v16, "endEditing");
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v11);
    swift_bridgeObjectRetain(v15);
    v20 = static MainActor.shared.getter(v19);
    v21 = swift_allocObject(a2, 56, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v21 + 32) = v11;
    *(_BYTE *)(v21 + 40) = 1;
    *(_QWORD *)(v21 + 48) = v15;
    v22 = sub_100521B98((uint64_t)v8, a3, v21);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v11);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

double sub_100D81774@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  if (qword_1013DD338 != -1)
    swift_once(&qword_1013DD338, sub_10087E54C);
  v2 = *(_QWORD *)algn_10147FA58;
  v13[0] = qword_10147FA50;
  v13[1] = *(_QWORD *)algn_10147FA58;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v13, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = Image.init(systemName:)(0x7265746E697270, 0xE700000000000000);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v11;
  sub_1006CCFD0(v4, v6, v10);
  swift_bridgeObjectRetain(v8);
  sub_1005EFC24(v4, v6, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D81874(void **a1)
{
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EEF400;
    v7 = *a1;
    *(_QWORD *)(v6 + 32) = *a1;
    v9 = v6;
    specialized Array._endMutation()(v6);
    v8 = v7;
    sub_100C4514C(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_100D8191C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  if (qword_1013DD348 != -1)
    swift_once(&qword_1013DD348, sub_10087E744);
  v2 = *(_QWORD *)algn_10147FA78;
  v13[0] = qword_10147FA70;
  v13[1] = *(_QWORD *)algn_10147FA78;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v13, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = Image.init(systemName:)(0xD00000000000001DLL, 0x8000000100FB1850);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v11;
  sub_1006CCFD0(v4, v6, v10);
  swift_bridgeObjectRetain(v8);
  sub_1005EFC24(v4, v6, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100D81A20(void **a1)
{
  uint64_t Strong;
  double result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  _BYTE v10[40];

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v4 = Strong;
    v5 = *a1;
    v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v6, v10);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    *(_QWORD *)(inited + 32) = v5;
    v9 = inited;
    specialized Array._endMutation()(inited);
    v8 = v5;
    sub_100C447B8(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

double sub_100D81AB4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];

  if (qword_1013DD328 != -1)
    swift_once(&qword_1013DD328, sub_10087E38C);
  v2 = *(_QWORD *)algn_10147FA38;
  v13[0] = qword_10147FA30;
  v13[1] = *(_QWORD *)algn_10147FA38;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v13, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = Image.init(systemName:)(0x6873617274, 0xE500000000000000);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v11;
  sub_1006CCFD0(v4, v6, v10);
  swift_bridgeObjectRetain(v8);
  sub_1005EFC24(v4, v6, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D81BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1004B804C(qword_1013ECDD8);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Image.init(systemName:)(0x73697370696C6C65, 0xEF656C637269632ELL);
  v6 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = static Font.system(size:weight:design:)(0, 1, v4, 17.0);
  sub_1004CB800((uint64_t)v4, qword_1013ECDD8);
  KeyPath = swift_getKeyPath(byte_100F377D8);
  result = static Color.accentColor.getter(KeyPath);
  *a1 = v5;
  a1[1] = KeyPath;
  a1[2] = v7;
  a1[3] = result;
  return result;
}

uint64_t sub_100D81CA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  double (*v24)(uint64_t);
  uint64_t v25;
  __n128 v26;
  void *v27;
  __n128 v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 aBlock;
  double (*v51)(uint64_t);
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  _QWORD v55[2];

  v46 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLSceneRowItemUI_i(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  v15 = (char *)a1 + *(int *)(v5 + 64);
  v16 = *v15;
  v17 = *((_QWORD *)v15 + 1);
  LOBYTE(v15) = v15[16];
  LOBYTE(aBlock) = v16;
  *((_QWORD *)&aBlock + 1) = v17;
  LOBYTE(v51) = (_BYTE)v15;
  LOBYTE(v55[0]) = 1;
  v18 = sub_1004B804C(&qword_1014120F8);
  FocusState.wrappedValue.setter(v55, v18);
  v19 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  v21 = *v19;
  v20 = v19[1];
  v22 = (char *)a1 + *(int *)(v5 + 52);
  v23 = *(_OWORD *)v22;
  v24 = (double (*)(uint64_t))*((_QWORD *)v22 + 2);
  aBlock = v23;
  v51 = v24;
  v55[0] = v21;
  v55[1] = v20;
  swift_bridgeObjectRetain(v20);
  v25 = sub_1004B804C(&qword_1013F0E10);
  State.wrappedValue.setter(v55, v25);
  sub_100503E34();
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  static DispatchTime.now()(v28);
  + infix(_:_:)(v11, 0.5);
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v11, v8);
  sub_1004B8460((uint64_t)a1, (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
  v30 = *(unsigned __int8 *)(v6 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_1012A5490, v31 + v7, v30 | 7);
  sub_1004B84E0((uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for CRLSceneRowItemUI_i);
  v53 = sub_100D86230;
  v54 = v32;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
  v51 = sub_1005D2FC0;
  v52 = &unk_1012A54A8;
  v33 = _Block_copy(&aBlock);
  v34 = swift_release(v54);
  v35 = v44;
  static DispatchQoS.unspecified.getter(v34);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v36 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v37 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v38 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = v45;
  v39 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v37, v38, v46, v36);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v35, v40, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
  return ((uint64_t (*)(char *, uint64_t))v29)(v14, v43);
}

uint64_t sub_100D8203C()
{
  uint64_t v0;
  char v2;

  type metadata accessor for CRLSceneRowItemUI_i(0);
  v2 = 1;
  v0 = sub_1004B804C(&qword_1013FB130);
  return AccessibilityFocusState.wrappedValue.setter(&v2, v0);
}

double sub_100D82090(char **a1)
{
  uint64_t Strong;
  double result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_100D7DD40();
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
  if (Strong)
  {
    v4 = Strong;
    v5 = *a1;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    v6 = sub_1004B804C(&qword_1013F0E10);
    State.wrappedValue.getter(v6);
    sub_100C44340(v5, v7, v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_100D82130(char **a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char v44[40];
  _BYTE v45[24];
  char *v46;

  v2 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v2);
  v4 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for EditMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1004B804C(&qword_101409320);
  __chkstk_darwin(v9);
  v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100BF0B80((uint64_t)v11);
  v12 = sub_1004B804C(&qword_101411B00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v11, &qword_101409320);
    sub_1004B8460((uint64_t)a1, (uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
    goto LABEL_4;
  }
  Binding.wrappedValue.getter(v8);
  v13 = sub_1004CB800((uint64_t)v11, &qword_101411B00);
  v14 = EditMode.isEditing.getter(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1004B8460((uint64_t)a1, (uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
  if ((v14 & 1) == 0)
  {
LABEL_4:
    v15 = &v4[v2[11]];
    v16 = *(_OWORD *)v15;
    v17 = *((_QWORD *)v15 + 2);
    *(_OWORD *)v45 = v16;
    *(_QWORD *)&v45[16] = v17;
    sub_1004B804C(&qword_101411EE0);
    Binding.wrappedValue.getter(&v46);
    if (v46)
    {

      goto LABEL_6;
    }
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 1);
    if (Strong)
    {
      v29 = Strong;
      sub_100C43BCC(*a1);
      swift_unknownObjectRelease(v29);
    }
    v30 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v30, v44);
    *(_OWORD *)(inited + 16) = xmmword_100EEF400;
    v32 = *a1;
    *(_QWORD *)(inited + 32) = *a1;
    *(_QWORD *)v45 = inited;
    specialized Array._endMutation()(inited);
    v33 = *(_QWORD *)v45;
    if (*(_QWORD *)v45 >> 62)
    {
      if (*(uint64_t *)v45 < 0)
        v38 = *(_QWORD *)v45;
      else
        v38 = *(_QWORD *)v45 & 0xFFFFFFFFFFFFFF8;
      v39 = v32;
      swift_bridgeObjectRetain(v33);
      v40 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease();
      if (v40)
        goto LABEL_11;
    }
    else
    {
      v34 = *(_QWORD *)((*(_QWORD *)v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      v35 = v32;
      if (v34)
      {
LABEL_11:
        sub_1004B891C(v33);
        v37 = v36;
LABEL_17:
        swift_bridgeObjectRelease();
        v41 = (char *)a1 + v2[10];
        *(_QWORD *)v45 = *(_QWORD *)v41;
        *(_OWORD *)&v45[8] = *(_OWORD *)(v41 + 8);
        v46 = v37;
        v27 = sub_1004B804C(&qword_101411ED0);
        return Binding.wrappedValue.setter(&v46, v27);
      }
    }
    v37 = (char *)&_swiftEmptySetSingleton;
    goto LABEL_17;
  }
LABEL_6:
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLSceneRowItemUI_i);
  v18 = (char *)a1 + v2[15];
  v19 = *v18;
  v20 = *((_QWORD *)v18 + 1);
  v45[0] = v19;
  *(_QWORD *)&v45[8] = v20;
  LOBYTE(v46) = 1;
  v21 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(&v46, v21);
  v22 = *a1;
  v23 = (char *)a1 + v2[11];
  v24 = *(_OWORD *)v23;
  v25 = *((_QWORD *)v23 + 2);
  *(_OWORD *)v45 = v24;
  *(_QWORD *)&v45[16] = v25;
  v46 = v22;
  v26 = v22;
  v27 = sub_1004B804C(&qword_101411EE0);
  return Binding.wrappedValue.setter(&v46, v27);
}

uint64_t sub_100D8249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];
  uint64_t v45;
  char v46;

  v37 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for HStack(0, v3, v4);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v34 = (uint64_t)&v32 - v9;
  v10 = type metadata accessor for VStack(0, v3, v4);
  v32 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  v16 = type metadata accessor for _ConditionalContent(0, v10, v5);
  v35 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  sub_100D87600((uint64_t *)v2, (uint64_t)v44);
  sub_100D87600(v44, (uint64_t)&v45);
  v19 = *(_QWORD *)(v2 + 16);
  v20 = *(unsigned __int8 *)(v2 + 24);
  v39 = v3;
  v40 = v4;
  v41 = v2;
  if ((v46 & 1) != 0)
  {
    HStack.init(alignment:spacing:content:)(v45, v19, v20, sub_100D87618, v38, v3, v4);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v5);
    v22 = v34;
    sub_1007722DC((uint64_t)v7, v5, v34);
    v23 = *(void (**)(char *, uint64_t))(v33 + 8);
    v23(v7, v5);
    sub_100767FB0(v22, v5, (uint64_t)v7);
    v24 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v10);
    sub_100D6EF78((uint64_t)v7, v10, v5, v24, WitnessTable);
    v23(v7, v5);
    v23((char *)v22, v5);
  }
  else
  {
    VStack.init(alignment:spacing:content:)(v45, v19, v20, sub_100D87638, v38, v3, v4);
    v25 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v10);
    sub_1007722DC((uint64_t)v12, v10, (uint64_t)v15);
    v26 = *(void (**)(char *, uint64_t))(v32 + 8);
    v26(v12, v10);
    sub_100767FB0((uint64_t)v15, v10, (uint64_t)v12);
    v27 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v5);
    sub_100D6EEB4((uint64_t)v12, v10, v5, v25, v27);
    v26(v12, v10);
    v26(v15, v10);
  }
  v28 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v10);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v5);
  v42 = v28;
  v43 = v29;
  v30 = v36;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v36);
  sub_100767FB0((uint64_t)v18, v30, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v30);
}

uint64_t sub_100D827F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - v10;
  (*(void (**)(uint64_t, __n128))(v12 + 32))(v13, v9);
  sub_1007722DC((uint64_t)v7, a2, (uint64_t)v11);
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, a2);
  sub_100767FB0((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, a2);
}

uint64_t sub_100D828D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100D8249C(a1, a2);
}

uint64_t sub_100D82910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D754B4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D82918()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_100D82940()
{
  return sub_100D82CB0(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D775C0);
}

void sub_100D82954(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F37550);
  v5 = swift_getKeyPath(&unk_100F37578);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100D829D4(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F37550);
  v5 = swift_getKeyPath(&unk_100F37578);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100D82A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for CRLCompactScenesListUI_i(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4);

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v7 + 48));
  v8 = v7 + *(int *)(v1 + 32);
  v9 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = sub_1004B804C(&qword_101411920);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  v11 = v7 + *(int *)(v1 + 36);

  swift_release(*(_QWORD *)(v11 + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D82B20()
{
  return sub_100D8301C(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D776AC);
}

uint64_t sub_100D82B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D75E04(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D82B3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_101411B40;
  if (!qword_101411B40)
  {
    v1 = sub_1004CB6A4(&qword_101411B38);
    sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[0] = type metadata accessor for EditButton(255);
    v2[1] = sub_1004B7878(&qword_101411B48, (uint64_t (*)(uint64_t))&type metadata accessor for EditButton, (uint64_t)&protocol conformance descriptor for EditButton);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411B40);
  }
  return result;
}

uint64_t sub_100D82C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D762C0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D82C0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411B68;
  if (!qword_101411B68)
  {
    v1 = sub_1004CB6A4(&qword_101411B60);
    sub_1004CBA30(&qword_1013E7040, &qword_1013E7038, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411B68);
  }
  return result;
}

uint64_t sub_100D82C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D7669C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D82C9C()
{
  return sub_100D82CB0(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_10087CB04);
}

uint64_t sub_100D82CB0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100D82CF0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100D770E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D82CF8()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100D82D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100D82D2C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100D82D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100D82D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100D82DDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.menuIndicatorVisibility.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100D82E04(unsigned __int8 *a1)
{
  return EnvironmentValues.menuIndicatorVisibility.setter(*a1);
}

unint64_t sub_100D82E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411C20;
  if (!qword_101411C20)
  {
    v1 = sub_1004CB6A4(&qword_101411BB0);
    sub_1006E1664(&qword_101411C28, &qword_101411BA8, (void (*)(void))sub_100D82ECC);
    sub_1004CBA30(&qword_1014015E8, &qword_1014015F0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411C20);
  }
  return result;
}

unint64_t sub_100D82ECC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_101411C30;
  if (!qword_101411C30)
  {
    v1 = sub_1004CB6A4(&qword_101411BA0);
    v2[0] = sub_1004CB6A4(&qword_101411B90);
    v2[1] = type metadata accessor for BorderlessButtonMenuStyle(255);
    v2[2] = sub_1004CBA30(&qword_101411C10, &qword_101411B90, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v2[3] = sub_1004B7878(&qword_101411C18, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonMenuStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
    sub_1004CBA30(&qword_101411C38, &qword_101411C40, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411C30);
  }
  return result;
}

uint64_t sub_100D82FD8()
{
  return sub_100D82CB0(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D77408);
}

uint64_t sub_100D82FF0()
{
  return sub_100D82CB0(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D77440);
}

uint64_t sub_100D83008()
{
  return sub_100D8301C(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D7648C);
}

uint64_t sub_100D8301C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_100D83060()
{
  return sub_100D8301C(type metadata accessor for CRLCompactScenesListUI_i, sub_100D76268);
}

double sub_100D83074@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D74CDC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D8307C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D74E64(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D83084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411C90;
  if (!qword_101411C90)
  {
    v1 = sub_1004CB6A4(&qword_101411C80);
    sub_1006E1664(&qword_101411C98, &qword_101411CA0, (void (*)(void))sub_100D83108);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_101411C90);
  }
  return result;
}

unint64_t sub_100D83108()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  _QWORD v3[4];

  result = qword_101411CA8;
  if (!qword_101411CA8)
  {
    v1 = sub_1004CB6A4(&qword_101411CB0);
    v3[0] = sub_1004CB6A4(&qword_1013F67A0);
    v3[1] = type metadata accessor for BorderedProminentButtonStyle(255, v2);
    v3[2] = sub_1004CBA30(&qword_1013F67D0, &qword_1013F67A0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v3[3] = sub_1004B7878(&qword_1013F67D8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_1004CBA30(&qword_101411CB8, &qword_1013F67E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411CA8);
  }
  return result;
}

uint64_t sub_100D83214()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100D83234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100D8325C(uint64_t a1)
{
  return sub_100D87D14(a1, type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t))sub_100D74534);
}

uint64_t sub_100D83274(uint64_t a1, uint64_t a2)
{
  return sub_100D87D88(a1, a2, type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D74794);
}

uint64_t sub_100D83288(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

uint64_t sub_100D832B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[4];

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLCompactScenesListUI_i(0) - 8) + 80);
  v3[2] = v0 + ((v1 + 16) & ~v1);
  return sub_100D6EBD8(sub_100D83314, (uint64_t)v3);
}

void sub_100D83314(unint64_t *a1)
{
  uint64_t v1;

  sub_100D748A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100D8332C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100D8334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100D83370()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100D83390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D82D60(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

char *sub_100D833B4(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  char **v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t, __n128);
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t, __n128);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  void *v91;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
  }
  else
  {
    v8 = a2 + 1;
    v9 = v5;
    swift_unknownObjectWeakCopyInit(a1 + 8, v8);
    v10 = a2[3];
    *((_QWORD *)a1 + 2) = a2[2];
    *((_QWORD *)a1 + 3) = v10;
    v11 = a2[4];
    *((_QWORD *)a1 + 4) = v11;
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v11;
    v16 = sub_1004B804C(&qword_101409318);
    if (swift_getEnumCaseMultiPayload(v14, v16) == 1)
    {
      v17 = sub_1004B804C(&qword_101411B00);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
      {
        v19 = sub_1004B804C(&qword_101409320);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = 1;
      }
      else
      {
        v22 = *v14;
        v23 = v14[1];
        *(_QWORD *)v13 = *v14;
        *((_QWORD *)v13 + 1) = v23;
        v24 = *(int *)(v17 + 32);
        v88 = (char *)v14 + v24;
        v90 = &v13[v24];
        v25 = type metadata accessor for EditMode(0);
        v86 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
        swift_retain(v22);
        v26 = swift_retain(v23);
        v86(v90, v88, v25, v26);
        v20 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
      }
    }
    else
    {
      v21 = *v14;
      *(_QWORD *)v13 = *v14;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v16, v20);
    v27 = a3[8];
    v28 = &a1[v27];
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = 1;
    }
    else
    {
      v33 = *v29;
      *(_QWORD *)v28 = *v29;
      swift_retain(v33);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v32);
    v34 = a3[9];
    v35 = &a1[v34];
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
    {
      v38 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
      v39 = 1;
    }
    else
    {
      v40 = *v36;
      *(_QWORD *)v35 = *v36;
      swift_retain(v40);
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v37, v39);
    v41 = a3[10];
    v42 = a3[11];
    v43 = &a1[v41];
    v44 = (uint64_t *)((char *)a2 + v41);
    v46 = *v44;
    v45 = v44[1];
    *(_QWORD *)v43 = *v44;
    *((_QWORD *)v43 + 1) = v45;
    v47 = v44[2];
    *((_QWORD *)v43 + 2) = v47;
    v48 = &a1[v42];
    v49 = (uint64_t *)((char *)a2 + v42);
    v82 = *v49;
    v84 = v49[1];
    *(_QWORD *)v48 = *v49;
    *((_QWORD *)v48 + 1) = v84;
    v91 = (void *)v49[2];
    *((_QWORD *)v48 + 2) = v91;
    v50 = a3[12];
    v51 = a3[13];
    v52 = &a1[v50];
    v53 = (uint64_t)a2 + v50;
    v83 = *(void **)v53;
    v85 = *(_QWORD *)(v53 + 8);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v85;
    v54 = &a1[v51];
    v55 = (char **)((char *)a2 + v51);
    v56 = v55[1];
    *(_QWORD *)v54 = *v55;
    *((_QWORD *)v54 + 1) = v56;
    v87 = v56;
    v89 = v55[2];
    *((_QWORD *)v54 + 2) = v89;
    v57 = a3[14];
    v58 = a3[15];
    v59 = &a1[v57];
    v60 = (char *)a2 + v57;
    *v59 = *v60;
    v61 = *((_QWORD *)v60 + 1);
    *((_QWORD *)v59 + 1) = v61;
    v62 = &a1[v58];
    v63 = (char *)a2 + v58;
    *v62 = *v63;
    v64 = *((_QWORD *)v63 + 1);
    *((_QWORD *)v62 + 1) = v64;
    v65 = a3[16];
    v66 = a3[17];
    v67 = &a1[v65];
    v68 = (char *)a2 + v65;
    *v67 = *v68;
    v69 = *((_QWORD *)v68 + 1);
    *((_QWORD *)v67 + 1) = v69;
    v70 = (char *)a2 + v66;
    v71 = &a1[v66];
    v67[16] = v68[16];
    v72 = type metadata accessor for AccessibilityTechnologies(0);
    v80 = *(_QWORD *)(v72 - 8);
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v80 + 48);
    swift_retain(v46);
    swift_retain(v45);
    swift_bridgeObjectRetain(v47);
    swift_retain(v82);
    swift_retain(v84);
    v73 = v91;
    v74 = v83;
    swift_retain(v85);
    swift_bridgeObjectRetain(v87);
    swift_retain(v89);
    swift_retain(v61);
    swift_retain(v64);
    v75 = swift_retain(v69);
    if (v81(v70, 1, v72, v75))
    {
      v76 = sub_1004B804C(&qword_1013FB128);
      memcpy(v71, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v71, v70, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v71, 0, 1, v72);
    }
    v77 = (int *)sub_1004B804C(&qword_1013FB130);
    v71[v77[9]] = v70[v77[9]];
    v78 = v77[10];
    v5 = *(char **)&v70[v78];
    *(_QWORD *)&v71[v78] = v5;
    v71[v77[11]] = v70[v77[11]];
  }
  swift_retain(v5);
  return a1;
}

double sub_100D83854(id *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;

  swift_unknownObjectWeakDestroy(a1 + 1);
  v4 = (id *)((char *)a1 + a2[7]);
  v5 = sub_1004B804C(&qword_101409318);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = sub_1004B804C(&qword_101411B00);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      swift_release(*v4);
      swift_release(v4[1]);
      v7 = (char *)v4 + *(int *)(v6 + 32);
      v8 = type metadata accessor for EditMode(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
  }
  else
  {
    swift_release(*v4);
  }
  v9 = (id *)((char *)a1 + a2[8]);
  v10 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (id *)((char *)a1 + a2[9]);
  v13 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (id *)((char *)a1 + a2[10]);
  swift_release(*v15);
  swift_release(v15[1]);
  swift_bridgeObjectRelease();
  v16 = (char *)a1 + a2[11];
  swift_release(*(_QWORD *)v16);
  swift_release(*((_QWORD *)v16 + 1));

  v17 = (char *)a1 + a2[12];
  swift_release(*((_QWORD *)v17 + 1));
  v18 = (char *)a1 + a2[13];
  swift_bridgeObjectRelease();
  swift_release(*((_QWORD *)v18 + 2));
  swift_release(*(id *)((char *)a1 + a2[14] + 8));
  swift_release(*(id *)((char *)a1 + a2[15] + 8));
  swift_release(*(id *)((char *)a1 + a2[16] + 8));
  v19 = (char *)a1 + a2[17];
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  v22 = *(_QWORD *)&v19[*(int *)(sub_1004B804C(&qword_1013FB130) + 40)];
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

_QWORD *sub_100D83ABC(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t, __n128);
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t, __n128);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void *v92;

  v6 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v7 = a1 + 1;
  v8 = a2 + 8;
  v9 = v6;
  swift_unknownObjectWeakCopyInit(v7, v8);
  v10 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v10;
  v11 = *(void **)(a2 + 32);
  a1[4] = v11;
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = v11;
  v16 = sub_1004B804C(&qword_101409318);
  if (swift_getEnumCaseMultiPayload(v14, v16) == 1)
  {
    v17 = sub_1004B804C(&qword_101411B00);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      v19 = sub_1004B804C(&qword_101409320);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      v20 = 1;
    }
    else
    {
      v22 = *v14;
      v23 = v14[1];
      *v13 = *v14;
      v13[1] = v23;
      v24 = *(int *)(v17 + 32);
      v89 = (char *)v14 + v24;
      v91 = (char *)v13 + v24;
      v25 = type metadata accessor for EditMode(0);
      v87 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
      swift_retain(v22);
      v26 = swift_retain(v23);
      v87(v91, v89, v25, v26);
      v20 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
  }
  else
  {
    v21 = *v14;
    *v13 = *v14;
    swift_retain(v21);
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v16, v20);
  v27 = a3[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
    v32 = 1;
  }
  else
  {
    v33 = *v29;
    *v28 = *v29;
    swift_retain(v33);
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v28, v30, v32);
  v34 = a3[9];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v37 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v36, v37) == 1)
  {
    v38 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v35, v36, v38);
    v39 = 1;
  }
  else
  {
    v40 = *v36;
    *v35 = *v36;
    swift_retain(v40);
    v39 = 0;
  }
  swift_storeEnumTagMultiPayload(v35, v37, v39);
  v41 = a3[10];
  v42 = a3[11];
  v43 = (_QWORD *)((char *)a1 + v41);
  v44 = (uint64_t *)(a2 + v41);
  v46 = *v44;
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v47 = v44[2];
  v43[2] = v47;
  v48 = (_QWORD *)((char *)a1 + v42);
  v49 = (uint64_t *)(a2 + v42);
  v83 = *v49;
  v85 = v49[1];
  *v48 = *v49;
  v48[1] = v85;
  v92 = (void *)v49[2];
  v48[2] = (uint64_t)v92;
  v50 = a3[12];
  v51 = a3[13];
  v52 = (_QWORD *)((char *)a1 + v50);
  v53 = a2 + v50;
  v84 = *(void **)v53;
  v86 = *(_QWORD *)(v53 + 8);
  *v52 = *(_QWORD *)v53;
  v52[1] = v86;
  v54 = (_QWORD *)((char *)a1 + v51);
  v55 = (_QWORD *)(a2 + v51);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v88 = v56;
  v90 = v55[2];
  v54[2] = v90;
  v57 = a3[14];
  v58 = a3[15];
  v59 = (char *)a1 + v57;
  v60 = (char *)(a2 + v57);
  *v59 = *v60;
  v61 = *((_QWORD *)v60 + 1);
  *((_QWORD *)v59 + 1) = v61;
  v62 = (char *)a1 + v58;
  v63 = (char *)(a2 + v58);
  *v62 = *v63;
  v64 = *((_QWORD *)v63 + 1);
  *((_QWORD *)v62 + 1) = v64;
  v65 = a3[16];
  v66 = a3[17];
  v67 = (char *)a1 + v65;
  v68 = (char *)(a2 + v65);
  *v67 = *v68;
  v69 = *((_QWORD *)v68 + 1);
  *((_QWORD *)v67 + 1) = v69;
  v70 = (char *)(a2 + v66);
  v71 = (char *)a1 + v66;
  v67[16] = v68[16];
  v72 = type metadata accessor for AccessibilityTechnologies(0);
  v81 = *(_QWORD *)(v72 - 8);
  v82 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v81 + 48);
  swift_retain(v46);
  swift_retain(v45);
  swift_bridgeObjectRetain(v47);
  swift_retain(v83);
  swift_retain(v85);
  v73 = v92;
  v74 = v84;
  swift_retain(v86);
  swift_bridgeObjectRetain(v88);
  swift_retain(v90);
  swift_retain(v61);
  swift_retain(v64);
  v75 = swift_retain(v69);
  if (v82(v70, 1, v72, v75))
  {
    v76 = sub_1004B804C(&qword_1013FB128);
    memcpy(v71, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v71, v70, v72);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v71, 0, 1, v72);
  }
  v77 = (int *)sub_1004B804C(&qword_1013FB130);
  v71[v77[9]] = v70[v77[9]];
  v78 = v77[10];
  v79 = *(_QWORD *)&v70[v78];
  *(_QWORD *)&v71[v78] = v79;
  v71[v77[11]] = v70[v77[11]];
  swift_retain(v79);
  return a1;
}

uint64_t sub_100D83F3C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  int v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v100)(char *, char *, uint64_t, __n128);
  char *v101;
  char *v102;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  swift_unknownObjectWeakCopyAssign(a1 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(void **)(a2 + 32);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v11 = v9;

  if (a1 != a2)
  {
    v12 = a3[7];
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_1004CB800(a1 + v12, &qword_101409318);
    v15 = sub_1004B804C(&qword_101409318);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = sub_1004B804C(&qword_101411B00);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = sub_1004B804C(&qword_101409320);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = 1;
      }
      else
      {
        v21 = *v14;
        *v13 = *v14;
        v22 = v14[1];
        v13[1] = v22;
        v23 = *(int *)(v16 + 32);
        v101 = (char *)v14 + v23;
        v102 = (char *)v13 + v23;
        v24 = type metadata accessor for EditMode(0);
        v100 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
        swift_retain(v21);
        v25 = swift_retain(v22);
        v100(v102, v101, v24, v25);
        v19 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v19);
    v26 = a3[8];
    v27 = (uint64_t *)(a1 + v26);
    v28 = (uint64_t *)(a2 + v26);
    sub_1004CB800(a1 + v26, &qword_1013F0BF0);
    v29 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
      v31 = 1;
    }
    else
    {
      v32 = *v28;
      *v27 = *v28;
      swift_retain(v32);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v29, v31);
    v33 = a3[9];
    v34 = (uint64_t *)(a1 + v33);
    v35 = (uint64_t *)(a2 + v33);
    sub_1004CB800(a1 + v33, &qword_101409328);
    v36 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
    {
      v37 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
      v38 = 1;
    }
    else
    {
      v39 = *v35;
      *v34 = *v35;
      swift_retain(v39);
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v34, v36, v38);
  }
  v40 = a3[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a1 + v40);
  v44 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(a1 + v40) = v44;
  swift_retain(v44);
  swift_release(v43);
  v45 = *(_QWORD *)(v42 + 8);
  v46 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)(v41 + 8) = v45;
  swift_retain(v45);
  swift_release(v46);
  v47 = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v41 + 16) = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease();
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a1 + v48);
  v52 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(a1 + v48) = v52;
  swift_retain(v52);
  swift_release(v51);
  v53 = *(_QWORD *)(v50 + 8);
  v54 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)(v49 + 8) = v53;
  swift_retain(v53);
  swift_release(v54);
  v55 = *(void **)(v49 + 16);
  v56 = *(void **)(v50 + 16);
  *(_QWORD *)(v49 + 16) = v56;
  v57 = v56;

  v58 = a3[12];
  v59 = (_QWORD *)(a1 + v58);
  v60 = a2 + v58;
  v61 = *(void **)(a1 + v58);
  v62 = *(void **)(a2 + v58);
  *v59 = v62;
  v63 = v62;

  v64 = v59[1];
  v65 = *(_QWORD *)(v60 + 8);
  v59[1] = v65;
  swift_retain(v65);
  swift_release(v64);
  v66 = a3[13];
  v67 = (_QWORD *)(a1 + v66);
  v68 = a2 + v66;
  *v67 = *(_QWORD *)(a2 + v66);
  v69 = *(_QWORD *)(a2 + v66 + 8);
  v67[1] = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease();
  v70 = v67[2];
  v71 = *(_QWORD *)(v68 + 16);
  v67[2] = v71;
  swift_retain(v71);
  swift_release(v70);
  v72 = a3[14];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_BYTE *)v73 = *(_BYTE *)v74;
  v75 = *(_QWORD *)(v73 + 8);
  v76 = *(_QWORD *)(v74 + 8);
  *(_QWORD *)(v73 + 8) = v76;
  swift_retain(v76);
  swift_release(v75);
  v77 = a3[15];
  v78 = a1 + v77;
  v79 = a2 + v77;
  *(_BYTE *)v78 = *(_BYTE *)v79;
  v80 = *(_QWORD *)(v78 + 8);
  v81 = *(_QWORD *)(v79 + 8);
  *(_QWORD *)(v78 + 8) = v81;
  swift_retain(v81);
  swift_release(v80);
  v82 = a3[16];
  v83 = a1 + v82;
  v84 = a2 + v82;
  *(_BYTE *)v83 = *(_BYTE *)(a2 + v82);
  v85 = *(_QWORD *)(a1 + v82 + 8);
  v86 = *(_QWORD *)(a2 + v82 + 8);
  *(_QWORD *)(v83 + 8) = v86;
  swift_retain(v86);
  swift_release(v85);
  *(_BYTE *)(v83 + 16) = *(_BYTE *)(v84 + 16);
  v87 = a3[17];
  v88 = (char *)(a1 + v87);
  v89 = (char *)(a2 + v87);
  v90 = type metadata accessor for AccessibilityTechnologies(0);
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  LODWORD(v83) = v92(v88, 1, v90);
  v93 = v92(v89, 1, v90);
  if (!(_DWORD)v83)
  {
    if (!v93)
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 24))(v88, v89, v90);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v90);
    goto LABEL_19;
  }
  if (v93)
  {
LABEL_19:
    v94 = sub_1004B804C(&qword_1013FB128);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_20:
  v95 = (int *)sub_1004B804C(&qword_1013FB130);
  v88[v95[9]] = v89[v95[9]];
  v96 = v95[10];
  v97 = *(_QWORD *)&v88[v96];
  v98 = *(_QWORD *)&v89[v96];
  *(_QWORD *)&v88[v96] = v98;
  swift_retain(v98);
  swift_release(v97);
  v88[v95[11]] = v89[v95[11]];
  return a1;
}

uint64_t sub_100D844C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectWeakTakeInit(a1 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_1004B804C(&qword_101409318);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = sub_1004B804C(&qword_101411B00);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_1004B804C(&qword_101409320);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      v14 = *(int *)(v10 + 32);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = type metadata accessor for EditMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v18 = a3[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload(v19, v21, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[9];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload(v24, v26, 1);
  }
  else
  {
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  v34 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
  v37 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  v38 = a3[16];
  v39 = a3[17];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
  v42 = (char *)(a1 + v39);
  v43 = (char *)(a2 + v39);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v44 = type metadata accessor for AccessibilityTechnologies(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_1004B804C(&qword_1013FB128);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v47 = (int *)sub_1004B804C(&qword_1013FB130);
  v42[v47[9]] = v43[v47[9]];
  *(_QWORD *)&v42[v47[10]] = *(_QWORD *)&v43[v47[10]];
  v42[v47[11]] = v43[v47[11]];
  return a1;
}

uint64_t sub_100D84844(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  swift_unknownObjectWeakTakeAssign(a1 + 8, a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  if (a1 != a2)
  {
    v8 = a3[7];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_1004CB800(a1 + v8, &qword_101409318);
    v11 = sub_1004B804C(&qword_101409318);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = sub_1004B804C(&qword_101411B00);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_1004B804C(&qword_101409320);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        v16 = *(int *)(v12 + 32);
        v17 = (char *)v9 + v16;
        v18 = (char *)v10 + v16;
        v19 = type metadata accessor for EditMode(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v20 = a3[8];
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    sub_1004CB800(a1 + v20, &qword_1013F0BF0);
    v23 = sub_1004B804C(&qword_1013F0BF0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload(v21, v23, 1);
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    v25 = a3[9];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_1004CB800(a1 + v25, &qword_101409328);
    v28 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
  }
  v30 = a3[10];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a1 + v30);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  swift_release(v33);
  v34 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  swift_release(v34);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  swift_bridgeObjectRelease();
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a1 + v35);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_release(v38);
  v39 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  swift_release(v39);
  v40 = *(void **)(v36 + 16);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);

  v41 = a3[12];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v44 = *(void **)(a1 + v41);
  *v42 = *v43;

  v45 = v42[1];
  v42[1] = v43[1];
  swift_release(v45);
  v46 = a3[13];
  v47 = (_QWORD *)(a1 + v46);
  v48 = a2 + v46;
  v49 = *(_QWORD *)(a2 + v46 + 8);
  *v47 = *(_QWORD *)(a2 + v46);
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v50 = v47[2];
  v47[2] = *(_QWORD *)(v48 + 16);
  swift_release(v50);
  v51 = a3[14];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_BYTE *)v52 = *(_BYTE *)v53;
  v54 = *(_QWORD *)(v52 + 8);
  *(_QWORD *)(v52 + 8) = *(_QWORD *)(v53 + 8);
  swift_release(v54);
  v55 = a3[15];
  v56 = a1 + v55;
  v57 = a2 + v55;
  *(_BYTE *)v56 = *(_BYTE *)v57;
  v58 = *(_QWORD *)(v56 + 8);
  *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
  swift_release(v58);
  v59 = a3[16];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)(a2 + v59);
  v62 = *(_QWORD *)(a1 + v59 + 8);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(a2 + v59 + 8);
  swift_release(v62);
  *(_BYTE *)(v60 + 16) = *(_BYTE *)(v61 + 16);
  v63 = a3[17];
  v64 = (char *)(a1 + v63);
  v65 = (char *)(a2 + v63);
  v66 = type metadata accessor for AccessibilityTechnologies(0);
  v67 = *(_QWORD *)(v66 - 8);
  v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
  LODWORD(v61) = v68(v64, 1, v66);
  v69 = v68(v65, 1, v66);
  if (!(_DWORD)v61)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v64, v65, v66);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
    goto LABEL_19;
  }
  if (v69)
  {
LABEL_19:
    v70 = sub_1004B804C(&qword_1013FB128);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
LABEL_20:
  v71 = (int *)sub_1004B804C(&qword_1013FB130);
  v64[v71[9]] = v65[v71[9]];
  v72 = v71[10];
  v73 = *(_QWORD *)&v64[v72];
  *(_QWORD *)&v64[v72] = *(_QWORD *)&v65[v72];
  swift_release(v73);
  v64[v71[11]] = v65[v71[11]];
  return a1;
}

uint64_t sub_100D84D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D84D30);
}

uint64_t sub_100D84D30(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_101411CE0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013F0C10);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v13 = sub_1004B804C(&qword_101411CD8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[9];
        }
        else
        {
          v10 = sub_1004B804C(&qword_1013FB130);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[17];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100D84E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D84E34);
}

char *sub_100D84E34(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_101411CE0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013F0C10);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v13 = sub_1004B804C(&qword_101411CD8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[9];
        }
        else
        {
          v10 = sub_1004B804C(&qword_1013FB130);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[17];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100D84F28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[14];

  v10[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[1] = &unk_100F37440;
  v10[2] = &unk_100F37458;
  sub_100D8505C(319);
  if (v3 <= 0x3F)
  {
    v10[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_10076A270(319, &qword_1013F0C80, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_10076A270(319, (unint64_t *)&unk_101411D68, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v10[6] = &unk_100F37698;
        v10[7] = &unk_100F37698;
        v10[8] = &unk_100F37470;
        v10[9] = &unk_100F37698;
        v10[10] = &unk_100F37470;
        v10[11] = &unk_100F37470;
        v10[12] = &unk_100F376B0;
        sub_10093EB60();
        if (v9 <= 0x3F)
        {
          v10[13] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 14, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100D8505C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_101411D60)
  {
    v2 = sub_1004CB6A4(&qword_101409320);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_101411D60);
  }
}

double destroy for CRLScenesListWrapperUI_i(uint64_t a1)
{
  double result;

  swift_unknownObjectWeakDestroy(a1);

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v4 = swift_unknownObjectWeakCopyInit(a1, a2);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v4 + 16) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(v4 + 40) = v7;
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (_QWORD *)swift_unknownObjectWeakCopyAssign(a1, a2);
  v4[1] = *(_QWORD *)(a2 + 8);
  v4[2] = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  v6 = (void *)v4[3];
  v4[3] = v5;
  v7 = v5;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

__n128 initializeWithTake for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a2 + 8);
  result = *(__n128 *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(__n128 *)(v3 + 16) = result;
  *(_OWORD *)(v3 + 32) = v5;
  return result;
}

uint64_t assignWithTake for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(v4 + 24);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLScenesListWrapperUI_i(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLScenesListWrapperUI_i(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScenesListWrapperUI_i()
{
  return &type metadata for CRLScenesListWrapperUI_i;
}

uint64_t sub_100D852DC()
{
  return sub_1004CBA30(&qword_101411DC8, &qword_101411DD0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
}

uint64_t sub_100D85308(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C5F4, 1);
}

uint64_t sub_100D85318(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C5CC, 1);
}

uint64_t sub_100D85328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D7CD7C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D85330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411E58;
  if (!qword_101411E58)
  {
    v1 = sub_1004CB6A4(&qword_101411DF0);
    sub_100D853B4();
    sub_1004CBA30(&qword_1013E7090, &qword_1013E7098, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411E58);
  }
  return result;
}

unint64_t sub_100D853B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411E60;
  if (!qword_101411E60)
  {
    v1 = sub_1004CB6A4(&qword_101411DE8);
    sub_100D85420();
    sub_100D854BC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411E60);
  }
  return result;
}

unint64_t sub_100D85420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411E68;
  if (!qword_101411E68)
  {
    v1 = sub_1004CB6A4(&qword_101411DE0);
    sub_1004CBA30(&qword_101411E70, &qword_101411DD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_1004CBA30(&qword_101411E78, &qword_101411E80, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411E68);
  }
  return result;
}

unint64_t sub_100D854BC()
{
  unint64_t result;

  result = qword_101411E88;
  if (!qword_101411E88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_101411E88);
  }
  return result;
}

unint64_t sub_100D85500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411E90;
  if (!qword_101411E90)
  {
    v1 = sub_1004CB6A4(&qword_101411E50);
    sub_100D85564();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_101411E90);
  }
  return result;
}

unint64_t sub_100D85564()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411E98;
  if (!qword_101411E98)
  {
    v1 = sub_1004CB6A4(&qword_101411EA0);
    sub_1004CBA30(&qword_101411EA8, &qword_101411EB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_1004CBA30(&qword_101411EB8, &qword_101411EC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411E98);
  }
  return result;
}

uint64_t sub_100D85614()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D7DB38);
}

unint64_t sub_100D85628()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411EC8;
  if (!qword_101411EC8)
  {
    v1 = sub_1004CB6A4(&qword_10140B880);
    sub_1004B7878(&qword_101405DB8, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_101411EC8);
  }
  return result;
}

uint64_t sub_100D856A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_unknownObjectWeakDestroy(v0 + v4 + 8);
  v7 = (_QWORD *)(v0 + v4 + v1[7]);
  v8 = sub_1004B804C(&qword_101409318);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = sub_1004B804C(&qword_101411B00);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
    {
      swift_release(*v7);
      swift_release(v7[1]);
      v10 = (char *)v7 + *(int *)(v9 + 32);
      v11 = type metadata accessor for EditMode(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
  }
  else
  {
    swift_release(*v7);
  }
  v12 = (_QWORD *)(v6 + v1[8]);
  v13 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)(v6 + v1[9]);
  v16 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  v18 = (_QWORD *)(v6 + v1[10]);
  swift_release(*v18);
  swift_release(v18[1]);
  swift_bridgeObjectRelease();
  v19 = v6 + v1[11];
  swift_release(*(_QWORD *)v19);
  swift_release(*(_QWORD *)(v19 + 8));

  v20 = v6 + v1[12];
  swift_release(*(_QWORD *)(v20 + 8));
  v21 = v6 + v1[13];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v21 + 16));
  swift_release(*(_QWORD *)(v6 + v1[14] + 8));
  swift_release(*(_QWORD *)(v6 + v1[15] + 8));
  swift_release(*(_QWORD *)(v6 + v1[16] + 8));
  v22 = v6 + v1[17];
  v23 = type metadata accessor for AccessibilityTechnologies(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = sub_1004B804C(&qword_1013FB130);
  swift_release(*(_QWORD *)(v22 + *(int *)(v25 + 40)));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_100D8595C()
{
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100D7DD40();
}

uint64_t sub_100D85998()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, sub_100D7DE50);
}

uint64_t sub_100D859B0()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D7E124);
}

uint64_t sub_100D859C8()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D7E194);
}

uint64_t sub_100D859DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D7E2BC(*(void ***)(v1 + 16), a1);
}

unint64_t sub_100D859E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  void *v21;

  result = qword_101411F10;
  if (!qword_101411F10)
  {
    v17 = sub_1004CB6A4(&qword_101411E30);
    v16 = sub_1004CB6A4(&qword_101411E20);
    v15 = sub_1004CB6A4(&qword_101411E18);
    v1 = sub_1004CB6A4(&qword_10140B880);
    v2 = sub_1004CB6A4(&qword_101411E10);
    v3 = sub_1004CB6A4(&qword_101411E08);
    v4 = sub_1004CB6A4(&qword_101411E00);
    v5 = sub_1004CB6A4(&qword_10140B878);
    v6 = sub_1004CB6A4(&qword_101411DF8);
    v18 = sub_1004CB6A4(&qword_101411DF0);
    v19 = (void *)sub_1004CB6A4(&qword_101411E50);
    v20 = sub_100D85330();
    v21 = (void *)sub_100D85500();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v8 = sub_100D85628();
    v18 = v6;
    v19 = (void *)v1;
    v20 = OpaqueTypeConformance2;
    v21 = (void *)v8;
    v9 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v10 = sub_1004CBA30(&qword_101411ED8, &qword_10140B878, (uint64_t)&protocol conformance descriptor for Set<A>);
    v18 = v4;
    v19 = (void *)v5;
    v20 = v9;
    v21 = (void *)v10;
    v11 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v18 = v3;
    v19 = &type metadata for Bool;
    v20 = v11;
    v21 = &protocol witness table for Bool;
    v12 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v18 = v2;
    v19 = &type metadata for Bool;
    v20 = v12;
    v21 = &protocol witness table for Bool;
    v13 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v18 = v15;
    v19 = (void *)v1;
    v20 = v13;
    v21 = (void *)v8;
    v14 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v18 = v16;
    v19 = (void *)v14;
    swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
    atomic_store(result, (unint64_t *)&qword_101411F10);
  }
  return result;
}

unint64_t sub_100D85C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411F18;
  if (!qword_101411F18)
  {
    v1 = sub_1004CB6A4(&qword_101411F08);
    sub_1004CBA30(&qword_101411F20, &qword_101411F28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_1004CBA30(&qword_101411F30, &qword_101411F38, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411F18);
  }
  return result;
}

uint64_t sub_100D85CD0()
{
  return sub_100D82CB0(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D7EDD0);
}

uint64_t sub_100D85CE8()
{
  return sub_100D82CB0(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D814A0);
}

double sub_100D85D00()
{
  return sub_100D85D14((uint64_t)&unk_1012A50D0, (uint64_t)&unk_101411F60);
}

double sub_100D85D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8) + 80);
  return sub_100D815E8((void **)(v2 + ((v5 + 16) & ~v5)), a1, a2);
}

uint64_t sub_100D85D68()
{
  return sub_100D82CB0(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D81874);
}

double sub_100D85D80()
{
  return sub_100D85D14((uint64_t)&unk_1012A50A8, (uint64_t)&unk_10140B760);
}

uint64_t sub_100D85DA4()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, sub_100D7E0B0);
}

double sub_100D85DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100D85DC8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100D85DDC()
{
  return sub_100D85D14((uint64_t)&unk_1012A5288, (uint64_t)&unk_101411FB0);
}

uint64_t sub_100D85DF8()
{
  return sub_100D82CB0(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D81A20);
}

double sub_100D85E10()
{
  return sub_100D85D14((uint64_t)&unk_1012A5260, (uint64_t)&unk_101411FA8);
}

uint64_t sub_100D85E34@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CRLSceneRowItemUI_i(0);
  return sub_100D7B508(a1);
}

uint64_t sub_100D85E84()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D7C9E8);
}

unint64_t sub_100D85E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101411FE8;
  if (!qword_101411FE8)
  {
    v1 = sub_1004CB6A4(&qword_101411FE0);
    sub_1004CBA30(&qword_101411FF0, &qword_101411FF8, (uint64_t)&unk_100F37980);
    sub_1004CBA30(&qword_101412000, &qword_101412008, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101411FE8);
  }
  return result;
}

uint64_t sub_100D85F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D80914(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D85F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412028;
  if (!qword_101412028)
  {
    v1 = sub_1004CB6A4(&qword_101412018);
    sub_100D85FC0();
    sub_1004CBA30(&qword_1014015E8, &qword_1014015F0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412028);
  }
  return result;
}

unint64_t sub_100D85FC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412030;
  if (!qword_101412030)
  {
    v1 = sub_1004CB6A4(&qword_101412038);
    sub_1004CBA30(&qword_1013ECDB0, &qword_1013ECDB8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412030);
  }
  return result;
}

double sub_100D86058()
{
  return sub_100D85D14((uint64_t)&unk_1012A53C8, (uint64_t)&unk_101412070);
}

uint64_t sub_100D86084()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D82130);
}

unint64_t sub_100D86098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014120D0;
  if (!qword_1014120D0)
  {
    v1 = sub_1004CB6A4(&qword_1014120C8);
    sub_1004CBA30(&qword_1014120D8, &qword_1014120E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014120D0);
  }
  return result;
}

unint64_t sub_100D8611C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_1014120F0;
  if (!qword_1014120F0)
  {
    v1 = sub_1004CB6A4(&qword_1014120B0);
    v2 = sub_1004CB6A4(&qword_1014120A0);
    v4 = sub_1004CB6A4(&qword_1013F0E08);
    v5 = sub_1004CBA30(&qword_1013F0E18, &qword_1013F0E08, (uint64_t)&protocol conformance descriptor for TextField<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.focused(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.submitLabel(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014120F0);
  }
  return result;
}

uint64_t sub_100D861FC()
{
  return sub_100D82CB0(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D82090);
}

uint64_t sub_100D86214()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D81CA8);
}

uint64_t sub_100D86230()
{
  return sub_100D8301C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100D8203C);
}

double sub_100D86250()
{
  return sub_100D86264((uint64_t)&unk_1012A5580, (uint64_t)&unk_101412168);
}

double sub_100D86264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8) + 80);
  return sub_100D804A0(v2 + ((v5 + 16) & ~v5), a1, a2);
}

unint64_t sub_100D862B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412128;
  if (!qword_101412128)
  {
    v1 = sub_1004CB6A4(&qword_101412108);
    sub_1004CBA30(&qword_101412130, &qword_101412100, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412128);
  }
  return result;
}

double sub_100D8633C()
{
  return sub_100D86264((uint64_t)&unk_1012A5558, (uint64_t)&unk_101412158);
}

uint64_t sub_100D86354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_101412144);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return sub_100D80748(v3);
}

uint64_t sub_100D863BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_101412154);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100D8062C(a1, v6, v7, v8, v9);
}

uint64_t sub_100D8646C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;

  swift_unknownObjectWeakDestroy(v0 + v4 + 8);
  v7 = (_QWORD *)(v0 + v4 + v1[7]);
  v8 = sub_1004B804C(&qword_101409318);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = sub_1004B804C(&qword_101411B00);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
    {
      swift_release(*v7);
      swift_release(v7[1]);
      v10 = (char *)v7 + *(int *)(v9 + 32);
      v11 = type metadata accessor for EditMode(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
  }
  else
  {
    swift_release(*v7);
  }
  v12 = (_QWORD *)(v6 + v1[8]);
  v13 = sub_1004B804C(&qword_1013F0BF0);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)(v6 + v1[9]);
  v16 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release(*v15);
  }
  v18 = (_QWORD *)(v6 + v1[10]);
  swift_release(*v18);
  swift_release(v18[1]);
  swift_bridgeObjectRelease();
  v19 = v6 + v1[11];
  swift_release(*(_QWORD *)v19);
  swift_release(*(_QWORD *)(v19 + 8));

  v20 = v6 + v1[12];
  swift_release(*(_QWORD *)(v20 + 8));
  v21 = v6 + v1[13];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v21 + 16));
  swift_release(*(_QWORD *)(v6 + v1[14] + 8));
  swift_release(*(_QWORD *)(v6 + v1[15] + 8));
  swift_release(*(_QWORD *)(v6 + v1[16] + 8));
  v22 = v6 + v1[17];
  v23 = type metadata accessor for AccessibilityTechnologies(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v25 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = sub_1004B804C(&qword_1013FB130);
  swift_release(*(_QWORD *)(v22 + *(int *)(v26 + 40)));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v25));
  return swift_deallocObject(v0, v25 + 16, v3 | 7);
}

uint64_t sub_100D86734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_101412164);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100D8030C(a1, v6, v7, v8, v9);
}

unint64_t sub_100D867E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014121C0;
  if (!qword_1014121C0)
  {
    v1 = sub_1004CB6A4(&qword_1014121A8);
    sub_1004CBA30(&qword_1014121C8, &qword_1014121A0, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_1004CBA30(&qword_101411CB8, &qword_1013F67E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014121C0);
  }
  return result;
}

unint64_t sub_100D8687C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014121D0;
  if (!qword_1014121D0)
  {
    v1 = sub_1004CB6A4(&qword_101412190);
    sub_100D86900();
    sub_1004CBA30(&qword_1013F6820, &qword_1013F6828, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014121D0);
  }
  return result;
}

unint64_t sub_100D86900()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014121D8;
  if (!qword_1014121D8)
  {
    v1 = sub_1004CB6A4(&qword_101412188);
    sub_100D86984();
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014121D8);
  }
  return result;
}

unint64_t sub_100D86984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014121E0;
  if (!qword_1014121E0)
  {
    v1 = sub_1004CB6A4(&qword_101412180);
    sub_100D86A08();
    sub_1004CBA30(&qword_101412208, &qword_101412170, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014121E0);
  }
  return result;
}

unint64_t sub_100D86A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014121E8;
  if (!qword_1014121E8)
  {
    v1 = sub_1004CB6A4(&qword_1014121F0);
    sub_100D86A94(&qword_1014121F8, &qword_101412200);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014121E8);
  }
  return result;
}

uint64_t sub_100D86A94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100D86AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412210;
  if (!qword_101412210)
  {
    v1 = sub_1004CB6A4(&qword_1014121B0);
    sub_100D867E0();
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412210);
  }
  return result;
}

uint64_t sub_100D86B80@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_100D6F070(*(_QWORD *)(v2 + 16), a1, a2);
}

uint64_t type metadata accessor for CRLScenesListUI_i(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101412320, (uint64_t)&nominal type descriptor for CRLScenesListUI_i);
}

double sub_100D86B9C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100D86BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_100D86BF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = a2[5];
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

uint64_t sub_100D86C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v3);
  return a1;
}

uint64_t sub_100D86C98(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100D86CE0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for HVStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HVStack);
}

uint64_t *sub_100D86D38(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit(a1, a2);
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v9 = (void *)a2[3];
    v8 = a2[4];
    v4[3] = (uint64_t)v9;
    v4[4] = v8;
    v10 = a2[5];
    v11 = a3[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v4[5] = v10;
    v14 = type metadata accessor for EditMode(0);
    v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v9;
    swift_bridgeObjectRetain(v8);
    v17 = swift_retain(v10);
    v15(v12, v13, v14, v17);
    v18 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
    v19 = *(_QWORD *)&v13[v18];
    *(_QWORD *)&v12[v18] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (char *)a2 + v20;
    v25 = *(void **)v23;
    v24 = *((_QWORD *)v23 + 1);
    *v22 = *(_QWORD *)v23;
    v22[1] = v24;
    v26 = (char *)v4 + v21;
    v27 = (char *)a2 + v21;
    v29 = *(_QWORD *)v27;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v26[16] = v27[16];
    swift_retain(v19);
    v30 = v25;
    swift_retain(v24);
    swift_retain(v29);
  }
  swift_retain(v28);
  return v4;
}

double sub_100D86E74(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  double result;

  swift_unknownObjectWeakDestroy(a1);

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(a1 + 40));
  v4 = a1 + a2[7];
  v5 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = sub_1004B804C(&qword_101411920);
  swift_release(*(_QWORD *)(v4 + *(int *)(v6 + 28)));
  v7 = a1 + a2[8];

  swift_release(*(_QWORD *)(v7 + 8));
  v8 = (_QWORD *)(a1 + a2[9]);
  swift_release(*v8);
  *(_QWORD *)&result = swift_release(v8[1]).n128_u64[0];
  return result;
}

uint64_t sub_100D86F20(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v6 = (_QWORD *)swift_unknownObjectWeakCopyInit(a1, a2);
  v7 = a2[2];
  v6[1] = a2[1];
  v6[2] = v7;
  v9 = (void *)a2[3];
  v8 = a2[4];
  v6[3] = v9;
  v6[4] = v8;
  v10 = a2[5];
  v11 = a3[7];
  v12 = (char *)v6 + v11;
  v13 = (char *)a2 + v11;
  v6[5] = v10;
  v14 = type metadata accessor for EditMode(0);
  v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v9;
  swift_bridgeObjectRetain(v8);
  v17 = swift_retain(v10);
  v15(v12, v13, v14, v17);
  v18 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v19 = *(_QWORD *)&v13[v18];
  *(_QWORD *)&v12[v18] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (char *)a2 + v20;
  v25 = *(void **)v23;
  v24 = *((_QWORD *)v23 + 1);
  *v22 = *(_QWORD *)v23;
  v22[1] = v24;
  v26 = a1 + v21;
  v27 = (char *)a2 + v21;
  v28 = *(_QWORD *)v27;
  v29 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v29;
  *(_BYTE *)(v26 + 16) = v27[16];
  swift_retain(v19);
  v30 = v25;
  swift_retain(v24);
  swift_retain(v28);
  swift_retain(v29);
  return a1;
}

uint64_t sub_100D8702C(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = (_QWORD *)swift_unknownObjectWeakCopyAssign(a1, a2);
  v6[1] = a2[1];
  v6[2] = a2[2];
  v7 = (void *)a2[3];
  v8 = (void *)v6[3];
  v6[3] = v7;
  v9 = v7;

  v10 = a2[4];
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + 40);
  v12 = a2[5];
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v18 = *(_QWORD *)(v14 + v17);
  v19 = *(_QWORD *)&v15[v17];
  *(_QWORD *)(v14 + v17) = v19;
  swift_retain(v19);
  swift_release(v18);
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = *(void **)(a1 + v20);
  v24 = *(void **)((char *)a2 + v20);
  *v21 = v24;
  v25 = v24;

  v26 = v21[1];
  v27 = *((_QWORD *)v22 + 1);
  v21[1] = v27;
  swift_retain(v27);
  swift_release(v26);
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)(a1 + v28);
  v32 = *(_QWORD *)v30;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)v30;
  swift_retain(v32);
  swift_release(v31);
  v33 = *((_QWORD *)v30 + 1);
  v34 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)(v29 + 8) = v33;
  swift_retain(v33);
  swift_release(v34);
  *(_BYTE *)(v29 + 16) = v30[16];
  return a1;
}

uint64_t sub_100D8718C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 32) = v7;
  v8 = a3[7];
  v9 = v6 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = sub_1004B804C(&qword_101411920);
  *(_QWORD *)(v9 + *(int *)(v12 + 28)) = *(_QWORD *)(v10 + *(int *)(v12 + 28));
  v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  return a1;
}

uint64_t sub_100D87240(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_OWORD *)(v6 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(void **)(v6 + 24);
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v8);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(sub_1004B804C(&qword_101411920) + 28);
  v14 = *(_QWORD *)(v10 + v13);
  *(_QWORD *)(v10 + v13) = *(_QWORD *)(v11 + v13);
  swift_release(v14);
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = *(void **)(a1 + v15);
  *v16 = *v17;

  v19 = v16[1];
  v16[1] = v17[1];
  swift_release(v19);
  v20 = a3[9];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)v22;
  swift_release(v23);
  v24 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release(v24);
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  return a1;
}

uint64_t sub_100D87360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D8736C);
}

uint64_t sub_100D8736C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    else
      return 0;
  }
  else
  {
    v7 = sub_1004B804C(&qword_101411920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v7);
  }
}

uint64_t sub_100D873EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D873F8);
}

char *sub_100D873F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
    *((_QWORD *)result + 1) = 1;
  }
  else
  {
    v7 = sub_1004B804C(&qword_101411920);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_100D87474(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100F37440;
  v4[1] = &unk_100F37458;
  v4[2] = &unk_100F37458;
  sub_10076A270(319, (unint64_t *)&unk_101411990, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100F37470;
    v4[5] = &unk_100F37918;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_100D87520()
{
  _QWORD v1[4];

  v1[0] = sub_1004CB6A4(&qword_101411E30);
  v1[1] = sub_1004CB6A4(&qword_101411F08);
  v1[2] = sub_100D859E4();
  v1[3] = sub_100D85C28();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.accessibilityActions<A>(_:)>>, 1);
}

uint64_t sub_100D87590()
{
  return sub_1004CBA30(&qword_101412368, &qword_101412370, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
}

uint64_t sub_100D875BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C66C, 1);
}

uint64_t sub_100D875CC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10113C638, 1);
}

uint64_t sub_100D87600(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_100D87618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D827F4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D87638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D827F4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D87658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D705F4(*(_QWORD *)(v1 + 16), a1);
}

unsigned __int8 *sub_100D87664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLScenesListUI_i(0) - 8) + 80);
  return sub_100D714D4(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_100D876B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D71548(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D876B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014123E8;
  if (!qword_1014123E8)
  {
    v1 = sub_1004CB6A4(&qword_1014123E0);
    sub_1004CBA30(&qword_1014123F0, &qword_1014123F8, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1014123E8);
  }
  return result;
}

uint64_t sub_100D87738()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = (int *)type metadata accessor for CRLScenesListUI_i(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4);

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v7 + 40));
  v8 = v7 + v1[7];
  v9 = type metadata accessor for EditMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = sub_1004B804C(&qword_101411920);
  swift_release(*(_QWORD *)(v8 + *(int *)(v10 + 28)));
  v11 = v7 + v1[8];

  swift_release(*(_QWORD *)(v11 + 8));
  v12 = (_QWORD *)(v7 + v1[9]);
  swift_release(*v12);
  swift_release(v12[1]);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D87824()
{
  return sub_100D8301C(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D73070);
}

unint64_t sub_100D87838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412408;
  if (!qword_101412408)
  {
    v1 = sub_1004CB6A4(&qword_1014123B0);
    sub_100D878BC();
    sub_1004CBA30(&qword_101411A50, &qword_101411A58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412408);
  }
  return result;
}

unint64_t sub_100D878BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;

  result = qword_101412410;
  if (!qword_101412410)
  {
    v1 = sub_1004CB6A4(&qword_1014123A8);
    v2 = sub_1004CB6A4(&qword_101412398);
    v3 = sub_1004CB6A4(&qword_1014123D8);
    v4 = sub_1004CB6A4(&qword_101412390);
    v5 = sub_1004CB6A4(&qword_101412388);
    v6 = sub_1004CB6A4(&qword_101412380);
    v7 = sub_1004CB6A4(&qword_101412378);
    v17 = sub_1004CB6A4(&qword_101411A30);
    v18 = (void *)sub_1004CBA30(&qword_101411A28, &qword_101411A30, (uint64_t)&protocol conformance descriptor for List<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    v17 = v7;
    v18 = (void *)OpaqueTypeConformance2;
    v9 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.contentMargins(_:_:for:)>>, 1);
    v17 = v6;
    v18 = &type metadata for Bool;
    v19 = v9;
    v20 = &protocol witness table for Bool;
    v10 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
    v11 = sub_1004D292C();
    v17 = v5;
    v18 = &type metadata for String;
    v19 = v10;
    v20 = (void *)v11;
    v12 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
    v17 = v4;
    v18 = (void *)v12;
    v13 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
    v14 = sub_1004CB6A4(&qword_1014123E0);
    v15 = sub_100D876B8();
    v17 = v14;
    v18 = (void *)v15;
    v16 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
    v17 = v2;
    v18 = (void *)v3;
    v19 = v13;
    v20 = (void *)v16;
    swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
    sub_1004CBA30(&qword_101412418, &qword_101412400, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412410);
  }
  return result;
}

uint64_t sub_100D87AD8()
{
  return sub_100D82CB0(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D730E0);
}

unint64_t sub_100D87AF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_101412420;
  if (!qword_101412420)
  {
    v1 = sub_1004CB6A4(&qword_1014123C0);
    v2[0] = sub_1004CB6A4(&qword_1014123B0);
    v2[1] = sub_1004CB6A4(&qword_10140B878);
    v2[2] = sub_100D87838();
    v2[3] = sub_1004CBA30(&qword_101411ED8, &qword_10140B878, (uint64_t)&protocol conformance descriptor for Set<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412420);
  }
  return result;
}

uint64_t sub_100D87BCC()
{
  return sub_100D8301C(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D731CC);
}

uint64_t sub_100D87BE8()
{
  uint64_t v0;

  return sub_100D732BC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100D87C04()
{
  return sub_100D8301C(type metadata accessor for CRLScenesListUI_i, sub_100D72EC8);
}

uint64_t sub_100D87C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D71D9C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100D87C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412458;
  if (!qword_101412458)
  {
    v1 = sub_1004CB6A4(&qword_101411BB8);
    sub_100D82E28();
    sub_1004B7878(&qword_1013FB120, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412458);
  }
  return result;
}

uint64_t sub_100D87CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D7252C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D87CB0()
{
  return sub_100D8301C(type metadata accessor for CRLScenesListUI_i, sub_100D72990);
}

uint64_t sub_100D87CC4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100D72208(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100D87CD0()
{
  return sub_100D82CB0(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D77408);
}

uint64_t sub_100D87CE8()
{
  return sub_100D82CB0(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100D77440);
}

uint64_t sub_100D87D00(uint64_t a1)
{
  return sub_100D87D14(a1, type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t))sub_100D70B5C);
}

uint64_t sub_100D87D14(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t sub_100D87D74(uint64_t a1, uint64_t a2)
{
  return sub_100D87D88(a1, a2, type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D71028);
}

uint64_t sub_100D87D88(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_100D87DE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100D87E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLScenesListUI_i(0) - 8) + 80);
  return sub_100D71138(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_100D87E48(uint64_t *a1)
{
  uint64_t v1;

  sub_100D711C0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for HVStackKind()
{
  return &type metadata for HVStackKind;
}

uint64_t sub_100D87E74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for VStack(255, *a1, v2);
  v4 = type metadata accessor for HStack(255, v1, v2);
  v5 = type metadata accessor for _ConditionalContent(255, v3, v4);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v4);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v5);
}

uint64_t sub_100D87F18()
{
  uint64_t v0;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  void *v6;

  v0 = sub_1004CB6A4(&qword_1014123C8);
  v3 = sub_1004CB6A4(&qword_1014123C0);
  v4 = &type metadata for Bool;
  v5 = sub_100D87AF0();
  v6 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v3 = v0;
  v4 = &type metadata for Bool;
  v5 = OpaqueTypeConformance2;
  v6 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

_QWORD *sub_100D87FE4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D88004(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_100A14160(a1, (uint64_t)&v9 - v6);
  sub_100A14160((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_1005B858C((uint64_t)v7);
}

uint64_t sub_100D880B0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  void (*v11)(char *, uint64_t);
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  Swift::String v32;
  Swift::String v33;
  void (*v34)(char *, uint64_t);
  Swift::String v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  Swift::String v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t);
  Swift::String v41;
  void (*v42)(char *, uint64_t);
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t);
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);

  v71 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v0 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v2 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014126A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101412698);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1005E4338();
  v66 = 0xD000000000000012;
  ((void (*)(void))_AssistantIntent.Phrase.init(stringLiteral:))();
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v72 = v6;
  v11(v9, v6);
  v73 = v11;
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x8000000100FC21C0, &type metadata for CRLCreateBoardIntent, v10);
  v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v11(v9, v6);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CRLCreateBoardIntent, v10);
  v12._object = (void *)0x8000000101010A70;
  v12._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  v13 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v69 = *(void (**)(char *, _QWORD, uint64_t))(v0 + 104);
  v70 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v14 = v71;
  v69(v2, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v15 = *(void (**)(char *, uint64_t))(v0 + 8);
  v15(v2, v14);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v65 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v17 = v72;
  v73(v9, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CRLCreateBoardIntent, v10);
  v18._object = (void *)0x8000000101010A90;
  v18._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v13;
  v20 = v71;
  v21 = v69;
  v69(v2, v19, v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v15(v2, v20);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v73(v9, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for CRLCreateBoardIntent, v10);
  v23._countAndFlagsBits = 0x77656E20656B614DLL;
  v23._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = v70;
  v21(v2, v70, v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v58 = v15;
  v15(v2, v20);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v26 = v72;
  v73(v9, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for CRLCreateBoardIntent, v10);
  v27._countAndFlagsBits = 0x77656E20656B614DLL;
  v27._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = v24;
  v29 = v24;
  v30 = v71;
  v31 = v69;
  v69(v2, v29, v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v15(v2, v30);
  v32._countAndFlagsBits = 0x6472616F6220;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v73(v9, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLCreateBoardIntent, v10);
  v33._countAndFlagsBits = 0x77656E20656B614DLL;
  v33._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v31(v2, v28, v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v34 = v58;
  v58(v2, v30);
  v35._countAndFlagsBits = 0x7361766E616320;
  v35._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v36 = v72;
  v37 = v73;
  v73(v9, v72);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x8000000101010AB0, &type metadata for CRLCreateBoardIntent, v10);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v37(v9, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for CRLCreateBoardIntent, v10);
  v38._countAndFlagsBits = 0x2061207472617453;
  v38._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v39 = v30;
  v40 = v69;
  v69(v2, v70, v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v34(v2, v30);
  v41._countAndFlagsBits = 0x6472616F6220;
  v41._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v42 = v73;
  v73(v9, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for CRLCreateBoardIntent, v10);
  v43._countAndFlagsBits = 0x2061207472617453;
  v43._object = (void *)0xEC0000002077656ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  v40(v2, v70, v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v2, v3);
  v34(v2, v39);
  v44._countAndFlagsBits = 0x7361766E616320;
  v44._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLCreateBoardIntent, v10);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v46 = v72;
  v42(v9, v72);
  _AssistantIntent.Phrase.init(stringLiteral:)(v66, 0x8000000101010AD0, &type metadata for CRLCreateBoardIntent, v10);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v42(v9, v46);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x8000000101010AF0, &type metadata for CRLCreateBoardIntent, v10);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v42(v9, v46);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x8000000101010B10, &type metadata for CRLCreateBoardIntent, v10);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v9, &type metadata for CRLCreateBoardIntent, v10);
  v42(v9, v46);
  v50 = sub_1004B804C(&qword_1014126A8);
  v51 = swift_allocObject(v50, 136, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100F0C660;
  v52 = v67;
  *(_QWORD *)(v51 + 32) = v68;
  *(_QWORD *)(v51 + 40) = v52;
  v53 = v64;
  *(_QWORD *)(v51 + 48) = v65;
  *(_QWORD *)(v51 + 56) = v53;
  v54 = v62;
  *(_QWORD *)(v51 + 64) = v63;
  *(_QWORD *)(v51 + 72) = v54;
  v55 = v60;
  *(_QWORD *)(v51 + 80) = v61;
  *(_QWORD *)(v51 + 88) = v55;
  *(_QWORD *)(v51 + 96) = v59;
  *(_QWORD *)(v51 + 104) = v45;
  *(_QWORD *)(v51 + 112) = v47;
  *(_QWORD *)(v51 + 120) = v48;
  *(_QWORD *)(v51 + 128) = v49;
  v56 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v56;
}

uint64_t sub_100D8892C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;

  v76 = sub_1004B804C(&qword_101412698);
  v2 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1014126A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1005E4338();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for CRLCreateBoardIntent, v8);
  v9._object = (void *)0x8000000101010970;
  v9._countAndFlagsBits = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath("X;T");
  v11 = sub_100D9AD84(&qword_101412690, (uint64_t *)&unk_1013E1C80, (void (*)(void))sub_100D9A964);
  v74 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v75 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v76;
  v75(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CRLCreateBoardIntent, v8);
  v16._countAndFlagsBits = 0xD00000000000001ALL;
  v16._object = (void *)0x8000000101010990;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath("X;T");
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v21 = v75;
  v75(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for CRLCreateBoardIntent, v8);
  v22._countAndFlagsBits = 0xD000000000000015;
  v22._object = (void *)0x80000001010109B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v23 = swift_getKeyPath("X;T");
  v73 = v11;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v11);
  v25 = swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v21(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for CRLCreateBoardIntent, v8);
  v27._countAndFlagsBits = 0xD000000000000017;
  v27._object = (void *)0x80000001010109D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath("X;T");
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v11);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v32 = v75;
  v33 = v76;
  v75(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for CRLCreateBoardIntent, v8);
  v34._countAndFlagsBits = 0xD00000000000001ELL;
  v34._object = (void *)0x80000001010109F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath("X;T");
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v73);
  v37 = swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v5, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v32(v4, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLCreateBoardIntent, v8);
  v39._countAndFlagsBits = 0x656E206120646441;
  v39._object = (void *)0xEA00000000002077;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath("X;T");
  v41 = v73;
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v40, v73);
  v43 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v5, v43);
  swift_release(v42);
  v44._countAndFlagsBits = 0x6472616F6220;
  v44._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v75(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for CRLCreateBoardIntent, v8);
  v45._object = (void *)0x8000000101010A10;
  v45._countAndFlagsBits = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath("X;T");
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v41);
  v48 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v5, v48);
  swift_release(v47);
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v50 = v75;
  v51 = v76;
  v75(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for CRLCreateBoardIntent, v8);
  v52._countAndFlagsBits = 0xD00000000000001BLL;
  v52._object = (void *)0x8000000101010A30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath("X;T");
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v41);
  v55 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v5, v55);
  swift_release(v54);
  v56._countAndFlagsBits = 0x6472616F6220;
  v56._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLCreateBoardIntent, v8);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLCreateBoardIntent, v8);
  v50(v4, v51);
  v58 = sub_1004B804C(&qword_1014126A8);
  v59 = swift_allocObject(v58, 96, 7);
  *(_OWORD *)(v59 + 16) = xmmword_100F21D60;
  v60 = v71;
  *(_QWORD *)(v59 + 32) = v72;
  *(_QWORD *)(v59 + 40) = v60;
  v61 = v69;
  *(_QWORD *)(v59 + 48) = v70;
  *(_QWORD *)(v59 + 56) = v61;
  v62 = v67;
  *(_QWORD *)(v59 + 64) = v68;
  *(_QWORD *)(v59 + 72) = v62;
  *(_QWORD *)(v59 + 80) = v66;
  *(_QWORD *)(v59 + 88) = v57;
  v63 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_100D890F0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("X;T", v2);
  v6 = sub_100D9AD84(&qword_101412690, (uint64_t *)&unk_1013E1C80, (void (*)(void))sub_100D9A964);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1005E4338();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D89218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  Swift::String v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  Swift::String v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  Swift::String v48;
  void (*v49)(char *, uint64_t);
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;

  v70 = sub_1004B804C(&qword_101412678);
  v2 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412680);
  __chkstk_darwin(v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100D6803C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v9._countAndFlagsBits = 0x6D206574656C6544;
  v9._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath("x;T");
  v11 = sub_100D9AE8C();
  v71 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0x6472616F6220;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v68 = v15;
  v69 = v16;
  v17 = v70;
  v16(v4, v70);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v18._countAndFlagsBits = 0x2064697220746547;
  v18._object = (void *)0xEE0020796D20666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath("x;T");
  v72 = v11;
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v11);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v5, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0x6472616F6220;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v23 = v69;
  v69(v4, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v24._countAndFlagsBits = 0x6D2065766F6D6552;
  v24._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath("x;T");
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v11);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0x6472616F6220;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v29 = v70;
  v23(v4, v70);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v30._countAndFlagsBits = 0x74206574656C6544;
  v30._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = swift_getKeyPath("x;T");
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v31, v72);
  v33 = swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v5, v33);
  swift_release(v32);
  v34._countAndFlagsBits = 0x6472616F6220;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v65 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v35 = v29;
  v36 = v69;
  v69(v4, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v37._object = (void *)0x8000000101010950;
  v37._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath("x;T");
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v38, v72);
  v40 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v5, v40);
  swift_release(v39);
  v41._countAndFlagsBits = 0x20656874206F7420;
  v41._object = (void *)0xED00006873617274;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v42 = v70;
  v36(v4, v70);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v43._countAndFlagsBits = 0x2065766F6D6552;
  v43._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  v44 = swift_getKeyPath("x;T");
  v45 = v72;
  v46 = _AssistantIntent.IntentProjection.subscript.getter(v44, v72);
  v47 = swift_release(v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v46, v5, v47);
  swift_release(v46);
  v48._countAndFlagsBits = 0x6472616F6220;
  v48._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v49 = v69;
  v69(v4, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for CRLDeleteBoardIntent, v8);
  v50._countAndFlagsBits = 0x796D206873617254;
  v50._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v51 = swift_getKeyPath("x;T");
  v52 = _AssistantIntent.IntentProjection.subscript.getter(v51, v45);
  v53 = swift_release(v51);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v52, v5, v53);
  swift_release(v52);
  v54._countAndFlagsBits = 0x6472616F6220;
  v54._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLDeleteBoardIntent, v8);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLDeleteBoardIntent, v8);
  v49(v4, v42);
  v56 = sub_1004B804C(&qword_101412688);
  v57 = swift_allocObject(v56, 88, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100EF7D10;
  v58 = v67;
  *(_QWORD *)(v57 + 32) = v68;
  *(_QWORD *)(v57 + 40) = v58;
  v59 = v65;
  *(_QWORD *)(v57 + 48) = v66;
  *(_QWORD *)(v57 + 56) = v59;
  v60 = v63;
  *(_QWORD *)(v57 + 64) = v64;
  *(_QWORD *)(v57 + 72) = v60;
  *(_QWORD *)(v57 + 80) = v55;
  v61 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_100D89924(uint64_t a1)
{
  return sub_100D959D8(a1, "x;T",
           (uint64_t (*)(void))sub_100D9AE8C,
           (uint64_t (*)(__n128))sub_100D6803C,
           (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D89948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a1;
  v59 = sub_1004B804C(&qword_101412658);
  v1 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412660);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1005761F4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for CRLOpenBoardIntent, v7);
  v8._countAndFlagsBits = 0x20796D206E65704FLL;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(byte_100F37F80);
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v58 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x6472616F6220;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v59;
  v14(v3, v59);
  v57 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for CRLOpenBoardIntent, v7);
  v16._countAndFlagsBits = 0x20656D20776F6853;
  v16._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(byte_100F37F80);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0x6472616F6220;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for CRLOpenBoardIntent, v7);
  v21._object = (void *)0x80000001010108D0;
  v21._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(byte_100F37F80);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v58);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x6472616F6220;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v57(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CRLOpenBoardIntent, v7);
  v26._countAndFlagsBits = 0xD000000000000016;
  v26._object = (void *)0x80000001010108F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(byte_100F37F80);
  v28 = v58;
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v27, v58);
  v30 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0x6472616F6220;
  v31._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v32 = v57;
  v57(v3, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for CRLOpenBoardIntent, v7);
  v33._object = (void *)0x8000000101010910;
  v33._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37F80);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v28);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v4, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v38 = v59;
  v32(v3, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for CRLOpenBoardIntent, v7);
  v39._countAndFlagsBits = 0xD000000000000014;
  v39._object = (void *)0x8000000101010930;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(byte_100F37F80);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v58);
  v42 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v4, v42);
  swift_release(v41);
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLOpenBoardIntent, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLOpenBoardIntent, v7);
  v32(v3, v38);
  v45 = sub_1004B804C(&qword_101412668);
  v46 = swift_allocObject(v45, 80, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100EFD140;
  v47 = v55;
  *(_QWORD *)(v46 + 32) = v56;
  *(_QWORD *)(v46 + 40) = v47;
  v48 = v53;
  *(_QWORD *)(v46 + 48) = v54;
  *(_QWORD *)(v46 + 56) = v48;
  *(_QWORD *)(v46 + 64) = v52;
  *(_QWORD *)(v46 + 72) = v44;
  v49 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_100D89F7C(uint64_t a1)
{
  return sub_100D89F98(a1, byte_100F37F80, (uint64_t (*)(__n128))sub_1005761F4, (uint64_t)sub_100D8A0D0);
}

uint64_t sub_100D89F98(uint64_t a1, const char *a2, uint64_t (*a3)(__n128), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v7 = type metadata accessor for _AssistantIntent.Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2, v9);
  v13 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v13);
  v15 = swift_release(KeyPath);
  v16 = a3(v15);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, a4, 0, v16);
  v17 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v18 = sub_1004B804C(&qword_101412490);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v19 + 32) = v17;
  v20 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100D8A0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6F697461636156, 0xEE00393130322073);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010100FDF0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010100FE10);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F74736E69617242, 0xED0000676E696D72);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F68502065766146, 0xEB00000000736F74);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x62206C6F6F686353, 0xEC0000006472616FLL);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2073636973796850, 0xED00007373616C63);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64656C7469746E55, 0xE800000000000000);
  v8 = sub_1004B804C(&qword_101412480);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100F21D60;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D8A270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;

  v62 = sub_1004B804C(&qword_101412640);
  v2 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412648);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100C53F48();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLInsertTextToBoardIntent, v8);
  v9._countAndFlagsBits = 0x20747265736E49;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37F30);
  v57 = sub_1004B7878(&qword_1013E8270, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v57);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x20796D206E6F20;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(byte_100F37F08);
  v15 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v63 = v15;
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v14, v15);
  v17 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertTextToBoardIntent, v8);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertTextToBoardIntent, v8);
  v61 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19 = v62;
  v61(v4, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 2, &type metadata for CRLInsertTextToBoardIntent, v8);
  v20._object = (void *)0x8000000101010780;
  v20._countAndFlagsBits = 0xD000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(byte_100F37F08);
  v60 = a1;
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v15);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 8250;
  v24._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(byte_100F37F30);
  v26 = v57;
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v25, v57);
  v28 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v5, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertTextToBoardIntent, v8);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertTextToBoardIntent, v8);
  v30 = v61;
  v61(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, &type metadata for CRLInsertTextToBoardIntent, v8);
  v31._countAndFlagsBits = 0x2065687420646441;
  v31._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath(byte_100F37F30);
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v26);
  v34 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 0x206F746E6920;
  v35._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(byte_100F37F08);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v63);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0x6472616F6220;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertTextToBoardIntent, v8);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertTextToBoardIntent, v8);
  v40 = v62;
  v30(v4, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLInsertTextToBoardIntent, v8);
  v41._countAndFlagsBits = 0x206574697257;
  v41._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(byte_100F37F30);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v26);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0x20796D206E6F20;
  v45._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath(byte_100F37F08);
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v63);
  v48 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v5, v48);
  swift_release(v47);
  v49._countAndFlagsBits = 0x6472616F6220;
  v49._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertTextToBoardIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertTextToBoardIntent, v8);
  v61(v4, v40);
  v51 = sub_1004B804C(&qword_101412650);
  v52 = swift_allocObject(v51, 64, 7);
  *(_OWORD *)(v52 + 16) = xmmword_100EF5E30;
  v53 = v58;
  *(_QWORD *)(v52 + 32) = v59;
  *(_QWORD *)(v52 + 40) = v53;
  *(_QWORD *)(v52 + 48) = v56;
  *(_QWORD *)(v52 + 56) = v50;
  v54 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v54;
}

uint64_t sub_100D8A894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for AttributedString(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_100D8A964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_1005112BC(a1, (uint64_t)&v9 - v6);
  sub_1005112BC((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_1005761B8((uint64_t)v7);
}

uint64_t sub_100D8AA0C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37F08, v2);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100C53F48();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37F30);
  v12 = sub_1004B7878(&qword_1013E8270, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D8ABB8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D8ABBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  char *v39;
  unint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  Swift::String v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  Swift::String v71;
  unint64_t v72;
  char *v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  Swift::String v88;
  unint64_t v89;
  uint64_t v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  Swift::String v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  Swift::String v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  Swift::String v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v111[2];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v120 = sub_1004B804C(&qword_101412640);
  v123 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_101412648);
  __chkstk_darwin(v3);
  v5 = (char *)v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100C53F48();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 3, &type metadata for CRLInsertTextToBoardIntent, v6);
  v7._countAndFlagsBits = 0x20747265736E49;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F37F30);
  v121 = sub_1004B7878(&qword_1013E8270, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v9 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v121);
  v10 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v3, v10);
  swift_release(v9);
  v11._countAndFlagsBits = 0x20796D206E6F20;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  v12 = swift_getKeyPath(byte_100F37F08);
  v13 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v117 = v13;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  v15 = swift_release(v12);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v3, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0x69206472616F6220;
  v16._object = (void *)0xEE002061206F746ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(byte_100F37F58);
  v18 = sub_100D9AD84(&qword_101412630, &qword_101412638, (void (*)(void))sub_1009EDF88);
  v122 = v18;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v17, v18);
  v20 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v3, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = v119;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v6);
  v23 = v6;
  v118 = v6;
  v116 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v22, &type metadata for CRLInsertTextToBoardIntent, v6);
  v123 = *(_QWORD *)(v123 + 8);
  v24 = v120;
  ((void (*)(char *, uint64_t))v123)(v22, v120);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(42, 3, &type metadata for CRLInsertTextToBoardIntent, v23);
  v25._object = (void *)0x8000000101010780;
  v25._countAndFlagsBits = 0xD000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(byte_100F37F08);
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v13);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v3, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0x206120736120;
  v29._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(byte_100F37F58);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v18);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v3, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 32;
  v33._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37F30);
  v35 = v121;
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v34, v121);
  v37 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v3, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v40 = v118;
  v39 = v119;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v118);
  v115 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v39, &type metadata for CRLInsertTextToBoardIntent, v40);
  ((void (*)(char *, uint64_t))v123)(v39, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 3, &type metadata for CRLInsertTextToBoardIntent, v40);
  v41._countAndFlagsBits = 0x2065687420646441;
  v41._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(byte_100F37F30);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v35);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v3, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0x206F746E6920;
  v45._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath(byte_100F37F08);
  v47 = v117;
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v46, v117);
  v49 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v3, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0x61206472616F6220;
  v50._object = (void *)0xEA00000000002073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v51 = swift_getKeyPath(byte_100F37F58);
  v52 = _AssistantIntent.IntentProjection.subscript.getter(v51, v122);
  v53 = swift_release(v51);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v52, v3, v53);
  swift_release(v52);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v40);
  v114 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v39, &type metadata for CRLInsertTextToBoardIntent, v40);
  v55 = v39;
  v56 = v120;
  v57 = (void (*)(char *, uint64_t))v123;
  ((void (*)(char *, uint64_t))v123)(v55, v120);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 3, &type metadata for CRLInsertTextToBoardIntent, v40);
  v58._countAndFlagsBits = 0x206574697257;
  v58._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath(byte_100F37F30);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v121);
  v61 = swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v3, v61);
  swift_release(v60);
  v62._countAndFlagsBits = 0x20796D206E6F20;
  v62._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  v63 = swift_getKeyPath(byte_100F37F08);
  v111[1] = a1;
  v64 = _AssistantIntent.IntentProjection.subscript.getter(v63, v47);
  v65 = swift_release(v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v64, v3, v65);
  swift_release(v64);
  v66._countAndFlagsBits = 0x69206472616F6220;
  v66._object = (void *)0xEC0000002061206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v66);
  v67 = swift_getKeyPath(byte_100F37F58);
  v68 = v122;
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v67, v122);
  v70 = swift_release(v67);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v3, v70);
  swift_release(v69);
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v71);
  v72 = v118;
  v73 = v119;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v118);
  v113 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertTextToBoardIntent, v72);
  v57(v73, v56);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 3, &type metadata for CRLInsertTextToBoardIntent, v72);
  v74._countAndFlagsBits = 0x206574697257;
  v74._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v74);
  v75 = swift_getKeyPath(byte_100F37F30);
  v76 = v121;
  v77 = _AssistantIntent.IntentProjection.subscript.getter(v75, v121);
  v78 = swift_release(v75);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v77, v3, v78);
  swift_release(v77);
  v79._countAndFlagsBits = 0x2061206E6920;
  v79._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v79);
  v80 = swift_getKeyPath(byte_100F37F58);
  v81 = _AssistantIntent.IntentProjection.subscript.getter(v80, v68);
  v82 = swift_release(v80);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v81, v3, v82);
  swift_release(v81);
  v83._countAndFlagsBits = 544108320;
  v83._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v83);
  v84 = swift_getKeyPath(byte_100F37F08);
  v85 = v117;
  v86 = _AssistantIntent.IntentProjection.subscript.getter(v84, v117);
  v87 = swift_release(v84);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v86, v3, v87);
  swift_release(v86);
  v88._countAndFlagsBits = 0x6472616F6220;
  v88._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v88);
  v89 = v118;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v118);
  v112 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertTextToBoardIntent, v89);
  v90 = v120;
  ((void (*)(char *, uint64_t))v123)(v73, v120);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 3, &type metadata for CRLInsertTextToBoardIntent, v89);
  v91._countAndFlagsBits = 0x20686361747441;
  v91._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v91);
  v92 = swift_getKeyPath(byte_100F37F30);
  v93 = _AssistantIntent.IntentProjection.subscript.getter(v92, v76);
  v94 = swift_release(v92);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v93, v3, v94);
  swift_release(v93);
  v95._countAndFlagsBits = 0x2061206E6920;
  v95._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v95);
  v96 = swift_getKeyPath(byte_100F37F58);
  v97 = _AssistantIntent.IntentProjection.subscript.getter(v96, v122);
  v98 = swift_release(v96);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v97, v3, v98);
  swift_release(v97);
  v99._countAndFlagsBits = 544108320;
  v99._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v99);
  v100 = swift_getKeyPath(byte_100F37F08);
  v101 = _AssistantIntent.IntentProjection.subscript.getter(v100, v85);
  v102 = swift_release(v100);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v101, v3, v102);
  swift_release(v101);
  v103._countAndFlagsBits = 0x6472616F6220;
  v103._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v103);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLInsertTextToBoardIntent, v89);
  v104 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertTextToBoardIntent, v89);
  ((void (*)(char *, uint64_t))v123)(v73, v90);
  v105 = sub_1004B804C(&qword_101412650);
  v106 = swift_allocObject(v105, 80, 7);
  *(_OWORD *)(v106 + 16) = xmmword_100EFD140;
  v107 = v115;
  *(_QWORD *)(v106 + 32) = v116;
  *(_QWORD *)(v106 + 40) = v107;
  v108 = v113;
  *(_QWORD *)(v106 + 48) = v114;
  *(_QWORD *)(v106 + 56) = v108;
  *(_QWORD *)(v106 + 64) = v112;
  *(_QWORD *)(v106 + 72) = v104;
  v109 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v109;
}

uint64_t sub_100D8B6A8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37F08, v2);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100C53F48();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37F30);
  v12 = sub_1004B7878(&qword_1013E8270, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D8ABB8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = swift_getKeyPath(byte_100F37F58);
  v16 = sub_100D9AD84(&qword_101412630, &qword_101412638, (void (*)(void))sub_1009EDF88);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Value.init<A>(for:builder:)(v17, sub_100D8B8D0, 0, v8);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v19 = sub_1004B804C(&qword_101412490);
  v20 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5550;
  *(_QWORD *)(v20 + 32) = v9;
  *(_QWORD *)(v20 + 40) = v14;
  *(_QWORD *)(v20 + 48) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100D8B8D0()
{
  return sub_100D94E0C(0x4E20796B63697453, 0xEB0000000065746FLL, 0x786F6274786554, 0xE700000000000000);
}

uint64_t sub_100D8B904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  Swift::String v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  v76 = sub_1004B804C(&qword_101412618);
  v2 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v4 = (char *)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412620);
  __chkstk_darwin(v5);
  v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1005B8548();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v9._object = (void *)0x8000000101010830;
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37EE0);
  v77 = sub_100618450();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v77);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 544175136;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath("8<T");
  v78 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v78);
  v16 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v5, v16);
  swift_release(v15);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v74 = v18;
  v75 = v19;
  v20 = v76;
  v19(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v21._countAndFlagsBits = 0xD000000000000016;
  v21._object = (void *)0x8000000101010850;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(byte_100F37EE0);
  v23 = v77;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v77);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 544175136;
  v26._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath("8<T");
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v78);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v5, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v31 = v20;
  v32 = v75;
  v75(v4, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v33._object = (void *)0x8000000101010870;
  v33._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37EE0);
  v70[1] = a1;
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v23);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v5, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 544175136;
  v37._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath("8<T");
  v39 = v78;
  v40 = _AssistantIntent.IntentProjection.subscript.getter(v38, v78);
  v41 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v40, v5, v41);
  swift_release(v40);
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v43 = v76;
  v32(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v44._countAndFlagsBits = 0xD00000000000001ALL;
  v44._object = (void *)0x8000000101010890;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v45 = swift_getKeyPath(byte_100F37EE0);
  v46 = _AssistantIntent.IntentProjection.subscript.getter(v45, v77);
  v47 = swift_release(v45);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v46, v5, v47);
  swift_release(v46);
  v48._countAndFlagsBits = 544175136;
  v48._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = swift_getKeyPath("8<T");
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v39);
  v51 = swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v5, v51);
  swift_release(v50);
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v53 = v75;
  v75(v4, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v54._countAndFlagsBits = 0x206574697257;
  v54._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v55 = swift_getKeyPath(byte_100F37EE0);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v77);
  v57 = swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v5, v57);
  swift_release(v56);
  v58._countAndFlagsBits = 0xD000000000000018;
  v58._object = (void *)0x80000001010108B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath("8<T");
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v78);
  v61 = swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v5, v61);
  swift_release(v60);
  v62._countAndFlagsBits = 0x6472616F6220;
  v62._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddStickyNoteToBoardIntent, v8);
  v53(v4, v76);
  v64 = sub_1004B804C(&qword_101412628);
  v65 = swift_allocObject(v64, 72, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100F05060;
  v66 = v73;
  *(_QWORD *)(v65 + 32) = v74;
  *(_QWORD *)(v65 + 40) = v66;
  v67 = v71;
  *(_QWORD *)(v65 + 48) = v72;
  *(_QWORD *)(v65 + 56) = v67;
  *(_QWORD *)(v65 + 64) = v63;
  v68 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_100D8C020()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("8<T", v2);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1005B8548();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37EE0);
  v12 = sub_100618450();
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D8ABB8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D8C1B4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = sub_1004B804C(&qword_101412618);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412620);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1005B8548();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v8._object = (void *)0x80000001010107B0;
  v8._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath("8<T");
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v40 = v10;
  v46 = a1;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v41 = *(void (**)(char *, uint64_t))(v43 + 8);
  v14 = v45;
  v41(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v15._countAndFlagsBits = 0xD00000000000001BLL;
  v15._object = (void *)0x80000001010107D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath("8<T");
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v4, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0x6472616F6220;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v20 = v41;
  v41(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v21._countAndFlagsBits = 0xD000000000000017;
  v21._object = (void *)0x80000001010107F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath("8<T");
  v23 = v40;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v40);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v27 = v45;
  v20(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v28._countAndFlagsBits = 0xD000000000000016;
  v28._object = (void *)0x8000000101010810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath("8<T");
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v23);
  v31 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddStickyNoteToBoardIntent, v7);
  v20(v3, v27);
  v34 = sub_1004B804C(&qword_101412628);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EF5E30;
  v36 = v43;
  *(_QWORD *)(v35 + 32) = v44;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = v42;
  *(_QWORD *)(v35 + 56) = v33;
  v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_100D8C64C(uint64_t a1)
{
  return sub_100D89F98(a1, "8<T", (uint64_t (*)(__n128))sub_1005B8548, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D8C668(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  void (*v51)(char *, uint64_t);
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  Swift::String v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  unint64_t v88;

  v87 = sub_1004B804C(&qword_101412600);
  v2 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412608);
  __chkstk_darwin(v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100C54004();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v9._countAndFlagsBits = 0x20747265736E49;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath("X<T");
  v88 = sub_100618450();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v88);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x20796D206E6F20;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath("x<T");
  v15 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v14, v15);
  v17 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v83 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v86 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19 = v87;
  v86(v4, v87);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v20._countAndFlagsBits = 0x20747265736E49;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("X<T");
  v84 = a1;
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v88);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5, v23);
  swift_release(v22);
  v24._object = (void *)0x8000000101010760;
  v24._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath("x<T");
  v85 = v15;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v15);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0x6472616F6220;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v29 = v19;
  v30 = v86;
  v86(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v31._countAndFlagsBits = 0xD000000000000023;
  v31._object = (void *)0x8000000101010780;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath("x<T");
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v15);
  v34 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 8250;
  v35._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath("X<T");
  v37 = v88;
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v36, v88);
  v39 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v81 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v41 = v87;
  v30(v4, v87);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v42._countAndFlagsBits = 0x2065687420646441;
  v42._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath("X<T");
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v37);
  v45 = swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0x206F746E6920;
  v46._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath("x<T");
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v85);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v5, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0x6472616F6220;
  v50._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v80 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v51 = v86;
  v86(v4, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v52._countAndFlagsBits = 543450177;
  v52._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath("X<T");
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v88);
  v55 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v5, v55);
  swift_release(v54);
  v56._countAndFlagsBits = 544175136;
  v56._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = swift_getKeyPath("x<T");
  v58 = v85;
  v59 = _AssistantIntent.IntentProjection.subscript.getter(v57, v85);
  v60 = swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v59, v5, v60);
  swift_release(v59);
  v61._countAndFlagsBits = 0x6472616F6220;
  v61._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v79 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v62 = v87;
  v51(v4, v87);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLAddTextToBoardIntent, v8);
  v63._countAndFlagsBits = 0x206574697257;
  v63._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v63);
  v64 = swift_getKeyPath("X<T");
  v65 = _AssistantIntent.IntentProjection.subscript.getter(v64, v88);
  v66 = swift_release(v64);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v65, v5, v66);
  swift_release(v65);
  v67._countAndFlagsBits = 0x20796D206E6F20;
  v67._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v68 = swift_getKeyPath("x<T");
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v68, v58);
  v70 = swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v5, v70);
  swift_release(v69);
  v71._countAndFlagsBits = 0x6472616F6220;
  v71._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v71);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLAddTextToBoardIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLAddTextToBoardIntent, v8);
  v86(v4, v62);
  v73 = sub_1004B804C(&qword_101412610);
  v74 = swift_allocObject(v73, 80, 7);
  *(_OWORD *)(v74 + 16) = xmmword_100EFD140;
  v75 = v82;
  *(_QWORD *)(v74 + 32) = v83;
  *(_QWORD *)(v74 + 40) = v75;
  v76 = v80;
  *(_QWORD *)(v74 + 48) = v81;
  *(_QWORD *)(v74 + 56) = v76;
  *(_QWORD *)(v74 + 64) = v79;
  *(_QWORD *)(v74 + 72) = v72;
  v77 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v77;
}

uint64_t sub_100D8CED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_100A14160(a1, (uint64_t)&v9 - v6);
  sub_100A14160((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_1005B858C((uint64_t)v7);
}

uint64_t sub_100D8CF7C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("x<T", v2);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100C54004();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath("X<T");
  v12 = sub_100618450();
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D8ABB8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D8D110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v58 = sub_1004B804C(&qword_101412600);
  v1 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412608);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100C54004();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v8._countAndFlagsBits = 0xD000000000000016;
  v55 = 0xD000000000000016;
  v8._object = (void *)0x80000001010106A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath("x<T");
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v60 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x6472616F6220;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v58;
  v14(v3, v58);
  v59 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v16._object = (void *)0x80000001010106C0;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath("x<T");
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0x6472616F6220;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v21._object = (void *)0x80000001010106E0;
  v21._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath("x<T");
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v60);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x6472616F6220;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v26 = v15;
  v59(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v27._countAndFlagsBits = 0xD00000000000001BLL;
  v27._object = (void *)0x8000000101010700;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath("x<T");
  v29 = v60;
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v28, v60);
  v31 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0x6472616F6220;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v33 = v59;
  v59(v3, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v34._object = (void *)0x8000000101010720;
  v34._countAndFlagsBits = v55;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath("x<T");
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v29);
  v37 = swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0x6472616F6220;
  v38._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v39 = v58;
  v33(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for CRLAddTextToBoardIntent, v7);
  v40._countAndFlagsBits = 0xD000000000000019;
  v40._object = (void *)0x8000000101010740;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v41 = swift_getKeyPath("x<T");
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v41, v60);
  v43 = swift_release(v41);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v4, v43);
  swift_release(v42);
  v44._countAndFlagsBits = 0x6472616F6220;
  v44._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLAddTextToBoardIntent, v7);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLAddTextToBoardIntent, v7);
  v33(v3, v39);
  v46 = sub_1004B804C(&qword_101412610);
  v47 = swift_allocObject(v46, 80, 7);
  *(_OWORD *)(v47 + 16) = xmmword_100EFD140;
  v48 = v56;
  *(_QWORD *)(v47 + 32) = v57;
  *(_QWORD *)(v47 + 40) = v48;
  v49 = v53;
  *(_QWORD *)(v47 + 48) = v54;
  *(_QWORD *)(v47 + 56) = v49;
  *(_QWORD *)(v47 + 64) = v55;
  *(_QWORD *)(v47 + 72) = v45;
  v50 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_100D8D77C(uint64_t a1)
{
  return sub_100D89F98(a1, "x<T", (uint64_t (*)(__n128))sub_100C54004, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D8D798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  unint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  Swift::String v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  Swift::String v74;
  char *v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  Swift::String v84;
  char *v85;
  unint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  Swift::String v97;
  unint64_t v98;
  Swift::String v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  Swift::String v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  Swift::String v109;
  unint64_t v110;
  Swift::String v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  Swift::String v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  Swift::String v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  Swift::String v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  Swift::String v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  Swift::String v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  unint64_t v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v156 = sub_1004B804C(&qword_1014125E8);
  v2 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v4 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1014125F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10089552C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for CRLInsertURLToBoardIntent, v8);
  v9._countAndFlagsBits = 543450177;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37E40);
  v158 = sub_1004B7878(&qword_1014125E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v158);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x20796D206F7420;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(byte_100F37E18);
  v157 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v157);
  v16 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v5, v16);
  swift_release(v15);
  v17._countAndFlagsBits = 0x7361766E616320;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v8);
  v151 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertURLToBoardIntent, v8);
  v155 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18 = v156;
  v155(v4, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for CRLInsertURLToBoardIntent, v8);
  v19._countAndFlagsBits = 543450177;
  v19._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v20 = swift_getKeyPath(byte_100F37E40);
  v154 = a1;
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v158);
  v22 = swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v5, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 0x6F74206B6E696C20;
  v23._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(byte_100F37E18);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v157);
  v26 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0x7361766E616320;
  v27._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v8);
  v150 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertURLToBoardIntent, v8);
  v155(v4, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for CRLInsertURLToBoardIntent, v8);
  v28._countAndFlagsBits = 543450177;
  v28._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(byte_100F37E40);
  v30 = v158;
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v29, v158);
  v32 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5, v32);
  swift_release(v31);
  v33._object = (void *)0x8000000101010660;
  v33._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37E18);
  v35 = v157;
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v34, v157);
  v37 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v5, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0x6472616F6220;
  v38._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v39 = v8;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v8);
  v153 = v8;
  v149 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertURLToBoardIntent, v8);
  v40 = v155;
  v41 = v156;
  v155(v4, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for CRLInsertURLToBoardIntent, v39);
  v42._countAndFlagsBits = 543450177;
  v42._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath(byte_100F37E40);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v30);
  v45 = swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0xD000000000000012;
  v46._object = (void *)0x8000000101010680;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath(byte_100F37E18);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v35);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v5, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0x6472616F6220;
  v50._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v51 = v153;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v153);
  v148 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertURLToBoardIntent, v51);
  v40(v4, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for CRLInsertURLToBoardIntent, v51);
  v52._countAndFlagsBits = 0x20747265736E49;
  v52._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath(byte_100F37E40);
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v158);
  v55 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v5, v55);
  swift_release(v54);
  v56._countAndFlagsBits = 544175136;
  v56._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = swift_getKeyPath(byte_100F37E18);
  v58 = _AssistantIntent.IntentProjection.subscript.getter(v57, v35);
  v59 = swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v58, v5, v59);
  swift_release(v58);
  v60._countAndFlagsBits = 0x6472616F6220;
  v60._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  v152 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v51);
  v61 = v51;
  v147 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertURLToBoardIntent, v51);
  v62 = v4;
  v64 = v155;
  v63 = v156;
  v155(v62, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLInsertURLToBoardIntent, v61);
  v65._countAndFlagsBits = 0x20747265736E49;
  v65._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  v66 = swift_getKeyPath(byte_100F37E40);
  v67 = v158;
  v68 = _AssistantIntent.IntentProjection.subscript.getter(v66, v158);
  v69 = swift_release(v66);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v68, v5, v69);
  swift_release(v68);
  v70._countAndFlagsBits = 0x20796D206F7420;
  v70._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  v71 = swift_getKeyPath(byte_100F37E18);
  v72 = _AssistantIntent.IntentProjection.subscript.getter(v71, v157);
  v73 = swift_release(v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v72, v5, v73);
  swift_release(v72);
  v74._countAndFlagsBits = 0x6472616F6220;
  v74._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v74);
  v75 = v152;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v61);
  v146 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v75, &type metadata for CRLInsertURLToBoardIntent, v61);
  v64(v75, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLInsertURLToBoardIntent, v61);
  v76._countAndFlagsBits = 0x20747265736E49;
  v76._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v76);
  v77 = swift_getKeyPath(byte_100F37E40);
  v78 = _AssistantIntent.IntentProjection.subscript.getter(v77, v67);
  v79 = swift_release(v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v78, v5, v79);
  swift_release(v78);
  v80._countAndFlagsBits = 0x20796D206F7420;
  v80._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v80);
  v81 = swift_getKeyPath(byte_100F37E18);
  v82 = _AssistantIntent.IntentProjection.subscript.getter(v81, v157);
  v83 = swift_release(v81);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v82, v5, v83);
  swift_release(v82);
  v84._countAndFlagsBits = 0x7361766E616320;
  v84._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v84);
  v85 = v152;
  v86 = v61;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v61);
  v145 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v85, &type metadata for CRLInsertURLToBoardIntent, v61);
  v87 = v155;
  v88 = v156;
  v155(v85, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLInsertURLToBoardIntent, v86);
  v89._countAndFlagsBits = 0x20747265736E49;
  v89._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v89);
  v90 = swift_getKeyPath(byte_100F37E40);
  v91 = _AssistantIntent.IntentProjection.subscript.getter(v90, v158);
  v92 = swift_release(v90);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v91, v5, v92);
  swift_release(v91);
  v93._countAndFlagsBits = 0x206F74206C727520;
  v93._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v93);
  v94 = swift_getKeyPath(byte_100F37E18);
  v95 = _AssistantIntent.IntentProjection.subscript.getter(v94, v157);
  v96 = swift_release(v94);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v95, v5, v96);
  swift_release(v95);
  v97._countAndFlagsBits = 0x6472616F6220;
  v97._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v97);
  v98 = v153;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v153);
  v144 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v85, &type metadata for CRLInsertURLToBoardIntent, v98);
  v87(v85, v88);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for CRLInsertURLToBoardIntent, v98);
  v99._countAndFlagsBits = 0x20747265736E49;
  v99._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v99);
  v100 = swift_getKeyPath(byte_100F37E40);
  v101 = v158;
  v102 = _AssistantIntent.IntentProjection.subscript.getter(v100, v158);
  v103 = swift_release(v100);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v102, v5, v103);
  swift_release(v102);
  v104._countAndFlagsBits = 0x6F74206B6E696C20;
  v104._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v104);
  v105 = swift_getKeyPath(byte_100F37E18);
  v106 = v157;
  v107 = _AssistantIntent.IntentProjection.subscript.getter(v105, v157);
  v108 = swift_release(v105);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v107, v5, v108);
  swift_release(v107);
  v109._countAndFlagsBits = 0x6472616F6220;
  v109._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v109);
  v110 = v153;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v153);
  v143 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v85, &type metadata for CRLInsertURLToBoardIntent, v110);
  v155(v85, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for CRLInsertURLToBoardIntent, v110);
  v111._countAndFlagsBits = 544503120;
  v111._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v111);
  v112 = swift_getKeyPath(byte_100F37E40);
  v113 = _AssistantIntent.IntentProjection.subscript.getter(v112, v101);
  v114 = swift_release(v112);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v113, v5, v114);
  swift_release(v113);
  v115._countAndFlagsBits = 0x20656874206E6920;
  v115._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v115);
  v116 = swift_getKeyPath(byte_100F37E18);
  v117 = _AssistantIntent.IntentProjection.subscript.getter(v116, v106);
  v118 = swift_release(v116);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v117, v5, v118);
  swift_release(v117);
  v119._countAndFlagsBits = 0x6472616F6220;
  v119._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v119);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v110);
  v142 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v85, &type metadata for CRLInsertURLToBoardIntent, v110);
  v121 = v155;
  v120 = v156;
  v155(v85, v156);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for CRLInsertURLToBoardIntent, v110);
  v122._countAndFlagsBits = 0x696C206120747550;
  v122._object = (void *)0xEE00206F74206B6ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v122);
  v123 = swift_getKeyPath(byte_100F37E40);
  v124 = _AssistantIntent.IntentProjection.subscript.getter(v123, v158);
  v125 = swift_release(v123);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v124, v5, v125);
  swift_release(v124);
  v126._countAndFlagsBits = 0x20656874206E6920;
  v126._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v126);
  v127 = swift_getKeyPath(byte_100F37E18);
  v128 = _AssistantIntent.IntentProjection.subscript.getter(v127, v157);
  v129 = swift_release(v127);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v128, v5, v129);
  swift_release(v128);
  v130._countAndFlagsBits = 0x6472616F6220;
  v130._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v130);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertURLToBoardIntent, v110);
  v131 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v85, &type metadata for CRLInsertURLToBoardIntent, v110);
  v121(v85, v120);
  v132 = sub_1004B804C(&qword_1014125F8);
  v133 = swift_allocObject(v132, 120, 7);
  *(_OWORD *)(v133 + 16) = xmmword_100F21D50;
  v134 = v150;
  *(_QWORD *)(v133 + 32) = v151;
  *(_QWORD *)(v133 + 40) = v134;
  v135 = v148;
  *(_QWORD *)(v133 + 48) = v149;
  *(_QWORD *)(v133 + 56) = v135;
  v136 = v146;
  *(_QWORD *)(v133 + 64) = v147;
  *(_QWORD *)(v133 + 72) = v136;
  v137 = v144;
  *(_QWORD *)(v133 + 80) = v145;
  *(_QWORD *)(v133 + 88) = v137;
  v138 = v142;
  *(_QWORD *)(v133 + 96) = v143;
  *(_QWORD *)(v133 + 104) = v138;
  *(_QWORD *)(v133 + 112) = v131;
  v139 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v139;
}

uint64_t sub_100D8E648()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37E18, v2);
  v6 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10089552C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFA8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37E40);
  v12 = sub_1004B7878(&qword_1014125E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D8E7F4, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D8E7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F632E656C707061, 0xE90000000000006DLL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C7070612E777777, 0xED00006D6F632E65);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x8000000101010620);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001CLL, 0x8000000101010640);
  v4 = sub_1004B804C(&qword_101412480);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E30;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100D8E8EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  char *v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  unint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t);
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  Swift::String v68;
  uint64_t v69;
  Swift::String v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  __n128 v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  Swift::String v79;
  void (*v80)(char *, uint64_t);
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v111 = sub_1004B804C(&qword_1014125C8);
  v108 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v106 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014125D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100576174();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 3, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v11._countAndFlagsBits = 0x20747265736E49;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(byte_100F37DC8);
  v109 = sub_100D9AAF4();
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v109);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x796D206F746E6920;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16._countAndFlagsBits = 32;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(byte_100F37DF0);
  v110 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v110);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v7, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = v106;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v104 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v21, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v108 = *(_QWORD *)(v108 + 8);
  v22 = v111;
  ((void (*)(char *, uint64_t))v108)(v21, v111);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v23._countAndFlagsBits = 0x20747265736E49;
  v23._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(byte_100F37DC8);
  v25 = v109;
  v107 = a1;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v109);
  v27 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v7, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0x796D206F746E6920;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(byte_100F37DF0);
  v30 = v110;
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v29, v110);
  v32 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v7, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 0x6472616F6220;
  v33._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = v106;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v105 = v10;
  v103 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v35 = v22;
  v36 = (void (*)(char *, uint64_t))v108;
  ((void (*)(char *, uint64_t))v108)(v34, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for CRLInsertFilesToBoardIntent, v10);
  v37._countAndFlagsBits = 543450177;
  v37._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath(byte_100F37DC8);
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v38, v25);
  v40 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v7, v40);
  swift_release(v39);
  v41._countAndFlagsBits = 0x20796D206F7420;
  v41._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(byte_100F37DF0);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v30);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v7, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0x6472616F6220;
  v45._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = v105;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v105);
  v102 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v46);
  v47 = v111;
  v36(v34, v111);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for CRLInsertFilesToBoardIntent, v46);
  v48._countAndFlagsBits = 0x20747265736E49;
  v48._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = swift_getKeyPath(byte_100F37DC8);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v25);
  v51 = swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v7, v51);
  swift_release(v50);
  v52._object = (void *)0x8000000101010600;
  v52._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath(byte_100F37DF0);
  v54 = v110;
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v53, v110);
  v56 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v7, v56);
  swift_release(v55);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v58 = v105;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v105);
  v101 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v59 = (void (*)(char *, uint64_t))v108;
  ((void (*)(char *, uint64_t))v108)(v34, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v60._countAndFlagsBits = 544503120;
  v60._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  v61 = swift_getKeyPath(byte_100F37DC8);
  v62 = _AssistantIntent.IntentProjection.subscript.getter(v61, v109);
  v63 = swift_release(v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v62, v7, v63);
  swift_release(v62);
  v64._countAndFlagsBits = 544108320;
  v64._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  v65 = swift_getKeyPath(byte_100F37DF0);
  v66 = _AssistantIntent.IntentProjection.subscript.getter(v65, v54);
  v67 = swift_release(v65);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v66, v7, v67);
  swift_release(v66);
  v68._countAndFlagsBits = 0x6472616F6220;
  v68._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v68);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v100 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v69 = v111;
  v59(v34, v111);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v70._countAndFlagsBits = 0x206563616C50;
  v70._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  v71 = swift_getKeyPath(byte_100F37DC8);
  v72 = v109;
  v73 = _AssistantIntent.IntentProjection.subscript.getter(v71, v109);
  v74 = swift_release(v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v73, v7, v74);
  swift_release(v73);
  v75._countAndFlagsBits = 0x20796D206E6F20;
  v75._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v75);
  v76 = swift_getKeyPath(byte_100F37DF0);
  v77 = _AssistantIntent.IntentProjection.subscript.getter(v76, v110);
  v78 = swift_release(v76);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v77, v7, v78);
  swift_release(v77);
  v79._countAndFlagsBits = 0x6472616F6220;
  v79._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v79);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v99 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v80 = (void (*)(char *, uint64_t))v108;
  ((void (*)(char *, uint64_t))v108)(v34, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v81._countAndFlagsBits = 0x20686361747441;
  v81._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v81);
  v82 = swift_getKeyPath(byte_100F37DC8);
  v83 = _AssistantIntent.IntentProjection.subscript.getter(v82, v72);
  v84 = swift_release(v82);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v83, v7, v84);
  swift_release(v83);
  v85._countAndFlagsBits = 0x20796D206E6F20;
  v85._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v85);
  v86 = swift_getKeyPath(byte_100F37DF0);
  v87 = _AssistantIntent.IntentProjection.subscript.getter(v86, v110);
  v88 = swift_release(v86);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v87, v7, v88);
  swift_release(v87);
  v89._countAndFlagsBits = 0x6472616F6220;
  v89._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v89);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v90 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for CRLInsertFilesToBoardIntent, v58);
  v80(v34, v111);
  v91 = sub_1004B804C(&qword_1014125D8);
  v92 = swift_allocObject(v91, 88, 7);
  *(_OWORD *)(v92 + 16) = xmmword_100EF7D10;
  v93 = v103;
  *(_QWORD *)(v92 + 32) = v104;
  *(_QWORD *)(v92 + 40) = v93;
  v94 = v101;
  *(_QWORD *)(v92 + 48) = v102;
  *(_QWORD *)(v92 + 56) = v94;
  v95 = v99;
  *(_QWORD *)(v92 + 64) = v100;
  *(_QWORD *)(v92 + 72) = v95;
  *(_QWORD *)(v92 + 80) = v90;
  v96 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v96;
}

uint64_t sub_100D8F328()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37DC8, v2);
  v6 = sub_100D9AAF4();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100576174();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D8F4BC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37DF0);
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D8F4BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x8000000101010510);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x8000000101010530);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x8000000101010550);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000024, 0x8000000101010570);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x80000001010105A0);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x80000001010105C0);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x737561465F726544, 0xED0000636F642E74);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x80000001010105E0);
  v8 = sub_1004B804C(&qword_101412480);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100F21D60;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D8F644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  char *v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  Swift::String v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  Swift::String v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  char *v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  Swift::String v72;
  char *v73;
  uint64_t v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  Swift::String v84;
  unint64_t v85;
  Swift::String v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __n128 v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  Swift::String v95;
  unint64_t v96;
  void (*v97)(char *, uint64_t);
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  Swift::String v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  Swift::String v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  Swift::String v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  Swift::String v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  Swift::String v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v127[2];
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  void (*v134)(char *);
  void *v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;

  v141 = sub_1004B804C(&qword_1014125B0);
  v137 = *(void (**)(char *, uint64_t))(v141 - 8);
  __chkstk_darwin(v141);
  v138 = (char *)v127 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014125B8);
  __chkstk_darwin(v7);
  v9 = (char *)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1006818A0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 3, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v11._object = (void *)0x80000001010104C0;
  v135 = (void *)0x80000001010104C0;
  v11._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath("8=T");
  v140 = sub_100D9AAF4();
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v140);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x796D206F746E6920;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  LODWORD(v133) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v134 = *(void (**)(char *))(v4 + 104);
  v134(v6);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v132 = *(void (**)(char *, uint64_t))(v4 + 8);
  v132(v6, v3);
  v16._countAndFlagsBits = 0x206472616F6220;
  v16._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(byte_100F37DA0);
  v139 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v18 = a1;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v17, v139);
  v20 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v7, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = v138;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v22, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v24 = (void (*)(char *, uint64_t))*((_QWORD *)v137 + 1);
  v136 = v23;
  v137 = v24;
  v24(v22, v141);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 3, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v25._countAndFlagsBits = 0xD000000000000011;
  v25._object = v135;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath("8=T");
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v140);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v7, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0x796D206F746E6920;
  v29._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  ((void (*)(char *, _QWORD, uint64_t))v134)(v6, v133, v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v132(v6, v3);
  v30._countAndFlagsBits = 0x63206472616F6220;
  v30._object = (void *)0xEE002064656C6C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = swift_getKeyPath(byte_100F37DA0);
  v32 = v139;
  v33 = v18;
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v31, v139);
  v35 = swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v7, v35);
  swift_release(v34);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = v138;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v135 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v37, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v38 = v141;
  v137(v37, v141);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 2, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v39._countAndFlagsBits = 0x7020747265736E49;
  v39._object = (void *)0xEE0020736F746F68;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath("8=T");
  v41 = v140;
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v40, v140);
  v43 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v7, v43);
  swift_release(v42);
  v44._countAndFlagsBits = 0x796D206F746E6920;
  v44._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v45 = swift_getKeyPath(byte_100F37DA0);
  v46 = _AssistantIntent.IntentProjection.subscript.getter(v45, v32);
  v47 = swift_release(v45);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v46, v7, v47);
  swift_release(v46);
  v48._countAndFlagsBits = 0x6472616F6220;
  v48._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = v138;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v134 = (void (*)(char *))static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v49, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v50 = v38;
  v51 = v137;
  v137(v49, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v52._countAndFlagsBits = 0x7020796D20646441;
  v52._object = (void *)0xEE0020736F746F68;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath("8=T");
  v54 = v41;
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v53, v41);
  v56 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v7, v56);
  swift_release(v55);
  v57._countAndFlagsBits = 0x20796D206F7420;
  v57._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v58 = swift_getKeyPath(byte_100F37DA0);
  v59 = v139;
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v58, v139);
  v61 = swift_release(v58);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v7, v61);
  swift_release(v60);
  v62._countAndFlagsBits = 0x6472616F6220;
  v62._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  v63 = v138;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v133 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v63, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v51(v63, v141);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v64._countAndFlagsBits = 0x746F687020646441;
  v64._object = (void *)0xEB0000000020736FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  v65 = swift_getKeyPath("8=T");
  v66 = _AssistantIntent.IntentProjection.subscript.getter(v65, v54);
  v67 = swift_release(v65);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v66, v7, v67);
  swift_release(v66);
  v68._countAndFlagsBits = 544175136;
  v68._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v68);
  v69 = swift_getKeyPath(byte_100F37DA0);
  v70 = _AssistantIntent.IntentProjection.subscript.getter(v69, v59);
  v71 = swift_release(v69);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v70, v7, v71);
  swift_release(v70);
  v72._countAndFlagsBits = 0x6472616F6220;
  v72._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v72);
  v73 = v138;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v128 = v10;
  v132 = (void (*)(char *, uint64_t))static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v74 = v141;
  v51(v73, v141);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLInsertPhotosToBoardIntent, v10);
  v75._countAndFlagsBits = 543450177;
  v75._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v75);
  v76 = swift_getKeyPath("8=T");
  v127[1] = v33;
  v77 = _AssistantIntent.IntentProjection.subscript.getter(v76, v140);
  v78 = swift_release(v76);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v77, v7, v78);
  swift_release(v77);
  v79._countAndFlagsBits = 544175136;
  v79._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v79);
  v80 = swift_getKeyPath(byte_100F37DA0);
  v81 = v139;
  v82 = _AssistantIntent.IntentProjection.subscript.getter(v80, v139);
  v83 = swift_release(v80);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v82, v7, v83);
  swift_release(v82);
  v84._countAndFlagsBits = 0x6472616F6220;
  v84._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v84);
  v85 = v128;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v128);
  v131 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertPhotosToBoardIntent, v85);
  v51(v73, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLInsertPhotosToBoardIntent, v85);
  v86._countAndFlagsBits = 544503120;
  v86._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v86);
  v87 = swift_getKeyPath("8=T");
  v88 = v140;
  v89 = _AssistantIntent.IntentProjection.subscript.getter(v87, v140);
  v90 = swift_release(v87);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v89, v7, v90);
  swift_release(v89);
  v91._countAndFlagsBits = 544108320;
  v91._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v91);
  v92 = swift_getKeyPath(byte_100F37DA0);
  v93 = _AssistantIntent.IntentProjection.subscript.getter(v92, v81);
  v94 = swift_release(v92);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v93, v7, v94);
  swift_release(v93);
  v95._countAndFlagsBits = 0x6472616F6220;
  v95._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v95);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v85);
  v96 = v85;
  v130 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertPhotosToBoardIntent, v85);
  v97 = v137;
  v137(v73, v141);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 2, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v98._countAndFlagsBits = 0xD000000000000022;
  v98._object = (void *)0x80000001010104E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v98);
  v99 = swift_getKeyPath("8=T");
  v100 = _AssistantIntent.IntentProjection.subscript.getter(v99, v88);
  v101 = swift_release(v99);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v100, v7, v101);
  swift_release(v100);
  v102._countAndFlagsBits = 0x20796D206E6F20;
  v102._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v102);
  v103 = swift_getKeyPath(byte_100F37DA0);
  v104 = _AssistantIntent.IntentProjection.subscript.getter(v103, v139);
  v105 = swift_release(v103);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v104, v7, v105);
  swift_release(v104);
  v106._countAndFlagsBits = 0x6472616F6220;
  v106._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v106);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v129 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v107 = v141;
  v97(v73, v141);
  v108 = v97;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v109._countAndFlagsBits = 0x20686361747441;
  v109._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v109);
  v110 = swift_getKeyPath("8=T");
  v111 = _AssistantIntent.IntentProjection.subscript.getter(v110, v140);
  v112 = swift_release(v110);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v111, v7, v112);
  swift_release(v111);
  v113._countAndFlagsBits = 0x20796D206F7420;
  v113._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v113);
  v114 = swift_getKeyPath(byte_100F37DA0);
  v115 = _AssistantIntent.IntentProjection.subscript.getter(v114, v139);
  v116 = swift_release(v114);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v115, v7, v116);
  swift_release(v115);
  v117._countAndFlagsBits = 0x6472616F6220;
  v117._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v117);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v118 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v73, &type metadata for CRLInsertPhotosToBoardIntent, v96);
  v108(v73, v107);
  v119 = sub_1004B804C(&qword_1014125C0);
  v120 = swift_allocObject(v119, 104, 7);
  *(_OWORD *)(v120 + 16) = xmmword_100F1E480;
  v121 = v135;
  *(_QWORD *)(v120 + 32) = v136;
  *(_QWORD *)(v120 + 40) = v121;
  v122 = v133;
  *(_QWORD *)(v120 + 48) = v134;
  *(_QWORD *)(v120 + 56) = v122;
  v123 = v131;
  *(_QWORD *)(v120 + 64) = v132;
  *(_QWORD *)(v120 + 72) = v123;
  v124 = v129;
  *(_QWORD *)(v120 + 80) = v130;
  *(_QWORD *)(v120 + 88) = v124;
  *(_QWORD *)(v120 + 96) = v118;
  v125 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v125;
}

uint64_t sub_100D90370()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("8=T", v2);
  v6 = sub_100D9AAF4();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1006818A0();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D90504, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37DA0);
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D90504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2E3432335F474D49, 0xEB00000000676E70);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2E3635345F474D49, 0xEC0000006765706ALL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2E3632395F474D49, 0xEB0000000067706ALL);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2E3533345F474D49, 0xEC00000063696568);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000026, 0x8000000101010450);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1937006915, 0xE400000000000000);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x8000000101010480);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x80000001010104A0);
  v8 = sub_1004B804C(&qword_101412480);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100F21D60;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D90694()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  Swift::String v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;

  v81 = sub_1004B804C(&qword_101412580);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v1 = (char *)&v72 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_101412588);
  __chkstk_darwin(v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1006184CC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 3, &type metadata for CRLInsertShapeToBoardIntent, v80);
  v5._countAndFlagsBits = 0x206120646441;
  v5._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(byte_100F37D00);
  v78 = sub_100617C28();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v78);
  v8 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v2, v8);
  swift_release(v7);
  v9._countAndFlagsBits = 0x6E6961746E6F6320;
  v9._object = (void *)0xEC00000020676E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  v10 = swift_getKeyPath("X=T");
  v11 = sub_100618450();
  v74 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(v10, v11);
  v13 = swift_release(v10);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v2, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0x20796D206F7420;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath("x=T");
  v77 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v77);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v2, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v80;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v80);
  v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v1, &type metadata for CRLInsertShapeToBoardIntent, v19);
  v79 = *(_QWORD *)(v79 + 8);
  v20 = v81;
  ((void (*)(char *, uint64_t))v79)(v1, v81);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 3, &type metadata for CRLInsertShapeToBoardIntent, v19);
  v21._countAndFlagsBits = 0x20747265736E49;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath("X=T");
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v11);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v2, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x2061206E6920;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(byte_100F37D00);
  v27 = v78;
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v26, v78);
  v29 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v2, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 544108320;
  v30._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = swift_getKeyPath("x=T");
  v32 = v77;
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v31, v77);
  v34 = swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v2, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 0x6472616F6220;
  v35._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = v80;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v80);
  v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v1, &type metadata for CRLInsertShapeToBoardIntent, v36);
  ((void (*)(char *, uint64_t))v79)(v1, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 3, &type metadata for CRLInsertShapeToBoardIntent, v36);
  v37._countAndFlagsBits = 0x6120746E61772049;
  v37._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath(byte_100F37D00);
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v38, v27);
  v40 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v2, v40);
  swift_release(v39);
  v41._countAndFlagsBits = 0xD000000000000012;
  v41._object = (void *)0x8000000101010410;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath("X=T");
  v43 = v74;
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v42, v74);
  v45 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v2, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0x20796D206E6F20;
  v46._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath("x=T");
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v32);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v2, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0x7361766E616320;
  v50._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v51 = v80;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v80);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v1, &type metadata for CRLInsertShapeToBoardIntent, v51);
  v52 = (void (*)(char *, uint64_t))v79;
  ((void (*)(char *, uint64_t))v79)(v1, v81);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 3, &type metadata for CRLInsertShapeToBoardIntent, v51);
  v53._object = (void *)0x8000000101010430;
  v53._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v54 = swift_getKeyPath("X=T");
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v43);
  v56 = swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v2, v56);
  swift_release(v55);
  v57._countAndFlagsBits = 0x2061206E6920;
  v57._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v58 = swift_getKeyPath(byte_100F37D00);
  v59 = _AssistantIntent.IntentProjection.subscript.getter(v58, v78);
  v60 = swift_release(v58);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v59, v2, v60);
  swift_release(v59);
  v61._countAndFlagsBits = 0x20656874206F7420;
  v61._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  v62 = swift_getKeyPath("x=T");
  v63 = _AssistantIntent.IntentProjection.subscript.getter(v62, v77);
  v64 = swift_release(v62);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v63, v2, v64);
  swift_release(v63);
  v65._countAndFlagsBits = 0x6472616F6220;
  v65._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v51);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v1, &type metadata for CRLInsertShapeToBoardIntent, v51);
  v52(v1, v81);
  v67 = sub_1004B804C(&qword_101412590);
  v68 = swift_allocObject(v67, 64, 7);
  *(_OWORD *)(v68 + 16) = xmmword_100EF5E30;
  v69 = v75;
  *(_QWORD *)(v68 + 32) = v76;
  *(_QWORD *)(v68 + 40) = v69;
  *(_QWORD *)(v68 + 48) = v73;
  *(_QWORD *)(v68 + 56) = v66;
  v70 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v70;
}

uint64_t sub_100D90E44()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37D00, v2);
  v6 = sub_100617C28();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1006184CC();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9103C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath("x=T");
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = swift_getKeyPath("X=T");
  v16 = sub_100618450();
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Value.init<A>(for:builder:)(v17, sub_100D8ABB8, 0, v8);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v19 = sub_1004B804C(&qword_101412490);
  v20 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5550;
  *(_QWORD *)(v20 + 32) = v9;
  *(_QWORD *)(v20 + 40) = v14;
  *(_QWORD *)(v20 + 48) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100D91040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6A20676F6420794DLL, 0xED00006465706D75);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001FLL, 0x8000000101010370);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002ALL, 0x8000000101010390);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F74736E69617242, 0xED0000676E696D72);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656D6E6769737341, 0xEB0000000073746ELL);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000004ALL, 0x80000001010103C0);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2073636973796850, 0xED00007373616C63);
  v7 = sub_1004B804C(&qword_101412480);
  v8 = swift_allocObject(v7, 88, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF7D10;
  *(_QWORD *)(v8 + 32) = v0;
  *(_QWORD *)(v8 + 40) = v1;
  *(_QWORD *)(v8 + 48) = v2;
  *(_QWORD *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = v4;
  *(_QWORD *)(v8 + 72) = v5;
  *(_QWORD *)(v8 + 80) = v6;
  v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100D911B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  void (*v29)(char *, uint64_t);
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  unint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  uint64_t v63;
  Swift::String v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __n128 v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  Swift::String v73;
  void (*v74)(char *, uint64_t);
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;

  v102 = sub_1004B804C(&qword_101412580);
  v2 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v4 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412588);
  __chkstk_darwin(v5);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1006184CC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v9._countAndFlagsBits = 0x206120646441;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37D00);
  v103 = sub_100617C28();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v103);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x20796D206F7420;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath("x=T");
  v15 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v14, v15);
  v17 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v98 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v100 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19 = v102;
  v100(v4, v102);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v20._countAndFlagsBits = 0x6120747265736E49;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(byte_100F37D00);
  v99 = a1;
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v103);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 544108320;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath("x=T");
  v101 = v15;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v15);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0x6472616F6220;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v92 = v8;
  v97 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v29 = v100;
  v100(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, &type metadata for CRLInsertShapeToBoardIntent, v8);
  v30._countAndFlagsBits = 0x206120747550;
  v30._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = swift_getKeyPath(byte_100F37D00);
  v32 = v103;
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v31, v103);
  v34 = swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 0x6F20657061687320;
  v35._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath("x=T");
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v15);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0x6472616F6220;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = v92;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v92);
  v96 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v41 = v102;
  v29(v4, v102);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v42._countAndFlagsBits = 0x2061206563616C50;
  v42._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath(byte_100F37D00);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v32);
  v45 = swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0x20796D206E6F20;
  v46._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath("x=T");
  v48 = v101;
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v47, v101);
  v50 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v5, v50);
  swift_release(v49);
  v51._countAndFlagsBits = 0x6472616F6220;
  v51._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v95 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v52 = v41;
  v53 = v100;
  v100(v4, v52);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v54._countAndFlagsBits = 0x6120746E61772049;
  v54._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v55 = swift_getKeyPath(byte_100F37D00);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v103);
  v57 = swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v5, v57);
  swift_release(v56);
  v58._countAndFlagsBits = 0x6F20657061687320;
  v58._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath("x=T");
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v48);
  v61 = swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v5, v61);
  swift_release(v60);
  v62._countAndFlagsBits = 0x6472616F6220;
  v62._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v94 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v63 = v102;
  v53(v4, v102);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v64._countAndFlagsBits = 0x6120746E61772049;
  v64._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  v65 = swift_getKeyPath(byte_100F37D00);
  v66 = v103;
  v67 = _AssistantIntent.IntentProjection.subscript.getter(v65, v103);
  v68 = swift_release(v65);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v67, v5, v68);
  swift_release(v67);
  v69._countAndFlagsBits = 0x6F20657061687320;
  v69._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v69);
  v70 = swift_getKeyPath("x=T");
  v71 = _AssistantIntent.IntentProjection.subscript.getter(v70, v101);
  v72 = swift_release(v70);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v71, v5, v72);
  swift_release(v71);
  v73._countAndFlagsBits = 0x6472616F6220;
  v73._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v73);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v93 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v74 = v100;
  v100(v4, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 2, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v75._countAndFlagsBits = 0x6120686361747441;
  v75._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v75);
  v76 = swift_getKeyPath(byte_100F37D00);
  v77 = _AssistantIntent.IntentProjection.subscript.getter(v76, v66);
  v78 = swift_release(v76);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v77, v5, v78);
  swift_release(v77);
  v79._countAndFlagsBits = 0x7420657061687320;
  v79._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v79);
  v80 = swift_getKeyPath("x=T");
  v81 = _AssistantIntent.IntentProjection.subscript.getter(v80, v101);
  v82 = swift_release(v80);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v81, v5, v82);
  swift_release(v81);
  v83._countAndFlagsBits = 0x6472616F6220;
  v83._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v83);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v84 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLInsertShapeToBoardIntent, v40);
  v74(v4, v102);
  v85 = sub_1004B804C(&qword_101412590);
  v86 = swift_allocObject(v85, 88, 7);
  *(_OWORD *)(v86 + 16) = xmmword_100EF7D10;
  v87 = v97;
  *(_QWORD *)(v86 + 32) = v98;
  *(_QWORD *)(v86 + 40) = v87;
  v88 = v95;
  *(_QWORD *)(v86 + 48) = v96;
  *(_QWORD *)(v86 + 56) = v88;
  v89 = v93;
  *(_QWORD *)(v86 + 64) = v94;
  *(_QWORD *)(v86 + 72) = v89;
  *(_QWORD *)(v86 + 80) = v84;
  v90 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v90;
}

uint64_t sub_100D91BB0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37D00, v2);
  v6 = sub_100617C28();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1006184CC();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9103C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath("x=T");
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D91D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C63726943, 0xE600000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1701734732, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x8000000100FCDFB0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x657261757153, 0xE600000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1918989395, 0xE400000000000000);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C676E61697254, 0xE800000000000000);
  v6 = sub_1004B804C(&qword_101412480);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EFD140;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D91E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t KeyPath;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  void (*v34)(char *, uint64_t);
  Swift::String v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  void (*v52)(char *, uint64_t);
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);

  v74 = sub_1004B804C(&qword_101412568);
  v2 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412570);
  __chkstk_darwin(v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLChangeSelectionColorIntent(0);
  v9 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, v8, v9);
  v10._object = (void *)0x8000000101010290;
  v10._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(byte_100F37CB0);
  v12 = sub_100D65448();
  v75 = a1;
  v76 = v12;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v5, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v77 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16 = v74;
  v77(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, v8, v9);
  v17._countAndFlagsBits = 0xD000000000000010;
  v70 = 0xD000000000000010;
  v17._object = (void *)0x80000001010102B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v18 = swift_getKeyPath(byte_100F37CB0);
  v19 = v76;
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v18, v76);
  v21 = swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v5, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v77(v4, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, v8, v9);
  v23._object = (void *)0x80000001010102D0;
  v23._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(byte_100F37CB0);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v19);
  v26 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v28 = v74;
  v77(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, v8, v9);
  v29._object = (void *)0x80000001010102F0;
  v29._countAndFlagsBits = v70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(byte_100F37CB0);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v76);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v34 = v77;
  v77(v4, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, v8, v9);
  v35._countAndFlagsBits = 0xD000000000000013;
  v35._object = (void *)0x8000000101010310;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(byte_100F37CB0);
  v37 = v76;
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v36, v76);
  v39 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v34(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, v8, v9);
  v41._countAndFlagsBits = 0xD000000000000014;
  v41._object = (void *)0x8000000101010330;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(byte_100F37CB0);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v37);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v46 = v74;
  v77(v4, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, v8, v9);
  v47._countAndFlagsBits = 0x742065676E616843;
  v47._object = (void *)0xEF206F7420736968;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v48 = swift_getKeyPath(byte_100F37CB0);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v76);
  v50 = swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v5, v50);
  swift_release(v49);
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v52 = v77;
  v77(v4, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, v8, v9);
  v53._object = (void *)0x8000000101010350;
  v53._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v54 = swift_getKeyPath(byte_100F37CB0);
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v76);
  v56 = swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v5, v56);
  swift_release(v55);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, v8, v9);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, v8, v9);
  v52(v4, v46);
  v59 = sub_1004B804C(&qword_101412578);
  v60 = swift_allocObject(v59, 96, 7);
  *(_OWORD *)(v60 + 16) = xmmword_100F21D60;
  v61 = v72;
  *(_QWORD *)(v60 + 32) = v73;
  *(_QWORD *)(v60 + 40) = v61;
  v62 = v70;
  *(_QWORD *)(v60 + 48) = v71;
  *(_QWORD *)(v60 + 56) = v62;
  v63 = v68;
  *(_QWORD *)(v60 + 64) = v69;
  *(_QWORD *)(v60 + 72) = v63;
  *(_QWORD *)(v60 + 80) = v67;
  *(_QWORD *)(v60 + 88) = v58;
  v64 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_100D925E4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37CB0, v2);
  v6 = sub_100D65448();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9270C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D9270C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6B63616C42, 0xE500000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1702194242, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(2036429383, 0xE400000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E65657247, 0xE500000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65676E61724FLL, 0xE600000000000000);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C70727550, 0xE600000000000000);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(6579538, 0xE300000000000000);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x776F6C6C6559, 0xE600000000000000);
  v8 = sub_1004B804C(&qword_101412480);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100F21D60;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D92844(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  Swift::String v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  Swift::String v65;
  uint64_t v66;
  Swift::String v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  __n128 v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  Swift::String v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  Swift::String v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  Swift::String v87;
  uint64_t v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v119 = sub_1004B804C(&qword_101412568);
  v114 = *(void (**)(char *, uint64_t))(v119 - 8);
  __chkstk_darwin(v119);
  v3 = (char *)&v106 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412570);
  __chkstk_darwin(v4);
  v6 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLChangeSelectionColorIntent(0);
  v8 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, v7, v8);
  v9._object = (void *)0x8000000101010290;
  v9._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37CB0);
  v115 = sub_100D65448();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v115);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 544108320;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(byte_100F37CD8);
  v118 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v118);
  v16 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v4, v16);
  swift_release(v15);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v117 = v7;
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v19 = (void (*)(char *, uint64_t))*((_QWORD *)v114 + 1);
  v113 = v18;
  v114 = v19;
  v19(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, v7, v8);
  v20._countAndFlagsBits = 0xD000000000000010;
  v110 = 0xD000000000000010;
  v20._object = (void *)0x80000001010102B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(byte_100F37CB0);
  v22 = v115;
  v116 = a1;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v21, v115);
  v24 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 544108320;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(byte_100F37CD8);
  v27 = v118;
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v26, v118);
  v29 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v4, v29);
  swift_release(v28);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = v117;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v117, v8);
  v112 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v31, v8);
  v32 = v114;
  v114(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, v31, v8);
  v33._object = (void *)0x80000001010102D0;
  v33._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37CB0);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v22);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v4, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 544108320;
  v37._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath(byte_100F37CD8);
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v38, v27);
  v40 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v4, v40);
  swift_release(v39);
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = v117;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v117, v8);
  v111 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v42, v8);
  v43 = v119;
  v32(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, v42, v8);
  v44._object = (void *)0x80000001010102F0;
  v44._countAndFlagsBits = v110;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v45 = swift_getKeyPath(byte_100F37CB0);
  v46 = v115;
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v45, v115);
  v48 = swift_release(v45);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v4, v48);
  swift_release(v47);
  v49._countAndFlagsBits = 544108320;
  v49._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  v50 = swift_getKeyPath(byte_100F37CD8);
  v51 = _AssistantIntent.IntentProjection.subscript.getter(v50, v118);
  v52 = swift_release(v50);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v51, v4, v52);
  swift_release(v51);
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v54 = v117;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v117, v8);
  v110 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v54, v8);
  v55 = v114;
  v114(v3, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, v54, v8);
  v56._countAndFlagsBits = 0xD000000000000013;
  v56._object = (void *)0x8000000101010310;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = swift_getKeyPath(byte_100F37CB0);
  v58 = _AssistantIntent.IntentProjection.subscript.getter(v57, v46);
  v59 = swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v58, v4, v59);
  swift_release(v58);
  v60._countAndFlagsBits = 544108320;
  v60._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  v61 = swift_getKeyPath(byte_100F37CD8);
  v62 = v118;
  v63 = _AssistantIntent.IntentProjection.subscript.getter(v61, v118);
  v64 = swift_release(v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v63, v4, v64);
  swift_release(v63);
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  v66 = v117;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v117, v8);
  v109 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v66, v8);
  v55(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 2, v66, v8);
  v67._countAndFlagsBits = 0xD000000000000014;
  v67._object = (void *)0x8000000101010330;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v68 = swift_getKeyPath(byte_100F37CB0);
  v69 = v115;
  v70 = _AssistantIntent.IntentProjection.subscript.getter(v68, v115);
  v71 = swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v70, v4, v71);
  swift_release(v70);
  v72._countAndFlagsBits = 544108320;
  v72._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v72);
  v73 = swift_getKeyPath(byte_100F37CD8);
  v74 = _AssistantIntent.IntentProjection.subscript.getter(v73, v62);
  v75 = swift_release(v73);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v74, v4, v75);
  swift_release(v74);
  v76._countAndFlagsBits = 0;
  v76._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v76);
  v77 = v117;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v117, v8);
  v108 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v77, v8);
  v78 = v114;
  v114(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, v77, v8);
  v79._countAndFlagsBits = 0x742065676E616843;
  v79._object = (void *)0xEF206F7420736968;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v79);
  v80 = swift_getKeyPath(byte_100F37CB0);
  v81 = _AssistantIntent.IntentProjection.subscript.getter(v80, v69);
  v82 = swift_release(v80);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v81, v4, v82);
  swift_release(v81);
  v83._countAndFlagsBits = 544108320;
  v83._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v83);
  v84 = swift_getKeyPath(byte_100F37CD8);
  v85 = _AssistantIntent.IntentProjection.subscript.getter(v84, v118);
  v86 = swift_release(v84);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v85, v4, v86);
  swift_release(v85);
  v87._countAndFlagsBits = 0;
  v87._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v87);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v77, v8);
  v107 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v77, v8);
  v88 = v119;
  v78(v3, v119);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, v77, v8);
  v89._object = (void *)0x8000000101010350;
  v89._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v89);
  v90 = swift_getKeyPath(byte_100F37CB0);
  v91 = _AssistantIntent.IntentProjection.subscript.getter(v90, v115);
  v92 = swift_release(v90);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v91, v4, v92);
  swift_release(v91);
  v93._countAndFlagsBits = 544108320;
  v93._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v93);
  v94 = swift_getKeyPath(byte_100F37CD8);
  v95 = _AssistantIntent.IntentProjection.subscript.getter(v94, v118);
  v96 = swift_release(v94);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v95, v4, v96);
  swift_release(v95);
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v97);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v77, v8);
  v98 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v77, v8);
  v114(v3, v88);
  v99 = sub_1004B804C(&qword_101412578);
  v100 = swift_allocObject(v99, 96, 7);
  *(_OWORD *)(v100 + 16) = xmmword_100F21D60;
  v101 = v112;
  *(_QWORD *)(v100 + 32) = v113;
  *(_QWORD *)(v100 + 40) = v101;
  v102 = v110;
  *(_QWORD *)(v100 + 48) = v111;
  *(_QWORD *)(v100 + 56) = v102;
  v103 = v108;
  *(_QWORD *)(v100 + 64) = v109;
  *(_QWORD *)(v100 + 72) = v103;
  *(_QWORD *)(v100 + 80) = v107;
  *(_QWORD *)(v100 + 88) = v98;
  v104 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v104;
}

uint64_t sub_100D932D0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37CB0, v2);
  v6 = sub_100D65448();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9AFAC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37CD8);
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D9347C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v67 = a1;
  v69 = sub_1004B804C(&qword_101412550);
  v1 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412558);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
  v8 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, v7, v8);
  v9._countAndFlagsBits = 0x7478657420746553;
  v9._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37C60);
  v11 = sub_1008C79BC();
  v68 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v65 = v15;
  v66 = v16;
  v17 = v69;
  v16(v3, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, v7, v8);
  v18._countAndFlagsBits = 0x78657420656B614DLL;
  v18._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(byte_100F37C60);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v11);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v4, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v23 = v66;
  v66(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, v7, v8);
  v24._countAndFlagsBits = 0x6E6F6620656B614DLL;
  v24._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(byte_100F37C60);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v68);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v4, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v23(v3, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, v7, v8);
  v29._countAndFlagsBits = 0x20796C707041;
  v29._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(byte_100F37C60);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v68);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v4, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v23(v3, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, v7, v8);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(byte_100F37C60);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v68);
  v37 = swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0x7478657420;
  v38._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v23(v3, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, v7, v8);
  v39._countAndFlagsBits = 0x2065766F6D6552;
  v39._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(byte_100F37C60);
  v41 = v68;
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v40, v68);
  v43 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v4, v43);
  swift_release(v42);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v45 = v69;
  v46 = v66;
  v66(v3, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, v7, v8);
  v47._countAndFlagsBits = 0x206574656C6544;
  v47._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v48 = swift_getKeyPath(byte_100F37C60);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v41);
  v50 = swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v4, v50);
  swift_release(v49);
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v46(v3, v45);
  v53 = sub_1004B804C(&qword_101412560);
  v54 = swift_allocObject(v53, 88, 7);
  *(_OWORD *)(v54 + 16) = xmmword_100EF7D10;
  v55 = v64;
  *(_QWORD *)(v54 + 32) = v65;
  *(_QWORD *)(v54 + 40) = v55;
  v56 = v62;
  *(_QWORD *)(v54 + 48) = v63;
  *(_QWORD *)(v54 + 56) = v56;
  v57 = v60;
  *(_QWORD *)(v54 + 64) = v61;
  *(_QWORD *)(v54 + 72) = v57;
  *(_QWORD *)(v54 + 80) = v52;
  v58 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_100D93B14()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37C60, v2);
  v6 = sub_1008C79BC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D93C3C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D93C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1684827970, 0xE400000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x63696C617449, 0xE600000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E696C7265646E55, 0xE900000000000065);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x5420656B69727453, 0xEE006867756F7268);
  v4 = sub_1004B804C(&qword_101412480);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EF5E30;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100D93D20(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  char *v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __n128 v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  Swift::String v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  Swift::String v78;
  char *v79;
  uint64_t v80;
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;

  v110 = sub_1004B804C(&qword_101412550);
  v108 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v3 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_101412558);
  __chkstk_darwin(v4);
  v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
  v8 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 2, v7, v8);
  v9._countAndFlagsBits = 0x7478657420746553;
  v9._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(byte_100F37C60);
  v111 = sub_1008C79BC();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v111);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 544108320;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(byte_100F37C88);
  v109 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v109);
  v16 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v4, v16);
  swift_release(v15);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v107 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v105 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, v7, v8);
  v108 = *(_QWORD *)(v108 + 8);
  v18 = v110;
  ((void (*)(char *, uint64_t))v108)(v3, v110);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, v7, v8);
  v19._countAndFlagsBits = 0x78657420656B614DLL;
  v19._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v20 = swift_getKeyPath(byte_100F37C60);
  v106 = a1;
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v111);
  v22 = swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v4, v22);
  swift_release(v21);
  v23._countAndFlagsBits = 544108320;
  v23._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(byte_100F37C88);
  v25 = v109;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v109);
  v27 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v4, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = v107;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v104 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v29, v7, v8);
  ((void (*)(char *, uint64_t))v108)(v29, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, v7, v8);
  v30._countAndFlagsBits = 0x6E6F6620656B614DLL;
  v30._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = swift_getKeyPath(byte_100F37C60);
  v32 = v111;
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v31, v111);
  v34 = swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v4, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 544108320;
  v35._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(byte_100F37C88);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v25);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = v107;
  v41 = v8;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v7, v8);
  v98 = v8;
  v99 = v7;
  v103 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v40, v7, v8);
  v42 = v40;
  v43 = v110;
  v44 = (void (*)(char *, uint64_t))v108;
  ((void (*)(char *, uint64_t))v108)(v40, v110);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 2, v7, v41);
  v45._countAndFlagsBits = 0x20796C707041;
  v45._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath(byte_100F37C60);
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v32);
  v48 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v4, v48);
  swift_release(v47);
  v49._countAndFlagsBits = 544108320;
  v49._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  v50 = swift_getKeyPath(byte_100F37C88);
  v51 = v109;
  v52 = _AssistantIntent.IntentProjection.subscript.getter(v50, v109);
  v53 = swift_release(v50);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v52, v4, v53);
  swift_release(v52);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v55 = v98;
  v56 = v99;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v99, v98);
  v102 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v42, v56, v55);
  v44(v42, v43);
  v57 = v55;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, v56, v55);
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath(byte_100F37C60);
  v60 = v111;
  v61 = _AssistantIntent.IntentProjection.subscript.getter(v59, v111);
  v62 = swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v61, v4, v62);
  swift_release(v61);
  v63._countAndFlagsBits = 0x6E6F207478657420;
  v63._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v63);
  v64 = swift_getKeyPath(byte_100F37C88);
  v65 = _AssistantIntent.IntentProjection.subscript.getter(v64, v51);
  v66 = swift_release(v64);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v65, v4, v66);
  swift_release(v65);
  v67._countAndFlagsBits = 0;
  v67._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v68 = v107;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v56, v57);
  v101 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v68, v56, v57);
  v69 = (void (*)(char *, uint64_t))v108;
  ((void (*)(char *, uint64_t))v108)(v68, v110);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, v56, v57);
  v70._countAndFlagsBits = 0x2065766F6D6552;
  v70._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  v71 = swift_getKeyPath(byte_100F37C60);
  v72 = _AssistantIntent.IntentProjection.subscript.getter(v71, v60);
  v73 = swift_release(v71);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v72, v4, v73);
  swift_release(v72);
  v74._countAndFlagsBits = 544108320;
  v74._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v74);
  v75 = swift_getKeyPath(byte_100F37C88);
  v76 = _AssistantIntent.IntentProjection.subscript.getter(v75, v109);
  v77 = swift_release(v75);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v76, v4, v77);
  swift_release(v76);
  v78._countAndFlagsBits = 0;
  v78._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v78);
  v79 = v107;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v56, v57);
  v100 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v79, v56, v57);
  v80 = v110;
  v69(v79, v110);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 2, v56, v57);
  v81._countAndFlagsBits = 0x206574656C6544;
  v81._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v81);
  v82 = swift_getKeyPath(byte_100F37C60);
  v83 = _AssistantIntent.IntentProjection.subscript.getter(v82, v111);
  v84 = swift_release(v82);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v83, v4, v84);
  swift_release(v83);
  v85._countAndFlagsBits = 544108320;
  v85._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v85);
  v86 = swift_getKeyPath(byte_100F37C88);
  v87 = _AssistantIntent.IntentProjection.subscript.getter(v86, v109);
  v88 = swift_release(v86);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v87, v4, v88);
  swift_release(v87);
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v89);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, v56, v57);
  v90 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v79, v56, v57);
  ((void (*)(char *, uint64_t))v108)(v79, v80);
  v91 = sub_1004B804C(&qword_101412560);
  v92 = swift_allocObject(v91, 88, 7);
  *(_OWORD *)(v92 + 16) = xmmword_100EF7D10;
  v93 = v104;
  *(_QWORD *)(v92 + 32) = v105;
  *(_QWORD *)(v92 + 40) = v93;
  v94 = v102;
  *(_QWORD *)(v92 + 48) = v103;
  *(_QWORD *)(v92 + 56) = v94;
  v95 = v100;
  *(_QWORD *)(v92 + 64) = v101;
  *(_QWORD *)(v92 + 72) = v95;
  *(_QWORD *)(v92 + 80) = v90;
  v96 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v96;
}

uint64_t sub_100D94690()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37C60, v2);
  v6 = sub_1008C79BC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D93C3C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath(byte_100F37C88);
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D9483C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_1004B804C(&qword_101412538);
  v34 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_101412548);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100501854();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for CRLResizeSelectionFontIntent, v6);
  v7._object = (void *)0x8000000101010140;
  v7._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("8>T");
  v9 = sub_1004B7878(&qword_101412530, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLResizeSelectionFontIntent, v6);
  v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLResizeSelectionFontIntent, v6);
  v13 = v35;
  v33 = *(void (**)(char *, uint64_t))(v34 + 8);
  v33(v2, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for CRLResizeSelectionFontIntent, v6);
  v14._countAndFlagsBits = 0x78657420656B614DLL;
  v14._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath("8>T");
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLResizeSelectionFontIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLResizeSelectionFontIntent, v6);
  v19 = v13;
  v20 = v13;
  v21 = v33;
  v33(v2, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CRLResizeSelectionFontIntent, v6);
  v22._countAndFlagsBits = 0xD000000000000020;
  v22._object = (void *)0x8000000101010260;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v23 = swift_getKeyPath("8>T");
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v9);
  v25 = swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v3, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLResizeSelectionFontIntent, v6);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLResizeSelectionFontIntent, v6);
  v21(v2, v20);
  v28 = sub_1004B804C(&qword_101412540);
  v29 = swift_allocObject(v28, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5550;
  v30 = v34;
  *(_QWORD *)(v29 + 32) = v36;
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 48) = v27;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100D94BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v6 = a5(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v15 - v11, a1, v6);
  v13(v10, (uint64_t)v12, v6);
  IntentParameter.wrappedValue.setter(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_100D94CBC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("8>T", v2);
  v6 = sub_1004B7878(&qword_101412530, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100501854();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D94DE4, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D94DE4()
{
  return sub_100D94E0C(0x72656C6C616D53, 0xE700000000000000, 0x72656772614CLL, 0xE600000000000000);
}

uint64_t sub_100D94E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a3, a4);
  v8 = sub_1004B804C(&qword_101412480);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D94E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_1004B804C(&qword_101412538);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100501854();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x8000000101010220, &type metadata for CRLResizeSelectionFontIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x8000000101010240, &type metadata for CRLResizeSelectionFontIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6(v3, v0);
  v8 = sub_1004B804C(&qword_101412540);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100D94FEC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("8>T", v2);
  v6 = sub_1004B7878(&qword_101412530, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100501854();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D95114, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D95114()
{
  return sub_100D998A0(0x72656772614CLL, 0xE600000000000000);
}

uint64_t sub_100D95128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_1004B804C(&qword_101412538);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100501854();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001010101A0, &type metadata for CRLResizeSelectionFontIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001010101C0, &type metadata for CRLResizeSelectionFontIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001010101E0, &type metadata for CRLResizeSelectionFontIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x8000000101010200, &type metadata for CRLResizeSelectionFontIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLResizeSelectionFontIntent, v4);
  v6(v3, v0);
  v10 = sub_1004B804C(&qword_101412540);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E30;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D95324()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath("8>T", v2);
  v6 = sub_1004B7878(&qword_101412530, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100501854();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D9544C, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v10 = sub_1004B804C(&qword_101412490);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D9544C()
{
  return sub_100D998A0(0x72656C6C616D53, 0xE700000000000000);
}

uint64_t sub_100D95464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;

  v51 = sub_1004B804C(&qword_101412518);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412520);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100D6D64C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v9._countAndFlagsBits = 0xD000000000000013;
  v9._object = (void *)0x8000000101010140;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath("X>T");
  v53 = sub_100D41944();
  v46 = a1;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v16._object = (void *)0x8000000101010160;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath("X>T");
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v53);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v21._countAndFlagsBits = 0x20796C707041;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath("X>T");
  v23 = v53;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v53);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0x697320746E6F6620;
  v26._object = (void *)0xEA0000000000657ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v27._object = (void *)0x8000000101010180;
  v27._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath("X>T");
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v23);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v34._countAndFlagsBits = 0x746E6F6620746553;
  v34._object = (void *)0xEE0020657A697320;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath("X>T");
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v23);
  v37 = swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v5, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLChangeSelectionFontSizeIntent, v8);
  v33(v4, v32);
  v40 = sub_1004B804C(&qword_101412528);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100F05060;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_100D959B4(uint64_t a1)
{
  return sub_100D959D8(a1, "X>T", (uint64_t (*)(void))sub_100D41944, (uint64_t (*)(__n128))sub_100D6D64C, (uint64_t)sub_100D95AFC);
}

uint64_t sub_100D959D8(uint64_t a1, const char *a2, uint64_t (*a3)(void), uint64_t (*a4)(__n128), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v9 = type metadata accessor for _AssistantIntent.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2, v11);
  v15 = a3();
  v16 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v15);
  v17 = swift_release(KeyPath);
  v18 = a4(v17);
  _AssistantIntent.Value.init<A>(for:builder:)(v16, a5, 0, v18);
  v19 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v20 = sub_1004B804C(&qword_101412490);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v21 + 32) = v19;
  v22 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_100D95AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(12337, 0xE200000000000000);
  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(12849, 0xE200000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(13361, 0xE200000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(14385, 0xE200000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(13362, 0xE200000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(13875, 0xE200000000000000);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(14388, 0xE200000000000000);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(12855, 0xE200000000000000);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(13881, 0xE200000000000000);
  v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(3421233, 0xE300000000000000);
  v9 = sub_1004B804C(&qword_101412480);
  v10 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100F07C80;
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v0;
  *(_QWORD *)(v10 + 48) = v1;
  *(_QWORD *)(v10 + 56) = v2;
  *(_QWORD *)(v10 + 64) = v3;
  *(_QWORD *)(v10 + 72) = v4;
  *(_QWORD *)(v10 + 80) = v5;
  *(_QWORD *)(v10 + 88) = v6;
  *(_QWORD *)(v10 + 96) = v7;
  *(_QWORD *)(v10 + 104) = v8;
  v11 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100D95C34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  void (*v51)(char *, uint64_t);
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  Swift::String v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  Swift::String v71;
  void (*v72)(char *, uint64_t);
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  Swift::String v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __n128 v81;
  Swift::String v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  Swift::String v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  Swift::String v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v124 = sub_1004B804C(&qword_101412500);
  v2 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v4 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101412508);
  __chkstk_darwin(v5);
  v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1008FACC4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for CRLRenameBoardIntent, v8);
  v9._countAndFlagsBits = 0x20656D616E6552;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath("x>T");
  v125 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v125);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v5, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x74206472616F6220;
  v13._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v14 = swift_getKeyPath(byte_100F37BC0);
  v15 = sub_100D9A964();
  v123 = v15;
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v14, v15);
  v17 = swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v5, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v120 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v122 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19 = v124;
  v122(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for CRLRenameBoardIntent, v8);
  v20._countAndFlagsBits = 0x2065676E616843;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("x>T");
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v125);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v5, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x74206472616F6220;
  v24._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(byte_100F37BC0);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v15);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v119 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v29 = v19;
  v30 = v122;
  v122(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for CRLRenameBoardIntent, v8);
  v31._countAndFlagsBits = 0x20657461647055;
  v31._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath("x>T");
  v33 = v125;
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v32, v125);
  v35 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v5, v35);
  swift_release(v34);
  v36._countAndFlagsBits = 0x74206472616F6220;
  v36._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(byte_100F37BC0);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v123);
  v39 = swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v118 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v30(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLRenameBoardIntent, v8);
  v41._countAndFlagsBits = 0x20656C7469746552;
  v41._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath("x>T");
  v121 = a1;
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v33);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0x74206472616F6220;
  v45._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath(byte_100F37BC0);
  v47 = v123;
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v46, v123);
  v49 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v5, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v117 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v51 = v122;
  v122(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for CRLRenameBoardIntent, v8);
  v52._countAndFlagsBits = 0x20796D206C6C6143;
  v52._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath("x>T");
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v125);
  v55 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v5, v55);
  swift_release(v54);
  v56._countAndFlagsBits = 0x206472616F6220;
  v56._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = swift_getKeyPath(byte_100F37BC0);
  v58 = _AssistantIntent.IntentProjection.subscript.getter(v57, v47);
  v59 = swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v58, v5, v59);
  swift_release(v58);
  v60._countAndFlagsBits = 0x64616574736E6920;
  v60._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v116 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v61 = v124;
  v51(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 2, &type metadata for CRLRenameBoardIntent, v8);
  v62._countAndFlagsBits = 0x656874206C6C6143;
  v62._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  v63 = swift_getKeyPath("x>T");
  v64 = v125;
  v65 = _AssistantIntent.IntentProjection.subscript.getter(v63, v125);
  v66 = swift_release(v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v65, v5, v66);
  swift_release(v65);
  v67._countAndFlagsBits = 0x206472616F6220;
  v67._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v68 = swift_getKeyPath(byte_100F37BC0);
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v68, v123);
  v70 = swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v5, v70);
  swift_release(v69);
  v71._countAndFlagsBits = 0x64616574736E6920;
  v71._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v71);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v115 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v72 = v122;
  v122(v4, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for CRLRenameBoardIntent, v8);
  v73._countAndFlagsBits = 0xD000000000000017;
  v73._object = (void *)0x80000001010100E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v73);
  v74 = swift_getKeyPath("x>T");
  v75 = _AssistantIntent.IntentProjection.subscript.getter(v74, v64);
  v76 = swift_release(v74);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v75, v5, v76);
  swift_release(v75);
  v77._countAndFlagsBits = 0x74206472616F6220;
  v77._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v77);
  v78 = swift_getKeyPath(byte_100F37BC0);
  v79 = v123;
  v80 = _AssistantIntent.IntentProjection.subscript.getter(v78, v123);
  v81 = swift_release(v78);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v80, v5, v81);
  swift_release(v80);
  v82._countAndFlagsBits = 0;
  v82._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v82);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v114 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v72(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 2, &type metadata for CRLRenameBoardIntent, v8);
  v83._object = (void *)0x8000000101010100;
  v83._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v83);
  v84 = swift_getKeyPath("x>T");
  v85 = _AssistantIntent.IntentProjection.subscript.getter(v84, v125);
  v86 = swift_release(v84);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v85, v5, v86);
  swift_release(v85);
  v87._countAndFlagsBits = 0x74206472616F6220;
  v87._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v87);
  v88 = swift_getKeyPath(byte_100F37BC0);
  v89 = _AssistantIntent.IntentProjection.subscript.getter(v88, v79);
  v90 = swift_release(v88);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v89, v5, v90);
  swift_release(v89);
  v91._countAndFlagsBits = 0;
  v91._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v91);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v113 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v92 = v124;
  v93 = v122;
  v122(v4, v124);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2, &type metadata for CRLRenameBoardIntent, v8);
  v94._countAndFlagsBits = 0x7420746E61772049;
  v94._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v94);
  v95 = swift_getKeyPath("x>T");
  v96 = _AssistantIntent.IntentProjection.subscript.getter(v95, v125);
  v97 = swift_release(v95);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v96, v5, v97);
  swift_release(v96);
  v98._object = (void *)0x8000000101010120;
  v98._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v98);
  v99 = swift_getKeyPath(byte_100F37BC0);
  v100 = _AssistantIntent.IntentProjection.subscript.getter(v99, v123);
  v101 = swift_release(v99);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v100, v5, v101);
  swift_release(v100);
  v102._countAndFlagsBits = 0;
  v102._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v102);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CRLRenameBoardIntent, v8);
  v103 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CRLRenameBoardIntent, v8);
  v93(v4, v92);
  v104 = sub_1004B804C(&qword_101412510);
  v105 = swift_allocObject(v104, 104, 7);
  *(_OWORD *)(v105 + 16) = xmmword_100F1E480;
  v106 = v119;
  *(_QWORD *)(v105 + 32) = v120;
  *(_QWORD *)(v105 + 40) = v106;
  v107 = v117;
  *(_QWORD *)(v105 + 48) = v118;
  *(_QWORD *)(v105 + 56) = v107;
  v108 = v115;
  *(_QWORD *)(v105 + 64) = v116;
  *(_QWORD *)(v105 + 72) = v108;
  v109 = v113;
  *(_QWORD *)(v105 + 80) = v114;
  *(_QWORD *)(v105 + 88) = v109;
  *(_QWORD *)(v105 + 96) = v103;
  v110 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v110;
}

uint64_t sub_100D9685C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(byte_100F37BC0, v2);
  v6 = sub_100D9A964();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1008FACC4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100D969F0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = swift_getKeyPath("x>T");
  v12 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v11, v12);
  swift_release(v11);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_100D9AFA8, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  v10(v4, v0);
  v15 = sub_1004B804C(&qword_101412490);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D969F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6F697461636156, 0xEE00343230322073);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x80000001010100C0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x616C43206874614DLL, 0xEA00000000007373);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73656962626F48, 0xE700000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6944206C6F6F43, 0xEE0073727561736FLL);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F522061736C6153, 0xEE0073656E697475);
  v6 = sub_1004B804C(&qword_101412480);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EFD140;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D96B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  Swift::String v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a1;
  v59 = sub_1004B804C(&qword_1014124E0);
  v1 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1014124E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100B2F6A8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v8._countAndFlagsBits = 0x657469726F766146;
  v8._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(byte_100F37B98);
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x6472616F6220;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v59;
  v14(v3, v59);
  v57 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v16._countAndFlagsBits = 0x207472616548;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(byte_100F37B98);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0x6472616F6220;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v21._countAndFlagsBits = 0x20796D2065766F4CLL;
  v21._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(byte_100F37B98);
  v58 = v10;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x6472616F6220;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v57(v3, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v26._countAndFlagsBits = 0x20796D20646441;
  v26._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = swift_getKeyPath(byte_100F37B98);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v10);
  v29 = swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v4, v29);
  swift_release(v28);
  v30._object = (void *)0x8000000101010060;
  v30._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v31 = v59;
  v32 = v57;
  v57(v3, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v33._countAndFlagsBits = 0x206564756C636E49;
  v33._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37B98);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v58);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v4, v36);
  swift_release(v35);
  v37._object = (void *)0x8000000101010080;
  v37._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v38 = v31;
  v32(v3, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CRLFavoriteBoardIntent, v7);
  v39._countAndFlagsBits = 0xD000000000000016;
  v39._object = (void *)0x80000001010100A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(byte_100F37B98);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v58);
  v42 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v4, v42);
  swift_release(v41);
  v43._countAndFlagsBits = 0x6472616F6220;
  v43._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent, v7);
  v32(v3, v38);
  v45 = sub_1004B804C(&qword_1014124F0);
  v46 = swift_allocObject(v45, 80, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100EFD140;
  v47 = v55;
  *(_QWORD *)(v46 + 32) = v56;
  *(_QWORD *)(v46 + 40) = v47;
  v48 = v53;
  *(_QWORD *)(v46 + 48) = v54;
  *(_QWORD *)(v46 + 56) = v48;
  *(_QWORD *)(v46 + 64) = v52;
  *(_QWORD *)(v46 + 72) = v44;
  v49 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_100D97180(uint64_t a1)
{
  return sub_100D89F98(a1, byte_100F37B98, (uint64_t (*)(__n128))sub_100B2F6A8, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D9719C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  void (*v28)(char *, uint64_t);
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = sub_1004B804C(&qword_1014124C8);
  v0 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100B2F714();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F37B48);
  v47 = sub_100857804();
  v9 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v47);
  v10 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v3, v10);
  swift_release(v9);
  v11._countAndFlagsBits = 544828704;
  v11._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  v12 = swift_getKeyPath(byte_100F37B70);
  v13 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v46 = v13;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  v15 = swift_release(v12);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v3, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0x6472616F6220;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v44 = *(void (**)(char *, uint64_t))(v0 + 8);
  v17 = v49;
  v44(v2, v49);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v18._countAndFlagsBits = 0x2065687420746553;
  v18._object = (void *)0xEE00206472616F62;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(byte_100F37B70);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v13);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v3, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 32;
  v22._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v23 = swift_getKeyPath(byte_100F37B48);
  v24 = v47;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v47);
  v26 = swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v3, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v28 = v44;
  v44(v2, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v29._countAndFlagsBits = 0x7420746E61772049;
  v29._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(byte_100F37B48);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v24);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v3, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 544828704;
  v33._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(byte_100F37B70);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v46);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v3, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 0x6472616F6220;
  v37._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v28(v2, v49);
  v39 = sub_1004B804C(&qword_1014124D8);
  v40 = swift_allocObject(v39, 56, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100EF5550;
  v41 = v45;
  *(_QWORD *)(v40 + 32) = v48;
  *(_QWORD *)(v40 + 40) = v41;
  *(_QWORD *)(v40 + 48) = v38;
  v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_100D97654(uint64_t a1)
{
  return sub_100D89F98(a1, byte_100F37B70, (uint64_t (*)(__n128))sub_100B2F714, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D97670()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_1004B804C(&qword_1014124C8);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100B2F714();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F37B70);
  v9 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0x6F766166206F7420;
  v12._object = (void *)0xED00007365746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v14._countAndFlagsBits = 0x20656B614DLL;
  v14._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(byte_100F37B70);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x726F766166206120;
  v18._object = (void *)0xEB00000000657469;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v20._countAndFlagsBits = 0x656874206B72614DLL;
  v20._object = (void *)0xEF206472616F6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(byte_100F37B70);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0x6F76616620736120;
  v24._object = (void *)0xEC00000065746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLFavoriteBoardIntent_v2, v6);
  v19(v2, v13);
  v26 = sub_1004B804C(&qword_1014124D8);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5550;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100D97A4C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  KeyPath = swift_getKeyPath(byte_100F37B48, v2);
  v6 = sub_100857804();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100B2F714();
  v9 = sub_100857940();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D97B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = sub_1004B804C(&qword_1014124C8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1014124D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100B2F714();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CRLFavoriteBoardIntent_v2, v7);
  v8._countAndFlagsBits = 0x2065766F6D6552;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(byte_100F37B70);
  v10 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0x6166206D6F726620;
  v13._object = (void *)0xEF73657469726F76;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CRLFavoriteBoardIntent_v2, v7);
  v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CRLFavoriteBoardIntent_v2, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v15 = sub_1004B804C(&qword_1014124D8);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v16 + 32) = v14;
  v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100D97D70()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 1;
  KeyPath = swift_getKeyPath(byte_100F37B48, v2);
  v6 = sub_100857804();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100B2F714();
  v9 = sub_100857940();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D97E90()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;

  v0 = sub_1004B804C(&qword_1014124B0);
  v36 = *(void (**)(char *, uint64_t))(v0 - 8);
  v37 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100869A1C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("8?T");
  v34 = sub_1009AE5FC();
  v9 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v34);
  v10 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v3, v10);
  swift_release(v9);
  v11._object = (void *)0x8000000101010020;
  v11._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  v12 = swift_getKeyPath(byte_100F37B20);
  v13 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  v15 = swift_release(v12);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v3, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v18 = v37;
  v19 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
  v35 = v17;
  v36 = v19;
  v19(v2, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("8?T");
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v34);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0xD00000000000001CLL;
  v24._object = (void *)0x8000000101010040;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v25 = swift_getKeyPath(byte_100F37B20);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v13);
  v27 = swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v3, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v36(v2, v18);
  v30 = sub_1004B804C(&qword_1014124C0);
  v31 = swift_allocObject(v30, 48, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v31 + 32) = v35;
  *(_QWORD *)(v31 + 40) = v29;
  v32 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_100D98210(uint64_t a1)
{
  return sub_100D89F98(a1, byte_100F37B20, (uint64_t (*)(__n128))sub_100869A1C, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D9822C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_1004B804C(&qword_1014124B0);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100869A1C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v7._object = (void *)0x800000010100FFD0;
  v7._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F37B20);
  v9 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v15._countAndFlagsBits = 0xD000000000000020;
  v15._object = (void *)0x800000010100FFF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(byte_100F37B20);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v9);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v13(v2, v14);
  v21 = sub_1004B804C(&qword_1014124C0);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100D98500()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  KeyPath = swift_getKeyPath("8?T", v2);
  v6 = sub_1009AE5FC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100869A1C();
  v9 = sub_100606E68();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D9861C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_1004B804C(&qword_1014124B0);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100869A1C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v7._object = (void *)0x800000010100FF70;
  v7._countAndFlagsBits = 0xD000000000000026;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F37B20);
  v9 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v15._countAndFlagsBits = 0xD000000000000028;
  v15._object = (void *)0x800000010100FFA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(byte_100F37B20);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v9);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v13(v2, v14);
  v21 = sub_1004B804C(&qword_1014124C0);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100D988F0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 1;
  KeyPath = swift_getKeyPath("8?T", v2);
  v6 = sub_1009AE5FC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100869A1C();
  v9 = sub_100606E68();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D98A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = sub_1004B804C(&qword_101412498);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = v2;
  __chkstk_darwin(v2);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1014124A0);
  __chkstk_darwin(v7);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100606EAC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath("x?T");
  v49 = sub_1009AE5FC();
  v46[1] = a1;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v49);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v7, v14);
  swift_release(v13);
  v15._object = (void *)0x800000010100FF20;
  v15._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath("X?T");
  v52 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v52);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v7, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v47 = *(void (**)(char *, uint64_t))(v3 + 8);
  v48 = v4;
  v47(v6, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 2, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("x?T");
  v22 = v49;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v21, v49);
  v24 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v7, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x6E6F2073746F6420;
  v25._object = (void *)0xEF206472616F6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath("X?T");
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v52);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v7, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v30 = v47;
  v47(v6, v4);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath("x?T");
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v22);
  v34 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v7, v34);
  swift_release(v33);
  v35._countAndFlagsBits = 0xD000000000000021;
  v35._object = (void *)0x800000010100FF40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath("X?T");
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v52);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v7, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for CRLChangeBoardCanvasGridIntent, v10);
  v30(v6, v48);
  v41 = sub_1004B804C(&qword_1014124A8);
  v42 = swift_allocObject(v41, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100EF5550;
  v43 = v50;
  *(_QWORD *)(v42 + 32) = v51;
  *(_QWORD *)(v42 + 40) = v43;
  *(_QWORD *)(v42 + 48) = v40;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_100D98EC4(uint64_t a1)
{
  return sub_100D89F98(a1, "X?T", (uint64_t (*)(__n128))sub_100606EAC, (uint64_t)sub_100D9AFA8);
}

uint64_t sub_100D98EE0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_1004B804C(&qword_101412498);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100606EAC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v7._object = (void *)0x800000010100FEB0;
  v7._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("X?T");
  v9 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(42, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v14._countAndFlagsBits = 0xD000000000000024;
  v14._object = (void *)0x800000010100FED0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath("X?T");
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x6E6961676120;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v20._countAndFlagsBits = 0xD00000000000001ELL;
  v20._object = (void *)0x800000010100FF00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("X?T");
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v19(v2, v13);
  v26 = sub_1004B804C(&qword_1014124A8);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5550;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100D99298()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  KeyPath = swift_getKeyPath("x?T", v2);
  v6 = sub_1009AE5FC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100606EAC();
  v9 = sub_100606E68();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D993B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_1004B804C(&qword_101412498);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1014124A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100606EAC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v7._countAndFlagsBits = 0xD000000000000021;
  v7._object = (void *)0x800000010100FE30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("X?T");
  v9 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v14._countAndFlagsBits = 0xD000000000000020;
  v14._object = (void *)0x800000010100FE60;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath("X?T");
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v20._object = (void *)0x800000010100FE90;
  v20._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath("X?T");
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for CRLChangeBoardCanvasGridIntent, v6);
  v19(v2, v13);
  v26 = sub_1004B804C(&qword_1014124A8);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5550;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100D99764()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  *(_QWORD *)&v2 = __chkstk_darwin(v0).n128_u64[0];
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 1;
  KeyPath = swift_getKeyPath("x?T", v2);
  v6 = sub_1009AE5FC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100606EAC();
  v9 = sub_100606E68();
  _AssistantIntent.Value.init<A, B>(_:for:)(&v16, v7, v8, v9);
  v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = sub_1004B804C(&qword_101412490);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v12 + 32) = v10;
  v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100D99884()
{
  return sub_100D998A0(0xD000000000000015, 0x800000010100FDD0);
}

uint64_t sub_100D998A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v3 = sub_1004B804C(&qword_101412480);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100D99908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1005E4338();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for CRLCreateBoardIntent, sub_100D99884, 0, &type metadata for CRLCreateBoardIntent, v4);
  v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_1004B804C(&qword_101412478);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

ValueMetadata *type metadata accessor for FreeformAssistantIntentsProvider()
{
  return &type metadata for FreeformAssistantIntentsProvider;
}

uint64_t sub_100D999F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void (*v12)(char *, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v0 = type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for CRLChangeSelectionColorIntent(0);
  v4 = __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for _AssistantIntent(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E4470(&v101);
  v11 = sub_1005E4338();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D880B0, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for CRLCreateBoardIntent, v11);
  v100 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  sub_1005E4470(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8892C, 0, sub_100D890F0, 0, &type metadata for CRLCreateBoardIntent, v11);
  v99 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100D6784C(&v101);
  v13 = sub_100D6803C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D89218, 0, sub_100D89924, 0, &type metadata for CRLDeleteBoardIntent, v13);
  v98 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = sub_100880218();
  v14 = sub_1005761F4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D89948, 0, sub_100D89F7C, 0, &type metadata for CRLOpenBoardIntent, v14);
  v97 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_100C536D4();
  v102 = v15;
  v103 = v16;
  v104 = v17;
  v18 = sub_100C53F48();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8A270, 0, sub_100D8AA0C, 0, &type metadata for CRLInsertTextToBoardIntent, v18);
  v96 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_100C536D4();
  v102 = v19;
  v103 = v20;
  v104 = v21;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8ABBC, 0, sub_100D8B6A8, 0, &type metadata for CRLInsertTextToBoardIntent, v18);
  v95 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_1005B7390(&v101);
  v22 = sub_1005B8548();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8B904, 0, sub_100D8C020, 0, &type metadata for CRLAddStickyNoteToBoardIntent, v22);
  v94 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_1005B7390(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8C1B4, 0, sub_100D8C64C, 0, &type metadata for CRLAddStickyNoteToBoardIntent, v22);
  v93 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100C51BE4(&v101);
  v23 = sub_100C54004();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8C668, 0, sub_100D8CF7C, 0, &type metadata for CRLAddTextToBoardIntent, v23);
  v92 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100C51BE4(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8D110, 0, sub_100D8D77C, 0, &type metadata for CRLAddTextToBoardIntent, v23);
  v91 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_1008939D0(&v101);
  v24 = sub_10089552C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8D798, 0, sub_100D8E648, 0, &type metadata for CRLInsertURLToBoardIntent, v24);
  v90 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100574DF8(&v101);
  v25 = sub_100576174();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8E8EC, 0, sub_100D8F328, 0, &type metadata for CRLInsertFilesToBoardIntent, v25);
  v89 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100680040(&v101);
  v26 = sub_1006818A0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D8F644, 0, sub_100D90370, 0, &type metadata for CRLInsertPhotosToBoardIntent, v26);
  v88 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_10061629C(&v101);
  v27 = sub_1006184CC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D90694, 0, sub_100D90E44, 0, &type metadata for CRLInsertShapeToBoardIntent, v27);
  v87 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_10061629C(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D911B8, 0, sub_100D91BB0, 0, &type metadata for CRLInsertShapeToBoardIntent, v27);
  v86 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100D1FF7C(v6);
  v28 = sub_1004B7878(&qword_10140ECA0, type metadata accessor for CRLChangeSelectionColorIntent, (uint64_t)&unk_100F32C10);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v6, sub_100D91E50, 0, sub_100D925E4, 0, v3, v28);
  v85 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100D1FF7C(v6);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v6, sub_100D92844, 0, sub_100D932D0, 0, v3, v28);
  v84 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100A0D8FC(v2);
  v29 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v2, sub_100D9347C, 0, sub_100D93B14, 0, v0, v29);
  v83 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100A0D8FC(v2);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v2, sub_100D93D20, 0, sub_100D94690, 0, v0, v29);
  v82 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100500710(&v101);
  v30 = sub_100501854();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D9483C, 0, sub_100D94CBC, 0, &type metadata for CRLResizeSelectionFontIntent, v30);
  v81 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100500710(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D94E8C, 0, sub_100D94FEC, 0, &type metadata for CRLResizeSelectionFontIntent, v30);
  v80 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100500710(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D95128, 0, sub_100D95324, 0, &type metadata for CRLResizeSelectionFontIntent, v30);
  v79 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100D6C3B0(&v101);
  v31 = sub_100D6D64C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D95464, 0, sub_100D959B4, 0, &type metadata for CRLChangeSelectionFontSizeIntent, v31);
  v78 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_1008FAD64(&v101);
  v32 = sub_1008FACC4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D95C34, 0, sub_100D9685C, 0, &type metadata for CRLRenameBoardIntent, v32);
  v77 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = sub_100B2F28C();
  v33 = sub_100B2F6A8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D96B3C, 0, sub_100D97180, 0, &type metadata for CRLFavoriteBoardIntent, v33);
  v76 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100B2DADC(&v101);
  v34 = sub_100B2F714();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D9719C, 0, sub_100D97654, 0, &type metadata for CRLFavoriteBoardIntent_v2, v34);
  v75 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100B2DADC(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D97670, 0, sub_100D97654, 0, sub_100D97A4C, 0, &type metadata for CRLFavoriteBoardIntent_v2, v34);
  v74 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  sub_100B2DADC(&v101);
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D97B68, 0, sub_100D97654, 0, sub_100D97D70, 0, &type metadata for CRLFavoriteBoardIntent_v2, v34);
  v73 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_1008692F4();
  v102 = v35;
  v103 = v36;
  v37 = sub_100869A1C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D97E90, 0, sub_100D98210, 0, &type metadata for CRLChangeBoardObjectConnectorsIntent, v37);
  v38 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_1008692F4();
  v102 = v39;
  v103 = v40;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D9822C, 0, sub_100D98210, 0, sub_100D98500, 0, &type metadata for CRLChangeBoardObjectConnectorsIntent, v37);
  v41 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_1008692F4();
  v102 = v42;
  v103 = v43;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D9861C, 0, sub_100D98210, 0, sub_100D988F0, 0, &type metadata for CRLChangeBoardObjectConnectorsIntent, v37);
  v44 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_100606740();
  v102 = v45;
  v103 = v46;
  v47 = sub_100606EAC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v101, sub_100D98A10, 0, sub_100D98EC4, 0, &type metadata for CRLChangeBoardCanvasGridIntent, v47);
  v48 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_100606740();
  v102 = v49;
  v103 = v50;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D98EE0, 0, sub_100D98EC4, 0, sub_100D99298, 0, &type metadata for CRLChangeBoardCanvasGridIntent, v47);
  v51 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v101 = (uint64_t)sub_100606740();
  v102 = v52;
  v103 = v53;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)(&v101, sub_100D993B4, 0, sub_100D98EC4, 0, sub_100D99764, 0, &type metadata for CRLChangeBoardCanvasGridIntent, v47);
  v54 = static _AssistantIntent.Builder.buildExpression(_:)(v10);
  v12(v10, v7);
  v55 = sub_1004B804C(&qword_101412488);
  v56 = swift_allocObject(v55, 304, 7);
  v57 = v99;
  *(_QWORD *)(v56 + 32) = v100;
  *(_QWORD *)(v56 + 40) = v57;
  v58 = v97;
  *(_QWORD *)(v56 + 48) = v98;
  *(_QWORD *)(v56 + 56) = v58;
  v59 = v95;
  *(_QWORD *)(v56 + 64) = v96;
  *(_QWORD *)(v56 + 72) = v59;
  *(_OWORD *)(v56 + 16) = xmmword_100F37A30;
  v60 = v93;
  *(_QWORD *)(v56 + 80) = v94;
  *(_QWORD *)(v56 + 88) = v60;
  v61 = v91;
  *(_QWORD *)(v56 + 96) = v92;
  *(_QWORD *)(v56 + 104) = v61;
  v62 = v89;
  *(_QWORD *)(v56 + 112) = v90;
  *(_QWORD *)(v56 + 120) = v62;
  v63 = v87;
  *(_QWORD *)(v56 + 128) = v88;
  *(_QWORD *)(v56 + 136) = v63;
  v64 = v85;
  *(_QWORD *)(v56 + 144) = v86;
  *(_QWORD *)(v56 + 152) = v64;
  v65 = v83;
  *(_QWORD *)(v56 + 160) = v84;
  *(_QWORD *)(v56 + 168) = v65;
  v66 = v81;
  *(_QWORD *)(v56 + 176) = v82;
  *(_QWORD *)(v56 + 184) = v66;
  v67 = v79;
  *(_QWORD *)(v56 + 192) = v80;
  *(_QWORD *)(v56 + 200) = v67;
  v68 = v77;
  *(_QWORD *)(v56 + 208) = v78;
  *(_QWORD *)(v56 + 216) = v68;
  v69 = v75;
  *(_QWORD *)(v56 + 224) = v76;
  *(_QWORD *)(v56 + 232) = v69;
  v70 = v73;
  *(_QWORD *)(v56 + 240) = v74;
  *(_QWORD *)(v56 + 248) = v70;
  *(_QWORD *)(v56 + 256) = v38;
  *(_QWORD *)(v56 + 264) = v41;
  *(_QWORD *)(v56 + 272) = v44;
  *(_QWORD *)(v56 + 280) = v48;
  *(_QWORD *)(v56 + 288) = v51;
  *(_QWORD *)(v56 + 296) = v54;
  v71 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t sub_100D9A808(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9A820@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100D9A85C(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_100D9A890@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D9A8B0(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9A8CC(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9A8E0(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9A8F4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  _QWORD v4[2];

  result = IntentParameter.wrappedValue.getter(v4);
  v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_100D9A92C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

unint64_t sub_100D9A964()
{
  unint64_t result;

  result = qword_1014124F8;
  if (!qword_1014124F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1014124F8);
  }
  return result;
}

uint64_t sub_100D9A9A8(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9A9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D94BEC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ResizeBehavior);
}

_QWORD *sub_100D9A9E8@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D9AA08(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9AA24(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9AA38@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100D9AA70(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_100D9AAA4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_100D9AAC8@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

unint64_t sub_100D9AAF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412598;
  if (!qword_101412598)
  {
    v1 = sub_1004CB6A4(&qword_1014125A0);
    sub_1004B7878(&qword_1014125A8, (uint64_t (*)(uint64_t))&type metadata accessor for IntentFile, (uint64_t)&protocol conformance descriptor for IntentFile);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_101412598);
  }
  return result;
}

uint64_t sub_100D9AB70(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9AB88@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100D9ABC4(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_100D9ABFC(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9AC10(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9AC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D94BEC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_100D9AC40(uint64_t a1)
{
  return sub_100D8A964(a1);
}

uint64_t sub_100D9AC54(uint64_t a1)
{
  return sub_100D8CED0(a1);
}

_QWORD *sub_100D9AC68@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D9AC88(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9AC9C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D9ACBC(uint64_t a1)
{
  return sub_100D8CED0(a1);
}

_QWORD *sub_100D9ACD0@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_100D9ACF4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_100D9AD18@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100D9AD50(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_100D9AD84(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_100D9ADE8@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_100D9AE08(uint64_t a1)
{
  return sub_100D8A964(a1);
}

_QWORD *sub_100D9AE1C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_100D9AE54(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_100D9AE8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412670;
  if (!qword_101412670)
  {
    v1 = sub_1004CB6A4(qword_1013F94C8);
    sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_101412670);
  }
  return result;
}

double sub_100D9AF08@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100D9AF40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

uint64_t sub_100D9AFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100D9B044()
{
  return type metadata accessor for CRLBoardSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014126D8, (uint64_t)&nominal type descriptor for CRLBoardSyncRecord);
}

uint64_t sub_100D9B060(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100F38018;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = &unk_100F38030;
      v9 = &unk_100F38030;
      v10 = &unk_100F38048;
      result = swift_updateClassMetadata2(a1, 256, 7, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_100D9B108()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
}

double sub_100D9B124()
{
  uint64_t v0;
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D9B160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0
                                                         + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100D9B224()
{
  return type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncLocalChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014127E8, (uint64_t)&nominal type descriptor for CRLBoardSyncLocalChangeRecord);
}

uint64_t sub_100D9B240(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "(";
  v2[1] = &unk_100F38098;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_updateClassMetadata2(a1, 256, 4, v2, a1 + 192);
}

double sub_100D9B2A4()
{
  uint64_t v0;
  double result;

  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D9B2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100D9B38C()
{
  return type metadata accessor for CRLBoardSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncRemoteRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101412950, (uint64_t)&nominal type descriptor for CRLBoardSyncRemoteRecord);
}

uint64_t sub_100D9B3A8(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100F38048;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 192);
}

uint64_t sub_100D9B404()
{
  uint64_t v0;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100D9B434()
{
  return type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101412AB0, (uint64_t)&nominal type descriptor for CRLBoardSyncRemoteRecordIdentifier);
}

uint64_t sub_100D9B450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  v18 = v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData;
  *(_OWORD *)v18 = xmmword_100F062D0;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_assets) = _swiftEmptyDictionarySingleton;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v18 = a9;
  *(_QWORD *)(v18 + 8) = a10;
  swift_retain(v13);
  sub_10057939C(a9, a10);
  sub_1004BE2FC(v19, v20);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_minRequiredVersionForSync) = a13;
  swift_release(v13);
  sub_1004E1B3C(a1, v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  v21 = v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  v22 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v24(v21, a2, v22);
  v24(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, a3, v22);
  *(_OWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData) = xmmword_100F062D0;
  v25 = (_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  *v25 = a4;
  v25[1] = a5;
  v25[2] = a6;
  *(_BYTE *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned) = a7;
  *(_BYTE *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) = a8;
  v26 = (_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v27 = *(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  v28 = *(_QWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  *v26 = a11;
  v26[1] = a12;
  sub_1004BE2FC(v27, v28);
  v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(a3, v22);
  v29(a2, v22);
  sub_1004BBB8C(a1);
  return v13;
}

uint64_t *sub_100D9B61C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t, __n128);
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Tips.Status(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48);
    v15 = v7;
    v16 = swift_retain(v8);
    if (v14(v11, 1, v12, v16))
    {
      v17 = sub_1004B804C(&qword_1013E1C00);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = *(int *)(sub_1004B804C(&qword_101412B38) + 28);
    v20 = *(_QWORD *)&v11[v19];
    *(_QWORD *)&v10[v19] = v20;
    v21 = a3[7];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    swift_retain(v20);
    v24 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for UserInterfaceSizeClass(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25))
      {
        v27 = sub_1004B804C(&qword_101409150);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v26 + 16))(v22, v23, v25);
        v28 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
      }
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v28);
    v30 = a3[9];
    *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)v4 + v30, (char *)a2 + v30) + 8) = *(uint64_t *)((char *)a2 + v30 + 8);
  }
  return v4;
}

uint64_t sub_100D9B83C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Tips.Status(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = sub_1004B804C(&qword_101412B38);
  swift_release(*(_QWORD *)(v4 + *(int *)(v7 + 28)));
  v8 = (_QWORD *)(a1 + a2[7]);
  v9 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  return swift_unknownObjectWeakDestroy(a1 + a2[9]);
}

_QWORD *sub_100D9B948(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Tips.Status(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  v14 = v6;
  v15 = swift_retain(v7);
  if (v13(v10, 1, v11, v15))
  {
    v16 = sub_1004B804C(&qword_1013E1C00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = *(int *)(sub_1004B804C(&qword_101412B38) + 28);
  v18 = *(_QWORD *)&v10[v17];
  *(_QWORD *)&v9[v17] = v18;
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  swift_retain(v18);
  v22 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for UserInterfaceSizeClass(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
    {
      v25 = sub_1004B804C(&qword_101409150);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v24 + 16))(v20, v21, v23);
      v26 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
    }
  }
  else
  {
    v27 = *v21;
    *v20 = *v21;
    swift_retain(v27);
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v26);
  v28 = a3[9];
  *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v28, (char *)a2 + v28) + 8) = *(_QWORD *)((char *)a2 + v28 + 8);
  return a1;
}

_QWORD *sub_100D9BB3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  a1[2] = a2[2];
  v9 = a2[3];
  v10 = a1[3];
  a1[3] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Tips.Status(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_1004B804C(&qword_1013E1C00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = *(int *)(sub_1004B804C(&qword_101412B38) + 28);
  v21 = *(_QWORD *)&v12[v20];
  v22 = *(_QWORD *)&v13[v20];
  *(_QWORD *)&v12[v20] = v22;
  swift_retain(v22);
  swift_release(v21);
  if (a1 != a2)
  {
    v23 = a3[7];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    sub_1004CB800((uint64_t)a1 + v23, &qword_101408630);
    v26 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for UserInterfaceSizeClass(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
      {
        v29 = sub_1004B804C(&qword_101409150);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        v30 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v28 + 16))(v24, v25, v27);
        v30 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      }
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v30);
  }
  v32 = a3[9];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign((char *)a1 + v32, (char *)a2 + v32) + 8) = *(_QWORD *)((char *)a2 + v32 + 8);
  return a1;
}

_OWORD *sub_100D9BDB8(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Tips.Status(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_1004B804C(&qword_1013E1C00);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = sub_1004B804C(&qword_101412B38);
  *(_QWORD *)&v8[*(int *)(v13 + 28)] = *(_QWORD *)&v9[*(int *)(v13 + 28)];
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for UserInterfaceSizeClass(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
    {
      v20 = sub_1004B804C(&qword_101409150);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v16, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload(v15, v17, 1);
  }
  else
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  v21 = a3[9];
  *(_QWORD *)(swift_unknownObjectWeakTakeInit((char *)a1 + v21, (char *)a2 + v21) + 8) = *(_QWORD *)((char *)a2 + v21 + 8);
  return a1;
}

_QWORD *sub_100D9BF88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_release(v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Tips.Status(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_1004B804C(&qword_1013E1C00);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(sub_1004B804C(&qword_101412B38) + 28);
  v20 = *(_QWORD *)&v11[v19];
  *(_QWORD *)&v11[v19] = *(_QWORD *)&v12[v19];
  swift_release(v20);
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_1004CB800((uint64_t)a1 + v21, &qword_101408630);
    v24 = sub_1004B804C(&qword_101408630);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for UserInterfaceSizeClass(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25))
      {
        v27 = sub_1004B804C(&qword_101409150);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v22, v23, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
      }
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  v28 = a3[9];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign((char *)a1 + v28, (char *)a2 + v28) + 8) = *(_QWORD *)((char *)a2 + v28 + 8);
  return a1;
}

uint64_t sub_100D9C1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D9C1E8);
}

uint64_t sub_100D9C1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_101412B38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1004B804C(&qword_101408628);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100D9C290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D9C29C);
}

uint64_t sub_100D9C29C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_101412B38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1004B804C(&qword_101408628);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLActiveParticipantDetailView(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101412B98, (uint64_t)&nominal type descriptor for CRLActiveParticipantDetailView);
}

void sub_100D9C354(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_100F38190;
  v6[1] = &unk_100F38190;
  sub_10076A2C8(319, (unint64_t *)&unk_101412BA8, &qword_1013E1C00, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_10076A2C8(319, (unint64_t *)&qword_1014091C0, &qword_101409150, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for () + 64;
      v6[5] = &unk_100F381A8;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t sub_100D9C42C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C93C, 1);
}

BOOL sub_100D9C43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;
  _QWORD v16[3];
  ValueMetadata *v17;
  unint64_t v18;

  v1 = type metadata accessor for CRLActiveParticipantDetailView(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &type metadata for CRLFeatureFlags;
  v4 = sub_1004DB6DC();
  v18 = v4;
  LOBYTE(v16[0]) = 0;
  v5 = isFeatureEnabled(_:)(v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  if ((v5 & 1) == 0)
  {
    sub_1004B8460(v0, (uint64_t)v3, type metadata accessor for CRLActiveParticipantDetailView);
    goto LABEL_7;
  }
  v17 = &type metadata for CRLFeatureFlags;
  v18 = v4;
  LOBYTE(v16[0]) = 11;
  v6 = isFeatureEnabled(_:)(v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  sub_1004B8460(v0, (uint64_t)v3, type metadata accessor for CRLActiveParticipantDetailView);
  if ((v6 & 1) == 0)
  {
LABEL_7:
    v12 = 0;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)v3 + 3);
  v9 = swift_getKeyPath("@9T");
  swift_retain(v7);
  static Published.subscript.getter(v16, v10, KeyPath, v9);
  swift_release(v7);
  swift_release(KeyPath);
  swift_release(v9);
  if (v16[0] >> 62)
  {
    if (v16[0] < 0)
      v14 = v16[0];
    else
      v14 = v16[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16[0]);
    v11 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v16[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v12 = v11 != 0;
LABEL_8:
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLActiveParticipantDetailView);
  return v12;
}

void sub_100D9C5E0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t KeyPath;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  char *v97;
  id v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  _QWORD v119[2];
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;

  v118 = a1;
  v116 = sub_1004B804C(&qword_101412BE8);
  v1 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v3 = (char *)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v117 = (char *)&v96 - v5;
  v6 = sub_1004B804C(&qword_1013E70A0);
  v111 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v110 = (char *)&v96 - v10;
  v11 = type metadata accessor for TaskPriority(0);
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  __chkstk_darwin(v11);
  v106 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLActiveParticipantDetailView(0);
  v102 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v102 + 64);
  __chkstk_darwin(v13);
  v103 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_101412BF0);
  v104 = *(_QWORD *)(v15 - 8);
  v105 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1004B804C(&qword_101412BF8);
  __chkstk_darwin(v101);
  v109 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v96 - v20;
  v22 = sub_1004B804C(&qword_101412C00);
  __chkstk_darwin(v22);
  v24 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v114 = (uint64_t)&v96 - v26;
  v27 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v28 = objc_msgSend(v27, "delegate");

  if (v28)
  {
    v112 = v1;
    v113 = v3;
    v29 = type metadata accessor for CRLiOSAppDelegate();
    v30 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v28, v29, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v30);
    swift_unknownObjectRelease(v28);
    v31 = *(_QWORD *)(v30 + 48);
    swift_release(v30);
    if ((v31 & 2) != 0
      || (objc_msgSend((id)objc_opt_self(CRLManagedAccountUtilities), "loggedInUserHasManagedAppleID") & 1) == 0)
    {
      v98 = (id)objc_opt_self(NSBundle);
      v36 = objc_msgSend(v98, "mainBundle");
      v97 = v21;
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v41 = v40;
      v43 = v42;

      v120 = v41;
      v121 = v43;
      v100 = sub_1004D292C();
      v120 = Text.init<A>(_:)(&v120, &type metadata for String, v100);
      v121 = v44;
      v122 = v45 & 1;
      v123 = v46;
      __chkstk_darwin(v120);
      v99 = v8;
      v47 = v6;
      v35 = v115;
      *(&v96 - 2) = (uint64_t)v115;
      v48 = sub_1004B804C(&qword_101412C08);
      v49 = sub_1004CBA30(&qword_101412C10, &qword_101412C08, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      Section<>.init(header:content:)(&v120, sub_100DA5998, &v96 - 4, &type metadata for Text, v48, &protocol witness table for Text, v49);
      v50 = v103;
      sub_1004B8460((uint64_t)v35, v103, type metadata accessor for CRLActiveParticipantDetailView);
      v51 = *(unsigned __int8 *)(v102 + 80);
      v52 = (v51 + 16) & ~v51;
      v53 = swift_allocObject(&unk_1012A59F8, v52 + v14, v51 | 7);
      v54 = sub_1004B84E0(v50, v53 + v52, type metadata accessor for CRLActiveParticipantDetailView);
      v55 = v106;
      static TaskPriority.userInitiated.getter(v54);
      v56 = (uint64_t)v109;
      v57 = &v109[*(int *)(v101 + 36)];
      v58 = type metadata accessor for _TaskModifier(0);
      v60 = v107;
      v59 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(&v57[*(int *)(v58 + 20)], v55, v108);
      *(_QWORD *)v57 = &unk_101412C20;
      *((_QWORD *)v57 + 1) = v53;
      v62 = v104;
      v61 = v105;
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v56, v17, v105);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v59);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v61);
      v63 = (uint64_t)v97;
      sub_1004C4938(v56, (uint64_t)v97, &qword_101412BF8);
      v64 = objc_msgSend(v98, "mainBundle");
      v65 = String._bridgeToObjectiveC()();
      v66 = String._bridgeToObjectiveC()();
      v67 = objc_msgSend(v64, "localizedStringForKey:value:table:", v65, v66, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v69 = v68;
      v71 = v70;

      v119[0] = v69;
      v119[1] = v71;
      v72 = *v35;
      v73 = v35[1];
      v74 = type metadata accessor for CRLEditingCoordinator(0);
      v75 = sub_1004B7878(&qword_101408638, type metadata accessor for CRLEditingCoordinator, (uint64_t)&unk_100F07858);
      v76 = (void *)ObservedObject.projectedValue.getter(v72, v73, v74, v75);
      KeyPath = swift_getKeyPath(byte_100F38230);
      ObservedObject.Wrapper.subscript.getter(&v120, KeyPath, v76, v75);
      swift_release(KeyPath);

      v78 = v110;
      Toggle<>.init<A>(_:isOn:)(v119, v120, v121, v122, &type metadata for String, v100);
      v79 = v63;
      sub_1004CB7BC(v63, v56, &qword_101412BF8);
      v80 = v111;
      v81 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
      v82 = v99;
      v81(v99, v78, v47);
      sub_1004CB7BC(v56, (uint64_t)v24, &qword_101412BF8);
      v83 = sub_1004B804C(&qword_101412C28);
      v81(&v24[*(int *)(v83 + 48)], v82, v47);
      v84 = *(void (**)(char *, uint64_t))(v80 + 8);
      v84(v78, v47);
      sub_1004CB800(v79, &qword_101412BF8);
      v84(v82, v47);
      sub_1004CB800(v56, &qword_101412BF8);
      v85 = sub_1004B804C(&qword_101412C30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v24, 0, 1, v85);
      v33 = v114;
      v34 = sub_1004C4938((uint64_t)v24, v114, &qword_101412C00);
    }
    else
    {
      v32 = sub_1004B804C(&qword_101412C30);
      v33 = v114;
      v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v114, 1, 1, v32);
      v35 = v115;
    }
    __chkstk_darwin(v34);
    *(&v96 - 2) = (uint64_t)v35;
    v86 = sub_1004B804C(&qword_101412C38);
    v87 = sub_1004CBA30(&qword_101412C40, &qword_101412C38, (uint64_t)&protocol conformance descriptor for Button<A>);
    v88 = v117;
    Section<>.init(content:)(sub_100DA5A10, &v96 - 4, v86, v87);
    sub_1004CB7BC(v33, (uint64_t)v24, &qword_101412C00);
    v90 = v112;
    v89 = v113;
    v91 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    v92 = v116;
    v91(v113, v88, v116);
    v93 = v118;
    sub_1004CB7BC((uint64_t)v24, v118, &qword_101412C00);
    v94 = sub_1004B804C(&qword_101412C48);
    v91((char *)(v93 + *(int *)(v94 + 48)), v89, v92);
    v95 = *(void (**)(char *, uint64_t))(v90 + 8);
    v95(v88, v92);
    sub_1004CB800(v33, &qword_101412C00);
    v95(v89, v92);
    sub_1004CB800((uint64_t)v24, &qword_101412C00);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100D9CEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t Strong;
  uint64_t v55;
  id v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v70;
  char v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  char *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  unsigned int v81;
  __n128 v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  int v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t);
  int v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  _BYTE v141[88];
  _BYTE v142[81];
  char v143;
  _QWORD v144[12];

  v132 = type metadata accessor for UserInterfaceSizeClass(0);
  v129 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v119 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1004B804C(&qword_101412C60);
  __chkstk_darwin(v128);
  v136 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101409150);
  __chkstk_darwin(v6);
  v120 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v133 = (uint64_t)&v117 - v9;
  __chkstk_darwin(v10);
  v134 = (uint64_t)&v117 - v11;
  v12 = sub_1004B804C(&qword_101412C68);
  v126 = *(_QWORD *)(v12 - 8);
  v127 = v12;
  __chkstk_darwin(v12);
  v125 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_101412C70);
  v122 = *(_QWORD *)(v14 - 8);
  v123 = v14;
  __chkstk_darwin(v14);
  v135 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_101412C78);
  v137 = *(_QWORD *)(v16 - 8);
  v138 = v16;
  __chkstk_darwin(v16);
  v131 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v130 = (uint64_t)&v117 - v19;
  v20 = type metadata accessor for Tips.Status(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v121 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_101412C80);
  __chkstk_darwin(v23);
  v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1004B804C(&qword_1013E1C00);
  __chkstk_darwin(v26);
  v28 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v117 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v117 - v33;
  v35 = sub_1004B804C(&qword_101412C88);
  __chkstk_darwin(v35);
  v140 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v139 = (char *)&v117 - v38;
  if (!sub_100D9C43C())
  {
    v44 = 1;
    v45 = a1;
LABEL_9:
    v43 = (uint64_t)v139;
    v46 = (uint64_t)v140;
    goto LABEL_10;
  }
  v124 = a2;
  v117 = type metadata accessor for CRLActiveParticipantDetailView(0);
  v118 = a1;
  v39 = sub_1004B804C(&qword_101412B38);
  State.wrappedValue.getter(v39);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v31, enum case for Tips.Status.available(_:), v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v31, 0, 1, v20);
  v40 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_1004CB7BC((uint64_t)v34, (uint64_t)v25, &qword_1013E1C00);
  sub_1004CB7BC((uint64_t)v31, v40, &qword_1013E1C00);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v41((uint64_t)v25, 1, v20) == 1)
  {
    sub_1004CB800((uint64_t)v31, &qword_1013E1C00);
    sub_1004CB800((uint64_t)v34, &qword_1013E1C00);
    v42 = v41(v40, 1, v20);
    a2 = v124;
    if (v42 == 1)
    {
      sub_1004CB800((uint64_t)v25, &qword_1013E1C00);
      v43 = (uint64_t)v139;
      goto LABEL_17;
    }
    goto LABEL_8;
  }
  sub_1004CB7BC((uint64_t)v25, (uint64_t)v28, &qword_1013E1C00);
  if (v41(v40, 1, v20) == 1)
  {
    sub_1004CB800((uint64_t)v31, &qword_1013E1C00);
    sub_1004CB800((uint64_t)v34, &qword_1013E1C00);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v20);
    a2 = v124;
LABEL_8:
    sub_1004CB800((uint64_t)v25, &qword_101412C80);
    v44 = 1;
    v45 = v118;
    goto LABEL_9;
  }
  v70 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v121, v40, v20);
  sub_1004B7878(&qword_101412CC0, (uint64_t (*)(uint64_t))&type metadata accessor for Tips.Status, (uint64_t)&protocol conformance descriptor for Tips.Status);
  v71 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v70);
  v72 = *(void (**)(char *, uint64_t))(v21 + 8);
  v72(v70, v20);
  sub_1004CB800((uint64_t)v31, &qword_1013E1C00);
  sub_1004CB800((uint64_t)v34, &qword_1013E1C00);
  v72(v28, v20);
  sub_1004CB800((uint64_t)v25, &qword_1013E1C00);
  a2 = v124;
  v43 = (uint64_t)v139;
  v46 = (uint64_t)v140;
  if ((v71 & 1) != 0)
  {
LABEL_17:
    v73 = sub_100D69084();
    v74 = v125;
    TipView.init(_:arrowEdge:action:)(v73, 4, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, &type metadata for CRLTipFollowParticipant, v73);
    v75 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemGroupedBackgroundColor");
    v76 = Color.init(_:)(v75);
    v144[0] = v76;
    v77 = sub_1004CBA30(&qword_101412CB0, &qword_101412C68, (uint64_t)&protocol conformance descriptor for TipView<A>);
    v78 = v127;
    View.tipBackground<A>(_:)(v144, v127, &type metadata for Color, v77, &protocol witness table for Color);
    v79 = swift_release(v76);
    v80 = (*(uint64_t (**)(char *, uint64_t, __n128))(v126 + 8))(v74, v78, v79);
    v81 = static Edge.Set.top.getter(v80);
    v83 = static Edge.Set.bottom.getter(v82);
    v84 = Edge.Set.init(rawValue:)(0);
    v85 = Edge.Set.init(rawValue:)(v84);
    if (Edge.Set.init(rawValue:)(v85 & v81) != v81)
      v84 = Edge.Set.init(rawValue:)(v84 | v81);
    v86 = Edge.Set.init(rawValue:)(v84);
    v87 = Edge.Set.init(rawValue:)(v86 & v83);
    v45 = v118;
    v88 = v132;
    v89 = v129;
    if (v87 == v83)
      LODWORD(v139) = v84;
    else
      LODWORD(v139) = Edge.Set.init(rawValue:)(v84 | v83);
    v90 = v136;
    v91 = v133;
    v92 = v134;
    sub_100BF0C10(v134);
    v93 = v89;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v89 + 104))(v91, enum case for UserInterfaceSizeClass.compact(_:), v88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v91, 0, 1, v88);
    v94 = v90 + *(int *)(v128 + 48);
    sub_1004CB7BC(v92, v136, &qword_101409150);
    v95 = v136;
    sub_1004CB7BC(v91, v94, &qword_101409150);
    v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
    if (v96(v95, 1, v88) == 1)
    {
      sub_1004CB800(v91, &qword_101409150);
      sub_1004CB800(v134, &qword_101409150);
      v97 = v96(v94, 1, v88);
      v48 = v137;
      v47 = v138;
      if (v97 == 1)
      {
        sub_1004CB800(v136, &qword_101409150);
        v98 = 6.0;
        v100 = v122;
        v99 = v123;
        v46 = (uint64_t)v140;
LABEL_29:
        v104 = EdgeInsets.init(_all:)(v98);
        v106 = v105;
        v108 = v107;
        v110 = v109;
        v111 = (uint64_t)v131;
        v112 = v135;
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v131, v135, v99);
        v113 = v111 + *(int *)(v47 + 36);
        *(_BYTE *)v113 = (_BYTE)v139;
        *(double *)(v113 + 8) = v104;
        *(_QWORD *)(v113 + 16) = v106;
        *(_QWORD *)(v113 + 24) = v108;
        *(_QWORD *)(v113 + 32) = v110;
        *(_BYTE *)(v113 + 40) = 0;
        (*(void (**)(char *, uint64_t))(v100 + 8))(v112, v99);
        v114 = v130;
        sub_1004C4938(v111, v130, &qword_101412C78);
        sub_1004C4938(v114, v43, &qword_101412C78);
        v44 = 0;
        a2 = v124;
        goto LABEL_11;
      }
    }
    else
    {
      v101 = v95;
      v102 = v95;
      v103 = v120;
      sub_1004CB7BC(v102, v120, &qword_101409150);
      if (v96(v94, 1, v88) != 1)
      {
        v115 = v119;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v119, v94, v88);
        sub_1004B7878(&qword_101412CB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
        LODWORD(v128) = dispatch thunk of static Equatable.== infix(_:_:)(v103, v115);
        v116 = *(void (**)(char *, uint64_t))(v93 + 8);
        v116(v115, v88);
        sub_1004CB800(v133, &qword_101409150);
        sub_1004CB800(v134, &qword_101409150);
        v116((char *)v103, v88);
        sub_1004CB800(v101, &qword_101409150);
        v98 = 6.0;
        v48 = v137;
        v47 = v138;
        v100 = v122;
        v99 = v123;
        v46 = (uint64_t)v140;
        if ((v128 & 1) != 0)
          goto LABEL_29;
        goto LABEL_28;
      }
      sub_1004CB800(v133, &qword_101409150);
      sub_1004CB800(v134, &qword_101409150);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v103, v88);
      v48 = v137;
      v47 = v138;
    }
    sub_1004CB800(v136, &qword_101412C60);
    v100 = v122;
    v99 = v123;
    v46 = (uint64_t)v140;
LABEL_28:
    v98 = 2.0;
    goto LABEL_29;
  }
  v44 = 1;
  v45 = v118;
LABEL_10:
  v48 = v137;
  v47 = v138;
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v43, v44, 1, v47);
  v144[3] = &type metadata for CRLFeatureFlags;
  v144[4] = sub_1004DB6DC();
  LOBYTE(v144[0]) = 11;
  v49 = isFeatureEnabled(_:)(v144);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v144);
  if ((v49 & 1) != 0
    && (v50 = *(_QWORD *)(v45 + 24), swift_retain(v50), v51 = sub_100642358(), swift_release(v50), v51))
  {
    v52 = *(void **)(v45 + 8);
    v53 = v45 + *(int *)(type metadata accessor for CRLActiveParticipantDetailView(0) + 36);
    Strong = swift_unknownObjectWeakLoadStrong(v53);
    v55 = *(_QWORD *)(v53 + 8);
    swift_retain(v50);
    v56 = v52;
    v57 = v51;
    sub_100D9DAFC((uint64_t)v56, v50, (uint64_t)v57, Strong, v55, 0, 0xE000000000000000, (uint64_t)v141);
    sub_100DA5C68((uint64_t)v141, (uint64_t)v142);
    v143 = 0;
    v58 = sub_100DA5BB4();
    v59 = sub_100DA5BF8();
    _ConditionalContent<>.init(storage:)(v142, &type metadata for CRLActiveParticipantList, &type metadata for CRLActiveParticipantLegacyList, v58, v59);

    sub_100DA5C9C((uint64_t)v141);
  }
  else
  {
    v60 = *(void **)(v45 + 8);
    v61 = *(_QWORD *)(v45 + 24);
    v62 = v45 + *(int *)(type metadata accessor for CRLActiveParticipantDetailView(0) + 36);
    v63 = swift_unknownObjectWeakLoadStrong(v62);
    v64 = *(_QWORD *)(v62 + 8);
    v65 = v60;
    swift_retain(v61);
    sub_100D9DCAC((uint64_t)v65, v61, v63, v64, 0, 0xE000000000000000, (uint64_t)v141);
    sub_100DA5B80((uint64_t)v141, (uint64_t)v142);
    v143 = 1;
    v66 = sub_100DA5BB4();
    v67 = sub_100DA5BF8();
    _ConditionalContent<>.init(storage:)(v142, &type metadata for CRLActiveParticipantList, &type metadata for CRLActiveParticipantLegacyList, v66, v67);
    sub_100DA5C3C((uint64_t)v141);
  }
  sub_1004CB7BC(v43, v46, &qword_101412C88);
  sub_1004CB7BC((uint64_t)v144, (uint64_t)v142, &qword_101412CA0);
  sub_1004CB7BC(v46, a2, &qword_101412C88);
  v68 = sub_1004B804C(&qword_101412CA8);
  sub_1004CB7BC((uint64_t)v142, a2 + *(int *)(v68 + 48), &qword_101412CA0);
  sub_1004CB800((uint64_t)v144, &qword_101412CA0);
  sub_1004CB800(v43, &qword_101412C88);
  sub_1004CB800((uint64_t)v142, &qword_101412CA0);
  return sub_1004CB800(v46, &qword_101412C88);
}

void sub_100D9DAFC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  __int128 v28;
  uint64_t v29;

  *(_QWORD *)a8 = a1;
  v15 = type metadata accessor for CRLCollaborationParticipantCollection(0);
  v16 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
  *(_QWORD *)(a8 + 8) = ObservedObject.init(wrappedValue:)(a2, v15, v16);
  *(_QWORD *)(a8 + 16) = v17;
  v18 = type metadata accessor for CRLCollaborationParticipant(0);
  v19 = sub_1004B7878(&qword_101412CC8, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF848);
  *(_QWORD *)(a8 + 24) = ObservedObject.init(wrappedValue:)(a3, v18, v19);
  *(_QWORD *)(a8 + 32) = v20;
  *(_QWORD *)(a8 + 48) = a5;
  swift_unknownObjectWeakInit(a8 + 40);
  swift_unknownObjectRelease(a4);
  v27[0] = a6;
  v27[1] = a7;
  State.init(wrappedValue:)(&v28, v27, &type metadata for String);
  v21 = v29;
  *(_OWORD *)(a8 + 56) = v28;
  *(_QWORD *)(a8 + 72) = v21;
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "delegate");

  if (v23)
  {
    v24 = type metadata accessor for CRLiOSAppDelegate();
    v25 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v25);
    swift_unknownObjectRelease(v23);
    v26 = *(_QWORD *)(v25 + 48);
    swift_release(v25);
    *(_BYTE *)(a8 + 80) = (v26 & 2) == 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_100D9DCAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;

  *(_QWORD *)a7 = a1;
  v13 = type metadata accessor for CRLCollaborationParticipantCollection(0);
  v14 = sub_1004B7878(&qword_1013E8E68, type metadata accessor for CRLCollaborationParticipantCollection, (uint64_t)&unk_100EFF790);
  *(_QWORD *)(a7 + 8) = ObservedObject.init(wrappedValue:)(a2, v13, v14);
  *(_QWORD *)(a7 + 16) = v15;
  *(_QWORD *)(a7 + 32) = a4;
  swift_unknownObjectWeakInit(a7 + 24);
  swift_unknownObjectRelease(a3);
  v22[0] = a5;
  v22[1] = a6;
  State.init(wrappedValue:)(&v23, v22, &type metadata for String);
  v16 = v24;
  *(_OWORD *)(a7 + 40) = v23;
  *(_QWORD *)(a7 + 56) = v16;
  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v18 = objc_msgSend(v17, "delegate");

  if (v18)
  {
    v19 = type metadata accessor for CRLiOSAppDelegate();
    v20 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v18, v19, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v20);
    swift_unknownObjectRelease(v18);
    v21 = *(_QWORD *)(v20 + 48);
    swift_release(v20);
    *(_BYTE *)(a7 + 64) = (v21 & 2) == 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100D9DE1C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[2] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E1C00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[3] = swift_task_alloc(v2);
  v1[4] = swift_task_alloc(v2);
  v1[5] = swift_task_alloc(v2);
  v3 = sub_1004B804C(&qword_1013E1C08);
  v1[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[7] = v4;
  v1[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E1C10);
  v1[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[10] = v6;
  v1[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[12] = v7;
  v1[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[14] = v8;
  v1[15] = v9;
  return swift_task_switch(sub_100D9DF24, v8, v9);
}

uint64_t sub_100D9DF24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v4 = sub_100D69084();
  Tip.statusUpdates.getter(&type metadata for CRLTipFollowParticipant, v4);
  AsyncStream.makeAsyncIterator()(v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = static MainActor.shared.getter(v5);
  v0[16] = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  v0[17] = v7;
  *v7 = v0;
  v7[1] = sub_100D9DFE4;
  return AsyncStream.Iterator.next(isolation:)(v0[5], v6, &protocol witness table for MainActor, v0[9]);
}

uint64_t sub_100D9DFE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*v0 + 136));
  swift_release(v2);
  return swift_task_switch(sub_100D9E038, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_100D9E038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = type metadata accessor for Tips.Status(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v5, *(_QWORD *)(v0 + 72));
    swift_release(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v1);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v10, v1, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    type metadata accessor for CRLActiveParticipantDetailView(0);
    sub_1004CB7BC(v10, v11, &qword_1013E1C00);
    v12 = sub_1004B804C(&qword_101412B38);
    State.wrappedValue.setter(v11, v12);
    v13 = sub_1004CB800(v10, &qword_1013E1C00);
    v14 = static MainActor.shared.getter(v13);
    *(_QWORD *)(v0 + 128) = v14;
    v15 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 136) = v15;
    *v15 = v0;
    v15[1] = sub_100D9DFE4;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 40), v14, &protocol witness table for MainActor, *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_100D9E1D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = type metadata accessor for CRLActiveParticipantDetailView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_1004B8460(a1, (uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLActiveParticipantDetailView);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 16) & ~v5;
  v7 = swift_allocObject(&unk_1012A5A20, v6 + v4, v5 | 7);
  sub_1004B84E0((uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CRLActiveParticipantDetailView);
  v8 = sub_1004B804C(&qword_101412C50);
  v9 = sub_1004CBA30(&qword_101412C58, &qword_101412C50, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return Button.init(action:label:)(sub_100DA5B6C, v7, sub_100D9E328, 0, v8, v9);
}

double sub_100D9E2DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;

  v2 = type metadata accessor for CRLActiveParticipantDetailView(0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + *(int *)(v2 + 36));
  if (Strong)
  {
    v5 = Strong;
    sub_1004DA278();
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

__n128 sub_100D9E328@<Q0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = static VerticalAlignment.center.getter(a2);
  sub_100D9E390((uint64_t)&v10);
  v4 = v11;
  v5 = v12;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  result = v10;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  return result;
}

double sub_100D9E390@<D0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _QWORD v28[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;
  v9 = v8;

  v28[0] = v7;
  v28[1] = v9;
  v10 = sub_1004D292C();
  v11 = Text.init<A>(_:)(v28, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = static Color.primary.getter();
  v19 = Text.foregroundColor(_:)(v18, v11, v13, v17, v15);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v18);
  sub_1005EFC24(v11, v13, v17);
  swift_bridgeObjectRelease();
  v26 = Image.init(systemName:)(0xD000000000000022, 0x8000000100FF8220);
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v23 & 1;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v26;
  sub_1006CCFD0(v19, v21, v23 & 1);
  swift_bridgeObjectRetain(v25);
  sub_1005EFC24(v19, v21, v23 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100D9E560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];
  _QWORD v57[6];
  char v58;
  _QWORD v59[12];

  v3 = sub_1004B804C(&qword_101412CE0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101412CE8);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 80) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 40);
    sub_100D9EA90(Strong, *(_QWORD *)(v1 + 48), v56);
    sub_100DA65D8(v56, v57);
    v58 = 0;
    v12 = sub_100DA652C();
    v13 = sub_100DA6570();
    _ConditionalContent<>.init(storage:)(v57, &type metadata for CRLIneligibleCollaboratorListView, &type metadata for CRLEmptyCollaboratorListView, v12, v13);
    sub_1004CB7BC((uint64_t)v59, (uint64_t)v10, &qword_101412D28);
    swift_storeEnumTagMultiPayload(v10, v7, 0);
    v14 = sub_1004B804C(&qword_101412D28);
    v15 = sub_100DA6508();
    v16 = sub_100DA65B4();
    _ConditionalContent<>.init(storage:)(v10, v14, v3, v15, v16);
    sub_1004CB800((uint64_t)v59, &qword_101412D28);
    return sub_100DA660C((uint64_t)v56);
  }
  else
  {
    v18 = *(_QWORD *)(v1 + 16);
    v20 = swift_getKeyPath("@9T");
    swift_retain(v18);
    static Published.subscript.getter(v59, v21, KeyPath, v20);
    swift_release(v18);
    swift_release(KeyPath);
    swift_release(v20);
    if (v59[0] >> 62)
    {
      if (v59[0] < 0)
        v52 = v59[0];
      else
        v52 = v59[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v59[0]);
      v22 = _CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v59[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v23 = swift_bridgeObjectRelease().n128_u64[0];
    if (v22)
    {
      v24 = *(_QWORD *)(v1 + 16);
      v26 = swift_getKeyPath("@9T");
      swift_retain(v24);
      static Published.subscript.getter(v59, v27, v25, v26);
      swift_release(v24);
      swift_release(v25);
      swift_release(v26);
      v57[0] = v59[0];
      sub_100DA5C68(v1, (uint64_t)v59);
      v28 = swift_allocObject(&unk_1012A5B68, 97, 7);
      sub_100DA63C4((uint64_t)v59, v28 + 16);
      v54 = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
      v29 = type metadata accessor for UUID(0);
      v30 = sub_1004B804C(&qword_101412CF0);
      v55 = a1;
      v31 = v30;
      v32 = sub_1004CBA30(&qword_101412CF8, (uint64_t *)&unk_1013E8BE0, (uint64_t)&protocol conformance descriptor for [A]);
      v33 = v7;
      v34 = sub_100DA6434();
      v35 = sub_1004B7878(&qword_101412D20, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF810);
      ForEach<>.init(_:content:)(v57, sub_100DA642C, v28, v54, v29, v31, v32, v34, v35);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
      swift_storeEnumTagMultiPayload(v10, v33, 1);
      v36 = sub_1004B804C(&qword_101412D28);
      v37 = sub_100DA6508();
      v38 = sub_100DA65B4();
      _ConditionalContent<>.init(storage:)(v10, v36, v3, v37, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v39, "localizedStringForKey:value:table:", v40, v41, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v44 = v43;
      v46 = v45;

      v57[0] = v44;
      v57[1] = v46;
      v58 = 1;
      v47 = sub_100DA652C();
      v48 = sub_100DA6570();
      _ConditionalContent<>.init(storage:)(v57, &type metadata for CRLIneligibleCollaboratorListView, &type metadata for CRLEmptyCollaboratorListView, v47, v48);
      sub_1004CB7BC((uint64_t)v59, (uint64_t)v10, &qword_101412D28);
      swift_storeEnumTagMultiPayload(v10, v7, 0);
      v49 = sub_1004B804C(&qword_101412D28);
      v50 = sub_100DA6508();
      v51 = sub_100DA65B4();
      _ConditionalContent<>.init(storage:)(v10, v49, v3, v50, v51);
      return sub_1004CB800((uint64_t)v59, &qword_101412D28);
    }
  }
}

void sub_100D9EA90(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a3[1] = a2;
  swift_unknownObjectWeakInit(a3, a1);
  swift_unknownObjectRelease(a1);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  a3[2] = v10;
  a3[3] = v12;
  v13 = objc_msgSend(v5, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  a3[4] = v17;
  a3[5] = v19;
}

uint64_t sub_100D9EC34@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t Strong;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t KeyPath;
  id v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;

  v54 = a3;
  v5 = sub_1004B804C(&qword_101411CD8);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1004B804C(&qword_1013FB248);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  __chkstk_darwin(v51);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_101412D10);
  v14 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  v53 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = *(void **)a2;
  v19 = *(void **)(*(_QWORD *)a2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v20 = *(void **)(a2 + 32);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 40);
  v50 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 72);
  v55 = *(_OWORD *)(a2 + 56);
  v56 = v22;
  v47 = v19;
  v23 = v18;
  v24 = v20;
  v25 = v17;
  v26 = sub_1004B804C(&qword_1013F0E10);
  State.projectedValue.getter(v26);
  v49 = v57;
  v27 = v58;
  v48 = v59;
  KeyPath = swift_getKeyPath("P9T");
  v45 = swift_getKeyPath("(9T");
  *v10 = swift_getKeyPath(byte_100F383E0);
  v28 = sub_1004B804C(&qword_1013FB240);
  swift_storeEnumTagMultiPayload(v10, v28, 0);
  *v7 = swift_getKeyPath(byte_100F38410);
  v29 = sub_1004B804C(&qword_101409328);
  swift_storeEnumTagMultiPayload(v7, v29, 0);
  *(_QWORD *)v12 = v23;
  v30 = type metadata accessor for CRLCollaborationParticipant(0);
  v31 = sub_1004B7878(&qword_101412CC8, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF848);
  *((_QWORD *)v12 + 1) = ObservedObject.init(wrappedValue:)(v24, v30, v31);
  *((_QWORD *)v12 + 2) = v32;
  *((_QWORD *)v12 + 3) = ObservedObject.init(wrappedValue:)(v25, v30, v31);
  *((_QWORD *)v12 + 4) = v33;
  v34 = type metadata accessor for CRLFollowCoordinator(0);
  v35 = sub_1004B7878(&qword_101412D50, type metadata accessor for CRLFollowCoordinator, (uint64_t)&unk_100F06920);
  v36 = v47;
  *((_QWORD *)v12 + 5) = ObservedObject.init(wrappedValue:)(v47, v34, v35);
  *((_QWORD *)v12 + 6) = v37;
  *((_QWORD *)v12 + 8) = v50;
  swift_unknownObjectWeakInit(v12 + 56);
  swift_unknownObjectRelease(Strong);
  LOBYTE(v55) = 0;
  State.init(wrappedValue:)(&v57, &v55, &type metadata for Bool);
  v38 = *((_QWORD *)&v57 + 1);
  v12[72] = v57;
  *((_QWORD *)v12 + 10) = v38;
  *(_OWORD *)(v12 + 88) = v49;
  v39 = v48;
  *((_QWORD *)v12 + 13) = v27;
  *((_QWORD *)v12 + 14) = v39;
  *((_QWORD *)v12 + 15) = KeyPath;
  v12[128] = 0;
  *((_QWORD *)v12 + 17) = v45;
  v12[144] = 0;
  v40 = v51;
  sub_1004C4938((uint64_t)v10, (uint64_t)&v12[*(int *)(v51 + 52)], &qword_1013FB248);
  sub_1004C4938((uint64_t)v7, (uint64_t)&v12[*(int *)(v40 + 56)], &qword_101411CD8);

  sub_1004B8460((uint64_t)v12, (uint64_t)v16, type metadata accessor for CRLCollaborationParticipantRowView);
  v41 = v52;
  v42 = &v16[*(int *)(v52 + 36)];
  *(_OWORD *)v42 = xmmword_100F08B50;
  *((_OWORD *)v42 + 1) = xmmword_100F38130;
  v42[32] = 0;
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLCollaborationParticipantRowView);
  v43 = v54;
  sub_1004C4938((uint64_t)v16, v54, &qword_101412D10);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v43, 0, 1, v41);
}

uint64_t sub_100D9F024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[6];
  _QWORD v55[6];
  char v56;
  _QWORD v57[10];

  v3 = sub_1004B804C(&qword_101412D58);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v54[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101412D60);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v54[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 64) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
    sub_100D9EA90(Strong, *(_QWORD *)(v1 + 32), v54);
    sub_100DA65D8(v54, v55);
    v56 = 0;
    v12 = sub_100DA652C();
    v13 = sub_100DA6570();
    _ConditionalContent<>.init(storage:)(v55, &type metadata for CRLIneligibleCollaboratorListView, &type metadata for CRLEmptyCollaboratorListView, v12, v13);
    sub_1004CB7BC((uint64_t)v57, (uint64_t)v10, &qword_101412D28);
    swift_storeEnumTagMultiPayload(v10, v7, 0);
    v14 = sub_1004B804C(&qword_101412D28);
    v15 = sub_100DA6508();
    v16 = sub_100DA6854();
    _ConditionalContent<>.init(storage:)(v10, v14, v3, v15, v16);
    sub_1004CB800((uint64_t)v57, &qword_101412D28);
    return sub_100DA660C((uint64_t)v54);
  }
  else
  {
    v18 = *(_QWORD *)(v1 + 16);
    v20 = swift_getKeyPath("@9T");
    swift_retain(v18);
    static Published.subscript.getter(v57, v21, KeyPath, v20);
    swift_release(v18);
    swift_release(KeyPath);
    swift_release(v20);
    if (v57[0] >> 62)
    {
      if (v57[0] < 0)
        v52 = v57[0];
      else
        v52 = v57[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v57[0]);
      v22 = _CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v57[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v23 = swift_bridgeObjectRelease().n128_u64[0];
    if (v22)
    {
      v24 = *(_QWORD *)(v1 + 16);
      v26 = swift_getKeyPath("@9T");
      swift_retain(v24);
      static Published.subscript.getter(v57, v27, v25, v26);
      swift_release(v24);
      swift_release(v25);
      *(_QWORD *)&v28 = swift_release(v26).n128_u64[0];
      v55[0] = v57[0];
      v29 = swift_getKeyPath(byte_100F38450, v28);
      sub_100DA5B80(v1, (uint64_t)v57);
      v30 = swift_allocObject(&unk_1012A5B90, 81, 7);
      sub_100DA6724((uint64_t)v57, v30 + 16);
      v31 = sub_1004B804C((uint64_t *)&unk_1013E8BE0);
      v32 = sub_1004B804C(&qword_101412D68);
      v53 = a1;
      v33 = v32;
      v34 = sub_1004CBA30(&qword_101412CF8, (uint64_t *)&unk_1013E8BE0, (uint64_t)&protocol conformance descriptor for [A]);
      v35 = sub_100DA678C();
      ForEach<>.init(_:id:content:)(v55, v29, sub_100DA6784, v30, v31, v33, v34, &protocol witness table for String, v35);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
      swift_storeEnumTagMultiPayload(v10, v7, 1);
      v36 = sub_1004B804C(&qword_101412D28);
      v37 = sub_100DA6508();
      v38 = sub_100DA6854();
      _ConditionalContent<>.init(storage:)(v10, v36, v3, v37, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      v42 = objc_msgSend(v39, "localizedStringForKey:value:table:", v40, v41, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v44 = v43;
      v46 = v45;

      v55[0] = v44;
      v55[1] = v46;
      v56 = 1;
      v47 = sub_100DA652C();
      v48 = sub_100DA6570();
      _ConditionalContent<>.init(storage:)(v55, &type metadata for CRLIneligibleCollaboratorListView, &type metadata for CRLEmptyCollaboratorListView, v47, v48);
      sub_1004CB7BC((uint64_t)v57, (uint64_t)v10, &qword_101412D28);
      swift_storeEnumTagMultiPayload(v10, v7, 0);
      v49 = sub_1004B804C(&qword_101412D28);
      v50 = sub_100DA6508();
      v51 = sub_100DA6854();
      _ConditionalContent<>.init(storage:)(v10, v49, v3, v50, v51);
      return sub_1004CB800((uint64_t)v57, &qword_101412D28);
    }
  }
}

uint64_t sub_100D9F530@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  void *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;

  v5 = *a1;
  v6 = *(void **)a2;
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 56);
  v23 = *(_OWORD *)(a2 + 40);
  v24 = v9;
  v10 = v6;
  v11 = v5;
  v12 = sub_1004B804C(&qword_1013F0E10);
  State.projectedValue.getter(v12);
  v21 = v25;
  v13 = v26;
  v14 = v27[0];
  KeyPath = swift_getKeyPath("P9T");
  v16 = swift_getKeyPath("(9T");
  *(_QWORD *)&v25 = v10;
  v17 = type metadata accessor for CRLCollaborationParticipant(0);
  v18 = sub_1004B7878(&qword_101412CC8, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF848);
  *((_QWORD *)&v25 + 1) = ObservedObject.init(wrappedValue:)(v11, v17, v18);
  v26 = v19;
  v27[1] = v8;
  swift_unknownObjectWeakInit(v27);
  swift_unknownObjectRelease(Strong);
  v22 = 0;
  State.init(wrappedValue:)(&v23, &v22, &type metadata for Bool);
  v28 = v23;
  v29 = *((_QWORD *)&v23 + 1);
  v30 = v21;
  v31 = v13;
  v32 = v14;
  v33 = KeyPath;
  v34 = 0;
  v35 = v16;
  v36 = 0;
  sub_100DA6878((uint64_t)&v25, a3);
  *(_OWORD *)(a3 + 120) = xmmword_100F08B50;
  *(_OWORD *)(a3 + 136) = xmmword_100F38130;
  *(_BYTE *)(a3 + 152) = 0;
  return sub_100DA68AC((uint64_t)&v25);
}

uint64_t sub_100D9F6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t result;
  _QWORD v32[2];

  v32[0] = a1;
  v32[1] = a2;
  v5 = sub_1004D292C();
  swift_bridgeObjectRetain(a2);
  v6 = Text.init<A>(_:)(v32, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11 & 1;
  v13 = static Font.footnote.getter();
  v14 = Text.font(_:)(v13, v6, v8, v12, v10);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release(v13);
  sub_1005EFC24(v6, v8, v12);
  swift_bridgeObjectRelease();
  LOBYTE(v6) = static Edge.Set.vertical.getter(v21);
  v22 = EdgeInsets.init(_all:)(2.0);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath("H5T");
  result = swift_getKeyPath(byte_100F388A0);
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v16;
  *(_BYTE *)(a3 + 16) = v18 & 1;
  *(_QWORD *)(a3 + 24) = v20;
  *(_BYTE *)(a3 + 32) = v6;
  *(double *)(a3 + 40) = v22;
  *(_QWORD *)(a3 + 48) = v24;
  *(_QWORD *)(a3 + 56) = v26;
  *(_QWORD *)(a3 + 64) = v28;
  *(_BYTE *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 80) = KeyPath;
  *(_QWORD *)(a3 + 88) = v29;
  *(_QWORD *)(a3 + 96) = result;
  *(_QWORD *)(a3 + 104) = 10;
  *(_BYTE *)(a3 + 112) = 0;
  return result;
}

uint64_t sub_100D9F818@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100D9F6C8(*v1, v1[1], a1);
}

uint64_t sub_100D9F820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v39 = (char *)&v38 - v7;
  v8 = type metadata accessor for AttributedString(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AttributeContainer(0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v18 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 24);
  v42 = v1;
  v20 = swift_bridgeObjectRetain(v19);
  AttributeContainer.init()(v20);
  AttributedString.init(_:attributes:)(v18, v19, v17);
  AttributedString.init(stringLiteral:)(32, 0xE100000000000000);
  v21 = sub_1004B7878(&qword_101412FF0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v43 = a1;
  AttributedString.append<A>(_:)(v11, v8, v21);
  v38 = *(void (**)(char *, uint64_t))(v9 + 8);
  v38(v11, v8);
  AttributeContainer.init()(v22);
  KeyPath = swift_getKeyPath(byte_100F38960);
  v23 = swift_getKeyPath(byte_100F38990, &KeyPath);
  URL.init(string:)(0x2F2F3A6F6F66, 0xE600000000000000);
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v24 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v39, v5, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v24);
    v28 = sub_100DA8560();
    AttributeContainer.subscript.setter(v27, v23, v28);
    v29 = swift_getKeyPath(byte_100F389D0);
    *(_QWORD *)&v30 = __chkstk_darwin(v29).n128_u64[0];
    *(&v38 - 2) = v31;
    v32 = swift_getKeyPath(byte_100F38A00, v30);
    v45 = static Color.accentColor.getter(v32);
    v33 = sub_100DA863C();
    AttributeContainer.subscript.setter(&v45, v32, v33);
    v34 = v41;
    v35 = *(_QWORD *)(v42 + 32);
    v36 = *(_QWORD *)(v42 + 40);
    v37 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v17, v14, v41);
    swift_bridgeObjectRetain(v36);
    AttributedString.init(_:attributes:)(v35, v36, v17);
    AttributedString.append<A>(_:)(v11, v8, v21);
    v38(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v14, v34);
  }
  return result;
}

uint64_t sub_100D9FB60@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  __n128 v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[7];

  v3 = v2;
  v70 = a1;
  v4 = type metadata accessor for AccessibilityActionKind(0, a2);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v69 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101412F90);
  __chkstk_darwin(v6);
  v62 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = type metadata accessor for OpenURLAction(0);
  v8 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1004B804C(&qword_101412F98);
  __chkstk_darwin(v59);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_101412FA0);
  __chkstk_darwin(v64);
  v60 = (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1004B804C(&qword_101412FA8);
  __chkstk_darwin(v67);
  v63 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1004B804C(&qword_101412FB0);
  __chkstk_darwin(v68);
  v65 = v2;
  v66 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100D9F820((uint64_t)v13);
  v19 = Text.init(_:)(v13);
  v21 = v20;
  v23 = v22;
  LOBYTE(v13) = v24 & 1;
  KeyPath = swift_getKeyPath("h6T");
  sub_100DA65D8(v3, v73);
  v26 = swift_allocObject(&unk_1012A5EC0, 64, 7);
  sub_100DA8298((uint64_t)v73, v26 + 16);
  OpenURLAction.init(handler:)(sub_100DA82E0, v26);
  v27 = v62;
  v28 = (char *)v62 + *(int *)(v6 + 28);
  v29 = v8;
  v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v31 = v61;
  v30(v28, v10, v61);
  *v27 = KeyPath;
  sub_1004CB7BC((uint64_t)v27, (uint64_t)&v15[*(int *)(v59 + 36)], &qword_101412F90);
  *(_QWORD *)v15 = v19;
  *((_QWORD *)v15 + 1) = v21;
  v15[16] = (char)v13;
  *((_QWORD *)v15 + 3) = v23;
  sub_1006CCFD0(v19, v21, (char)v13);
  swift_bridgeObjectRetain(v23);
  sub_1004CB800((uint64_t)v27, &qword_101412F90);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v31);
  sub_1005EFC24(v19, v21, (char)v13);
  *(_QWORD *)&v32 = swift_bridgeObjectRelease().n128_u64[0];
  v33 = swift_getKeyPath("@6T", v32);
  v34 = v60;
  sub_1004CB7BC((uint64_t)v15, v60, &qword_101412F98);
  v35 = v34 + *(int *)(v64 + 36);
  *(_QWORD *)v35 = v33;
  *(_BYTE *)(v35 + 8) = 0;
  v36 = sub_1004CB800((uint64_t)v15, &qword_101412F98);
  v37 = static Font.footnote.getter(v36);
  v38 = swift_getKeyPath(byte_100F388D0);
  v39 = v63;
  sub_1004CB7BC(v34, v63, &qword_101412FA0);
  v40 = (uint64_t *)(v39 + *(int *)(v67 + 36));
  *v40 = v38;
  v40[1] = v37;
  v41 = sub_1004CB800(v34, &qword_101412FA0);
  LOBYTE(v37) = static Edge.Set.vertical.getter(v41);
  v42 = EdgeInsets.init(_all:)(2.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v66;
  sub_1004CB7BC(v39, v66, &qword_101412FA8);
  v50 = v68;
  v51 = v49 + *(int *)(v68 + 36);
  *(_BYTE *)v51 = v37;
  *(double *)(v51 + 8) = v42;
  *(_QWORD *)(v51 + 16) = v44;
  *(_QWORD *)(v51 + 24) = v46;
  *(_QWORD *)(v51 + 32) = v48;
  *(_BYTE *)(v51 + 40) = 0;
  v52 = sub_1004CB800(v39, &qword_101412FA8);
  v53 = v69;
  static AccessibilityActionKind.default.getter(v52);
  sub_100DA65D8(v65, v73);
  v54 = swift_allocObject(&unk_1012A5EE8, 64, 7);
  sub_100DA8298((uint64_t)v73, v54 + 16);
  v55 = sub_100DA8330();
  View.accessibilityAction(_:_:)(v53, sub_100DA8328, v54, v50, v55);
  v56 = swift_release(v54);
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v53, v72, v56);
  return sub_1004CB800(v49, &qword_101412FB0);
}

uint64_t sub_100DA005C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for OpenURLAction(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.openURL.setter(v4);
}

uint64_t sub_100DA00D8(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v4 = Strong;
    sub_1004DA008();
    v3 = swift_unknownObjectRelease(v4);
  }
  return static OpenURLAction.Result.handled.getter(v3);
}

double sub_100DA0114(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  id *v10;
  double v11;
  uint64_t v12;
  _BYTE v13[24];

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v4)
    {
      v5 = qword_1013DD8C8;
      v6 = v4;
      if (v5 != -1)
        swift_once(&qword_1013DD8C8, sub_100A069BC);
      swift_beginAccess(&static OS_os_log.shareState, v13, 0, 0);
      v7 = (id)static OS_os_log.shareState;
      v9 = static os_log_type_t.default.getter(v8);
      sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      v10 = (id *)&v6[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
      *(_QWORD *)&v11 = swift_beginAccess(&v6[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v12, 0, 0).n128_u64[0];
      if (*v10)
        objc_msgSend(*v10, "dismissPopoverAnimated:completion:", 1, 0, v11);

    }
    sub_10066401C(v3, (uint64_t)sub_1004DA128, 0);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100DA024C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t OpaqueTypeConformance2;
  unint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t inited;
  id v47;
  uint64_t v48;
  char *v49;
  void *v50;
  Class isa;
  id v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99[80];
  _QWORD v100[2];
  _QWORD v101[2];
  _OWORD v102[7];

  v2 = v1;
  v98 = a1;
  v97 = type metadata accessor for AccessibilityTraits(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v4);
  v89 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for PersonNameComponents(0);
  v87 = *(_QWORD *)(v88 - 8);
  v6 = __chkstk_darwin(v88);
  v85 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for AccessibilityChildBehavior(0, v6);
  v8 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101412E60);
  __chkstk_darwin(v11);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_101412E68);
  __chkstk_darwin(v14);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_101412E70);
  v86 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1004B804C(&qword_101412E78);
  __chkstk_darwin(v94);
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v93 = (char *)&v84 - v23;
  v25 = __chkstk_darwin(v24);
  v92 = (char *)&v84 - v26;
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v27 = sub_1004B804C(&qword_101412E80);
  v28 = sub_100DA09AC((uint64_t)&v13[*(int *)(v27 + 44)]);
  v29 = static Alignment.center.getter(v28);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v102, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, 1, v29, v30);
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v16, &qword_101412E60);
  v31 = &v16[*(int *)(v14 + 36)];
  v32 = v102[5];
  *((_OWORD *)v31 + 4) = v102[4];
  *((_OWORD *)v31 + 5) = v32;
  *((_OWORD *)v31 + 6) = v102[6];
  v33 = v102[1];
  *(_OWORD *)v31 = v102[0];
  *((_OWORD *)v31 + 1) = v33;
  v34 = v102[3];
  *((_OWORD *)v31 + 2) = v102[2];
  *((_OWORD *)v31 + 3) = v34;
  v35 = sub_1004CB800((uint64_t)v13, &qword_101412E60);
  static AccessibilityChildBehavior.combine.getter(v35);
  v36 = sub_100DA7DD0();
  View.accessibilityElement(children:)(v10, v14, v36);
  v37 = *(void (**)(char *, uint64_t))(v8 + 8);
  v38 = v87;
  v37(v10, v91);
  sub_1004CB800((uint64_t)v16, &qword_101412E68);
  v101[0] = sub_100DA1220();
  v101[1] = v39;
  v100[0] = v14;
  v100[1] = v36;
  v40 = v88;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v100, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v42 = sub_1004D292C();
  v91 = (uint64_t)v21;
  v43 = v2;
  v90 = v42;
  View.accessibilityLabel<A>(_:)(v101, v17, &type metadata for String, OpaqueTypeConformance2, v42);
  v44 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v19, v17, v44);
  v45 = sub_1004B804C(&qword_1013FF100);
  inited = swift_initStackObject(v45, v99);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v47 = *(id *)(v2 + 32);
  v48 = v89;
  sub_10063ABC4(v89);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v48, 1, v40) == 1)
  {
    sub_1004CB800(v48, &qword_1013F4270);
LABEL_8:
    v54 = sub_10063B4E0();
    v56 = v58;
    goto LABEL_9;
  }
  v49 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v85, v48, v40);
  v50 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v52 = objc_msgSend(v50, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v54 = v53;
  v56 = v55;

  if ((v56 & 0x2000000000000000) != 0)
    v57 = HIBYTE(v56) & 0xF;
  else
    v57 = v54 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v40);
  if (!v57)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_9:

  *(_QWORD *)(inited + 32) = v54;
  *(_QWORD *)(inited + 40) = v56;
  v59 = *(id *)(v43 + 32);
  v60 = sub_10063B4E0();
  v62 = v61;

  *(_QWORD *)(inited + 48) = v60;
  *(_QWORD *)(inited + 56) = v62;
  v63 = sub_100DA269C();
  v65 = v64;
  *(_QWORD *)(inited + 64) = v63;
  *(_QWORD *)(inited + 72) = v64;
  swift_bridgeObjectRetain(v56);
  v66 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v68 = v66[2];
  v67 = v66[3];
  v69 = v68 + 1;
  if (v68 >= v67 >> 1)
    v66 = sub_100D0EF94((_QWORD *)(v67 > 1), v68 + 1, 1, v66);
  v66[2] = v69;
  v70 = &v66[2 * v68];
  v70[4] = v54;
  v70[5] = v56;
  v71 = v66[3];
  swift_bridgeObjectRetain(v62);
  if (v69 >= v71 >> 1)
    v66 = sub_100D0EF94((_QWORD *)(v71 > 1), v68 + 2, 1, v66);
  v66[2] = v68 + 2;
  v72 = &v66[2 * v69];
  v72[4] = v60;
  v72[5] = v62;
  if (v65)
  {
    v73 = v66[2];
    v74 = v66[3];
    swift_bridgeObjectRetain(v65);
    if (v73 >= v74 >> 1)
      v66 = sub_100D0EF94((_QWORD *)(v74 > 1), v73 + 1, 1, v66);
    v66[2] = v73 + 1;
    v75 = &v66[2 * v73];
    v75[4] = v63;
    v75[5] = v65;
  }
  v76 = swift_release(inited);
  v77 = (uint64_t)v93;
  v78 = v94;
  v79 = v91;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)(v66, v94, &type metadata for String, v90, v76);
  swift_bridgeObjectRelease();
  v80 = sub_1004CB800(v79, &qword_101412E78);
  v81 = v95;
  static AccessibilityTraits.isButton.getter(v80);
  v82 = (uint64_t)v92;
  ModifiedContent<>.accessibilityRemoveTraits(_:)(v81, v78);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v81, v97);
  sub_1004CB800(v77, &qword_101412E78);
  return sub_1004C4938(v82, v98, &qword_101412E78);
}

uint64_t sub_100DA09AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v2 = sub_1004B804C(&qword_101412E98);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1004B804C(&qword_101412EA0);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v19 - v13;
  sub_100DA0B38((uint64_t)&v19 - v13);
  sub_100DA0EA4();
  sub_1004CB7BC((uint64_t)v14, (uint64_t)v11, &qword_101412EA0);
  v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v5, v8, v2);
  sub_1004CB7BC((uint64_t)v11, a1, &qword_101412EA0);
  v16 = sub_1004B804C(&qword_101412EA8);
  v15((char *)(a1 + *(int *)(v16 + 48)), v5, v2);
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v8, v2);
  sub_1004CB800((uint64_t)v14, &qword_101412EA0);
  v17(v5, v2);
  return sub_1004CB800((uint64_t)v11, &qword_101412EA0);
}

uint64_t sub_100DA0B38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[4];

  v2 = v1;
  v54 = a1;
  v3 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v4;
  __chkstk_darwin(v3);
  v47 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BorderlessButtonStyle(0);
  v46 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101412EF8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101412F00);
  v13 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  v49 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_101412F08);
  v52 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  v17 = __chkstk_darwin(v16);
  v45 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v19 = sub_1004B804C(&qword_101412F10);
  v20 = sub_100DA1324(v2, (uint64_t)&v11[*(int *)(v19 + 44)]);
  BorderlessButtonStyle.init()(v20);
  v21 = sub_1004CBA30(&qword_101412F18, &qword_101412EF8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v22 = sub_1004B7878((unint64_t *)&qword_1013EF1C8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v23 = v9;
  View.buttonStyle<A>(_:)(v8, v9, v6, v21);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v6);
  sub_1004CB800((uint64_t)v11, &qword_101412EF8);
  v24 = v47;
  sub_1004B8460(v2, v47, type metadata accessor for CRLCollaborationParticipantRowView);
  v25 = *(unsigned __int8 *)(v50 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = swift_allocObject(&unk_1012A5E98, v26 + v51, v25 | 7);
  sub_1004B84E0(v24, v27 + v26, type metadata accessor for CRLCollaborationParticipantRowView);
  v55[0] = v23;
  v55[1] = v6;
  v55[2] = v21;
  v55[3] = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v29 = v45;
  v30 = v48;
  View.onTapGesture(count:perform:)(1, sub_100DA7EA4, v27, v48, OpaqueTypeConformance2);
  v31 = swift_release(v27);
  v32 = (*(uint64_t (**)(char *, uint64_t, __n128))(v49 + 8))(v15, v30, v31);
  LOBYTE(v30) = static Edge.Set.all.getter(v32);
  v33 = EdgeInsets.init(_all:)(5.0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v52;
  v40 = v53;
  v42 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v54, v29, v53);
  v43 = v42 + *(int *)(sub_1004B804C(&qword_101412EA0) + 36);
  *(_BYTE *)v43 = v30;
  *(double *)(v43 + 8) = v33;
  *(_QWORD *)(v43 + 16) = v35;
  *(_QWORD *)(v43 + 24) = v37;
  *(_QWORD *)(v43 + 32) = v39;
  *(_BYTE *)(v43 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v29, v40);
}

double sub_100DA0EA4()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v35 = v5;
  v7 = v6;

  v8 = objc_msgSend(v0, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;
  v15 = v14;

  v16 = objc_msgSend(v0, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;
  v23 = v22;

  v24 = objc_msgSend(v0, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;
  v31 = v30;

  v40 = v36;
  v41 = v29;
  v42 = v31;
  v43 = v21;
  v44 = v23;
  v45 = v13;
  v46 = v15;
  v47 = v35;
  v48 = v7;
  v38 = v36;
  v32 = sub_1004B804C(&qword_101412EB0);
  v33 = sub_1004CBA30(&qword_101412EB8, &qword_101412EB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  Menu.init(content:label:)(sub_100DA7E64, v39, sub_100DA7E98, v37, &type metadata for Image, v32, &protocol witness table for Image, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100DA1220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = sub_1004B804C(&qword_1013FF100);
  inited = swift_initStackObject(v1, &v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v3 = *(id *)(v0 + 32);
  v4 = sub_10063B4E0();
  v6 = v5;

  *(_QWORD *)(inited + 32) = v4;
  v7 = inited + 32;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = sub_100DA269C();
  *(_QWORD *)(inited + 56) = v8;
  v9 = objc_msgSend(v3, "collaboratorColorName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;
  v13 = v12;

  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = v13;
  v14 = sub_1008858E4(inited);
  swift_setDeallocating(inited);
  v15 = *(_QWORD *)(inited + 16);
  v16 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  swift_arrayDestroy(v7, v15, v16);
  return v14;
}

uint64_t sub_100DA1324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  unint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  ValueMetadata *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  ValueMetadata *v83;
  unint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;

  v82 = a2;
  v3 = sub_1004B804C(&qword_1013ECE70);
  __chkstk_darwin(v3);
  v78 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013ECE78);
  __chkstk_darwin(v5);
  v79 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1004B804C(&qword_101412F20);
  __chkstk_darwin(v81);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v80 = (uint64_t)&v64 - v11;
  v12 = type metadata accessor for AccessibilityChildBehavior(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_101412F28);
  v77 = *(ValueMetadata **)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_101412F30);
  __chkstk_darwin(v19);
  v70 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v22 = __chkstk_darwin(v21).n128_u64[0];
  v71 = (uint64_t)&v64 - v23;
  v24 = objc_msgSend(*(id *)(a1 + 32), "collaboratorColorForType:", 2, v22);
  v25 = objc_msgSend(v24, "CGColor");

  v89 = Color.init(cgColor:)(v25);
  static AccessibilityChildBehavior.ignore.getter();
  v26 = sub_100DA8178();
  View.accessibilityElement(children:)(v15, &type metadata for CRLUserColorBar, v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v27 = a1;
  v28 = objc_msgSend(*(id *)(a1 + 32), "collaboratorColorName", swift_release(v89).n128_f64[0]);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;
  v32 = v31;

  v89 = v30;
  v90 = v32;
  v83 = &type metadata for CRLUserColorBar;
  v84 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v34 = sub_1004D292C();
  v35 = (uint64_t)v70;
  View.accessibilityLabel<A>(_:)(&v89, v16, &type metadata for String, OpaqueTypeConformance2, v34);
  v36 = swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, __n128))v77->Description)(v18, v16, v36);
  v37 = v71;
  v38 = sub_1004C4938(v35, v71, &qword_101412F30);
  v39 = static Alignment.center.getter(v38);
  _FrameLayout.init(width:height:alignment:)(&v83, 0x4018000000000000, 0, 0, 1, v39, v40);
  v77 = v83;
  v76 = v84;
  v75 = v85;
  v74 = v86;
  v73 = v87;
  v72 = v88;
  v41 = *(void **)(v27 + 32);
  v42 = type metadata accessor for CRLCollaborationParticipant(0);
  v43 = sub_1004B7878(&qword_101412CC8, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF848);
  v69 = ObservedObject.init(wrappedValue:)(v41, v42, v43);
  v45 = v44;
  v46 = static Alignment.center.getter(v69);
  _FrameLayout.init(width:height:alignment:)(&v89, 0x4020000000000000, 0, 0, 1, v46, v47);
  v68 = v89;
  v67 = v90;
  v66 = v91;
  v48 = v92;
  v49 = v93;
  v65 = v94;
  v50 = v78;
  v51 = sub_100DA1960(v78);
  v52 = static Alignment.leading.getter(v51);
  v53 = v79;
  sub_1006C96AC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v79, 0.0, 1, 0.0, 1, v52, v54);
  sub_1004CB800(v50, &qword_1013ECE70);
  sub_1004CB7BC(v53, (uint64_t)v8, (uint64_t *)&unk_1013ECE78);
  v8[*(int *)(v81 + 36)] = 0;
  sub_1004CB800(v53, (uint64_t *)&unk_1013ECE78);
  v55 = v80;
  sub_1004C4938((uint64_t)v8, v80, &qword_101412F20);
  sub_1004CB7BC(v37, v35, &qword_101412F30);
  sub_1004CB7BC(v55, (uint64_t)v8, &qword_101412F20);
  v56 = v82;
  sub_1004CB7BC(v35, v82, &qword_101412F30);
  v57 = (int *)sub_1004B804C(&qword_101412F40);
  v58 = v56 + v57[12];
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  *(_QWORD *)(v58 + 16) = v77;
  *(_BYTE *)(v58 + 24) = v76;
  *(_QWORD *)(v58 + 32) = v75;
  *(_BYTE *)(v58 + 40) = v74;
  *(_QWORD *)(v58 + 48) = v73;
  *(_QWORD *)(v58 + 56) = v72;
  v59 = (uint64_t *)(v56 + v57[16]);
  *v59 = v69;
  v59[1] = (uint64_t)v45;
  v60 = v56 + v57[20];
  *(_QWORD *)v60 = 0;
  *(_BYTE *)(v60 + 8) = 1;
  *(_QWORD *)(v60 + 16) = v68;
  *(_BYTE *)(v60 + 24) = v67;
  *(_QWORD *)(v60 + 32) = v66;
  *(_BYTE *)(v60 + 40) = v48;
  v61 = v65;
  *(_QWORD *)(v60 + 48) = v49;
  *(_QWORD *)(v60 + 56) = v61;
  sub_1004CB7BC((uint64_t)v8, v56 + v57[24], &qword_101412F20);
  v62 = v45;
  sub_1004CB800(v55, &qword_101412F20);
  sub_1004CB800(v37, &qword_101412F30);
  sub_1004CB800((uint64_t)v8, &qword_101412F20);

  return sub_1004CB800(v35, &qword_101412F30);
}

uint64_t sub_100DA1960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v67 = a1;
  v65 = sub_1004B804C(&qword_101412F48);
  v2 = __chkstk_darwin(v65);
  v4 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0, v2);
  v63 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1004B804C(&qword_101412F50);
  __chkstk_darwin(v64);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1004B804C(&qword_101412F58);
  v10 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - v14;
  v16 = sub_100DA269C();
  if (v17)
  {
    v18 = (uint64_t)v16;
    v19 = v17;
    v61 = v5;
    v62 = v10;
    v20 = sub_100DA269C();
    if (v21)
    {
      v23 = (uint64_t)v20;
      v24 = v21;
      *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v22);
      *((_QWORD *)v9 + 1) = 0;
      v9[16] = 1;
      v25 = sub_1004B804C(&qword_101412F68);
      sub_100DA21EC(v1, v18, v19, v23, v24, (uint64_t *)&v9[*(int *)(v25 + 44)]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static AccessibilityChildBehavior.combine.getter(v26);
      v27 = sub_1004CBA30(&qword_101412F60, &qword_101412F50, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v28 = v64;
      View.accessibilityElement(children:)(v7, v64, v27);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v61);
      sub_1004CB800((uint64_t)v9, &qword_101412F50);
      v29 = v62;
      v30 = v66;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v15, v12, v66);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v4, v15, v30);
      swift_storeEnumTagMultiPayload(v4, v65, 0);
      v31 = sub_1004B804C(&qword_1014120C8);
      v68 = v28;
      v69 = v27;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
      v33 = sub_100DA84C4((unint64_t *)&qword_1014120D0, &qword_1014120C8, &qword_1014120D8, &qword_1014120E0);
      _ConditionalContent<>.init(storage:)(v4, v30, v31, OpaqueTypeConformance2, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v30);
    }
    swift_bridgeObjectRelease();
  }
  v35 = *(id *)(v1 + 32);
  v36 = sub_10063B4E0();
  v38 = v37;

  v68 = v36;
  v69 = v38;
  v39 = sub_1004D292C();
  v40 = Text.init<A>(_:)(&v68, &type metadata for String, v39);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  v47 = static Color.primary.getter();
  v48 = Text.foregroundColor(_:)(v47, v40, v42, v46, v44);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  swift_release(v47);
  sub_1005EFC24(v40, v42, v46);
  *(_QWORD *)&v55 = swift_bridgeObjectRelease().n128_u64[0];
  KeyPath = swift_getKeyPath(byte_100F388A0, v55);
  *(_QWORD *)v4 = v48;
  *((_QWORD *)v4 + 1) = v50;
  v4[16] = v52 & 1;
  *((_QWORD *)v4 + 3) = v54;
  *((_QWORD *)v4 + 4) = KeyPath;
  *((_QWORD *)v4 + 5) = 1;
  v4[48] = 0;
  swift_storeEnumTagMultiPayload(v4, v65, 1);
  v57 = sub_1004B804C(&qword_1014120C8);
  v58 = sub_1004CBA30(&qword_101412F60, &qword_101412F50, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v68 = v64;
  v69 = v58;
  v59 = swift_getOpaqueTypeConformance2(&v68, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v60 = sub_100DA84C4((unint64_t *)&qword_1014120D0, &qword_1014120C8, &qword_1014120D8, &qword_1014120E0);
  return _ConditionalContent<>.init(storage:)(v4, v66, v57, v59, v60);
}

void sub_100DA1DAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  char v27;
  id v28;
  uint64_t Strong;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  char *v40;
  __n128 v41;
  char v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52[24];
  char v53[24];
  _QWORD v54[3];
  char v55[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - v6;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v55, 0, 0);
  v8 = (id)static OS_os_log.crlDefault;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Navigating to collaborator cursor for user.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  v11 = (void *)v0[4];
  KeyPath = swift_getKeyPath(byte_100F38858);
  v13 = swift_getKeyPath(byte_100F38880);
  v14 = v11;
  static Published.subscript.getter(v54, v14, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v15 = v54[0];
  if (!(v54[0] >> 62))
  {
    v16 = *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v54[0]);
    if (v16)
      goto LABEL_5;
LABEL_35:

    swift_bridgeObjectRelease_n(v15, 2);
    return;
  }
  if (v54[0] < 0)
    v45 = v54[0];
  else
    v45 = v54[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v54[0]);
  v16 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v16)
    goto LABEL_35;
LABEL_5:
  v50 = v15 & 0xC000000000000001;
  v46 = v14;
  v47 = v1;
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v17 = (char *)*(id *)(v15 + 32);
  }
  v18 = v17;
  v49 = v16 - 1;
  if (v16 != 1)
  {
    if (v16 >= 2)
    {
      if (v50 || (v32 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10), v32 >= 2) && v49 < v32)
      {
        v33 = 0;
        v48 = v15;
        do
        {
          if (v50)
            v34 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33 + 1, v15);
          else
            v34 = (char *)*(id *)(v15 + 8 * v33 + 40);
          v35 = v34;
          v36 = &v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          v37 = swift_beginAccess(&v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v54, 0, 0);
          v38 = v51;
          v39 = *(void (**)(char *, char *, uint64_t, __n128))(v51 + 16);
          v39(v7, v36, v2, v37);
          v40 = &v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          v41 = swift_beginAccess(&v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v53, 0, 0);
          v39(v4, v40, v2, v41);
          v42 = static Date.< infix(_:_:)(v7, v4);
          v43 = *(void (**)(char *, uint64_t))(v38 + 8);
          v43(v4, v2);
          v43(v7, v2);
          if ((v42 & 1) != 0)
            v44 = v18;
          else
            v44 = v35;
          if ((v42 & 1) != 0)
            v18 = v35;

          ++v33;
          v15 = v48;
        }
        while (v49 != v33);
        goto LABEL_9;
      }
LABEL_39:
      __break(1u);
      return;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_9:
  swift_bridgeObjectRelease_n(v15, 2);

  v19 = v47;
  v20 = *(char **)(*v47 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  v21 = &v20[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  swift_beginAccess(&v20[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap], v52, 0, 0);
  v22 = *(_QWORD *)v21;
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = (uint64_t)&v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
    v24 = v18;
    v25 = v20;
    swift_bridgeObjectRetain(v22);
    v26 = sub_100842EFC(v23);
    if ((v27 & 1) != 0)
    {
      v28 = *(id *)(*(_QWORD *)(v22 + 56) + 24 * v26 + 16);
      swift_bridgeObjectRelease();
      Strong = swift_unknownObjectWeakLoadStrong(v19 + 7);
      if (Strong)
      {
        v30 = Strong;
        v31 = v28;
        sub_1004D9EE0((uint64_t)v24, (uint64_t)v31);

        swift_unknownObjectRelease(v30);
      }
      else
      {

      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {

  }
}

double sub_100DA21EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  double result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  _QWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  _BOOL8 v91;
  char v92;
  uint64_t v93;
  uint64_t v94;

  v80 = a4;
  v81 = a5;
  v72 = a3;
  v71 = a2;
  v84 = a6;
  v7 = sub_1004B804C(&qword_101412F70);
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v79 = (char *)&v67 - v10;
  __chkstk_darwin(v11);
  v82 = (uint64_t)&v67 - v12;
  v69 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(id *)(a1 + 32);
  v17 = sub_10063B4E0();
  v19 = v18;

  v86 = v17;
  v87 = v19;
  v20 = sub_1004D292C();
  v70 = v20;
  v21 = Text.init<A>(_:)(&v86, &type metadata for String, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  v28 = static Color.primary.getter();
  v78 = Text.foregroundColor(_:)(v28, v21, v23, v27, v25);
  v76 = v29;
  LOBYTE(v19) = v30;
  v77 = v31;
  swift_release(v28);
  v75 = v19 & 1;
  sub_1005EFC24(v21, v23, v27);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLCollaborationParticipantRowView(0);
  v32 = sub_100BF0BDC((uint64_t)v15);
  LOBYTE(v21) = DynamicTypeSize.isAccessibilitySize.getter(v32);
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34 = v69;
  v33(v15, v69);
  v35 = 1;
  if ((v21 & 1) != 0)
    v35 = 2;
  v74 = v35;
  KeyPath = swift_getKeyPath(byte_100F388A0);
  v86 = v71;
  v87 = v72;
  swift_bridgeObjectRetain(v72);
  v36 = Text.init<A>(_:)(&v86, &type metadata for String, v20);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  v43 = static Color.secondary.getter();
  v71 = Text.foregroundColor(_:)(v43, v36, v38, v42, v40);
  v68 = v44;
  v46 = v45;
  v72 = v47;
  swift_release(v43);
  LOBYTE(v43) = v46 & 1;
  sub_1005EFC24(v36, v38, v42);
  swift_bridgeObjectRelease();
  v48 = sub_100BF0BDC((uint64_t)v15);
  LOBYTE(v36) = DynamicTypeSize.isAccessibilitySize.getter(v48);
  v33(v15, v34);
  v49 = swift_getKeyPath(byte_100F388A0);
  v50 = static Font.caption.getter();
  v51 = swift_getKeyPath(byte_100F388D0);
  v52 = v71;
  v53 = v68;
  v86 = v71;
  v87 = v68;
  v88 = v43;
  v89 = v72;
  v90 = v49;
  v91 = (v36 & 1) == 0;
  v92 = v36 & 1;
  v93 = v51;
  v94 = v50;
  v85[0] = v80;
  v85[1] = v81;
  v54 = sub_1004B804C(&qword_101412F78);
  v55 = sub_100DA81CC();
  v56 = (uint64_t)v79;
  View.accessibilityLabel<A>(_:)(v85, v54, &type metadata for String, v55, v70);
  sub_1005EFC24(v52, v53, v43);
  swift_release(v50);
  swift_release(v51);
  swift_release(v49);
  swift_bridgeObjectRelease();
  v57 = v82;
  sub_1004C4938(v56, v82, &qword_101412F70);
  v58 = v83;
  sub_1004CB7BC(v57, v83, &qword_101412F70);
  v59 = v84;
  v60 = v77;
  v61 = v78;
  v62 = v76;
  *v84 = v78;
  v59[1] = v62;
  LOBYTE(v42) = v75;
  *((_BYTE *)v59 + 16) = v75;
  v63 = KeyPath;
  v59[3] = v60;
  v59[4] = v63;
  v59[5] = v74;
  *((_BYTE *)v59 + 48) = 0;
  v64 = v59;
  v65 = sub_1004B804C(&qword_101412F88);
  sub_1004CB7BC(v58, (uint64_t)v64 + *(int *)(v65 + 48), &qword_101412F70);
  sub_1006CCFD0(v61, v62, v42);
  swift_bridgeObjectRetain(v60);
  swift_retain(v63);
  sub_1004CB800(v57, &qword_101412F70);
  sub_1004CB800(v58, &qword_101412F70);
  sub_1005EFC24(v61, v62, v42);
  swift_release(v63);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_100DA269C()
{
  uint64_t v0;
  CFArrayRef (__cdecl **v1)(CTFontDescriptorRef, CFSetRef);
  char **v2;
  id v3;
  char **v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  char **v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  double *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  double *v28;
  id v29;
  NSString v30;
  NSString v31;
  char **v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  double *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v61;
  char **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char **v66;

  v1 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
  v2 = &selRef_isLineSegment;
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = &selRef_isLineSegment;
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v3, "localizedStringForKey:value:table:", v5, v6, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v61 = v8;
  v62 = v9;

  v10 = *(void **)(v0 + 16);
  KeyPath = swift_getKeyPath("H8T");
  v12 = swift_getKeyPath("(8T");
  v13 = v10;
  static Published.subscript.getter(&v65, v13, KeyPath, v12);

  swift_release(KeyPath);
  swift_release(v12);
  v14 = v65;
  v15 = *(id *)(v0 + 32);
  LOBYTE(v12) = sub_10062230C(v15, v14);

  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    v24 = _swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;
  v23 = v22;

  v24 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v26 = *((_QWORD *)v24 + 2);
  v25 = *((_QWORD *)v24 + 3);
  v27 = (void *)(v26 + 1);
  if (v26 >= v25 >> 1)
    goto LABEL_27;
  while (1)
  {
    *((_QWORD *)v24 + 2) = v27;
    v28 = &v24[2 * v26];
    *((_QWORD *)v28 + 4) = v21;
    *((_QWORD *)v28 + 5) = v23;
LABEL_5:
    if (*((_BYTE *)v15 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isDocumentOwner) == 1)
    {
      v29 = objc_msgSend((id)objc_opt_self(v1[375]), v2[428]);
      v30 = String._bridgeToObjectiveC()();
      v31 = String._bridgeToObjectiveC()();
      v32 = v4;
      v33 = objc_msgSend(v29, v4[388], v30, v31, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v35 = v34;
      v37 = v36;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = (double *)sub_100D0EF94(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
      v39 = *((_QWORD *)v24 + 2);
      v38 = *((_QWORD *)v24 + 3);
      v4 = v32;
      if (v39 >= v38 >> 1)
        v24 = (double *)sub_100D0EF94((_QWORD *)(v38 > 1), v39 + 1, 1, v24);
      *((_QWORD *)v24 + 2) = v39 + 1;
      v40 = &v24[2 * v39];
      *((_QWORD *)v40 + 4) = v35;
      *((_QWORD *)v40 + 5) = v37;
    }
    v41 = swift_getKeyPath(byte_100F38710, v61);
    v42 = swift_getKeyPath(byte_100F38738);
    v43 = v15;
    static Published.subscript.getter(&v65, v43, v41, v42);

    swift_release(v41);
    swift_release(v42);
    if (v65 != 1)
      break;
    v44 = objc_msgSend((id)objc_opt_self(v1[375]), v2[428]);
    v45 = String._bridgeToObjectiveC()();
    v46 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v44, v4[388], v45, v46, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v49 = v48;
    v51 = v50;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v24 = (double *)sub_100D0EF94(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    v53 = *((_QWORD *)v24 + 2);
    v52 = *((_QWORD *)v24 + 3);
    if (v53 >= v52 >> 1)
      v24 = (double *)sub_100D0EF94((_QWORD *)(v52 > 1), v53 + 1, 1, v24);
    *((_QWORD *)v24 + 2) = v53 + 1;
    v54 = &v24[2 * v53];
    *((_QWORD *)v54 + 4) = v49;
    *((_QWORD *)v54 + 5) = v51;
LABEL_18:
    v15 = (id)*((_QWORD *)v24 + 4);
    v21 = *((_QWORD *)v24 + 5);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease();
    v25 = *((_QWORD *)v24 + 2);
    if (v25 == 1)
      goto LABEL_25;
    v1 = (CFArrayRef (__cdecl **)(CTFontDescriptorRef, CFSetRef))(v24 + 7);
    v26 = 1;
    v23 = &type metadata for String;
    v27 = &protocol witness table for String;
    v4 = (char **)&protocol witness table for String;
    while (v26 < v25)
    {
      if (v21)
      {
        v55 = (uint64_t)*(v1 - 1);
        v2 = (char **)*v1;
        v65 = v61;
        v66 = v62;
        v63 = (uint64_t)v15;
        v64 = v21;
        swift_bridgeObjectRetain(v2);
        v56 = swift_bridgeObjectRetain(v21);
        v63 = String.init<A>(_:)(&v63, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v56);
        v64 = v57;
        String.append<A>(contentsOf:)(&v65, &type metadata for String, &protocol witness table for String);
        swift_bridgeObjectRelease();
        v65 = v55;
        v66 = v2;
        v58 = swift_bridgeObjectRetain(v64);
        v63 = String.init<A>(_:)(&v63, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v58);
        v64 = v59;
        String.append<A>(contentsOf:)(&v65, &type metadata for String, &protocol witness table for String);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = (id)v63;
        v21 = v64;
        v25 = *((_QWORD *)v24 + 2);
      }
      ++v26;
      v1 += 2;
      if (v26 == v25)
        goto LABEL_25;
    }
    __break(1u);
LABEL_27:
    v24 = (double *)sub_100D0EF94((_QWORD *)(v25 > 1), (int64_t)v27, 1, v24);
  }
  if (*((_QWORD *)v24 + 2))
    goto LABEL_18;
  v15 = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100DA2CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t KeyPath;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  char v50;
  char v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  void (*v62)(char *, uint64_t);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  double v67;
  void *v68;
  char *v69;
  uint64_t v70;
  id v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, char *, uint64_t);
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char v157[16];
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160[16];

  v147 = a8;
  v137 = a7;
  v136 = a6;
  v135 = a5;
  v134 = a4;
  v155 = a3;
  v143 = a9;
  v144 = a2;
  v138 = sub_1004B804C(&qword_101412EC0);
  __chkstk_darwin(v138);
  v139 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101412EC8);
  __chkstk_darwin(v12);
  v148 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v150 = (uint64_t)&v133 - v15;
  v16 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (void (*)(char *, char *, uint64_t))((char *)&v133 - v21);
  v23 = sub_1004B804C(&qword_101412ED0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v146 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v142 = (char *)&v133 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v133 - v29;
  v153 = sub_1004B804C(&qword_101412ED8);
  __chkstk_darwin(v153);
  v145 = (uint64_t)&v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v133 - v33;
  __chkstk_darwin(v35);
  v156 = (uint64_t)&v133 - v36;
  sub_1004B8460(a1, (uint64_t)v22, type metadata accessor for CRLCollaborationParticipantRowView);
  v37 = *(unsigned __int8 *)(v17 + 80);
  v38 = (v37 + 16) & ~v37;
  v151 = v38 + v18;
  v149 = v37 | 7;
  v39 = swift_allocObject(&unk_1012A5D58, v38 + v18, v37 | 7);
  v141 = v38;
  v154 = v22;
  sub_1004B84E0((uint64_t)v22, v39 + v38, type metadata accessor for CRLCollaborationParticipantRowView);
  v158 = v144;
  v159 = v155;
  v40 = sub_1004B804C(&qword_101411BF0);
  v41 = sub_1004CBA30(&qword_101411C00, &qword_101411BF0, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v155 = v40;
  v140 = v41;
  Button.init(action:label:)(sub_100DA7EA4, v39, sub_100DA7EB0, v157, v40, v41);
  v42 = *(void **)(a1 + 48);
  KeyPath = swift_getKeyPath(byte_100F38778);
  v44 = swift_getKeyPath(byte_100F387A0);
  v45 = v42;
  static Published.subscript.getter(v160, v45, KeyPath, v44);

  swift_release(KeyPath);
  swift_release(v44);
  v46 = *(void **)v160;
  if (*(_QWORD *)v160)
  {
    v47 = *(void **)(a1 + 32);
    type metadata accessor for CRLCollaborationParticipant(0);
    v48 = v47;
    v49 = v46;
    v50 = static NSObject.== infix(_:_:)(v49, v48);

    sub_1004B8460(a1, (uint64_t)v19, type metadata accessor for CRLCollaborationParticipantRowView);
    if ((v50 & 1) != 0)
    {
      v51 = 1;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1004B8460(a1, (uint64_t)v19, type metadata accessor for CRLCollaborationParticipantRowView);
  }
  v52 = (void *)*((_QWORD *)v19 + 2);
  v53 = swift_getKeyPath("H8T");
  v54 = swift_getKeyPath("(8T");
  v55 = v52;
  static Published.subscript.getter(v160, v55, v53, v54);

  swift_release(v53);
  swift_release(v54);
  v56 = *(_QWORD *)v160;
  v57 = *((id *)v19 + 4);
  v51 = sub_10062230C(v57, v56);

  swift_bridgeObjectRelease();
LABEL_6:
  v58 = (uint64_t)v154;
  v144 = a10;
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLCollaborationParticipantRowView);
  v59 = swift_getKeyPath("p7T");
  v60 = swift_allocObject(&unk_1012A5D80, 17, 7);
  *(_BYTE *)(v60 + 16) = v51 & 1;
  v154 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v154(v34, v30, v23);
  v61 = (uint64_t *)&v34[*(int *)(v153 + 36)];
  *v61 = v59;
  v61[1] = (uint64_t)sub_100712094;
  v61[2] = v60;
  v62 = *(void (**)(char *, uint64_t))(v24 + 8);
  v152 = v23;
  v62(v30, v23);
  sub_1004C4938((uint64_t)v34, v156, &qword_101412ED8);
  v63 = *(void **)(a1 + 48);
  v64 = swift_getKeyPath(byte_100F38778);
  v65 = swift_getKeyPath(byte_100F387A0);
  v66 = v63;
  static Published.subscript.getter(v160, v66, v64, v65);

  swift_release(v64);
  *(_QWORD *)&v67 = swift_release(v65).n128_u64[0];
  v68 = *(void **)v160;
  v69 = v148;
  v70 = v150;
  v153 = (uint64_t)v62;
  if (*(_QWORD *)v160)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v71 = *(id *)(a1 + 32);
    v72 = static NSObject.== infix(_:_:)(v68, v71);

    if ((v72 & 1) != 0)
    {
      sub_1004B8460(a1, v58, type metadata accessor for CRLCollaborationParticipantRowView);
      v73 = swift_allocObject(&unk_1012A5DF8, v151, v149);
      v74 = v141;
      v75 = sub_1004B84E0(v58, v73 + v141, type metadata accessor for CRLCollaborationParticipantRowView);
      __chkstk_darwin(v75);
      v76 = v135;
      *(&v133 - 2) = v134;
      *(&v133 - 1) = v76;
      v77 = v142;
      v78 = v140;
      Button.init(action:label:)(sub_100DA8100, v73, sub_100DA810C, &v133 - 4, v155, v140);
      v79 = v139;
      v80 = v152;
      v81 = v58;
      v154(v139, v77, v152);
      swift_storeEnumTagMultiPayload(v79, v138, 0);
      v82 = sub_1004CBA30(&qword_101412EF0, &qword_101412ED0, (uint64_t)&protocol conformance descriptor for Button<A>);
      v83 = v79;
      v84 = v74;
      v85 = a1;
      v86 = v151;
      _ConditionalContent<>.init(storage:)(v83, v80, v80, v82, v82);

      v87 = v149;
      v88 = v77;
      v89 = v77;
      v90 = v86;
      v91 = v80;
      v92 = v78;
      ((void (*)(char *, uint64_t))v153)(v89, v91);
      v93 = sub_1004B804C(&qword_101412EE0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v69, 0, 1, v93);
      v94 = (uint64_t)v69;
      v95 = (uint64_t)v69;
      v96 = v150;
      sub_1004C4938(v95, v150, &qword_101412EC8);
      v97 = v85;
      v98 = v143;
      goto LABEL_13;
    }

  }
  v99 = *(void **)(a1 + 32);
  v100 = swift_getKeyPath("87T", v67);
  v101 = swift_getKeyPath(byte_100F38828);
  v102 = v99;
  static Published.subscript.getter(v160, v102, v100, v101);

  swift_release(v100);
  swift_release(v101);
  if (v160[0] == 1)
  {
    sub_1004B8460(a1, v58, type metadata accessor for CRLCollaborationParticipantRowView);
    v135 = a1;
    v103 = v149;
    v104 = swift_allocObject(&unk_1012A5DD0, v151, v149);
    v105 = v141;
    v106 = sub_1004B84E0(v58, v104 + v141, type metadata accessor for CRLCollaborationParticipantRowView);
    __chkstk_darwin(v106);
    v107 = v137;
    *(&v133 - 2) = v136;
    *(&v133 - 1) = v107;
    v108 = v70;
    v109 = v142;
    v110 = v104;
    v87 = v103;
    v111 = v140;
    Button.init(action:label:)(sub_100DA80B4, v110, sub_100DA90EC, &v133 - 4, v155, v140);
    v112 = v139;
    v113 = v152;
    v81 = v58;
    v154(v139, v109, v152);
    swift_storeEnumTagMultiPayload(v112, v138, 1);
    v114 = sub_1004CBA30(&qword_101412EF0, &qword_101412ED0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v115 = v112;
    v84 = v105;
    v92 = v111;
    _ConditionalContent<>.init(storage:)(v115, v113, v113, v114, v114);
    v88 = v109;
    v116 = v109;
    v90 = v151;
    ((void (*)(char *, uint64_t))v153)(v116, v113);
    v117 = sub_1004B804C(&qword_101412EE0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v69, 0, 1, v117);
    v94 = (uint64_t)v69;
    v118 = (uint64_t)v69;
    v96 = v108;
    sub_1004C4938(v118, v108, &qword_101412EC8);
    v97 = v135;
    v98 = v143;
  }
  else
  {
    v119 = sub_1004B804C(&qword_101412EE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v70, 1, 1, v119);
    v120 = v58;
    v94 = (uint64_t)v69;
    v96 = v70;
    v121 = a1;
    v88 = v142;
    v98 = v143;
    v84 = v141;
    v87 = v149;
    v92 = v140;
    v81 = v120;
    v97 = v121;
    v90 = v151;
  }
LABEL_13:
  sub_1004B8460(v97, v81, type metadata accessor for CRLCollaborationParticipantRowView);
  v122 = swift_allocObject(&unk_1012A5DA8, v90, v87);
  v123 = sub_1004B84E0(v81, v122 + v84, type metadata accessor for CRLCollaborationParticipantRowView);
  __chkstk_darwin(v123);
  v124 = v144;
  *(&v133 - 2) = v147;
  *(&v133 - 1) = v124;
  v125 = v88;
  Button.init(action:label:)(sub_100DA806C, v122, sub_100DA8080, &v133 - 4, v155, v92);
  v126 = v145;
  sub_1004CB7BC(v156, v145, &qword_101412ED8);
  sub_1004CB7BC(v96, v94, &qword_101412EC8);
  v127 = v146;
  v128 = v152;
  v129 = (void (*)(uint64_t, char *, uint64_t))v154;
  v154(v146, v125, v152);
  sub_1004CB7BC(v126, v98, &qword_101412ED8);
  v130 = sub_1004B804C(&qword_101412EE8);
  sub_1004CB7BC(v94, v98 + *(int *)(v130 + 48), &qword_101412EC8);
  v129(v98 + *(int *)(v130 + 64), v127, v128);
  v131 = (void (*)(char *, uint64_t))v153;
  ((void (*)(char *, uint64_t))v153)(v125, v128);
  sub_1004CB800(v96, &qword_101412EC8);
  sub_1004CB800(v156, &qword_101412ED8);
  v131(v127, v128);
  sub_1004CB800(v94, &qword_101412EC8);
  return sub_1004CB800(v126, &qword_101412ED8);
}

double sub_100DA3804()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  char v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  id *v23;
  double v24;
  uint64_t v25;
  _BYTE v26[24];
  id v27[3];
  ValueMetadata *v28;
  unint64_t v29;
  _BYTE v30[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v30, 0, 0);
  v1 = (id)static OS_os_log.crlDefault;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Unfollowing user.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v6 = Strong;
    v28 = &type metadata for CRLFeatureFlags;
    v7 = sub_1004DB6DC();
    v29 = v7;
    LOBYTE(v27[0]) = 11;
    v8 = isFeatureEnabled(_:)(v27);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
    if ((v8 & 1) == 0)
      goto LABEL_16;
    v9 = *(void **)(*(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    v28 = &type metadata for CRLFeatureFlags;
    v29 = v7;
    LOBYTE(v27[0]) = 11;
    v10 = v9;
    v11 = isFeatureEnabled(_:)(v27);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
    if ((v11 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(byte_100F38778);
      v13 = swift_getKeyPath(byte_100F387A0);
      static Published.subscript.getter(v27, v10, KeyPath, v13);
      swift_release(KeyPath);
      swift_release(v13);
      if (v27[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, &v25, 0, 0);
        v14 = (id)static OS_os_log.crlFollow;
        v16 = static os_log_type_t.default.getter(v15);
        sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(0);
      }
    }

    v17 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v17)
    {
      v18 = qword_1013DD8C8;
      v19 = v17;
      if (v18 != -1)
        swift_once(&qword_1013DD8C8, sub_100A069BC);
      swift_beginAccess(&static OS_os_log.shareState, v27, 0, 0);
      v20 = (id)static OS_os_log.shareState;
      v22 = static os_log_type_t.default.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      v23 = (id *)&v19[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
      *(_QWORD *)&v24 = swift_beginAccess(&v19[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], v26, 0, 0).n128_u64[0];
      if (*v23)
        objc_msgSend(*v23, "dismissPopoverAnimated:completion:", 1, 0, v24);
      swift_unknownObjectRelease(v6);

    }
    else
    {
LABEL_16:
      *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  return result;
}

double sub_100DA3B20()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  id *v16;
  double v17;
  uint64_t v18;
  _BYTE v19[24];
  _QWORD v20[5];
  _BYTE v21[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v21, 0, 0);
  v1 = (id)static OS_os_log.crlDefault;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Following user.", 15, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(void **)(v0 + 32);
    v20[3] = &type metadata for CRLFeatureFlags;
    v20[4] = sub_1004DB6DC();
    LOBYTE(v20[0]) = 11;
    v8 = v7;
    LOBYTE(v7) = isFeatureEnabled(_:)(v20);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
    if ((v7 & 1) != 0)
    {
      v9 = objc_retain(*(id *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
      sub_1006F63B4(v8, 0);

      v10 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
      if (v10)
      {
        v11 = qword_1013DD8C8;
        v12 = v10;
        if (v11 != -1)
          swift_once(&qword_1013DD8C8, sub_100A069BC);
        swift_beginAccess(&static OS_os_log.shareState, v20, 0, 0);
        v13 = (id)static OS_os_log.shareState;
        v15 = static os_log_type_t.default.getter(v14);
        sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

        v16 = (id *)&v12[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        *(_QWORD *)&v17 = swift_beginAccess(&v12[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], v19, 0, 0).n128_u64[0];
        if (*v16)
          objc_msgSend(*v16, "dismissPopoverAnimated:completion:", 1, 0, v17);

      }
      if (qword_1013DDF50 != -1)
        swift_once(&qword_1013DDF50, sub_100D68404);
      v18 = sub_1004B804C(&qword_1013E6D60);
      sub_1004F2A1C(v18, (uint64_t)qword_1014815B8);
      Tips.Event.sendDonation<>(_:)(0, 0);
    }

    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_100DA3D94(uint64_t a1)
{
  id v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  _QWORD aBlock[5];
  _QWORD *v17;
  char v18[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v18, 0, 0);
  v2 = (id)static OS_os_log.crlDefault;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Showing contact card for user.", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = *(void **)(*(_QWORD *)(a1 + 32) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v5)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 56);
    if (Strong)
    {
      v7 = (void *)Strong;
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v8 = swift_allocObject(&unk_1012A5E20, 24, 7);
      *(_QWORD *)(v8 + 16) = v7;
      v9 = v5;
      swift_unknownObjectRetain(v7);
      v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100DA813C, v8);
      v11 = (_QWORD *)swift_allocObject(&unk_1012A5E48, 40, 7);
      v11[2] = v9;
      v11[3] = v10;
      v11[4] = v7;
      aBlock[4] = sub_100DA8148;
      v17 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_1012A5E60;
      v12 = _Block_copy(aBlock);
      v13 = v17;
      v14 = v9;
      swift_unknownObjectRetain(v7);
      v15 = v10;
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, v12, swift_release(v13).n128_f64[0]);
      _Block_release(v12);

      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t sub_100DA3FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  __n128 v8;
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v7 = sub_1004D292C();
  v8 = swift_bridgeObjectRetain(a2);
  return Label<>.init<A>(_:image:)(v10, a3, a4, &type metadata for String, v7, v8);
}

uint64_t sub_100DA4020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v2 = type metadata accessor for ColorSchemeContrast(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_1004B804C(&qword_1013E6E38);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Image.init(systemName:)(0x73697370696C6C65, 0xEF656C637269632ELL);
  type metadata accessor for CRLCollaborationParticipantRowView(0);
  sub_100BF0764((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ColorSchemeContrast.standard(_:), v2);
  v13 = static ColorSchemeContrast.== infix(_:_:)(v8, v5);
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  v15 = ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
  if ((v13 & 1) != 0)
    static SymbolRenderingMode.palette.getter(v15);
  else
    static SymbolRenderingMode.monochrome.getter(v15);
  v16 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 0, 1, v16);
  v17 = Image.symbolRenderingMode(_:)(v11, v12);
  swift_release(v12);
  result = sub_1004CB800((uint64_t)v11, &qword_1013E6E38);
  *a1 = v17;
  return result;
}

uint64_t sub_100DA41D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _OWORD v31[7];

  v30 = a2;
  v3 = sub_1004B804C(&qword_101413020);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101413028);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_1004B804C(&qword_101413030);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - v17;
  sub_100DA4484((uint64_t)&v30 - v17);
  sub_100DA6878(a1, (uint64_t)v31);
  v19 = swift_allocObject(&unk_1012A5F50, 129, 7);
  sub_100DA86E8((uint64_t)v31, v19 + 16);
  v20 = sub_1004B804C(&qword_101413038);
  v21 = sub_100DA8770();
  v22 = Button.init(action:label:)(sub_100DA8768, v19, sub_100DA5270, 0, v20, v21);
  v23 = static Alignment.trailing.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v31, 0x4044000000000000, 0, 0, 1, v23, v24);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  v25 = &v9[*(int *)(v7 + 36)];
  v26 = v31[1];
  *(_OWORD *)v25 = v31[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v31[2];
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1004C4938((uint64_t)v9, (uint64_t)v12, &qword_101413028);
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v15, &qword_101413030);
  sub_1004CB7BC((uint64_t)v12, (uint64_t)v9, &qword_101413028);
  v27 = v30;
  sub_1004CB7BC((uint64_t)v15, v30, &qword_101413030);
  v28 = sub_1004B804C(&qword_101413048);
  sub_1004CB7BC((uint64_t)v9, v27 + *(int *)(v28 + 48), &qword_101413028);
  sub_1004CB800((uint64_t)v12, &qword_101413028);
  sub_1004CB800((uint64_t)v18, &qword_101413030);
  sub_1004CB800((uint64_t)v9, &qword_101413028);
  return sub_1004CB800((uint64_t)v15, &qword_101413030);
}

uint64_t sub_100DA4484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[4];
  _QWORD v44[44];
  _BYTE v45[320];
  _BYTE v46[336];
  _BYTE v47[360];

  v42 = a1;
  v2 = type metadata accessor for BorderlessButtonStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_101413050);
  v7 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v39 = v7;
  __chkstk_darwin(v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101413058);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v11);
  sub_100DA4770(v1, (uint64_t)v45);
  v46[328] = 0;
  memcpy(&v46[7], v45, 0x140uLL);
  v44[0] = v14;
  v44[1] = 0;
  LOBYTE(v44[2]) = 0;
  v15 = memcpy((char *)&v44[2] + 1, v46, 0x147uLL);
  LOBYTE(v44[43]) = 0;
  BorderlessButtonStyle.init()(v15);
  v16 = sub_1004B804C(&qword_101413060);
  v17 = sub_100DA881C();
  v18 = sub_1004B7878((unint64_t *)&qword_1013EF1C8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)(v5, v16, v2, v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  memcpy(v47, v44, 0x159uLL);
  sub_100DA88B8((uint64_t)v47);
  sub_100DA6878(v37[1], (uint64_t)v44);
  v19 = swift_allocObject(&unk_1012A5FF0, 129, 7);
  sub_100DA86E8((uint64_t)v44, v19 + 16);
  v43[0] = v16;
  v43[1] = v2;
  v43[2] = v17;
  v43[3] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v43, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v21 = v38;
  View.onTapGesture(count:perform:)(1, sub_100DA89A0, v19, v38, OpaqueTypeConformance2);
  v22 = swift_release(v19);
  v23 = (*(uint64_t (**)(char *, uint64_t, __n128))(v39 + 8))(v9, v21, v22);
  v24 = static Edge.Set.all.getter(v23);
  v25 = EdgeInsets.init(_all:)(5.0);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v40;
  v32 = v41;
  v34 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v42, v13, v41);
  v35 = v34 + *(int *)(sub_1004B804C(&qword_101413030) + 36);
  *(_BYTE *)v35 = v24;
  *(double *)(v35 + 8) = v25;
  *(_QWORD *)(v35 + 16) = v27;
  *(_QWORD *)(v35 + 24) = v29;
  *(_QWORD *)(v35 + 32) = v31;
  *(_BYTE *)(v35 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v13, v32);
}

void sub_100DA4770(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  char v47;
  char v48;
  char v49;
  int v50;
  char v51;
  id v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _OWORD v95[10];
  uint64_t v96;
  _BYTE v97[7];
  char v98;
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  char v102;
  _BYTE v103[7];
  char v104;
  _BYTE v105[7];
  char v106;
  _BYTE v107[7];
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;

  v3 = *(void **)(a1 + 16);
  v4 = objc_msgSend(v3, "collaboratorColorForType:", 2);
  v5 = objc_msgSend(v4, "CGColor");

  v67 = Color.init(cgColor:)(v5);
  v6 = static Alignment.center.getter(v67);
  _FrameLayout.init(width:height:alignment:)(&v76, 0x4018000000000000, 0, 0, 1, v6, v7);
  v65 = v78;
  v66 = v76;
  v61 = v79;
  v62 = v77;
  v63 = v81;
  v64 = v80;
  v8 = type metadata accessor for CRLCollaborationParticipant(0);
  v9 = sub_1004B7878(&qword_101412CC8, type metadata accessor for CRLCollaborationParticipant, (uint64_t)&unk_100EFF848);
  v10 = v3;
  v11 = ObservedObject.init(wrappedValue:)(v10, v8, v9);
  v59 = v12;
  v60 = v11;
  v13 = static Alignment.center.getter(v11);
  _FrameLayout.init(width:height:alignment:)(&v82, 0x4020000000000000, 0, 0, 1, v13, v14);
  v57 = v84;
  v58 = v82;
  v53 = v85;
  v54 = v83;
  v55 = v87;
  v56 = v86;
  v15 = v10;
  v16 = sub_10063B4E0();
  v18 = v17;

  *(_QWORD *)&v109 = v16;
  *((_QWORD *)&v109 + 1) = v18;
  v19 = sub_1004D292C();
  v20 = Text.init<A>(_:)(&v109, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = static Color.primary.getter();
  v28 = Text.foregroundColor(_:)(v27, v20, v22, v26, v24);
  v30 = v29;
  LOBYTE(v4) = v31;
  v33 = v32;
  swift_release(v27);
  LOBYTE(v4) = v4 & 1;
  sub_1005EFC24(v20, v22, v26);
  *(_QWORD *)&v34 = swift_bridgeObjectRelease().n128_u64[0];
  KeyPath = swift_getKeyPath(byte_100F388A0, v34);
  v88 = v28;
  v89 = v30;
  v90 = (char)v4;
  v91 = v33;
  v92 = KeyPath;
  v93 = 1;
  v94 = 0;
  v36 = static Alignment.leading.getter(KeyPath);
  sub_1006C98D0(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v109, v38, 0.0, 1, 0.0, 1, v36, v37);
  sub_1005EFC24(v28, v30, (char)v4);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v74 = v118;
  v71 = v113;
  v72 = v115;
  v73 = v116;
  v68 = v110;
  v69 = v111;
  v70 = v112;
  v39 = v117;
  v40 = v117;
  v95[8] = v117;
  v95[9] = v118;
  v95[4] = v113;
  v95[5] = v114;
  v41 = v114;
  v42 = v114;
  v95[6] = v115;
  v95[7] = v116;
  v43 = v109;
  v44 = v109;
  v95[0] = v109;
  v95[1] = v110;
  v45 = v112;
  v95[2] = v111;
  v95[3] = v112;
  *(_OWORD *)(a2 + 264) = v116;
  *(_OWORD *)(a2 + 280) = v39;
  *(_OWORD *)(a2 + 296) = v74;
  *(_OWORD *)(a2 + 200) = v70;
  *(_OWORD *)(a2 + 216) = v71;
  *(_OWORD *)(a2 + 232) = v41;
  *(_OWORD *)(a2 + 248) = v72;
  *(_OWORD *)(a2 + 152) = v43;
  *(_OWORD *)(a2 + 168) = v68;
  *(_OWORD *)(a2 + 184) = v69;
  v117 = v40;
  v118 = v74;
  v113 = v71;
  v114 = v42;
  v115 = v72;
  v116 = v73;
  v75 = v119;
  v96 = v119;
  v108 = 1;
  v106 = v62;
  v104 = v61;
  v102 = 1;
  v100 = v54;
  v98 = v53;
  *(_QWORD *)(a2 + 312) = v119;
  v46 = v108;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v107;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v107[3];
  v47 = v106;
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v105;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v105[3];
  v48 = v104;
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v103;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v103[3];
  v49 = v102;
  v50 = *(_DWORD *)v101;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v101[3];
  *(_DWORD *)(a2 + 97) = v50;
  LOBYTE(v50) = v100;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v99[3];
  *(_DWORD *)(a2 + 113) = *(_DWORD *)v99;
  v51 = v98;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v97[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v97;
  *(_QWORD *)a2 = v67;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v46;
  *(_QWORD *)(a2 + 24) = v66;
  *(_BYTE *)(a2 + 32) = v47;
  *(_QWORD *)(a2 + 40) = v65;
  *(_BYTE *)(a2 + 48) = v48;
  *(_QWORD *)(a2 + 56) = v64;
  *(_QWORD *)(a2 + 64) = v63;
  *(_QWORD *)(a2 + 72) = v60;
  *(_QWORD *)(a2 + 80) = v59;
  *(_QWORD *)(a2 + 88) = 0;
  *(_BYTE *)(a2 + 96) = v49;
  *(_QWORD *)(a2 + 104) = v58;
  *(_BYTE *)(a2 + 112) = v50;
  *(_QWORD *)(a2 + 120) = v57;
  *(_BYTE *)(a2 + 128) = v51;
  *(_QWORD *)(a2 + 136) = v56;
  *(_QWORD *)(a2 + 144) = v55;
  v119 = v75;
  v109 = v44;
  v110 = v68;
  v111 = v69;
  v112 = v45;
  swift_retain(v67);
  v52 = v59;
  sub_100DA89C0((uint64_t)v95);
  sub_100DA8A0C((uint64_t)&v109);
  swift_release(v67);

}

void sub_100DA4C18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  char v27;
  id v28;
  uint64_t Strong;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t, __n128);
  char *v40;
  __n128 v41;
  char v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52[24];
  char v53[24];
  _QWORD v54[3];
  char v55[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - v6;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v55, 0, 0);
  v8 = (id)static OS_os_log.crlDefault;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v10, "Navigating to collaborator cursor for user.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  v11 = (void *)v0[2];
  KeyPath = swift_getKeyPath(byte_100F38858);
  v13 = swift_getKeyPath(byte_100F38880);
  v14 = v11;
  static Published.subscript.getter(v54, v14, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v15 = v54[0];
  if (!(v54[0] >> 62))
  {
    v16 = *(_QWORD *)((v54[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v54[0]);
    if (v16)
      goto LABEL_5;
LABEL_35:

    swift_bridgeObjectRelease_n(v15, 2);
    return;
  }
  if (v54[0] < 0)
    v45 = v54[0];
  else
    v45 = v54[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v54[0]);
  v16 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v16)
    goto LABEL_35;
LABEL_5:
  v50 = v15 & 0xC000000000000001;
  v46 = v14;
  v47 = v1;
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v17 = (char *)*(id *)(v15 + 32);
  }
  v18 = v17;
  v49 = v16 - 1;
  if (v16 != 1)
  {
    if (v16 >= 2)
    {
      if (v50 || (v32 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10), v32 >= 2) && v49 < v32)
      {
        v33 = 0;
        v48 = v15;
        do
        {
          if (v50)
            v34 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33 + 1, v15);
          else
            v34 = (char *)*(id *)(v15 + 8 * v33 + 40);
          v35 = v34;
          v36 = &v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          v37 = swift_beginAccess(&v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v54, 0, 0);
          v38 = v51;
          v39 = *(void (**)(char *, char *, uint64_t, __n128))(v51 + 16);
          v39(v7, v36, v2, v37);
          v40 = &v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          v41 = swift_beginAccess(&v35[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v53, 0, 0);
          v39(v4, v40, v2, v41);
          v42 = static Date.< infix(_:_:)(v7, v4);
          v43 = *(void (**)(char *, uint64_t))(v38 + 8);
          v43(v4, v2);
          v43(v7, v2);
          if ((v42 & 1) != 0)
            v44 = v18;
          else
            v44 = v35;
          if ((v42 & 1) != 0)
            v18 = v35;

          ++v33;
          v15 = v48;
        }
        while (v49 != v33);
        goto LABEL_9;
      }
LABEL_39:
      __break(1u);
      return;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_9:
  swift_bridgeObjectRelease_n(v15, 2);

  v19 = v47;
  v20 = *(char **)(*v47 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  v21 = &v20[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  swift_beginAccess(&v20[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap], v52, 0, 0);
  v22 = *(_QWORD *)v21;
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = (uint64_t)&v18[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
    v24 = v18;
    v25 = v20;
    swift_bridgeObjectRetain(v22);
    v26 = sub_100842EFC(v23);
    if ((v27 & 1) != 0)
    {
      v28 = *(id *)(*(_QWORD *)(v22 + 56) + 24 * v26 + 16);
      swift_bridgeObjectRelease();
      Strong = swift_unknownObjectWeakLoadStrong(v19 + 3);
      if (Strong)
      {
        v30 = Strong;
        v31 = v28;
        sub_1004D9EE0((uint64_t)v24, (uint64_t)v31);

        swift_unknownObjectRelease(v30);
      }
      else
      {

      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {

  }
}

void sub_100DA5058(uint64_t a1)
{
  id v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  _QWORD aBlock[5];
  _QWORD *v17;
  char v18[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v18, 0, 0);
  v2 = (id)static OS_os_log.crlDefault;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "Showing contact card for user.", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  v5 = *(void **)(*(_QWORD *)(a1 + 16) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v5)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 24);
    if (Strong)
    {
      v7 = (void *)Strong;
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v8 = swift_allocObject(&unk_1012A5F78, 24, 7);
      *(_QWORD *)(v8 + 16) = v7;
      v9 = v5;
      swift_unknownObjectRetain(v7);
      v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100DA90D0, v8);
      v11 = (_QWORD *)swift_allocObject(&unk_1012A5FA0, 40, 7);
      v11[2] = v9;
      v11[3] = v10;
      v11[4] = v7;
      aBlock[4] = sub_100DA90E4;
      v17 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_1012A5FB8;
      v12 = _Block_copy(aBlock);
      v13 = v17;
      v14 = v9;
      swift_unknownObjectRetain(v7);
      v15 = v10;
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, v12, swift_release(v13).n128_f64[0]);
      _Block_release(v12);

      swift_unknownObjectRelease(v7);
    }
  }
}

double sub_100DA5270()
{
  uint64_t v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;
  _QWORD v11[3];

  v0 = Image.init(systemName:)(0x7269632E6F666E69, 0xEB00000000656C63);
  v11[2] = v0;
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v8 = v7;

  v11[0] = v6;
  v11[1] = v8;
  v9 = sub_1004D292C();
  View.accessibilityLabel<A>(_:)(v11, &type metadata for Image, &type metadata for String, &protocol witness table for Image, v9);
  swift_release(v0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100DA53A4@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a1 = static VerticalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = sub_1004B804C(&qword_101413018);
  return sub_100DA41D8(v2, a1 + *(int *)(v4 + 44));
}

id sub_100DA53E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  *a1 = v2;
  return v2;
}

uint64_t sub_100DA5404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v28 = a2;
  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v5 = (_OWORD *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1004B804C(&qword_1013ED868);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1014130D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (char *)v5 + *(int *)(v3 + 20);
  v13 = enum case for RoundedCornerStyle.continuous(_:);
  v14 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  __asm { FMOV            V0.2D, #2.0 }
  *v5 = _Q0;
  sub_1004B8460((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_QWORD *)&v8[*(int *)(v6 + 52)] = a1;
  *(_WORD *)&v8[*(int *)(v6 + 56)] = 256;
  swift_retain(a1);
  sub_1004B84A4((uint64_t)v5, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *((_QWORD *)&v30 + 1) = &type metadata for CRLFeatureFlags;
  *(_QWORD *)&v31 = sub_1004DB6DC();
  LOBYTE(v29) = 11;
  LOBYTE(v13) = isFeatureEnabled(_:)(&v29);
  v20 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v29);
  if ((v13 & 1) != 0)
    v21 = 0x4044000000000000;
  else
    v21 = 0x403C000000000000;
  v22 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v29, 0x4010000000000000, 0, v21, 0, v22, v23);
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v11, &qword_1013ED868);
  v24 = &v11[*(int *)(v9 + 36)];
  v25 = v30;
  *(_OWORD *)v24 = v29;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v31;
  sub_1004CB800((uint64_t)v8, &qword_1013ED868);
  return sub_1004C4938((uint64_t)v11, v28, &qword_1014130D8);
}

uint64_t sub_100DA5628@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100DA5404(*v1, a1);
}

id sub_100DA5630(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;

  v3 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
  v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v5 + 32) = a2;
  specialized Array._endMutation()(v5);
  sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
  v6 = a2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setContacts:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v3;
}

id sub_100DA5704(uint64_t a1)
{
  void **v1;

  return sub_100DA5630(a1, *v1);
}

uint64_t sub_100DA5718(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_100DA5750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100DA8FFC();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100DA57A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100DA8FFC();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100DA57F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100DA8FFC();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100DA5814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = sub_1004B804C(&qword_101413120);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v20 + 1) = &type metadata for CRLFeatureFlags;
  v7 = sub_1004DB6DC();
  *(_QWORD *)&v21 = v7;
  LOBYTE(v19) = 11;
  v8 = isFeatureEnabled(_:)(&v19);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
  *((_QWORD *)&v20 + 1) = &type metadata for CRLFeatureFlags;
  *(_QWORD *)&v21 = v7;
  LOBYTE(v19) = 11;
  v9 = isFeatureEnabled(_:)(&v19);
  v10 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v19);
  if ((v8 & 1) != 0)
    v11 = 0x4040000000000000;
  else
    v11 = 0x4038000000000000;
  if ((v9 & 1) != 0)
    v12 = 0x4040000000000000;
  else
    v12 = 0x4038000000000000;
  v13 = static Alignment.center.getter(v10);
  _FrameLayout.init(width:height:alignment:)(&v19, v11, 0, v12, 0, v13, v14);
  v15 = sub_1004B804C(&qword_101413128);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, a1, v15);
  v16 = &v6[*(int *)(v4 + 36)];
  v17 = v20;
  *(_OWORD *)v16 = v19;
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v21;
  return sub_1004C4938((uint64_t)v6, a2, &qword_101413120);
}

uint64_t sub_100DA5978()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_100DA5998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100D9CEF4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100DA59A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLActiveParticipantDetailView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_101412C1C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return sub_100D9DE1C(v3);
}

uint64_t sub_100DA5A10()
{
  uint64_t v0;

  return sub_100D9E1D4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100DA5A1C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for CRLActiveParticipantDetailView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v7 = v0 + v4 + v1[6];
  v8 = type metadata accessor for Tips.Status(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = sub_1004B804C(&qword_101412B38);
  swift_release(*(_QWORD *)(v7 + *(int *)(v10 + 28)));
  v11 = (_QWORD *)(v6 + v1[7]);
  v12 = sub_1004B804C(&qword_101408630);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  swift_unknownObjectWeakDestroy(v6 + v1[9]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100DA5B6C()
{
  return sub_100D8301C(type metadata accessor for CRLActiveParticipantDetailView, (uint64_t (*)(uint64_t))sub_100D9E2DC);
}

uint64_t sub_100DA5B80(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLActiveParticipantLegacyList(a2, a1);
  return a2;
}

unint64_t sub_100DA5BB4()
{
  unint64_t result;

  result = qword_101412C90;
  if (!qword_101412C90)
  {
    result = swift_getWitnessTable(&unk_100F3832C, &type metadata for CRLActiveParticipantList);
    atomic_store(result, (unint64_t *)&qword_101412C90);
  }
  return result;
}

unint64_t sub_100DA5BF8()
{
  unint64_t result;

  result = qword_101412C98;
  if (!qword_101412C98)
  {
    result = swift_getWitnessTable(&unk_100F382DC, &type metadata for CRLActiveParticipantLegacyList);
    atomic_store(result, (unint64_t *)&qword_101412C98);
  }
  return result;
}

uint64_t sub_100DA5C3C(uint64_t a1)
{
  destroy for CRLActiveParticipantLegacyList(a1);
  return a1;
}

uint64_t sub_100DA5C68(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLActiveParticipantList(a2, a1);
  return a2;
}

uint64_t sub_100DA5C9C(uint64_t a1)
{
  destroy for CRLActiveParticipantList(a1);
  return a1;
}

double destroy for CRLActiveParticipantLegacyList(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 16));
  swift_unknownObjectWeakDestroy(a1 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 56)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a1 + 24;
  v8 = a2 + 24;
  v9 = v4;
  swift_retain(v6);
  swift_unknownObjectWeakCopyInit(v7, v8);
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  return a1;
}

uint64_t assignWithCopy for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
  swift_unknownObjectWeakCopyAssign(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  swift_retain(v12);
  swift_release(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t initializeWithTake for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_release(v6);
  swift_unknownObjectWeakTakeAssign(a1 + 24, a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v8);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLActiveParticipantLegacyList(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLActiveParticipantLegacyList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLActiveParticipantLegacyList()
{
  return &type metadata for CRLActiveParticipantLegacyList;
}

double destroy for CRLActiveParticipantList(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 16));
  swift_unknownObjectWeakDestroy(a1 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 72)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = a1 + 40;
  v10 = a2 + 40;
  v11 = v4;
  swift_retain(v7);
  v12 = v8;
  swift_unknownObjectWeakCopyInit(v9, v10);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v14);
  swift_retain(v15);
  return a1;
}

uint64_t assignWithCopy for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(void **)(a2 + 32);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v11 = v9;

  swift_unknownObjectWeakCopyAssign(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v15;
  swift_retain(v15);
  swift_release(v14);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t initializeWithTake for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;

  swift_unknownObjectWeakTakeAssign(a1 + 40, a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v10);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLActiveParticipantList(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLActiveParticipantList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLActiveParticipantList()
{
  return &type metadata for CRLActiveParticipantList;
}

uint64_t sub_100DA632C()
{
  return sub_1004CBA30(&qword_101412CD0, &qword_101412CD8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_100DA6358(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113CA18, 1);
}

uint64_t sub_100DA6368(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113C9F0, 1);
}

uint64_t sub_100DA6378()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectWeakDestroy(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100DA63C4(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  swift_unknownObjectWeakTakeInit(a2 + 40, a1 + 40);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  v4 = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 80) = *(_BYTE *)(a1 + 80);
  return a2;
}

uint64_t sub_100DA642C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100D9EC34(a1, v2 + 16, a2);
}

uint64_t sub_100DA6434()
{
  return sub_10093B6F0(&qword_101412D00, &qword_101412CF0, (void (*)(void))sub_100DA6458, (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_100DA6458()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412D08;
  if (!qword_101412D08)
  {
    v1 = sub_1004CB6A4(&qword_101412D10);
    sub_1004B7878(&qword_101412D18, type metadata accessor for CRLCollaborationParticipantRowView, (uint64_t)&unk_100F38654);
    sub_1004CBA30(&qword_101411E78, &qword_101411E80, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412D08);
  }
  return result;
}

uint64_t type metadata accessor for CRLCollaborationParticipantRowView(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101412DE0, (uint64_t)&nominal type descriptor for CRLCollaborationParticipantRowView);
}

uint64_t sub_100DA6508()
{
  return sub_100DA7CEC(&qword_101412D30, &qword_101412D28, (void (*)(void))sub_100DA652C, (void (*)(void))sub_100DA6570);
}

unint64_t sub_100DA652C()
{
  unint64_t result;

  result = qword_101412D38;
  if (!qword_101412D38)
  {
    result = swift_getWitnessTable(&unk_100F38604, &type metadata for CRLIneligibleCollaboratorListView);
    atomic_store(result, (unint64_t *)&qword_101412D38);
  }
  return result;
}

unint64_t sub_100DA6570()
{
  unint64_t result;

  result = qword_101412D40;
  if (!qword_101412D40)
  {
    result = swift_getWitnessTable(&unk_100F385B4, &type metadata for CRLEmptyCollaboratorListView);
    atomic_store(result, (unint64_t *)&qword_101412D40);
  }
  return result;
}

uint64_t sub_100DA65B4()
{
  return sub_10093B6F0(&qword_101412D48, &qword_101412CE0, (void (*)(void))sub_100DA6434, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
}

_QWORD *sub_100DA65D8(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for CRLIneligibleCollaboratorListView(a2, a1);
  return a2;
}

uint64_t sub_100DA660C(uint64_t a1)
{
  destroy for CRLIneligibleCollaboratorListView(a1);
  return a1;
}

uint64_t sub_100DA6638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100DA6664@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100DA6690()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_100DA66B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10063B4E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100DA66E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_100DA6724(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  swift_unknownObjectWeakTakeInit(a2 + 24, a1 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v4;
  *(_BYTE *)(a2 + 64) = *(_BYTE *)(a1 + 64);
  return a2;
}

uint64_t sub_100DA6784@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100D9F530(a1, v2 + 16, a2);
}

unint64_t sub_100DA678C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101412D70;
  if (!qword_101412D70)
  {
    v1 = sub_1004CB6A4(&qword_101412D68);
    sub_100DA6810();
    sub_1004CBA30(&qword_101411E78, &qword_101411E80, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_101412D70);
  }
  return result;
}

unint64_t sub_100DA6810()
{
  unint64_t result;

  result = qword_101412D78;
  if (!qword_101412D78)
  {
    result = swift_getWitnessTable(&unk_100F38564, &type metadata for CRLCollaborationParticipantLegacyRowView);
    atomic_store(result, (unint64_t *)&qword_101412D78);
  }
  return result;
}

uint64_t sub_100DA6854()
{
  return sub_10093B6F0(&qword_101412D80, &qword_101412D58, (void (*)(void))sub_100DA678C, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
}

uint64_t sub_100DA6878(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLCollaborationParticipantLegacyRowView(a2, a1);
  return a2;
}

uint64_t sub_100DA68AC(uint64_t a1)
{
  destroy for CRLCollaborationParticipantLegacyRowView(a1);
  return a1;
}

char *sub_100DA68D8(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char *v8;
  char *v9;
  char *v10;
  char **v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a2[6];
    v11 = a2 + 7;
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v10;
    v12 = v5;
    v13 = v8;
    v14 = v9;
    v15 = v10;
    swift_unknownObjectWeakCopyInit(a1 + 56, v11);
    *((_QWORD *)a1 + 8) = a2[8];
    a1[72] = *((_BYTE *)a2 + 72);
    v16 = a2[10];
    v17 = a2[11];
    *((_QWORD *)a1 + 10) = v16;
    *((_QWORD *)a1 + 11) = v17;
    v19 = a2[12];
    v18 = a2[13];
    *((_QWORD *)a1 + 12) = v19;
    *((_QWORD *)a1 + 13) = v18;
    v20 = a2[14];
    v21 = (uint64_t)a2[15];
    *((_QWORD *)a1 + 14) = v20;
    LOBYTE(v10) = *((_BYTE *)a2 + 128);
    swift_retain(v16);
    swift_retain(v17);
    swift_retain(v19);
    swift_bridgeObjectRetain(v20);
    sub_100BF25E8(v21, (char)v10);
    *((_QWORD *)a1 + 15) = v21;
    a1[128] = (char)v10;
    v22 = (uint64_t)a2[17];
    LOBYTE(v19) = *((_BYTE *)a2 + 144);
    sub_100BF25E8(v22, (char)v19);
    *((_QWORD *)a1 + 17) = v22;
    a1[144] = (char)v19;
    v23 = *(int *)(a3 + 52);
    v24 = &a1[v23];
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = sub_1004B804C(&qword_1013FB240);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = 1;
    }
    else
    {
      v29 = *v25;
      *(_QWORD *)v24 = *v25;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v28);
    v30 = *(int *)(a3 + 56);
    v31 = &a1[v30];
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      v38 = *v32;
      *(_QWORD *)v31 = *v32;
      swift_retain(v38);
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return a1;
}

double sub_100DA6AE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_unknownObjectWeakDestroy(a1 + 56);
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 88));
  swift_release(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease();
  sub_100BF26FC(*(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_100BF26FC(*(_QWORD *)(a1 + 136), *(_BYTE *)(a1 + 144));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 52));
  v5 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)(a1 + *(int *)(a2 + 56));
  v8 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_100DA6C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v9 = *(void **)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  v11 = *(void **)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v10;
  v12 = *(void **)(a2 + 48);
  v13 = a1 + 56;
  v14 = a2 + 56;
  *(_QWORD *)(a1 + 48) = v12;
  v15 = v6;
  v16 = v9;
  v17 = v11;
  v18 = v12;
  swift_unknownObjectWeakCopyInit(v13, v14);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  v22 = *(_QWORD *)(a2 + 96);
  v21 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v21;
  v23 = *(_QWORD *)(a2 + 112);
  v24 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v23;
  LOBYTE(v12) = *(_BYTE *)(a2 + 128);
  swift_retain(v19);
  swift_retain(v20);
  swift_retain(v22);
  swift_bridgeObjectRetain(v23);
  sub_100BF25E8(v24, (char)v12);
  *(_QWORD *)(a1 + 120) = v24;
  *(_BYTE *)(a1 + 128) = (_BYTE)v12;
  v25 = *(_QWORD *)(a2 + 136);
  LOBYTE(v22) = *(_BYTE *)(a2 + 144);
  sub_100BF25E8(v25, v22);
  *(_QWORD *)(a1 + 136) = v25;
  *(_BYTE *)(a1 + 144) = v22;
  v26 = *(int *)(a3 + 52);
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
    v31 = 1;
  }
  else
  {
    v32 = *v28;
    *v27 = *v28;
    swift_retain(v32);
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v29, v31);
  v33 = *(int *)(a3 + 56);
  v34 = (uint64_t *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v36 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
  {
    v37 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
    v38 = 1;
  }
  else
  {
    v39 = *v35;
    *v34 = *v35;
    swift_retain(v39);
    v38 = 0;
  }
  swift_storeEnumTagMultiPayload(v34, v36, v38);
  return a1;
}

uint64_t sub_100DA6DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v12 = *(void **)(a2 + 32);
  v13 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  v14 = v12;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v15 = *(void **)(a2 + 48);
  v16 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v15;
  v17 = v15;

  swift_unknownObjectWeakCopyAssign(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v19;
  swift_retain(v19);
  swift_release(v18);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v21;
  swift_retain(v21);
  swift_release(v20);
  v22 = *(_QWORD *)(a2 + 96);
  v23 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v22;
  swift_retain(v22);
  swift_release(v23);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v24 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 120);
  v26 = *(_BYTE *)(a2 + 128);
  sub_100BF25E8(v25, v26);
  v27 = *(_QWORD *)(a1 + 120);
  v28 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = v25;
  *(_BYTE *)(a1 + 128) = v26;
  sub_100BF26FC(v27, v28);
  v29 = *(_QWORD *)(a2 + 136);
  v30 = *(_BYTE *)(a2 + 144);
  sub_100BF25E8(v29, v30);
  v31 = *(_QWORD *)(a1 + 136);
  v32 = *(_BYTE *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = v29;
  *(_BYTE *)(a1 + 144) = v30;
  sub_100BF26FC(v31, v32);
  if (a1 != a2)
  {
    v33 = *(int *)(a3 + 52);
    v34 = (uint64_t *)(a1 + v33);
    v35 = (uint64_t *)(a2 + v33);
    sub_1004CB800(a1 + v33, &qword_1013FB240);
    v36 = sub_1004B804C(&qword_1013FB240);
    if (swift_getEnumCaseMultiPayload(v35, v36) == 1)
    {
      v37 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
      v38 = 1;
    }
    else
    {
      v39 = *v35;
      *v34 = *v35;
      swift_retain(v39);
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v34, v36, v38);
    v40 = *(int *)(a3 + 56);
    v41 = (uint64_t *)(a1 + v40);
    v42 = (uint64_t *)(a2 + v40);
    sub_1004CB800(a1 + v40, &qword_101409328);
    v43 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      v45 = 1;
    }
    else
    {
      v46 = *v42;
      *v41 = *v42;
      swift_retain(v46);
      v45 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v45);
  }
  return a1;
}

uint64_t sub_100DA707C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeInit(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v6 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v7 = *(int *)(a3 + 52);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 104) = v6;
  v10 = sub_1004B804C(&qword_1013FB240);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 56);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1004B804C(&qword_101409328);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100DA7210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;

  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;

  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;

  swift_unknownObjectWeakTakeAssign(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v13);
  v14 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v14);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v15);
  v16 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_BYTE *)(a2 + 128);
  v18 = *(_QWORD *)(a1 + 120);
  v19 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v17;
  sub_100BF26FC(v18, v19);
  v20 = *(_BYTE *)(a2 + 144);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_BYTE *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = v20;
  sub_100BF26FC(v21, v22);
  if (a1 != a2)
  {
    v23 = *(int *)(a3 + 52);
    v24 = (void *)(a1 + v23);
    v25 = (const void *)(a2 + v23);
    sub_1004CB800(a1 + v23, &qword_1013FB240);
    v26 = sub_1004B804C(&qword_1013FB240);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    v28 = *(int *)(a3 + 56);
    v29 = (void *)(a1 + v28);
    v30 = (const void *)(a2 + v28);
    sub_1004CB800(a1 + v28, &qword_101409328);
    v31 = sub_1004B804C(&qword_101409328);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload(v29, v31, 1);
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100DA7434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DA7440);
}

uint64_t sub_100DA7440(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013FB248);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 52);
    }
    else
    {
      v10 = sub_1004B804C(&qword_101411CD8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

