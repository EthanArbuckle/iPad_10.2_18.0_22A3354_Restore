_OWORD *sub_10037C238(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  _OWORD *v74;
  _OWORD *v75;
  int *v76;
  uint64_t v77;
  uint64_t EnumCaseMultiPayload;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  _OWORD *v91;
  char *v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for LocationPreviewModalViewState);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 0u:
        v6 = type metadata accessor for URL(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 0;
        goto LABEL_34;
      case 1u:
        v10 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = (int *)type metadata accessor for ConditionDetailViewState(0);
        v12 = v11[5];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        v16 = v11[6];
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        v69 = v11[7];
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = *((_OWORD *)v71 + 1);
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_OWORD *)v70 + 1) = v72;
        v70[32] = v71[32];
        v73 = v11[8];
        v74 = (_OWORD *)((char *)a1 + v73);
        v75 = (_OWORD *)((char *)a2 + v73);
        v76 = (int *)type metadata accessor for DetailChartSelection(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, (uint64_t)v76))
        {
          v77 = sub_1000BA294(&qword_100BD0B58);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          *v74 = *v75;
          v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
          v106((char *)v74 + v76[5], (char *)v75 + v76[5], v19);
          v106((char *)v74 + v76[6], (char *)v75 + v76[6], v19);
          v106((char *)v74 + v76[7], (char *)v75 + v76[7], v19);
          *(_QWORD *)((char *)v74 + v76[8]) = *(_QWORD *)((char *)v75 + v76[8]);
          v107 = v76[9];
          v108 = (char *)v74 + v107;
          v109 = (char *)v75 + v107;
          v108[8] = v109[8];
          *(_QWORD *)v108 = *(_QWORD *)v109;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, (uint64_t)v76);
        }
        *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_34;
      case 2u:
        v21 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v22 = type metadata accessor for AirQualityDetailViewState(0);
        *((_BYTE *)a1 + *(int *)(v22 + 20)) = *((_BYTE *)a2 + *(int *)(v22 + 20));
        v23 = *(int *)(v22 + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v24[32] = v25[32];
        v26 = *((_OWORD *)v25 + 1);
        *(_OWORD *)v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v26;
        v7 = a1;
        v8 = a3;
        v9 = 2;
        goto LABEL_34;
      case 3u:
        v27 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
        v28 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = *((_OWORD *)v30 + 1);
        *(_OWORD *)v29 = *(_OWORD *)v30;
        *((_OWORD *)v29 + 1) = v31;
        v29[32] = v30[32];
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_34;
      case 4u:
        v32 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(a1, a2, v32);
        v33 = type metadata accessor for SunriseSunsetDetailViewState(0);
        v34 = *(int *)(v33 + 20);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = *((_OWORD *)v36 + 1);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v37;
        v35[32] = v36[32];
        *((_BYTE *)a1 + *(int *)(v33 + 24)) = *((_BYTE *)a2 + *(int *)(v33 + 24));
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_34;
      case 5u:
        v38 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
        v39 = (int *)type metadata accessor for MoonDetailViewState(0);
        v40 = v39[5];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = type metadata accessor for MoonDetailSelectedDate(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          v44 = sub_1000BA294(&qword_100BC6CB8);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42);
          v79 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v41, v42, v79);
          swift_storeEnumTagMultiPayload(v41, v43, EnumCaseMultiPayload);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
        }
        v80 = v39[6];
        v81 = (char *)a1 + v80;
        v82 = (char *)a2 + v80;
        v83 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        v110 = v39[7];
        v111 = (char *)a1 + v110;
        v112 = (char *)a2 + v110;
        v113 = *((_OWORD *)v112 + 1);
        *(_OWORD *)v111 = *(_OWORD *)v112;
        *((_OWORD *)v111 + 1) = v113;
        v111[32] = v112[32];
        *((_BYTE *)a1 + v39[8]) = *((_BYTE *)a2 + v39[8]);
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_34;
      case 6u:
        v45 = a2[1];
        *a1 = *a2;
        a1[1] = v45;
        v46 = (int *)type metadata accessor for NewsArticle(0);
        v47 = v46[6];
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = type metadata accessor for URL(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
        {
          v51 = sub_1000BA294(&qword_100BD4280);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
        }
        v85 = v46[7];
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        v88 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32);
        v89((char *)a1 + v46[8], (char *)a2 + v46[8], v50);
        v90 = v46[9];
        v91 = (_OWORD *)((char *)a1 + v90);
        v92 = (char *)a2 + v90;
        v93 = *(_OWORD *)((char *)a2 + v90 + 16);
        *v91 = *(_OWORD *)((char *)a2 + v90);
        v91[1] = v93;
        v94 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
        v95 = (char *)v91 + v94;
        v96 = &v92[v94];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v50))
        {
          v97 = sub_1000BA294(&qword_100BD4280);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          v89(v95, v96, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v50);
        }
        *(_QWORD *)((char *)a1 + v46[10]) = *(_QWORD *)((char *)a2 + v46[10]);
        *(_QWORD *)((char *)a1 + v46[11]) = *(_QWORD *)((char *)a2 + v46[11]);
        *(_QWORD *)((char *)a1 + v46[12]) = *(_QWORD *)((char *)a2 + v46[12]);
        v7 = a1;
        v8 = a3;
        v9 = 6;
        goto LABEL_34;
      case 7u:
        v52 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
        v53 = (int *)type metadata accessor for AveragesDetailViewState(0);
        *((_BYTE *)a1 + v53[5]) = *((_BYTE *)a2 + v53[5]);
        v54 = v53[6];
        v55 = (_QWORD *)((char *)a1 + v54);
        v56 = (_QWORD *)((char *)a2 + v54);
        v57 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, (uint64_t)v57))
        {
          v58 = sub_1000BA294(&qword_100BCB0D0);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          *v55 = *v56;
          v98 = v57[5];
          v99 = (char *)v55 + v98;
          v100 = (char *)v56 + v98;
          v101 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
          *(_QWORD *)((char *)v55 + v57[6]) = *(_QWORD *)((char *)v56 + v57[6]);
          *(_QWORD *)((char *)v55 + v57[7]) = *(_QWORD *)((char *)v56 + v57[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, (uint64_t)v57);
        }
        v102 = v53[7];
        v103 = (char *)a1 + v102;
        v104 = (char *)a2 + v102;
        v105 = *((_OWORD *)v104 + 1);
        *(_OWORD *)v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v105;
        v103[32] = v104[32];
        v7 = a1;
        v8 = a3;
        v9 = 7;
        goto LABEL_34;
      case 8u:
        v59 = type metadata accessor for Location(0);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(a1, a2, v59);
        v60 = type metadata accessor for HomeAndWorkRefinementViewState(0);
        v61 = *(int *)(v60 + 20);
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        v64 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
        v65 = *(int *)(v60 + 24);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = *((_OWORD *)v67 + 1);
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v68;
        v66[32] = v67[32];
        v7 = a1;
        v8 = a3;
        v9 = 8;
LABEL_34:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10037CAB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for PreviewLocation(0);
    v6 = (char *)&loc_10037CB20 + 4 * byte_1009980C6[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v8;
}

void sub_10037D56C(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, __n128);

  type metadata accessor for PreviewLocation(0);
  switch(swift_getEnumCaseMultiPayload(a1))
  {
    case 0u:
      v4 = type metadata accessor for Location(0);
      goto LABEL_4;
    case 1u:
      v4 = type metadata accessor for LocationOfInterest(0);
LABEL_4:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation(0) + 32);
      v6 = type metadata accessor for Location(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v7 = (char *)a1 + *(int *)(a2 + 20);
  type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v7))
  {
    case 0u:
      v8 = type metadata accessor for URL(0);
      goto LABEL_29;
    case 1u:
      v9 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      v10 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v11 = &v7[v10[5]];
      v12 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      v13 = (uint64_t)&v7[v10[6]];
      v14 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = (uint64_t)&v7[v10[8]];
      v16 = (int *)type metadata accessor for DetailChartSelection(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
      {
        v17 = swift_bridgeObjectRelease();
        v37 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 8);
        v37(v15 + v16[5], v14, v17);
        ((void (*)(uint64_t, uint64_t))v37)(v15 + v16[6], v14);
        ((void (*)(uint64_t, uint64_t))v37)(v15 + v16[7], v14);
      }
      return;
    case 2u:
    case 3u:
    case 4u:
      v8 = type metadata accessor for Location(0);
      goto LABEL_29;
    case 5u:
      v18 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v7, v18);
      v19 = type metadata accessor for MoonDetailViewState(0);
      v20 = (uint64_t)&v7[*(int *)(v19 + 20)];
      v21 = type metadata accessor for MoonDetailSelectedDate(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21)
        && swift_getEnumCaseMultiPayload(v20) <= 2)
      {
        v22 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
      }
      v23 = (uint64_t)&v7[*(int *)(v19 + 24)];
      v24 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      return;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (int *)type metadata accessor for NewsArticle(0);
      v26 = (uint64_t)&v7[v25[6]];
      v27 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      v28 = &v7[v25[7]];
      v29 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      v30 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v30(&v7[v25[8]], v27);
      v31 = &v7[v25[9]];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = (uint64_t)&v31[*(int *)(type metadata accessor for NewsChannel(0) + 24)];
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v27))
        v30((char *)v32, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    case 7u:
      v33 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v7, v33);
      v34 = (uint64_t)&v7[*(int *)(type metadata accessor for AveragesDetailViewState(0) + 24)];
      v35 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
        return;
      v7 = (char *)(v34 + *(int *)(v35 + 20));
      v8 = type metadata accessor for Date(0);
LABEL_29:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      return;
    case 8u:
      v36 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v7, v36);
      v7 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState(0) + 20);
      v8 = type metadata accessor for LocationOfInterest(0);
      goto LABEL_29;
    default:
      return;
  }
}

void sub_10037DA58(uint64_t a1, uint64_t a2)
{
  char *v3;

  type metadata accessor for PreviewLocation(0);
  v3 = (char *)sub_10037DAB8 + 4 * byte_1009980E0[swift_getEnumCaseMultiPayload(a2)];
  __asm { BR              X10 }
}

uint64_t sub_10037DAB8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__dst, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  int *v102;
  uint64_t v103;
  uint64_t EnumCaseMultiPayload;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void (*v136)(char *, char *, uint64_t, __n128);
  __n128 v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v153;
  uint64_t v154;
  uint64_t v155;

  v26 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, v23, v26);
  swift_storeEnumTagMultiPayload(v25, v24, 0);
  v27 = *(int *)(v22 + 20);
  v28 = (_QWORD *)(v25 + v27);
  v29 = (_QWORD *)(v23 + v27);
  v30 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v29))
  {
    case 0u:
      v31 = type metadata accessor for URL(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 0;
      goto LABEL_33;
    case 1u:
      v35 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v28, v29, v35);
      v36 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v37 = v36[5];
      v38 = (char *)v28 + v37;
      v39 = (char *)v29 + v37;
      v40 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v41 = v36[6];
      v42 = (char *)v28 + v41;
      v43 = (char *)v29 + v41;
      v44 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
      {
        v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      }
      v95 = v36[7];
      v96 = (char *)v28 + v95;
      v97 = (char *)v29 + v95;
      v98 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v98;
      v96[32] = v97[32];
      v99 = v36[8];
      v100 = (_QWORD *)((char *)v28 + v99);
      v101 = (_QWORD *)((char *)v29 + v99);
      v102 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, (uint64_t)v102))
      {
        v103 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        v133 = v101[1];
        *v100 = *v101;
        v100[1] = v133;
        v134 = v102[5];
        v153 = (char *)v100 + v134;
        v155 = v25;
        v135 = (char *)v101 + v134;
        v136 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v44 - 8) + 16);
        v137 = swift_bridgeObjectRetain(v133);
        v138 = v135;
        v25 = v155;
        v136(v153, v138, v44, v137);
        ((void (*)(char *, char *, uint64_t))v136)((char *)v100 + v102[6], (char *)v101 + v102[6], v44);
        ((void (*)(char *, char *, uint64_t))v136)((char *)v100 + v102[7], (char *)v101 + v102[7], v44);
        *(_QWORD *)((char *)v100 + v102[8]) = *(_QWORD *)((char *)v101 + v102[8]);
        v139 = v102[9];
        v140 = (char *)v100 + v139;
        v141 = (char *)v101 + v139;
        v140[8] = v141[8];
        *(_QWORD *)v140 = *(_QWORD *)v141;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, (uint64_t)v102);
      }
      *((_BYTE *)v28 + v36[9]) = *((_BYTE *)v29 + v36[9]);
      v32 = v28;
      v33 = v30;
      v34 = 1;
      goto LABEL_33;
    case 2u:
      v46 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v28, v29, v46);
      v47 = type metadata accessor for AirQualityDetailViewState(0);
      *((_BYTE *)v28 + *(int *)(v47 + 20)) = *((_BYTE *)v29 + *(int *)(v47 + 20));
      v48 = *(int *)(v47 + 24);
      v49 = (char *)v28 + v48;
      v50 = (char *)v29 + v48;
      v49[32] = v50[32];
      v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      v32 = v28;
      v33 = v30;
      v34 = 2;
      goto LABEL_33;
    case 3u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v28, v29, v52);
      v53 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v54 = (char *)v28 + v53;
      v55 = (char *)v29 + v53;
      v56 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v56;
      v54[32] = v55[32];
      v32 = v28;
      v33 = v30;
      v34 = 3;
      goto LABEL_33;
    case 4u:
      v57 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v28, v29, v57);
      v58 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v59 = *(int *)(v58 + 20);
      v60 = (char *)v28 + v59;
      v61 = (char *)v29 + v59;
      v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      v60[32] = v61[32];
      *((_BYTE *)v28 + *(int *)(v58 + 24)) = *((_BYTE *)v29 + *(int *)(v58 + 24));
      v32 = v28;
      v33 = v30;
      v34 = 4;
      goto LABEL_33;
    case 5u:
      v63 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v28, v29, v63);
      v64 = (int *)type metadata accessor for MoonDetailViewState(0);
      v65 = v64[5];
      v66 = (char *)v28 + v65;
      v67 = (char *)v29 + v65;
      v68 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
      {
        v69 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v67);
        v105 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v66, v67, v105);
        swift_storeEnumTagMultiPayload(v66, v68, EnumCaseMultiPayload);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      }
      v106 = v64[6];
      v107 = (char *)v28 + v106;
      v108 = (char *)v29 + v106;
      v109 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
      {
        v110 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v107, v108, v109);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
      }
      v142 = v64[7];
      v143 = (char *)v28 + v142;
      v144 = (char *)v29 + v142;
      v145 = *((_OWORD *)v144 + 1);
      *(_OWORD *)v143 = *(_OWORD *)v144;
      *((_OWORD *)v143 + 1) = v145;
      v143[32] = v144[32];
      *((_BYTE *)v28 + v64[8]) = *((_BYTE *)v29 + v64[8]);
      v32 = v28;
      v33 = v30;
      v34 = 5;
      goto LABEL_33;
    case 6u:
      v70 = v29[1];
      *v28 = *v29;
      v28[1] = v70;
      v71 = v29[3];
      v28[2] = v29[2];
      v28[3] = v71;
      v72 = (int *)type metadata accessor for NewsArticle(0);
      v73 = v72[6];
      v74 = (char *)v28 + v73;
      v75 = (char *)v29 + v73;
      v76 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v70);
      swift_bridgeObjectRetain(v71);
      v154 = v25;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
      {
        v77 = sub_1000BA294(&qword_100BD4280);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
      }
      v111 = v72[7];
      v112 = (char *)v28 + v111;
      v113 = (char *)v29 + v111;
      v114 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v112, v113, v114);
      v115 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
      v115((char *)v28 + v72[8], (char *)v29 + v72[8], v76);
      v116 = v72[9];
      v117 = (_QWORD *)((char *)v28 + v116);
      v118 = (char *)v29 + v116;
      v119 = *(_QWORD *)((char *)v29 + v116 + 8);
      *v117 = *(_QWORD *)((char *)v29 + v116);
      v117[1] = v119;
      v120 = *(_QWORD *)((char *)v29 + v116 + 24);
      v117[2] = *(_QWORD *)((char *)v29 + v116 + 16);
      v117[3] = v120;
      v121 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v122 = (char *)v117 + v121;
      v123 = &v118[v121];
      swift_bridgeObjectRetain(v119);
      swift_bridgeObjectRetain(v120);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v76))
      {
        v124 = sub_1000BA294(&qword_100BD4280);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
      }
      else
      {
        v115(v122, v123, v76);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v76);
      }
      v25 = v154;
      v146 = v72[10];
      v147 = *(_QWORD *)((char *)v29 + v146);
      *(_QWORD *)((char *)v28 + v146) = v147;
      v148 = v72[11];
      v149 = *(_QWORD *)((char *)v29 + v148);
      *(_QWORD *)((char *)v28 + v148) = v149;
      v150 = v72[12];
      v151 = *(_QWORD *)((char *)v29 + v150);
      *(_QWORD *)((char *)v28 + v150) = v151;
      swift_bridgeObjectRetain(v147);
      swift_bridgeObjectRetain(v149);
      swift_bridgeObjectRetain(v151);
      v32 = v28;
      v33 = v30;
      v34 = 6;
      goto LABEL_33;
    case 7u:
      v78 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v28, v29, v78);
      v79 = (int *)type metadata accessor for AveragesDetailViewState(0);
      *((_BYTE *)v28 + v79[5]) = *((_BYTE *)v29 + v79[5]);
      v80 = v79[6];
      v81 = (_QWORD *)((char *)v28 + v80);
      v82 = (_QWORD *)((char *)v29 + v80);
      v83 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, (uint64_t)v83))
      {
        v84 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        *v81 = *v82;
        v125 = v83[5];
        v126 = (char *)v81 + v125;
        v127 = (char *)v82 + v125;
        v128 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
        *(_QWORD *)((char *)v81 + v83[6]) = *(_QWORD *)((char *)v82 + v83[6]);
        *(_QWORD *)((char *)v81 + v83[7]) = *(_QWORD *)((char *)v82 + v83[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, (uint64_t)v83);
      }
      v129 = v79[7];
      v130 = (char *)v28 + v129;
      v131 = (char *)v29 + v129;
      v132 = *((_OWORD *)v131 + 1);
      *(_OWORD *)v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + 1) = v132;
      v130[32] = v131[32];
      v32 = v28;
      v33 = v30;
      v34 = 7;
      goto LABEL_33;
    case 8u:
      v85 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v28, v29, v85);
      v86 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v87 = *(int *)(v86 + 20);
      v88 = (char *)v28 + v87;
      v89 = (char *)v29 + v87;
      v90 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
      v91 = *(int *)(v86 + 24);
      v92 = (char *)v28 + v91;
      v93 = (char *)v29 + v91;
      v94 = *((_OWORD *)v93 + 1);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      *((_OWORD *)v92 + 1) = v94;
      v92[32] = v93[32];
      v32 = v28;
      v33 = v30;
      v34 = 8;
LABEL_33:
      swift_storeEnumTagMultiPayload(v32, v33, v34);
      break;
    default:
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      break;
  }
  return v25;
}

uint64_t sub_10037E4F0(uint64_t result, uint64_t a2)
{
  char *v3;

  if (result != a2)
  {
    sub_1000215BC(result, type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation(0);
    v3 = (char *)&loc_10037E568 + 4 * byte_1009980ED[swift_getEnumCaseMultiPayload(a2)];
    __asm { BR              X10 }
  }
  return result;
}

char *sub_10037EFEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  __int128 v133;

  v6 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v12 = type metadata accessor for SearchLocation(0);
    v13 = *(int *)(v12 + 32);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(v12 + 36);
    v20 = &a1[v19];
    v21 = &a2[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    v8 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_12:
  v22 = *(int *)(a3 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v24))
  {
    case 0u:
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 0;
      goto LABEL_44;
    case 1u:
      v30 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v23, v24, v30);
      v31 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v32 = v31[5];
      v33 = &v23[v32];
      v34 = &v24[v32];
      v35 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v36 = v31[6];
      v37 = &v23[v36];
      v38 = &v24[v36];
      v39 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v89 = v31[7];
      v90 = &v23[v89];
      v91 = &v24[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v90[32] = v91[32];
      v93 = v31[8];
      v94 = &v23[v93];
      v95 = &v24[v93];
      v96 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, (uint64_t)v96))
      {
        v97 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v94 = *(_OWORD *)v95;
        v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v126(&v94[v96[5]], &v95[v96[5]], v39);
        v126(&v94[v96[6]], &v95[v96[6]], v39);
        v126(&v94[v96[7]], &v95[v96[7]], v39);
        *(_QWORD *)&v94[v96[8]] = *(_QWORD *)&v95[v96[8]];
        v127 = v96[9];
        v128 = &v94[v127];
        v129 = &v95[v127];
        v128[8] = v129[8];
        *(_QWORD *)v128 = *(_QWORD *)v129;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, (uint64_t)v96);
      }
      v23[v31[9]] = v24[v31[9]];
      v27 = v23;
      v28 = v25;
      v29 = 1;
      goto LABEL_44;
    case 2u:
      v41 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v23, v24, v41);
      v42 = type metadata accessor for AirQualityDetailViewState(0);
      v23[*(int *)(v42 + 20)] = v24[*(int *)(v42 + 20)];
      v43 = *(int *)(v42 + 24);
      v44 = &v23[v43];
      v45 = &v24[v43];
      v44[32] = v45[32];
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v27 = v23;
      v28 = v25;
      v29 = 2;
      goto LABEL_44;
    case 3u:
      v47 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
      v48 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v49 = &v23[v48];
      v50 = &v24[v48];
      v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      v49[32] = v50[32];
      v27 = v23;
      v28 = v25;
      v29 = 3;
      goto LABEL_44;
    case 4u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v23, v24, v52);
      v53 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v54 = *(int *)(v53 + 20);
      v55 = &v23[v54];
      v56 = &v24[v54];
      v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      v55[32] = v56[32];
      v23[*(int *)(v53 + 24)] = v24[*(int *)(v53 + 24)];
      v27 = v23;
      v28 = v25;
      v29 = 4;
      goto LABEL_44;
    case 5u:
      v58 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v23, v24, v58);
      v59 = (int *)type metadata accessor for MoonDetailViewState(0);
      v60 = v59[5];
      v61 = &v23[v60];
      v62 = &v24[v60];
      v63 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        v64 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v98 = swift_getEnumCaseMultiPayload(v62);
        v99 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v61, v62, v99);
        swift_storeEnumTagMultiPayload(v61, v63, v98);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      v100 = v59[6];
      v101 = &v23[v100];
      v102 = &v24[v100];
      v103 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
      {
        v104 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
      }
      v130 = v59[7];
      v131 = &v23[v130];
      v132 = &v24[v130];
      v133 = *((_OWORD *)v132 + 1);
      *(_OWORD *)v131 = *(_OWORD *)v132;
      *((_OWORD *)v131 + 1) = v133;
      v131[32] = v132[32];
      v23[v59[8]] = v24[v59[8]];
      v27 = v23;
      v28 = v25;
      v29 = 5;
      goto LABEL_44;
    case 6u:
      v65 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v65;
      v66 = (int *)type metadata accessor for NewsArticle(0);
      v67 = v66[6];
      v68 = &v23[v67];
      v69 = &v24[v67];
      v70 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        v71 = sub_1000BA294(&qword_100BD4280);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      v105 = v66[7];
      v106 = &v23[v105];
      v107 = &v24[v105];
      v108 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
      v109(&v23[v66[8]], &v24[v66[8]], v70);
      v110 = v66[9];
      v111 = &v23[v110];
      v112 = &v24[v110];
      v113 = *(_OWORD *)&v24[v110 + 16];
      *(_OWORD *)v111 = *(_OWORD *)&v24[v110];
      *((_OWORD *)v111 + 1) = v113;
      v114 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v115 = &v111[v114];
      v116 = &v112[v114];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v70))
      {
        v117 = sub_1000BA294(&qword_100BD4280);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        v109(v115, v116, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v70);
      }
      *(_QWORD *)&v23[v66[10]] = *(_QWORD *)&v24[v66[10]];
      *(_QWORD *)&v23[v66[11]] = *(_QWORD *)&v24[v66[11]];
      *(_QWORD *)&v23[v66[12]] = *(_QWORD *)&v24[v66[12]];
      v27 = v23;
      v28 = v25;
      v29 = 6;
      goto LABEL_44;
    case 7u:
      v72 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v23, v24, v72);
      v73 = (int *)type metadata accessor for AveragesDetailViewState(0);
      v23[v73[5]] = v24[v73[5]];
      v74 = v73[6];
      v75 = &v23[v74];
      v76 = &v24[v74];
      v77 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        v78 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v118 = v77[5];
        v119 = &v75[v118];
        v120 = &v76[v118];
        v121 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
        *(_QWORD *)&v75[v77[6]] = *(_QWORD *)&v76[v77[6]];
        *(_QWORD *)&v75[v77[7]] = *(_QWORD *)&v76[v77[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      v122 = v73[7];
      v123 = &v23[v122];
      v124 = &v24[v122];
      v125 = *((_OWORD *)v124 + 1);
      *(_OWORD *)v123 = *(_OWORD *)v124;
      *((_OWORD *)v123 + 1) = v125;
      v123[32] = v124[32];
      v27 = v23;
      v28 = v25;
      v29 = 7;
      goto LABEL_44;
    case 8u:
      v79 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v23, v24, v79);
      v80 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v81 = *(int *)(v80 + 20);
      v82 = &v23[v81];
      v83 = &v24[v81];
      v84 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
      v85 = *(int *)(v80 + 24);
      v86 = &v23[v85];
      v87 = &v24[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v86[32] = v87[32];
      v27 = v23;
      v28 = v25;
      v29 = 8;
LABEL_44:
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      break;
    default:
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_10037F9E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  int *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  __int128 v133;

  if (a1 == a2)
    return a1;
  sub_1000215BC((uint64_t)a1, type metadata accessor for PreviewLocation);
  v6 = type metadata accessor for PreviewLocation(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v12 = type metadata accessor for SearchLocation(0);
    v13 = *(int *)(v12 + 32);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for Location(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294(&qword_100BC35F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v19 = *(int *)(v12 + 36);
    v20 = &a1[v19];
    v21 = &a2[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v9 = a1;
    v10 = v6;
    v11 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    v9 = a1;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_13;
    }
    v8 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = a1;
    v10 = v6;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
LABEL_13:
  v22 = *(int *)(a3 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  sub_1000215BC((uint64_t)&a1[v22], type metadata accessor for LocationPreviewModalViewState);
  v25 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload(v24))
  {
    case 0u:
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 0;
      goto LABEL_45;
    case 1u:
      v30 = type metadata accessor for DetailCondition(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v23, v24, v30);
      v31 = (int *)type metadata accessor for ConditionDetailViewState(0);
      v32 = v31[5];
      v33 = &v23[v32];
      v34 = &v24[v32];
      v35 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v36 = v31[6];
      v37 = &v23[v36];
      v38 = &v24[v36];
      v39 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v89 = v31[7];
      v90 = &v23[v89];
      v91 = &v24[v89];
      v92 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v92;
      v90[32] = v91[32];
      v93 = v31[8];
      v94 = &v23[v93];
      v95 = &v24[v93];
      v96 = (int *)type metadata accessor for DetailChartSelection(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, (uint64_t)v96))
      {
        v97 = sub_1000BA294(&qword_100BD0B58);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v94 = *(_OWORD *)v95;
        v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v126(&v94[v96[5]], &v95[v96[5]], v39);
        v126(&v94[v96[6]], &v95[v96[6]], v39);
        v126(&v94[v96[7]], &v95[v96[7]], v39);
        *(_QWORD *)&v94[v96[8]] = *(_QWORD *)&v95[v96[8]];
        v127 = v96[9];
        v128 = &v94[v127];
        v129 = &v95[v127];
        v128[8] = v129[8];
        *(_QWORD *)v128 = *(_QWORD *)v129;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, (uint64_t)v96);
      }
      v23[v31[9]] = v24[v31[9]];
      v27 = v23;
      v28 = v25;
      v29 = 1;
      goto LABEL_45;
    case 2u:
      v41 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v23, v24, v41);
      v42 = type metadata accessor for AirQualityDetailViewState(0);
      v23[*(int *)(v42 + 20)] = v24[*(int *)(v42 + 20)];
      v43 = *(int *)(v42 + 24);
      v44 = &v23[v43];
      v45 = &v24[v43];
      v44[32] = v45[32];
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v27 = v23;
      v28 = v25;
      v29 = 2;
      goto LABEL_45;
    case 3u:
      v47 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v23, v24, v47);
      v48 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState(0) + 20);
      v49 = &v23[v48];
      v50 = &v24[v48];
      v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      v49[32] = v50[32];
      v27 = v23;
      v28 = v25;
      v29 = 3;
      goto LABEL_45;
    case 4u:
      v52 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v23, v24, v52);
      v53 = type metadata accessor for SunriseSunsetDetailViewState(0);
      v54 = *(int *)(v53 + 20);
      v55 = &v23[v54];
      v56 = &v24[v54];
      v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      v55[32] = v56[32];
      v23[*(int *)(v53 + 24)] = v24[*(int *)(v53 + 24)];
      v27 = v23;
      v28 = v25;
      v29 = 4;
      goto LABEL_45;
    case 5u:
      v58 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v23, v24, v58);
      v59 = (int *)type metadata accessor for MoonDetailViewState(0);
      v60 = v59[5];
      v61 = &v23[v60];
      v62 = &v24[v60];
      v63 = type metadata accessor for MoonDetailSelectedDate(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        v64 = sub_1000BA294(&qword_100BC6CB8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v98 = swift_getEnumCaseMultiPayload(v62);
        v99 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v61, v62, v99);
        swift_storeEnumTagMultiPayload(v61, v63, v98);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      v100 = v59[6];
      v101 = &v23[v100];
      v102 = &v24[v100];
      v103 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
      {
        v104 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
      }
      v130 = v59[7];
      v131 = &v23[v130];
      v132 = &v24[v130];
      v133 = *((_OWORD *)v132 + 1);
      *(_OWORD *)v131 = *(_OWORD *)v132;
      *((_OWORD *)v131 + 1) = v133;
      v131[32] = v132[32];
      v23[v59[8]] = v24[v59[8]];
      v27 = v23;
      v28 = v25;
      v29 = 5;
      goto LABEL_45;
    case 6u:
      v65 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v65;
      v66 = (int *)type metadata accessor for NewsArticle(0);
      v67 = v66[6];
      v68 = &v23[v67];
      v69 = &v24[v67];
      v70 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        v71 = sub_1000BA294(&qword_100BD4280);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      v105 = v66[7];
      v106 = &v23[v105];
      v107 = &v24[v105];
      v108 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
      v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32);
      v109(&v23[v66[8]], &v24[v66[8]], v70);
      v110 = v66[9];
      v111 = &v23[v110];
      v112 = &v24[v110];
      v113 = *(_OWORD *)&v24[v110 + 16];
      *(_OWORD *)v111 = *(_OWORD *)&v24[v110];
      *((_OWORD *)v111 + 1) = v113;
      v114 = *(int *)(type metadata accessor for NewsChannel(0) + 24);
      v115 = &v111[v114];
      v116 = &v112[v114];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v70))
      {
        v117 = sub_1000BA294(&qword_100BD4280);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        v109(v115, v116, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v70);
      }
      *(_QWORD *)&v23[v66[10]] = *(_QWORD *)&v24[v66[10]];
      *(_QWORD *)&v23[v66[11]] = *(_QWORD *)&v24[v66[11]];
      *(_QWORD *)&v23[v66[12]] = *(_QWORD *)&v24[v66[12]];
      v27 = v23;
      v28 = v25;
      v29 = 6;
      goto LABEL_45;
    case 7u:
      v72 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v23, v24, v72);
      v73 = (int *)type metadata accessor for AveragesDetailViewState(0);
      v23[v73[5]] = v24[v73[5]];
      v74 = v73[6];
      v75 = &v23[v74];
      v76 = &v24[v74];
      v77 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        v78 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v118 = v77[5];
        v119 = &v75[v118];
        v120 = &v76[v118];
        v121 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
        *(_QWORD *)&v75[v77[6]] = *(_QWORD *)&v76[v77[6]];
        *(_QWORD *)&v75[v77[7]] = *(_QWORD *)&v76[v77[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      v122 = v73[7];
      v123 = &v23[v122];
      v124 = &v24[v122];
      v125 = *((_OWORD *)v124 + 1);
      *(_OWORD *)v123 = *(_OWORD *)v124;
      *((_OWORD *)v123 + 1) = v125;
      v123[32] = v124[32];
      v27 = v23;
      v28 = v25;
      v29 = 7;
      goto LABEL_45;
    case 8u:
      v79 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v23, v24, v79);
      v80 = type metadata accessor for HomeAndWorkRefinementViewState(0);
      v81 = *(int *)(v80 + 20);
      v82 = &v23[v81];
      v83 = &v24[v81];
      v84 = type metadata accessor for LocationOfInterest(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
      v85 = *(int *)(v80 + 24);
      v86 = &v23[v85];
      v87 = &v24[v85];
      v88 = *((_OWORD *)v87 + 1);
      *(_OWORD *)v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v88;
      v86[32] = v87[32];
      v27 = v23;
      v28 = v25;
      v29 = 8;
LABEL_45:
      swift_storeEnumTagMultiPayload(v27, v28, v29);
      break;
    default:
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1003803FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380408);
}

uint64_t sub_100380408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = sub_1000D05BC();
    v8 = v4 + *(int *)(a3 + 20);
  }
  return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_100380460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038046C);
}

uint64_t sub_10038046C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_10007A020();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = sub_1000D05BC();
    v10 = v5 + *(int *)(a4 + 20);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

void sub_1003804CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v29[0] = a1;
  v31 = a3;
  sub_1000BA294(&qword_100BC5F50);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v7 = sub_1000BA8E0();
  v8 = type metadata accessor for LocationPreviewModalViewState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v29 - v18;
  sub_1000BA294(&qword_100BC5F48);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v21 = sub_1000BD1E4();
  v22 = type metadata accessor for PreviewLocation(v21);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100099234();
  v24 = v29[1];
  sub_10003773C(v29[0], v3, &qword_100BC5F48);
  sub_100095B78(v24, (uint64_t)v19, type metadata accessor for LocationPreviewViewState);
  v25 = _s7Weather24LocationCompositionStateOwet_0(v3, 1, v22);
  if ((_DWORD)v25 == 1)
  {
    sub_100095B78((uint64_t)v19, v5, type metadata accessor for PreviewLocation);
    sub_1000998E4(v26, type metadata accessor for LocationPreviewViewState);
    sub_100021A14(v3, &qword_100BC5F48);
  }
  else
  {
    sub_1000998E4(v25, type metadata accessor for LocationPreviewViewState);
    sub_10007C77C(v3, v5, type metadata accessor for PreviewLocation);
  }
  sub_10003773C(v30, v4, &qword_100BC5F50);
  sub_100095B78(v24, (uint64_t)v16, type metadata accessor for LocationPreviewViewState);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v8) == 1)
  {
    sub_100095B78((uint64_t)&v16[*(int *)(v13 + 20)], v12, type metadata accessor for LocationPreviewModalViewState);
    sub_1000215BC((uint64_t)v16, type metadata accessor for LocationPreviewViewState);
    sub_100021A14(v4, &qword_100BC5F50);
  }
  else
  {
    sub_1000215BC((uint64_t)v16, type metadata accessor for LocationPreviewViewState);
    sub_1000C1A78(v4, v27, type metadata accessor for LocationPreviewModalViewState);
  }
  v28 = v31;
  sub_10007C77C(v5, v31, type metadata accessor for PreviewLocation);
  sub_10007C77C(v12, v28 + *(int *)(v13 + 20), type metadata accessor for LocationPreviewModalViewState);
}

uint64_t sub_100380744(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 0x4C77656976657270 && a2 == 0xEF6E6F697461636FLL)
  {
    v5 = 0xEF6E6F697461636FLL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C77656976657270, 0xEF6E6F697461636FLL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6569566C61646F6DLL && a2 == 0xEE00657461745377)
  {
    swift_bridgeObjectRelease(0xEE00657461745377);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6569566C61646F6DLL, 0xEE00657461745377, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100380878(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6569566C61646F6DLL;
  else
    return 0x4C77656976657270;
}

uint64_t sub_1003808C8()
{
  char *v0;

  return sub_100380878(*v0);
}

uint64_t sub_1003808D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100380744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003808F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100382EB8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038091C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100382EB8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100380944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;

  type metadata accessor for NewsArticle(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  v3 = sub_1000BA8E0();
  type metadata accessor for ConditionDetailViewState(v3);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v5 = sub_1000BD1E4();
  v6 = type metadata accessor for URL(v5);
  __chkstk_darwin(v6);
  sub_100094EC4();
  sub_1000D05BC();
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_10009E540();
  sub_100095B78(v0, v1, v8);
  v9 = (char *)sub_100380A1C + 4 * byte_10099810C[swift_getEnumCaseMultiPayload(v1)];
  __asm { BR              X10 }
}

uint64_t sub_100380A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 80) = 0x203A6C7275;
  *(_QWORD *)(v4 - 72) = 0xE500000000000000;
  v6._countAndFlagsBits = URL.absoluteString.getter(v5);
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v4 - 80);
  v8 = sub_1000C213C();
  v9(v8);
  return v7;
}

void sub_100380CA4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t HourPrecipitationDetailViewState;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _BYTE v46[2];

  v43 = a2;
  v42 = type metadata accessor for HomeAndWorkRefinementViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v40 = sub_1000D1234(v6, v31[0]);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v39 = sub_1000D1DB0(v8, v31[0]);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v11 = sub_10009E408(v10, v31[0]);
  v38 = type metadata accessor for MoonDetailViewState(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v14 = sub_1000DF598(v13, v31[0]);
  v41 = type metadata accessor for SunriseSunsetDetailViewState(v14);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  v17 = sub_1000D9D34(v16, v31[0]);
  HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  v37 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000C6DDC();
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v35 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[4] = type metadata accessor for ConditionDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v33 = v23;
  v32 = type metadata accessor for URL(0);
  v31[3] = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  sub_100099234();
  v24 = sub_1000BA294(&qword_100BDBC70);
  __chkstk_darwin(v24);
  sub_100098728();
  v25 = sub_1000D05BC();
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100094EC4();
  v27 = a1[3];
  v28 = a1[4];
  v44 = a1;
  sub_1000DB418(a1, v27);
  v29 = sub_100382F38();
  v30 = v45;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationPreviewModalViewState.CodingKeys, &type metadata for LocationPreviewModalViewState.CodingKeys, v29, v27, v28);
  if (!v30)
  {
    v31[1] = v3;
    v31[2] = v2;
    v45 = v25;
    v46[0] = 0;
    sub_100382F74();
    sub_1000D1758((uint64_t)&type metadata for LocationPreviewModalViewState.CodingType, (uint64_t)v46, v24, (uint64_t)&type metadata for LocationPreviewModalViewState.CodingType);
    __asm { BR              X10 }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v44);
  sub_1000B44B0();
}

void sub_100380F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  sub_1000C28C0();
  swift_storeEnumTagMultiPayload(*(_QWORD *)(v0 - 272), *(_QWORD *)(v0 - 104), 9);
  v1 = sub_1000C213C();
  sub_10007C77C(v1, v2, v3);
  JUMPOUT(0x100380F0CLL);
}

void sub_100381324(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29[10];
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v29[8] = type metadata accessor for HomeAndWorkRefinementViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v29[7] = sub_1000D1234(v4, v29[0]);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v33 = v6;
  v29[6] = type metadata accessor for MoonDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v29[5] = sub_1000D1DB0(v8, v29[0]);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v32 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[4] = type metadata accessor for SunriseSunsetDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = sub_10009E408(v12, v29[0]);
  v29[3] = type metadata accessor for NextHourPrecipitationDetailViewState(v13);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v31 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[2] = sub_1000C6DDC();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  v18 = sub_1000DF598(v17, v29[0]);
  v29[1] = type metadata accessor for ConditionDetailViewState(v18);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  v21 = sub_1000D9D34(v20, v29[0]);
  v30 = type metadata accessor for URL(v21);
  __chkstk_darwin(v30);
  sub_10009E540();
  sub_1000D05BC();
  sub_1000B42B0();
  __chkstk_darwin(v22);
  v24 = (char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1000BA294(&qword_100BDBCC8);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  sub_100098694();
  v26 = a1[3];
  v25 = a1[4];
  sub_1000DB418(a1, v26);
  v27 = sub_100382F38();
  v35 = v1;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for LocationPreviewModalViewState.CodingKeys, &type metadata for LocationPreviewModalViewState.CodingKeys, v27, v26, v25);
  sub_100095B78(v37, (uint64_t)v24, type metadata accessor for LocationPreviewModalViewState);
  v28 = (char *)sub_100381560 + 4 * word_100998120[swift_getEnumCaseMultiPayload(v24)];
  __asm { BR              X10 }
}

void sub_100381560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_QWORD *)(v6 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v0, v7);
  v8 = sub_1000DDA08();
  sub_1000BC0A0(v8, v9, v10, (uint64_t)&type metadata for LocationPreviewModalViewState.CodingType, v8);
  if (!v2)
  {
    *(_BYTE *)(v6 - 65) = 1;
    sub_100086DA4(&qword_100BCA0B8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    sub_1000AE908(v5, v6 - 65, v3, v7, v11);
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 120) + 8))(v1, v3);
  sub_1000B44B0();
}

void sub_100381960()
{
  uint64_t v0;
  unint64_t v1;

  *(_WORD *)(v0 - 66) = 0;
  v1 = sub_100382FB0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v0 - 65, v0 - 66, *(_QWORD *)(v0 - 104), &type metadata for LocationPreviewModalViewState.CodingType, v1);
  JUMPOUT(0x10038194CLL);
}

unint64_t sub_1003819E8(Swift::String a1)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_100B59D00;
  return sub_100381C18(a1, v1);
}

uint64_t sub_100381A04()
{
  return 10;
}

uint64_t sub_100381A0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100381A38 + 4 * byte_100998134[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_100381A38()
{
  return 7107189;
}

unint64_t sub_100381A48()
{
  return 0xD000000000000014;
}

uint64_t sub_100381AFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100381B28 + 4 * byte_10099813E[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_100381B28()
{
  return 7107189;
}

unint64_t sub_100381B38()
{
  return 0xD000000000000014;
}

unint64_t sub_100381C18(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 0xA)
    return 10;
  else
    return v5;
}

uint64_t sub_100381C5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100381C88 + 4 * byte_100998148[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_100381C88()
{
  return 0x63416F546C6C6163;
}

uint64_t sub_100381CA8()
{
  return 0x6F697469646E6F63;
}

unint64_t sub_100381CCC()
{
  return 0xD000000000000010;
}

unint64_t sub_100381CE8()
{
  return 0xD00000000000001BLL;
}

void sub_100381D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47[18];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a2;
  v50 = a1;
  v47[3] = type metadata accessor for HomeAndWorkRefinementViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v47[6] = (uint64_t)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10009876C();
  type metadata accessor for AveragesDetailViewState(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v47[13] = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10009876C();
  type metadata accessor for NewsArticle(v8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  v11 = sub_10009E408(v10, v47[0]);
  type metadata accessor for MoonDetailViewState(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v14 = sub_1000DF598(v13, v47[0]);
  v47[2] = type metadata accessor for SunriseSunsetDetailViewState(v14);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  v47[12] = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10009876C();
  v47[1] = type metadata accessor for NextHourPrecipitationDetailViewState(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  v47[10] = (uint64_t)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10009876C();
  v47[5] = type metadata accessor for AirQualityDetailViewState(v20);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100088FDC();
  v47[8] = v22;
  v23 = sub_10009876C();
  type metadata accessor for ConditionDetailViewState(v23);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  v26 = sub_1000D9D34(v25, v47[0]);
  v48 = type metadata accessor for URL(v26);
  v47[16] = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v47[4] = (uint64_t)v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10009876C();
  type metadata accessor for LocationPreviewModalViewState(v28);
  sub_1000B42B0();
  v30 = __chkstk_darwin(v29);
  v47[14] = (uint64_t)v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v33 = __chkstk_darwin(v32);
  v34 = __chkstk_darwin(v33);
  v35 = __chkstk_darwin(v34);
  v47[17] = (uint64_t)v47 - v36;
  v37 = __chkstk_darwin(v35);
  v47[15] = (uint64_t)v47 - v38;
  v39 = __chkstk_darwin(v37);
  v40 = __chkstk_darwin(v39);
  __chkstk_darwin(v40);
  sub_1000BA294(&qword_100BDBC18);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100094EC4();
  v43 = v2 + *(int *)(v42 + 48);
  sub_100095B78(v50, v2, type metadata accessor for LocationPreviewModalViewState);
  sub_100095B78(v49, v43, type metadata accessor for LocationPreviewModalViewState);
  v44 = sub_1000C213C();
  v46 = (char *)sub_100382090 + 4 * byte_100998152[swift_getEnumCaseMultiPayload(v44, v45)];
  __asm { BR              X10 }
}

uint64_t sub_100382090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  char v11;

  v4 = sub_1000D0100();
  sub_100095B78(v4, v2, v5);
  if (sub_1000C14DC())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 128) + 8))(v2, *(_QWORD *)(v3 - 112));
    sub_100021A14(v1, &qword_100BDBC18);
    v11 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 128);
    v7 = *(_QWORD *)(v3 - 224);
    v8 = *(_QWORD *)(v3 - 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v0, v8);
    v11 = static URL.== infix(_:_:)(v2, v7);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v7, v8);
    v10 = v9(v2, v8);
    sub_1000998E4(v10, type metadata accessor for LocationPreviewModalViewState);
  }
  return v11 & 1;
}

void sub_100382644(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  sub_10063001C(a1, a2);
  if ((v4 & 1) != 0)
  {
    v5 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
    sub_100381D74(a1 + v5, a2 + v5);
  }
}

uint64_t sub_100382690(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BDBC40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_100382EB8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for LocationPreviewViewState.CodingKeys, &type metadata for LocationPreviewViewState.CodingKeys, v12, v10, v11);
  v20 = 0;
  v13 = type metadata accessor for PreviewLocation(0);
  sub_100086DA4(&qword_100BDBC48, type metadata accessor for PreviewLocation, (uint64_t)&unk_1009B98E8);
  sub_1000C26D4(v3, (uint64_t)&v20, v5, v13, v14);
  if (!v2)
  {
    v15 = v3 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
    v19 = 1;
    v16 = sub_1000D05BC();
    sub_100086DA4(&qword_100BDBC50, type metadata accessor for LocationPreviewModalViewState, (uint64_t)&unk_1009981AC);
    sub_1000C26D4(v15, (uint64_t)&v19, v5, v16, v17);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1003827F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v20 = sub_1000D05BC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v21 = v7;
  v8 = sub_10009876C();
  v22 = type metadata accessor for PreviewLocation(v8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v23 = v10;
  v24 = sub_1000BA294(&qword_100BDBC20);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  sub_100099234();
  v12 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098694();
  v14 = a1[3];
  v15 = a1[4];
  v16 = (_QWORD *)sub_1000C213C();
  sub_1000DB418(v16, v17);
  v18 = sub_100382EB8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for LocationPreviewViewState.CodingKeys, &type metadata for LocationPreviewViewState.CodingKeys, v18, v14, v15);
  if (v2)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  else
  {
    v26 = 0;
    sub_100086DA4(&qword_100BDBC30, type metadata accessor for PreviewLocation, (uint64_t)&unk_1009B9910);
    sub_1000CCC28(v22, (uint64_t)&v26, v24);
    sub_10007C77C(v23, v3, type metadata accessor for PreviewLocation);
    v25 = 1;
    sub_100086DA4(&qword_100BDBC38, type metadata accessor for LocationPreviewModalViewState, (uint64_t)&unk_1009981D4);
    sub_1000CCC28(v20, (uint64_t)&v25, v24);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v24);
    sub_10007C77C(v21, v3 + *(int *)(v12 + 20), type metadata accessor for LocationPreviewModalViewState);
    sub_100095B78(v3, a2, type metadata accessor for LocationPreviewViewState);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    sub_1000215BC(v3, type metadata accessor for LocationPreviewViewState);
  }
  sub_1000B44B0();
}

void sub_100382A4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068A6C4(*a1, *a2);
}

void sub_100382A58()
{
  unsigned __int8 *v0;

  sub_1004A76FC(*v0);
}

double sub_100382A60(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D84A8(a1, *v1);
}

void sub_100382A68(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001DA10C(a1, *v1);
}

unint64_t sub_100382A70@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100B59D00;
  result = sub_100381C18(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100382AA4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100381A0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100382ACC()
{
  unsigned __int8 *v0;

  return sub_100381AFC(*v0);
}

unint64_t sub_100382AD4@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003819E8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100382AF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100381A04();
  *a1 = result;
  return result;
}

uint64_t sub_100382B1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100382F38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100382B44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100382F38();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100382B6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10068A6B8(*a1, *a2);
}

void sub_100382B78()
{
  unsigned __int8 *v0;

  sub_1004A7708(*v0);
}

double sub_100382B80(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D849C(a1, *v1);
}

void sub_100382B88(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001DA118(a1, *v1);
}

unint64_t sub_100382B90@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100B59E10;
  result = sub_100381C18(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100382BC4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100381C5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100382BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003833E4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100382C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003833E4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_100382C9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100380CA4(a1, a2);
}

void sub_100382CB0(_QWORD *a1)
{
  sub_100381324(a1);
}

void sub_100382CC8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003827F8(a1, a2);
}

uint64_t sub_100382CDC(_QWORD *a1)
{
  return sub_100382690(a1);
}

uint64_t sub_100382CF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v2, &v9);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  strcpy((char *)(inited + 32), "modalViewState");
  *(_BYTE *)(inited + 47) = -18;
  v4 = type metadata accessor for LocationPreviewViewState(0);
  sub_100380944();
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v6;
  v7 = Dictionary.init(dictionaryLiteral:)(inited);
  a1[3] = sub_1000BA294(&qword_100BDBC58);
  a1[4] = sub_100382EF4();
  sub_10005F164(a1);
  return ShortDescription.init(name:_:)(0xD000000000000014, 0x80000001009FC1C0, v7, v4);
}

uint64_t sub_100382DFC(uint64_t a1)
{
  uint64_t v2;

  sub_100086DA4(&qword_100BDBC68, type metadata accessor for LocationPreviewViewState, (uint64_t)&unk_100998314);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_100382E3C()
{
  sub_100693D34();
}

void sub_100382E50()
{
  sub_100693DF8();
}

void sub_100382E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_100693E40(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_100382E78()
{
  sub_100694764();
}

void sub_100382E8C()
{
  sub_100086DA4(&qword_100BDBC10, type metadata accessor for LocationPreviewViewState, (uint64_t)&unk_1009982EC);
}

unint64_t sub_100382EB8()
{
  unint64_t result;

  result = qword_100BDBC28;
  if (!qword_100BDBC28)
  {
    result = swift_getWitnessTable(&unk_1009986BC, &type metadata for LocationPreviewViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBC28);
  }
  return result;
}

unint64_t sub_100382EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDBC60;
  if (!qword_100BDBC60)
  {
    v1 = sub_100075EB0(&qword_100BDBC58);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDBC60);
  }
  return result;
}

unint64_t sub_100382F38()
{
  unint64_t result;

  result = qword_100BDBC78;
  if (!qword_100BDBC78)
  {
    result = swift_getWitnessTable(&unk_10099866C, &type metadata for LocationPreviewModalViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBC78);
  }
  return result;
}

unint64_t sub_100382F74()
{
  unint64_t result;

  result = qword_100BDBC80;
  if (!qword_100BDBC80)
  {
    result = swift_getWitnessTable(&unk_100998644, &type metadata for LocationPreviewModalViewState.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BDBC80);
  }
  return result;
}

unint64_t sub_100382FB0()
{
  unint64_t result;

  result = qword_100BDBCD0;
  if (!qword_100BDBCD0)
  {
    result = swift_getWitnessTable(&unk_10099861C, &type metadata for LocationPreviewModalViewState.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BDBCD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationPreviewModalViewState.CodingType()
{
  return &type metadata for LocationPreviewModalViewState.CodingType;
}

uint64_t getEnumTagSinglePayload for LocationsState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7Weather29LocationPreviewModalViewStateO10CodingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1003830D8 + 4 * byte_100998161[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_10038310C + 4 * byte_10099815C[v4]))();
}

uint64_t sub_10038310C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100383114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10038311CLL);
  return result;
}

uint64_t sub_100383128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100383130);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100383134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038313C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationPreviewModalViewState.CodingKeys()
{
  return &type metadata for LocationPreviewModalViewState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocationPreviewViewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003831A4 + 4 * byte_10099816B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003831D8 + 4 * byte_100998166[v4]))();
}

uint64_t sub_1003831D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003831E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003831E8);
  return result;
}

uint64_t sub_1003831F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003831FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100383200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100383208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationPreviewViewState.CodingKeys()
{
  return &type metadata for LocationPreviewViewState.CodingKeys;
}

unint64_t sub_100383228()
{
  unint64_t result;

  result = qword_100BDBD18;
  if (!qword_100BDBD18)
  {
    result = swift_getWitnessTable(&unk_100998464, &type metadata for LocationPreviewViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD18);
  }
  return result;
}

unint64_t sub_100383268()
{
  unint64_t result;

  result = qword_100BDBD20;
  if (!qword_100BDBD20)
  {
    result = swift_getWitnessTable(&unk_100998554, &type metadata for LocationPreviewModalViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD20);
  }
  return result;
}

unint64_t sub_1003832A8()
{
  unint64_t result;

  result = qword_100BDBD28;
  if (!qword_100BDBD28)
  {
    result = swift_getWitnessTable(&unk_1009985F4, &type metadata for LocationPreviewModalViewState.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BDBD28);
  }
  return result;
}

unint64_t sub_1003832E8()
{
  unint64_t result;

  result = qword_100BDBD30;
  if (!qword_100BDBD30)
  {
    result = swift_getWitnessTable(&unk_10099848C, &type metadata for LocationPreviewModalViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD30);
  }
  return result;
}

unint64_t sub_100383328()
{
  unint64_t result;

  result = qword_100BDBD38;
  if (!qword_100BDBD38)
  {
    result = swift_getWitnessTable(&unk_1009984B4, &type metadata for LocationPreviewModalViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD38);
  }
  return result;
}

unint64_t sub_100383368()
{
  unint64_t result;

  result = qword_100BDBD40;
  if (!qword_100BDBD40)
  {
    result = swift_getWitnessTable(&unk_1009983D4, &type metadata for LocationPreviewViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD40);
  }
  return result;
}

unint64_t sub_1003833A8()
{
  unint64_t result;

  result = qword_100BDBD48;
  if (!qword_100BDBD48)
  {
    result = swift_getWitnessTable(&unk_1009983FC, &type metadata for LocationPreviewViewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDBD48);
  }
  return result;
}

unint64_t sub_1003833E4()
{
  unint64_t result;

  result = qword_100BDBD50;
  if (!qword_100BDBD50)
  {
    result = swift_getWitnessTable(&unk_10099857C, &type metadata for LocationPreviewModalViewState.CodingType);
    atomic_store(result, (unint64_t *)&qword_100BDBD50);
  }
  return result;
}

uint64_t type metadata accessor for AirQualityDetailInteractor()
{
  return objc_opt_self(_TtC7Weather26AirQualityDetailInteractor);
}

uint64_t *sub_100383440(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_1003834B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1003834E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_100383510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_100383540(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s7Weather24LocationCompositionStateOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1003835F0 + 4 * byte_100998780[(v8 - 1)]))();
}

void sub_10038363C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = &dword_100000004;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

_QWORD *assignWithCopy for NextHourPrecipitationLeadingValueRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for NextHourPrecipitationLeadingValueRule(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t sub_100383884(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of NextHourPrecipitationLeadingValueRuleType.determineLeadingPrecipitationValue(currentTime:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_100383894@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD *__return_ptr, __n128)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t HourPrecipitationChartView;
  _QWORD v18[3];

  v6 = type metadata accessor for EnvironmentState(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v18, v7);
  v10 = v18[0];
  v11 = v18[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v18[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v18, 0, 0);
  sub_10006A788(v11, (uint64_t)v9);
  swift_release(v10);
  LODWORD(v10) = v9[2];
  sub_10006A74C((uint64_t)v9);
  if ((_DWORD)v10 == 4)
  {
    v12 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a3, a1, v12);
    v13 = (unsigned int *)&enum case for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue.relativeToFirstDataPoint(_:);
  }
  else
  {
    v13 = (unsigned int *)&enum case for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue.relativeToCurrentTime(_:);
  }
  v14 = *v13;
  HourPrecipitationChartView = type metadata accessor for NextHourPrecipitationChartViewModel.LeadingPrecipitationValue(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartView - 8) + 104))(a3, v14, HourPrecipitationChartView);
}

uint64_t sub_1003839B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (**v2)(_QWORD *__return_ptr, __n128);

  return sub_100383894(a1, *v2, a2);
}

_QWORD *sub_1003839C0(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a3[8];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_1000BA294(&qword_100BD4280);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = a3[9];
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    *v15 = *((_BYTE *)a2 + v14);
    v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *((_QWORD *)v15 + 1) = v17;
    v18 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
    v19 = v18[6];
    v20 = &v15[v19];
    v21 = (const void *)(v16 + v19);
    swift_bridgeObjectRetain(v17);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v11))
    {
      v22 = sub_1000BA294(&qword_100BD4280);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v20, v21, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v11);
    }
    v23 = v18[7];
    v24 = &v15[v23];
    v25 = (_QWORD *)(v16 + v23);
    v26 = v25[1];
    *(_QWORD *)v24 = *v25;
    *((_QWORD *)v24 + 1) = v26;
    *(_QWORD *)&v15[v18[8]] = *(_QWORD *)(v16 + v18[8]);
    v27 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for LocationOfInterest(0);
    swift_bridgeObjectRetain(v26);
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      v31 = sub_1000BA294(&qword_100BC3118);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    v32 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
    v33 = a3[14];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v36))
    {
      v37 = sub_1000BA294(&qword_100BCD688);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      *v34 = *v35;
      v38 = v36[5];
      v39 = &v34[v38];
      v40 = &v35[v38];
      v41 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(&v34[v36[6]], &v35[v36[6]], v30);
      v34[v36[7]] = v35[v36[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
    }
  }
  return v4;
}

uint64_t sub_100383CF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  int *v44;
  int v45;
  int v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BD4280);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v20 = v19[6];
  v21 = (void *)(v16 + v20);
  v22 = (const void *)(v17 + v20);
  v23 = _s7Weather24LocationCompositionStateOwet_0(v16 + v20, 1, v10);
  v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v10);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v21, v22, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v10 - 8);
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v21, v10);
LABEL_12:
    v26 = sub_1000BA294(&qword_100BD4280);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v21, v22, v10);
LABEL_13:
  v27 = v19[7];
  v28 = (_QWORD *)(v16 + v27);
  v29 = (_QWORD *)(v17 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease();
  v31 = v19[8];
  v32 = *(_QWORD *)(v16 + v31);
  *(_QWORD *)(v16 + v31) = *(_QWORD *)(v17 + v31);
  swift_retain();
  swift_release(v32);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v33 = a3[11];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = type metadata accessor for LocationOfInterest(0);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v39 = *(_QWORD *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v34, v36);
LABEL_18:
    v40 = sub_1000BA294(&qword_100BC3118);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v39 + 24))(v34, v35, v36);
LABEL_19:
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v41 = a3[14];
  v42 = (_BYTE *)(a1 + v41);
  v43 = (_BYTE *)(a2 + v41);
  v44 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v44);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44);
  if (!v45)
  {
    if (!v46)
    {
      *v42 = *v43;
      v53 = v44[5];
      v54 = &v42[v53];
      v55 = &v43[v53];
      v56 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(&v42[v44[6]], &v43[v44[6]], v36);
      v42[v44[7]] = v43[v44[7]];
      return a1;
    }
    sub_1003841A0((uint64_t)v42);
    goto LABEL_24;
  }
  if (v46)
  {
LABEL_24:
    v51 = sub_1000BA294(&qword_100BCD688);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return a1;
  }
  *v42 = *v43;
  v47 = v44[5];
  v48 = &v42[v47];
  v49 = &v43[v47];
  v50 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(&v42[v44[6]], &v43[v44[6]], v36);
  v42[v44[7]] = v43[v44[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
  return a1;
}

uint64_t sub_1003841A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003841DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1000BA294(&qword_100BD4280);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  v14 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v15 = v14[6];
  v16 = (void *)(v12 + v15);
  v17 = (const void *)(v13 + v15);
  if (_s7Weather24LocationCompositionStateOwet_0(v13 + v15, 1, v9))
  {
    v18 = sub_1000BA294(&qword_100BD4280);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v16, v17, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v9);
  }
  *(_OWORD *)(v12 + v14[7]) = *(_OWORD *)(v13 + v14[7]);
  *(_QWORD *)(v12 + v14[8]) = *(_QWORD *)(v13 + v14[8]);
  v19 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for LocationOfInterest(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_1000BA294(&qword_100BC3118);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v24 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  v25 = a3[14];
  v26 = (_BYTE *)(a1 + v25);
  v27 = (_BYTE *)(a2 + v25);
  v28 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
  {
    v29 = sub_1000BA294(&qword_100BCD688);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v30 = v28[5];
    v31 = &v26[v30];
    v32 = &v27[v30];
    v33 = type metadata accessor for Location(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(&v26[v28[6]], &v27[v28[6]], v22);
    v26[v28[7]] = v27[v28[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  }
  return a1;
}

uint64_t sub_1003844C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  int *v45;
  int v46;
  int v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BD4280);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)v16 = *(_BYTE *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(a2 + v15 + 8);
  swift_bridgeObjectRelease();
  v18 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v19 = v18[6];
  v20 = (void *)(v16 + v19);
  v21 = (const void *)(v17 + v19);
  v22 = _s7Weather24LocationCompositionStateOwet_0(v16 + v19, 1, v10);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v10);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v20, v21, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v24 = *(_QWORD *)(v10 - 8);
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v20, v10);
LABEL_12:
    v25 = sub_1000BA294(&qword_100BD4280);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v24 + 40))(v20, v21, v10);
LABEL_13:
  v26 = v18[7];
  v27 = (_QWORD *)(v16 + v26);
  v28 = (uint64_t *)(v17 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = v18[8];
  v32 = *(_QWORD *)(v16 + v31);
  *(_QWORD *)(v16 + v31) = *(_QWORD *)(v17 + v31);
  swift_release(v32);
  v33 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = type metadata accessor for LocationOfInterest(0);
  v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v39 = *(_QWORD *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v34, v36);
LABEL_18:
    v40 = sub_1000BA294(&qword_100BC3118);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v39 + 40))(v34, v35, v36);
LABEL_19:
  v41 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v42 = a3[14];
  v43 = (_BYTE *)(a1 + v42);
  v44 = (_BYTE *)(a2 + v42);
  v45 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v45);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, (uint64_t)v45);
  if (!v46)
  {
    if (!v47)
    {
      *v43 = *v44;
      v54 = v45[5];
      v55 = &v43[v54];
      v56 = &v44[v54];
      v57 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(&v43[v45[6]], &v44[v45[6]], v36);
      v43[v45[7]] = v44[v45[7]];
      return a1;
    }
    sub_1003841A0((uint64_t)v43);
    goto LABEL_24;
  }
  if (v47)
  {
LABEL_24:
    v52 = sub_1000BA294(&qword_100BCD688);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    return a1;
  }
  *v43 = *v44;
  v48 = v45[5];
  v49 = &v43[v48];
  v50 = &v44[v48];
  v51 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(&v43[v45[6]], &v44[v45[6]], v36);
  v43[v45[7]] = v44[v45[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
  return a1;
}

uint64_t sub_100384930(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1000BA294(&qword_100BD4280);
    sub_100088FF0();
    if (v12)
    {
      v10 = v9;
      v11 = a3[8];
    }
    else
    {
      type metadata accessor for LearnMoreAttributorViewModel(0);
      sub_100088FF0();
      if (v12)
      {
        v10 = v13;
        v11 = a3[9];
      }
      else
      {
        sub_1000BA294(&qword_100BC3118);
        sub_100088FF0();
        if (v14)
        {
          v10 = v15;
          v11 = a3[11];
        }
        else
        {
          v10 = sub_1000BA294(&qword_100BCD688);
          v11 = a3[14];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100384A10(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    sub_1000BA294(&qword_100BD4280);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[8];
    }
    else
    {
      type metadata accessor for LearnMoreAttributorViewModel(0);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[9];
      }
      else
      {
        sub_1000BA294(&qword_100BC3118);
        sub_10009D2E8();
        if (v12)
        {
          v8 = v13;
          v9 = a4[11];
        }
        else
        {
          v8 = sub_1000BA294(&qword_100BCD688);
          v9 = a4[14];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v9, a2, a2, v8);
  }
  return result;
}

void sub_100384AE0(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13)
{
  int *v17;

  *(_BYTE *)a9 = a1;
  *(_BYTE *)(a9 + 1) = a2;
  *(_BYTE *)(a9 + 2) = a3;
  *(_QWORD *)(a9 + 8) = a4;
  *(_QWORD *)(a9 + 16) = a5;
  v17 = (int *)type metadata accessor for LocationFooterViewModel(0);
  sub_1001A7244(a6, a9 + v17[8], &qword_100BD4280);
  sub_1000DB648(a7, a9 + v17[9], type metadata accessor for LearnMoreAttributorViewModel);
  *(_BYTE *)(a9 + v17[10]) = a8;
  sub_1001A7244(a10, a9 + v17[11], &qword_100BC3118);
  *(_BYTE *)(a9 + v17[12]) = a11;
  *(_BYTE *)(a9 + v17[13]) = a12;
  sub_1001A7244(a13, a9 + v17[14], &qword_100BCD688);
}

uint64_t storeEnumTagSinglePayload for LocationFooterViewModel.LearnMorePosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100384C1C + 4 * byte_100998865[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100384C50 + 4 * byte_100998860[v4]))();
}

uint64_t sub_100384C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100384C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100384C60);
  return result;
}

uint64_t sub_100384C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100384C74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100384C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100384C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationFooterViewModel.LearnMorePosition()
{
  return &type metadata for LocationFooterViewModel.LearnMorePosition;
}

unint64_t sub_100384CA0()
{
  unint64_t result;

  result = qword_100BDBF60;
  if (!qword_100BDBF60)
  {
    result = swift_getWitnessTable(&unk_100998964, &type metadata for LocationFooterViewModel.LearnMorePosition);
    atomic_store(result, (unint64_t *)&qword_100BDBF60);
  }
  return result;
}

uint64_t sub_100384CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7WeatherP33_DCB4A35BA7D947470CCA6740CC343B3315VisibilityState___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100384D2C()
{
  return type metadata accessor for VisibilityState(0);
}

uint64_t sub_100384D34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100021ADC();
  *a1 = result & 1;
  return result;
}

double sub_100384D60(char *a1)
{
  return sub_100144B80(*a1);
}

uint64_t *assignWithCopy for VisibilityModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  v9 = a2[2];
  v8 = a2[3];
  v10 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for VisibilityModifier(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

void *sub_100384E54()
{
  return &unk_100BDBF68;
}

_BYTE *sub_100384E60@<X0>(_BYTE *a1@<X8>)
{
  _BYTE *result;

  result = sub_100384E54();
  *a1 = *result;
  return result;
}

void *sub_100384E90()
{
  return &protocol witness table for Bool;
}

unint64_t sub_100384E9C(uint64_t a1)
{
  unint64_t result;

  result = sub_100384EC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100384EC0()
{
  unint64_t result;

  result = qword_100BDC150;
  if (!qword_100BDC150)
  {
    result = swift_getWitnessTable(&unk_100998AE4, &type metadata for NeedsVisibilityDetectionComputationPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_100BDC150);
  }
  return result;
}

uint64_t type metadata accessor for GeneralConfigurationModule()
{
  return objc_opt_self(_TtC7Weather26GeneralConfigurationModule);
}

double sub_100384F1C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BDC298);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_100384F98, 0, v2);
  swift_release(v3);
  v4 = swift_release(v1);
  v5 = ProxyContainer.private.getter(v4);
  RegistrationContainer.lazy(block:)(sub_100385170, 0);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_100384F98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BDC2A0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (v29)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1000DB418(a1, v8);
    v10 = sub_1000BA294(&qword_100BC4540);
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
    if (result)
    {
      v11 = result;
      v12 = sub_100068EB4((uint64_t)v28, v29);
      v13 = __chkstk_darwin(v12);
      v15 = (_QWORD *)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      v17 = *v15;
      v18 = type metadata accessor for GeneralConfigurationInteractor();
      v27[3] = v18;
      v27[4] = &off_100B6FD60;
      v27[0] = v17;
      v19 = type metadata accessor for GeneralConfigurationModule();
      v20 = (_QWORD *)swift_allocObject(v19, 64, 7);
      v21 = sub_100068EB4((uint64_t)v27, v18);
      v22 = __chkstk_darwin(v21);
      v24 = (_QWORD *)((char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
      v26 = *v24;
      v20[5] = v18;
      v20[6] = &off_100B6FD60;
      v20[2] = v26;
      v20[7] = v11;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
      result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
      a2[3] = v19;
      a2[4] = &off_100B6FCA0;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_100385170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BDC2A0);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_100385238, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BDC2A8);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_1003852D0, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BDC2B0);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1003852E4, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC4540);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1003852F8, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_100385238@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (v8)
  {
    v7 = type metadata accessor for GeneralConfigurationInteractor();
    result = swift_allocObject(v7, 32, 7);
    *(_QWORD *)(result + 16) = v8;
    *(_QWORD *)(result + 24) = v9;
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100B6FD60;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003852D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for GeneralConfigurationInputFactory, (uint64_t)&off_100B6FED8, a1);
}

uint64_t sub_1003852E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10012A894((uint64_t (*)(_QWORD))type metadata accessor for GeneralConfigurationViewModelFactory, (uint64_t)&off_100B6FDC8, a1);
}

uint64_t sub_1003852F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v29;
  if (!v29)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v31;
  v7 = v32;
  v9 = v30;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BDC2A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v28)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v27, v28);
  v25 = type metadata accessor for GeneralConfigurationInputFactory();
  v26 = &off_100B6FED8;
  v24[0] = v13;
  sub_100043CA8((uint64_t)v24, (uint64_t)v23);
  v14 = swift_allocObject(&unk_100B6FCC0, 56, 7);
  sub_10003C800(v23, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
  v15 = swift_allocObject(&unk_100B6FCE8, 32, 7);
  *(_QWORD *)(v15 + 16) = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BDC2B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v28)
  {
    v19 = *sub_1000DB418(v27, v28);
    v25 = type metadata accessor for GeneralConfigurationViewModelFactory();
    v26 = &off_100B6FDC8;
    v24[0] = v19;
    sub_100043CA8((uint64_t)v24, (uint64_t)v23);
    v20 = swift_allocObject(&unk_100B6FD10, 56, 7);
    sub_10003C800(v23, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
    v21 = swift_allocObject(&unk_100B6FD38, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_100385624;
    *(_QWORD *)(v21 + 24) = v20;
    v22 = sub_1000BA294(&qword_100BC4540);
    swift_allocObject(v22, 49, 7);
    return sub_100183960(v6, v9, v8, v7, sub_100182F48, 0, sub_1003855F4, v15, sub_10038563C, v21);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for GeneralConfigurationAssembly()
{
  return objc_opt_self(_TtC7Weather28GeneralConfigurationAssembly);
}

double sub_100385598(__n128 a1)
{
  return sub_100384F1C(a1);
}

uint64_t sub_1003855AC()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003855D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003855F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_100385624()
{
  return static Settings.HomeAndWork.homeAndWorkLabelEnabled.getter() & 1;
}

uint64_t sub_10038563C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for GeneralConfigurationInteractor()
{
  return objc_opt_self(_TtC7Weather30GeneralConfigurationInteractor);
}

unint64_t sub_100385690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDC358;
  if (!qword_100BDC358)
  {
    v1 = type metadata accessor for GeneralConfigurationInteractor();
    result = swift_getWitnessTable(&unk_100998C50, v1);
    atomic_store(result, (unint64_t *)&qword_100BDC358);
  }
  return result;
}

uint64_t type metadata accessor for GeneralConfigurationViewModelFactory()
{
  return objc_opt_self(_TtC7Weather36GeneralConfigurationViewModelFactory);
}

uint64_t storeEnumTagSinglePayload for GeneralConfigurationViewModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100385738 + 4 * byte_100998D95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10038576C + 4 * byte_100998D90[v4]))();
}

uint64_t sub_10038576C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100385774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10038577CLL);
  return result;
}

uint64_t sub_100385788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100385790);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100385794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038579C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeneralConfigurationViewModel()
{
  return &type metadata for GeneralConfigurationViewModel;
}

uint64_t sub_1003857B8@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v4, &v8);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  *(_QWORD *)(inited + 40) = 0x80000001009FC390;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = a1;
  v6 = Dictionary.init(dictionaryLiteral:)(inited);
  a2[3] = sub_1000BA294(&qword_100BDC400);
  a2[4] = sub_100385914();
  sub_10005F164(a2);
  return ShortDescription.init(name:_:)(0xD00000000000001DLL, 0x8000000100998D80, v6, &type metadata for GeneralConfigurationViewModel);
}

uint64_t sub_1003858A4@<X0>(_QWORD *a1@<X8>)
{
  char *v1;

  return sub_1003857B8(*v1, a1);
}

uint64_t sub_1003858AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100385958();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1003858D8()
{
  unint64_t result;

  result = qword_100BDC3F8;
  if (!qword_100BDC3F8)
  {
    result = swift_getWitnessTable(&unk_100998DC0, &type metadata for GeneralConfigurationViewModel);
    atomic_store(result, (unint64_t *)&qword_100BDC3F8);
  }
  return result;
}

unint64_t sub_100385914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDC408;
  if (!qword_100BDC408)
  {
    v1 = sub_100075EB0(&qword_100BDC400);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDC408);
  }
  return result;
}

unint64_t sub_100385958()
{
  unint64_t result;

  result = qword_100BDC410;
  if (!qword_100BDC410)
  {
    result = swift_getWitnessTable(&unk_100998DE8, &type metadata for GeneralConfigurationViewModel);
    atomic_store(result, (unint64_t *)&qword_100BDC410);
  }
  return result;
}

uint64_t type metadata accessor for GeneralConfigurationInputFactory()
{
  return objc_opt_self(_TtC7Weather32GeneralConfigurationInputFactory);
}

ValueMetadata *type metadata accessor for GeneralConfigurationInput()
{
  return &type metadata for GeneralConfigurationInput;
}

uint64_t *assignWithCopy for MoonCompactOverviewTableViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for MoonCompactOverviewTableViewModel()
{
  return &type metadata for MoonCompactOverviewTableViewModel;
}

uint64_t sub_100385A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;
  char v8;

  sub_100947318();
  if ((v6 & 1) != 0)
  {
    if (a2)
    {
      if (a4)
      {
        swift_bridgeObjectRetain(a4);
        swift_bridgeObjectRetain(a2);
        sub_100947318();
        v8 = v7;
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(a4);
        if ((v8 & 1) != 0)
          return 1;
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100385AAC(uint64_t *a1, uint64_t *a2)
{
  return sub_100385A30(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_100385AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v7 = sub_1000BA294(&qword_100BD64D8);
  v8 = type metadata accessor for URLHandlerPattern(0);
  v13 = swift_allocObject(v7, ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_10098B610;
  v9 = *(_QWORD *)aWeather_4;
  v10 = unk_100BDC4B8;
  sub_10009EF94();
  sub_100099360();
  sub_100094EDC();
  swift_bridgeObjectRetain(v10);
  sub_1000860DC();
  URLHandlerPattern.init(scheme:host:path:fragment:params:conditions:)(v9, v10, 0, 0, a1, a2, a3, a4);
  sub_1000860DC();
  sub_10009EF94();
  sub_100099360();
  sub_100094EDC();
  sub_1000BAA08(1886680168, 0xE400000000000000);
  sub_1000860DC();
  sub_10009EF94();
  sub_100099360();
  sub_100094EDC();
  sub_1000BAA08(0x7370747468, 0xE500000000000000);
  return v13;
}

_QWORD *sub_100385C34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[3];
  _QWORD v32[3];
  uint64_t v33;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BDC578);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v33)
  {
    __break(1u);
    goto LABEL_7;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BC4578);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = (uint64_t)result;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD4D20);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v31, v14, 0x746C7561666544, 0xE700000000000000, v14, v12, v13);
  v15 = v31[0];
  if (!v31[0])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v31[2];
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BD4D28);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (v30)
  {
    v20 = type metadata accessor for LocationPreviewModule();
    ObjectType = swift_getObjectType(v15);
    v22 = sub_100068EB4((uint64_t)v32, v33);
    __chkstk_darwin(v22);
    v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    v26 = type metadata accessor for LocationPreviewInteractor();
    v27 = sub_1004B6100((uint64_t)v24, v11, v15, &v29, v20, v26, ObjectType, (uint64_t)&off_100B9DF50, v16);
    result = (_QWORD *)_s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v32);
    a2[3] = v20;
    a2[4] = &off_100B77950;
    *a2 = v27;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100385E50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD v34[3];
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BDBAB8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v43)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BDC5A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v41)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BDC5B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!v39)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  v16 = sub_1000BA294(&qword_100BDC5A0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v16, v16, v14, v15);
  if (!v37)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BDBAC0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (v35)
  {
    v20 = sub_100068EB4((uint64_t)v42, v43);
    __chkstk_darwin(v20);
    v22 = (_QWORD *)((char *)&v34[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    v24 = sub_100068EB4((uint64_t)v38, v39);
    __chkstk_darwin(v24);
    v26 = (_QWORD *)((char *)&v34[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v27 + 16))(v26);
    v28 = sub_100068EB4((uint64_t)v34, v35);
    __chkstk_darwin(v28);
    v30 = (char *)&v34[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    v32 = sub_100386E1C(*v22, &v40, *v26, &v36, (uint64_t)v30);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v34);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v38);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v42);
    result = type metadata accessor for LocationPreviewViewModelFactory(0);
    a2[3] = result;
    a2[4] = &off_100B78698;
    *a2 = v32;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

double sub_100386128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v0 = sub_1000BA294(&qword_100BDC570);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_1003861F0, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BDC578);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_10038625C, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BDC580);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1003865D4, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC4578);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_100386618, 0, v6);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1003861F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_1000DB418(a1, v3);
  v5 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v3, v4);
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for LocationPreviewTracker;
    a2[4] = (uint64_t)&off_100B86320;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10038625C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t **v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[3];
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v55;
  if (!v55)
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v56;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BDC570);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v54)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_1000DB418(a1, v13);
  v15 = sub_1000BA294(&qword_100BDC588);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (!v52)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BD3878);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (!v50)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v19 = a1[3];
  v20 = a1[4];
  sub_1000DB418(a1, v19);
  v21 = sub_1000BA294(&qword_100BDC590);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v21, v21, v19, v20);
  if (!v48)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = a1[3];
  v23 = a1[4];
  sub_1000DB418(a1, v22);
  v24 = type metadata accessor for WeatherDataUpdater();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v24, v24, v22, v23);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v25 = result;
  v44 = a2;
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BDC598);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (v46)
  {
    v29 = sub_100068EB4((uint64_t)v53, v54);
    __chkstk_darwin(v29);
    v31 = (uint64_t *)((char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v32 + 16))(v31);
    v33 = sub_100068EB4((uint64_t)v49, v50);
    __chkstk_darwin(v33);
    v35 = (uint64_t *)((char *)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v36 + 16))(v35);
    v37 = sub_100068EB4((uint64_t)v45, v46);
    __chkstk_darwin(v37);
    v39 = (uint64_t **)((char *)&v43 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v40 + 16))(v39);
    v41 = sub_1003870D4(v8, v9, *v31, &v51, *v35, &v47, v25, *v39);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v45);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v49);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v53);
    result = type metadata accessor for LocationPreviewInteractor();
    v42 = v44;
    v44[3] = result;
    v42[4] = &off_100B9DF50;
    *v42 = v41;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1003865D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for LocationPreviewInputFactory();
  result = swift_allocObject(v2, 16, 7);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100B6BF10;
  *a1 = result;
  return result;
}

uint64_t sub_100386618(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v30;
  v7 = v31;
  v9 = v29;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BDC580);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v26, v27);
  v24 = type metadata accessor for LocationPreviewInputFactory();
  v25 = &off_100B6BF10;
  v23[0] = v13;
  sub_10003B59C((uint64_t)v23, (uint64_t)v22);
  v14 = swift_allocObject(&unk_100B6FF98, 56, 7);
  sub_10003C800(v22, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  v15 = swift_allocObject(&unk_100B6FFC0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100386CE8;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = sub_1000BA294(&qword_100BDC560);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (v27)
  {
    v19 = *sub_1000DB418(v26, v27);
    v24 = type metadata accessor for LocationPreviewViewModelFactory(0);
    v25 = &off_100B78698;
    v23[0] = v19;
    sub_10003B59C((uint64_t)v23, (uint64_t)v22);
    v20 = swift_allocObject(&unk_100B6FFE8, 56, 7);
    sub_10003C800(v22, v20 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
    v21 = sub_1000BA294(&qword_100BC4578);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    return sub_100183A8C(v6, v9, v8, v7, sub_100386870, 0, sub_1000A22C0, v15, sub_100386D14, v20);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100386870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = type metadata accessor for MainAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v39 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v39 - v13;
  v15 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(*(_QWORD *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v17, type metadata accessor for ModalViewState);
  LODWORD(v15) = swift_getEnumCaseMultiPayload(v17, v15);
  sub_1000979AC((uint64_t)v17, type metadata accessor for ModalViewState);
  if ((_DWORD)v15 == 6)
    return 0;
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
    return 0;
  v20 = v18 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v21 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain(v18);
  while (1)
  {
    sub_100084050(v20, (uint64_t)v14, type metadata accessor for MainAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v2);
    if (EnumCaseMultiPayload == 7)
      break;
    switch(EnumCaseMultiPayload)
    {
      case 8:
        sub_100084050((uint64_t)v14, (uint64_t)v6, type metadata accessor for MainAction);
        v26 = type metadata accessor for LocationViewAction(0);
        v27 = swift_getEnumCaseMultiPayload(v6, v26);
        if (v27 == 2)
        {
          swift_bridgeObjectRelease(v18);
          v34 = type metadata accessor for LocationFooterAction;
          goto LABEL_28;
        }
        if (v27 == 1)
        {
          swift_bridgeObjectRelease(v18);
          v35 = sub_1000BA294(&qword_100BC5FC8);
          sub_1001C8EF4((uint64_t)&v6[*(int *)(v35 + 64)]);
          v34 = type metadata accessor for LocationComponentAction;
          goto LABEL_28;
        }
        v24 = (uint64_t)v6;
        v25 = type metadata accessor for LocationViewAction;
LABEL_20:
        sub_1000979AC(v24, v25);
        break;
      case 9:
        sub_100084050((uint64_t)v14, (uint64_t)v9, type metadata accessor for MainAction);
        v28 = type metadata accessor for WeatherDataAction(0);
        v29 = swift_getEnumCaseMultiPayload(v9, v28);
        if (v29 != 4)
        {
          if (!v29)
          {
            swift_bridgeObjectRelease(v18);
            v33 = *((_QWORD *)v9 + 1);
            goto LABEL_31;
          }
          v24 = (uint64_t)v9;
          v25 = type metadata accessor for WeatherDataAction;
          goto LABEL_20;
        }
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(*((_QWORD *)v9 + 1));
        v36 = (int *)sub_1000BA294(&qword_100BCB630);
        v6 = &v9[v36[12]];
        v37 = (uint64_t)&v9[v36[16]];
        sub_1000979AC((uint64_t)&v9[v36[20]], type metadata accessor for NewsDataModel);
        sub_1000979AC(v37, type metadata accessor for PreprocessedWeatherData);
        v34 = type metadata accessor for WeatherData;
LABEL_28:
        v38 = (uint64_t)v6;
LABEL_29:
        sub_1000979AC(v38, v34);
        goto LABEL_32;
      case 19:
        goto LABEL_24;
    }
    sub_1000979AC((uint64_t)v14, type metadata accessor for MainAction);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease(v18);
      return 0;
    }
  }
  sub_100084050((uint64_t)v14, (uint64_t)v12, type metadata accessor for MainAction);
  v23 = type metadata accessor for ModalViewAction(0);
  if (swift_getEnumCaseMultiPayload(v12, v23))
  {
    v24 = (uint64_t)v12;
    v25 = type metadata accessor for ModalViewAction;
    goto LABEL_20;
  }
  v30 = type metadata accessor for LocationPreviewViewAction(0);
  v31 = swift_getEnumCaseMultiPayload(v12, v30);
  if (v31 != 2)
  {
    if (v31 == 1)
    {
      swift_bridgeObjectRelease(v18);
      v34 = type metadata accessor for LocationPreviewViewAction;
      v38 = (uint64_t)v12;
      goto LABEL_29;
    }
    v24 = (uint64_t)v12;
    v25 = type metadata accessor for LocationPreviewViewAction;
    goto LABEL_20;
  }
LABEL_24:
  v33 = v18;
LABEL_31:
  swift_bridgeObjectRelease(v33);
LABEL_32:
  sub_1000979AC((uint64_t)v14, type metadata accessor for MainAction);
  return 0;
}

uint64_t sub_100386C34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_1002D9F78(a1, a3);
}

uint64_t sub_100386C7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DB418(a2, a2[3]);
  return sub_1004DBAEC(a1, a3);
}

uint64_t sub_100386CC4()
{
  uint64_t v0;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100386CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100386C34(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100386CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100386D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100386C7C(a1, (_QWORD *)(v2 + 16), a2);
}

_QWORD *sub_100386D1C(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  a6[5] = type metadata accessor for LocationFinder();
  a6[6] = &off_100B788B0;
  a6[2] = a1;
  a6[15] = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  a6[16] = &off_100B70D90;
  a6[12] = a3;
  a6[25] = &type metadata for AddLocationContextHelper;
  a6[26] = &off_100B720D8;
  v12 = swift_allocObject(&unk_100B70010, 56, 7);
  a6[22] = v12;
  v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(a5 + 32);
  v14 = (uint64_t)a6 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind;
  v15 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
  *((_BYTE *)a6 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___permitDuplicateLocations) = 2;
  sub_10003C800(a2, (uint64_t)(a6 + 7));
  sub_10003C800(a4, (uint64_t)(a6 + 17));
  return a6;
}

_QWORD *sub_100386E1C(uint64_t a1, __int128 *a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v30[3];
  ValueMetadata *v31;
  _UNKNOWN **v32;
  _QWORD v33[3];
  uint64_t v34;
  _UNKNOWN **v35;
  _QWORD v36[5];

  v10 = type metadata accessor for LocationFinder();
  v36[3] = v10;
  v36[4] = &off_100B788B0;
  v36[0] = a1;
  v34 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  v35 = &off_100B70D90;
  v33[0] = a3;
  v31 = &type metadata for AddLocationContextHelper;
  v32 = &off_100B720D8;
  v11 = swift_allocObject(&unk_100B70010, 56, 7);
  v30[0] = v11;
  v12 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(a5 + 32);
  v13 = type metadata accessor for LocationPreviewViewModelFactory(0);
  v14 = (_QWORD *)swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v15 = sub_100068EB4((uint64_t)v36, v10);
  __chkstk_darwin(v15);
  v17 = (_QWORD *)((char *)&v30[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = sub_100068EB4((uint64_t)v33, v34);
  __chkstk_darwin(v19);
  v21 = (_QWORD *)((char *)&v30[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = sub_100068EB4((uint64_t)v30, (uint64_t)v31);
  __chkstk_darwin(v23);
  v25 = (char *)&v30[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  v27 = sub_100386D1C(*v17, a2, *v21, a4, (uint64_t)v25, v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
  return v27;
}

_QWORD *sub_100387018(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  a9[7] = &type metadata for LocationPreviewTracker;
  a9[8] = &off_100B86320;
  a9[4] = a3;
  a9[17] = type metadata accessor for LocalSearchRequestManager();
  a9[18] = &off_100B8B840;
  a9[14] = a5;
  a9[28] = type metadata accessor for NetworkActivityManager();
  a9[29] = &off_100B6D7E8;
  a9[25] = a8;
  a9[2] = a1;
  a9[3] = a2;
  sub_10003C800(a4, (uint64_t)(a9 + 9));
  sub_10003C800(a6, (uint64_t)(a9 + 19));
  a9[24] = a7;
  return a9;
}

_QWORD *sub_1003870D4(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  _QWORD v38[5];

  v15 = *a8;
  v38[3] = &type metadata for LocationPreviewTracker;
  v38[4] = &off_100B86320;
  v38[0] = a3;
  v16 = type metadata accessor for LocalSearchRequestManager();
  v37[3] = v16;
  v37[4] = &off_100B8B840;
  v37[0] = a5;
  v35 = v15;
  v36 = &off_100B6D7E8;
  v34[0] = a8;
  v17 = type metadata accessor for LocationPreviewInteractor();
  v18 = (_QWORD *)swift_allocObject(v17, 240, 7);
  v19 = sub_100068EB4((uint64_t)v38, (uint64_t)&type metadata for LocationPreviewTracker);
  __chkstk_darwin(v19);
  v21 = (_QWORD *)((char *)&v34[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = sub_100068EB4((uint64_t)v37, v16);
  __chkstk_darwin(v23);
  v25 = (_QWORD *)((char *)&v34[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  v27 = sub_100068EB4((uint64_t)v34, v35);
  __chkstk_darwin(v27);
  v29 = (_QWORD *)((char *)&v34[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  v31 = sub_100387018(a1, a2, *v21, a4, *v25, a6, a7, *v29, v18);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v38);
  return v31;
}

uint64_t *sub_1003872CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for CurrentWeather(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v13 = v10[5];
    v9[4] = v10[4];
    v9[5] = v13;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
  }
  return a1;
}

uint64_t sub_100387380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t sub_100387408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = *(_QWORD *)(a1 + v7 + 8);
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v8[2] = v9[2];
  v12 = v9[3];
  v13 = v8[3];
  v8[3] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v8[4] = v9[4];
  v14 = v9[5];
  v15 = v8[5];
  v8[5] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_1003874C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_100387530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = v9[3];
  v13 = v8[3];
  v8[2] = v9[2];
  v8[3] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = v9[5];
  v15 = v8[5];
  v8[4] = v9[4];
  v8[5] = v14;
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_1003875BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003875C8);
}

uint64_t sub_1003875C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for CurrentWeather(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_100387644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100387650);
}

uint64_t sub_100387650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for CurrentWeather(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1003876C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  if ((static CurrentWeather.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for VisibilityComponent(0) + 20);
  v5 = a1 + v4;
  v6 = *(_QWORD *)(a1 + v4);
  v7 = *(_QWORD *)(a1 + v4 + 8);
  v8 = *(_QWORD *)(a1 + v4 + 16);
  v9 = *(_QWORD *)(a1 + v4 + 24);
  v10 = *(_QWORD *)(a1 + v4 + 32);
  v11 = *(_QWORD *)(v5 + 40);
  v12 = (uint64_t *)(a2 + v4);
  v13 = v12[1];
  v14 = v12[2];
  v15 = v12[3];
  v16 = v12[4];
  v17 = v12[5];
  v18 = v6 == *v12 && v7 == v13;
  if ((v18 || (sub_100099264(v6, v7, *v12, v13) & 1) != 0)
    && (v8 == v14 ? (v19 = v9 == v15) : (v19 = 0),
        (v19 || (sub_100099264(v8, v9, v14, v15) & 1) != 0)
     && (v10 == v16 ? (v20 = v11 == v17) : (v20 = 0), v20 || (sub_100099264(v10, v11, v16, v17) & 1) != 0)))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10038779C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165)
  {
    v5 = 0xEE00726568746165;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x57746E6572727563, 0xEE00726568746165, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001009FC430)
  {
    swift_bridgeObjectRelease(0x80000001009FC430);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009FC430, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1003878AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x57746E6572727563;
}

uint64_t sub_1003878F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v3 = v1;
  v5 = sub_1000BA294(&qword_100BDC668);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_100387D24();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for VisibilityComponent.CodingKeys, &type metadata for VisibilityComponent.CodingKeys, v12, v10, v11);
  LOBYTE(v23[0]) = 0;
  v13 = type metadata accessor for CurrentWeather(0);
  v14 = sub_100387E1C(&qword_100BDC670, (uint64_t)&protocol conformance descriptor for CurrentWeather);
  sub_1000C26D4(v3, (uint64_t)v23, v5, v13, v14);
  if (!v2)
  {
    v15 = v3 + *(int *)(type metadata accessor for VisibilityComponent(0) + 20);
    v16 = *(_OWORD *)v15;
    v17 = *(_OWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 40);
    v23[0] = v16;
    v23[1] = v17;
    v24 = v19;
    v25 = v18;
    v22 = 1;
    v20 = sub_100387E5C();
    sub_1000C26D4((uint64_t)v23, (uint64_t)&v22, v5, (uint64_t)&type metadata for VisibilityComponentPreprocessedDataModel, v20);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100387A48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  char v26;

  v22 = type metadata accessor for CurrentWeather(0);
  v19 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100098728();
  v20 = v5 - v4;
  v21 = sub_1000BA294(&qword_100BDC648);
  __chkstk_darwin(v21);
  sub_100098728();
  v6 = type metadata accessor for VisibilityComponent(0);
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v11 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v11);
  v12 = sub_100387D24();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VisibilityComponent.CodingKeys, &type metadata for VisibilityComponent.CodingKeys, v12, v11, v10);
  if (v2)
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  LOBYTE(v23[0]) = 0;
  sub_100387E1C(&qword_100BDC658, (uint64_t)&protocol conformance descriptor for CurrentWeather);
  sub_1000C3960(v22, (uint64_t)v23, v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v9, v20, v22);
  v26 = 1;
  sub_100387D60();
  sub_1000C3960((uint64_t)&type metadata for VisibilityComponentPreprocessedDataModel, (uint64_t)&v26, v21, (uint64_t)&type metadata for VisibilityComponentPreprocessedDataModel);
  sub_1000BAA28();
  v13 = v23[1];
  v14 = v24;
  v15 = v25;
  v16 = v9 + *(int *)(v6 + 20);
  *(_OWORD *)v16 = v23[0];
  *(_OWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 32) = v14;
  *(_QWORD *)(v16 + 40) = v15;
  sub_100387D9C(v9, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return sub_100387DE0(v9);
}

uint64_t sub_100387C7C()
{
  char *v0;

  return sub_1003878AC(*v0);
}

uint64_t sub_100387C84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10038779C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100387CA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100387D24();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100387CD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100387D24();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100387CF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100387A48(a1, a2);
}

uint64_t sub_100387D0C(_QWORD *a1)
{
  return sub_1003878F4(a1);
}

unint64_t sub_100387D24()
{
  unint64_t result;

  result = qword_100BDC650;
  if (!qword_100BDC650)
  {
    result = swift_getWitnessTable(&unk_10099914C, &type metadata for VisibilityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC650);
  }
  return result;
}

unint64_t sub_100387D60()
{
  unint64_t result;

  result = qword_100BDC660;
  if (!qword_100BDC660)
  {
    result = swift_getWitnessTable(&unk_1009A7B9C, &type metadata for VisibilityComponentPreprocessedDataModel);
    atomic_store(result, (unint64_t *)&qword_100BDC660);
  }
  return result;
}

uint64_t sub_100387D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisibilityComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100387DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VisibilityComponent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100387E1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CurrentWeather(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100387E5C()
{
  unint64_t result;

  result = qword_100BDC678;
  if (!qword_100BDC678)
  {
    result = swift_getWitnessTable(&unk_1009A7B74, &type metadata for VisibilityComponentPreprocessedDataModel);
    atomic_store(result, (unint64_t *)&qword_100BDC678);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VisibilityComponent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100387EE4 + 4 * byte_100998FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100387F18 + 4 * byte_100998FD0[v4]))();
}

uint64_t sub_100387F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100387F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100387F28);
  return result;
}

uint64_t sub_100387F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100387F3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100387F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100387F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityComponent.CodingKeys()
{
  return &type metadata for VisibilityComponent.CodingKeys;
}

unint64_t sub_100387F68()
{
  unint64_t result;

  result = qword_100BDC680;
  if (!qword_100BDC680)
  {
    result = swift_getWitnessTable(&unk_100999124, &type metadata for VisibilityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC680);
  }
  return result;
}

unint64_t sub_100387FA8()
{
  unint64_t result;

  result = qword_100BDC688;
  if (!qword_100BDC688)
  {
    result = swift_getWitnessTable(&unk_100999094, &type metadata for VisibilityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC688);
  }
  return result;
}

unint64_t sub_100387FE8()
{
  unint64_t result;

  result = qword_100BDC690;
  if (!qword_100BDC690)
  {
    result = swift_getWitnessTable(&unk_1009990BC, &type metadata for VisibilityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC690);
  }
  return result;
}

uint64_t sub_100388028(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease(0xEA00000000007974);
    v5 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696C617551726961, 0xEA00000000007974, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_1003880B8()
{
  return 0x696C617551726961;
}

uint64_t sub_1003880D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BDC758);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_100388378();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for AirQualityComponent.CodingKeys, &type metadata for AirQualityComponent.CodingKeys, v11, v9, v10);
  v12 = type metadata accessor for AirQuality(0);
  v13 = sub_1003887B4(qword_100BDC760, (uint64_t)&protocol conformance descriptor for AirQuality);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v2, v14, v4, v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1003881D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = type metadata accessor for AirQuality(0);
  v20 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_100098728();
  v22 = v5 - v4;
  v6 = sub_1000BA294(&qword_100BDC698);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for AirQualityComponent(0);
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_100388378();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for AirQualityComponent.CodingKeys, &type metadata for AirQualityComponent.CodingKeys, v17, v15, v16);
  if (!v2)
  {
    sub_1003887B4(&qword_100BDC6A8, (uint64_t)&protocol conformance descriptor for AirQuality);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, v18, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14, v22, v23);
    sub_1003883B4(v14, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
}

unint64_t sub_100388378()
{
  unint64_t result;

  result = qword_100BDC6A0;
  if (!qword_100BDC6A0)
  {
    result = swift_getWitnessTable(&unk_100999304, &type metadata for AirQualityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC6A0);
  }
  return result;
}

uint64_t sub_1003883B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQualityComponent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for AirQualityComponent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100388438 + 4 * byte_1009991A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100388458 + 4 * byte_1009991A5[v4]))();
}

_BYTE *sub_100388438(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100388458(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100388460(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100388468(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100388470(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100388478(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AirQualityComponent.CodingKeys()
{
  return &type metadata for AirQualityComponent.CodingKeys;
}

uint64_t sub_100388494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQuality(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1003884D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQuality(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100388514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQuality(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100388558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQuality(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10038859C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AirQuality(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1003885E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003885EC);
}

uint64_t sub_1003885EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BC0B8();
  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100388614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100388620);
}

uint64_t sub_100388620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1000BC0B8();
  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t sub_100388650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100388028(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100388678(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100388378();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003886A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100388378();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003886C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003881D4(a1, a2);
}

uint64_t sub_1003886DC(_QWORD *a1)
{
  return sub_1003880D4(a1);
}

unint64_t sub_1003886F8()
{
  unint64_t result;

  result = qword_100BDC740;
  if (!qword_100BDC740)
  {
    result = swift_getWitnessTable(&unk_1009992DC, &type metadata for AirQualityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC740);
  }
  return result;
}

unint64_t sub_100388738()
{
  unint64_t result;

  result = qword_100BDC748;
  if (!qword_100BDC748)
  {
    result = swift_getWitnessTable(&unk_10099924C, &type metadata for AirQualityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC748);
  }
  return result;
}

unint64_t sub_100388778()
{
  unint64_t result;

  result = qword_100BDC750;
  if (!qword_100BDC750)
  {
    result = swift_getWitnessTable(&unk_100999274, &type metadata for AirQualityComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDC750);
  }
  return result;
}

uint64_t sub_1003887B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AirQuality(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003887F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100388864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = type metadata accessor for Location.Identifier(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098728();
  v7 = v6 - v5;
  type metadata accessor for ActiveLocationModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100079F58();
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_10009E540();
  v10 = *(_QWORD *)(v1 + 56);
  sub_100094EE4();
  sub_10006BDA4();
  swift_release(v10);
  sub_1000787D4(v0, v2, &qword_100BCD680);
  v11 = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v3);
  if ((_DWORD)v11 == 1)
  {
    sub_100021AA4(v2, &qword_100BCD680);
    sub_1000BA294(&qword_100BDC830);
    sub_1000BD404();
    v12 = *(_QWORD *)(v39 + 16);
    v13 = *(_QWORD *)(v39 + 24);
    sub_1000860DC();
    swift_release(v39);
    if (v13)
    {
      if (qword_100BC2408 != -1)
        swift_once(&qword_100BC2408, sub_100159778);
      v15 = sub_100098720();
      sub_1000AECD4(v15, (uint64_t)qword_100CAF010);
      v16 = sub_1000DCE34();
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter(v17);
      if (sub_100098C78(v18))
      {
        v19 = sub_100098710(22);
        v20 = sub_100098710(32);
        sub_1000BAA3C(7.2225e-34);
        *(_WORD *)(v19 + 12) = 2081;
        sub_1000860DC();
        v21 = sub_1000DDA14();
        sub_1000C5D9C(v21);
        sub_1000DB944();
        v22 = "StackDestination: No active location, using last location: %{private,mask.hash}s";
LABEL_17:
        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v3, v22, (uint8_t *)v19, 0x16u);
        swift_arrayDestroy(v20, 1);
        sub_1000986F0(v20);
        sub_1000986F0(v19);

        return v12;
      }
    }
    else
    {
      v31 = static CurrentLocation.placeholderIdentifier.getter(v14);
      v12 = Location.Identifier.id.getter(v31);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
      if (qword_100BC2408 != -1)
        swift_once(&qword_100BC2408, sub_100159778);
      v32 = sub_100098720();
      sub_1000AECD4(v32, (uint64_t)qword_100CAF010);
      v33 = sub_1000DCE34();
      v17 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v17, v34);
      if (sub_100098C78(v35))
      {
        v19 = sub_100098710(22);
        v20 = sub_100098710(32);
        sub_1000BAA3C(7.2225e-34);
        *(_WORD *)(v19 + 12) = 2081;
        sub_1000860DC();
        v36 = sub_1000DDA14();
        sub_1000C5D9C(v36);
        sub_1000DB944();
        v22 = "StackDestination: No active location, using current location: %{private,mask.hash}s";
        goto LABEL_17;
      }
    }

    sub_1000BC0C8();
    return v12;
  }
  v12 = Location.Identifier.id.getter(v11);
  v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (qword_100BC2408 != -1)
    swift_once(&qword_100BC2408, sub_100159778);
  v25 = sub_100098720();
  sub_1000AECD4(v25, (uint64_t)qword_100CAF010);
  v26 = sub_1000DCE34();
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = sub_100098710(22);
    v38 = sub_100098710(32);
    *(_DWORD *)v29 = 141558275;
    v39 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    *(_WORD *)(v29 + 12) = 2081;
    sub_1000860DC();
    v39 = sub_1000DDA14();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    sub_1000DB944();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "StackDestination: Using active location: %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v38, 1);
    sub_1000986F0(v38);
    sub_1000986F0(v29);

  }
  else
  {

    sub_1000BC0C8();
  }
  sub_1000860DC();
  sub_1000BA294(&qword_100BDC830);
  sub_1000BD404();
  v30 = v39;
  *(_QWORD *)(v39 + 16) = v12;
  *(_QWORD *)(v30 + 24) = v24;
  swift_release(v30);
  swift_bridgeObjectRelease();
  return v12;
}

void sub_100388CF0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[97];
  _QWORD v24[14];
  _QWORD v25[7];

  v4 = v1;
  sub_1000BA294(&qword_100BDC7E8);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079FBC();
  v7 = sub_1000BA294(&qword_100BDC7F0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098694();
  sub_10038984C(v1, (uint64_t)v24);
  v9 = swift_allocObject(&unk_100B70438, 104, 7);
  memcpy((void *)(v9 + 16), v24, 0x58uLL);
  v10 = sub_1000BA294(&qword_100BDC7F8);
  v24[10] = sub_10014D2F4;
  v24[11] = 0;
  LOBYTE(v24[12]) = 0;
  v24[0] = v10;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  swift_beginAccess(&xmmword_100CAE588, &v22, 0, 0);
  sub_100037768((uint64_t)&xmmword_100CAE588, (uint64_t)v23, &qword_100BCED50);
  if (*(_QWORD *)&v23[24])
  {
    sub_10003C800((__int128 *)v23, (uint64_t)&v24[3]);
    v24[1] = sub_1003898C4;
    v24[2] = v9;
    v11 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    v24[8] = _swiftEmptyArrayStorage;
    v24[9] = v11;
    memcpy(v23, v24, sizeof(v23));
    v12 = *v4;
    sub_100043CA8((uint64_t)(v4 + 1), (uint64_t)v25);
    v13 = v4[7];
    v24[13] = v12;
    v25[5] = v13;
    sub_100037768((uint64_t)v23, (uint64_t)v24, &qword_100BDC800);
    sub_100094EE4();
    swift_retain();
    sub_100021AA4((uint64_t)v23, &qword_100BDC800);
    v14 = sub_100388864();
    sub_100388FEC(v14, v15, v4[8], v2);
    swift_bridgeObjectRelease();
    sub_100021AA4((uint64_t)v24, &qword_100BDC808);
    v16 = *v4;
    v17 = (_QWORD *)(v3 + *(int *)(v7 + 36));
    sub_100043CA8((uint64_t)(v4 + 1), (uint64_t)(v17 + 2));
    v18 = v4[7];
    sub_100094EE4();
    swift_retain();
    v19 = sub_1000BA294(&qword_100BC4770);
    sub_10003D310(&qword_100C09E40, &qword_100BC4770, (uint64_t)&unk_1009D9950);
    *v17 = ObservedObject.init(wrappedValue:)(v16, v19, v20);
    v17[1] = v21;
    v17[7] = v18;
    sub_1000787D4(v2, v3, &qword_100BDC7E8);
    sub_1000787D4(v3, a1, &qword_100BDC7F0);
  }
  else
  {
    __break(1u);
  }
}

double sub_100388FA8(_QWORD *a1, uint64_t a2)
{
  sub_1000DB418(a1, a1[3]);
  return sub_1001385F0(*(_QWORD *)(a2 + 64));
}

void sub_100388FEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;

  v28 = a3;
  v30 = a4;
  v29 = sub_1000BA294(&qword_100BDC810);
  __chkstk_darwin(v29);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ZoomNavigationTransition(0);
  v27 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BDC818);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - v17;
  if (qword_100BC22D8 != -1)
    swift_once(&qword_100BC22D8, sub_1005E696C);
  if (byte_100CAEE78 == 1)
  {
    v32 = a1;
    v33 = a2;
    v19 = sub_100345284();
    static NavigationTransition<>.zoom<A>(sourceID:in:)(&v32, v28, &unk_100B9A908, v19);
    v20 = sub_1000BA294(&qword_100BDC808);
    v21 = sub_100389A38();
    View.navigationTransition<A>(_:)(v11, v20, v9, v21, &protocol witness table for ZoomNavigationTransition);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v18, v12);
    swift_storeEnumTagMultiPayload(v8, v29, 0);
    v32 = v20;
    v33 = v9;
    v34 = v21;
    v35 = &protocol witness table for ZoomNavigationTransition;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationTransition<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v8, v12, v20, OpaqueTypeConformance2, v21);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  else
  {
    sub_100037768(v4, (uint64_t)&v32, &qword_100BDC808);
    sub_100037768((uint64_t)&v32, (uint64_t)v8, &qword_100BDC808);
    swift_storeEnumTagMultiPayload(v8, v29, 1);
    v23 = sub_1000BA294(&qword_100BDC808);
    v24 = sub_100389A38();
    v31[0] = v23;
    v31[1] = v9;
    v31[2] = v24;
    v31[3] = &protocol witness table for ZoomNavigationTransition;
    v25 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of View.navigationTransition<A>(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v8, v12, v23, v25, v24);
    sub_100021AA4((uint64_t)&v32, &qword_100BDC808);
  }
}

uint64_t sub_10038931C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_100389348()
{
  uint64_t v0;

  v0 = sub_10038931C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for ReferenceBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReferenceBox);
}

void sub_100389374(double a1)
{
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for RoundedCornerStyle(0);
  v25 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  sub_100098694();
  v24 = type metadata accessor for RoundedRectangle(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079FBC();
  v7 = type metadata accessor for CodableColor(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100079F58();
  v9 = type metadata accessor for SkyBackgroundGradient(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_10009E540();
  v22 = sub_1000BA294(&qword_100BD92C8);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100098728();
  v13 = v12 - v11;
  v15 = WeatherConditionBackgroundModel.gradient.getter(v14);
  SkyBackgroundGradient.middleColor.getter(v15);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v4, v9);
  v17 = CodableColor.color.getter(v16);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
  v18 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration(0);
  MatchedTransitionSourceConfiguration.background(_:)(v17, v18, &protocol witness table for EmptyMatchedTransitionSourceConfiguration);
  v19 = swift_release(v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v25 + 104))(v3, enum case for RoundedCornerStyle.continuous(_:), v26, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)v2 + *(int *)(v24 + 20), v3, v26);
  *v2 = a1;
  v2[1] = a1;
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v3, v26);
  v21 = sub_1000C544C(v20, (uint64_t)&opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.background(_:)>>);
  MatchedTransitionSourceConfiguration.clipShape(_:)(v2, v22, v21);
  sub_1003729DC((uint64_t)v2);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v22);
  sub_10009990C();
}

double destroy for MainViewDestinationLocationViewer(uint64_t a1)
{
  double result;

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 8));
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for MainViewDestinationLocationViewer(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t, __n128))(v6 - 8);
  v9 = swift_retain(v4);
  v8(a1 + 8, v5, v7, v9);
  v10 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v10;
  v11 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v11;
  v12 = a2[10];
  *(_QWORD *)(a1 + 80) = v12;
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for MainViewDestinationLocationViewer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  sub_100094D04(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  v5 = a1[7];
  a1[7] = a2[7];
  swift_retain();
  swift_release(v5);
  a1[8] = a2[8];
  v6 = a1[9];
  a1[9] = a2[9];
  swift_retain();
  swift_release(v6);
  v7 = a1[10];
  a1[10] = a2[10];
  swift_retain();
  swift_release(v7);
  return a1;
}

uint64_t *assignWithTake for MainViewDestinationLocationViewer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  v5 = a1[7];
  a1[7] = a2[7];
  swift_release(v5);
  v6 = a2[9];
  v7 = a1[9];
  a1[8] = a2[8];
  a1[9] = v6;
  swift_release(v7);
  v8 = a1[10];
  a1[10] = a2[10];
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainViewDestinationLocationViewer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MainViewDestinationLocationViewer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainViewDestinationLocationViewer()
{
  return &type metadata for MainViewDestinationLocationViewer;
}

uint64_t sub_10038983C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2964, 1);
}

uint64_t sub_10038984C(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for MainViewDestinationLocationViewer(a2, a1);
  return a2;
}

uint64_t sub_100389880()
{
  _QWORD *v0;

  swift_release(v0[2]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 3);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

double sub_1003898C4(_QWORD *a1)
{
  uint64_t v1;

  return sub_100388FA8(a1, v1 + 16);
}

void sub_1003898CC(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for RoundedCornerStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for RoundedRectangle(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_10009E540();
  v13 = sub_1000BA294(&qword_100BDC850);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100098694();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, enum case for RoundedCornerStyle.continuous(_:), v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v4 + *(int *)(v11 + 20), v10, v6);
  *v4 = a1;
  v4[1] = a1;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v15 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration(0);
  MatchedTransitionSourceConfiguration.clipShape(_:)(v4, v15, &protocol witness table for EmptyMatchedTransitionSourceConfiguration);
  v16 = sub_1003729DC((uint64_t)v4);
  v17 = sub_1000C544C(v16, (uint64_t)&opaque type descriptor for <<opaque return type of MatchedTransitionSourceConfiguration.clipShape(_:)>>);
  MatchedTransitionSourceConfiguration.background(_:)(a3, v13, v17);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
  sub_10009990C();
}

unint64_t sub_100389A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDC820;
  if (!qword_100BDC820)
  {
    v1 = sub_100075EB0(&qword_100BDC808);
    sub_10003D310((unint64_t *)&unk_100C0A160, &qword_100BDC800, (uint64_t)&unk_1009A4738);
    sub_100389ABC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDC820);
  }
  return result;
}

unint64_t sub_100389ABC()
{
  unint64_t result;

  result = qword_100BDC828;
  if (!qword_100BDC828)
  {
    result = swift_getWitnessTable(&unk_100991C94, &type metadata for MainViewFullscreenMapZoomTransitionModifier);
    atomic_store(result, (unint64_t *)&qword_100BDC828);
  }
  return result;
}

unint64_t sub_100389AFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDC838;
  if (!qword_100BDC838)
  {
    v1 = sub_100075EB0(&qword_100BDC7F0);
    sub_100389B68();
    sub_100389C18();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDC838);
  }
  return result;
}

unint64_t sub_100389B68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_100BDC840;
  if (!qword_100BDC840)
  {
    v1 = sub_100075EB0(&qword_100BDC7E8);
    v2[0] = sub_100075EB0(&qword_100BDC808);
    v2[1] = type metadata accessor for ZoomNavigationTransition(255);
    v2[2] = sub_100389A38();
    v2[3] = &protocol witness table for ZoomNavigationTransition;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.navigationTransition<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDC840);
  }
  return result;
}

unint64_t sub_100389C18()
{
  unint64_t result;

  result = qword_100BDC848;
  if (!qword_100BDC848)
  {
    result = swift_getWitnessTable(&unk_1009D1F78, &type metadata for L2sOnLocationViewerSheetViewModifier);
    atomic_store(result, (unint64_t *)&qword_100BDC848);
  }
  return result;
}

_QWORD *sub_100389C54(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(_QWORD *, _QWORD *);
  uint64_t v85;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for WeatherMapOverlayKind(0);
  v84 = *(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v7 - 8) + 16);
  v85 = v7;
  v84(a1, a2);
  v8 = a3[5];
  v9 = a3[6];
  v10 = *(_QWORD *)((char *)a2 + v8);
  *(_QWORD *)((char *)a1 + v8) = v10;
  v11 = (_QWORD *)((char *)a1 + v9);
  v12 = (_QWORD *)((char *)a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = *(_QWORD *)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v17 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  v22 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = (int *)type metadata accessor for WeatherData(0);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v20);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, (uint64_t)v26))
  {
    v29 = v25[1];
    *v24 = *v25;
    v24[1] = v29;
    v30 = v26[5];
    v31 = (char *)v24 + v30;
    v32 = (char *)v25 + v30;
    v33 = type metadata accessor for Locale(0);
    swift_bridgeObjectRetain(v29);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      v34 = sub_1000BA294(&qword_100BC3340);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v35 = v26[6];
    v36 = (char *)v24 + v35;
    v37 = (char *)v25 + v35;
    v38 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = v26[7];
    v40 = (char *)v24 + v39;
    v41 = (char *)v25 + v39;
    v42 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      v43 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v44 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v40, v41, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    v45 = v26[8];
    v46 = (_QWORD *)((char *)v24 + v45);
    v47 = (_QWORD *)((char *)v25 + v45);
    v48 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v47);
    if (EnumCaseMultiPayload == 1)
    {
      v54 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v46, v47, v54);
      v51 = v46;
      v52 = v48;
      v53 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        goto LABEL_17;
      }
      v50 = v47[1];
      *v46 = *v47;
      v46[1] = v50;
      swift_bridgeObjectRetain(v50);
      v51 = v46;
      v52 = v48;
      v53 = 0;
    }
    swift_storeEnumTagMultiPayload(v51, v52, v53);
LABEL_17:
    v55 = v26[9];
    v56 = (char *)v24 + v55;
    v57 = (char *)v25 + v55;
    v58 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
    {
      v59 = sub_1000BA294(&qword_100BC3350);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      v60 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v60))
      {
        v61 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v56, v57, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v60);
      }
      v62 = *(int *)(v58 + 20);
      v63 = &v56[v62];
      v64 = &v57[v62];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v60))
      {
        v65 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v63, v64, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v60);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, (uint64_t)v26);
    goto LABEL_27;
  }
  v27 = sub_1000BA294(&qword_100BC3460);
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_27:
  v66 = a3[17];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 3, v69))
  {
    v70 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    *v67 = *v68;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v84)(&v67[*(int *)(v69 + 48)], &v68[*(int *)(v69 + 48)], v85);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 3, v69);
  }
  v71 = a3[18];
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  v74 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
  {
    v75 = sub_1000BA294(&qword_100BC3620);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    *(_BYTE *)v72 = *(_BYTE *)v73;
    v76 = v73 + 1;
    v77 = v73[2];
    if (v77 >= 2)
    {
      v72[1] = *v76;
      v72[2] = v77;
      swift_bridgeObjectRetain(v77);
    }
    else
    {
      *(_OWORD *)(v72 + 1) = *(_OWORD *)v76;
    }
    v78 = *(int *)(v74 + 24);
    v79 = (char *)v72 + v78;
    v80 = (char *)v73 + v78;
    v81 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
    {
      v82 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
  }
  return a1;
}

uint64_t sub_10038A29C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[16];
  v7 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, (uint64_t)v7))
  {
    swift_bridgeObjectRelease();
    v8 = v6 + v7[5];
    v9 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v6 + v7[6];
    v11 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v6 + v7[7];
    v13 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
    {
      v14 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    }
    v15 = v6 + v7[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v18 = v6 + v7[9];
    v19 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
    {
      v20 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
      v21 = v18 + *(int *)(v19 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
    }
  }
  v22 = a1 + a2[17];
  v23 = sub_1000BA294(&qword_100BC5FD0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v22, 3, v23))
    v5(v22 + *(int *)(v23 + 48), v4);
  v24 = a1 + a2[18];
  v25 = type metadata accessor for ContentStatusBanner(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v25);
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(v24 + 16) >= 2uLL)
      swift_bridgeObjectRelease();
    v27 = v24 + *(int *)(v25 + 24);
    v28 = type metadata accessor for Date(0);
    result = _s7Weather24LocationCompositionStateOwet_0(v27, 1, v28);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  }
  return result;
}

uint64_t sub_10038A5A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v82 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v83 = v6;
  v82(a1, a2);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a3[7];
  v14 = a3[8];
  v15 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = (int *)type metadata accessor for WeatherData(0);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25))
  {
    v26 = sub_1000BA294(&qword_100BC3460);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_25;
  }
  v27 = v24[1];
  *v23 = *v24;
  v23[1] = v27;
  v28 = v25[5];
  v29 = (char *)v23 + v28;
  v30 = (char *)v24 + v28;
  v31 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v27);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = sub_1000BA294(&qword_100BC3340);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  v33 = v25[6];
  v34 = (char *)v23 + v33;
  v35 = (char *)v24 + v33;
  v36 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  v37 = v25[7];
  v38 = (char *)v23 + v37;
  v39 = (char *)v24 + v37;
  v40 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v38, v39, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v43 = v25[8];
  v44 = (_QWORD *)((char *)v23 + v43);
  v45 = (_QWORD *)((char *)v24 + v43);
  v46 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v45);
  if (EnumCaseMultiPayload == 1)
  {
    v52 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v44, v45, v52);
    v49 = v44;
    v50 = v46;
    v51 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      goto LABEL_15;
    }
    v48 = v45[1];
    *v44 = *v45;
    v44[1] = v48;
    swift_bridgeObjectRetain(v48);
    v49 = v44;
    v50 = v46;
    v51 = 0;
  }
  swift_storeEnumTagMultiPayload(v49, v50, v51);
LABEL_15:
  v53 = v25[9];
  v54 = (char *)v23 + v53;
  v55 = (char *)v24 + v53;
  v56 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    v57 = sub_1000BA294(&qword_100BC3350);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v58 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v58))
    {
      v59 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v54, v55, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v58);
    }
    v60 = *(int *)(v56 + 20);
    v61 = &v54[v60];
    v62 = &v55[v60];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v58))
    {
      v63 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v61, v62, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v58);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
LABEL_25:
  v64 = a3[17];
  v65 = (_BYTE *)(a1 + v64);
  v66 = (_BYTE *)(a2 + v64);
  v67 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 3, v67))
  {
    v68 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    *v65 = *v66;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v82)(&v65[*(int *)(v67 + 48)], &v66[*(int *)(v67 + 48)], v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 3, v67);
  }
  v69 = a3[18];
  v70 = (_QWORD *)(a1 + v69);
  v71 = (_QWORD *)(a2 + v69);
  v72 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
  {
    v73 = sub_1000BA294(&qword_100BC3620);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    *(_BYTE *)v70 = *(_BYTE *)v71;
    v74 = v71 + 1;
    v75 = v71[2];
    if (v75 >= 2)
    {
      v70[1] = *v74;
      v70[2] = v75;
      swift_bridgeObjectRetain(v75);
    }
    else
    {
      *(_OWORD *)(v70 + 1) = *(_OWORD *)v74;
    }
    v76 = *(int *)(v72 + 24);
    v77 = (char *)v70 + v76;
    v78 = (char *)v71 + v76;
    v79 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
    {
      v80 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
  }
  return a1;
}

uint64_t sub_10038ABBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  int EnumCaseMultiPayload;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  size_t v108;
  void *v109;
  const void *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  const void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  void (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v21 = a3[16];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = (int *)type metadata accessor for WeatherData(0);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if (!v25)
  {
    if (v26)
    {
      sub_1000215BC((uint64_t)v22, type metadata accessor for WeatherData);
      goto LABEL_7;
    }
    v157 = v8;
    v159 = v7;
    v155 = v6;
    *v22 = *v23;
    v35 = v23[1];
    v22[1] = v35;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRelease();
    v36 = v24[5];
    v37 = (char *)v22 + v36;
    v38 = (char *)v23 + v36;
    v39 = type metadata accessor for Locale(0);
    v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
    v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        goto LABEL_29;
      }
    }
    else
    {
      v69 = *(_QWORD *)(v39 - 8);
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v37, v38, v39);
LABEL_29:
        v71 = v24[6];
        v72 = (char *)v22 + v71;
        v73 = (char *)v23 + v71;
        v74 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
        v75 = v24[7];
        v76 = (char *)v22 + v75;
        v77 = (char *)v23 + v75;
        v78 = sub_1000BA294(&qword_100BC3348);
        LODWORD(v72) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v78);
        v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78);
        if ((_DWORD)v72)
        {
          if (!v79)
          {
            v80 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v76, v77, v80);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v79)
          {
            v137 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 24))(v76, v77, v137);
LABEL_35:
            v6 = v155;
            v8 = v157;
            v7 = v159;
            if (a1 == a2)
              goto LABEL_84;
            v82 = v24[8];
            v83 = (_QWORD *)((char *)v22 + v82);
            v84 = (_QWORD *)((char *)v23 + v82);
            sub_1000215BC((uint64_t)v22 + v82, type metadata accessor for WeatherData.WeatherStatisticsState);
            v85 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v84);
            if (EnumCaseMultiPayload == 1)
            {
              v130 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v83, v84, v130);
              v88 = v83;
              v89 = v85;
              v90 = 1;
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
                goto LABEL_83;
              }
              *v83 = *v84;
              v87 = v84[1];
              v83[1] = v87;
              swift_bridgeObjectRetain(v87);
              v88 = v83;
              v89 = v85;
              v90 = 0;
            }
            swift_storeEnumTagMultiPayload(v88, v89, v90);
LABEL_83:
            v6 = v155;
            v8 = v157;
            v7 = v159;
LABEL_84:
            v131 = v24[9];
            v22 = (_QWORD *)((char *)v22 + v131);
            v23 = (_QWORD *)((char *)v23 + v131);
            v132 = type metadata accessor for WeatherDataOverrides(0);
            v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v132);
            v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v132);
            if (v133)
            {
              if (!v134)
              {
                v135 = type metadata accessor for Date(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v135))
                {
                  v136 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
                }
                else
                {
                  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v22, v23, v135);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v135);
                }
                v141 = *(int *)(v132 + 20);
                v142 = (char *)v22 + v141;
                v143 = (char *)v23 + v141;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23 + v141, 1, v135))
                {
                  v144 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v142, v143, v135);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v135);
                }
                v8 = v157;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v132);
                v6 = v155;
                goto LABEL_45;
              }
              goto LABEL_90;
            }
            if (v134)
            {
              sub_1000215BC((uint64_t)v22, type metadata accessor for WeatherDataOverrides);
LABEL_90:
              v33 = &qword_100BC3350;
              goto LABEL_8;
            }
            v138 = type metadata accessor for Date(0);
            v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v138);
            v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v138);
            if (v139)
            {
              if (!v140)
              {
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v22, v23, v138);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v138);
                goto LABEL_105;
              }
            }
            else
            {
              v145 = *(_QWORD *)(v138 - 8);
              if (!v140)
              {
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v145 + 24))(v22, v23, v138);
LABEL_105:
                v147 = *(int *)(v132 + 20);
                v148 = (char *)v22 + v147;
                v149 = (char *)v23 + v147;
                v150 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v138);
                v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v138);
                if (v150)
                {
                  if (!v151)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v148, v149, v138);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v138);
LABEL_111:
                    v8 = v157;
                    goto LABEL_45;
                  }
                }
                else
                {
                  v152 = *(_QWORD *)(v138 - 8);
                  if (!v151)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v152 + 24))(v148, v149, v138);
                    goto LABEL_111;
                  }
                  (*(void (**)(char *, uint64_t))(v152 + 8))(v148, v138);
                }
                v153 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
                goto LABEL_111;
              }
              (*(void (**)(_QWORD *, uint64_t))(v145 + 8))(v22, v138);
            }
            v146 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
            goto LABEL_105;
          }
          sub_100021A14((uint64_t)v76, &qword_100BC3348);
        }
        v81 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v39);
    }
    v70 = sub_1000BA294(&qword_100BC3340);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_29;
  }
  if (v26)
  {
LABEL_7:
    v33 = &qword_100BC3460;
LABEL_8:
    v34 = sub_1000BA294(v33);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_45;
  }
  v156 = v8;
  v158 = v7;
  v154 = v6;
  *v22 = *v23;
  v27 = v23[1];
  v22[1] = v27;
  v28 = v24[5];
  v29 = (char *)v22 + v28;
  v30 = (char *)v23 + v28;
  v31 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v27);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v32 = sub_1000BA294(&qword_100BC3340);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  v42 = v24[6];
  v43 = (char *)v22 + v42;
  v44 = (char *)v23 + v42;
  v45 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  v46 = v24[7];
  v47 = (char *)v22 + v46;
  v48 = (char *)v23 + v46;
  v49 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    v50 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v47, v48, v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  v52 = v24[8];
  v53 = (_QWORD *)((char *)v22 + v52);
  v54 = (_QWORD *)((char *)v23 + v52);
  v55 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v56 = swift_getEnumCaseMultiPayload(v54);
  if (v56 == 1)
  {
    v61 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v53, v54, v61);
    v58 = v53;
    v59 = v55;
    v60 = 1;
  }
  else
  {
    if (v56)
    {
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      goto LABEL_22;
    }
    *v53 = *v54;
    v57 = v54[1];
    v53[1] = v57;
    swift_bridgeObjectRetain(v57);
    v58 = v53;
    v59 = v55;
    v60 = 0;
  }
  swift_storeEnumTagMultiPayload(v58, v59, v60);
LABEL_22:
  v7 = v158;
  v62 = v24[9];
  v63 = (char *)v22 + v62;
  v64 = (char *)v23 + v62;
  v65 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
  {
    v66 = sub_1000BA294(&qword_100BC3350);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v67))
    {
      v68 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v63, v64, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v67);
    }
    v91 = *(int *)(v65 + 20);
    v92 = &v63[v91];
    v93 = &v64[v91];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v67))
    {
      v94 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v92, v93, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v67);
    }
    v7 = v158;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
  }
  v6 = v154;
  v8 = v156;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
LABEL_45:
  v95 = a3[17];
  v96 = (_BYTE *)(a1 + v95);
  v97 = (_BYTE *)(a2 + v95);
  v98 = sub_1000BA294(&qword_100BC5FD0);
  v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 3, v98);
  v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 3, v98);
  if (v99)
  {
    if (!v100)
    {
      *v96 = *v97;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(&v96[*(int *)(v98 + 48)], &v97[*(int *)(v98 + 48)], v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 3, v98);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v100)
  {
    sub_100021A14((uint64_t)v96, &qword_100BC5FD0);
LABEL_50:
    v101 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_51;
  }
  *v96 = *v97;
  v8((uint64_t)&v96[*(int *)(v98 + 48)], (uint64_t)&v97[*(int *)(v98 + 48)], v6);
LABEL_51:
  v102 = a3[18];
  v103 = a1 + v102;
  v104 = a2 + v102;
  v105 = type metadata accessor for ContentStatusBanner(0);
  v106 = _s7Weather24LocationCompositionStateOwet_0(v103, 1, v105);
  v107 = _s7Weather24LocationCompositionStateOwet_0(v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      *(_BYTE *)v103 = *(_BYTE *)v104;
      if (*(_QWORD *)(v104 + 16) >= 2uLL)
      {
        *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
        v113 = *(_QWORD *)(v104 + 16);
        *(_QWORD *)(v103 + 16) = v113;
        swift_bridgeObjectRetain(v113);
      }
      else
      {
        *(_OWORD *)(v103 + 8) = *(_OWORD *)(v104 + 8);
      }
      v114 = *(int *)(v105 + 24);
      v115 = (void *)(v103 + v114);
      v116 = (const void *)(v104 + v114);
      v117 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117))
      {
        v118 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v115, v116, v117);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
      }
      v119 = v103;
      v120 = v105;
      goto LABEL_68;
    }
    goto LABEL_57;
  }
  if (v107)
  {
    sub_1000215BC(v103, type metadata accessor for ContentStatusBanner);
LABEL_57:
    v108 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v109 = (void *)v103;
    v110 = (const void *)v104;
    goto LABEL_58;
  }
  *(_BYTE *)v103 = *(_BYTE *)v104;
  v111 = *(_QWORD *)(v104 + 16);
  if (*(_QWORD *)(v103 + 16) >= 2uLL)
  {
    if (v111 >= 2)
    {
      *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
      v122 = *(_QWORD *)(v104 + 16);
      *(_QWORD *)(v103 + 16) = v122;
      swift_bridgeObjectRetain(v122);
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    sub_1001A27B4(v103 + 8);
    goto LABEL_72;
  }
  if (v111 < 2)
  {
LABEL_72:
    *(_OWORD *)(v103 + 8) = *(_OWORD *)(v104 + 8);
    goto LABEL_74;
  }
  *(_QWORD *)(v103 + 8) = *(_QWORD *)(v104 + 8);
  v112 = *(_QWORD *)(v104 + 16);
  *(_QWORD *)(v103 + 16) = v112;
  swift_bridgeObjectRetain(v112);
LABEL_74:
  v123 = *(int *)(v105 + 24);
  v124 = v103 + v123;
  v125 = v104 + v123;
  v126 = type metadata accessor for Date(0);
  v127 = _s7Weather24LocationCompositionStateOwet_0(v124, 1, v126);
  v128 = _s7Weather24LocationCompositionStateOwet_0(v125, 1, v126);
  if (v127)
  {
    if (!v128)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
      v119 = v124;
      v120 = v126;
LABEL_68:
      _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v120);
      return a1;
    }
  }
  else
  {
    v129 = *(_QWORD *)(v126 - 8);
    if (!v128)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 24))(v124, v125, v126);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v124, v126);
  }
  v108 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v109 = (void *)v124;
  v110 = (const void *)v125;
LABEL_58:
  memcpy(v109, v110, v108);
  return a1;
}

uint64_t sub_10038B9B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  char *__dst;
  void (*v65)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
  {
    v17 = sub_1000BA294(&qword_100BC3460);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v65 = v7;
    *v14 = *v15;
    v18 = v16[5];
    v19 = (char *)v14 + v18;
    v20 = (char *)v15 + v18;
    v21 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      v22 = sub_1000BA294(&qword_100BC3340);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    v23 = v16[6];
    v24 = (char *)v14 + v23;
    v25 = (char *)v15 + v23;
    v26 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    v27 = v16[7];
    v28 = (char *)v14 + v27;
    v29 = (char *)v15 + v27;
    v30 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      v31 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v28, v29, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    v33 = v16[8];
    v34 = (char *)v14 + v33;
    v35 = (char *)v15 + v33;
    v36 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v35) == 1)
    {
      v37 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload(v34, v36, 1);
    }
    else
    {
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    v38 = v16[9];
    v39 = (char *)v14 + v38;
    v40 = (char *)v15 + v38;
    v41 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294(&qword_100BC3350);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v43))
      {
        v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v39, v40, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v43);
      }
      v45 = *(int *)(v41 + 20);
      __dst = &v39[v45];
      v46 = &v40[v45];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v43))
      {
        v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(__dst, v46, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v43);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    v7 = v65;
  }
  v48 = a3[17];
  v49 = (_BYTE *)(a1 + v48);
  v50 = (_BYTE *)(a2 + v48);
  v51 = sub_1000BA294(&qword_100BC5FD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 3, v51))
  {
    v52 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    *v49 = *v50;
    v7((uint64_t)&v49[*(int *)(v51 + 48)], (uint64_t)&v50[*(int *)(v51 + 48)], v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 3, v51);
  }
  v53 = a3[18];
  v54 = (_BYTE *)(a1 + v53);
  v55 = (_BYTE *)(a2 + v53);
  v56 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    v57 = sub_1000BA294(&qword_100BC3620);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    *v54 = *v55;
    *(_OWORD *)(v54 + 8) = *(_OWORD *)(v55 + 8);
    v58 = *(int *)(v56 + 24);
    v59 = &v54[v58];
    v60 = &v55[v58];
    v61 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
    {
      v62 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  return a1;
}

uint64_t sub_10038BF64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  void *v106;
  const void *v107;
  uint64_t v108;
  uint64_t v109;
  size_t v110;
  void *v111;
  const void *v112;
  _QWORD *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  void (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;

  v6 = type metadata accessor for WeatherMapOverlayKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = (int *)type metadata accessor for WeatherData(0);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v25);
  v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25);
  if (v26)
  {
    if (!v27)
    {
      v144 = v8;
      v146 = v7;
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v28 = v25[5];
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
      {
        v32 = sub_1000BA294(&qword_100BC3340);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      }
      v42 = v25[6];
      v43 = (char *)v23 + v42;
      v44 = (char *)v24 + v42;
      v45 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      v46 = v25[7];
      v47 = (char *)v23 + v46;
      v48 = (char *)v24 + v46;
      v49 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        v50 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v51 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v47, v48, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      v52 = v25[8];
      v53 = (char *)v23 + v52;
      v54 = (char *)v24 + v52;
      v55 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v54) == 1)
      {
        v56 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
        swift_storeEnumTagMultiPayload(v53, v55, 1);
      }
      else
      {
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      v57 = v25[9];
      v58 = (char *)v23 + v57;
      v59 = (char *)v24 + v57;
      v60 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        v61 = sub_1000BA294(&qword_100BC3350);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v143 = v6;
        v62 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v62))
        {
          v63 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v58, v59, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v62);
        }
        v88 = *(int *)(v60 + 20);
        v89 = &v58[v88];
        v90 = &v59[v88];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v62))
        {
          v91 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v89, v90, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v62);
        }
        v6 = v143;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      v8 = v144;
      v7 = v146;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v27)
  {
    sub_1000215BC((uint64_t)v23, type metadata accessor for WeatherData);
LABEL_7:
    v33 = &qword_100BC3460;
LABEL_8:
    v34 = sub_1000BA294(v33);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_50;
  }
  v145 = v8;
  v147 = v7;
  v142 = v6;
  v35 = v24[1];
  *v23 = *v24;
  v23[1] = v35;
  swift_bridgeObjectRelease();
  v36 = v25[5];
  v37 = (char *)v23 + v36;
  v38 = (char *)v24 + v36;
  v39 = type metadata accessor for Locale(0);
  v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  v64 = *(_QWORD *)(v39 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
LABEL_25:
    v65 = sub_1000BA294(&qword_100BC3340);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v37, v38, v39);
LABEL_26:
  v66 = v25[6];
  v67 = (char *)v23 + v66;
  v68 = (char *)v24 + v66;
  v69 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
  v70 = v25[7];
  v71 = (char *)v23 + v70;
  v72 = (char *)v24 + v70;
  v73 = sub_1000BA294(&qword_100BC3348);
  LODWORD(v67) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
  v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
  if ((_DWORD)v67)
  {
    if (!v74)
    {
      v75 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v74)
  {
    sub_100021A14((uint64_t)v71, &qword_100BC3348);
LABEL_31:
    v76 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_32;
  }
  v125 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 40))(v71, v72, v125);
LABEL_32:
  v6 = v142;
  v8 = v145;
  v7 = v147;
  if (a1 != a2)
  {
    v77 = v25[8];
    v78 = (char *)v23 + v77;
    v79 = (char *)v24 + v77;
    sub_1000215BC((uint64_t)v23 + v77, type metadata accessor for WeatherData.WeatherStatisticsState);
    v80 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v79) == 1)
    {
      v81 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v78, v79, v81);
      swift_storeEnumTagMultiPayload(v78, v80, 1);
    }
    else
    {
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    v8 = v145;
    v7 = v147;
  }
  v82 = v25[9];
  v23 = (_QWORD *)((char *)v23 + v82);
  v24 = (_QWORD *)((char *)v24 + v82);
  v83 = type metadata accessor for WeatherDataOverrides(0);
  v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v83);
  v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v83);
  if (!v84)
  {
    if (v85)
    {
      sub_1000215BC((uint64_t)v23, type metadata accessor for WeatherDataOverrides);
      goto LABEL_43;
    }
    v126 = type metadata accessor for Date(0);
    v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v126);
    v128 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v126);
    if (v127)
    {
      if (!v128)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v23, v24, v126);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v126);
        goto LABEL_94;
      }
    }
    else
    {
      v133 = *(_QWORD *)(v126 - 8);
      if (!v128)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v133 + 40))(v23, v24, v126);
LABEL_94:
        v135 = *(int *)(v83 + 20);
        v136 = (char *)v23 + v135;
        v137 = (char *)v24 + v135;
        v138 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v126);
        v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v126);
        if (v138)
        {
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v136, v137, v126);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v126);
LABEL_100:
            v7 = v147;
            goto LABEL_50;
          }
        }
        else
        {
          v140 = *(_QWORD *)(v126 - 8);
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(v140 + 40))(v136, v137, v126);
            goto LABEL_100;
          }
          (*(void (**)(char *, uint64_t))(v140 + 8))(v136, v126);
        }
        v141 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        goto LABEL_100;
      }
      (*(void (**)(_QWORD *, uint64_t))(v133 + 8))(v23, v126);
    }
    v134 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_94;
  }
  if (v85)
  {
LABEL_43:
    v33 = &qword_100BC3350;
    goto LABEL_8;
  }
  v86 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v86))
  {
    v87 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v23, v24, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v86);
  }
  v129 = *(int *)(v83 + 20);
  v130 = (char *)v23 + v129;
  v131 = (char *)v24 + v129;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24 + v129, 1, v86))
  {
    v132 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v130, v131, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v86);
  }
  v7 = v147;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v83);
  v8 = v145;
LABEL_50:
  v92 = a3[17];
  v93 = (_BYTE *)(a1 + v92);
  v94 = (_BYTE *)(a2 + v92);
  v95 = sub_1000BA294(&qword_100BC5FD0);
  v96 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 3, v95);
  v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 3, v95);
  if (v96)
  {
    if (!v97)
    {
      *v93 = *v94;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(&v93[*(int *)(v95 + 48)], &v94[*(int *)(v95 + 48)], v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 3, v95);
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if (v97)
  {
    sub_100021A14((uint64_t)v93, &qword_100BC5FD0);
LABEL_55:
    v98 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    goto LABEL_56;
  }
  *v93 = *v94;
  v8((uint64_t)&v93[*(int *)(v95 + 48)], (uint64_t)&v94[*(int *)(v95 + 48)], v6);
LABEL_56:
  v99 = a3[18];
  v100 = a1 + v99;
  v101 = a2 + v99;
  v102 = type metadata accessor for ContentStatusBanner(0);
  v103 = _s7Weather24LocationCompositionStateOwet_0(v100, 1, v102);
  v104 = _s7Weather24LocationCompositionStateOwet_0(v101, 1, v102);
  if (v103)
  {
    if (!v104)
    {
      *(_BYTE *)v100 = *(_BYTE *)v101;
      *(_OWORD *)(v100 + 8) = *(_OWORD *)(v101 + 8);
      v105 = *(int *)(v102 + 24);
      v106 = (void *)(v100 + v105);
      v107 = (const void *)(v101 + v105);
      v108 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
      {
        v109 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
      }
      v115 = v100;
      v116 = v102;
      goto LABEL_71;
    }
    goto LABEL_62;
  }
  if (v104)
  {
    sub_1000215BC(v100, type metadata accessor for ContentStatusBanner);
LABEL_62:
    v110 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v111 = (void *)v100;
    v112 = (const void *)v101;
    goto LABEL_63;
  }
  *(_BYTE *)v100 = *(_BYTE *)v101;
  v113 = (_QWORD *)(v101 + 8);
  if (*(_QWORD *)(v100 + 16) >= 2uLL)
  {
    v114 = *(_QWORD *)(v101 + 16);
    if (v114 >= 2)
    {
      *(_QWORD *)(v100 + 8) = *v113;
      *(_QWORD *)(v100 + 16) = v114;
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    sub_1001A27B4(v100 + 8);
  }
  *(_OWORD *)(v100 + 8) = *(_OWORD *)v113;
LABEL_74:
  v118 = *(int *)(v102 + 24);
  v119 = v100 + v118;
  v120 = v101 + v118;
  v121 = type metadata accessor for Date(0);
  v122 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v121);
  v123 = _s7Weather24LocationCompositionStateOwet_0(v120, 1, v121);
  if (v122)
  {
    if (!v123)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
      v115 = v119;
      v116 = v121;
LABEL_71:
      _s7Weather24LocationCompositionStateOwst_0(v115, 0, 1, v116);
      return a1;
    }
  }
  else
  {
    v124 = *(_QWORD *)(v121 - 8);
    if (!v123)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 40))(v119, v120, v121);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v119, v121);
  }
  v110 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v111 = (void *)v119;
  v112 = (const void *)v120;
LABEL_63:
  memcpy(v111, v112, v110);
  return a1;
}

uint64_t sub_10038CC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038CC58);
}

uint64_t sub_10038CC58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000C2698();
  sub_100088FF0();
  if (v13)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    sub_1000BA294(&qword_100BC3460);
    sub_100088FF0();
    if (v13)
    {
      v7 = v11;
      v12 = a3[16];
    }
    else
    {
      type metadata accessor for WeatherMapTrackingState(0);
      sub_100088FF0();
      if (v13)
      {
        v7 = v14;
        v12 = a3[17];
      }
      else
      {
        v7 = sub_1000BA294(&qword_100BC3620);
        v12 = a3[18];
      }
    }
    v8 = v4 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + a3[5]);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10038CD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038CD2C);
}

void sub_10038CD2C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000C2698();
  sub_10009D2E8();
  if (v13)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5]) = (v4 - 1);
      return;
    }
    sub_1000BA294(&qword_100BC3460);
    sub_10009D2E8();
    if (v13)
    {
      v9 = v11;
      v12 = a4[16];
    }
    else
    {
      type metadata accessor for WeatherMapTrackingState(0);
      sub_10009D2E8();
      if (v13)
      {
        v9 = v14;
        v12 = a4[17];
      }
      else
      {
        v9 = sub_1000BA294(&qword_100BC3620);
        v12 = a4[18];
      }
    }
    v10 = v5 + v12;
  }
  _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t type metadata accessor for InteractiveMapViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDC8B0;
  if (!qword_100BDC8B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InteractiveMapViewModel);
  return result;
}

void sub_10038CE28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[15];

  v2 = type metadata accessor for WeatherMapOverlayKind(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10[2] = &unk_100999428;
    v10[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v10[4] = &unk_100999440;
    v10[5] = &unk_100999440;
    v10[6] = &unk_100999458;
    v10[7] = &unk_100999440;
    v10[8] = &unk_100999440;
    v10[9] = &unk_100999440;
    v10[10] = &unk_100999440;
    v10[11] = &unk_100999440;
    sub_1001345CC(319, (unint64_t *)&qword_100BD4C08, type metadata accessor for WeatherData);
    if (v5 <= 0x3F)
    {
      v10[12] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for WeatherMapTrackingState(319);
      if (v7 <= 0x3F)
      {
        v10[13] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001345CC(319, (unint64_t *)&qword_100BC4B10, type metadata accessor for ContentStatusBanner);
        if (v9 <= 0x3F)
        {
          v10[14] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 15, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_10038CF3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v25;
  int *v26;
  _QWORD *v27;
  _QWORD *v28;

  v25 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for InteractiveMapViewModel(0);
  *(_QWORD *)(a9 + v26[5]) = a2;
  v27 = (_QWORD *)(a9 + v26[6]);
  *v27 = a3;
  v27[1] = a4;
  *(_QWORD *)(a9 + v26[7]) = a5;
  *(_BYTE *)(a9 + v26[8]) = a6;
  *(_BYTE *)(a9 + v26[9]) = a7;
  v28 = (_QWORD *)(a9 + v26[10]);
  *v28 = a8;
  v28[1] = a10;
  *(_BYTE *)(a9 + v26[11]) = a11;
  *(_BYTE *)(a9 + v26[12]) = a12;
  *(_BYTE *)(a9 + v26[13]) = a13;
  *(_BYTE *)(a9 + v26[14]) = a14;
  *(_BYTE *)(a9 + v26[15]) = a15;
  sub_1001A7244(a16, a9 + v26[16], &qword_100BC3460);
  sub_1000DB648(a17, a9 + v26[17], type metadata accessor for WeatherMapTrackingState);
  sub_1001A7244(a18, a9 + v26[18], &qword_100BC3620);
}

BOOL sub_10038D0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  _BOOL8 result;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  unsigned __int8 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v76 = type metadata accessor for ContentStatusBanner(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v71 = (unsigned __int8 *)(v6 - v5);
  v73 = sub_1000BA294(&qword_100BC4B48);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v72 = (unsigned __int8 *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v74 = (uint64_t)&v69 - v15;
  __chkstk_darwin(v14);
  v75 = (uint64_t)&v69 - v16;
  type metadata accessor for WeatherData(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100098728();
  v20 = (uint64_t *)(v19 - v18);
  v21 = sub_1000BA294(&qword_100BD4C40);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = v24 - v23;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  v27 = __chkstk_darwin(v26);
  v29 = (uint64_t *)((char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v69 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v69 - v33;
  if ((static WeatherMapOverlayKind.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v70 = v10;
  v35 = (int *)type metadata accessor for InteractiveMapViewModel(0);
  sub_10009C55C();
  if ((v36 & 1) == 0)
    return 0;
  v37 = v35[6];
  v38 = *(_QWORD *)(a1 + v37);
  v39 = *(_QWORD *)(a1 + v37 + 8);
  v40 = (_QWORD *)(a2 + v37);
  v41 = v40[1];
  v42 = v38 == *v40 && v39 == v41;
  if (v42
    || (v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, *v40, v41, 0), result = 0, (v43 & 1) != 0))
  {
    sub_1001F4070();
    if ((v45 & 1) == 0)
      return 0;
    sub_1000B4318();
    if (!v42)
      return 0;
    sub_1000B4318();
    if (!v42)
      return 0;
    v46 = v35[10];
    v47 = (_QWORD *)(a1 + v46);
    v48 = *(_QWORD *)(a1 + v46 + 8);
    v49 = (_QWORD *)(a2 + v46);
    v50 = v49[1];
    if (!v48)
    {
      if (v50)
        return 0;
      goto LABEL_23;
    }
    if (!v50)
      return 0;
    v51 = *v47 == *v49 && v48 == v50;
    if (v51
      || (v52 = _stringCompareWithSmolCheck(_:_:expecting:)(*v47, v48, *v49, v50, 0), result = 0, (v52 & 1) != 0))
    {
LABEL_23:
      sub_1000B4318();
      if (!v42)
        return 0;
      sub_1000B4318();
      if (!v42)
        return 0;
      sub_1000B4318();
      if (!v42)
        return 0;
      sub_1000B4318();
      if (!v42)
        return 0;
      sub_1000B4318();
      if (!v42)
        return 0;
      sub_1001A7210(a1 + v35[16], (uint64_t)v34, &qword_100BC3460);
      sub_1001A7210(a2 + v35[16], (uint64_t)v32, &qword_100BC3460);
      v53 = v25 + *(int *)(v21 + 48);
      sub_1001A7210((uint64_t)v34, v25, &qword_100BC3460);
      v69 = v53;
      sub_1001A7210((uint64_t)v32, v53, &qword_100BC3460);
      sub_100098750(v25);
      if (v42)
      {
        sub_10009E47C((uint64_t)v32);
        sub_10009E47C((uint64_t)v34);
        sub_100098750(v69);
        if (v42)
        {
          sub_100021A14(v25, &qword_100BC3460);
LABEL_44:
          sub_1000FF798();
          if ((v60 & 1) == 0)
            return 0;
          v61 = v75;
          sub_1000C3958(a1 + v35[18], v75);
          v62 = v74;
          sub_1000C3958(a2 + v35[18], v74);
          v63 = v70;
          v64 = v70 + *(int *)(v73 + 48);
          sub_1000C3958(v61, v70);
          sub_1000C3958(v62, v64);
          sub_1000C5DB4(v63);
          if (v42)
          {
            sub_100021A14(v74, &qword_100BC3620);
            sub_100021A14(v75, &qword_100BC3620);
            sub_1000C5DB4(v64);
            if (v42)
            {
              sub_100021A14(v70, &qword_100BC3620);
              return 1;
            }
          }
          else
          {
            sub_1001A7210(v70, (uint64_t)v72, &qword_100BC3620);
            sub_1000C5DB4(v64);
            if (!v65)
            {
              v66 = v71;
              sub_1000D1760(v64);
              v67 = v72;
              v68 = sub_10007BDA4(v72, v66);
              sub_10009EFA8((uint64_t)v66);
              sub_10009E47C(v74);
              sub_10009E47C(v75);
              sub_10009EFA8((uint64_t)v67);
              sub_10009E47C(v70);
              return v68;
            }
            sub_100075DD0(v74);
            sub_100075DD0(v75);
            sub_1000215BC((uint64_t)v72, type metadata accessor for ContentStatusBanner);
          }
          v56 = &qword_100BC4B48;
          v57 = v70;
LABEL_42:
          sub_100021A14(v57, v56);
          return 0;
        }
      }
      else
      {
        sub_1001A7210(v25, (uint64_t)v29, &qword_100BC3460);
        v54 = v69;
        sub_100098750(v69);
        if (!v55)
        {
          sub_1000D1760(v54);
          sub_1000FAF2C(v29, v20);
          v59 = v58;
          sub_10009EFA8((uint64_t)v20);
          sub_10009E47C((uint64_t)v32);
          sub_10009E47C((uint64_t)v34);
          sub_10009EFA8((uint64_t)v29);
          sub_10009E47C(v25);
          if ((v59 & 1) == 0)
            return 0;
          goto LABEL_44;
        }
        sub_100075DD0((uint64_t)v32);
        sub_100075DD0((uint64_t)v34);
        sub_1000215BC((uint64_t)v29, type metadata accessor for WeatherData);
      }
      v56 = &qword_100BD4C40;
      v57 = v25;
      goto LABEL_42;
    }
  }
  return result;
}

uint64_t sub_10038D680(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s7Weather24LocationCompositionStateOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10038D730 + 4 * byte_1009994A0[(v8 - 1)]))();
}

void sub_10038D77C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = &dword_100000004;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_10038D924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v9 = type metadata accessor for WeatherWindowGroup(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v13 = (char *)&v36 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v36 - v12, a1, v9);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(&unk_100B70528, v15 + v11, v14 | 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
  v17 = sub_100075EB0(&qword_100BDC9A0);
  v18 = type metadata accessor for ModifiedContent(255, a2, v17);
  v19 = sub_100075EB0(&qword_100BDC9A8);
  v20 = type metadata accessor for ModifiedContent(255, v18, v19);
  v21 = sub_100075EB0(&qword_100BDC9B0);
  v22 = type metadata accessor for ModifiedContent(0, v20, v21);
  v23 = sub_10005F124(&qword_100BDC9B8, &qword_100BDC9A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v42 = a3;
  v43 = v23;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v25 = sub_10005F124(&qword_100BDC9C0, &qword_100BDC9A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v27 = sub_10005F124(&qword_100BDC9C8, &qword_100BDC9B0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
  v38 = v26;
  v39 = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v29 = GeometryReader.init(content:)(sub_10038E01C, v16, v22, v28);
  v31 = v30;
  v36 = v29;
  v37 = v30;
  v32 = type metadata accessor for GeometryReader(0, v22, v28);
  v33 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v32);
  sub_1000B2074(&v36, v32, v33);
  swift_release(v31);
  v34 = v45;
  v36 = v44;
  v37 = v45;
  sub_1000B1100((uint64_t)&v36, v32, a5);
  return swift_release(v34);
}

uint64_t sub_10038DB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t WitnessTable;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v52 = a2;
  v59 = a5;
  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100075EB0(&qword_100BDC9A0);
  v12 = type metadata accessor for ModifiedContent(0, a3, v11);
  v55 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - v13;
  v15 = sub_100075EB0(&qword_100BDC9A8);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v53 = (char *)&v51 - v17;
  v18 = sub_100075EB0(&qword_100BDC9B0);
  v19 = type metadata accessor for ModifiedContent(0, v16, v18);
  v58 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v54 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v56 = (char *)&v51 - v23;
  v51 = a1;
  v24 = GeometryProxy.size.getter(v22);
  v26 = v25;
  v27 = GeometryProxy.safeAreaInsets.getter();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v52, a3);
  KeyPath = swift_getKeyPath(&unk_100999518);
  v66 = v24;
  v67 = v26;
  v68 = v27;
  v69 = v29;
  v70 = v31;
  v71 = v33;
  View.environment<A>(_:_:)(KeyPath, &v66, a3, a4);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  v35 = swift_getKeyPath(&unk_100999540);
  v66 = GeometryProxy.safeAreaInsets.getter();
  v67 = v36;
  v68 = v37;
  v69 = v38;
  v39 = sub_10005F124(&qword_100BDC9B8, &qword_100BDC9A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v64 = a4;
  v65 = v39;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v41 = v53;
  View.environment<A>(_:_:)(v35, &v66, v12, WitnessTable);
  swift_release(v35);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v12);
  v66 = v24;
  v67 = v26;
  v68 = v27;
  v69 = v29;
  v70 = v31;
  v71 = v33;
  v42 = sub_10005F124(&qword_100BDC9C0, &qword_100BDC9A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v62 = WitnessTable;
  v63 = v42;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v44 = sub_1001493F8();
  v45 = v54;
  View.animation<A>(_:value:)(0, &v66, v16, &type metadata for SceneMetrics, v43, v44);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v16);
  v46 = sub_10005F124(&qword_100BDC9C8, &qword_100BDC9B0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
  v60 = v43;
  v61 = v46;
  v47 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v48 = (uint64_t)v56;
  sub_1000B2074(v45, v19, v47);
  v49 = *(void (**)(char *, uint64_t))(v58 + 8);
  v49(v45, v19);
  sub_1000B1100(v48, v19, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v48, v19);
}

uint64_t sub_10038DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return WindowGroup.init(id:title:lazyContent:)(0, 0, 0, 0, 0, 0, a1, a2, a3, a4);
}

uint64_t sub_10038DFCC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  type metadata accessor for WeatherWindowGroup(0, v4, v5, a1);
  sub_100095298();
  return sub_10038D924(v2 + v6, v4, v5, v7, a2);
}

uint64_t sub_10038E01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  type metadata accessor for WeatherWindowGroup(0, v6, v7, a2);
  sub_100095298();
  return sub_10038DB88(a1, v3 + v8, v6, v7, a3);
}

void sub_10038E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v8.n128_f64[0] = sub_1000C4874(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  sub_1000CCC38(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v8);
  sub_1000BBCDC();
}

void sub_10038E098(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;

  sub_1000BAA68(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9, v10);
  sub_1000BBCDC();
}

uint64_t sub_10038E0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_100075EB0(&qword_100BDC9A0);
  v1 = sub_1000C396C(v0);
  sub_100075EB0(&qword_100BDC9A8);
  v2 = sub_100098C88();
  v4 = type metadata accessor for ModifiedContent(v2, v1, v3);
  sub_100075EB0(&qword_100BDC9B0);
  v5 = sub_100098C88();
  type metadata accessor for ModifiedContent(v5, v4, v6);
  sub_10005F124(&qword_100BDC9B8, &qword_100BDC9A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_10005F124(&qword_100BDC9C0, &qword_100BDC9A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  sub_10005F124(&qword_100BDC9C8, &qword_100BDC9B0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
  v7 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v8 = sub_1000C28D0(v7);
  v9 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v10 = type metadata accessor for WindowGroup(255, v8, v9);
  return swift_getWitnessTable(&protocol conformance descriptor for WindowGroup<A>, v10);
}

unint64_t sub_10038E214(uint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t active;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t EnumCaseMultiPayload;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int *v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    v12 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v13 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v17 = a3[7];
    *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
    v18 = *(_OWORD *)(a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = a3[8];
    v170 = a1;
    v20 = a1 + v19;
    v21 = a2 + v19;
    v22 = *(_QWORD *)(a2 + v19 + 8);
    *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
    *(_QWORD *)(v20 + 8) = v22;
    v23 = *(_QWORD *)(a2 + v19 + 24);
    *(_QWORD *)(v20 + 16) = *(_QWORD *)(a2 + v19 + 16);
    *(_QWORD *)(v20 + 24) = v23;
    v24 = *(_QWORD *)(a2 + v19 + 40);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(a2 + v19 + 32);
    *(_QWORD *)(v20 + 40) = v24;
    v25 = *(_QWORD *)(a2 + v19 + 48);
    v26 = *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v20 + 48) = v25;
    *(_QWORD *)(v20 + 56) = v26;
    v27 = *(_QWORD *)(v21 + 64);
    v28 = *(_QWORD *)(v21 + 72);
    *(_QWORD *)(v20 + 64) = v27;
    *(_QWORD *)(v20 + 72) = v28;
    v30 = *(_QWORD *)(v21 + 80);
    v29 = *(_QWORD *)(v21 + 88);
    *(_QWORD *)(v20 + 80) = v30;
    *(_QWORD *)(v20 + 88) = v29;
    v163 = v30;
    v166 = *(_QWORD *)(v21 + 96);
    *(_QWORD *)(v20 + 96) = v166;
    *(_BYTE *)(v20 + 104) = *(_BYTE *)(v21 + 104);
    v168 = *(void **)(v21 + 112);
    *(_QWORD *)(v20 + 112) = v168;
    v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
    v32 = v31[9];
    v160 = v21 + v32;
    v161 = v20 + v32;
    v33 = type metadata accessor for TemperatureScaleConfiguration(0);
    v159 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v163);
    swift_bridgeObjectRetain(v166);
    v34 = v168;
    v159(v161, v160, v33);
    *(_OWORD *)(v20 + v31[10]) = *(_OWORD *)(v21 + v31[10]);
    v35 = v31[11];
    v36 = *(_QWORD *)(v21 + v35);
    *(_QWORD *)(v20 + v35) = v36;
    v37 = v31[12];
    v38 = v20 + v37;
    v39 = v21 + v37;
    v40 = *(void **)v39;
    v41 = *(void **)(v39 + 8);
    v42 = *(_QWORD *)(v39 + 16);
    LOBYTE(v23) = *(_BYTE *)(v39 + 24);
    swift_bridgeObjectRetain(v36);
    sub_1001A41A0(v40, v41, v42, v23);
    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v41;
    *(_QWORD *)(v38 + 16) = v42;
    *(_BYTE *)(v38 + 24) = v23;
    v43 = v31[13];
    v44 = (char *)(v20 + v43);
    v45 = (char *)(v21 + v43);
    v46 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
    {
      v47 = sub_1000BA294(&qword_100BC4BB8);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v44, v45, v48);
      *(_QWORD *)&v44[*(int *)(v46 + 20)] = *(_QWORD *)&v45[*(int *)(v46 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
    }
    v49 = v31[14];
    v50 = (char *)(v20 + v49);
    v51 = (char *)(v21 + v49);
    v52 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, (uint64_t)v52))
    {
      v53 = sub_1000BA294(&qword_100BC4BC0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v54 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v50, v51, v54);
      *(_QWORD *)&v50[v52[5]] = *(_QWORD *)&v51[v52[5]];
      v55 = v52[6];
      v56 = &v50[v55];
      v57 = &v51[v55];
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      v59 = v52[7];
      v60 = &v50[v59];
      v61 = &v51[v59];
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = v62;
      v63 = v52[8];
      v64 = &v50[v63];
      v65 = &v51[v63];
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v66;
      swift_bridgeObjectRetain(v58);
      swift_bridgeObjectRetain(v62);
      swift_bridgeObjectRetain(v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, (uint64_t)v52);
    }
    v167 = v31;
    v169 = v21;
    v67 = v31[15];
    v68 = v20 + v67;
    v69 = v21 + v67;
    v70 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v69) == 1)
    {
      v164 = v70;
      *(_QWORD *)v68 = *(_QWORD *)v69;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v72 = *(int *)(active + 20);
      v73 = v68 + v72;
      v74 = v69 + v72;
      v75 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
      v76 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v73 + v76[5]) = *(_QWORD *)(v74 + v76[5]);
      *(_QWORD *)(v73 + v76[6]) = *(_QWORD *)(v74 + v76[6]);
      *(_QWORD *)(v73 + v76[7]) = *(_QWORD *)(v74 + v76[7]);
      v77 = *(int *)(active + 24);
      v78 = v68 + v77;
      v79 = v69 + v77;
      v80 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v79);
      v82 = EnumCaseMultiPayload;
      v157 = v20;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v94 = *(_QWORD *)(v79 + 8);
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_QWORD *)(v78 + 8) = v94;
        v95 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v96 = v95[5];
        v162 = v80;
        v97 = v78 + v96;
        v98 = v79 + v96;
        v99 = type metadata accessor for AttributedString(0);
        v100 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v99 - 8) + 16);
        v101 = swift_bridgeObjectRetain(v94);
        v102 = v97;
        v80 = v162;
        v100(v102, v98, v99, v101);
        v103 = v95[6];
        v104 = (_QWORD *)(v78 + v103);
        v105 = (_QWORD *)(v79 + v103);
        v106 = v105[1];
        *v104 = *v105;
        v104[1] = v106;
        v107 = v95[7];
        v108 = (_QWORD *)(v78 + v107);
        v109 = (_QWORD *)(v79 + v107);
        v110 = v109[1];
        *v108 = *v109;
        v108[1] = v110;
        v111 = v95[8];
        v112 = (_QWORD *)(v78 + v111);
        v113 = (_QWORD *)(v79 + v111);
        v84 = v113[1];
        *v112 = *v113;
        v112[1] = v84;
        v114 = v95[9];
        v115 = (_QWORD *)(v78 + v114);
        v116 = (_QWORD *)(v79 + v114);
        v85 = v116[1];
        *v115 = *v116;
        v115[1] = v85;
        v117 = v95[10];
        v118 = (_QWORD *)(v78 + v117);
        v119 = (_QWORD *)(v79 + v117);
        v86 = v119[1];
        *v118 = *v119;
        v118[1] = v86;
        *(_BYTE *)(v78 + v95[11]) = *(_BYTE *)(v79 + v95[11]);
        swift_bridgeObjectRetain(v106);
        v83 = v110;
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          v70 = v164;
          v84 = *(_QWORD *)(v79 + 8);
          *(_QWORD *)v78 = *(_QWORD *)v79;
          *(_QWORD *)(v78 + 8) = v84;
          v85 = *(_QWORD *)(v79 + 24);
          *(_QWORD *)(v78 + 16) = *(_QWORD *)(v79 + 16);
          *(_QWORD *)(v78 + 24) = v85;
          v86 = *(_QWORD *)(v79 + 40);
          *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
          *(_QWORD *)(v78 + 40) = v86;
          goto LABEL_22;
        }
        v83 = *(_QWORD *)(v79 + 8);
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_QWORD *)(v78 + 8) = v83;
        v84 = *(_QWORD *)(v79 + 24);
        *(_QWORD *)(v78 + 16) = *(_QWORD *)(v79 + 16);
        *(_QWORD *)(v78 + 24) = v84;
        v85 = *(_QWORD *)(v79 + 40);
        *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
        *(_QWORD *)(v78 + 40) = v85;
        v86 = *(_QWORD *)(v79 + 56);
        *(_QWORD *)(v78 + 48) = *(_QWORD *)(v79 + 48);
        *(_QWORD *)(v78 + 56) = v86;
        *(_BYTE *)(v78 + 64) = *(_BYTE *)(v79 + 64);
        *(_BYTE *)(v78 + 65) = *(_BYTE *)(v79 + 65);
      }
      swift_bridgeObjectRetain(v83);
      v70 = v164;
LABEL_22:
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRetain(v85);
      swift_bridgeObjectRetain(v86);
      swift_storeEnumTagMultiPayload(v78, v80, v82);
      v120 = 1;
      v20 = v157;
LABEL_27:
      swift_storeEnumTagMultiPayload(v68, v70, v120);
      v147 = v167[16];
      v148 = v20 + v147;
      v149 = v169 + v147;
      v150 = type metadata accessor for Date(0);
      v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 16);
      v151(v148, v149, v150);
      v151(v20 + v167[17], v169 + v167[17], v150);
      v152 = v167[18];
      v153 = v20 + v152;
      v154 = v169 + v152;
      v155 = type metadata accessor for DetailChartGradientModel(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
      *(_OWORD *)(v20 + v167[19]) = *(_OWORD *)(v169 + v167[19]);
      *(_OWORD *)(v20 + v167[20]) = *(_OWORD *)(v169 + v167[20]);
      return v170;
    }
    v87 = type metadata accessor for LollipopDetailViewModel(0);
    v88 = swift_getEnumCaseMultiPayload(v69);
    v89 = v88;
    if ((_DWORD)v88 == 2)
    {
      v165 = v70;
      v121 = *(_QWORD *)(v69 + 8);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = v121;
      v158 = v20;
      v122 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v123 = v122[5];
      v124 = v68 + v123;
      v125 = v69 + v123;
      v126 = type metadata accessor for AttributedString(0);
      v127 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v126 - 8) + 16);
      v128 = swift_bridgeObjectRetain(v121);
      v127(v124, v125, v126, v128);
      v129 = v122[6];
      v130 = (_QWORD *)(v68 + v129);
      v131 = (_QWORD *)(v69 + v129);
      v132 = v131[1];
      *v130 = *v131;
      v130[1] = v132;
      v133 = v122[7];
      v134 = (_QWORD *)(v68 + v133);
      v135 = (_QWORD *)(v69 + v133);
      v136 = v135[1];
      *v134 = *v135;
      v134[1] = v136;
      v137 = v122[8];
      v138 = (_QWORD *)(v68 + v137);
      v139 = (_QWORD *)(v69 + v137);
      v91 = v139[1];
      *v138 = *v139;
      v138[1] = v91;
      v140 = v122[9];
      v141 = (_QWORD *)(v68 + v140);
      v142 = (_QWORD *)(v69 + v140);
      v92 = v142[1];
      *v141 = *v142;
      v141[1] = v92;
      v143 = v122[10];
      v144 = (_QWORD *)(v68 + v143);
      v145 = (_QWORD *)(v69 + v143);
      v93 = v145[1];
      *v144 = *v145;
      v144[1] = v93;
      v146 = v122[11];
      v20 = v158;
      *(_BYTE *)(v68 + v146) = *(_BYTE *)(v69 + v146);
      swift_bridgeObjectRetain(v132);
      v90 = v136;
      v70 = v165;
    }
    else
    {
      if ((_DWORD)v88 != 1)
      {
        v91 = *(_QWORD *)(v69 + 8);
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *(_QWORD *)(v68 + 8) = v91;
        v92 = *(_QWORD *)(v69 + 24);
        *(_QWORD *)(v68 + 16) = *(_QWORD *)(v69 + 16);
        *(_QWORD *)(v68 + 24) = v92;
        v93 = *(_QWORD *)(v69 + 40);
        *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
        *(_QWORD *)(v68 + 40) = v93;
        goto LABEL_26;
      }
      v90 = *(_QWORD *)(v69 + 8);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_QWORD *)(v68 + 8) = v90;
      v91 = *(_QWORD *)(v69 + 24);
      *(_QWORD *)(v68 + 16) = *(_QWORD *)(v69 + 16);
      *(_QWORD *)(v68 + 24) = v91;
      v92 = *(_QWORD *)(v69 + 40);
      *(_QWORD *)(v68 + 32) = *(_QWORD *)(v69 + 32);
      *(_QWORD *)(v68 + 40) = v92;
      v93 = *(_QWORD *)(v69 + 56);
      *(_QWORD *)(v68 + 48) = *(_QWORD *)(v69 + 48);
      *(_QWORD *)(v68 + 56) = v93;
      *(_BYTE *)(v68 + 64) = *(_BYTE *)(v69 + 64);
      *(_BYTE *)(v68 + 65) = *(_BYTE *)(v69 + 65);
    }
    swift_bridgeObjectRetain(v90);
LABEL_26:
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v93);
    swift_storeEnumTagMultiPayload(v68, v87, v89);
    v120 = 0;
    goto LABEL_27;
  }
  v15 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v16 = v15 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v16;
}

uint64_t sub_10038EA50(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t active;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release(*v4);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + a2[7]));
  v6 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v7 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v8 = v6 + v7[9];
  v9 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  sub_1001A44FC(*(void **)(v6 + v7[12]), *(void **)(v6 + v7[12] + 8), *(_QWORD *)(v6 + v7[12] + 16), *(_BYTE *)(v6 + v7[12] + 24));
  v10 = v6 + v7[13];
  v11 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
  {
    v12 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  v13 = v6 + v7[14];
  v14 = type metadata accessor for PeakUpperMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
  {
    v15 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v6 + v7[15];
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v16) == 1)
  {
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v18 = v16 + *(int *)(active + 20);
    v19 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    v16 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      v21 = v16 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      v22 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      break;
  }
  v23 = v6 + v7[16];
  v24 = type metadata accessor for Date(0);
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
  v25(v23, v24);
  v25(v6 + v7[17], v24);
  v26 = v6 + v7[18];
  v27 = type metadata accessor for DetailChartGradientModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
}

uint64_t sub_10038EDE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t active;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t EnumCaseMultiPayload;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    *v9 = *v10;
    swift_retain();
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  v14 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v15 = *(_OWORD *)(a2 + v14 + 24);
  *(_OWORD *)(a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  v16 = a3[8];
  v167 = a1;
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  v20 = *(_QWORD *)(a2 + v16 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  v21 = *(_QWORD *)(a2 + v16 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(a2 + v16 + 32);
  *(_QWORD *)(v17 + 40) = v21;
  v22 = *(_QWORD *)(a2 + v16 + 48);
  v23 = *(_QWORD *)(v18 + 56);
  *(_QWORD *)(v17 + 48) = v22;
  *(_QWORD *)(v17 + 56) = v23;
  v24 = *(_QWORD *)(v18 + 64);
  v25 = *(_QWORD *)(v18 + 72);
  *(_QWORD *)(v17 + 64) = v24;
  *(_QWORD *)(v17 + 72) = v25;
  v27 = *(_QWORD *)(v18 + 80);
  v26 = *(_QWORD *)(v18 + 88);
  *(_QWORD *)(v17 + 80) = v27;
  *(_QWORD *)(v17 + 88) = v26;
  v160 = v27;
  v163 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 96) = v163;
  *(_BYTE *)(v17 + 104) = *(_BYTE *)(v18 + 104);
  v165 = *(void **)(v18 + 112);
  *(_QWORD *)(v17 + 112) = v165;
  v28 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v29 = v28[9];
  v157 = v18 + v29;
  v158 = v17 + v29;
  v30 = type metadata accessor for TemperatureScaleConfiguration(0);
  v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v160);
  swift_bridgeObjectRetain(v163);
  v31 = v165;
  v156(v158, v157, v30);
  *(_OWORD *)(v17 + v28[10]) = *(_OWORD *)(v18 + v28[10]);
  v32 = v28[11];
  v33 = *(_QWORD *)(v18 + v32);
  *(_QWORD *)(v17 + v32) = v33;
  v34 = v28[12];
  v35 = v17 + v34;
  v36 = v18 + v34;
  v37 = *(void **)v36;
  v38 = *(void **)(v36 + 8);
  v39 = *(_QWORD *)(v36 + 16);
  LOBYTE(v20) = *(_BYTE *)(v36 + 24);
  swift_bridgeObjectRetain(v33);
  sub_1001A41A0(v37, v38, v39, v20);
  *(_QWORD *)v35 = v37;
  *(_QWORD *)(v35 + 8) = v38;
  *(_QWORD *)(v35 + 16) = v39;
  *(_BYTE *)(v35 + 24) = v20;
  v40 = v28[13];
  v41 = (char *)(v17 + v40);
  v42 = (char *)(v18 + v40);
  v43 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    v44 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
    *(_QWORD *)&v41[*(int *)(v43 + 20)] = *(_QWORD *)&v42[*(int *)(v43 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  v46 = v28[14];
  v47 = (char *)(v17 + v46);
  v48 = (char *)(v18 + v46);
  v49 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, (uint64_t)v49))
  {
    v50 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v47, v48, v51);
    *(_QWORD *)&v47[v49[5]] = *(_QWORD *)&v48[v49[5]];
    v52 = v49[6];
    v53 = &v47[v52];
    v54 = &v48[v52];
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    v56 = v49[7];
    v57 = &v47[v56];
    v58 = &v48[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = v49[8];
    v61 = &v47[v60];
    v62 = &v48[v60];
    v63 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v63;
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v63);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, (uint64_t)v49);
  }
  v164 = v28;
  v166 = v18;
  v64 = v28[15];
  v65 = v17 + v64;
  v66 = v18 + v64;
  v67 = type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v66) != 1)
  {
    v84 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v66);
    v86 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v162 = v67;
      v118 = *(_QWORD *)(v66 + 8);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *(_QWORD *)(v65 + 8) = v118;
      v155 = v17;
      v119 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v120 = v119[5];
      v121 = v65 + v120;
      v122 = v66 + v120;
      v123 = type metadata accessor for AttributedString(0);
      v124 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v123 - 8) + 16);
      v125 = swift_bridgeObjectRetain(v118);
      v124(v121, v122, v123, v125);
      v126 = v119[6];
      v127 = (_QWORD *)(v65 + v126);
      v128 = (_QWORD *)(v66 + v126);
      v129 = v128[1];
      *v127 = *v128;
      v127[1] = v129;
      v130 = v119[7];
      v131 = (_QWORD *)(v65 + v130);
      v132 = (_QWORD *)(v66 + v130);
      v133 = v132[1];
      *v131 = *v132;
      v131[1] = v133;
      v134 = v119[8];
      v135 = (_QWORD *)(v65 + v134);
      v136 = (_QWORD *)(v66 + v134);
      v88 = v136[1];
      *v135 = *v136;
      v135[1] = v88;
      v137 = v119[9];
      v138 = (_QWORD *)(v65 + v137);
      v139 = (_QWORD *)(v66 + v137);
      v89 = v139[1];
      *v138 = *v139;
      v138[1] = v89;
      v140 = v119[10];
      v141 = (_QWORD *)(v65 + v140);
      v142 = (_QWORD *)(v66 + v140);
      v90 = v142[1];
      *v141 = *v142;
      v141[1] = v90;
      v143 = v119[11];
      v17 = v155;
      *(_BYTE *)(v65 + v143) = *(_BYTE *)(v66 + v143);
      swift_bridgeObjectRetain(v129);
      v87 = v133;
      v67 = v162;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v88 = *(_QWORD *)(v66 + 8);
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *(_QWORD *)(v65 + 8) = v88;
        v89 = *(_QWORD *)(v66 + 24);
        *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
        *(_QWORD *)(v65 + 24) = v89;
        v90 = *(_QWORD *)(v66 + 40);
        *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
        *(_QWORD *)(v65 + 40) = v90;
        goto LABEL_24;
      }
      v87 = *(_QWORD *)(v66 + 8);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *(_QWORD *)(v65 + 8) = v87;
      v88 = *(_QWORD *)(v66 + 24);
      *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
      *(_QWORD *)(v65 + 24) = v88;
      v89 = *(_QWORD *)(v66 + 40);
      *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
      *(_QWORD *)(v65 + 40) = v89;
      v90 = *(_QWORD *)(v66 + 56);
      *(_QWORD *)(v65 + 48) = *(_QWORD *)(v66 + 48);
      *(_QWORD *)(v65 + 56) = v90;
      *(_BYTE *)(v65 + 64) = *(_BYTE *)(v66 + 64);
      *(_BYTE *)(v65 + 65) = *(_BYTE *)(v66 + 65);
    }
    swift_bridgeObjectRetain(v87);
LABEL_24:
    swift_bridgeObjectRetain(v88);
    swift_bridgeObjectRetain(v89);
    swift_bridgeObjectRetain(v90);
    swift_storeEnumTagMultiPayload(v65, v84, v86);
    v117 = 0;
    goto LABEL_25;
  }
  v161 = v67;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  v69 = *(int *)(active + 20);
  v70 = v65 + v69;
  v71 = v66 + v69;
  v72 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
  v73 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(v70 + v73[5]) = *(_QWORD *)(v71 + v73[5]);
  *(_QWORD *)(v70 + v73[6]) = *(_QWORD *)(v71 + v73[6]);
  *(_QWORD *)(v70 + v73[7]) = *(_QWORD *)(v71 + v73[7]);
  v74 = *(int *)(active + 24);
  v75 = v65 + v74;
  v76 = v66 + v74;
  v77 = type metadata accessor for LollipopDetailViewModel(0);
  v78 = swift_getEnumCaseMultiPayload(v76);
  v79 = v78;
  v154 = v17;
  if ((_DWORD)v78 == 2)
  {
    v91 = *(_QWORD *)(v76 + 8);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *(_QWORD *)(v75 + 8) = v91;
    v92 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v93 = v92[5];
    v159 = v77;
    v94 = v75 + v93;
    v95 = v76 + v93;
    v96 = type metadata accessor for AttributedString(0);
    v97 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v96 - 8) + 16);
    v98 = swift_bridgeObjectRetain(v91);
    v99 = v94;
    v77 = v159;
    v97(v99, v95, v96, v98);
    v100 = v92[6];
    v101 = (_QWORD *)(v75 + v100);
    v102 = (_QWORD *)(v76 + v100);
    v103 = v102[1];
    *v101 = *v102;
    v101[1] = v103;
    v104 = v92[7];
    v105 = (_QWORD *)(v75 + v104);
    v106 = (_QWORD *)(v76 + v104);
    v107 = v106[1];
    *v105 = *v106;
    v105[1] = v107;
    v108 = v92[8];
    v109 = (_QWORD *)(v75 + v108);
    v110 = (_QWORD *)(v76 + v108);
    v81 = v110[1];
    *v109 = *v110;
    v109[1] = v81;
    v111 = v92[9];
    v112 = (_QWORD *)(v75 + v111);
    v113 = (_QWORD *)(v76 + v111);
    v82 = v113[1];
    *v112 = *v113;
    v112[1] = v82;
    v114 = v92[10];
    v115 = (_QWORD *)(v75 + v114);
    v116 = (_QWORD *)(v76 + v114);
    v83 = v116[1];
    *v115 = *v116;
    v115[1] = v83;
    *(_BYTE *)(v75 + v92[11]) = *(_BYTE *)(v76 + v92[11]);
    swift_bridgeObjectRetain(v103);
    v80 = v107;
  }
  else
  {
    if ((_DWORD)v78 != 1)
    {
      v67 = v161;
      v81 = *(_QWORD *)(v76 + 8);
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *(_QWORD *)(v75 + 8) = v81;
      v82 = *(_QWORD *)(v76 + 24);
      *(_QWORD *)(v75 + 16) = *(_QWORD *)(v76 + 16);
      *(_QWORD *)(v75 + 24) = v82;
      v83 = *(_QWORD *)(v76 + 40);
      *(_QWORD *)(v75 + 32) = *(_QWORD *)(v76 + 32);
      *(_QWORD *)(v75 + 40) = v83;
      goto LABEL_20;
    }
    v80 = *(_QWORD *)(v76 + 8);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *(_QWORD *)(v75 + 8) = v80;
    v81 = *(_QWORD *)(v76 + 24);
    *(_QWORD *)(v75 + 16) = *(_QWORD *)(v76 + 16);
    *(_QWORD *)(v75 + 24) = v81;
    v82 = *(_QWORD *)(v76 + 40);
    *(_QWORD *)(v75 + 32) = *(_QWORD *)(v76 + 32);
    *(_QWORD *)(v75 + 40) = v82;
    v83 = *(_QWORD *)(v76 + 56);
    *(_QWORD *)(v75 + 48) = *(_QWORD *)(v76 + 48);
    *(_QWORD *)(v75 + 56) = v83;
    *(_BYTE *)(v75 + 64) = *(_BYTE *)(v76 + 64);
    *(_BYTE *)(v75 + 65) = *(_BYTE *)(v76 + 65);
  }
  swift_bridgeObjectRetain(v80);
  v67 = v161;
LABEL_20:
  swift_bridgeObjectRetain(v81);
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRetain(v83);
  swift_storeEnumTagMultiPayload(v75, v77, v79);
  v117 = 1;
  v17 = v154;
LABEL_25:
  swift_storeEnumTagMultiPayload(v65, v67, v117);
  v144 = v164[16];
  v145 = v17 + v144;
  v146 = v166 + v144;
  v147 = type metadata accessor for Date(0);
  v148 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 16);
  v148(v145, v146, v147);
  v148(v17 + v164[17], v166 + v164[17], v147);
  v149 = v164[18];
  v150 = v17 + v149;
  v151 = v166 + v149;
  v152 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v150, v151, v152);
  *(_OWORD *)(v17 + v164[19]) = *(_OWORD *)(v166 + v164[19]);
  *(_OWORD *)(v17 + v164[20]) = *(_OWORD *)(v166 + v164[20]);
  return v167;
}

uint64_t sub_10038F5EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unsigned __int8 v46;
  void *v47;
  void *v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t active;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int EnumCaseMultiPayload;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  sub_100094D04((_QWORD *)(a1 + a3[7]), (_QWORD *)(a2 + a3[7]));
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v21 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 40) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
  v22 = *(_QWORD *)(v18 + 56);
  *(_QWORD *)(v17 + 56) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v17 + 64) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v18 + 72);
  *(_QWORD *)(v17 + 72) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v18 + 80);
  *(_QWORD *)(v17 + 80) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
  v26 = *(_QWORD *)(v18 + 96);
  *(_QWORD *)(v17 + 96) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 104) = *(_BYTE *)(v18 + 104);
  v27 = *(void **)(v18 + 112);
  v28 = *(void **)(v17 + 112);
  *(_QWORD *)(v17 + 112) = v27;
  v29 = v27;

  v30 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v31 = v30[9];
  v32 = v17 + v31;
  v33 = v18 + v31;
  v34 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = v30[10];
  v36 = (_QWORD *)(v17 + v35);
  v37 = (_QWORD *)(v18 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = v30[11];
  v39 = *(_QWORD *)(v18 + v38);
  *(_QWORD *)(v17 + v38) = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease();
  v40 = v30[12];
  v41 = v17 + v40;
  v42 = v18 + v40;
  v43 = *(id *)v42;
  v44 = *(void **)(v42 + 8);
  v45 = *(_QWORD *)(v42 + 16);
  v46 = *(_BYTE *)(v42 + 24);
  sub_1001A41A0(*(id *)v42, v44, v45, v46);
  v47 = *(void **)v41;
  v48 = *(void **)(v41 + 8);
  v49 = *(_QWORD *)(v41 + 16);
  *(_QWORD *)v41 = v43;
  *(_QWORD *)(v41 + 8) = v44;
  *(_QWORD *)(v41 + 16) = v45;
  v50 = *(_BYTE *)(v41 + 24);
  *(_BYTE *)(v41 + 24) = v46;
  sub_1001A44FC(v47, v48, v49, v50);
  v51 = v30[13];
  v52 = (char *)(v17 + v51);
  v53 = (char *)(v18 + v51);
  v54 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (v55)
  {
    if (!v56)
    {
      v57 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v52, v53, v57);
      *(_QWORD *)&v52[*(int *)(v54 + 20)] = *(_QWORD *)&v53[*(int *)(v54 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v56)
  {
    sub_1000215BC((uint64_t)v52, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_11:
    v58 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_12;
  }
  v103 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v52, v53, v103);
  *(_QWORD *)&v52[*(int *)(v54 + 20)] = *(_QWORD *)&v53[*(int *)(v54 + 20)];
LABEL_12:
  v59 = v30[14];
  v60 = (char *)(v17 + v59);
  v61 = (char *)(v18 + v59);
  v62 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, (uint64_t)v62);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62);
  if (v63)
  {
    if (!v64)
    {
      v65 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v60, v61, v65);
      *(_QWORD *)&v60[v62[5]] = *(_QWORD *)&v61[v62[5]];
      v66 = v62[6];
      v67 = &v60[v66];
      v68 = &v61[v66];
      *(_QWORD *)v67 = *(_QWORD *)v68;
      v69 = *((_QWORD *)v68 + 1);
      *((_QWORD *)v67 + 1) = v69;
      v70 = v62[7];
      v71 = &v60[v70];
      v72 = &v61[v70];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      v73 = *((_QWORD *)v72 + 1);
      *((_QWORD *)v71 + 1) = v73;
      v74 = v62[8];
      v75 = &v60[v74];
      v76 = &v61[v74];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      v77 = *((_QWORD *)v76 + 1);
      *((_QWORD *)v75 + 1) = v77;
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRetain(v77);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v64)
  {
    sub_1000215BC((uint64_t)v60, type metadata accessor for PeakUpperMarkModel);
LABEL_17:
    v78 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_18;
  }
  v104 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 24))(v60, v61, v104);
  *(_QWORD *)&v60[v62[5]] = *(_QWORD *)&v61[v62[5]];
  v105 = v62[6];
  v106 = &v60[v105];
  v107 = &v61[v105];
  *(_QWORD *)v106 = *(_QWORD *)v107;
  v108 = *((_QWORD *)v107 + 1);
  *((_QWORD *)v106 + 1) = v108;
  swift_bridgeObjectRetain(v108);
  swift_bridgeObjectRelease();
  v109 = v62[7];
  v110 = &v60[v109];
  v111 = &v61[v109];
  *(_QWORD *)v110 = *(_QWORD *)v111;
  v112 = *((_QWORD *)v111 + 1);
  *((_QWORD *)v110 + 1) = v112;
  swift_bridgeObjectRetain(v112);
  swift_bridgeObjectRelease();
  v113 = v62[8];
  v114 = &v60[v113];
  v115 = &v61[v113];
  *(_QWORD *)v114 = *(_QWORD *)v115;
  v116 = *((_QWORD *)v115 + 1);
  *((_QWORD *)v114 + 1) = v116;
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRelease();
LABEL_18:
  if (a1 != a2)
  {
    v79 = v30[15];
    v80 = v17 + v79;
    v81 = v18 + v79;
    sub_1000215BC(v17 + v79, type metadata accessor for DetailHeroChartLollipopModel);
    v191 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v81) == 1)
    {
      *(_QWORD *)v80 = *(_QWORD *)v81;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v83 = *(int *)(active + 20);
      v84 = v80 + v83;
      v85 = v81 + v83;
      v86 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
      v87 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v84 + v87[5]) = *(_QWORD *)(v85 + v87[5]);
      *(_QWORD *)(v84 + v87[6]) = *(_QWORD *)(v85 + v87[6]);
      *(_QWORD *)(v84 + v87[7]) = *(_QWORD *)(v85 + v87[7]);
      v88 = *(int *)(active + 24);
      v89 = v80 + v88;
      v90 = v81 + v88;
      v91 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v90);
      v189 = a1;
      v187 = EnumCaseMultiPayload;
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v89 = *(_QWORD *)v90;
        v117 = *(_QWORD *)(v90 + 8);
        *(_QWORD *)(v89 + 8) = v117;
        v184 = v91;
        v118 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v119 = v118[5];
        v180 = v90 + v119;
        v181 = v89 + v119;
        v120 = type metadata accessor for AttributedString(0);
        v121 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v120 - 8) + 16);
        v122 = swift_bridgeObjectRetain(v117);
        v121(v181, v180, v120, v122);
        v123 = v118[6];
        v124 = (_QWORD *)(v89 + v123);
        v125 = (_QWORD *)(v90 + v123);
        *v124 = *v125;
        v126 = v125[1];
        v124[1] = v126;
        v127 = v118[7];
        v128 = (_QWORD *)(v89 + v127);
        v129 = (_QWORD *)(v90 + v127);
        *v128 = *v129;
        v182 = v129[1];
        v128[1] = v182;
        v130 = v118[8];
        v131 = (_QWORD *)(v89 + v130);
        v132 = (_QWORD *)(v90 + v130);
        *v131 = *v132;
        v94 = v132[1];
        v131[1] = v94;
        v133 = v118[9];
        v134 = (_QWORD *)(v89 + v133);
        v135 = (_QWORD *)(v90 + v133);
        *v134 = *v135;
        v95 = v135[1];
        v134[1] = v95;
        v136 = v118[10];
        v137 = (_QWORD *)(v89 + v136);
        v138 = (_QWORD *)(v90 + v136);
        *v137 = *v138;
        v96 = v138[1];
        v137[1] = v96;
        v139 = v118[11];
        v91 = v184;
        *(_BYTE *)(v89 + v139) = *(_BYTE *)(v90 + v139);
        swift_bridgeObjectRetain(v126);
        v93 = v182;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v94 = *(_QWORD *)(v90 + 8);
          *(_QWORD *)(v89 + 8) = v94;
          *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
          v95 = *(_QWORD *)(v90 + 24);
          *(_QWORD *)(v89 + 24) = v95;
          *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
          v96 = *(_QWORD *)(v90 + 40);
          *(_QWORD *)(v89 + 40) = v96;
          goto LABEL_31;
        }
        *(_QWORD *)v89 = *(_QWORD *)v90;
        v93 = *(_QWORD *)(v90 + 8);
        *(_QWORD *)(v89 + 8) = v93;
        *(_QWORD *)(v89 + 16) = *(_QWORD *)(v90 + 16);
        v94 = *(_QWORD *)(v90 + 24);
        *(_QWORD *)(v89 + 24) = v94;
        *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
        v95 = *(_QWORD *)(v90 + 40);
        *(_QWORD *)(v89 + 40) = v95;
        *(_QWORD *)(v89 + 48) = *(_QWORD *)(v90 + 48);
        v96 = *(_QWORD *)(v90 + 56);
        *(_QWORD *)(v89 + 56) = v96;
        *(_BYTE *)(v89 + 64) = *(_BYTE *)(v90 + 64);
        *(_BYTE *)(v89 + 65) = *(_BYTE *)(v90 + 65);
      }
      swift_bridgeObjectRetain(v93);
LABEL_31:
      swift_bridgeObjectRetain(v94);
      swift_bridgeObjectRetain(v95);
      swift_bridgeObjectRetain(v96);
      swift_storeEnumTagMultiPayload(v89, v91, v187);
      v140 = 1;
      a1 = v189;
LABEL_36:
      swift_storeEnumTagMultiPayload(v80, v191, v140);
      goto LABEL_37;
    }
    v188 = type metadata accessor for LollipopDetailViewModel(0);
    v97 = swift_getEnumCaseMultiPayload(v81);
    v98 = v97;
    if ((_DWORD)v97 == 2)
    {
      *(_QWORD *)v80 = *(_QWORD *)v81;
      v141 = *(_QWORD *)(v81 + 8);
      *(_QWORD *)(v80 + 8) = v141;
      v190 = a1;
      v142 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v143 = v142[5];
      v183 = v81 + v143;
      v185 = v80 + v143;
      v144 = type metadata accessor for AttributedString(0);
      v145 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v144 - 8) + 16);
      v146 = swift_bridgeObjectRetain(v141);
      v145(v185, v183, v144, v146);
      v147 = v142[6];
      v148 = (_QWORD *)(v80 + v147);
      v149 = (_QWORD *)(v81 + v147);
      *v148 = *v149;
      v150 = v149[1];
      v148[1] = v150;
      v151 = v142[7];
      v152 = (_QWORD *)(v80 + v151);
      v153 = (_QWORD *)(v81 + v151);
      *v152 = *v153;
      v186 = v153[1];
      v152[1] = v186;
      v154 = v142[8];
      v155 = (_QWORD *)(v80 + v154);
      v156 = (_QWORD *)(v81 + v154);
      *v155 = *v156;
      v100 = v156[1];
      v155[1] = v100;
      v157 = v142[9];
      v158 = (_QWORD *)(v80 + v157);
      v159 = (_QWORD *)(v81 + v157);
      *v158 = *v159;
      v101 = v159[1];
      v158[1] = v101;
      v160 = v142[10];
      v161 = (_QWORD *)(v80 + v160);
      v162 = (_QWORD *)(v81 + v160);
      *v161 = *v162;
      v102 = v162[1];
      v161[1] = v102;
      v163 = v142[11];
      a1 = v190;
      *(_BYTE *)(v80 + v163) = *(_BYTE *)(v81 + v163);
      swift_bridgeObjectRetain(v150);
      v99 = v186;
    }
    else
    {
      if ((_DWORD)v97 != 1)
      {
        *(_QWORD *)v80 = *(_QWORD *)v81;
        v100 = *(_QWORD *)(v81 + 8);
        *(_QWORD *)(v80 + 8) = v100;
        *(_QWORD *)(v80 + 16) = *(_QWORD *)(v81 + 16);
        v101 = *(_QWORD *)(v81 + 24);
        *(_QWORD *)(v80 + 24) = v101;
        *(_QWORD *)(v80 + 32) = *(_QWORD *)(v81 + 32);
        v102 = *(_QWORD *)(v81 + 40);
        *(_QWORD *)(v80 + 40) = v102;
        goto LABEL_35;
      }
      *(_QWORD *)v80 = *(_QWORD *)v81;
      v99 = *(_QWORD *)(v81 + 8);
      *(_QWORD *)(v80 + 8) = v99;
      *(_QWORD *)(v80 + 16) = *(_QWORD *)(v81 + 16);
      v100 = *(_QWORD *)(v81 + 24);
      *(_QWORD *)(v80 + 24) = v100;
      *(_QWORD *)(v80 + 32) = *(_QWORD *)(v81 + 32);
      v101 = *(_QWORD *)(v81 + 40);
      *(_QWORD *)(v80 + 40) = v101;
      *(_QWORD *)(v80 + 48) = *(_QWORD *)(v81 + 48);
      v102 = *(_QWORD *)(v81 + 56);
      *(_QWORD *)(v80 + 56) = v102;
      *(_BYTE *)(v80 + 64) = *(_BYTE *)(v81 + 64);
      *(_BYTE *)(v80 + 65) = *(_BYTE *)(v81 + 65);
    }
    swift_bridgeObjectRetain(v99);
LABEL_35:
    swift_bridgeObjectRetain(v100);
    swift_bridgeObjectRetain(v101);
    swift_bridgeObjectRetain(v102);
    swift_storeEnumTagMultiPayload(v80, v188, v98);
    v140 = 0;
    goto LABEL_36;
  }
LABEL_37:
  v164 = v30[16];
  v165 = v17 + v164;
  v166 = v18 + v164;
  v167 = type metadata accessor for Date(0);
  v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 24);
  v168(v165, v166, v167);
  v168(v17 + v30[17], v18 + v30[17], v167);
  v169 = v30[18];
  v170 = v17 + v169;
  v171 = v18 + v169;
  v172 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v170, v171, v172);
  v173 = v30[19];
  v174 = (_QWORD *)(v17 + v173);
  v175 = (_QWORD *)(v18 + v173);
  *v174 = *v175;
  v174[1] = v175[1];
  v176 = v30[20];
  v177 = (_QWORD *)(v17 + v176);
  v178 = (_QWORD *)(v18 + v176);
  *v177 = *v178;
  v177[1] = v178[1];
  return a1;
}

uint64_t sub_1003900DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t active;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v5 = a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  *(_QWORD *)(v5 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = v5 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[8];
  v16 = v5 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + 16) = v18;
  v19 = *(_OWORD *)(a2 + v15 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(a2 + v15 + 32);
  *(_OWORD *)(v16 + 48) = v19;
  *(_OWORD *)(v16 + 89) = *(_OWORD *)(a2 + v15 + 89);
  v20 = *(_OWORD *)(a2 + v15 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(a2 + v15 + 64);
  *(_OWORD *)(v16 + 80) = v20;
  *(_QWORD *)(v16 + 112) = *(_QWORD *)(a2 + v15 + 112);
  v21 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v22 = v21[9];
  v23 = v16 + v22;
  v24 = v17 + v22;
  v25 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)(v16 + v21[10]) = *(_OWORD *)(v17 + v21[10]);
  *(_QWORD *)(v16 + v21[11]) = *(_QWORD *)(v17 + v21[11]);
  v26 = v21[12];
  v27 = (_OWORD *)(v16 + v26);
  v28 = (_OWORD *)(v17 + v26);
  *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v28 + 9);
  *v27 = *v28;
  v29 = v21[13];
  v30 = (char *)(v16 + v29);
  v31 = (char *)(v17 + v29);
  v32 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    v33 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v30, v31, v34);
    *(_QWORD *)&v30[*(int *)(v32 + 20)] = *(_QWORD *)&v31[*(int *)(v32 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  v35 = v21[14];
  v36 = (char *)(v16 + v35);
  v37 = (char *)(v17 + v35);
  v38 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
  {
    v39 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v36, v37, v40);
    *(_QWORD *)&v36[v38[5]] = *(_QWORD *)&v37[v38[5]];
    *(_OWORD *)&v36[v38[6]] = *(_OWORD *)&v37[v38[6]];
    *(_OWORD *)&v36[v38[7]] = *(_OWORD *)&v37[v38[7]];
    *(_OWORD *)&v36[v38[8]] = *(_OWORD *)&v37[v38[8]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
  }
  v41 = v21[15];
  v42 = (_QWORD *)(v16 + v41);
  v43 = (_QWORD *)(v17 + v41);
  v44 = type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v43) == 1)
  {
    *v42 = *v43;
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v46 = *(int *)(active + 20);
    v47 = (char *)v42 + v46;
    v48 = (char *)v43 + v46;
    v49 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    v50 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(_QWORD *)&v47[v50[5]] = *(_QWORD *)&v48[v50[5]];
    *(_QWORD *)&v47[v50[6]] = *(_QWORD *)&v48[v50[6]];
    *(_QWORD *)&v47[v50[7]] = *(_QWORD *)&v48[v50[7]];
    v51 = *(int *)(active + 24);
    v52 = (_OWORD *)((char *)v42 + v51);
    v53 = (_OWORD *)((char *)v43 + v51);
    v54 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v53) == 2)
    {
      *v52 = *v53;
      v55 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v56 = v55[5];
      v83 = v5;
      v84 = v44;
      v57 = (char *)v52 + v56;
      v58 = (char *)v53 + v56;
      v59 = type metadata accessor for AttributedString(0);
      v60 = v57;
      v61 = v58;
      v5 = v83;
      v44 = v84;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v60, v61, v59);
      *(_OWORD *)((char *)v52 + v55[6]) = *(_OWORD *)((char *)v53 + v55[6]);
      *(_OWORD *)((char *)v52 + v55[7]) = *(_OWORD *)((char *)v53 + v55[7]);
      *(_OWORD *)((char *)v52 + v55[8]) = *(_OWORD *)((char *)v53 + v55[8]);
      *(_OWORD *)((char *)v52 + v55[9]) = *(_OWORD *)((char *)v53 + v55[9]);
      *(_OWORD *)((char *)v52 + v55[10]) = *(_OWORD *)((char *)v53 + v55[10]);
      *((_BYTE *)v52 + v55[11]) = *((_BYTE *)v53 + v55[11]);
      swift_storeEnumTagMultiPayload(v52, v54, 2);
    }
    else
    {
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    v70 = v42;
    v71 = v44;
    v72 = 1;
  }
  else
  {
    v62 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v43) == 2)
    {
      *(_OWORD *)v42 = *(_OWORD *)v43;
      v63 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v64 = v63[5];
      v65 = (char *)v42 + v64;
      v85 = v44;
      v66 = v5;
      v67 = (char *)v43 + v64;
      v68 = type metadata accessor for AttributedString(0);
      v69 = v67;
      v5 = v66;
      v44 = v85;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v65, v69, v68);
      *(_OWORD *)((char *)v42 + v63[6]) = *(_OWORD *)((char *)v43 + v63[6]);
      *(_OWORD *)((char *)v42 + v63[7]) = *(_OWORD *)((char *)v43 + v63[7]);
      *(_OWORD *)((char *)v42 + v63[8]) = *(_OWORD *)((char *)v43 + v63[8]);
      *(_OWORD *)((char *)v42 + v63[9]) = *(_OWORD *)((char *)v43 + v63[9]);
      *(_OWORD *)((char *)v42 + v63[10]) = *(_OWORD *)((char *)v43 + v63[10]);
      *((_BYTE *)v42 + v63[11]) = *((_BYTE *)v43 + v63[11]);
      swift_storeEnumTagMultiPayload(v42, v62, 2);
    }
    else
    {
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    v70 = v42;
    v71 = v44;
    v72 = 0;
  }
  swift_storeEnumTagMultiPayload(v70, v71, v72);
  v73 = v21[16];
  v74 = v16 + v73;
  v75 = v17 + v73;
  v76 = type metadata accessor for Date(0);
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 32);
  v77(v74, v75, v76);
  v77(v16 + v21[17], v17 + v21[17], v76);
  v78 = v21[18];
  v79 = v16 + v78;
  v80 = v17 + v78;
  v81 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
  *(_OWORD *)(v16 + v21[19]) = *(_OWORD *)(v17 + v21[19]);
  *(_OWORD *)(v16 + v21[20]) = *(_OWORD *)(v17 + v21[20]);
  return v5;
}

uint64_t sub_1003906C0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  void *v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t active;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v112;
  uint64_t v113;
  uint64_t v114;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = a3[5];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  v16 = a1 + v15;
  v17 = (uint64_t)a2 + v15;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v15));
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = *(uint64_t *)((char *)a2 + v19 + 8);
  *(_QWORD *)v20 = *(uint64_t *)((char *)a2 + v19);
  *(_QWORD *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v21 + 40);
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_QWORD *)(v20 + 40) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v21 + 56);
  *(_QWORD *)(v20 + 48) = *(_QWORD *)(v21 + 48);
  *(_QWORD *)(v20 + 56) = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v21 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 72) = *(_QWORD *)(v21 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 80) = *(_QWORD *)(v21 + 80);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v21 + 96);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(v21 + 88);
  *(_QWORD *)(v20 + 96) = v26;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 104) = *(_BYTE *)(v21 + 104);
  v27 = *(void **)(v20 + 112);
  *(_QWORD *)(v20 + 112) = *(_QWORD *)(v21 + 112);

  v28 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v29 = v28[9];
  v30 = v20 + v29;
  v31 = v21 + v29;
  v32 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  *(_OWORD *)(v20 + v28[10]) = *(_OWORD *)(v21 + v28[10]);
  *(_QWORD *)(v20 + v28[11]) = *(_QWORD *)(v21 + v28[11]);
  swift_bridgeObjectRelease();
  v33 = v28[12];
  v34 = v20 + v33;
  v35 = v21 + v33;
  v36 = *(_QWORD *)(v35 + 16);
  v37 = *(_BYTE *)(v35 + 24);
  v38 = *(void **)v34;
  v39 = *(void **)(v34 + 8);
  v40 = *(_QWORD *)(v34 + 16);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_QWORD *)(v34 + 16) = v36;
  v41 = *(_BYTE *)(v34 + 24);
  *(_BYTE *)(v34 + 24) = v37;
  sub_1001A44FC(v38, v39, v40, v41);
  v42 = v28[13];
  v43 = (char *)(v20 + v42);
  v44 = (char *)(v21 + v42);
  v45 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v43, v44, v48);
      *(_QWORD *)&v43[*(int *)(v45 + 20)] = *(_QWORD *)&v44[*(int *)(v45 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v47)
  {
    sub_1000215BC((uint64_t)v43, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_10:
    v49 = sub_1000BA294(&qword_100BC4BB8);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_11;
  }
  v84 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 40))(v43, v44, v84);
  *(_QWORD *)&v43[*(int *)(v45 + 20)] = *(_QWORD *)&v44[*(int *)(v45 + 20)];
LABEL_11:
  v50 = v28[14];
  v51 = (char *)(v20 + v50);
  v52 = (char *)(v21 + v50);
  v53 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, (uint64_t)v53);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, (uint64_t)v53);
  if (v54)
  {
    if (!v55)
    {
      v56 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v51, v52, v56);
      *(_QWORD *)&v51[v53[5]] = *(_QWORD *)&v52[v53[5]];
      *(_OWORD *)&v51[v53[6]] = *(_OWORD *)&v52[v53[6]];
      *(_OWORD *)&v51[v53[7]] = *(_OWORD *)&v52[v53[7]];
      *(_OWORD *)&v51[v53[8]] = *(_OWORD *)&v52[v53[8]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, (uint64_t)v53);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v55)
  {
    sub_1000215BC((uint64_t)v51, type metadata accessor for PeakUpperMarkModel);
LABEL_16:
    v57 = sub_1000BA294(&qword_100BC4BC0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_17;
  }
  v85 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 40))(v51, v52, v85);
  *(_QWORD *)&v51[v53[5]] = *(_QWORD *)&v52[v53[5]];
  v86 = v53[6];
  v87 = &v51[v86];
  v88 = &v52[v86];
  v90 = *(_QWORD *)v88;
  v89 = *((_QWORD *)v88 + 1);
  *(_QWORD *)v87 = v90;
  *((_QWORD *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v91 = v53[7];
  v92 = &v51[v91];
  v93 = &v52[v91];
  v95 = *(_QWORD *)v93;
  v94 = *((_QWORD *)v93 + 1);
  *(_QWORD *)v92 = v95;
  *((_QWORD *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  v96 = v53[8];
  v97 = &v51[v96];
  v98 = &v52[v96];
  v100 = *(_QWORD *)v98;
  v99 = *((_QWORD *)v98 + 1);
  *(_QWORD *)v97 = v100;
  *((_QWORD *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
LABEL_17:
  if ((uint64_t *)a1 != a2)
  {
    v58 = v28[15];
    v59 = (_QWORD *)(v20 + v58);
    v60 = (_QWORD *)(v21 + v58);
    sub_1000215BC(v20 + v58, type metadata accessor for DetailHeroChartLollipopModel);
    v61 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v60) == 1)
    {
      *v59 = *v60;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v63 = *(int *)(active + 20);
      v64 = (char *)v59 + v63;
      v65 = (char *)v60 + v63;
      v66 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
      v67 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v64[v67[5]] = *(_QWORD *)&v65[v67[5]];
      *(_QWORD *)&v64[v67[6]] = *(_QWORD *)&v65[v67[6]];
      *(_QWORD *)&v64[v67[7]] = *(_QWORD *)&v65[v67[7]];
      v68 = *(int *)(active + 24);
      v69 = (_OWORD *)((char *)v59 + v68);
      v70 = (_OWORD *)((char *)v60 + v68);
      v71 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v70) == 2)
      {
        *v69 = *v70;
        v72 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v73 = v72[5];
        v113 = v61;
        v74 = (char *)v69 + v73;
        v112 = (char *)v70 + v73;
        v75 = type metadata accessor for AttributedString(0);
        v76 = v74;
        v61 = v113;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v76, v112, v75);
        *(_OWORD *)((char *)v69 + v72[6]) = *(_OWORD *)((char *)v70 + v72[6]);
        *(_OWORD *)((char *)v69 + v72[7]) = *(_OWORD *)((char *)v70 + v72[7]);
        *(_OWORD *)((char *)v69 + v72[8]) = *(_OWORD *)((char *)v70 + v72[8]);
        *(_OWORD *)((char *)v69 + v72[9]) = *(_OWORD *)((char *)v70 + v72[9]);
        *(_OWORD *)((char *)v69 + v72[10]) = *(_OWORD *)((char *)v70 + v72[10]);
        *((_BYTE *)v69 + v72[11]) = *((_BYTE *)v70 + v72[11]);
        swift_storeEnumTagMultiPayload(v69, v71, 2);
      }
      else
      {
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      v101 = 1;
    }
    else
    {
      v77 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v60) == 2)
      {
        *(_OWORD *)v59 = *(_OWORD *)v60;
        v78 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v79 = v78[5];
        v80 = (char *)v59 + v79;
        v114 = v61;
        v81 = (char *)v60 + v79;
        v82 = type metadata accessor for AttributedString(0);
        v83 = v81;
        v61 = v114;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v83, v82);
        *(_OWORD *)((char *)v59 + v78[6]) = *(_OWORD *)((char *)v60 + v78[6]);
        *(_OWORD *)((char *)v59 + v78[7]) = *(_OWORD *)((char *)v60 + v78[7]);
        *(_OWORD *)((char *)v59 + v78[8]) = *(_OWORD *)((char *)v60 + v78[8]);
        *(_OWORD *)((char *)v59 + v78[9]) = *(_OWORD *)((char *)v60 + v78[9]);
        *(_OWORD *)((char *)v59 + v78[10]) = *(_OWORD *)((char *)v60 + v78[10]);
        *((_BYTE *)v59 + v78[11]) = *((_BYTE *)v60 + v78[11]);
        swift_storeEnumTagMultiPayload(v59, v77, 2);
      }
      else
      {
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      v101 = 0;
    }
    swift_storeEnumTagMultiPayload(v59, v61, v101);
  }
  v102 = v28[16];
  v103 = v20 + v102;
  v104 = v21 + v102;
  v105 = type metadata accessor for Date(0);
  v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 40);
  v106(v103, v104, v105);
  v106(v20 + v28[17], v21 + v28[17], v105);
  v107 = v28[18];
  v108 = v20 + v107;
  v109 = v21 + v107;
  v110 = type metadata accessor for DetailChartGradientModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 40))(v108, v109, v110);
  *(_OWORD *)(v20 + v28[19]) = *(_OWORD *)(v21 + v28[19]);
  *(_OWORD *)(v20 + v28[20]) = *(_OWORD *)(v21 + v28[20]);
  return a1;
}

uint64_t sub_100390E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100390E80);
}

uint64_t sub_100390E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_1000BA294(&qword_100BCD380);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a3[5];
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1000D8F44();
    v8 = a3[8];
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100390F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100390F2C);
}

void sub_100390F2C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000BA294(&qword_100BCD380);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[7] + 24) = (a2 - 1);
      sub_100079F70();
      return;
    }
    v9 = sub_1000D8F44();
    v10 = a4[8];
  }
  _s7Weather24LocationCompositionStateOwst_0(a1 + v10, a2, a2, v9);
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDCA28;
  if (!qword_100BDCA28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for TemperatureAveragesHeroChartView);
  return result;
}

void sub_100390FF8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = "\t";
  sub_100158B94(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[3] = &unk_1009995B0;
    v4 = type metadata accessor for TemperatureAveragesHeroChartViewModel(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003910A0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2A4C, 1);
}

void sub_1003910B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BDCA70);
  sub_1003910F0(v2, (char *)(a2 + *(int *)(v4 + 44)));
  sub_10004A298();
}

uint64_t sub_1003910F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(char *, char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (**v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (**v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59[24];

  v58 = a2;
  v53 = type metadata accessor for ConditionDetailLegendView(0);
  __chkstk_darwin(v53);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1000BA294(&qword_100BDCA78);
  __chkstk_darwin(v56);
  v55 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v57 = (uint64_t)&v50 - v7;
  v51 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v51);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BDCA80);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BDCA88);
  v52 = *(void (***)(char *, char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v54 = a1;
  sub_10039154C(a1, (uint64_t)v12);
  v19 = enum case for DynamicTypeSize.accessibility1(_:);
  v20 = type metadata accessor for DynamicTypeSize(0);
  v21 = (void (**)(char *, char *, uint64_t))&type metadata accessor for DynamicTypeSize;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v9, v19, v20);
  sub_10007A100((uint64_t)&qword_100C0A550);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v9, v9, v20, v22) & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v23 = sub_1003962C8();
  sub_10034AEE4((uint64_t)&qword_100BC4E30);
  View.dynamicTypeSize<A>(_:)(v9, v10, v51, v23, v24);
  sub_100021A14((uint64_t)v9, (uint64_t *)&unk_100C0A510);
  sub_100021A14((uint64_t)v12, &qword_100BDCA80);
  v25 = v52;
  v52[4](v18, v15, v13);
  v26 = v54 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartView(0) + 32);
  v27 = *(_QWORD *)(v26 + 80);
  v28 = *(_QWORD *)(v26 + 88);
  v29 = *(_QWORD *)(v26 + 96);
  v30 = *(_BYTE *)(v26 + 104);
  swift_bridgeObjectRetain(v27);
  v31 = swift_bridgeObjectRetain(v29);
  Text.Measurements.init()(v31);
  *(_QWORD *)v4 = v27;
  *((_QWORD *)v4 + 1) = v28;
  *((_QWORD *)v4 + 2) = v29;
  v4[24] = v30;
  v21 = v25;
  if (qword_100BC20C0 != -1)
LABEL_5:
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, v59, 1, 0);
  sub_10040447C();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = static Edge.Set.all.getter(v40);
  v42 = v55;
  sub_100080C0C((uint64_t)v4, v55, type metadata accessor for ConditionDetailLegendView);
  v43 = v42 + *(int *)(v56 + 36);
  *(_BYTE *)v43 = v41;
  *(_QWORD *)(v43 + 8) = v33;
  *(_QWORD *)(v43 + 16) = v35;
  *(_QWORD *)(v43 + 24) = v37;
  *(_QWORD *)(v43 + 32) = v39;
  *(_BYTE *)(v43 + 40) = 0;
  sub_1000215BC((uint64_t)v4, type metadata accessor for ConditionDetailLegendView);
  v44 = v57;
  sub_1000787D4(v42, v57, &qword_100BDCA78);
  v45 = v21[2];
  v45(v15, v18, v13);
  sub_100037768(v44, v42, &qword_100BDCA78);
  v46 = v58;
  v45(v58, v15, v13);
  v47 = sub_1000BA294(&qword_100BDCAA8);
  sub_100037768(v42, (uint64_t)&v46[*(int *)(v47 + 48)], &qword_100BDCA78);
  sub_100021A14(v44, &qword_100BDCA78);
  v48 = v21[1];
  ((void (*)(char *, uint64_t))v48)(v18, v13);
  sub_100021A14(v42, &qword_100BDCA78);
  return ((uint64_t (*)(char *, uint64_t))v48)(v15, v13);
}

void sub_10039154C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t OpaqueTypeConformance2;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  double *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  __int128 v115;
  uint64_t v116;
  char v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  double v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  double *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char v209[8];
  uint64_t v210;
  char v211[8];
  uint64_t v212;
  char v213[8];
  uint64_t v214;
  char v215[8];
  _OWORD v216[2];
  uint64_t v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;

  v208 = a1;
  v205 = a2;
  v204 = type metadata accessor for DynamicTypeSize(0);
  v203 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v202 = (char *)&v155 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for AccessibilityChildBehavior(0);
  v200 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v186);
  v196 = (double *)((char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  v180 = *(_QWORD *)(v6 - 8);
  v181 = *(_QWORD *)(v180 + 64);
  __chkstk_darwin(v6);
  v179 = (uint64_t)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for AutomaticScaleDomain(0);
  v172 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v164 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDCAB0);
  __chkstk_darwin(v9);
  v158 = (uint64_t)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for PlotDimensionScaleRange(0);
  v162 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v156 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_1000BA294(&qword_100BDCAB8);
  v159 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1000BA294(&qword_100BDCAC0);
  v165 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v206 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_1000BA294(&qword_100BDCAC8);
  v169 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v160 = (char *)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_1000BA294(&qword_100BDCAD0);
  v173 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v166 = (char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1000BA294(&qword_100BDCAD8);
  v178 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v168 = (char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_1000BA294(&qword_100BDCAE0);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v207 = (char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1000BA294(&qword_100BDCAE8);
  __chkstk_darwin(v175);
  v174 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_1000BA294(&qword_100BDCAF0);
  __chkstk_darwin(v185);
  v184 = (uint64_t)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_1000BA294(&qword_100BDCAF8);
  v189 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v188 = (char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_1000BA294(&qword_100BDCB00);
  __chkstk_darwin(v191);
  v192 = (char *)&v155 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_1000BA294(&qword_100BDCB08);
  v195 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v197 = (char *)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v187 = (char *)&v155 - v24;
  __chkstk_darwin(v25);
  v194 = (char *)&v155 - v26;
  v27 = type metadata accessor for DetailHeroChartHeaderView(0);
  __chkstk_darwin(v27);
  v193 = (uint64_t)&v155 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char **)((char *)&v155 - v30);
  v32 = (uint64_t *)(a1 + *(int *)(v6 + 32));
  v33 = v32[1];
  v176 = (_QWORD *)*v32;
  v35 = v32[2];
  v34 = v32[3];
  v36 = v32[4];
  v37 = v32[5];
  v38 = v32[6];
  v39 = v32[7];
  v40 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_100080C0C((uint64_t)v32 + *(int *)(v40 + 60), (uint64_t)v31 + *(int *)(v27 + 20), type metadata accessor for DetailHeroChartLollipopModel);
  *v31 = v176;
  v31[1] = v33;
  v31[2] = v35;
  v31[3] = v34;
  v31[4] = v36;
  v31[5] = v37;
  v31[6] = v38;
  v31[7] = v39;
  v176 = v31;
  *(_QWORD *)&v218 = 0x3FF0000000000000;
  v41 = sub_10010D1D0();
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v39);
  ScaledMetric.init(wrappedValue:)(&v218, &type metadata for Double, v41);
  v214 = v208;
  v42 = sub_1000BA294(&qword_100BDCB10);
  v43 = sub_10039634C();
  v44 = v155;
  v45 = Chart.init(content:)(sub_100396344, v213, v42, v43);
  v46 = v156;
  static PositionScaleRange<>.plotDimension.getter(v45);
  v47 = type metadata accessor for ScaleType(0);
  v48 = v158;
  _s7Weather24LocationCompositionStateOwst_0(v158, 1, 1, v47);
  sub_10034AEE4((uint64_t)&unk_100BDCBC0);
  v50 = v49;
  v51 = v157;
  v52 = v161;
  View.chartXScale<A>(range:type:)(v46, v48, v157, v161, v49, &protocol witness table for PlotDimensionScaleRange);
  sub_100021A14(v48, &qword_100BDCAB0);
  v53 = *(void (**)(char *, uint64_t))(v162 + 8);
  v53(v46, v52);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v44, v51);
  v54 = v164;
  v55 = static ScaleDomain<>.automatic(includesZero:reversed:)(0, 2);
  static PositionScaleRange<>.plotDimension.getter(v55);
  _s7Weather24LocationCompositionStateOwst_0(v48, 1, 1, v47);
  *(_QWORD *)&v218 = v51;
  *((_QWORD *)&v218 + 1) = v52;
  *(_QWORD *)&v219 = v50;
  *((_QWORD *)&v219 + 1) = &protocol witness table for PlotDimensionScaleRange;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(range:type:)>>, 1);
  v57 = v160;
  v58 = v163;
  v59 = v170;
  v60 = v206;
  View.chartYScale<A, B>(domain:range:type:)(v54, v46, v48, v163, v170, v52, OpaqueTypeConformance2, &protocol witness table for AutomaticScaleDomain, &protocol witness table for PlotDimensionScaleRange);
  sub_100021A14(v48, &qword_100BDCAB0);
  v53(v46, v52);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v54, v59);
  (*(void (**)(char *, uint64_t))(v165 + 8))(v60, v58);
  v61 = v208;
  v212 = v208;
  v62 = sub_1000BA294(&qword_100BDCBC8);
  *(_QWORD *)&v218 = v58;
  *((_QWORD *)&v218 + 1) = v59;
  *(_QWORD *)&v219 = v52;
  *((_QWORD *)&v219 + 1) = OpaqueTypeConformance2;
  *(_QWORD *)&v220 = &protocol witness table for AutomaticScaleDomain;
  *((_QWORD *)&v220 + 1) = &protocol witness table for PlotDimensionScaleRange;
  v63 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.chartYScale<A, B>(domain:range:type:)>>, 1);
  sub_10034AEE4((uint64_t)&unk_100BDCBD0);
  v65 = v64;
  v66 = v166;
  v67 = v167;
  View.chartXAxis<A>(content:)(sub_1003967FC, v211, v167, v62, v63, v64);
  v68 = v67;
  (*(void (**)(char *, uint64_t))(v169 + 8))(v57, v67);
  v210 = v61;
  v69 = v61;
  v70 = sub_1000BA294(&qword_100BDCBD8);
  *(_QWORD *)&v218 = v68;
  *((_QWORD *)&v218 + 1) = v62;
  *(_QWORD *)&v219 = v63;
  *((_QWORD *)&v219 + 1) = v65;
  v71 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
  sub_10034AEE4((uint64_t)&unk_100BDCBE0);
  v73 = v72;
  v74 = v168;
  v75 = v171;
  View.chartYAxis<A>(content:)(sub_100396818, v209, v171, v70, v71, v72);
  (*(void (**)(char *, uint64_t))(v173 + 8))(v66, v75);
  v76 = v179;
  sub_100080C0C(v69, v179, type metadata accessor for TemperatureAveragesHeroChartView);
  v77 = *(unsigned __int8 *)(v180 + 80);
  v78 = (v77 + 16) & ~v77;
  v79 = swift_allocObject(&unk_100B70580, v78 + v181, v77 | 7);
  sub_10007802C(v76, v79 + v78, type metadata accessor for TemperatureAveragesHeroChartView);
  v81 = static Alignment.center.getter(v80);
  v83 = v82;
  v84 = sub_1000BA294(&qword_100BDCBE8);
  *(_QWORD *)&v218 = v75;
  *((_QWORD *)&v218 + 1) = v70;
  *(_QWORD *)&v219 = v71;
  *((_QWORD *)&v219 + 1) = v73;
  v85 = swift_getOpaqueTypeConformance2(&v218, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
  sub_10034AEE4((uint64_t)&unk_100BDCBF0);
  v86 = v177;
  View.chartOverlay<A>(alignment:content:)(v81, v83, sub_100396838, v79, v177, v84, v85, v87);
  v88 = swift_release(v79);
  v89 = (*(uint64_t (**)(char *, uint64_t, __n128))(v178 + 8))(v74, v86, v88);
  v90 = static Alignment.center.getter(v89);
  v92 = v91;
  v93 = (uint64_t)v174;
  v94 = (uint64_t)&v174[*(int *)(v175 + 36)];
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, &v218, 33, 0);
  v95 = sub_1004043D0();
  v96 = v196;
  v97 = (char *)v196 + *(int *)(v186 + 20);
  v98 = enum case for RoundedCornerStyle.continuous(_:);
  v99 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 104))(v97, v98, v99);
  *v96 = v95;
  v96[1] = v95;
  sub_10040441C();
  v101 = v100;
  swift_endAccess(&v218);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v216, 0, 0, 1.0, 10.0, 0.0);
  sub_100080C0C((uint64_t)v96, v94, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v102 = v94 + *(int *)(sub_1000BA294(&qword_100BDCBF8) + 36);
  v103 = v216[1];
  *(_OWORD *)v102 = v216[0];
  *(_OWORD *)(v102 + 16) = v103;
  *(_QWORD *)(v102 + 32) = v217;
  v104 = sub_1000BA294(&qword_100BDCC00);
  *(_QWORD *)(v94 + *(int *)(v104 + 52)) = v101;
  *(_WORD *)(v94 + *(int *)(v104 + 56)) = 256;
  v105 = static Alignment.center.getter(v104);
  v107 = v106;
  v108 = (uint64_t *)(v94 + *(int *)(sub_1000BA294(&qword_100BDCC08) + 36));
  *v108 = v105;
  v108[1] = v107;
  sub_1000215BC((uint64_t)v96, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v109 = (uint64_t *)(v94 + *(int *)(sub_1000BA294(&qword_100BDCC10) + 36));
  *v109 = v90;
  v109[1] = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v182 + 32))(v93, v207, v183);
  v110 = sub_1004043F8();
  static Alignment.center.getter(v111);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v110, 0);
  v112 = v184;
  sub_100037768(v93, v184, &qword_100BDCAE8);
  v113 = v185;
  v114 = (_OWORD *)(v112 + *(int *)(v185 + 36));
  v115 = v219;
  *v114 = v218;
  v114[1] = v115;
  v114[2] = v220;
  sub_100021A14(v93, &qword_100BDCAE8);
  v116 = *(_QWORD *)v208;
  v117 = *(_BYTE *)(v208 + 8);
  sub_10008D47C(*(_QWORD *)v208, v117);
  sub_100109B54();
  v119 = v118;
  v120 = sub_1000B15F8(v116, v117);
  v121 = v112;
  if ((v119 & 1) != 0)
  {
    v122 = v199;
    static AccessibilityChildBehavior.contain.getter(v120);
  }
  else
  {
    v122 = v199;
    static AccessibilityChildBehavior.ignore.getter(v120);
  }
  sub_100397180((uint64_t)&unk_100BDCC18);
  v123 = v188;
  View.accessibilityElement(children:)(v122, v113, v124);
  (*(void (**)(char *, uint64_t))(v200 + 8))(v122, v201);
  sub_100021A14(v121, &qword_100BDCAF0);
  v126 = static Edge.Set.horizontal.getter(v125);
  swift_beginAccess(&unk_100BE0830, v215, 1, 0);
  v127 = sub_10040908C();
  v128 = EdgeInsets.init(_all:)(v127);
  v130 = v129;
  v132 = v131;
  v134 = v133;
  v135 = v189;
  v136 = (uint64_t)v192;
  v137 = v190;
  (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v192, v123, v190);
  v138 = v191;
  v139 = v136 + *(int *)(v191 + 36);
  *(_BYTE *)v139 = v126;
  *(double *)(v139 + 8) = v128;
  *(_QWORD *)(v139 + 16) = v130;
  *(_QWORD *)(v139 + 24) = v132;
  *(_QWORD *)(v139 + 32) = v134;
  *(_BYTE *)(v139 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v135 + 8))(v123, v137);
  v140 = v203;
  v141 = v202;
  v142 = v204;
  (*(void (**)(char *, _QWORD, uint64_t))(v203 + 104))(v202, enum case for DynamicTypeSize.large(_:), v204);
  v143 = sub_100396ABC();
  v144 = v187;
  View.dynamicTypeSize(_:)(v141, v138, v143);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v142);
  sub_100021A14(v136, &qword_100BDCB00);
  v145 = v195;
  v146 = v194;
  v147 = v198;
  (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v144, v198);
  v148 = (uint64_t)v176;
  v149 = v193;
  sub_100080C0C((uint64_t)v176, v193, type metadata accessor for DetailHeroChartHeaderView);
  v150 = *(void (**)(char *, char *, uint64_t))(v145 + 16);
  v151 = v197;
  v150(v197, v146, v147);
  v152 = v205;
  sub_100080C0C(v149, v205, type metadata accessor for DetailHeroChartHeaderView);
  v153 = sub_1000BA294(&qword_100BDCC38);
  v150((char *)(v152 + *(int *)(v153 + 48)), v151, v147);
  v154 = *(void (**)(char *, uint64_t))(v145 + 8);
  v154(v146, v147);
  sub_1000215BC(v148, type metadata accessor for DetailHeroChartHeaderView);
  v154(v151, v147);
  sub_1000215BC(v149, type metadata accessor for DetailHeroChartHeaderView);
}

uint64_t sub_1003925EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (**v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t OpaqueTypeConformance2;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, void (**)(char *, uint64_t), uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, char *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __n128 v147;
  uint64_t v148;
  char *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  void (*v177)(char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t active;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t KeyPath;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  void (**v216)(char *, uint64_t);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  void *v233;
  void *v234;
  uint64_t v235;

  v219 = a2;
  v190 = type metadata accessor for LollipopMark(0);
  __chkstk_darwin(v190);
  v193 = (uint64_t)&v179 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  __chkstk_darwin(active);
  v192 = (uint64_t)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for PeakUpperMark(0);
  __chkstk_darwin(v194);
  v181 = (uint64_t)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v182 = (uint64_t)&v179 - v7;
  v8 = sub_1000BA294(&qword_100BC4BC0);
  __chkstk_darwin(v8);
  v188 = (uint64_t)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for PeakUpperMarkModel(0);
  __chkstk_darwin(v187);
  v179 = (uint64_t)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v180 = (uint64_t)&v179 - v12;
  v13 = sub_1000BA294(&qword_100BDCBA8);
  __chkstk_darwin(v13);
  v191 = (uint64_t)&v179 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v215);
  v220 = (uint64_t)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BDCB98);
  __chkstk_darwin(v16);
  v218 = (uint64_t)&v179 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v227 = (uint64_t)&v179 - v19;
  v186 = type metadata accessor for Date(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v184 = (char *)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BC4BB8);
  __chkstk_darwin(v21);
  v214 = (char *)&v179 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  __chkstk_darwin(v213);
  v183 = (uint64_t)&v179 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BDCB80);
  __chkstk_darwin(v24);
  v217 = (uint64_t)&v179 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v228 = (uint64_t)&v179 - v27;
  v209 = sub_1000BA294(&qword_100BDCB50);
  v210 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v208 = (char *)&v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_1000BA294(&qword_100BDCB48);
  v212 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v207 = (char *)&v179 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_1000BA294(&qword_100BDCD20);
  v224 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v225 = (char *)&v179 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v223 = (char *)&v179 - v32;
  v33 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  __chkstk_darwin(v33);
  v36 = (char *)&v179 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1000BA294(&qword_100BDCB28);
  v205 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v179 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_1000BA294(&qword_100BDCB20);
  v216 = *(void (***)(char *, uint64_t))(v206 - 8);
  __chkstk_darwin(v206);
  v41 = (char *)&v179 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_1000BA294(&qword_100BDCD28);
  v230 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v43 = (void (**)(char *, uint64_t))((char *)&v179 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v44);
  v229 = (char *)&v179 - v45;
  v46 = *(int *)(v33 + 32);
  v47 = a1;
  v202 = a1;
  v221 = a1 + v46;
  v48 = *(_QWORD *)(a1 + v46 + 72);
  v235 = v48;
  KeyPath = swift_getKeyPath(&unk_100999678);
  v198 = v36;
  sub_100080C0C(v47, (uint64_t)v36, type metadata accessor for TemperatureAveragesHeroChartView);
  v49 = *(unsigned __int8 *)(v34 + 80);
  v200 = ((v49 + 16) & ~v49) + v35;
  v50 = (v49 + 16) & ~v49;
  v201 = v50;
  v199 = v49 | 7;
  v51 = swift_allocObject(&unk_100B70620, v200, v49 | 7);
  sub_10007802C((uint64_t)v36, v51 + v50, type metadata accessor for TemperatureAveragesHeroChartView);
  swift_bridgeObjectRetain(v48);
  v196 = sub_1000BA294(&qword_100BDCD30);
  v195 = sub_1000BA294(&qword_100BDCD38);
  sub_10034AEE4((uint64_t)&unk_100BDCD40);
  v53 = v52;
  v204 = v52;
  sub_10007A100((uint64_t)&qword_100BC3588);
  v55 = v54;
  v203 = v54;
  v56 = type metadata accessor for AreaMark(255);
  v57 = sub_100075EB0(&qword_100BDCB38);
  sub_10034AEE4((uint64_t)&unk_100BDCB40);
  v231 = v56;
  v232 = (void *)v57;
  v233 = &protocol witness table for AreaMark;
  v234 = v58;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v60 = v196;
  ForEach<>.init(_:id:content:)(&v235, KeyPath, sub_1003975D8, v51, v196, v195, v53, v55, OpaqueTypeConformance2);
  v61 = sub_100396480();
  ChartContent.interpolationMethod(_:)(0, 0, v37, v61);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v39, v37);
  v231 = v37;
  v232 = (void *)v61;
  v62 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
  v63 = v206;
  ChartContent.alignsMarkStylesWithPlotArea(_:)(1, v206, v62);
  v216[1](v41, v63);
  v64 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v230 + 32);
  v216 = v43;
  v64(v229, v43, v222);
  v65 = v221;
  v235 = *(_QWORD *)(v221 + 64);
  v66 = v235;
  v67 = swift_getKeyPath(&unk_100999678);
  v68 = (uint64_t)v198;
  sub_100080C0C(v202, (uint64_t)v198, type metadata accessor for TemperatureAveragesHeroChartView);
  v69 = swift_allocObject(&unk_100B70648, v200, v199);
  sub_10007802C(v68, v69 + v201, type metadata accessor for TemperatureAveragesHeroChartView);
  swift_bridgeObjectRetain(v66);
  v70 = sub_1000BA294(&qword_100BDCD48);
  v71 = sub_100075EB0(&qword_100BDCB60);
  v72 = type metadata accessor for RectangleMark(255);
  v73 = sub_100075EB0(&qword_100BDCB68);
  v74 = sub_100075EB0(&qword_100BDCB70);
  v231 = type metadata accessor for LineMark(255);
  v232 = &protocol witness table for LineMark;
  v75 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  v231 = v74;
  v232 = (void *)v75;
  v76 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.shadow(color:radius:x:y:)>>, 1);
  v231 = v73;
  v232 = &type metadata for LinearGradient;
  v233 = (void *)v76;
  v234 = &protocol witness table for LinearGradient;
  v77 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v231 = v71;
  v232 = (void *)v72;
  v233 = (void *)v77;
  v234 = &protocol witness table for RectangleMark;
  v78 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.mask<A>(content:)>>, 1);
  v79 = v208;
  v80 = v69;
  v81 = v65;
  ForEach<>.init(_:id:content:)(&v235, v67, sub_1003975E8, v80, v60, v70, v204, v203, v78);
  v82 = sub_100396544();
  v83 = v207;
  v84 = v209;
  ChartContent.interpolationMethod(_:)(0, 0, v209, v82);
  (*(void (**)(char *, uint64_t))(v210 + 8))(v79, v84);
  v231 = v84;
  v232 = (void *)v82;
  v85 = v213;
  v86 = swift_getOpaqueTypeConformance2(&v231, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
  v87 = v225;
  v88 = v211;
  ChartContent.alignsMarkStylesWithPlotArea(_:)(1, v211, v86);
  v89 = (uint64_t)v214;
  (*(void (**)(char *, uint64_t))(v212 + 8))(v83, v88);
  (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v223, v87, v226);
  v90 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_100037768(v65 + v90[13], v89, &qword_100BC4BB8);
  if (_s7Weather24LocationCompositionStateOwet_0(v89, 1, v85) == 1)
  {
    sub_100021A14(v89, &qword_100BC4BB8);
    v91 = (int *)type metadata accessor for PeakKnockoutMark(0);
    v92 = v228;
    v93 = v228;
    v94 = 1;
  }
  else
  {
    v95 = v183;
    sub_10007802C(v89, v183, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    v96 = v185;
    v97 = v184;
    v98 = v186;
    (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v184, v95, v186);
    v99 = *(_QWORD *)(v95 + *(int *)(v85 + 20));
    v213 = LocalizedStringKey.init(stringLiteral:)(1702125924, 0xE400000000000000);
    v212 = v100;
    v102 = v101;
    v214 = v103;
    v104 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
    v106 = v105;
    v108 = v107;
    v110 = v109;
    sub_1000215BC(v95, type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    v111 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
    v92 = v228;
    v112 = v97;
    v81 = v221;
    v111(v228, v112, v98);
    v91 = (int *)type metadata accessor for PeakKnockoutMark(0);
    *(_QWORD *)(v92 + v91[5]) = v99;
    *(_BYTE *)(v92 + v91[6]) = 1;
    v113 = v92 + v91[8];
    *(_QWORD *)v113 = v104;
    *(_QWORD *)(v113 + 8) = v106;
    *(_BYTE *)(v113 + 16) = v108 & 1;
    *(_QWORD *)(v113 + 24) = v110;
    v114 = v92 + v91[7];
    v115 = v212;
    *(_QWORD *)v114 = v213;
    *(_QWORD *)(v114 + 8) = v115;
    *(_BYTE *)(v114 + 16) = v102 & 1;
    *(_QWORD *)(v114 + 24) = v214;
    v93 = v92;
    v94 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v93, v94, 1, (uint64_t)v91);
  v116 = v220;
  sub_100080C0C(v81 + v90[15], v220, type metadata accessor for DetailHeroChartLollipopModel);
  if (swift_getEnumCaseMultiPayload(v116) == 1)
  {
    v117 = v192;
    sub_10007802C(v116, v192, type metadata accessor for DetailHeroChartActiveLollipopModel);
    v118 = v92;
    v119 = v193;
    sub_100080C0C(v117 + *(int *)(active + 20), v193, type metadata accessor for LollipopMarkModel);
    v120 = LocalizedStringKey.init(stringLiteral:)(1702125924, 0xE400000000000000);
    v122 = v121;
    v124 = v123;
    v126 = v125;
    v127 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
    v128 = v190;
    v129 = v119 + *(int *)(v190 + 24);
    *(_QWORD *)v129 = v127;
    *(_QWORD *)(v129 + 8) = v130;
    *(_BYTE *)(v129 + 16) = v131 & 1;
    *(_QWORD *)(v129 + 24) = v132;
    v133 = v119 + *(int *)(v128 + 20);
    *(_QWORD *)v133 = v120;
    *(_QWORD *)(v133 + 8) = v122;
    *(_BYTE *)(v133 + 16) = v124 & 1;
    *(_QWORD *)(v133 + 24) = v126;
    v134 = v227;
    sub_100080C0C(v119, v227, type metadata accessor for LollipopMark);
    v135 = sub_1000BA294(&qword_100BDCD50);
    swift_storeEnumTagMultiPayload(v134, v135, 1);
    v136 = v119;
    v92 = v118;
    sub_1000215BC(v136, type metadata accessor for LollipopMark);
    v137 = v117;
    v138 = type metadata accessor for DetailHeroChartActiveLollipopModel;
  }
  else
  {
    v139 = v81 + v90[14];
    v140 = v188;
    sub_100037768(v139, v188, &qword_100BC4BC0);
    if (_s7Weather24LocationCompositionStateOwet_0(v140, 1, v187) == 1)
    {
      sub_100021A14(v140, &qword_100BC4BC0);
      v141 = 1;
      v142 = v227;
      v143 = (int *)v194;
      v144 = v191;
    }
    else
    {
      v145 = v180;
      sub_10007802C(v140, v180, type metadata accessor for PeakUpperMarkModel);
      v146 = v179;
      sub_100080C0C(v145, v179, type metadata accessor for PeakUpperMarkModel);
      v148 = static Color.primary.getter(v147);
      v215 = LocalizedStringKey.init(stringLiteral:)(1702125924, 0xE400000000000000);
      v214 = v149;
      LODWORD(v213) = v150;
      v221 = v151;
      v152 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
      v154 = v153;
      v156 = v155;
      v158 = v157;
      v159 = v181;
      sub_100080C0C(v146, v181, type metadata accessor for PeakUpperMarkModel);
      v143 = (int *)v194;
      *(_QWORD *)(v159 + *(int *)(v194 + 20)) = v148;
      sub_1000215BC(v146, type metadata accessor for PeakUpperMarkModel);
      *(_QWORD *)(v159 + v143[6]) = 0x4024000000000000;
      v160 = v159 + v143[7];
      v161 = v214;
      *(_QWORD *)v160 = v215;
      *(_QWORD *)(v160 + 8) = v161;
      *(_BYTE *)(v160 + 16) = v213 & 1;
      *(_QWORD *)(v160 + 24) = v221;
      v162 = v159 + v143[8];
      *(_QWORD *)v162 = v152;
      *(_QWORD *)(v162 + 8) = v154;
      v92 = v228;
      *(_BYTE *)(v162 + 16) = v156 & 1;
      *(_QWORD *)(v162 + 24) = v158;
      v163 = v159;
      v164 = v182;
      sub_10007802C(v163, v182, type metadata accessor for PeakUpperMark);
      sub_1000215BC(v145, type metadata accessor for PeakUpperMarkModel);
      v144 = v191;
      v116 = v220;
      sub_10007802C(v164, v191, type metadata accessor for PeakUpperMark);
      v141 = 0;
      v142 = v227;
    }
    _s7Weather24LocationCompositionStateOwst_0(v144, v141, 1, (uint64_t)v143);
    sub_100037768(v144, v142, &qword_100BDCBA8);
    v165 = sub_1000BA294(&qword_100BDCD50);
    swift_storeEnumTagMultiPayload(v142, v165, 0);
    sub_100021A14(v144, &qword_100BDCBA8);
    v138 = type metadata accessor for DetailHeroChartLollipopModel;
    v137 = v116;
  }
  sub_1000215BC(v137, v138);
  v166 = (uint64_t)v216;
  v167 = v222;
  (*(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v230 + 16))(v216, v229, v222);
  v231 = v166;
  v168 = v224;
  v169 = v225;
  v170 = v223;
  v171 = v226;
  (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v225, v223, v226);
  v232 = v169;
  v172 = v92;
  v173 = v217;
  sub_100037768(v172, v217, &qword_100BDCB80);
  v233 = (void *)v173;
  v174 = v227;
  v175 = v218;
  sub_100037768(v227, v218, &qword_100BDCB98);
  v234 = (void *)v175;
  sub_10073B624();
  sub_100021A14(v174, &qword_100BDCB98);
  sub_100021A14(v228, &qword_100BDCB80);
  v176 = *(void (**)(char *, uint64_t))(v168 + 8);
  v176(v170, v171);
  v177 = *(void (**)(char *, uint64_t))(v230 + 8);
  v177(v229, v167);
  sub_100021A14(v175, &qword_100BDCB98);
  sub_100021A14(v173, &qword_100BDCB80);
  v176(v169, v171);
  return ((uint64_t (*)(uint64_t, uint64_t))v177)(v166, v167);
}

uint64_t sub_100393714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  double *v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  double v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  double v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;

  v69 = a1;
  v1 = sub_1000BA294(&qword_100BCD4A0);
  __chkstk_darwin(v1);
  v64 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BDCD58);
  __chkstk_darwin(v3);
  v65 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD78B8);
  __chkstk_darwin(v5);
  v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BD78D8);
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AreaMark(0);
  v18 = *(_QWORD *)(v17 - 8);
  v66 = v17;
  v67 = v18;
  __chkstk_darwin(v17);
  v62 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = LocalizedStringKey.init(stringLiteral:)(1702125924, 0xE400000000000000);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  DetailChartDataElement.date.getter(v20);
  static PlottableValue.value(_:_:)(v20, v22, v24 & 1, v26, v13, v10, &protocol witness table for Date);
  swift_bridgeObjectRelease();
  v27 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v27);
  v28 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
  v30 = v29;
  LOBYTE(v13) = v31;
  v33 = v32;
  v70 = DetailChartDataElement.secondValue.getter();
  static PlottableValue.value(_:_:)(v28, v30, v13 & 1, v33, &v70, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
  v36 = v35;
  LOBYTE(v33) = v37;
  v39 = v38;
  v70 = DetailChartDataElement.value.getter(v34);
  v40 = v33 & 1;
  v41 = v63;
  static PlottableValue.value(_:_:)(v34, v36, v40, v39, &v70, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = LocalizedStringKey.init(stringLiteral:)(0x736569726573, 0xE600000000000000);
  v70 = 9.52502082e-307;
  *(_QWORD *)&v71 = 0xE700000000000000;
  v44 = v65;
  static PlottableValue.value(_:_:)(v42, v45, v43 & 1, v46, &v70, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease();
  v47 = swift_bridgeObjectRelease();
  v48 = v62;
  AreaMark.init<A, B, C>(x:yStart:yEnd:series:)(v16, v9, v41, v44, v10, &type metadata for Double, &type metadata for String, &protocol witness table for Date, v47, &protocol witness table for Double, &protocol witness table for String);
  v49 = v68 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartView(0) + 32);
  v50 = (double *)(v49 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartViewModel(0) + 80));
  v51 = *v50;
  v52 = v50[1];
  v53 = (uint64_t)v64;
  sub_100114A94();
  v54 = type metadata accessor for ColorSchemeContrast(0);
  _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v54);
  DetailChartGradientModel.linearGradient(minValue:maxValue:colorSchemeContrast:)(&v75, v53, v51, v52);
  v55 = v75;
  v68 = v76;
  v56 = v77;
  v57 = v78;
  sub_100021A14(v53, &qword_100BCD4A0);
  v70 = v55;
  v71 = v68;
  v72 = v56;
  v73 = v57;
  v74 = 1056964608;
  v58 = sub_1000BA294(&qword_100BDCB38);
  sub_10034AEE4((uint64_t)&unk_100BDCB40);
  v59 = v66;
  ChartContent.foregroundStyle<A>(_:)(&v70, v66, v58, &protocol witness table for AreaMark, v60);
  sub_100158858(&v75);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v48, v59);
}

uint64_t sub_100393C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  double v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  char *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  double *v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD v80[2];
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char v84[24];
  _QWORD v85[5];
  _OWORD v86[2];
  uint64_t v87;

  v79 = a1;
  v1 = sub_1000BA294(&qword_100BCD4A0);
  __chkstk_darwin(v1);
  v78 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BDCD58);
  __chkstk_darwin(v3);
  v65 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD78B8);
  __chkstk_darwin(v5);
  v64 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD78D8);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for LineMark(0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1000BA294(&qword_100BDCB70);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v67 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1000BA294(&qword_100BDCB68);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v70 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1000BA294(&qword_100BDCB60);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v73 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = LocalizedStringKey.init(stringLiteral:)(1702125924, 0xE400000000000000);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  DetailChartDataElement.date.getter(v19);
  static PlottableValue.value(_:_:)(v19, v21, v23 & 1, v25, v10, v7, &protocol witness table for Date);
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v26);
  v27 = LocalizedStringKey.init(stringLiteral:)(0x65756C6176, 0xE500000000000000);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  *(_QWORD *)&v86[0] = DetailChartDataElement.value.getter(v27);
  v34 = v64;
  static PlottableValue.value(_:_:)(v27, v29, v31 & 1, v33, v86, &type metadata for Double, &protocol witness table for Double);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = LocalizedStringKey.init(stringLiteral:)(0x736569726573, 0xE600000000000000);
  *(_QWORD *)&v86[0] = 0x74617265706D6574;
  *((_QWORD *)&v86[0] + 1) = 0xEB00000000657275;
  v37 = v65;
  static PlottableValue.value(_:_:)(v35, v38, v36 & 1, v39, v86, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease();
  v40 = swift_bridgeObjectRelease();
  LineMark.init<A, B, C>(x:y:series:)(v13, v34, v37, v7, &type metadata for Double, &type metadata for String, &protocol witness table for Date, &protocol witness table for Double, v40, &protocol witness table for String);
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, v84, 1, 0);
  v41 = sub_100404364();
  static StrokeStyle.rounded(lineWidth:dash:)(v85, _swiftEmptyArrayStorage, v41);
  v42 = v67;
  v43 = v68;
  ChartContent.lineStyle(_:)(v85, v68, &protocol witness table for LineMark);
  sub_100158A28((uint64_t)v85);
  v44 = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v15, v43);
  v45 = static Color.black.getter(v44);
  v46 = Color.opacity(_:)(0.25);
  swift_release(v45);
  *(_QWORD *)&v86[0] = v43;
  *((_QWORD *)&v86[0] + 1) = &protocol witness table for LineMark;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v86, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  v48 = v70;
  v49 = v71;
  ChartContent.shadow(color:radius:x:y:)(v46, v71, OpaqueTypeConformance2, 10.0, 0.0, 2.0);
  v50 = swift_release(v46);
  (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v42, v49, v50);
  v51 = v77 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartView(0) + 32);
  v52 = (double *)(v51 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartViewModel(0) + 76));
  v53 = *v52;
  v54 = v52[1];
  v55 = (uint64_t)v78;
  sub_100114A94();
  v56 = type metadata accessor for ColorSchemeContrast(0);
  _s7Weather24LocationCompositionStateOwst_0(v55, 0, 1, v56);
  DetailChartGradientModel.linearGradient(minValue:maxValue:colorSchemeContrast:)(v86, v55, v53, v54);
  sub_100021A14(v55, &qword_100BCD4A0);
  v81 = v86[0];
  v82 = v86[1];
  v83 = v87;
  v80[0] = v49;
  v80[1] = OpaqueTypeConformance2;
  v57 = swift_getOpaqueTypeConformance2(v80, &opaque type descriptor for <<opaque return type of ChartContent.shadow(color:radius:x:y:)>>, 1);
  v58 = v73;
  v59 = v74;
  ChartContent.foregroundStyle<A>(_:)(&v81, v74, &type metadata for LinearGradient, v57, &protocol witness table for LinearGradient);
  sub_100158858(v86);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v59);
  v60 = type metadata accessor for RectangleMark(0);
  *(_QWORD *)&v81 = v59;
  *((_QWORD *)&v81 + 1) = &type metadata for LinearGradient;
  *(_QWORD *)&v82 = v57;
  *((_QWORD *)&v82 + 1) = &protocol witness table for LinearGradient;
  v61 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
  v62 = v76;
  ChartContent.mask<A>(content:)(sub_100394BC8, 0, v76, v60, v61, &protocol witness table for RectangleMark);
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v58, v62);
}

uint64_t sub_100394334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31[2];

  v31[1] = a1;
  v1 = type metadata accessor for AxisMarkPosition(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AxisMarkPreset(0, v2);
  __chkstk_darwin(v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_1000BA294(&qword_100BDCCB0);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Calendar.Component(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AxisMarkValues(0, v16);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v15 + 104))(v18, enum case for Calendar.Component.hour(_:), v14, v20);
  v23 = type metadata accessor for Calendar(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v23);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)(v18, 6, 2, 2, v13);
  sub_100021A14((uint64_t)v13, &qword_100BDCCB0);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  sub_100080C0C(v31[0], (uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TemperatureAveragesHeroChartView);
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = swift_allocObject(&unk_100B705F8, v25 + v10, v24 | 7);
  sub_10007802C((uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, type metadata accessor for TemperatureAveragesHeroChartView);
  v27 = static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter(v27);
  v28 = sub_1000BA294(&qword_100BDCCB8);
  v29 = sub_100397224();
  return AxisMarks.init(preset:position:values:content:)(v7, v4, v22, sub_1003971E0, v26, v28, v29);
}

uint64_t sub_1003945C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = type metadata accessor for AxisMarkPosition(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AxisMarkPreset(0, v6);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static AxisMarkPreset.aligned.getter(v10);
  static AxisMarkPosition.trailing.getter(v13);
  v14 = v1 + *(int *)(v2 + 32);
  v15 = *(_QWORD *)(v14 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartViewModel(0) + 44));
  sub_100080C0C(v1, (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TemperatureAveragesHeroChartView);
  v16 = *(unsigned __int8 *)(v3 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100B705D0, v17 + v4, v16 | 7);
  sub_10007802C((uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for TemperatureAveragesHeroChartView);
  swift_bridgeObjectRetain(v15);
  v19 = sub_1000BA294(&qword_100BDCC48);
  sub_100396FDC((uint64_t)&unk_100BDCC50);
  return AxisMarks.init<A>(preset:position:values:content:)(v12, v8, v15, sub_100396FD0, v18, v19, &type metadata for Double, v20, &protocol witness table for Double);
}

uint64_t sub_100394790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v6 = type metadata accessor for ChartProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_100080C0C(a2, (uint64_t)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v11 + v15 + v14) & ~v15;
  v17 = swift_allocObject(&unk_100B705A8, v16 + v8, v13 | v15 | 7);
  sub_10007802C((uint64_t)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v14, type metadata accessor for TemperatureAveragesHeroChartView);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *a3 = sub_100396F58;
  a3[1] = (uint64_t (*)())v17;
  return result;
}

uint64_t sub_1003948D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  *a4 = static Alignment.topLeading.getter(a1);
  a4[1] = v8;
  v9 = sub_1000BA294(&qword_100BDCC40);
  return sub_100394934(a2, a3, a1, (uint64_t)a4 + *(int *)(v9 + 44));
}

uint64_t sub_100394934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t KeyPath;
  int *v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46[2];

  v41 = a3;
  v37 = a2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v45 = v7;
  __chkstk_darwin(v6);
  v43 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - v10;
  v12 = type metadata accessor for GeometryProxy(0);
  v39 = *(_QWORD *)(v12 - 8);
  v13 = v39;
  v40 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v15;
  v16 = type metadata accessor for ChartProxy(0);
  v17 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TemperatureAveragesHeroChartView(0);
  sub_100043CA8(a1 + *(int *)(v20 + 28), (uint64_t)v46);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v37, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v41, v12);
  v21 = a1 + *(int *)(v20 + 32);
  v22 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  v23 = v44;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v24(v11, v21 + *(int *)(v22 + 64), v44);
  v25 = v43;
  v24(v43, v21 + *(int *)(v22 + 68), v23);
  v26 = sub_1003E5E6C();
  v41 = v27;
  LODWORD(v37) = v28;
  KeyPath = swift_getKeyPath(&unk_100999618);
  v30 = (int *)type metadata accessor for LollipopChartOverlayView(0);
  v31 = (uint64_t *)(a4 + v30[10]);
  *v31 = KeyPath;
  v32 = sub_1000BA294(&qword_100BC2908);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  sub_10003C800(v46, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a4 + v30[5], v19, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(a4 + v30[6], v42, v40);
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v33(a4 + v30[7], v11, v23);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(a4 + v30[8], v25, v23);
  v35 = a4 + v30[9];
  v36 = v41;
  *(_QWORD *)v35 = v26;
  *(_QWORD *)(v35 + 8) = v36;
  *(_BYTE *)(v35 + 16) = v37 & 1;
  return result;
}

uint64_t sub_100394BC8()
{
  return RectangleMark.init(xStart:xEnd:yStart:yEnd:)(0, 1, 0, 1, 0, 1, 0, 1);
}

void sub_100394BEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  char v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, char *, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  int v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  __int128 v124;
  __int128 v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  __int128 v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD v160[2];
  uint64_t v161;
  _OWORD v162[2];
  uint64_t v163;
  _OWORD v164[2];
  uint64_t v165;
  _QWORD v166[62];
  _OWORD v167[2];
  uint64_t v168;
  _QWORD v169[63];

  v146 = a2;
  v151 = a3;
  v4 = type metadata accessor for AxisValueLabelOrientation(0);
  v5 = __chkstk_darwin(v4);
  v129 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AxisValueLabelCollisionResolution(0, v5);
  __chkstk_darwin(v7);
  v128 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BCB0A0);
  __chkstk_darwin(v9);
  v131 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for DetailChartDataElement(0);
  v11 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v130 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v142 = (char *)&v124 - v14;
  v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v15);
  v148 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v155 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v153 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v154 = (char *)&v124 - v20;
  v21 = sub_1000BA294(&qword_100BDCCF0);
  __chkstk_darwin(v21);
  v150 = (uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v149 = (char *)&v124 - v25;
  v26 = type metadata accessor for AxisTick.Length(0, v24);
  __chkstk_darwin(v26);
  v133 = (char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AxisTick(0);
  v137 = *(_QWORD *)(v28 - 8);
  v138 = v28;
  __chkstk_darwin(v28);
  v135 = (char *)&v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BDCD08);
  v140 = *(_QWORD *)(v30 - 8);
  v141 = v30;
  __chkstk_darwin(v30);
  v136 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v139 = (char *)&v124 - v33;
  v34 = type metadata accessor for AxisGridLine(0);
  *(_QWORD *)&v132 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1000BA294(&qword_100BDCC88);
  v147 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v38 = (char *)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v124 - v40;
  v42 = sub_1000BA294(&qword_100BDCCD0);
  __chkstk_darwin(v42);
  v152 = (uint64_t)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v44);
  v47 = (char *)&v124 - v46;
  v48 = a1;
  v49 = AxisValue.isFirst.getter(v45);
  v156 = v17;
  if ((v49 & 1) != 0)
  {
    v50 = sub_1000BA294(&qword_100BDCCE0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 1, 1, v50);
    v51 = (uint64_t)v47;
  }
  else
  {
    v144 = v47;
    v127 = v11;
    if (qword_100BC20C0 != -1)
      swift_once(&qword_100BC20C0, sub_1004049E8);
    swift_beginAccess(&qword_100CAE968, &v159, 0, 0);
    memcpy(v169, &qword_100CAE968, 0x1F0uLL);
    v52 = sub_100397408(v169);
    v145 = a1;
    v53 = AxisValue.isLast.getter(v52);
    sub_10040451C((v53 & 1) == 0, (double *)v160);
    v124 = v160[1];
    v125 = v160[0];
    v54 = v161;
    sub_1003974A8(v169);
    v167[0] = v125;
    v167[1] = v124;
    v168 = v54;
    AxisGridLine.init(centered:stroke:)(2, v167);
    swift_beginAccess(&qword_100CAE968, v166, 33, 0);
    sub_10040441C();
    v56 = v55;
    swift_endAccess(v166);
    v166[0] = v56;
    AxisMark.foregroundStyle<A>(_:)(v166, v34, &type metadata for Color, &protocol witness table for AxisGridLine, &protocol witness table for Color);
    v57 = swift_release(v56);
    (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v36, v34, v57);
    v58 = *(uint64_t (**)(char *, char *, uint64_t))(v147 + 32);
    v126 = v41;
    v59 = v134;
    v60 = v58(v41, v38, v134);
    v61 = v133;
    static AxisTick.Length.longestLabel.getter(v60);
    memcpy(v166, &qword_100CAE968, sizeof(v166));
    v62 = sub_100397408(v166);
    v63 = AxisValue.isLast.getter(v62);
    sub_10040451C((v63 & 1) == 0, (double *)v162);
    v132 = v162[0];
    v125 = v162[1];
    v64 = v163;
    sub_1003974A8(v166);
    v164[0] = v132;
    v164[1] = v125;
    v165 = v64;
    v65 = v135;
    AxisTick.init(centered:length:stroke:)(2, v61, v164);
    swift_beginAccess(&qword_100CAE968, &v157, 33, 0);
    sub_10040441C();
    v67 = v66;
    swift_endAccess(&v157);
    v157 = v67;
    v68 = v136;
    v69 = v138;
    AxisMark.foregroundStyle<A>(_:)(&v157, v138, &type metadata for Color, &protocol witness table for AxisTick, &protocol witness table for Color);
    v70 = swift_release(v67);
    (*(void (**)(char *, uint64_t, __n128))(v137 + 8))(v65, v69, v70);
    v72 = v139;
    v71 = v140;
    v73 = v141;
    (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v139, v68, v141);
    v74 = v147;
    v75 = v38;
    v76 = v38;
    v77 = v126;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v75, v126, v59);
    v157 = (uint64_t)v76;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v72, v73);
    v158 = (uint64_t)v68;
    v78 = v152;
    sub_10073C240();
    v79 = *(void (**)(char *, uint64_t))(v71 + 8);
    v79(v72, v73);
    v80 = *(void (**)(char *, uint64_t))(v74 + 8);
    v80(v77, v59);
    v79(v68, v73);
    v81 = v76;
    v48 = v145;
    v80(v81, v59);
    v82 = sub_1000BA294(&qword_100BDCCE0);
    _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v82);
    v51 = (uint64_t)v144;
    sub_1000787D4(v78, (uint64_t)v144, &qword_100BDCCD0);
    v11 = v127;
    v17 = v156;
  }
  v83 = (uint64_t)v148;
  AxisValue.as<A>(_:)(v17, v17, &protocol witness table for Date);
  if (_s7Weather24LocationCompositionStateOwet_0(v83, 1, v17) == 1)
  {
    v84 = (uint64_t *)&unk_100BD35A0;
    v85 = v83;
LABEL_18:
    sub_100021A14(v85, v84);
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v155 + 32))(v154, v83, v17);
  v86 = v146 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartView(0) + 32);
  v87 = *(char **)(v86 + 64);
  v88 = *((_QWORD *)v87 + 2);
  if (v88)
  {
    v144 = (char *)v51;
    v145 = v48;
    v89 = &v87[(*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)];
    v90 = *(_QWORD *)(v11 + 72);
    v91 = v11;
    v92 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v11 + 16);
    v148 = v87;
    v93 = swift_bridgeObjectRetain(v87);
    v94 = v143;
    v95 = v130;
    v96 = v153;
    while (1)
    {
      v97 = v92(v95, v89, v94, v93);
      DetailChartDataElement.date.getter(v97);
      v98 = static Date.== infix(_:_:)(v96, v154);
      (*(void (**)(char *, uint64_t))(v155 + 8))(v96, v156);
      if ((v98 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v95, v94);
      v89 += v90;
      if (!--v88)
      {
        v99 = 1;
        v11 = v91;
        v100 = (uint64_t)v131;
        goto LABEL_15;
      }
    }
    v11 = v91;
    v100 = (uint64_t)v131;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v131, v95, v94);
    v99 = 0;
LABEL_15:
    v51 = (uint64_t)v144;
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v86 + 64));
    v99 = 1;
    v94 = v143;
    v100 = (uint64_t)v131;
  }
  _s7Weather24LocationCompositionStateOwst_0(v100, v99, 1, v94);
  swift_bridgeObjectRelease();
  v101 = _s7Weather24LocationCompositionStateOwet_0(v100, 1, v94);
  v102 = v142;
  v103 = v156;
  if (v101 == 1)
  {
    (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
    v84 = &qword_100BCB0A0;
    v85 = v100;
    goto LABEL_18;
  }
  v108 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 32))(v142, v100, v94);
  v109 = v94;
  v110 = AxisValue.isLast.getter(v108);
  if ((v110 & 1) == 0)
  {
    v111 = __chkstk_darwin(v110);
    v112 = v51;
    v113 = v128;
    v114 = static AxisValueLabelCollisionResolution.automatic.getter(v111);
    v115 = v129;
    static AxisValueLabelOrientation.automatic.getter(v114);
    v122 = sub_1000BA294(&qword_100BDCD10);
    v123 = sub_100397554();
    v121 = &v119;
    LOBYTE(v120) = 1;
    v118 = v115;
    v104 = (uint64_t)v149;
    v116 = v113;
    v51 = v112;
    ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, char, _QWORD, int, double (*)@<D0>(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0, 0, 1, 0, 0, 1, v116, 2, v118, 0, 1, 0, v120, sub_100397548);
    v117 = sub_1000BA294(&qword_100BDCD00);
    _s7Weather24LocationCompositionStateOwst_0(v104, 0, 1, v117);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v102, v109);
    (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v102, v94);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v103);
LABEL_19:
  v104 = (uint64_t)v149;
  v105 = sub_1000BA294(&qword_100BDCD00);
  _s7Weather24LocationCompositionStateOwst_0(v104, 1, 1, v105);
LABEL_20:
  v106 = v152;
  sub_100037768(v51, v152, &qword_100BDCCD0);
  v157 = v106;
  v107 = v150;
  sub_100037768(v104, v150, &qword_100BDCCF0);
  v158 = v107;
  sub_10073C254();
  sub_100021A14(v104, &qword_100BDCCF0);
  sub_100021A14(v51, &qword_100BDCCD0);
  sub_100021A14(v107, &qword_100BDCCF0);
  sub_100021A14(v106, &qword_100BDCCD0);
}

double sub_100395740@<D0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  double result;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  AxisValue.isFirst.getter();
  sub_1003957C8((uint64_t)&v10);
  v2 = v11;
  v3 = v12;
  v4 = v13;
  v5 = v14;
  v6 = v15;
  v7 = v16;
  result = *(double *)&v10;
  v9 = v17;
  *(_OWORD *)a1 = v10;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  return result;
}

double sub_1003957C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  __int128 v43;

  v2 = type metadata accessor for TimeStyle(0);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Style(0);
  v5 = static Style.componentTime.getter();
  v6 = DetailChartDataElement.dateLabel.getter(v5);
  v8 = v7;
  sub_1000B375C();
  v10 = static NSDateFormatter.prevailingPeriodSymbols.getter(v9);
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, v42, 33, 0);
  v11 = sub_10040459C();
  swift_endAccess(v42);
  v12 = TimeStyle.formatTime(_:periodSymbols:font:)(v6, v8, v10, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = swift_release(v11);
  v20 = v16 & 1;
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v4, v41, v19);
  swift_beginAccess(&qword_100CAE968, v42, 33, 0);
  sub_100404670();
  v22 = v21;
  swift_endAccess(v42);
  v23 = Text.foregroundColor(_:)(v22, v12, v14, v20, v18);
  v25 = v24;
  LOBYTE(v11) = v26;
  v28 = v27;
  swift_release(v22);
  v29 = v11 & 1;
  sub_1000D31B4(v12, v14, v20);
  swift_bridgeObjectRelease();
  swift_beginAccess(&qword_100CAE968, v42, 33, 0);
  v30 = sub_10040459C();
  swift_endAccess(v42);
  v31 = Text.font(_:)(v30, v23, v25, v29, v28);
  v33 = v32;
  LOBYTE(v18) = v34;
  v36 = v35;
  swift_release(v30);
  sub_1000D31B4(v23, v25, v29);
  swift_bridgeObjectRelease();
  static Alignment.leading.getter(v37);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4040000000000000, 0);
  *(_QWORD *)a1 = v31;
  *(_QWORD *)(a1 + 8) = v33;
  *(_BYTE *)(a1 + 16) = v18 & 1;
  *(_QWORD *)(a1 + 24) = v36;
  v38 = v42[1];
  *(_OWORD *)(a1 + 32) = v42[0];
  *(_OWORD *)(a1 + 48) = v38;
  result = *(double *)&v43;
  *(_OWORD *)(a1 + 64) = v43;
  return result;
}

void sub_100395A58(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char *v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  _QWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;

  v63 = a1;
  v3 = sub_1000BA294(&qword_100BDCC48);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AxisValueLabelOrientation(0);
  v7 = __chkstk_darwin(v6);
  v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AxisValueLabelCollisionResolution(0, v7);
  __chkstk_darwin(v9);
  v61 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BDCC70);
  __chkstk_darwin(v11);
  v65 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v64 = (char *)&v58 - v14;
  v15 = type metadata accessor for AxisGridLine(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BDCC88);
  v66 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v58 - v23;
  if ((AxisValue.isLast.getter(v25) & 1) != 0)
  {
    v26 = sub_1000BA294(&qword_100BDCC60);
    _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v26);
  }
  else
  {
    v60 = v5;
    v70 = 0;
    memset(v69, 0, sizeof(v69));
    AxisGridLine.init(centered:stroke:)(2, v69);
    if (qword_100BC20C0 != -1)
      swift_once(&qword_100BC20C0, sub_1004049E8);
    swift_beginAccess(&qword_100CAE968, &v67, 33, 0);
    sub_10040441C();
    v28 = v27;
    swift_endAccess(&v67);
    v67 = v28;
    AxisMark.foregroundStyle<A>(_:)(&v67, v15, &type metadata for Color, &protocol witness table for AxisGridLine, &protocol witness table for Color);
    v29 = swift_release(v28);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v29);
    v30 = v66;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v24, v21, v19);
    AxisValue.as<A>(_:)(&type metadata for Double, &type metadata for Double, &protocol witness table for Double);
    if ((v68 & 1) != 0)
    {
      v31 = 1;
      v33 = (uint64_t)v64;
      v32 = (uint64_t)v65;
    }
    else
    {
      v59 = a2;
      v34 = *(double *)&v67;
      v35 = (char *)v63 + *(int *)(type metadata accessor for TemperatureAveragesHeroChartView(0) + 32);
      v36 = &v35[*(int *)(type metadata accessor for TemperatureAveragesHeroChartViewModel(0) + 48)];
      v37 = *(_QWORD *)v36;
      v38 = *((_QWORD *)v36 + 1);
      v39 = *((_QWORD *)v36 + 2);
      v40 = v36[24];
      v42 = AxisValue.isFirst.getter(v41);
      v43 = v42;
      v44 = AxisValue.isLast.getter(v42);
      v45 = sub_1005F7604(v43 & 1, v44 & 1, v37, v38, v39, v40, v34);
      v31 = 1;
      if (v46)
      {
        v63 = &v58;
        v47 = __chkstk_darwin(v45);
        v48 = v61;
        v49 = static AxisValueLabelCollisionResolution.automatic.getter(v47);
        v50 = v62;
        static AxisValueLabelOrientation.automatic.getter(v49);
        v51 = sub_1000BA294(&qword_100BDCC90);
        sub_100397180((uint64_t)&unk_100BDCC98);
        v57[2] = v51;
        v57[3] = v52;
        v57[1] = v57;
        v33 = (uint64_t)v64;
        ((void (*)(uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, char *, char, char *, _QWORD, _BYTE, _QWORD, char, double (*)@<D0>(uint64_t@<X8>)))AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:))(2, 0, 0, 1, 0, 0, 1, v48, 2, v50, 0, 0, 0, 1, sub_100397154);
        swift_bridgeObjectRelease();
        v31 = 0;
        a2 = v59;
      }
      else
      {
        a2 = v59;
        v33 = (uint64_t)v64;
      }
      v32 = (uint64_t)v65;
      v30 = v66;
    }
    v53 = sub_1000BA294(&qword_100BDCC80);
    _s7Weather24LocationCompositionStateOwst_0(v33, v31, 1, v53);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v21, v24, v19);
    v67 = v21;
    sub_100037768(v33, v32, &qword_100BDCC70);
    v68 = v32;
    v54 = (uint64_t)v60;
    sub_10073C2E8();
    sub_100021A14(v33, &qword_100BDCC70);
    v55 = *(void (**)(char *, uint64_t))(v30 + 8);
    v55(v24, v19);
    sub_100021A14(v32, &qword_100BDCC70);
    v55(v21, v19);
    v56 = sub_1000BA294(&qword_100BDCC60);
    _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v56);
    sub_1000787D4(v54, a2, &qword_100BDCC48);
  }
}

double sub_100395FD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double result;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  double v66[3];

  v54 = a1;
  v55 = a2;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v6 = Text.init<A>(_:)(&v54, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  if (qword_100BC20C0 != -1)
    swift_once(&qword_100BC20C0, sub_1004049E8);
  swift_beginAccess(&qword_100CAE968, &v54, 33, 0);
  v13 = sub_10040459C();
  swift_endAccess(&v54);
  v14 = Text.font(_:)(v13, v6, v8, v10 & 1, v12);
  v16 = v15;
  v18 = v17;
  v46 = v19;
  swift_release(v13);
  LOBYTE(v13) = v18 & 1;
  sub_1000D31B4(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  swift_beginAccess(&qword_100CAE968, &v54, 33, 0);
  sub_100404670();
  v21 = v20;
  swift_endAccess(&v54);
  v22 = Text.foregroundColor(_:)(v21, v14, v16, v18 & 1, v46);
  v47 = v23;
  v25 = v24;
  v27 = v26;
  swift_release(v21);
  sub_1000D31B4(v14, v16, v13);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100999648);
  LOBYTE(v14) = static Edge.Set.horizontal.getter(KeyPath);
  v29 = EdgeInsets.init(_all:)(*(double *)&xmmword_100CAEB40);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = static Alignment.leading.getter(v36);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v54, 0x4044000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v37, v38);
  v39 = v54;
  v40 = v56;
  v41 = v58;
  v42 = v60;
  v43 = v62;
  v44 = v64;
  v53 = v55;
  v52 = v57;
  v51 = v59;
  v50 = v61;
  v49 = v63;
  v48 = v65;
  *(_QWORD *)a3 = v22;
  *(_QWORD *)(a3 + 8) = v47;
  *(_BYTE *)(a3 + 16) = v25 & 1;
  *(_QWORD *)(a3 + 24) = v27;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_QWORD *)(a3 + 40) = 1;
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 56) = v14;
  *(double *)(a3 + 64) = v29;
  *(_QWORD *)(a3 + 72) = v31;
  *(_QWORD *)(a3 + 80) = v33;
  *(_QWORD *)(a3 + 88) = v35;
  *(_BYTE *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = v39;
  *(_BYTE *)(a3 + 112) = v53;
  *(_QWORD *)(a3 + 120) = v40;
  *(_BYTE *)(a3 + 128) = v52;
  *(_QWORD *)(a3 + 136) = v41;
  *(_BYTE *)(a3 + 144) = v51;
  *(_QWORD *)(a3 + 152) = v42;
  *(_BYTE *)(a3 + 160) = v50;
  *(_QWORD *)(a3 + 168) = v43;
  *(_BYTE *)(a3 + 176) = v49;
  *(_QWORD *)(a3 + 184) = v44;
  *(_BYTE *)(a3 + 192) = v48;
  result = v66[0];
  *(_OWORD *)(a3 + 200) = *(_OWORD *)v66;
  return result;
}

unint64_t sub_1003962C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCA90;
  if (!qword_100BDCA90)
  {
    v1 = sub_100075EB0(&qword_100BDCA80);
    sub_10034AEE4((uint64_t)&unk_100BDCA98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCA90);
  }
  return result;
}

uint64_t sub_100396344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003925EC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10039634C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  result = qword_100BDCB18;
  if (!qword_100BDCB18)
  {
    v1 = sub_100075EB0(&qword_100BDCB10);
    v2 = sub_100075EB0(&qword_100BDCB20);
    v8 = sub_100075EB0(&qword_100BDCB28);
    v9 = sub_100396480();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
    v8 = v2;
    v9 = OpaqueTypeConformance2;
    v8 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of ChartContent.alignsMarkStylesWithPlotArea(_:)>>, 1);
    v4 = sub_100075EB0(&qword_100BDCB48);
    v6 = sub_100075EB0(&qword_100BDCB50);
    v7 = sub_100396544();
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
    v6 = v4;
    v7 = v5;
    v9 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of ChartContent.alignsMarkStylesWithPlotArea(_:)>>, 1);
    v10 = sub_100396680();
    v11 = sub_1003966FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCB18);
  }
  return result;
}

unint64_t sub_100396480()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  result = qword_100BDCB30;
  if (!qword_100BDCB30)
  {
    v1 = sub_100075EB0(&qword_100BDCB28);
    v2 = type metadata accessor for AreaMark(255);
    v3 = sub_100075EB0(&qword_100BDCB38);
    sub_10034AEE4((uint64_t)&unk_100BDCB40);
    v5[0] = v2;
    v5[1] = v3;
    v5[2] = &protocol witness table for AreaMark;
    v5[3] = v4;
    swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCB30);
  }
  return result;
}

unint64_t sub_100396544()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;

  result = qword_100BDCB58;
  if (!qword_100BDCB58)
  {
    v1 = sub_100075EB0(&qword_100BDCB50);
    v2 = sub_100075EB0(&qword_100BDCB60);
    v3 = type metadata accessor for RectangleMark(255);
    v4 = sub_100075EB0(&qword_100BDCB68);
    v5 = sub_100075EB0(&qword_100BDCB70);
    v9 = type metadata accessor for LineMark(255);
    v10 = &protocol witness table for LineMark;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v9 = v5;
    v10 = (void *)OpaqueTypeConformance2;
    v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.shadow(color:radius:x:y:)>>, 1);
    v9 = v4;
    v10 = &type metadata for LinearGradient;
    v11 = v7;
    v12 = &protocol witness table for LinearGradient;
    v8 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v9 = v2;
    v10 = (void *)v3;
    v11 = v8;
    v12 = &protocol witness table for RectangleMark;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of ChartContent.mask<A>(content:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCB58);
  }
  return result;
}

unint64_t sub_100396680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCB78;
  if (!qword_100BDCB78)
  {
    v1 = sub_100075EB0(&qword_100BDCB80);
    sub_10007A100((uint64_t)&unk_100BDCB88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCB78);
  }
  return result;
}

unint64_t sub_1003966FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCB90;
  if (!qword_100BDCB90)
  {
    v1 = sub_100075EB0(&qword_100BDCB98);
    sub_100396780();
    sub_10007A100((uint64_t)&unk_100BDCBB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> BuilderConditional<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCB90);
  }
  return result;
}

unint64_t sub_100396780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCBA0;
  if (!qword_100BDCBA0)
  {
    v1 = sub_100075EB0(&qword_100BDCBA8);
    sub_10007A100((uint64_t)&unk_100BDCBB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCBA0);
  }
  return result;
}

void sub_1003967FC(uint64_t a1@<X8>)
{
  sub_100394334(a1);
  sub_10004A298();
}

void sub_100396818()
{
  sub_1003945C4();
  sub_10004A298();
}

uint64_t sub_100396838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)();

  sub_1000C5DD0();
  v0 = sub_1000C130C();
  return sub_100394790(v0, v1, v2);
}

unint64_t sub_100396860()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;

  result = qword_100BDCC20;
  if (!qword_100BDCC20)
  {
    v19 = sub_100075EB0(&qword_100BDCAE8);
    v18 = sub_100075EB0(&qword_100BDCAD8);
    v17 = sub_100075EB0(&qword_100BDCBE8);
    v1 = sub_100075EB0(&qword_100BDCAD0);
    v2 = sub_100075EB0(&qword_100BDCBD8);
    v3 = sub_100075EB0(&qword_100BDCAC8);
    v4 = sub_100075EB0(&qword_100BDCBC8);
    v5 = sub_100075EB0(&qword_100BDCAC0);
    v6 = type metadata accessor for AutomaticScaleDomain(255);
    v7 = type metadata accessor for PlotDimensionScaleRange(255);
    v8 = sub_100075EB0(&qword_100BDCAB8);
    sub_10034AEE4((uint64_t)&unk_100BDCBC0);
    v20 = v8;
    v21 = v7;
    v22 = v9;
    v23 = &protocol witness table for PlotDimensionScaleRange;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v20, &opaque type descriptor for <<opaque return type of View.chartXScale<A>(range:type:)>>, 1);
    v20 = v5;
    v21 = v6;
    v22 = v7;
    v23 = (void *)OpaqueTypeConformance2;
    v24 = &protocol witness table for AutomaticScaleDomain;
    v25 = &protocol witness table for PlotDimensionScaleRange;
    v11 = swift_getOpaqueTypeConformance2(&v20, &opaque type descriptor for <<opaque return type of View.chartYScale<A, B>(domain:range:type:)>>, 1);
    sub_10034AEE4((uint64_t)&unk_100BDCBD0);
    v20 = v3;
    v21 = v4;
    v22 = v11;
    v23 = v12;
    v13 = swift_getOpaqueTypeConformance2(&v20, &opaque type descriptor for <<opaque return type of View.chartXAxis<A>(content:)>>, 1);
    sub_10034AEE4((uint64_t)&unk_100BDCBE0);
    v20 = v1;
    v21 = v2;
    v22 = v13;
    v23 = v14;
    v15 = swift_getOpaqueTypeConformance2(&v20, &opaque type descriptor for <<opaque return type of View.chartYAxis<A>(content:)>>, 1);
    sub_10034AEE4((uint64_t)&unk_100BDCBF0);
    v20 = v18;
    v21 = v17;
    v22 = v15;
    v23 = v16;
    swift_getOpaqueTypeConformance2(&v20, &opaque type descriptor for <<opaque return type of View.chartOverlay<A>(alignment:content:)>>, 1);
    sub_10034AEE4((uint64_t)&unk_100BDCC28);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
    atomic_store(result, (unint64_t *)&qword_100BDCC20);
  }
  return result;
}

unint64_t sub_100396ABC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_100BDCC30;
  if (!qword_100BDCC30)
  {
    v1 = sub_100075EB0(&qword_100BDCB00);
    v2 = sub_100075EB0(&qword_100BDCAF0);
    sub_100397180((uint64_t)&unk_100BDCC18);
    v4[0] = v2;
    v4[1] = v3;
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCC30);
  }
  return result;
}

uint64_t sub_100396B78()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;

  v1 = (int *)sub_1000C5458();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for ChartProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v40 = *(_QWORD *)(v7 + 64);
  v41 = v6;
  v9 = v0 + v4;
  sub_1000B15F8(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  v10 = (_QWORD *)(v0 + v4 + v1[5]);
  v11 = sub_1000BA294(&qword_100BC68C8);
  if (sub_1000952AC(v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    sub_1000B2568(v12);
  }
  else
  {
    swift_release(*v10);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v9 + v1[7]));
  v13 = v9 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = (int *)sub_1000D8F44();
  v15 = sub_1000BD410();
  v16 = type metadata accessor for TemperatureScaleConfiguration(v15);
  sub_1000B2568(v16);
  swift_bridgeObjectRelease();
  sub_1000D1254(v13 + v14[12]);
  v17 = sub_1000BD410();
  v18 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(v17);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v18))
  {
    v19 = sub_100098778();
    sub_1000B2568(v19);
  }
  v20 = sub_1000BD410();
  v21 = (int *)type metadata accessor for PeakUpperMarkModel(v20);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v21))
  {
    v22 = sub_100098778();
    sub_1000B2568(v22);
    sub_1000BAA84(v21[6]);
    sub_1000BAA84(v21[7]);
    sub_1000BAA84(v21[8]);
  }
  v23 = sub_1000BD410();
  v24 = type metadata accessor for DetailHeroChartLollipopModel(v23);
  if (sub_1000952AC(v24) != 1)
  {
    v28 = sub_1000BA944();
    v27 = sub_1000952AC(v28);
    if (v27 == 2)
    {
      swift_bridgeObjectRelease();
      v31 = (int *)sub_1000D9580();
      v32 = sub_1000D010C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v5, v32);
      sub_1000BAA84(v31[6]);
      sub_1000BAA84(v31[7]);
      sub_1000BAA84(v31[8]);
      sub_1000BAA84(v31[9]);
      v4 = (v3 + 16) & ~v3;
      goto LABEL_20;
    }
    if (v27 != 1)
      goto LABEL_14;
LABEL_19:
    sub_1000C0DF8();
    sub_1000952D8();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  v25 = sub_100098778();
  sub_1000BA9C0(v25);
  v26 = sub_1000BA944();
  v27 = sub_1000952AC(v26);
  if (v27 == 2)
  {
    swift_bridgeObjectRelease();
    v29 = (int *)sub_1000D9580();
    v30 = sub_1000D010C();
    sub_1000BA9C0(v30);
    sub_1000BAA84(v29[6]);
    sub_1000BAA84(v29[7]);
    sub_1000BAA84(v29[8]);
    sub_1000BAA84(v29[9]);
    v4 = (v3 + 16) & ~v3;
    goto LABEL_20;
  }
  if (v27 == 1)
    goto LABEL_19;
LABEL_14:
  if (!v27)
  {
    sub_1000C0DF8();
    sub_1000952D8();
LABEL_20:
    swift_bridgeObjectRelease();
  }
  v33 = v3 | v8 | 7;
  v34 = (v4 + v5 + v8) & ~v8;
  v35 = v13 + v14[16];
  v36 = sub_100098778();
  v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8);
  v37(v35, v36);
  v37(v13 + v14[17], v36);
  v38 = type metadata accessor for DetailChartGradientModel(0);
  sub_1000987E0(v38);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v34, v41);
  return swift_deallocObject(v0, v34 + v40, v33);
}

uint64_t sub_100396F58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1000C5DD0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChartProxy(0) - 8) + 80);
  return sub_1003948D8(v0, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), v2);
}

uint64_t sub_100396FD0(uint64_t a1)
{
  return sub_1003971EC(a1, (uint64_t (*)(uint64_t))sub_100395A58);
}

void sub_100396FDC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  if (!sub_10009987C(a1))
  {
    v4 = v3;
    v5 = sub_100098C3C(0, v2);
    v4();
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v5), v1);
  }
  sub_100099960();
}

unint64_t sub_10039702C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  void *v3;
  void *v4;
  void *v5;

  result = qword_100BDCC58;
  if (!qword_100BDCC58)
  {
    v1 = sub_100075EB0(&qword_100BDCC60);
    OpaqueTypeConformance2 = type metadata accessor for AxisGridLine(255);
    v3 = &type metadata for Color;
    v4 = &protocol witness table for AxisGridLine;
    v5 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&OpaqueTypeConformance2, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
    v3 = (void *)sub_1003970D8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCC58);
  }
  return result;
}

unint64_t sub_1003970D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCC68;
  if (!qword_100BDCC68)
  {
    v1 = sub_100075EB0(&qword_100BDCC70);
    sub_10034AEE4((uint64_t)&unk_100BDCC78);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCC68);
  }
  return result;
}

double sub_100397154@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100395FD8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_10039715C()
{
  sub_100397180((uint64_t)&unk_100BDCCA0);
}

void sub_100397180(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  if (!sub_10009987C(a1))
  {
    v4 = v3;
    v5 = sub_100098C3C(0, v2);
    v4();
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5), v1);
  }
  sub_100099960();
}

uint64_t sub_1003971E0(uint64_t a1)
{
  return sub_1003971EC(a1, (uint64_t (*)(uint64_t))sub_100394BEC);
}

uint64_t sub_1003971EC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  sub_1000C5DD0();
  v2 = sub_1000C130C();
  return a2(v2);
}

unint64_t sub_100397224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCCC0;
  if (!qword_100BDCCC0)
  {
    v1 = sub_100075EB0(&qword_100BDCCB8);
    sub_100396FDC((uint64_t)&unk_100BDCCC8);
    sub_10039738C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCCC0);
  }
  return result;
}

unint64_t sub_1003972B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;

  result = qword_100BDCCD8;
  if (!qword_100BDCCD8)
  {
    v1 = sub_100075EB0(&qword_100BDCCE0);
    v2 = type metadata accessor for AxisGridLine(255);
    v3 = &type metadata for Color;
    v4 = &protocol witness table for AxisGridLine;
    v5 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v2, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
    v2 = type metadata accessor for AxisTick(255);
    v3 = &type metadata for Color;
    v4 = &protocol witness table for AxisTick;
    v5 = &protocol witness table for Color;
    v7 = swift_getOpaqueTypeConformance2(&v2, &opaque type descriptor for <<opaque return type of AxisMark.foregroundStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCCD8);
  }
  return result;
}

unint64_t sub_10039738C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCCE8;
  if (!qword_100BDCCE8)
  {
    v1 = sub_100075EB0(&qword_100BDCCF0);
    sub_10034AEE4((uint64_t)&unk_100BDCCF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCCE8);
  }
  return result;
}

_QWORD *sub_100397408(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[21];
  v7 = a1[33];
  v8 = a1[38];
  v9 = a1[50];
  swift_retain(a1[51]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  return a1;
}

_QWORD *sub_1003974A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[11];
  v5 = a1[21];
  v6 = a1[33];
  v7 = a1[38];
  v8 = a1[50];
  v9 = a1[51];
  swift_release(a1[6]);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_release(v8);
  swift_release(v9);
  return a1;
}

double sub_100397548@<D0>(uint64_t a1@<X8>)
{
  return sub_100395740(a1);
}

unint64_t sub_100397554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCD18;
  if (!qword_100BDCD18)
  {
    v1 = sub_100075EB0(&qword_100BDCD10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCD18);
  }
  return result;
}

void sub_1003975B8()
{
  DetailChartDataElement.id.getter();
  sub_10004A298();
}

void sub_1003975D8(uint64_t a1)
{
  sub_1003975F4(a1, (void (*)(uint64_t))sub_100393714);
}

void sub_1003975E8(uint64_t a1)
{
  sub_1003975F4(a1, (void (*)(uint64_t))sub_100393C08);
}

void sub_1003975F4(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1000C5458();
  a2(a1);
  sub_100079F70();
}

void sub_10039763C()
{
  sub_10034AEE4((uint64_t)&unk_100BDCD60);
}

void sub_100397668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  type metadata accessor for TemperatureAveragesDetailInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  type metadata accessor for PrecipitationAveragesDetailInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  type metadata accessor for AveragesDetailInput.Content(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_10009883C();
  __chkstk_darwin(v7);
  sub_10008616C();
  __chkstk_darwin(v8);
  sub_1000BA294(&qword_100BDCF58);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v14 = v11 - v10 + *(int *)(v13 + 48);
  sub_100080C0C(a1, v11 - v10, type metadata accessor for AveragesDetailInput.Content);
  sub_100080C0C(a2, v14, type metadata accessor for AveragesDetailInput.Content);
  v15 = (char *)sub_1003977B0 + 4 * byte_1009996B0[swift_getEnumCaseMultiPayload(v12)];
  __asm { BR              X10 }
}

BOOL sub_1003977B0()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  BOOL v3;

  sub_100080C0C(v0, (uint64_t)v2, type metadata accessor for AveragesDetailInput.Content);
  if (sub_1000C4884())
  {
    sub_100021A14(v0, &qword_100BDCF58);
    return 0;
  }
  else
  {
    v3 = *v2 == *v1;
    sub_1000215BC(v0, type metadata accessor for AveragesDetailInput.Content);
  }
  return v3;
}

uint64_t sub_100397918(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  sub_100397668(a1, a2);
  if ((v4 & 1) != 0
    && (v5 = type metadata accessor for AveragesDetailInput(0),
        *(unsigned __int8 *)(a1 + *(int *)(v5 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 20))))
  {
    return static Location.== infix(_:_:)(a1 + *(int *)(v5 + 24), a2 + *(int *)(v5 + 24));
  }
  else
  {
    return 0;
  }
}

void sub_100397980(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;

  v25 = sub_1000992C4();
  v4 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  sub_100098728();
  v7 = v6 - v5;
  v8 = type metadata accessor for AveragesDetailInput.Content(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = (char *)(v11 - v10);
  sub_1000BA294(&qword_100BDCF60);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  v17 = type metadata accessor for AveragesDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  sub_100397B68(a1, v16);
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17) == 1)
  {
    sub_100021A14(v16, &qword_100BDCF60);
    swift_storeEnumTagMultiPayload(a2, v8, 3);
    v22 = type metadata accessor for AveragesDetailInput(0);
    static Location.current.getter();
    *(_BYTE *)(a2 + *(int *)(v22 + 20)) = 0;
  }
  else
  {
    sub_10007802C(v16, v21, type metadata accessor for AveragesDetailViewState);
    v23 = sub_100397FB4(a1, v21, v12);
    v24 = *(_BYTE *)(v21 + *(int *)(v17 + 20));
    (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v4 + 16))(v7, v21, v25, v23);
    sub_1000215BC(v21, type metadata accessor for AveragesDetailViewState);
    sub_10007802C((uint64_t)v12, a2, type metadata accessor for AveragesDetailInput.Content);
    v22 = type metadata accessor for AveragesDetailInput(0);
    *(_BYTE *)(a2 + *(int *)(v22 + 20)) = v24;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a2 + *(int *)(v22 + 24), v7, v25);
  }
  _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v22);
  sub_100098640();
}

void sub_100397B68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v62 = a2;
  v60 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000986FC();
  v57 = v5;
  sub_10009D2A4();
  __chkstk_darwin(v6);
  v59 = (uint64_t)&v53 - v7;
  v61 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v56 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v58 = (uint64_t)&v53 - v11;
  v12 = type metadata accessor for AveragesDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_1000986FC();
  v54 = v14;
  sub_10009D2A4();
  __chkstk_darwin(v15);
  v55 = (char *)&v53 - v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  v19 = (char *)&v53 - v18;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_10009883C();
  v23 = v21 - v22;
  __chkstk_darwin(v24);
  sub_10008616C();
  __chkstk_darwin(v25);
  v27 = (char *)&v53 - v26;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_10009883C();
  v31 = v29 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v53 - v33;
  v35 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100080C0C(v35, (uint64_t)v27, type metadata accessor for ModalViewState);
  if (sub_1000988D0((uint64_t)v27) != 5)
  {
    sub_1000215BC((uint64_t)v27, type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  v53 = v12;
  sub_1000C0CEC((uint64_t)v27, (uint64_t)v34);
  sub_1000C0CEC((uint64_t)v34, v31);
  if (swift_getEnumCaseMultiPayload(v31) != 5)
  {
    sub_1000215BC(v31, type metadata accessor for ModalViewState.LocationDetailModal);
    v12 = v53;
LABEL_6:
    sub_100080C0C(v35, v2, type metadata accessor for ModalViewState);
    v39 = sub_1000988D0(v2);
    v40 = v61;
    if (v39)
    {
      sub_1000215BC(v2, type metadata accessor for ModalViewState);
    }
    else
    {
      v41 = v12;
      v42 = v58;
      sub_1000C0CEC(v2, v58);
      v43 = v59;
      sub_100080C0C(v42 + *(int *)(v40 + 20), v59, type metadata accessor for LocationPreviewModalViewState);
      sub_1000215BC(v42, type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload(v43) == 7)
      {
        v44 = v43;
        v45 = v55;
        sub_1000C268C(v44);
        v46 = (uint64_t)v45;
        v37 = v62;
        goto LABEL_18;
      }
      sub_1000215BC(v43, type metadata accessor for LocationPreviewModalViewState);
    }
    sub_100080C0C(v35, v23, type metadata accessor for ModalViewState);
    if (sub_1000988D0(v23) != 4)
    {
      sub_1000215BC(v23, type metadata accessor for ModalViewState);
      goto LABEL_15;
    }
    v47 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v47) == 1)
    {
      sub_100021A14(v23, &qword_100BC5F58);
LABEL_15:
      v38 = 1;
      v37 = v62;
      goto LABEL_21;
    }
    v41 = v12;
    v48 = v56;
    sub_1000C268C(v23);
    v49 = v57;
    sub_100080C0C(v48 + *(int *)(v40 + 20), v57, type metadata accessor for LocationPreviewModalViewState);
    sub_1000215BC(v48, type metadata accessor for LocationPreviewViewState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49);
    v37 = v62;
    if (EnumCaseMultiPayload != 7)
    {
      sub_1000215BC(v49, type metadata accessor for LocationPreviewModalViewState);
      v38 = 1;
      goto LABEL_20;
    }
    v51 = v49;
    v52 = v54;
    sub_1000C0CEC(v51, v54);
    v46 = v52;
LABEL_18:
    sub_1000C268C(v46);
    v38 = 0;
LABEL_20:
    v12 = v41;
    goto LABEL_21;
  }
  sub_1000C268C(v31);
  v36 = (uint64_t)v19;
  v37 = v62;
  sub_1000C268C(v36);
  v38 = 0;
  v12 = v53;
LABEL_21:
  _s7Weather24LocationCompositionStateOwst_0(v37, v38, 1, v12);
  sub_100098640();
}

double sub_100397FB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  double result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94[4];

  v92 = a3;
  v87 = type metadata accessor for AveragesDetailViewState(0);
  __chkstk_darwin(v87);
  v89 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BDCF68);
  __chkstk_darwin(v6);
  v82 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for PrecipitationAveragesDetailInput(0);
  __chkstk_darwin(v81);
  v78 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDCF70);
  __chkstk_darwin(v9);
  v80 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for TemperatureAveragesDetailInput(0);
  __chkstk_darwin(v79);
  v77 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WeatherStatisticsModel(0);
  v85 = *(_QWORD *)(v12 - 8);
  v86 = v12;
  __chkstk_darwin(v12);
  v84 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v17);
  v88 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v19);
  v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocationWeatherDataState(0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v76 - v26;
  v91 = a1;
  v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v28);
  v90 = a2;
  v30 = Location.id.getter(v29);
  v32 = v31;
  sub_1000EED10(v30, v31, v28);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v28);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22) == 1)
  {
    sub_100021A14((uint64_t)v21, &qword_100BC3380);
LABEL_10:
    v48 = (uint64_t)v89;
    v47 = v90;
    if (qword_100BC23F0 != -1)
      swift_once(&qword_100BC23F0, sub_100159638);
    v49 = type metadata accessor for Logger(0);
    sub_1000AECD4(v49, (uint64_t)qword_100CAEFC8);
    sub_100080C0C(v47, v48, type metadata accessor for AveragesDetailViewState);
    v51 = Logger.logObject.getter(v50);
    v53 = static os_log_type_t.error.getter(v51, v52);
    if (os_log_type_enabled(v51, v53))
    {
      v54 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(32, -1);
      *(_DWORD *)v54 = 141558275;
      v93 = 1752392040;
      v94[0] = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
      *(_WORD *)(v54 + 12) = 2081;
      v56 = type metadata accessor for Location(0);
      sub_1002084DC();
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v56);
      v59 = v58;
      v93 = sub_1000CE1C8(v57, v58, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
      swift_bridgeObjectRelease(v59);
      sub_1000215BC(v48, type metadata accessor for AveragesDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v51, v53, "Failed to create averages detail input due to missing weather data; location=%{private,mask.hash}s",
        (uint8_t *)v54,
        0x16u);
      swift_arrayDestroy(v55, 1);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      sub_1000215BC(v48, type metadata accessor for AveragesDetailViewState);
    }

    v60 = v91;
    v61 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    goto LABEL_16;
  }
  sub_10007802C((uint64_t)v21, (uint64_t)v27, type metadata accessor for LocationWeatherDataState);
  sub_100080C0C((uint64_t)v27, (uint64_t)v25, type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload(v25) != 1)
  {
    sub_1000215BC((uint64_t)v27, type metadata accessor for LocationWeatherDataState);
    sub_1000215BC((uint64_t)v25, type metadata accessor for LocationWeatherDataState);
    goto LABEL_10;
  }
  v33 = sub_1000BA294(&qword_100BC3358);
  v34 = (uint64_t)&v25[*(int *)(v33 + 48)];
  v35 = (uint64_t)&v25[*(int *)(v33 + 64)];
  v36 = v88;
  sub_10007802C((uint64_t)v25, v88, type metadata accessor for WeatherData);
  sub_1000215BC(v35, type metadata accessor for NewsDataModel);
  sub_1000215BC(v34, type metadata accessor for PreprocessedWeatherData);
  sub_100080C0C(v36 + *(int *)(v17 + 32), (uint64_t)v16, type metadata accessor for WeatherData.WeatherStatisticsState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16);
  if (!EnumCaseMultiPayload)
  {
    sub_1000215BC(v36, type metadata accessor for WeatherData);
    sub_1000215BC((uint64_t)v27, type metadata accessor for LocationWeatherDataState);
    swift_bridgeObjectRelease(*((_QWORD *)v16 + 1));
    v61 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    v60 = v91;
LABEL_16:
    v62 = v60 + v61;
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1000215BC(v36, type metadata accessor for WeatherData);
    sub_1000215BC((uint64_t)v27, type metadata accessor for LocationWeatherDataState);
    v65 = type metadata accessor for AveragesDetailInput.Content(0);
    v66 = v92;
    v67 = 4;
    goto LABEL_23;
  }
  v39 = (uint64_t)v84;
  v38 = v85;
  v40 = v86;
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v16, v86);
  v41 = v87;
  v42 = v90;
  if ((*(_BYTE *)(v90 + *(int *)(v87 + 20)) & 1) != 0)
  {
    sub_1000DB418(v83 + 2, v83[5]);
    v43 = v42 + *(int *)(v41 + 24);
    v44 = v82;
    v45 = v91;
    sub_1002456B4(v91, v39, v42, v43, v82);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
    sub_1000215BC(v88, type metadata accessor for WeatherData);
    sub_1000215BC((uint64_t)v27, type metadata accessor for LocationWeatherDataState);
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v81) != 1)
    {
      v70 = v78;
      sub_10007802C(v44, v78, type metadata accessor for PrecipitationAveragesDetailInput);
      v71 = v70;
      v72 = v92;
      sub_10007802C(v71, (uint64_t)v92, type metadata accessor for PrecipitationAveragesDetailInput);
      v65 = type metadata accessor for AveragesDetailInput.Content(0);
      v66 = v72;
      v67 = 1;
      goto LABEL_23;
    }
    v46 = &qword_100BDCF68;
  }
  else
  {
    sub_1000DB418(v83 + 7, v83[10]);
    v69 = v42 + *(int *)(v41 + 24);
    v44 = v80;
    v45 = v91;
    sub_10020731C(v91, v39, v42, v69, v80);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
    sub_1000215BC(v88, type metadata accessor for WeatherData);
    sub_1000215BC((uint64_t)v27, type metadata accessor for LocationWeatherDataState);
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v79) != 1)
    {
      v73 = v77;
      sub_10007802C(v44, v77, type metadata accessor for TemperatureAveragesDetailInput);
      v74 = v73;
      v75 = v92;
      sub_10007802C(v74, (uint64_t)v92, type metadata accessor for TemperatureAveragesDetailInput);
      v65 = type metadata accessor for AveragesDetailInput.Content(0);
      v66 = v75;
      v67 = 2;
      goto LABEL_23;
    }
    v46 = &qword_100BDCF70;
  }
  sub_100021A14(v44, v46);
  v62 = v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
LABEL_17:
  swift_beginAccess(v62, v94, 0, 0);
  if ((*(_BYTE *)(v62 + *(int *)(type metadata accessor for EnvironmentState(0) + 60)) & 1) != 0)
  {
    v63 = 0;
  }
  else if (*(_BYTE *)(v62 + 2) == 4)
  {
    v63 = 1;
  }
  else
  {
    v63 = 2;
  }
  v64 = v92;
  *v92 = v63;
  v65 = type metadata accessor for AveragesDetailInput.Content(0);
  v66 = v64;
  v67 = 0;
LABEL_23:
  *(_QWORD *)&result = swift_storeEnumTagMultiPayload(v66, v65, v67).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for AveragesDetailInputFactory()
{
  return objc_opt_self(_TtC7Weather26AveragesDetailInputFactory);
}

char *sub_100398864(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void (*v167)(char *, char *, uint64_t);
  void (*v168)(char *, char *, uint64_t);
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  void (*v171)(char *, char *);
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  void (*v176)(char *, char *);
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for AveragesDetailInput.Content(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v34 = *a2;
      *(_QWORD *)a1 = *a2;
      v35 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v36 = v35[5];
      v37 = &a1[v36];
      v38 = (char *)a2 + v36;
      v39 = type metadata accessor for TimeZone(0);
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      v41 = swift_bridgeObjectRetain(v34);
      v169 = v40;
      v170 = v39;
      ((void (*)(char *, char *, uint64_t, __n128))v40)(v37, v38, v39, v41);
      v42 = v35[6];
      v43 = &a1[v42];
      v44 = (char *)a2 + v42;
      v45 = type metadata accessor for Locale(0);
      v171 = *(void (**)(char *, char *))(*(_QWORD *)(v45 - 8) + 16);
      v173 = v45;
      v171(v43, v44);
      v46 = v35[7];
      v47 = *(uint64_t *)((char *)a2 + v46);
      *(_QWORD *)&a1[v46] = v47;
      v48 = v35[8];
      v49 = &a1[v48];
      v50 = (uint64_t *)((char *)a2 + v48);
      v51 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain(v47);
      v180 = v7;
      v182 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, (uint64_t)v51))
      {
        v52 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v49 = *v50;
        v100 = v51[5];
        v101 = &v49[v100];
        v102 = (char *)v50 + v100;
        v103 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        *(_QWORD *)&v49[v51[6]] = *(_QWORD *)((char *)v50 + v51[6]);
        *(_QWORD *)&v49[v51[7]] = *(_QWORD *)((char *)v50 + v51[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
      }
      v104 = v35[9];
      v105 = &a1[v104];
      v106 = (char *)a2 + v104;
      v107 = type metadata accessor for Date(0);
      v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
      v108(v105, v106, v107);
      v108(&a1[v35[10]], (char *)a2 + v35[10], v107);
      v109 = v35[11];
      v110 = &a1[v109];
      v111 = (char *)a2 + v109;
      v112 = sub_1000BA294(&qword_100BCB238);
      v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
      v167(v110, v111, v112);
      v113 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v114 = v113[5];
      v115 = &a1[v114];
      v116 = (char *)a2 + v114;
      v117 = type metadata accessor for Calendar(0);
      v176 = *(void (**)(char *, char *))(*(_QWORD *)(v117 - 8) + 16);
      v178 = v117;
      v176(v115, v116);
      v118 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v168 = v108;
      v108(&v115[v118[5]], &v116[v118[5]], v107);
      v119 = v118[6];
      v120 = &v115[v119];
      v121 = &v116[v119];
      v122 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
      v123 = v118[7];
      v124 = &v115[v123];
      v125 = &v116[v123];
      v126 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
      v127 = v118[8];
      v128 = &v115[v127];
      v129 = &v116[v127];
      v130 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
      ((void (*)(char *, char *, uint64_t))v171)(&v115[v118[9]], &v116[v118[9]], v173);
      v131 = v113[6];
      v132 = *(uint64_t *)((char *)a2 + v131);
      *(_QWORD *)&a1[v131] = v132;
      v133 = v113[7];
      v134 = (uint64_t *)&a1[v133];
      v135 = (uint64_t *)((char *)a2 + v133);
      v136 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v132);
      if (swift_getEnumCaseMultiPayload(v135) == 1)
      {
        v137 = *v135;
        *v134 = *v135;
        swift_bridgeObjectRetain(v137);
        v138 = 1;
      }
      else
      {
        v139 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v134, v135, v139);
        v138 = 0;
      }
      swift_storeEnumTagMultiPayload(v134, v136, v138);
      v140 = v113[8];
      v141 = &a1[v140];
      v142 = (char *)a2 + v140;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v140, 1, v112))
      {
        v143 = sub_1000BA294(&qword_100BCB248);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        v167(v141, v142, v112);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v112);
      }
      v169(&a1[v113[9]], (char *)a2 + v113[9], v170);
      v168(&a1[v113[10]], (char *)a2 + v113[10], v107);
      v144 = v113[11];
      v145 = &a1[v144];
      v146 = (char *)a2 + v144;
      v147 = *(void **)v146;
      v148 = (void *)*((_QWORD *)v146 + 1);
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *((_QWORD *)v145 + 1) = v148;
      v149 = (void *)*((_QWORD *)v146 + 2);
      v150 = (void *)*((_QWORD *)v146 + 3);
      *((_QWORD *)v145 + 2) = v149;
      *((_QWORD *)v145 + 3) = v150;
      v151 = (void *)*((_QWORD *)v146 + 4);
      v152 = (void *)*((_QWORD *)v146 + 5);
      *((_QWORD *)v145 + 4) = v151;
      *((_QWORD *)v145 + 5) = v152;
      v153 = v113[12];
      v154 = &a1[v153];
      v155 = (char *)a2 + v153;
      v156 = v147;
      v157 = v148;
      v158 = v149;
      v159 = v150;
      v160 = v151;
      v161 = v152;
      ((void (*)(char *, char *, uint64_t))v176)(v154, v155, v178);
      swift_storeEnumTagMultiPayload(a1, v180, 2);
      v6 = v182;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Date(0);
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, (char *)a2, v9);
      v11 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v11[6];
      v17 = &a1[v16];
      v18 = (char *)a2 + v16;
      v19 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = v11[7];
      v21 = &a1[v20];
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      v24 = v11[8];
      v25 = &a1[v24];
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for Locale(0);
      v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v177(v25, v26, v27);
      v28 = v11[9];
      v29 = &a1[v28];
      v30 = (uint64_t *)((char *)a2 + v28);
      v31 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      v179 = v7;
      v181 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
      {
        v32 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v29 = *v30;
        v10(&v29[v31[5]], (char *)v30 + v31[5], v9);
        *(_QWORD *)&v29[v31[6]] = *(_QWORD *)((char *)v30 + v31[6]);
        *(_QWORD *)&v29[v31[7]] = *(_QWORD *)((char *)v30 + v31[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
      }
      v53 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v54 = v53[5];
      v55 = &a1[v54];
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for Calendar(0);
      v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      v175(v55, v56, v57);
      v58 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v172 = v10;
      v174 = v9;
      v10(&v55[v58[5]], &v56[v58[5]], v9);
      v59 = v58[6];
      v60 = &v55[v59];
      v61 = &v56[v59];
      v62 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      v63 = v58[7];
      v64 = &v55[v63];
      v65 = &v56[v63];
      v66 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
      v67 = v58[8];
      v68 = &v55[v67];
      v69 = &v56[v67];
      v70 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      v177(&v55[v58[9]], &v56[v58[9]], v27);
      v71 = v53[6];
      v72 = *(uint64_t *)((char *)a2 + v71);
      *(_QWORD *)&a1[v71] = v72;
      v73 = v53[7];
      v74 = (uint64_t *)&a1[v73];
      v75 = (uint64_t *)((char *)a2 + v73);
      v76 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v72);
      if (swift_getEnumCaseMultiPayload(v75) == 1)
      {
        v77 = *v75;
        *v74 = *v75;
        swift_bridgeObjectRetain(v77);
        v78 = 1;
      }
      else
      {
        v79 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v74, v75, v79);
        v78 = 0;
      }
      v6 = v181;
      v80 = swift_storeEnumTagMultiPayload(v74, v76, v78);
      ((void (*)(char *, char *, uint64_t, __n128))v175)(&a1[v53[8]], (char *)a2 + v53[8], v57, v80);
      v172(&a1[v53[9]], (char *)a2 + v53[9], v174);
      v81 = v53[10];
      v82 = &a1[v81];
      v83 = (char *)a2 + v81;
      v84 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
      v85 = v53[11];
      v86 = &a1[v85];
      v87 = (char *)a2 + v85;
      v88 = *(void **)v87;
      v89 = (void *)*((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v89;
      v90 = (void *)*((_QWORD *)v87 + 2);
      v91 = (void *)*((_QWORD *)v87 + 3);
      *((_QWORD *)v86 + 2) = v90;
      *((_QWORD *)v86 + 3) = v91;
      v92 = (void *)*((_QWORD *)v87 + 4);
      v93 = (void *)*((_QWORD *)v87 + 5);
      *((_QWORD *)v86 + 4) = v92;
      *((_QWORD *)v86 + 5) = v93;
      v94 = v88;
      v95 = v89;
      v96 = v90;
      v97 = v91;
      v98 = v92;
      v99 = v93;
      swift_storeEnumTagMultiPayload(a1, v179, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v162 = *(int *)(v6 + 24);
    a1[*(int *)(v6 + 20)] = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v163 = &a1[v162];
    v164 = (char *)a2 + v162;
    v165 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16))(v163, v164, v165);
  }
  return a1;
}

uint64_t type metadata accessor for AveragesDetailInput.Content(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDCF20, (uint64_t)&nominal type descriptor for AveragesDetailInput.Content);
}

uint64_t sub_10039917C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id *v60;
  uint64_t v61;
  uint64_t v62;
  id *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t);
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;

  type metadata accessor for AveragesDetailInput.Content(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 2)
  {
    v74 = a2;
    swift_bridgeObjectRelease();
    v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v33 = a1 + v32[5];
    v34 = type metadata accessor for TimeZone(0);
    v68 = *(void (**)(uint64_t))(*(_QWORD *)(v34 - 8) + 8);
    v69 = v34;
    v68(v33);
    v35 = a1 + v32[6];
    v36 = type metadata accessor for Locale(0);
    v70 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8);
    v70(v35, v36);
    swift_bridgeObjectRelease();
    v37 = a1 + v32[8];
    v38 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v38))
    {
      v39 = v37 + *(int *)(v38 + 20);
      v40 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    }
    v41 = a1 + v32[9];
    v42 = type metadata accessor for Date(0);
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8);
    v43(v41, v42);
    v43(a1 + v32[10], v42);
    v44 = a1 + v32[11];
    v45 = sub_1000BA294(&qword_100BCB238);
    v67 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
    v67(v44, v45);
    v46 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v47 = a1 + v46[5];
    v48 = type metadata accessor for Calendar(0);
    v72 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8);
    v72(v47, v48);
    v49 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v43(v47 + v49[5], v42);
    v50 = v47 + v49[6];
    v51 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
    v52 = v47 + v49[7];
    v53 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
    v54 = v47 + v49[8];
    v55 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
    v70(v47 + v49[9], v36);
    swift_bridgeObjectRelease();
    v56 = a1 + v46[7];
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v56) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v61 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v56, v61);
    }
    a2 = v74;
    v62 = a1 + v46[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v62, 1, v45))
      v67(v62, v45);
    ((void (*)(uint64_t, uint64_t))v68)(a1 + v46[9], v69);
    v43(a1 + v46[10], v42);
    v63 = (id *)(a1 + v46[11]);

    v72(a1 + v46[12], v48);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v73 = a2;
    v5 = type metadata accessor for Date(0);
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(a1, v5);
    v7 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v8 = a1 + v7[5];
    v9 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = a1 + v7[6];
    v11 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = a1 + v7[7];
    v13 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    v14 = a1 + v7[8];
    v15 = type metadata accessor for Locale(0);
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v17 = a1 + v7[9];
    v18 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
      v6(v17 + *(int *)(v18 + 20), v5);
    v19 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v20 = a1 + v19[5];
    v21 = type metadata accessor for Calendar(0);
    v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
    v22(v20, v21);
    v23 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v71 = v6;
    v6(v20 + v23[5], v5);
    v24 = v20 + v23[6];
    v25 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v20 + v23[7];
    v27 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    v28 = v20 + v23[8];
    v29 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
    v16(v20 + v23[9], v15);
    swift_bridgeObjectRelease();
    v30 = a1 + v19[7];
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v30) == 1)
    {
      v31 = swift_bridgeObjectRelease();
    }
    else
    {
      v57 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v30, v57);
    }
    a2 = v73;
    ((void (*)(uint64_t, uint64_t, __n128))v22)(a1 + v19[8], v21, v31);
    v71(a1 + v19[9], v5);
    v58 = a1 + v19[10];
    v59 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
    v60 = (id *)(a1 + v19[11]);

  }
  v64 = a1 + *(int *)(a2 + 24);
  v65 = type metadata accessor for Location(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
}

char *sub_1003997C0(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void (*v166)(char *, char *, uint64_t);
  void (*v167)(char *, char *, uint64_t);
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  void (*v170)(char *, char *);
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  void (*v175)(char *, char *);
  void (*v176)(char *, char *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;

  v6 = type metadata accessor for AveragesDetailInput.Content(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v32 = *a2;
    *(_QWORD *)a1 = *a2;
    v33 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v34 = v33[5];
    v35 = &a1[v34];
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for TimeZone(0);
    v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    v39 = swift_bridgeObjectRetain(v32);
    v168 = v38;
    v169 = v37;
    ((void (*)(char *, char *, uint64_t, __n128))v38)(v35, v36, v37, v39);
    v40 = v33[6];
    v41 = &a1[v40];
    v42 = (char *)a2 + v40;
    v43 = type metadata accessor for Locale(0);
    v170 = *(void (**)(char *, char *))(*(_QWORD *)(v43 - 8) + 16);
    v172 = v43;
    v170(v41, v42);
    v44 = v33[7];
    v45 = *(uint64_t *)((char *)a2 + v44);
    *(_QWORD *)&a1[v44] = v45;
    v46 = v33[8];
    v47 = &a1[v46];
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain(v45);
    v179 = v6;
    v181 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, (uint64_t)v49))
    {
      v50 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v47 = *v48;
      v99 = v49[5];
      v100 = &v47[v99];
      v101 = (char *)v48 + v99;
      v102 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
      *(_QWORD *)&v47[v49[6]] = *(_QWORD *)((char *)v48 + v49[6]);
      *(_QWORD *)&v47[v49[7]] = *(_QWORD *)((char *)v48 + v49[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, (uint64_t)v49);
    }
    v103 = v33[9];
    v104 = &a1[v103];
    v105 = (char *)a2 + v103;
    v106 = type metadata accessor for Date(0);
    v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
    v107(v104, v105, v106);
    v107(&a1[v33[10]], (char *)a2 + v33[10], v106);
    v108 = v33[11];
    v109 = &a1[v108];
    v110 = (char *)a2 + v108;
    v111 = sub_1000BA294(&qword_100BCB238);
    v166 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
    v166(v109, v110, v111);
    v112 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v113 = v112[5];
    v114 = &a1[v113];
    v115 = (char *)a2 + v113;
    v116 = type metadata accessor for Calendar(0);
    v175 = *(void (**)(char *, char *))(*(_QWORD *)(v116 - 8) + 16);
    v177 = v116;
    v175(v114, v115);
    v117 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v167 = v107;
    v107(&v114[v117[5]], &v115[v117[5]], v106);
    v118 = v117[6];
    v119 = &v114[v118];
    v120 = &v115[v118];
    v121 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v119, v120, v121);
    v122 = v117[7];
    v123 = &v114[v122];
    v124 = &v115[v122];
    v125 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
    v126 = v117[8];
    v127 = &v114[v126];
    v128 = &v115[v126];
    v129 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v127, v128, v129);
    ((void (*)(char *, char *, uint64_t))v170)(&v114[v117[9]], &v115[v117[9]], v172);
    v130 = v112[6];
    v131 = *(uint64_t *)((char *)a2 + v130);
    *(_QWORD *)&a1[v130] = v131;
    v132 = v112[7];
    v133 = (uint64_t *)&a1[v132];
    v134 = (uint64_t *)((char *)a2 + v132);
    v135 = type metadata accessor for NewsDataModel(0);
    swift_bridgeObjectRetain(v131);
    if (swift_getEnumCaseMultiPayload(v134) == 1)
    {
      v136 = *v134;
      *v133 = *v134;
      swift_bridgeObjectRetain(v136);
      v137 = 1;
    }
    else
    {
      v138 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v133, v134, v138);
      v137 = 0;
    }
    swift_storeEnumTagMultiPayload(v133, v135, v137);
    v139 = v112[8];
    v140 = &a1[v139];
    v141 = (char *)a2 + v139;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v139, 1, v111))
    {
      v142 = sub_1000BA294(&qword_100BCB248);
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    }
    else
    {
      v166(v140, v141, v111);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v111);
    }
    v168(&a1[v112[9]], (char *)a2 + v112[9], v169);
    v167(&a1[v112[10]], (char *)a2 + v112[10], v106);
    v143 = v112[11];
    v144 = &a1[v143];
    v145 = (char *)a2 + v143;
    v146 = *(void **)v145;
    v147 = (void *)*((_QWORD *)v145 + 1);
    *(_QWORD *)v144 = *(_QWORD *)v145;
    *((_QWORD *)v144 + 1) = v147;
    v148 = (void *)*((_QWORD *)v145 + 2);
    v149 = (void *)*((_QWORD *)v145 + 3);
    *((_QWORD *)v144 + 2) = v148;
    *((_QWORD *)v144 + 3) = v149;
    v150 = (void *)*((_QWORD *)v145 + 4);
    v151 = (void *)*((_QWORD *)v145 + 5);
    *((_QWORD *)v144 + 4) = v150;
    *((_QWORD *)v144 + 5) = v151;
    v152 = v112[12];
    v153 = &a1[v152];
    v154 = (char *)a2 + v152;
    v155 = v146;
    v156 = v147;
    v157 = v148;
    v158 = v149;
    v159 = v150;
    v160 = v151;
    ((void (*)(char *, char *, uint64_t))v175)(v153, v154, v177);
    swift_storeEnumTagMultiPayload(a1, v179, 2);
    a3 = v181;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, (char *)a2, v8);
    v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v11 = v10[5];
    v12 = &a1[v11];
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = v10[6];
    v16 = &a1[v15];
    v17 = (char *)a2 + v15;
    v18 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = v10[7];
    v20 = &a1[v19];
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = v10[8];
    v24 = &a1[v23];
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Locale(0);
    v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v174(v24, v25, v26);
    v27 = v10[9];
    v28 = &a1[v27];
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    v178 = v6;
    v180 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
    {
      v31 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v28 = *v29;
      v9(&v28[v30[5]], (char *)v29 + v30[5], v8);
      *(_QWORD *)&v28[v30[6]] = *(_QWORD *)((char *)v29 + v30[6]);
      *(_QWORD *)&v28[v30[7]] = *(_QWORD *)((char *)v29 + v30[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    }
    v51 = v9;
    v52 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v53 = v52[5];
    v54 = &a1[v53];
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for Calendar(0);
    v171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
    v171(v54, v55, v56);
    v57 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v173 = v8;
    v176 = v51;
    v51(&v54[v57[5]], &v55[v57[5]], v8);
    v58 = v57[6];
    v59 = &v54[v58];
    v60 = &v55[v58];
    v61 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
    v62 = v57[7];
    v63 = &v54[v62];
    v64 = &v55[v62];
    v65 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
    v66 = v57[8];
    v67 = &v54[v66];
    v68 = &v55[v66];
    v69 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
    v174(&v54[v57[9]], &v55[v57[9]], v26);
    v70 = v52[6];
    v71 = *(uint64_t *)((char *)a2 + v70);
    *(_QWORD *)&a1[v70] = v71;
    v72 = v52[7];
    v73 = (uint64_t *)&a1[v72];
    v74 = (uint64_t *)((char *)a2 + v72);
    v75 = type metadata accessor for NewsDataModel(0);
    swift_bridgeObjectRetain(v71);
    if (swift_getEnumCaseMultiPayload(v74) == 1)
    {
      v76 = *v74;
      *v73 = *v74;
      swift_bridgeObjectRetain(v76);
      v77 = 1;
    }
    else
    {
      v78 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v73, v74, v78);
      v77 = 0;
    }
    a3 = v180;
    v79 = swift_storeEnumTagMultiPayload(v73, v75, v77);
    ((void (*)(char *, char *, uint64_t, __n128))v171)(&a1[v52[8]], (char *)a2 + v52[8], v56, v79);
    v176(&a1[v52[9]], (char *)a2 + v52[9], v173);
    v80 = v52[10];
    v81 = &a1[v80];
    v82 = (char *)a2 + v80;
    v83 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
    v84 = v52[11];
    v85 = &a1[v84];
    v86 = (char *)a2 + v84;
    v87 = *(void **)v86;
    v88 = (void *)*((_QWORD *)v86 + 1);
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *((_QWORD *)v85 + 1) = v88;
    v89 = (void *)*((_QWORD *)v86 + 2);
    v90 = (void *)*((_QWORD *)v86 + 3);
    *((_QWORD *)v85 + 2) = v89;
    *((_QWORD *)v85 + 3) = v90;
    v91 = (void *)*((_QWORD *)v86 + 4);
    v92 = (void *)*((_QWORD *)v86 + 5);
    *((_QWORD *)v85 + 4) = v91;
    *((_QWORD *)v85 + 5) = v92;
    v93 = v87;
    v94 = v88;
    v95 = v89;
    v96 = v90;
    v97 = v91;
    v98 = v92;
    swift_storeEnumTagMultiPayload(a1, v178, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v161 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v162 = &a1[v161];
  v163 = (char *)a2 + v161;
  v164 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
  return a1;
}

char *sub_10039A0A0(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  void (*v165)(char *, char *, uint64_t);
  void (*v166)(char *, char *, uint64_t);
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  void (*v169)(char *, char *);
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  void (*v174)(char *, char *);
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  if (a1 != (char *)a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for AveragesDetailInput.Content);
    v6 = type metadata accessor for AveragesDetailInput.Content(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v32 = *a2;
      *(_QWORD *)a1 = *a2;
      v33 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v34 = v33[5];
      v35 = &a1[v34];
      v36 = (char *)a2 + v34;
      v37 = type metadata accessor for TimeZone(0);
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      v39 = swift_bridgeObjectRetain(v32);
      v167 = v38;
      v168 = v37;
      ((void (*)(char *, char *, uint64_t, __n128))v38)(v35, v36, v37, v39);
      v40 = v33[6];
      v41 = &a1[v40];
      v42 = (char *)a2 + v40;
      v43 = type metadata accessor for Locale(0);
      v169 = *(void (**)(char *, char *))(*(_QWORD *)(v43 - 8) + 16);
      v171 = v43;
      v169(v41, v42);
      v44 = v33[7];
      v45 = *(uint64_t *)((char *)a2 + v44);
      *(_QWORD *)&a1[v44] = v45;
      v46 = v33[8];
      v47 = &a1[v46];
      v48 = (uint64_t *)((char *)a2 + v46);
      v49 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain(v45);
      v178 = v6;
      v180 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, (uint64_t)v49))
      {
        v50 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v47 = *v48;
        v98 = v49[5];
        v99 = &v47[v98];
        v100 = (char *)v48 + v98;
        v101 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
        *(_QWORD *)&v47[v49[6]] = *(_QWORD *)((char *)v48 + v49[6]);
        *(_QWORD *)&v47[v49[7]] = *(_QWORD *)((char *)v48 + v49[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, (uint64_t)v49);
      }
      v102 = v33[9];
      v103 = &a1[v102];
      v104 = (char *)a2 + v102;
      v105 = type metadata accessor for Date(0);
      v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
      v106(v103, v104, v105);
      v106(&a1[v33[10]], (char *)a2 + v33[10], v105);
      v107 = v33[11];
      v108 = &a1[v107];
      v109 = (char *)a2 + v107;
      v110 = sub_1000BA294(&qword_100BCB238);
      v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
      v165(v108, v109, v110);
      v111 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v112 = v111[5];
      v113 = &a1[v112];
      v114 = (char *)a2 + v112;
      v115 = type metadata accessor for Calendar(0);
      v174 = *(void (**)(char *, char *))(*(_QWORD *)(v115 - 8) + 16);
      v176 = v115;
      v174(v113, v114);
      v116 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v166 = v106;
      v106(&v113[v116[5]], &v114[v116[5]], v105);
      v117 = v116[6];
      v118 = &v113[v117];
      v119 = &v114[v117];
      v120 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
      v121 = v116[7];
      v122 = &v113[v121];
      v123 = &v114[v121];
      v124 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
      v125 = v116[8];
      v126 = &v113[v125];
      v127 = &v114[v125];
      v128 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
      ((void (*)(char *, char *, uint64_t))v169)(&v113[v116[9]], &v114[v116[9]], v171);
      v129 = v111[6];
      v130 = *(uint64_t *)((char *)a2 + v129);
      *(_QWORD *)&a1[v129] = v130;
      v131 = v111[7];
      v132 = (uint64_t *)&a1[v131];
      v133 = (uint64_t *)((char *)a2 + v131);
      v134 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v130);
      if (swift_getEnumCaseMultiPayload(v133) == 1)
      {
        v135 = *v133;
        *v132 = *v133;
        swift_bridgeObjectRetain(v135);
        v136 = 1;
      }
      else
      {
        v137 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v132, v133, v137);
        v136 = 0;
      }
      swift_storeEnumTagMultiPayload(v132, v134, v136);
      v138 = v111[8];
      v139 = &a1[v138];
      v140 = (char *)a2 + v138;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v138, 1, v110))
      {
        v141 = sub_1000BA294(&qword_100BCB248);
        memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
      }
      else
      {
        v165(v139, v140, v110);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v110);
      }
      v167(&a1[v111[9]], (char *)a2 + v111[9], v168);
      v166(&a1[v111[10]], (char *)a2 + v111[10], v105);
      v142 = v111[11];
      v143 = &a1[v142];
      v144 = (char *)a2 + v142;
      v145 = *(void **)v144;
      *(_QWORD *)v143 = *(_QWORD *)v144;
      v146 = (void *)*((_QWORD *)v144 + 1);
      *((_QWORD *)v143 + 1) = v146;
      v147 = (void *)*((_QWORD *)v144 + 2);
      *((_QWORD *)v143 + 2) = v147;
      v148 = (void *)*((_QWORD *)v144 + 3);
      *((_QWORD *)v143 + 3) = v148;
      v149 = (void *)*((_QWORD *)v144 + 4);
      *((_QWORD *)v143 + 4) = v149;
      v150 = (void *)*((_QWORD *)v144 + 5);
      *((_QWORD *)v143 + 5) = v150;
      v151 = v111[12];
      v152 = &a1[v151];
      v153 = (char *)a2 + v151;
      v154 = v145;
      v155 = v146;
      v156 = v147;
      v157 = v148;
      v158 = v149;
      v159 = v150;
      ((void (*)(char *, char *, uint64_t))v174)(v152, v153, v176);
      swift_storeEnumTagMultiPayload(a1, v178, 2);
      a3 = v180;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Date(0);
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, (char *)a2, v8);
      v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      v15 = v10[6];
      v16 = &a1[v15];
      v17 = (char *)a2 + v15;
      v18 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = v10[7];
      v20 = &a1[v19];
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      v23 = v10[8];
      v24 = &a1[v23];
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for Locale(0);
      v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      v175(v24, v25, v26);
      v27 = v10[9];
      v28 = &a1[v27];
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      v177 = v6;
      v179 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
      {
        v31 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v28 = *v29;
        v9(&v28[v30[5]], (char *)v29 + v30[5], v8);
        *(_QWORD *)&v28[v30[6]] = *(_QWORD *)((char *)v29 + v30[6]);
        *(_QWORD *)&v28[v30[7]] = *(_QWORD *)((char *)v29 + v30[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
      }
      v51 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v52 = v51[5];
      v53 = &a1[v52];
      v54 = (char *)a2 + v52;
      v55 = type metadata accessor for Calendar(0);
      v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
      v173(v53, v54, v55);
      v56 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v170 = v9;
      v172 = v8;
      v9(&v53[v56[5]], &v54[v56[5]], v8);
      v57 = v56[6];
      v58 = &v53[v57];
      v59 = &v54[v57];
      v60 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
      v61 = v56[7];
      v62 = &v53[v61];
      v63 = &v54[v61];
      v64 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      v65 = v56[8];
      v66 = &v53[v65];
      v67 = &v54[v65];
      v68 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      v175(&v53[v56[9]], &v54[v56[9]], v26);
      v69 = v51[6];
      v70 = *(uint64_t *)((char *)a2 + v69);
      *(_QWORD *)&a1[v69] = v70;
      v71 = v51[7];
      v72 = (uint64_t *)&a1[v71];
      v73 = (uint64_t *)((char *)a2 + v71);
      v74 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v70);
      if (swift_getEnumCaseMultiPayload(v73) == 1)
      {
        v75 = *v73;
        *v72 = *v73;
        swift_bridgeObjectRetain(v75);
        v76 = 1;
      }
      else
      {
        v77 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v72, v73, v77);
        v76 = 0;
      }
      a3 = v179;
      v78 = swift_storeEnumTagMultiPayload(v72, v74, v76);
      ((void (*)(char *, char *, uint64_t, __n128))v173)(&a1[v51[8]], (char *)a2 + v51[8], v55, v78);
      v170(&a1[v51[9]], (char *)a2 + v51[9], v172);
      v79 = v51[10];
      v80 = &a1[v79];
      v81 = (char *)a2 + v79;
      v82 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
      v83 = v51[11];
      v84 = &a1[v83];
      v85 = (char *)a2 + v83;
      v86 = *(void **)v85;
      *(_QWORD *)v84 = *(_QWORD *)v85;
      v87 = (void *)*((_QWORD *)v85 + 1);
      *((_QWORD *)v84 + 1) = v87;
      v88 = (void *)*((_QWORD *)v85 + 2);
      *((_QWORD *)v84 + 2) = v88;
      v89 = (void *)*((_QWORD *)v85 + 3);
      *((_QWORD *)v84 + 3) = v89;
      v90 = (void *)*((_QWORD *)v85 + 4);
      *((_QWORD *)v84 + 4) = v90;
      v91 = (void *)*((_QWORD *)v85 + 5);
      *((_QWORD *)v84 + 5) = v91;
      v92 = v86;
      v93 = v87;
      v94 = v88;
      v95 = v89;
      v96 = v90;
      v97 = v91;
      swift_storeEnumTagMultiPayload(a1, v177, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v160 = *(int *)(a3 + 24);
  v161 = &a1[v160];
  v162 = (char *)a2 + v160;
  v163 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 24))(v161, v162, v163);
  return a1;
}

char *sub_10039A9C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *);
  uint64_t v133;
  void (*v134)(char *, char *);
  void (*v135)(char *, char *, uint64_t);
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  void (*v138)(char *, char *, uint64_t);
  void (*v139)(char *, char *);
  void (*v140)(char *, char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v6 = type metadata accessor for AveragesDetailInput.Content(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v144 = v6;
    v145 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v33 = v32[5];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = type metadata accessor for TimeZone(0);
    v139 = *(void (**)(char *, char *))(*(_QWORD *)(v36 - 8) + 32);
    v141 = v36;
    v139(v34, v35);
    v37 = v32[6];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v40 = type metadata accessor for Locale(0);
    v132 = *(void (**)(char *, char *))(*(_QWORD *)(v40 - 8) + 32);
    v133 = v40;
    v132(v38, v39);
    *(_QWORD *)&a1[v32[7]] = *(_QWORD *)&a2[v32[7]];
    v41 = v32[8];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
    {
      v45 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v70 = v44[5];
      v71 = &v42[v70];
      v72 = &v43[v70];
      v73 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
      *(_QWORD *)&v42[v44[6]] = *(_QWORD *)&v43[v44[6]];
      *(_QWORD *)&v42[v44[7]] = *(_QWORD *)&v43[v44[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
    }
    v74 = v32[9];
    v75 = &a1[v74];
    v76 = &a2[v74];
    v77 = type metadata accessor for Date(0);
    v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32);
    v78(v75, v76, v77);
    v78(&a1[v32[10]], &a2[v32[10]], v77);
    v79 = v32[11];
    v80 = &a1[v79];
    v81 = &a2[v79];
    v82 = sub_1000BA294(&qword_100BCB238);
    v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
    v131(v80, v81, v82);
    v83 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v84 = v83[5];
    v85 = &a1[v84];
    v86 = &a2[v84];
    v87 = type metadata accessor for Calendar(0);
    v134 = *(void (**)(char *, char *))(*(_QWORD *)(v87 - 8) + 32);
    v136 = v87;
    v134(v85, v86);
    v88 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v138 = v78;
    v78(&v85[v88[5]], &v86[v88[5]], v77);
    v89 = v88[6];
    v90 = &v85[v89];
    v91 = &v86[v89];
    v92 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
    v93 = v88[7];
    v94 = &v85[v93];
    v95 = &v86[v93];
    v96 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
    v97 = v88[8];
    v98 = &v85[v97];
    v99 = &v86[v97];
    v100 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
    ((void (*)(char *, char *, uint64_t))v132)(&v85[v88[9]], &v86[v88[9]], v133);
    *(_QWORD *)&a1[v83[6]] = *(_QWORD *)&a2[v83[6]];
    v101 = v83[7];
    v102 = &a1[v101];
    v103 = &a2[v101];
    v104 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v103))
    {
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      v117 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v102, v103, v117);
      swift_storeEnumTagMultiPayload(v102, v104, 0);
    }
    v118 = v83[8];
    v119 = &a1[v118];
    v120 = &a2[v118];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v118], 1, v82))
    {
      v121 = sub_1000BA294(&qword_100BCB248);
      memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    }
    else
    {
      v131(v119, v120, v82);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v82);
    }
    ((void (*)(char *, char *, uint64_t))v139)(&a1[v83[9]], &a2[v83[9]], v141);
    v138(&a1[v83[10]], &a2[v83[10]], v77);
    v122 = v83[11];
    v123 = &a1[v122];
    v124 = &a2[v122];
    v125 = *((_OWORD *)v124 + 1);
    *(_OWORD *)v123 = *(_OWORD *)v124;
    *((_OWORD *)v123 + 1) = v125;
    *((_OWORD *)v123 + 2) = *((_OWORD *)v124 + 2);
    ((void (*)(char *, char *, uint64_t))v134)(&a1[v83[12]], &a2[v83[12]], v136);
    v114 = a1;
    v115 = v144;
    v116 = 2;
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v143 = v6;
    v145 = a3;
    v8 = type metadata accessor for Date(0);
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v11 = v10[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = v10[6];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    v19 = v10[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    v23 = v10[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = type metadata accessor for Locale(0);
    v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
    v137(v24, v25, v26);
    v27 = v10[9];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
    {
      v31 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      v9(&v28[v30[5]], &v29[v30[5]], v8);
      *(_QWORD *)&v28[v30[6]] = *(_QWORD *)&v29[v30[6]];
      *(_QWORD *)&v28[v30[7]] = *(_QWORD *)&v29[v30[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    }
    v46 = v9;
    v47 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v48 = v47[5];
    v49 = &a1[v48];
    v50 = &a2[v48];
    v51 = type metadata accessor for Calendar(0);
    v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
    v135(v49, v50, v51);
    v52 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v140 = v46;
    v142 = v8;
    v46(&v49[v52[5]], &v50[v52[5]], v8);
    v53 = v52[6];
    v54 = &v49[v53];
    v55 = &v50[v53];
    v56 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    v57 = v52[7];
    v58 = &v49[v57];
    v59 = &v50[v57];
    v60 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
    v61 = v52[8];
    v62 = &v49[v61];
    v63 = &v50[v61];
    v64 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
    v137(&v49[v52[9]], &v50[v52[9]], v26);
    *(_QWORD *)&a1[v47[6]] = *(_QWORD *)&a2[v47[6]];
    v65 = v47[7];
    v66 = &a1[v65];
    v67 = &a2[v65];
    v68 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v67))
    {
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      v105 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v66, v67, v105);
      v69 = swift_storeEnumTagMultiPayload(v66, v68, 0);
    }
    ((void (*)(char *, char *, uint64_t, __n128))v135)(&a1[v47[8]], &a2[v47[8]], v51, v69);
    v140(&a1[v47[9]], &a2[v47[9]], v142);
    v106 = v47[10];
    v107 = &a1[v106];
    v108 = &a2[v106];
    v109 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
    v110 = v47[11];
    v111 = &a1[v110];
    v112 = &a2[v110];
    v113 = *((_OWORD *)v112 + 1);
    *(_OWORD *)v111 = *(_OWORD *)v112;
    *((_OWORD *)v111 + 1) = v113;
    *((_OWORD *)v111 + 2) = *((_OWORD *)v112 + 2);
    v114 = a1;
    v115 = v143;
    v116 = 1;
LABEL_21:
    swift_storeEnumTagMultiPayload(v114, v115, v116);
    a3 = v145;
    goto LABEL_22;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_22:
  v126 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v127 = &a1[v126];
  v128 = &a2[v126];
  v129 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
  return a1;
}

char *sub_10039B224(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(char *, char *);
  uint64_t v130;
  void (*v131)(char *, char *);
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  void (*v135)(char *, char *, uint64_t);
  void (*v136)(char *, char *);
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for AveragesDetailInput.Content);
    v6 = type metadata accessor for AveragesDetailInput.Content(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v141 = v6;
      v143 = a3;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v33 = v32[5];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = type metadata accessor for TimeZone(0);
      v136 = *(void (**)(char *, char *))(*(_QWORD *)(v36 - 8) + 32);
      v138 = v36;
      v136(v34, v35);
      v37 = v32[6];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = type metadata accessor for Locale(0);
      v129 = *(void (**)(char *, char *))(*(_QWORD *)(v40 - 8) + 32);
      v130 = v40;
      v129(v38, v39);
      *(_QWORD *)&a1[v32[7]] = *(_QWORD *)&a2[v32[7]];
      v41 = v32[8];
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
      {
        v45 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v42 = *(_QWORD *)v43;
        v70 = v44[5];
        v71 = &v42[v70];
        v72 = &v43[v70];
        v73 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
        *(_QWORD *)&v42[v44[6]] = *(_QWORD *)&v43[v44[6]];
        *(_QWORD *)&v42[v44[7]] = *(_QWORD *)&v43[v44[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
      }
      v74 = v32[9];
      v75 = &a1[v74];
      v76 = &a2[v74];
      v77 = type metadata accessor for Date(0);
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32);
      v78(v75, v76, v77);
      v78(&a1[v32[10]], &a2[v32[10]], v77);
      v79 = v32[11];
      v80 = &a1[v79];
      v81 = &a2[v79];
      v82 = sub_1000BA294(&qword_100BCB238);
      v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32);
      v128(v80, v81, v82);
      v83 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v84 = v83[5];
      v85 = &a1[v84];
      v86 = &a2[v84];
      v87 = type metadata accessor for Calendar(0);
      v131 = *(void (**)(char *, char *))(*(_QWORD *)(v87 - 8) + 32);
      v133 = v87;
      v131(v85, v86);
      v88 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v135 = v78;
      v78(&v85[v88[5]], &v86[v88[5]], v77);
      v89 = v88[6];
      v90 = &v85[v89];
      v91 = &v86[v89];
      v92 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
      v93 = v88[7];
      v94 = &v85[v93];
      v95 = &v86[v93];
      v96 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
      v97 = v88[8];
      v98 = &v85[v97];
      v99 = &v86[v97];
      v100 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
      ((void (*)(char *, char *, uint64_t))v129)(&v85[v88[9]], &v86[v88[9]], v130);
      *(_QWORD *)&a1[v83[6]] = *(_QWORD *)&a2[v83[6]];
      v101 = v83[7];
      v102 = &a1[v101];
      v103 = &a2[v101];
      v104 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v103))
      {
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        v114 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v102, v103, v114);
        swift_storeEnumTagMultiPayload(v102, v104, 0);
      }
      a3 = v143;
      v115 = v83[8];
      v116 = &a1[v115];
      v117 = &a2[v115];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v115], 1, v82))
      {
        v118 = sub_1000BA294(&qword_100BCB248);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        v128(v116, v117, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v82);
      }
      ((void (*)(char *, char *, uint64_t))v136)(&a1[v83[9]], &a2[v83[9]], v138);
      v135(&a1[v83[10]], &a2[v83[10]], v77);
      v119 = v83[11];
      v120 = &a1[v119];
      v121 = &a2[v119];
      v122 = *((_OWORD *)v121 + 1);
      *(_OWORD *)v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v122;
      *((_OWORD *)v120 + 2) = *((_OWORD *)v121 + 2);
      ((void (*)(char *, char *, uint64_t))v131)(&a1[v83[12]], &a2[v83[12]], v133);
      swift_storeEnumTagMultiPayload(a1, v141, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v140 = v6;
      v8 = type metadata accessor for Date(0);
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v11 = v10[5];
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = v10[6];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      v19 = v10[7];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      v23 = v10[8];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = type metadata accessor for Locale(0);
      v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
      v134(v24, v25, v26);
      v27 = v10[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      v142 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
      {
        v31 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v9(&v28[v30[5]], &v29[v30[5]], v8);
        *(_QWORD *)&v28[v30[6]] = *(_QWORD *)&v29[v30[6]];
        *(_QWORD *)&v28[v30[7]] = *(_QWORD *)&v29[v30[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
      }
      v46 = v9;
      v47 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v48 = v47[5];
      v49 = &a1[v48];
      v50 = &a2[v48];
      v51 = type metadata accessor for Calendar(0);
      v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
      v132(v49, v50, v51);
      v52 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v137 = v46;
      v139 = v8;
      v46(&v49[v52[5]], &v50[v52[5]], v8);
      v53 = v52[6];
      v54 = &v49[v53];
      v55 = &v50[v53];
      v56 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
      v57 = v52[7];
      v58 = &v49[v57];
      v59 = &v50[v57];
      v60 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      v61 = v52[8];
      v62 = &v49[v61];
      v63 = &v50[v61];
      v64 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
      v134(&v49[v52[9]], &v50[v52[9]], v26);
      *(_QWORD *)&a1[v47[6]] = *(_QWORD *)&a2[v47[6]];
      v65 = v47[7];
      v66 = &a1[v65];
      v67 = &a2[v65];
      v68 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v67))
      {
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v105 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v66, v67, v105);
        v69 = swift_storeEnumTagMultiPayload(v66, v68, 0);
      }
      ((void (*)(char *, char *, uint64_t, __n128))v132)(&a1[v47[8]], &a2[v47[8]], v51, v69);
      v137(&a1[v47[9]], &a2[v47[9]], v139);
      v106 = v47[10];
      v107 = &a1[v106];
      v108 = &a2[v106];
      v109 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
      v110 = v47[11];
      v111 = &a1[v110];
      v112 = &a2[v110];
      v113 = *((_OWORD *)v112 + 1);
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_OWORD *)v111 + 1) = v113;
      *((_OWORD *)v111 + 2) = *((_OWORD *)v112 + 2);
      swift_storeEnumTagMultiPayload(a1, v140, 1);
      a3 = v142;
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v123 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v124 = &a1[v123];
  v125 = &a2[v123];
  v126 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 40))(v124, v125, v126);
  return a1;
}

uint64_t sub_10039BAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039BAB4);
}

uint64_t sub_10039BAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v6 = sub_1000D9D54();
  if (v7 == (_DWORD)v3)
  {
    v8 = v6;
    v9 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  if ((_DWORD)v3 != 254)
  {
    v8 = sub_1000992C4();
    v9 = v4 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  v10 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 20));
  if (v10 >= 2)
    return v10 - 1;
  else
    return 0;
}

uint64_t sub_10039BB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039BB3C);
}

uint64_t sub_10039BB3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1000D9D54();
  if (v9 == a3)
  {
    v10 = result;
    v11 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
      return result;
    }
    v10 = sub_1000992C4();
    v11 = v5 + *(int *)(a4 + 24);
  }
  return _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for AveragesDetailInput(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDCE70, (uint64_t)&nominal type descriptor for AveragesDetailInput);
}

uint64_t sub_10039BBCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for AveragesDetailInput.Content(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100999728;
    result = type metadata accessor for Location(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

char *sub_10039BC58(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  void (*v166)(char *, char *, uint64_t);
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  void (*v169)(char *, char *);
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  void (*v172)(char *, char *, uint64_t);
  void (*v173)(char *, char *);
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, char *, uint64_t);
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  uint64_t v179;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v33 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v33 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v34 = *a2;
      *(_QWORD *)a1 = *a2;
      v35 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v36 = v35[5];
      v37 = &a1[v36];
      v38 = (char *)a2 + v36;
      v39 = type metadata accessor for TimeZone(0);
      v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
      v41 = swift_bridgeObjectRetain(v34);
      v168 = v39;
      v40(v37, v38, v39, v41);
      v42 = v35[6];
      v43 = &a1[v42];
      v44 = (char *)a2 + v42;
      v45 = type metadata accessor for Locale(0);
      v169 = *(void (**)(char *, char *))(*(_QWORD *)(v45 - 8) + 16);
      v170 = v45;
      v169(v43, v44);
      v46 = v35[7];
      v47 = *(uint64_t *)((char *)a2 + v46);
      *(_QWORD *)&a1[v46] = v47;
      v48 = v35[8];
      v49 = &a1[v48];
      v50 = (uint64_t *)((char *)a2 + v48);
      v51 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain(v47);
      v179 = a3;
      v167 = (void (*)(char *, char *, uint64_t))v40;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, (uint64_t)v51))
      {
        v52 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v49 = *v50;
        v103 = v51[5];
        v104 = &v49[v103];
        v105 = (char *)v50 + v103;
        v106 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
        *(_QWORD *)&v49[v51[6]] = *(_QWORD *)((char *)v50 + v51[6]);
        *(_QWORD *)&v49[v51[7]] = *(_QWORD *)((char *)v50 + v51[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
      }
      v107 = v35[9];
      v108 = &a1[v107];
      v109 = (char *)a2 + v107;
      v110 = type metadata accessor for Date(0);
      v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
      v111(v108, v109, v110);
      v111(&a1[v35[10]], (char *)a2 + v35[10], v110);
      v112 = v35[11];
      v113 = &a1[v112];
      v114 = (char *)a2 + v112;
      v115 = sub_1000BA294(&qword_100BCB238);
      v166 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
      v166(v113, v114, v115);
      v116 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v117 = v116[5];
      v118 = &a1[v117];
      v119 = (char *)a2 + v117;
      v120 = type metadata accessor for Calendar(0);
      v173 = *(void (**)(char *, char *))(*(_QWORD *)(v120 - 8) + 16);
      v175 = v120;
      v173(v118, v119);
      v121 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v177 = v111;
      v111(&v118[v121[5]], &v119[v121[5]], v110);
      v122 = v121[6];
      v123 = &v118[v122];
      v124 = &v119[v122];
      v125 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
      v126 = v121[7];
      v127 = &v118[v126];
      v128 = &v119[v126];
      v129 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16))(v127, v128, v129);
      v130 = v121[8];
      v131 = &v118[v130];
      v132 = &v119[v130];
      v133 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v131, v132, v133);
      ((void (*)(char *, char *, uint64_t))v169)(&v118[v121[9]], &v119[v121[9]], v170);
      v134 = v116[6];
      v135 = *(uint64_t *)((char *)a2 + v134);
      *(_QWORD *)&a1[v134] = v135;
      v136 = v116[7];
      v137 = (uint64_t *)&a1[v136];
      v138 = (uint64_t *)((char *)a2 + v136);
      v139 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v135);
      if (swift_getEnumCaseMultiPayload(v138) == 1)
      {
        v140 = *v138;
        *v137 = *v138;
        swift_bridgeObjectRetain(v140);
        v141 = 1;
      }
      else
      {
        v142 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v137, v138, v142);
        v141 = 0;
      }
      swift_storeEnumTagMultiPayload(v137, v139, v141);
      v143 = v116[8];
      v144 = &a1[v143];
      v145 = (char *)a2 + v143;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v143, 1, v115))
      {
        v146 = sub_1000BA294(&qword_100BCB248);
        memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        v166(v144, v145, v115);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v115);
      }
      v167(&a1[v116[9]], (char *)a2 + v116[9], v168);
      v177(&a1[v116[10]], (char *)a2 + v116[10], v110);
      v147 = v116[11];
      v148 = &a1[v147];
      v149 = (char *)a2 + v147;
      v150 = *(void **)v149;
      v151 = (void *)*((_QWORD *)v149 + 1);
      *(_QWORD *)v148 = *(_QWORD *)v149;
      *((_QWORD *)v148 + 1) = v151;
      v152 = (void *)*((_QWORD *)v149 + 2);
      v153 = (void *)*((_QWORD *)v149 + 3);
      *((_QWORD *)v148 + 2) = v152;
      *((_QWORD *)v148 + 3) = v153;
      v154 = (void *)*((_QWORD *)v149 + 4);
      v155 = (void *)*((_QWORD *)v149 + 5);
      *((_QWORD *)v148 + 4) = v154;
      *((_QWORD *)v148 + 5) = v155;
      v156 = v116[12];
      v157 = &a1[v156];
      v158 = (char *)a2 + v156;
      v159 = v150;
      v160 = v151;
      v161 = v152;
      v162 = v153;
      v163 = v154;
      v164 = v155;
      ((void (*)(char *, char *, uint64_t))v173)(v157, v158, v175);
      v100 = a1;
      v101 = v179;
      v102 = 2;
      goto LABEL_23;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Date(0);
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, (char *)a2, v9);
      v11 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = v11[6];
      v17 = &a1[v16];
      v18 = (char *)a2 + v16;
      v19 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = v11[7];
      v21 = &a1[v20];
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      v24 = v11[8];
      v25 = &a1[v24];
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for Locale(0);
      v176 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v176(v25, v26, v27);
      v28 = v11[9];
      v29 = &a1[v28];
      v30 = (uint64_t *)((char *)a2 + v28);
      v31 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      v178 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
      {
        v32 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v29 = *v30;
        v10(&v29[v31[5]], (char *)v30 + v31[5], v9);
        *(_QWORD *)&v29[v31[6]] = *(_QWORD *)((char *)v30 + v31[6]);
        *(_QWORD *)&v29[v31[7]] = *(_QWORD *)((char *)v30 + v31[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
      }
      v53 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v54 = v53[5];
      v55 = &a1[v54];
      v56 = (char *)a2 + v54;
      v57 = type metadata accessor for Calendar(0);
      v171 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      v171(v55, v56, v57);
      v58 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v172 = v10;
      v174 = v9;
      v10(&v55[v58[5]], &v56[v58[5]], v9);
      v59 = v58[6];
      v60 = &v55[v59];
      v61 = &v56[v59];
      v62 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      v63 = v58[7];
      v64 = &v55[v63];
      v65 = &v56[v63];
      v66 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
      v67 = v58[8];
      v68 = &v55[v67];
      v69 = &v56[v67];
      v70 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      v176(&v55[v58[9]], &v56[v58[9]], v27);
      v71 = v53[6];
      v72 = *(uint64_t *)((char *)a2 + v71);
      *(_QWORD *)&a1[v71] = v72;
      v73 = v53[7];
      v74 = (uint64_t *)&a1[v73];
      v75 = (uint64_t *)((char *)a2 + v73);
      v76 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v72);
      if (swift_getEnumCaseMultiPayload(v75) == 1)
      {
        v77 = *v75;
        *v74 = *v75;
        swift_bridgeObjectRetain(v77);
        v78 = 1;
      }
      else
      {
        v79 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v74, v75, v79);
        v78 = 0;
      }
      v80 = swift_storeEnumTagMultiPayload(v74, v76, v78);
      ((void (*)(char *, char *, uint64_t, __n128))v171)(&a1[v53[8]], (char *)a2 + v53[8], v57, v80);
      v172(&a1[v53[9]], (char *)a2 + v53[9], v174);
      v81 = v53[10];
      v82 = &a1[v81];
      v83 = (char *)a2 + v81;
      v84 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
      v85 = v53[11];
      v86 = &a1[v85];
      v87 = (char *)a2 + v85;
      v88 = *(void **)v87;
      v89 = (void *)*((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v89;
      v90 = (void *)*((_QWORD *)v87 + 2);
      v91 = (void *)*((_QWORD *)v87 + 3);
      *((_QWORD *)v86 + 2) = v90;
      *((_QWORD *)v86 + 3) = v91;
      v92 = (void *)*((_QWORD *)v87 + 4);
      v93 = (void *)*((_QWORD *)v87 + 5);
      *((_QWORD *)v86 + 4) = v92;
      *((_QWORD *)v86 + 5) = v93;
      v94 = v88;
      v95 = v89;
      v96 = v90;
      v97 = v91;
      v98 = v92;
      v99 = v93;
      v100 = a1;
      v101 = v178;
      v102 = 1;
LABEL_23:
      swift_storeEnumTagMultiPayload(v100, v101, v102);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_10039C518(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  uint64_t v59;
  uint64_t v60;
  id *v61;
  void (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    v30 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v31 = a1 + v30[5];
    v32 = type metadata accessor for TimeZone(0);
    v63 = *(void (**)(uint64_t))(*(_QWORD *)(v32 - 8) + 8);
    v64 = v32;
    v63(v31);
    v33 = a1 + v30[6];
    v34 = type metadata accessor for Locale(0);
    v65 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8);
    v65(v33, v34);
    swift_bridgeObjectRelease();
    v35 = a1 + v30[8];
    v36 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
    {
      v37 = v35 + *(int *)(v36 + 20);
      v38 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
    }
    v39 = a1 + v30[9];
    v40 = type metadata accessor for Date(0);
    v41 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8);
    v41(v39, v40);
    v41(a1 + v30[10], v40);
    v42 = a1 + v30[11];
    v43 = sub_1000BA294(&qword_100BCB238);
    v62 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8);
    v62(v42, v43);
    v44 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v45 = a1 + v44[5];
    v46 = type metadata accessor for Calendar(0);
    v67 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8);
    v67(v45, v46);
    v47 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v41(v45 + v47[5], v40);
    v48 = v45 + v47[6];
    v49 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
    v50 = v45 + v47[7];
    v51 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
    v52 = v45 + v47[8];
    v53 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
    v65(v45 + v47[9], v34);
    swift_bridgeObjectRelease();
    v54 = a1 + v44[7];
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v54) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v59 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v54, v59);
    }
    v60 = a1 + v44[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v60, 1, v43))
      v62(v60, v43);
    ((void (*)(uint64_t, uint64_t))v63)(a1 + v44[9], v64);
    v41(a1 + v44[10], v40);
    v61 = (id *)(a1 + v44[11]);

    v67(a1 + v44[12], v46);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v3 = type metadata accessor for Date(0);
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v6 = a1 + v5[5];
    v7 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + v5[6];
    v9 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = a1 + v5[7];
    v11 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = a1 + v5[8];
    v13 = type metadata accessor for Locale(0);
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);
    v15 = a1 + v5[9];
    v16 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
      v4(v15 + *(int *)(v16 + 20), v3);
    v17 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v18 = a1 + v17[5];
    v19 = type metadata accessor for Calendar(0);
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
    v20(v18, v19);
    v21 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v66 = v4;
    v4(v18 + v21[5], v3);
    v22 = v18 + v21[6];
    v23 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
    v24 = v18 + v21[7];
    v25 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    v26 = v18 + v21[8];
    v27 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
    v14(v18 + v21[9], v13);
    swift_bridgeObjectRelease();
    v28 = a1 + v17[7];
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v28) == 1)
    {
      v29 = swift_bridgeObjectRelease();
    }
    else
    {
      v55 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v28, v55);
    }
    ((void (*)(uint64_t, uint64_t, __n128))v20)(a1 + v17[8], v19, v29);
    v66(a1 + v17[9], v3);
    v56 = a1 + v17[10];
    v57 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
    v58 = (id *)(a1 + v17[11]);

  }
}

char *sub_10039CB4C(char *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  __n128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  int *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  void (*v163)(char *, char *, uint64_t);
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  void (*v166)(char *, char *);
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  void (*v169)(char *, char *, uint64_t);
  void (*v170)(char *, char *);
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v31 = *a2;
    *(_QWORD *)a1 = *a2;
    v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v33 = v32[5];
    v34 = &a1[v33];
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for TimeZone(0);
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    v38 = swift_bridgeObjectRetain(v31);
    v164 = v37;
    v165 = v36;
    ((void (*)(char *, char *, uint64_t, __n128))v37)(v34, v35, v36, v38);
    v39 = v32[6];
    v40 = &a1[v39];
    v41 = (char *)a2 + v39;
    v42 = type metadata accessor for Locale(0);
    v166 = *(void (**)(char *, char *))(*(_QWORD *)(v42 - 8) + 16);
    v167 = v42;
    v166(v40, v41);
    v43 = v32[7];
    v44 = *(uint64_t *)((char *)a2 + v43);
    *(_QWORD *)&a1[v43] = v44;
    v45 = v32[8];
    v46 = &a1[v45];
    v47 = (uint64_t *)((char *)a2 + v45);
    v48 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain(v44);
    v176 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, (uint64_t)v48))
    {
      v49 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v46 = *v47;
      v100 = v48[5];
      v101 = &v46[v100];
      v102 = (char *)v47 + v100;
      v103 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
      *(_QWORD *)&v46[v48[6]] = *(_QWORD *)((char *)v47 + v48[6]);
      *(_QWORD *)&v46[v48[7]] = *(_QWORD *)((char *)v47 + v48[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, (uint64_t)v48);
    }
    v104 = v32[9];
    v105 = &a1[v104];
    v106 = (char *)a2 + v104;
    v107 = type metadata accessor for Date(0);
    v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v108(v105, v106, v107);
    v108(&a1[v32[10]], (char *)a2 + v32[10], v107);
    v109 = v32[11];
    v110 = &a1[v109];
    v111 = (char *)a2 + v109;
    v112 = sub_1000BA294(&qword_100BCB238);
    v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
    v163(v110, v111, v112);
    v113 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v114 = v113[5];
    v115 = &a1[v114];
    v116 = (char *)a2 + v114;
    v117 = type metadata accessor for Calendar(0);
    v170 = *(void (**)(char *, char *))(*(_QWORD *)(v117 - 8) + 16);
    v172 = v117;
    v170(v115, v116);
    v118 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v174 = v108;
    v108(&v115[v118[5]], &v116[v118[5]], v107);
    v119 = v118[6];
    v120 = &v115[v119];
    v121 = &v116[v119];
    v122 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
    v123 = v118[7];
    v124 = &v115[v123];
    v125 = &v116[v123];
    v126 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
    v127 = v118[8];
    v128 = &v115[v127];
    v129 = &v116[v127];
    v130 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
    ((void (*)(char *, char *, uint64_t))v166)(&v115[v118[9]], &v116[v118[9]], v167);
    v131 = v113[6];
    v132 = *(uint64_t *)((char *)a2 + v131);
    *(_QWORD *)&a1[v131] = v132;
    v133 = v113[7];
    v134 = (uint64_t *)&a1[v133];
    v135 = (uint64_t *)((char *)a2 + v133);
    v136 = type metadata accessor for NewsDataModel(0);
    swift_bridgeObjectRetain(v132);
    if (swift_getEnumCaseMultiPayload(v135) == 1)
    {
      v137 = *v135;
      *v134 = *v135;
      swift_bridgeObjectRetain(v137);
      v138 = 1;
    }
    else
    {
      v139 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v134, v135, v139);
      v138 = 0;
    }
    swift_storeEnumTagMultiPayload(v134, v136, v138);
    v140 = v113[8];
    v141 = &a1[v140];
    v142 = (char *)a2 + v140;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v140, 1, v112))
    {
      v143 = sub_1000BA294(&qword_100BCB248);
      memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
    }
    else
    {
      v163(v141, v142, v112);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v112);
    }
    v164(&a1[v113[9]], (char *)a2 + v113[9], v165);
    v174(&a1[v113[10]], (char *)a2 + v113[10], v107);
    v144 = v113[11];
    v145 = &a1[v144];
    v146 = (char *)a2 + v144;
    v147 = *(void **)v146;
    v148 = (void *)*((_QWORD *)v146 + 1);
    *(_QWORD *)v145 = *(_QWORD *)v146;
    *((_QWORD *)v145 + 1) = v148;
    v149 = (void *)*((_QWORD *)v146 + 2);
    v150 = (void *)*((_QWORD *)v146 + 3);
    *((_QWORD *)v145 + 2) = v149;
    *((_QWORD *)v145 + 3) = v150;
    v151 = (void *)*((_QWORD *)v146 + 4);
    v152 = (void *)*((_QWORD *)v146 + 5);
    *((_QWORD *)v145 + 4) = v151;
    *((_QWORD *)v145 + 5) = v152;
    v153 = v113[12];
    v154 = &a1[v153];
    v155 = (char *)a2 + v153;
    v156 = v147;
    v157 = v148;
    v158 = v149;
    v159 = v150;
    v160 = v151;
    v161 = v152;
    ((void (*)(char *, char *, uint64_t))v170)(v154, v155, v172);
    v97 = a1;
    v98 = v176;
    v99 = 2;
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = v9[6];
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    v17 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v9[7];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v9[8];
    v23 = &a1[v22];
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Locale(0);
    v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v173(v23, v24, v25);
    v26 = v9[9];
    v27 = &a1[v26];
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    v175 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      v30 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v27 = *v28;
      v8(&v27[v29[5]], (char *)v28 + v29[5], v7);
      *(_QWORD *)&v27[v29[6]] = *(_QWORD *)((char *)v28 + v29[6]);
      *(_QWORD *)&v27[v29[7]] = *(_QWORD *)((char *)v28 + v29[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    }
    v50 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v51 = v50[5];
    v52 = &a1[v51];
    v53 = (char *)a2 + v51;
    v54 = type metadata accessor for Calendar(0);
    v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
    v168(v52, v53, v54);
    v55 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v169 = v8;
    v171 = v7;
    v8(&v52[v55[5]], &v53[v55[5]], v7);
    v56 = v55[6];
    v57 = &v52[v56];
    v58 = &v53[v56];
    v59 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    v60 = v55[7];
    v61 = &v52[v60];
    v62 = &v53[v60];
    v63 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
    v64 = v55[8];
    v65 = &v52[v64];
    v66 = &v53[v64];
    v67 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    v173(&v52[v55[9]], &v53[v55[9]], v25);
    v68 = v50[6];
    v69 = *(uint64_t *)((char *)a2 + v68);
    *(_QWORD *)&a1[v68] = v69;
    v70 = v50[7];
    v71 = (uint64_t *)&a1[v70];
    v72 = (uint64_t *)((char *)a2 + v70);
    v73 = type metadata accessor for NewsDataModel(0);
    swift_bridgeObjectRetain(v69);
    if (swift_getEnumCaseMultiPayload(v72) == 1)
    {
      v74 = *v72;
      *v71 = *v72;
      swift_bridgeObjectRetain(v74);
      v75 = 1;
    }
    else
    {
      v76 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v71, v72, v76);
      v75 = 0;
    }
    v77 = swift_storeEnumTagMultiPayload(v71, v73, v75);
    ((void (*)(char *, char *, uint64_t, __n128))v168)(&a1[v50[8]], (char *)a2 + v50[8], v54, v77);
    v169(&a1[v50[9]], (char *)a2 + v50[9], v171);
    v78 = v50[10];
    v79 = &a1[v78];
    v80 = (char *)a2 + v78;
    v81 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
    v82 = v50[11];
    v83 = &a1[v82];
    v84 = (char *)a2 + v82;
    v85 = *(void **)v84;
    v86 = (void *)*((_QWORD *)v84 + 1);
    *(_QWORD *)v83 = *(_QWORD *)v84;
    *((_QWORD *)v83 + 1) = v86;
    v87 = (void *)*((_QWORD *)v84 + 2);
    v88 = (void *)*((_QWORD *)v84 + 3);
    *((_QWORD *)v83 + 2) = v87;
    *((_QWORD *)v83 + 3) = v88;
    v89 = (void *)*((_QWORD *)v84 + 4);
    v90 = (void *)*((_QWORD *)v84 + 5);
    *((_QWORD *)v83 + 4) = v89;
    *((_QWORD *)v83 + 5) = v90;
    v91 = v85;
    v92 = v86;
    v93 = v87;
    v94 = v88;
    v95 = v89;
    v96 = v90;
    v97 = a1;
    v98 = v175;
    v99 = 1;
LABEL_21:
    swift_storeEnumTagMultiPayload(v97, v98, v99);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t *sub_10039D3E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  __n128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  int *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  void (*v163)(char *, char *, uint64_t);
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  void (*v166)(char *, char *);
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  void (*v169)(char *, char *, uint64_t);
  void (*v170)(char *, char *);
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for AveragesDetailInput.Content);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v31 = *a2;
      *a1 = *a2;
      v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v33 = v32[5];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for TimeZone(0);
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      v38 = swift_bridgeObjectRetain(v31);
      v164 = v37;
      v165 = v36;
      ((void (*)(char *, char *, uint64_t, __n128))v37)(v34, v35, v36, v38);
      v39 = v32[6];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v42 = type metadata accessor for Locale(0);
      v166 = *(void (**)(char *, char *))(*(_QWORD *)(v42 - 8) + 16);
      v167 = v42;
      v166(v40, v41);
      v43 = v32[7];
      v44 = *(uint64_t *)((char *)a2 + v43);
      *(uint64_t *)((char *)a1 + v43) = v44;
      v45 = v32[8];
      v46 = (uint64_t *)((char *)a1 + v45);
      v47 = (uint64_t *)((char *)a2 + v45);
      v48 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain(v44);
      v176 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, (uint64_t)v48))
      {
        v49 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        *v46 = *v47;
        v100 = v48[5];
        v101 = (char *)v46 + v100;
        v102 = (char *)v47 + v100;
        v103 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        *(_QWORD *)((char *)v46 + v48[6]) = *(_QWORD *)((char *)v47 + v48[6]);
        *(_QWORD *)((char *)v46 + v48[7]) = *(_QWORD *)((char *)v47 + v48[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, (uint64_t)v48);
      }
      v104 = v32[9];
      v105 = (char *)a1 + v104;
      v106 = (char *)a2 + v104;
      v107 = type metadata accessor for Date(0);
      v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
      v108(v105, v106, v107);
      v108((char *)a1 + v32[10], (char *)a2 + v32[10], v107);
      v109 = v32[11];
      v110 = (char *)a1 + v109;
      v111 = (char *)a2 + v109;
      v112 = sub_1000BA294(&qword_100BCB238);
      v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
      v163(v110, v111, v112);
      v113 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v114 = v113[5];
      v115 = (char *)a1 + v114;
      v116 = (char *)a2 + v114;
      v117 = type metadata accessor for Calendar(0);
      v170 = *(void (**)(char *, char *))(*(_QWORD *)(v117 - 8) + 16);
      v172 = v117;
      v170(v115, v116);
      v118 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v174 = v108;
      v108(&v115[v118[5]], &v116[v118[5]], v107);
      v119 = v118[6];
      v120 = &v115[v119];
      v121 = &v116[v119];
      v122 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
      v123 = v118[7];
      v124 = &v115[v123];
      v125 = &v116[v123];
      v126 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
      v127 = v118[8];
      v128 = &v115[v127];
      v129 = &v116[v127];
      v130 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
      ((void (*)(char *, char *, uint64_t))v166)(&v115[v118[9]], &v116[v118[9]], v167);
      v131 = v113[6];
      v132 = *(uint64_t *)((char *)a2 + v131);
      *(uint64_t *)((char *)a1 + v131) = v132;
      v133 = v113[7];
      v134 = (uint64_t *)((char *)a1 + v133);
      v135 = (uint64_t *)((char *)a2 + v133);
      v136 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v132);
      if (swift_getEnumCaseMultiPayload(v135) == 1)
      {
        v137 = *v135;
        *v134 = *v135;
        swift_bridgeObjectRetain(v137);
        v138 = 1;
      }
      else
      {
        v139 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(v134, v135, v139);
        v138 = 0;
      }
      swift_storeEnumTagMultiPayload(v134, v136, v138);
      v140 = v113[8];
      v141 = (char *)a1 + v140;
      v142 = (char *)a2 + v140;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v140, 1, v112))
      {
        v143 = sub_1000BA294(&qword_100BCB248);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        v163(v141, v142, v112);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v112);
      }
      v164((char *)a1 + v113[9], (char *)a2 + v113[9], v165);
      v174((char *)a1 + v113[10], (char *)a2 + v113[10], v107);
      v144 = v113[11];
      v145 = (uint64_t *)((char *)a1 + v144);
      v146 = (char *)a2 + v144;
      v147 = *(void **)v146;
      *v145 = *(_QWORD *)v146;
      v148 = (void *)*((_QWORD *)v146 + 1);
      v145[1] = v148;
      v149 = (void *)*((_QWORD *)v146 + 2);
      v145[2] = v149;
      v150 = (void *)*((_QWORD *)v146 + 3);
      v145[3] = v150;
      v151 = (void *)*((_QWORD *)v146 + 4);
      v145[4] = v151;
      v152 = (void *)*((_QWORD *)v146 + 5);
      v145[5] = v152;
      v153 = v113[12];
      v154 = (char *)a1 + v153;
      v155 = (char *)a2 + v153;
      v156 = v147;
      v157 = v148;
      v158 = v149;
      v159 = v150;
      v160 = v151;
      v161 = v152;
      ((void (*)(char *, char *, uint64_t))v170)(v154, v155, v172);
      v97 = a1;
      v98 = v176;
      v99 = 2;
      goto LABEL_22;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for Date(0);
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8((char *)a1, (char *)a2, v7);
      v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      v14 = v9[6];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = v9[7];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      v22 = v9[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for Locale(0);
      v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v173(v23, v24, v25);
      v26 = v9[9];
      v27 = (uint64_t *)((char *)a1 + v26);
      v28 = (uint64_t *)((char *)a2 + v26);
      v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      v175 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
      {
        v30 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *v27 = *v28;
        v8((char *)v27 + v29[5], (char *)v28 + v29[5], v7);
        *(_QWORD *)((char *)v27 + v29[6]) = *(_QWORD *)((char *)v28 + v29[6]);
        *(_QWORD *)((char *)v27 + v29[7]) = *(_QWORD *)((char *)v28 + v29[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      v50 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v51 = v50[5];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = type metadata accessor for Calendar(0);
      v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      v168(v52, v53, v54);
      v55 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v169 = v8;
      v171 = v7;
      v8(&v52[v55[5]], &v53[v55[5]], v7);
      v56 = v55[6];
      v57 = &v52[v56];
      v58 = &v53[v56];
      v59 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
      v60 = v55[7];
      v61 = &v52[v60];
      v62 = &v53[v60];
      v63 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      v64 = v55[8];
      v65 = &v52[v64];
      v66 = &v53[v64];
      v67 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      v173(&v52[v55[9]], &v53[v55[9]], v25);
      v68 = v50[6];
      v69 = *(uint64_t *)((char *)a2 + v68);
      *(uint64_t *)((char *)a1 + v68) = v69;
      v70 = v50[7];
      v71 = (uint64_t *)((char *)a1 + v70);
      v72 = (uint64_t *)((char *)a2 + v70);
      v73 = type metadata accessor for NewsDataModel(0);
      swift_bridgeObjectRetain(v69);
      if (swift_getEnumCaseMultiPayload(v72) == 1)
      {
        v74 = *v72;
        *v71 = *v72;
        swift_bridgeObjectRetain(v74);
        v75 = 1;
      }
      else
      {
        v76 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v71, v72, v76);
        v75 = 0;
      }
      v77 = swift_storeEnumTagMultiPayload(v71, v73, v75);
      ((void (*)(char *, char *, uint64_t, __n128))v168)((char *)a1 + v50[8], (char *)a2 + v50[8], v54, v77);
      v169((char *)a1 + v50[9], (char *)a2 + v50[9], v171);
      v78 = v50[10];
      v79 = (char *)a1 + v78;
      v80 = (char *)a2 + v78;
      v81 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
      v82 = v50[11];
      v83 = (uint64_t *)((char *)a1 + v82);
      v84 = (char *)a2 + v82;
      v85 = *(void **)v84;
      *v83 = *(_QWORD *)v84;
      v86 = (void *)*((_QWORD *)v84 + 1);
      v83[1] = v86;
      v87 = (void *)*((_QWORD *)v84 + 2);
      v83[2] = v87;
      v88 = (void *)*((_QWORD *)v84 + 3);
      v83[3] = v88;
      v89 = (void *)*((_QWORD *)v84 + 4);
      v83[4] = v89;
      v90 = (void *)*((_QWORD *)v84 + 5);
      v83[5] = v90;
      v91 = v85;
      v92 = v86;
      v93 = v87;
      v94 = v88;
      v95 = v89;
      v96 = v90;
      v97 = a1;
      v98 = v175;
      v99 = 1;
LABEL_22:
      swift_storeEnumTagMultiPayload(v97, v98, v99);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10039DCBC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *);
  uint64_t v127;
  void (*v128)(char *, char *);
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *);
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v138 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
    v32 = v31[5];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = type metadata accessor for TimeZone(0);
    v133 = *(void (**)(char *, char *))(*(_QWORD *)(v35 - 8) + 32);
    v135 = v35;
    v133(v33, v34);
    v36 = v31[6];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = type metadata accessor for Locale(0);
    v126 = *(void (**)(char *, char *))(*(_QWORD *)(v39 - 8) + 32);
    v127 = v39;
    v126(v37, v38);
    *(_QWORD *)&a1[v31[7]] = *(_QWORD *)&a2[v31[7]];
    v40 = v31[8];
    v41 = &a1[v40];
    v42 = &a2[v40];
    v43 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v43))
    {
      v44 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v68 = v43[5];
      v69 = &v41[v68];
      v70 = &v42[v68];
      v71 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      *(_QWORD *)&v41[v43[6]] = *(_QWORD *)&v42[v43[6]];
      *(_QWORD *)&v41[v43[7]] = *(_QWORD *)&v42[v43[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v43);
    }
    v72 = v31[9];
    v73 = &a1[v72];
    v74 = &a2[v72];
    v75 = type metadata accessor for Date(0);
    v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
    v76(v73, v74, v75);
    v76(&a1[v31[10]], &a2[v31[10]], v75);
    v77 = v31[11];
    v78 = &a1[v77];
    v79 = &a2[v77];
    v80 = sub_1000BA294(&qword_100BCB238);
    v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32);
    v125(v78, v79, v80);
    v81 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
    v82 = v81[5];
    v83 = &a1[v82];
    v84 = &a2[v82];
    v85 = type metadata accessor for Calendar(0);
    v128 = *(void (**)(char *, char *))(*(_QWORD *)(v85 - 8) + 32);
    v130 = v85;
    v128(v83, v84);
    v86 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v132 = v76;
    v76(&v83[v86[5]], &v84[v86[5]], v75);
    v87 = v86[6];
    v88 = &v83[v87];
    v89 = &v84[v87];
    v90 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
    v91 = v86[7];
    v92 = &v83[v91];
    v93 = &v84[v91];
    v94 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
    v95 = v86[8];
    v96 = &v83[v95];
    v97 = &v84[v95];
    v98 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
    ((void (*)(char *, char *, uint64_t))v126)(&v83[v86[9]], &v84[v86[9]], v127);
    *(_QWORD *)&a1[v81[6]] = *(_QWORD *)&a2[v81[6]];
    v99 = v81[7];
    v100 = &a1[v99];
    v101 = &a2[v99];
    v102 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v101))
    {
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v115 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v100, v101, v115);
      swift_storeEnumTagMultiPayload(v100, v102, 0);
    }
    v116 = v81[8];
    v117 = &a1[v116];
    v118 = &a2[v116];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v116], 1, v80))
    {
      v119 = sub_1000BA294(&qword_100BCB248);
      memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    }
    else
    {
      v125(v117, v118, v80);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v80);
    }
    ((void (*)(char *, char *, uint64_t))v133)(&a1[v81[9]], &a2[v81[9]], v135);
    v132(&a1[v81[10]], &a2[v81[10]], v75);
    v120 = v81[11];
    v121 = &a1[v120];
    v122 = &a2[v120];
    v123 = *((_OWORD *)v122 + 1);
    *(_OWORD *)v121 = *(_OWORD *)v122;
    *((_OWORD *)v121 + 1) = v123;
    *((_OWORD *)v121 + 2) = *((_OWORD *)v122 + 2);
    ((void (*)(char *, char *, uint64_t))v128)(&a1[v81[12]], &a2[v81[12]], v130);
    v112 = a1;
    v113 = v138;
    v114 = 2;
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v137 = a3;
    v7 = type metadata accessor for Date(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    v14 = v9[6];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_1000BA294(&qword_100BCB130);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    v18 = v9[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = v9[8];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = type metadata accessor for Locale(0);
    v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
    v131(v23, v24, v25);
    v26 = v9[9];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      v30 = sub_1000BA294(&qword_100BCB0D0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v8(&v27[v29[5]], &v28[v29[5]], v7);
      *(_QWORD *)&v27[v29[6]] = *(_QWORD *)&v28[v29[6]];
      *(_QWORD *)&v27[v29[7]] = *(_QWORD *)&v28[v29[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    }
    v45 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
    v46 = v45[5];
    v47 = &a1[v46];
    v48 = &a2[v46];
    v49 = type metadata accessor for Calendar(0);
    v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
    v129(v47, v48, v49);
    v50 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
    v134 = v8;
    v136 = v7;
    v8(&v47[v50[5]], &v48[v50[5]], v7);
    v51 = v50[6];
    v52 = &v47[v51];
    v53 = &v48[v51];
    v54 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
    v55 = v50[7];
    v56 = &v47[v55];
    v57 = &v48[v55];
    v58 = sub_1000BA294(&qword_100BC4E70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
    v59 = v50[8];
    v60 = &v47[v59];
    v61 = &v48[v59];
    v62 = sub_1000BA294(&qword_100BCB240);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
    v131(&v47[v50[9]], &v48[v50[9]], v25);
    *(_QWORD *)&a1[v45[6]] = *(_QWORD *)&a2[v45[6]];
    v63 = v45[7];
    v64 = &a1[v63];
    v65 = &a2[v63];
    v66 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v65))
    {
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v103 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v64, v65, v103);
      v67 = swift_storeEnumTagMultiPayload(v64, v66, 0);
    }
    ((void (*)(char *, char *, uint64_t, __n128))v129)(&a1[v45[8]], &a2[v45[8]], v49, v67);
    v134(&a1[v45[9]], &a2[v45[9]], v136);
    v104 = v45[10];
    v105 = &a1[v104];
    v106 = &a2[v104];
    v107 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
    v108 = v45[11];
    v109 = &a1[v108];
    v110 = &a2[v108];
    v111 = *((_OWORD *)v110 + 1);
    *(_OWORD *)v109 = *(_OWORD *)v110;
    *((_OWORD *)v109 + 1) = v111;
    *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
    v112 = a1;
    v113 = v137;
    v114 = 1;
LABEL_21:
    swift_storeEnumTagMultiPayload(v112, v113, v114);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_10039E4D4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  __int128 v123;
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *);
  uint64_t v127;
  void (*v128)(char *, char *);
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *);
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  if (a1 != a2)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for AveragesDetailInput.Content);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v138 = a3;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput(0);
      v32 = v31[5];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = type metadata accessor for TimeZone(0);
      v133 = *(void (**)(char *, char *))(*(_QWORD *)(v35 - 8) + 32);
      v135 = v35;
      v133(v33, v34);
      v36 = v31[6];
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = type metadata accessor for Locale(0);
      v126 = *(void (**)(char *, char *))(*(_QWORD *)(v39 - 8) + 32);
      v127 = v39;
      v126(v37, v38);
      *(_QWORD *)&a1[v31[7]] = *(_QWORD *)&a2[v31[7]];
      v40 = v31[8];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v43))
      {
        v44 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v68 = v43[5];
        v69 = &v41[v68];
        v70 = &v42[v68];
        v71 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        *(_QWORD *)&v41[v43[6]] = *(_QWORD *)&v42[v43[6]];
        *(_QWORD *)&v41[v43[7]] = *(_QWORD *)&v42[v43[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v43);
      }
      v72 = v31[9];
      v73 = &a1[v72];
      v74 = &a2[v72];
      v75 = type metadata accessor for Date(0);
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32);
      v76(v73, v74, v75);
      v76(&a1[v31[10]], &a2[v31[10]], v75);
      v77 = v31[11];
      v78 = &a1[v77];
      v79 = &a2[v77];
      v80 = sub_1000BA294(&qword_100BCB238);
      v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32);
      v125(v78, v79, v80);
      v81 = (int *)type metadata accessor for TemperatureAveragesDetailInput(0);
      v82 = v81[5];
      v83 = &a1[v82];
      v84 = &a2[v82];
      v85 = type metadata accessor for Calendar(0);
      v128 = *(void (**)(char *, char *))(*(_QWORD *)(v85 - 8) + 32);
      v130 = v85;
      v128(v83, v84);
      v86 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v132 = v76;
      v76(&v83[v86[5]], &v84[v86[5]], v75);
      v87 = v86[6];
      v88 = &v83[v87];
      v89 = &v84[v87];
      v90 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
      v91 = v86[7];
      v92 = &v83[v91];
      v93 = &v84[v91];
      v94 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
      v95 = v86[8];
      v96 = &v83[v95];
      v97 = &v84[v95];
      v98 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
      ((void (*)(char *, char *, uint64_t))v126)(&v83[v86[9]], &v84[v86[9]], v127);
      *(_QWORD *)&a1[v81[6]] = *(_QWORD *)&a2[v81[6]];
      v99 = v81[7];
      v100 = &a1[v99];
      v101 = &a2[v99];
      v102 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v101))
      {
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        v115 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v100, v101, v115);
        swift_storeEnumTagMultiPayload(v100, v102, 0);
      }
      v116 = v81[8];
      v117 = &a1[v116];
      v118 = &a2[v116];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v116], 1, v80))
      {
        v119 = sub_1000BA294(&qword_100BCB248);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        v125(v117, v118, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v80);
      }
      ((void (*)(char *, char *, uint64_t))v133)(&a1[v81[9]], &a2[v81[9]], v135);
      v132(&a1[v81[10]], &a2[v81[10]], v75);
      v120 = v81[11];
      v121 = &a1[v120];
      v122 = &a2[v120];
      v123 = *((_OWORD *)v122 + 1);
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v123;
      *((_OWORD *)v121 + 2) = *((_OWORD *)v122 + 2);
      ((void (*)(char *, char *, uint64_t))v128)(&a1[v81[12]], &a2[v81[12]], v130);
      v112 = a1;
      v113 = v138;
      v114 = 2;
      goto LABEL_22;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v137 = a3;
      v7 = type metadata accessor for Date(0);
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = v9[6];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_1000BA294(&qword_100BCB130);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = v9[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      v22 = v9[8];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = type metadata accessor for Locale(0);
      v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
      v131(v23, v24, v25);
      v26 = v9[9];
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
      {
        v30 = sub_1000BA294(&qword_100BCB0D0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v27 = *(_QWORD *)v28;
        v8(&v27[v29[5]], &v28[v29[5]], v7);
        *(_QWORD *)&v27[v29[6]] = *(_QWORD *)&v28[v29[6]];
        *(_QWORD *)&v27[v29[7]] = *(_QWORD *)&v28[v29[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      v45 = (int *)type metadata accessor for PrecipitationAveragesDetailInput(0);
      v46 = v45[5];
      v47 = &a1[v46];
      v48 = &a2[v46];
      v49 = type metadata accessor for Calendar(0);
      v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
      v129(v47, v48, v49);
      v50 = (int *)type metadata accessor for MonthlyAveragesChartInput(0);
      v134 = v8;
      v136 = v7;
      v8(&v47[v50[5]], &v48[v50[5]], v7);
      v51 = v50[6];
      v52 = &v47[v51];
      v53 = &v48[v51];
      v54 = type metadata accessor for TemperatureScaleConfiguration(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      v55 = v50[7];
      v56 = &v47[v55];
      v57 = &v48[v55];
      v58 = sub_1000BA294(&qword_100BC4E70);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      v59 = v50[8];
      v60 = &v47[v59];
      v61 = &v48[v59];
      v62 = sub_1000BA294(&qword_100BCB240);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
      v131(&v47[v50[9]], &v48[v50[9]], v25);
      *(_QWORD *)&a1[v45[6]] = *(_QWORD *)&a2[v45[6]];
      v63 = v45[7];
      v64 = &a1[v63];
      v65 = &a2[v63];
      v66 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v65))
      {
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        v103 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v64, v65, v103);
        v67 = swift_storeEnumTagMultiPayload(v64, v66, 0);
      }
      ((void (*)(char *, char *, uint64_t, __n128))v129)(&a1[v45[8]], &a2[v45[8]], v49, v67);
      v134(&a1[v45[9]], &a2[v45[9]], v136);
      v104 = v45[10];
      v105 = &a1[v104];
      v106 = &a2[v104];
      v107 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
      v108 = v45[11];
      v109 = &a1[v108];
      v110 = &a2[v108];
      v111 = *((_OWORD *)v110 + 1);
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_OWORD *)v109 + 1) = v111;
      *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
      v112 = a1;
      v113 = v137;
      v114 = 1;
LABEL_22:
      swift_storeEnumTagMultiPayload(v112, v113, v114);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10039ED04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_100999748;
  result = type metadata accessor for PrecipitationAveragesDetailInput(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TemperatureAveragesDetailInput(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AveragesDetailInput.ContentUnavailableReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10039EDDC + 4 * byte_1009996BA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10039EE10 + 4 * byte_1009996B5[v4]))();
}

uint64_t sub_10039EE10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039EE18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10039EE20);
  return result;
}

uint64_t sub_10039EE2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10039EE34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10039EE38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039EE40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailInput.ContentUnavailableReason()
{
  return &type metadata for AveragesDetailInput.ContentUnavailableReason;
}

unint64_t sub_10039EE60()
{
  unint64_t result;

  result = qword_100BDCF78;
  if (!qword_100BDCF78)
  {
    result = swift_getWitnessTable(&unk_1009997DC, &type metadata for AveragesDetailInput.ContentUnavailableReason);
    atomic_store(result, (unint64_t *)&qword_100BDCF78);
  }
  return result;
}

uint64_t destroy for DayPickerView(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for DayPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = a2 + 24;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v5 - 8);
  v8 = swift_retain(v3);
  v7(a1 + 24, v4, v6, v8);
  return a1;
}

_QWORD *assignWithCopy for DayPickerView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v4);
  a1[2] = a2[2];
  sub_100094D04(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for DayPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for DayPickerView()
{
  return &type metadata for DayPickerView;
}

uint64_t sub_10039F000(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2B88, 1);
}

BOOL sub_10039F010()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v1, "nativeScale");
  v3 = v2;

  v4 = objc_msgSend(v0, "mainScreen");
  objc_msgSend(v4, "scale");
  v6 = v5;

  return v6 < v3;
}

_QWORD *sub_10039F0A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  sub_1003A1F10(v1, (uint64_t)&v15);
  v3 = type metadata accessor for MainActor(0);
  v4 = static MainActor.shared.getter(v3);
  v5 = swift_allocObject(&unk_100B708C0, 96, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = &protocol witness table for MainActor;
  v6 = v16;
  *(_OWORD *)(v5 + 32) = v15;
  *(_OWORD *)(v5 + 48) = v6;
  v7 = v18;
  *(_OWORD *)(v5 + 64) = v17;
  *(_OWORD *)(v5 + 80) = v7;
  v8 = sub_1003A1F10(v1, (uint64_t)&v15);
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_100B708E8, 96, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  v11 = v16;
  *(_OWORD *)(v10 + 32) = v15;
  *(_OWORD *)(v10 + 48) = v11;
  v12 = v18;
  *(_OWORD *)(v10 + 64) = v17;
  *(_OWORD *)(v10 + 80) = v12;
  v13 = type metadata accessor for Date(0);
  return Binding.init(get:set:)(a1, sub_1003A2408, v5, sub_1003A244C, v10, v13);
}

void sub_10039F1A0(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_10017B590();
  swift_release(v7);
  v8 = &v6[*(int *)(v4 + 20)];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, v8, v9);
  sub_1000215BC((uint64_t)v6, type metadata accessor for DayPickerViewModel);
}

double sub_10039F264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double result;
  _QWORD v6[6];

  v6[2] = a4;
  v6[3] = a1;
  v4 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v4, sub_1003A2458, v6, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_10039F2C0(uint64_t a1, uint64_t a2)
{
  sub_1000DB418((_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 48));
  return sub_100240834(a2);
}

double sub_10039F308@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  __n128 v43;
  double result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;

  v61 = type metadata accessor for QuaternaryDividerStyle(0);
  v65 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  sub_10007A130();
  v4 = type metadata accessor for Divider(0);
  v64 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v63 = sub_1000BA294(&qword_100BD6D20);
  v67 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v66 = (char *)&v45 - v11;
  v62 = sub_1000BA294(&qword_100BDCF80);
  v47 = *(_QWORD *)(v62 - 8);
  v12 = v47;
  __chkstk_darwin(v62);
  sub_1000986FC();
  v60 = v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - v15;
  sub_1003A1F10(v1, (uint64_t)&v68);
  v17 = (_OWORD *)swift_allocObject(&unk_100B70820, 80, 7);
  v18 = v69;
  v17[1] = v68;
  v17[2] = v18;
  v19 = v71;
  v17[3] = v70;
  v17[4] = v19;
  static Alignment.center.getter(v17);
  _FrameLayout.init(width:height:alignment:)(0, 1, 0x4008000000000000, 0);
  v59 = v72;
  v58 = v73;
  v57 = v74;
  v56 = v75;
  v55 = v76;
  v54 = v77;
  v46 = v16;
  sub_1003A1C90();
  static Alignment.center.getter(v20);
  v21 = _FrameLayout.init(width:height:alignment:)(0, 1, 0x4024000000000000, 0);
  v53 = v68;
  v52 = BYTE8(v68);
  v51 = v69;
  v50 = BYTE8(v69);
  v48 = *((_QWORD *)&v70 + 1);
  v49 = v70;
  v22 = Divider.init()(v21);
  static DividerStyle<>.quaternary.getter(v22);
  sub_10000F1C8(&qword_100BC69B0, (uint64_t (*)(uint64_t))&type metadata accessor for Divider);
  v24 = v23;
  sub_10000F1C8(&qword_100BD6E68, (uint64_t (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
  v25 = v61;
  View.dividerStyle<A>(_:)(v2, v4, v61, v24, v26);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v2, v25);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v7, v4);
  v28 = v66;
  v27 = v67;
  v29 = v9;
  v30 = v9;
  v31 = v63;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v29, v63);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  v33 = v60;
  v34 = v16;
  v35 = v62;
  v32((uint64_t)v60, v34, v62);
  v36 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v36(v30, v28, v31);
  *(_QWORD *)a1 = sub_1003A1F48;
  *(_QWORD *)(a1 + 8) = v17;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = v59;
  *(_BYTE *)(a1 + 40) = v58;
  *(_QWORD *)(a1 + 48) = v57;
  *(_BYTE *)(a1 + 56) = v56;
  v37 = v54;
  *(_QWORD *)(a1 + 64) = v55;
  *(_QWORD *)(a1 + 72) = v37;
  v38 = (int *)sub_1000BA294(&qword_100BDCF88);
  v32(a1 + v38[16], v33, v35);
  v39 = a1 + v38[20];
  *(_QWORD *)v39 = 0;
  *(_BYTE *)(v39 + 8) = 1;
  *(_QWORD *)(v39 + 16) = v53;
  *(_BYTE *)(v39 + 24) = v52;
  *(_QWORD *)(v39 + 32) = v51;
  *(_BYTE *)(v39 + 40) = v50;
  v40 = v48;
  *(_QWORD *)(v39 + 48) = v49;
  *(_QWORD *)(v39 + 56) = v40;
  v36((char *)(a1 + v38[24]), v30, v31);
  v41 = *(void (**)(char *, uint64_t))(v67 + 8);
  swift_retain_n(v17, 2);
  v41(v66, v31);
  v42 = *(void (**)(char *, uint64_t))(v47 + 8);
  v42(v46, v35);
  v43 = swift_release(v17);
  ((void (*)(char *, uint64_t, __n128))v41)(v30, v31, v43);
  v42(v33, v35);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_10039F7C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  __n128 v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __n128 v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __n128 v120;
  unint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (**v129)();
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t, uint64_t);
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char v168[8];
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;

  v167 = a1;
  v160 = a3;
  v157 = type metadata accessor for Date(0);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v155 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for ScrollViewProxy(0);
  v153 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v166 = v5;
  v158 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v154);
  v7 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v146);
  v147 = (void (*)(char *, uint64_t, uint64_t))((char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = type metadata accessor for AccessibilityChildBehavior(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v136);
  v11 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ScrollIndicatorVisibility(0);
  v161 = *(_QWORD *)(v12 - 8);
  v162 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BDCF90);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_1000BA294(&qword_100BDCF98);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v20 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1000BA294(&qword_100BDCFA0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v130 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1000BA294(&qword_100BDCFA8);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v133 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BD9B48);
  __chkstk_darwin(v23);
  v137 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_1000BA294(&qword_100BD9B50);
  __chkstk_darwin(v143);
  v144 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1000BA294(&qword_100BDCFB0);
  __chkstk_darwin(v164);
  v145 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v165 = (char *)&v130 - v28;
  v152 = sub_1000BA294(&qword_100BDCFB8);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v150 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_1000BA294(&qword_100BDCFC0);
  v30 = __chkstk_darwin(v148);
  v149 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = static Axis.Set.horizontal.getter(v30);
  v163 = a2;
  v169 = a2;
  v33 = sub_1000BA294(&qword_100BDCFC8);
  v34 = sub_1003A1F58();
  v35 = ScrollView.init(_:showsIndicators:content:)(v32, 1, sub_1003A1F50, v168, v33, v34);
  v36 = static ScrollIndicatorVisibility.never.getter(v35);
  v37 = static Axis.Set.vertical.getter(v36);
  v39 = static Axis.Set.horizontal.getter(v38);
  v40 = Axis.Set.init(rawValue:)(0);
  v41 = Axis.Set.init(rawValue:)(v40);
  if (Axis.Set.init(rawValue:)(v41 & v37) != v37)
    v40 = Axis.Set.init(rawValue:)(v40 | v37);
  v42 = Axis.Set.init(rawValue:)(v40);
  if (Axis.Set.init(rawValue:)(v42 & v39) != v39)
    v40 = Axis.Set.init(rawValue:)(v40 | v39);
  sub_10003D2DC(&qword_100BDCFE8, &qword_100BDCF90);
  v44 = v43;
  View.scrollIndicators(_:axes:)(v14, v40, v15, v43);
  (*(void (**)(char *, uint64_t))(v161 + 8))(v14, v162);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v45 = enum case for DynamicTypeSize.accessibility1(_:);
  v46 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v11, v45, v46);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v11, v11, v46, v47) & 1) != 0)
  {
    *(_QWORD *)&v170 = v15;
    *((_QWORD *)&v170 + 1) = v44;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v170, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v50 = v49;
    v51 = v130;
    v52 = v132;
    v53 = v136;
    View.dynamicTypeSize<A>(_:)(v11, v132, v136, OpaqueTypeConformance2, v49);
    sub_100021A14((uint64_t)v11, (uint64_t *)&unk_100C0A510);
    v54 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v20, v52);
    v55 = v140;
    static AccessibilityChildBehavior.ignore.getter(v54);
    *(_QWORD *)&v170 = v52;
    *((_QWORD *)&v170 + 1) = v53;
    *(_QWORD *)&v171 = OpaqueTypeConformance2;
    *((_QWORD *)&v171 + 1) = v50;
    v56 = swift_getOpaqueTypeConformance2(&v170, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v57 = v133;
    v58 = v135;
    View.accessibilityElement(children:)(v55, v135, v56);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v55, v142);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v51, v58);
    v59 = LocalizedStringKey.init(stringLiteral:)(0x7261646E656C6143, 0xE800000000000000);
    v63 = Text.init(_:tableName:bundle:comment:)(v59, v61, v60 & 1, v62, 0, 0, 0, 0);
    v65 = v64;
    v67 = v66;
    v69 = v68 & 1;
    *(_QWORD *)&v170 = v58;
    *((_QWORD *)&v170 + 1) = v56;
    v70 = swift_getOpaqueTypeConformance2(&v170, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v71 = (uint64_t)v137;
    v72 = v139;
    View.accessibility(label:)(v63, v65, v69, v67, v139, v70);
    sub_1000D31B4(v63, v65, v69);
    v73 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v138 + 8))(v57, v72, v73);
    v74 = *(_QWORD *)(v163 + 8);
    v75 = v163;
    swift_retain();
    sub_10017B590();
    swift_release(v74);
    v76 = v154;
    v77 = &v7[*(int *)(v154 + 24)];
    v79 = *(_QWORD *)v77;
    v78 = *((_QWORD *)v77 + 1);
    swift_bridgeObjectRetain(v78);
    sub_1000215BC((uint64_t)v7, type metadata accessor for DayPickerViewModel);
    v80 = (uint64_t)v147;
    *(_QWORD *)v147 = v79;
    *(_QWORD *)(v80 + 8) = v78;
    v81 = type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload(v80, v81, 10);
    swift_storeEnumTagMultiPayload(v80, v146, 1);
    v82 = (uint64_t)v144;
    sub_100335274();
    sub_1000215BC(v80, type metadata accessor for AutomationInfo);
    sub_100021A14(v71, &qword_100BD9B48);
    v83 = v75;
    v84 = *(_QWORD *)(v75 + 8);
    swift_retain();
    sub_10017B590();
    swift_release(v84);
    v85 = &v7[*(int *)(v76 + 28)];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    swift_bridgeObjectRetain(v86);
    sub_1000215BC((uint64_t)v7, type metadata accessor for DayPickerViewModel);
    *(_QWORD *)&v170 = v87;
    *((_QWORD *)&v170 + 1) = v86;
    v88 = sub_100114EF8();
    v89 = Text.init<A>(_:)(&v170, &type metadata for String, v88);
    v91 = v90;
    v93 = v92;
    v95 = v94 & 1;
    v96 = sub_1003A1FDC();
    v97 = (uint64_t)v145;
    View.accessibilityValue(_:)(v89, v91, v95, v93, v143, v96);
    sub_1000D31B4(v89, v91, v95);
    swift_bridgeObjectRelease();
    sub_100021A14(v82, &qword_100BD9B50);
    sub_1003A1F10(v83, (uint64_t)&v170);
    v98 = v153;
    v147 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
    v99 = v158;
    v100 = v159;
    v147(v158, v167, v159);
    v101 = *(unsigned __int8 *)(v98 + 80);
    v102 = (v101 + 80) & ~v101;
    v162 = v101 | 7;
    v103 = (_OWORD *)swift_allocObject(&unk_100B70848, v102 + v166, v101 | 7);
    v104 = v171;
    v103[1] = v170;
    v103[2] = v104;
    v105 = v173;
    v103[3] = v172;
    v103[4] = v105;
    v161 = *(_QWORD *)(v98 + 32);
    ((void (*)(char *, char *, uint64_t))v161)((char *)v103 + v102, v99, v100);
    ModifiedContent<>.accessibilityAdjustableAction(_:)(sub_1003A2224, v103, v164);
    swift_release(v103);
    sub_100021A14(v97, &qword_100BDCFB0);
    v106 = *(_QWORD *)(v83 + 8);
    swift_retain();
    sub_10017B590();
    v107 = swift_release(v106);
    v108 = &v7[*(int *)(v76 + 20)];
    v109 = v156;
    v110 = v155;
    v111 = v157;
    (*(void (**)(char *, char *, uint64_t, __n128))(v156 + 16))(v155, v108, v157, v107);
    sub_1000215BC((uint64_t)v7, type metadata accessor for DayPickerViewModel);
    v112 = v147;
    v147(v99, v167, v100);
    v113 = (v101 + 16) & ~v101;
    v166 += v113;
    v114 = swift_allocObject(&unk_100B70870, v166, v162);
    ((void (*)(uint64_t, char *, uint64_t))v161)(v114 + v113, v99, v100);
    v115 = sub_1003A22D4();
    sub_10000F1C8((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    v116 = v150;
    v117 = v115;
    v118 = (uint64_t)v165;
    View.onChange<A>(of:initial:_:)(v110, 0, sub_1003A228C, v114, v164, v111, v117, v119);
    v120 = swift_release(v114);
    (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v110, v111, v120);
    sub_100021A14(v118, &qword_100BDCFB0);
    v112(v99, v167, v100);
    sub_1003A1F10(v163, (uint64_t)&v170);
    v121 = (v166 + 7) & 0xFFFFFFFFFFFFFFF8;
    v122 = swift_allocObject(&unk_100B70898, v121 + 64, v162);
    ((void (*)(uint64_t, char *, uint64_t))v161)(v122 + v113, v99, v100);
    v123 = (_OWORD *)(v122 + v121);
    v124 = v171;
    *v123 = v170;
    v123[1] = v124;
    v125 = v173;
    v123[2] = v172;
    v123[3] = v125;
    v126 = v151;
    v127 = (uint64_t)v149;
    v128 = v152;
    (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v149, v116, v152);
    v129 = (uint64_t (**)())(v127 + *(int *)(v148 + 36));
    *v129 = sub_1003A23B0;
    v129[1] = (uint64_t (*)())v122;
    v129[2] = 0;
    v129[3] = 0;
    (*(void (**)(char *, uint64_t))(v126 + 8))(v116, v128);
    sub_1000F111C(v127, v160, &qword_100BDCFC0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003A0478(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _QWORD __src[14];

  v4 = sub_1000BA294(&qword_100BDCFE0);
  __chkstk_darwin(v4);
  v6 = (char *)__src - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BDCFC8);
  __chkstk_darwin(v7);
  v9 = (char *)__src - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  sub_1000BA294(&qword_100BDD018);
  v11 = sub_1003A0650(a1);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = static Alignment.center.getter(v11);
  v16 = 1;
  v15 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(__src, v12, 0, 0, 1, 0, 1, 0, 1, 0, v15, 0, v16, v13, v14);
  sub_100037794((uint64_t)v6, (uint64_t)v9, &qword_100BDCFE0);
  memcpy(&v9[*(int *)(v7 + 36)], __src, 0x70uLL);
  sub_100021A14((uint64_t)v6, &qword_100BDCFE0);
  sub_1000F111C((uint64_t)v9, a2, &qword_100BDCFC8);
}

uint64_t sub_1003A0650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _OWORD v20[4];
  uint64_t v21;

  v2 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_10017B590();
  swift_release(v5);
  v6 = *v4;
  swift_bridgeObjectRetain(*v4);
  sub_1000215BC((uint64_t)v4, type metadata accessor for DayPickerViewModel);
  v21 = v6;
  KeyPath = swift_getKeyPath(&unk_1009998A8);
  sub_1003A1F10(a1, (uint64_t)v20);
  v8 = (_OWORD *)swift_allocObject(&unk_100B70910, 80, 7);
  v9 = v20[1];
  v8[1] = v20[0];
  v8[2] = v9;
  v10 = v20[3];
  v8[3] = v20[2];
  v8[4] = v10;
  v11 = sub_1000BA294(&qword_100BDD020);
  v12 = sub_1000BA294(&qword_100BDD028);
  sub_10003D2DC(&qword_100BDD030, &qword_100BDD020);
  v14 = v13;
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v16 = v15;
  sub_10003D2DC(&qword_100BDD038, &qword_100BDD028);
  return ForEach<>.init(_:id:content:)(&v21, KeyPath, sub_1003A2474, v8, v11, v12, v14, v16, v17);
}

uint64_t sub_1003A0800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[4];

  v29 = a3;
  v5 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDD040);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BDD048);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v17 = sub_1000BA294(&qword_100BDD050);
  sub_1003A0A34(a2, a1, (double *)&v11[*(int *)(v17 + 44)]);
  sub_1003A1F10(a2, (uint64_t)v30);
  sub_10000AB54(a1, (uint64_t)v8, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 80) & ~v18;
  v20 = (_OWORD *)swift_allocObject(&unk_100B70938, v19 + v7, v18 | 7);
  v21 = v30[1];
  v20[1] = v30[0];
  v20[2] = v21;
  v22 = v30[3];
  v20[3] = v30[2];
  v20[4] = v22;
  sub_1003A2500((uint64_t)v8, (uint64_t)v20 + v19);
  sub_10003D2DC(&qword_100BDD058, &qword_100BDD040);
  View.onTapGesture(count:perform:)(1, sub_1003A2544, v20, v9, v23);
  swift_release(v20);
  sub_100021A14((uint64_t)v11, &qword_100BDD040);
  v24 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v29, v15, v12);
  v25 = v24 + *(int *)(sub_1000BA294(&qword_100BDD028) + 52);
  v26 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, a1, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_1003A0A34(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  double v28;
  double *v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;

  v36 = a3;
  v5 = sub_1000BA294(&qword_100BCD380);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BDD008);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for DayView(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v33 - v21;
  v33 = a1;
  v23 = sub_1003A0D64(a2, (void (*)(uint64_t))sub_1002F70FC);
  sub_10000AB54(a2, (uint64_t)v16, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  sub_10039F0A8(v13);
  Binding.wrappedValue.getter(v11);
  sub_100021A14((uint64_t)v13, &qword_100BDD008);
  LOBYTE(v11) = static Date.== infix(_:_:)(v10, a2);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  *v7 = swift_getKeyPath(&unk_1009998C8);
  v24 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v7, v24, 0);
  KeyPath = swift_getKeyPath(&unk_1009998F8);
  v26 = (uint64_t *)&v22[v17[7]];
  *v26 = KeyPath;
  v27 = sub_1000BA294(&qword_100BC2990);
  swift_storeEnumTagMultiPayload(v26, v27, 0);
  sub_1003A2500((uint64_t)v16, (uint64_t)v22);
  v22[v17[5]] = v11 & 1;
  sub_1000F111C((uint64_t)v7, (uint64_t)&v22[v17[6]], &qword_100BCD380);
  *(_QWORD *)&v22[v17[8]] = 0x4042000000000000;
  *(_QWORD *)&v22[v17[9]] = 0x4010000000000000;
  v28 = sub_1003A0D64(a2, (void (*)(uint64_t))sub_10020CBF4);
  sub_10000AB54((uint64_t)v22, (uint64_t)v19, type metadata accessor for DayView);
  v29 = v36;
  *v36 = v23;
  *((_BYTE *)v29 + 8) = 0;
  v30 = v29;
  v31 = sub_1000BA294(&qword_100BDD060);
  sub_10000AB54((uint64_t)v19, (uint64_t)v30 + *(int *)(v31 + 48), type metadata accessor for DayView);
  v32 = (uint64_t)v30 + *(int *)(v31 + 64);
  *(double *)v32 = v28;
  *(_BYTE *)(v32 + 8) = 0;
  sub_1000215BC((uint64_t)v22, type metadata accessor for DayView);
  sub_1000215BC((uint64_t)v19, type metadata accessor for DayView);
}

double sub_1003A0D64(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t, uint64_t);
  double v40;
  double v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  _BOOL4 v47;

  v46 = a2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v43 = v8 - v7;
  v9 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  type metadata accessor for DayPickerViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10007A130();
  sub_1000BA294(&qword_100BDD010);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v44 = v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v43 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v43 - v25;
  v47 = sub_10039F010();
  v45 = v6;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v27(v26, a1, v5);
  sub_1000BA9D4((uint64_t)v26, 0);
  v28 = *(_QWORD *)(v2 + 8);
  swift_retain();
  sub_10017B590();
  swift_release(v28);
  v29 = *v3;
  swift_bridgeObjectRetain(*v3);
  sub_1000215BC((uint64_t)v3, type metadata accessor for DayPickerViewModel);
  v46(v29);
  swift_bridgeObjectRelease();
  v30 = sub_1000CCC4C();
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v30) == 1)
  {
    sub_100021A14(v18, &qword_100BDD010);
    v31 = 1;
  }
  else
  {
    v27(v23, v18, v5);
    sub_1000215BC(v18, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
    v31 = 0;
  }
  sub_1000BA9D4((uint64_t)v23, v31);
  v32 = v13 + *(int *)(v9 + 48);
  sub_100037794((uint64_t)v26, v13, (uint64_t *)&unk_100BD35A0);
  sub_100037794((uint64_t)v23, v32, (uint64_t *)&unk_100BD35A0);
  sub_1000B489C(v13);
  if (v34)
  {
    sub_100098854((uint64_t)v23);
    sub_100098854((uint64_t)v26);
    sub_1000B489C(v32);
    if (v34)
    {
      sub_100021A14(v13, (uint64_t *)&unk_100BD35A0);
LABEL_14:
      sub_1000C5DF0();
      v40 = sub_1003BD550();
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v33 = v44;
  sub_100037794(v13, v44, (uint64_t *)&unk_100BD35A0);
  sub_1000B489C(v32);
  if (v34)
  {
    sub_100021A14((uint64_t)v23, (uint64_t *)&unk_100BD35A0);
    sub_100021A14((uint64_t)v26, (uint64_t *)&unk_100BD35A0);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v33, v5);
LABEL_12:
    sub_100021A14(v13, &qword_100BC4978);
    goto LABEL_15;
  }
  v35 = v45;
  v36 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v32, v5);
  sub_10000F1C8((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v38 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v36, v5, v37);
  v39 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v39(v36, v5);
  sub_100098854((uint64_t)v23);
  sub_100098854((uint64_t)v26);
  v39(v33, v5);
  sub_100098854(v13);
  if ((v38 & 1) != 0)
    goto LABEL_14;
LABEL_15:
  sub_1000C5DF0();
  v40 = sub_1003BD550() * 0.5;
LABEL_16:
  v41 = 1.0;
  if (v47)
    v41 = 0.5;
  return v41 * v40;
}

void sub_1003A113C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BDD008);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10039F0A8(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  Binding.wrappedValue.setter(v6, v7);
  sub_100021A14((uint64_t)v9, &qword_100BDD008);
}

uint64_t sub_1003A1228(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;

  v80 = a3;
  v85 = a2;
  v86 = a1;
  v3 = type metadata accessor for Calendar(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  __chkstk_darwin(v3);
  v76 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1000BA294(&qword_100BDD008);
  __chkstk_darwin(v84);
  v83 = (uint64_t *)((char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v79 = (uint64_t *)((char *)&v74 - v10);
  v11 = sub_1000BA294(&qword_100BDD010);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - v15;
  v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v74 - v21;
  v82 = type metadata accessor for Date(0);
  v87 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v75 = (char *)&v74 - v26;
  __chkstk_darwin(v27);
  v81 = (char *)&v74 - v28;
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v74 - v31;
  v33 = type metadata accessor for AccessibilityAdjustmentDirection(0, v30);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v34 + 16))(v37, v86, v33, v35);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v37, v33);
  if (v38 != enum case for AccessibilityAdjustmentDirection.increment(_:))
  {
    v45 = v79;
    if (v38 != enum case for AccessibilityAdjustmentDirection.decrement(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      v54 = v83;
      v53 = v84;
      v44 = v82;
LABEL_13:
      v57 = v81;
      goto LABEL_14;
    }
    v46 = *(_QWORD *)(v85 + 8);
    swift_retain();
    sub_10017B590();
    swift_release(v46);
    v47 = *v45;
    swift_bridgeObjectRetain(*v45);
    sub_1000215BC((uint64_t)v45, type metadata accessor for DayPickerViewModel);
    sub_1002F70FC(v47, (uint64_t)v16);
    swift_bridgeObjectRelease();
    v48 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v48) == 1)
    {
      sub_100021A14((uint64_t)v16, &qword_100BDD010);
      v49 = (uint64_t)v22;
      v50 = (uint64_t)v22;
      v44 = v82;
      _s7Weather24LocationCompositionStateOwst_0(v50, 1, 1, v82);
    }
    else
    {
      v55 = *(char **)(v87 + 16);
      v49 = (uint64_t)v22;
      v56 = v22;
      v44 = v82;
      ((void (*)(char *, char *, uint64_t))v55)(v56, v16, v82);
      sub_1000215BC((uint64_t)v16, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v44);
      if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v44) != 1)
      {
        v86 = v55;
        v67 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v32, v49, v44);
        v54 = v83;
        sub_10039F0A8(v83);
        v57 = v81;
        v53 = v84;
        Binding.wrappedValue.getter(v84);
        sub_100021A14((uint64_t)v54, &qword_100BDD008);
        v68 = static Date.< infix(_:_:)(v32, v57);
        v69 = *(void (**)(char *, uint64_t))(v67 + 8);
        v69(v57, v44);
        if ((v68 & 1) != 0)
        {
          sub_10039F0A8(v54);
          v79 = (uint64_t *)v32;
          v70 = v75;
          Binding.wrappedValue.getter(v53);
          sub_100021A14((uint64_t)v54, &qword_100BDD008);
          v71 = v76;
          static Calendar.current.getter(v72);
          Date.wc_addDays(_:calendar:)(-1, v71);
          (*(void (**)(char *, uint64_t))(v77 + 8))(v71, v78);
          v69(v70, v44);
          sub_10039F0A8(v54);
          ((void (*)(char *, char *, uint64_t))v86)(v70, v57, v44);
          Binding.wrappedValue.setter(v70, v53);
          sub_100021A14((uint64_t)v54, &qword_100BDD008);
          v69(v57, v44);
          v73 = (char *)v79;
        }
        else
        {
          v73 = v32;
        }
        v69(v73, v44);
        goto LABEL_14;
      }
    }
    v52 = v49;
    goto LABEL_12;
  }
  v39 = v24;
  v40 = *(_QWORD *)(v85 + 8);
  swift_retain();
  sub_10017B590();
  swift_release(v40);
  v41 = *v8;
  swift_bridgeObjectRetain(*v8);
  sub_1000215BC((uint64_t)v8, type metadata accessor for DayPickerViewModel);
  sub_10020CBF4(v41, (uint64_t)v13);
  swift_bridgeObjectRelease();
  v42 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v42) == 1)
  {
    sub_100021A14((uint64_t)v13, &qword_100BDD010);
    v43 = v19;
    v44 = v82;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v82);
LABEL_8:
    v52 = (uint64_t)v43;
LABEL_12:
    sub_100021A14(v52, (uint64_t *)&unk_100BD35A0);
    v54 = v83;
    v53 = v84;
    goto LABEL_13;
  }
  v51 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v43 = v19;
  v44 = v82;
  v51(v19, v13, v82);
  sub_1000215BC((uint64_t)v13, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v44);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v44) == 1)
    goto LABEL_8;
  v60 = v87;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v39, v19, v44);
  v54 = v83;
  sub_10039F0A8(v83);
  v57 = v81;
  v53 = v84;
  Binding.wrappedValue.getter(v84);
  sub_100021A14((uint64_t)v54, &qword_100BDD008);
  v61 = static Date.> infix(_:_:)(v39, v57);
  v62 = *(void (**)(char *, uint64_t))(v60 + 8);
  v62(v57, v44);
  if ((v61 & 1) != 0)
  {
    sub_10039F0A8(v54);
    v63 = v75;
    Binding.wrappedValue.getter(v53);
    sub_100021A14((uint64_t)v54, &qword_100BDD008);
    v86 = v39;
    v64 = v76;
    static Calendar.current.getter(v65);
    Date.wc_addDays(_:calendar:)(1, v64);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v78);
    v62(v63, v44);
    sub_10039F0A8(v54);
    v51(v63, v57, v44);
    Binding.wrappedValue.setter(v63, v53);
    sub_100021A14((uint64_t)v54, &qword_100BDD008);
    v62(v57, v44);
    v66 = v86;
  }
  else
  {
    v66 = v39;
  }
  v62(v66, v44);
LABEL_14:
  sub_10039F0A8(v54);
  Binding.wrappedValue.getter(v53);
  sub_100021A14((uint64_t)v54, &qword_100BDD008);
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  ScrollViewProxy.scrollTo<A>(_:anchor:)(v57, 0, 0, 1, v44, v58);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v57, v44);
}

double sub_1003A1A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;
  _QWORD v5[6];

  v5[2] = a3;
  v5[3] = a2;
  v3 = static Animation.default.getter(a1);
  withAnimation<A>(_:_:)(v3, sub_1003A23EC, v5, &type metadata for () + 1);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_1003A1ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for Date(0);
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  return ScrollViewProxy.scrollTo<A>(_:anchor:)(a2, 0, 0, 1, v3, v4);
}

uint64_t sub_1003A1B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 8);
  swift_retain();
  sub_10017B590();
  v11 = swift_release(v10);
  (*(void (**)(char *, char *, uint64_t, __n128))(v4 + 16))(v6, &v9[*(int *)(v7 + 20)], v3, v11);
  sub_1000215BC((uint64_t)v9, type metadata accessor for DayPickerViewModel);
  sub_10000F1C8((unint64_t *)&qword_100BC3588, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  ScrollViewProxy.scrollTo<A>(_:anchor:)(v6, 0, 0, 1, v3, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1003A1C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v1 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BD7678);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + 8);
  swift_retain();
  sub_10017B590();
  swift_release(v10);
  v11 = &v6[*(int *)(v4 + 24)];
  v13 = *(_QWORD *)v11;
  v12 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain(v12);
  sub_1000215BC((uint64_t)v6, type metadata accessor for DayPickerViewModel);
  v26 = v13;
  v27 = v12;
  v14 = sub_100114EF8();
  v15 = Text.init<A>(_:)(&v26, &type metadata for String, v14);
  v17 = v16;
  v26 = v15;
  v27 = v16;
  v19 = v18 & 1;
  v28 = v18 & 1;
  v29 = v20;
  View.accessibilityHidden(_:)(1, &type metadata for Text, &protocol witness table for Text);
  sub_1000D31B4(v15, v17, v19);
  swift_bridgeObjectRelease();
  v21 = enum case for DynamicTypeSize.accessibility1(_:);
  v22 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v3, v21, v22);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v3, v3, v22, v23) & 1) != 0)
  {
    v24 = sub_100320BDC();
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    View.dynamicTypeSize<A>(_:)(v3, v7, v1, v24, v25);
    sub_100021A14((uint64_t)v3, (uint64_t *)&unk_100C0A510);
    sub_100021A14((uint64_t)v9, &qword_100BD7678);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003A1F10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DayPickerView(a2, a1);
  return a2;
}

void sub_1003A1F48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_10039F7C4(a1, v2 + 16, a2);
}

void sub_1003A1F50(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003A0478(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003A1F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCFD0;
  if (!qword_100BDCFD0)
  {
    v1 = sub_100075EB0(&qword_100BDCFC8);
    sub_10003D2DC(&qword_100BDCFD8, &qword_100BDCFE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCFD0);
  }
  return result;
}

unint64_t sub_1003A1FDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDCFF0;
  if (!qword_100BDCFF0)
  {
    v1 = sub_100075EB0(&qword_100BD9B50);
    sub_1003A2060();
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCFF0);
  }
  return result;
}

unint64_t sub_1003A2060()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = qword_100BDCFF8;
  if (!qword_100BDCFF8)
  {
    v1 = sub_100075EB0(&qword_100BD9B48);
    v2 = sub_100075EB0(&qword_100BDCFA0);
    v3 = sub_100075EB0(&qword_100BDCF98);
    v4 = sub_100075EB0((uint64_t *)&unk_100C0A510);
    v5 = sub_100075EB0(&qword_100BDCF90);
    sub_10003D2DC(&qword_100BDCFE8, &qword_100BDCF90);
    v10 = v5;
    v11 = v6;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v10 = v3;
    v11 = v4;
    v12 = OpaqueTypeConformance2;
    v13 = v8;
    v9 = swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v10 = v2;
    v11 = v9;
    swift_getOpaqueTypeConformance2(&v10, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDCFF8);
  }
  return result;
}

uint64_t sub_1003A21C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000C4890();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_10009884C();
  sub_1000D176C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return sub_100098B00(v0, v5, v6);
}

uint64_t sub_1003A2224(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1000C4890();
  sub_1000D95A4();
  return sub_1003A1228(a1, v1 + 16, v1 + v3);
}

uint64_t sub_1003A2254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1000C4890();
  sub_1000B3130();
  v3 = v1 + v2;
  v5 = v4 | 7;
  sub_1000CD728(v6);
  return sub_1000BEA78(v0, v3, v5);
}

double sub_1003A228C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000C4890() - 8) + 80);
  return sub_1003A1A70(a1, a2, v2 + ((v5 + 16) & ~v5));
}

unint64_t sub_1003A22D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD000;
  if (!qword_100BDD000)
  {
    v1 = sub_100075EB0(&qword_100BDCFB0);
    sub_1003A1FDC();
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD000);
  }
  return result;
}

uint64_t sub_1003A2358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_1000C4890();
  sub_1000B3130();
  v2 = v1 | 7;
  v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + 64;
  sub_1000CD728(v7);
  v8 = v0 + v5;
  swift_release(*(_QWORD *)(v8 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v8 + 24));
  return sub_1000BEA78(v0, v6, v2);
}

uint64_t sub_1003A23B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1000C4890() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1003A1B44(v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1003A23EC()
{
  uint64_t v0;

  return sub_1003A1ACC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003A2408(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_10039F1A0(v1 + 32, a1);
}

uint64_t sub_1003A2418()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 7);
  return swift_deallocObject(v0, 96, 7);
}

double sub_1003A244C(uint64_t a1)
{
  uint64_t v1;

  return sub_10039F264(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

double sub_1003A2458()
{
  uint64_t v0;

  return sub_10039F2C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A2474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003A0800(a1, v2 + 16, a2);
}

uint64_t sub_1003A247C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_1000CCC4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  sub_10009884C();
  sub_1000D176C();
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  sub_1000999DC(*(int *)(v1 + 20));
  sub_1000999DC(*(int *)(v1 + 24));
  return sub_100098B00(v0, v5, v6);
}

uint64_t sub_1003A2500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003A2544()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000CCC4C();
  sub_1000D95A4();
  sub_1003A113C(v0 + 16, v0 + v1);
}

uint64_t type metadata accessor for DayView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDD0C0;
  if (!qword_100BDD0C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DayView);
  return result;
}

_QWORD *sub_1003A25A8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = v8[6];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    v18 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v17);
    v21 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      v22 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
    v25 = a3[7];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v27) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = v26;
      v31 = v28;
      v32 = 1;
    }
    else
    {
      *v26 = *v27;
      swift_retain();
      v30 = v26;
      v31 = v28;
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v30, v31, v32);
    v33 = a3[9];
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  }
  return a1;
}

double sub_1003A2784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*v5);
  }
  v7 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003A2898(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v17 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v16);
  v20 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v19) == 1)
  {
    v21 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = 1;
  }
  else
  {
    *v18 = *v19;
    swift_retain();
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v22);
  v23 = a3[7];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v25) == 1)
  {
    v27 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
    v28 = v24;
    v29 = v26;
    v30 = 1;
  }
  else
  {
    *v24 = *v25;
    swift_retain();
    v28 = v24;
    v29 = v26;
    v30 = 0;
  }
  swift_storeEnumTagMultiPayload(v28, v29, v30);
  v31 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  return a1;
}

uint64_t sub_1003A2A48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v16 = a3[6];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_100021A14(a1 + v16, &qword_100BC68C8);
    v19 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v18) == 1)
    {
      v20 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v22 = a3[7];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (_QWORD *)(a2 + v22);
    sub_100021A14(a1 + v22, &qword_100BC2990);
    v25 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v24) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = v23;
      v28 = v25;
      v29 = 1;
    }
    else
    {
      *v23 = *v24;
      swift_retain();
      v27 = v23;
      v28 = v25;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1003A2C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1000BA294(&qword_100BC2990);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t sub_1003A2DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  if (a1 != a2)
  {
    v18 = a3[6];
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    sub_100021A14(a1 + v18, &qword_100BC68C8);
    v21 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      v22 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v23 = a3[7];
    v24 = (void *)(a1 + v23);
    v25 = (const void *)(a2 + v23);
    sub_100021A14(a1 + v23, &qword_100BC2990);
    v26 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v25) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  v28 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  return a1;
}

uint64_t sub_1003A2FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A2FC8);
}

uint64_t sub_1003A2FC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1000CCC4C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  if ((_DWORD)a2 != 254)
  {
    v11 = sub_1000BA294(&qword_100BCD380);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v11;
      v12 = a3[6];
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BD8F08);
      v12 = a3[7];
    }
    v8 = a1 + v12;
    return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
  }
  v9 = *(unsigned __int8 *)(a1 + a3[5]);
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003A3098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A30A4);
}

uint64_t sub_1003A30A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1000CCC4C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5]) = a2 + 1;
      return result;
    }
    v11 = sub_1000BA294(&qword_100BCD380);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[6];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BD8F08);
      v12 = a4[7];
    }
    v10 = a1 + v12;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v10, a2, a2, v9);
}

void sub_1003A3160(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v2 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100999930;
    sub_100158B48(319, (unint64_t *)&qword_100BCD3F8, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100158B48(319, (unint64_t *)&qword_100BD7458, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = (char *)&value witness table for Builtin.Int64 + 64;
        v8[5] = (char *)&value witness table for Builtin.Int64 + 64;
        swift_initStructMetadata(a1, 256, 6, v8, a1 + 16);
      }
    }
  }
}

void sub_1003A3238()
{
  sub_10003D2DC(&qword_100BDD108, &qword_100BDD110);
}

uint64_t sub_1003A3264(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2BB0, 1);
}

void sub_1003A3274(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0x4018000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BDD118);
  sub_1003A32BC(v2, a2 + *(int *)(v4 + 44));
}

void sub_1003A32BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  int *v72;
  char v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE v122[4];
  int v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  void (*v138)(_BYTE *, uint64_t);
  _BYTE *v139;
  unint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  int *v143;
  _BYTE *v144;
  _OWORD v145[9];
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  _QWORD v153[22];
  uint64_t v154;
  char v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  __int128 v166;

  v141 = a1;
  v128 = a2;
  v3 = sub_1000BA294(&qword_100BDD120);
  __chkstk_darwin(v3);
  v126 = &v122[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v132 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v132);
  v142 = &v122[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1000BA294(&qword_100BDD128);
  v134 = *(_QWORD *)(v6 - 8);
  v135 = v6;
  __chkstk_darwin(v6);
  v144 = &v122[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = sub_1000BA294(&qword_100BDD130);
  __chkstk_darwin(v124);
  v127 = &v122[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v133 = &v122[-v10];
  __chkstk_darwin(v11);
  v125 = &v122[-v12];
  v13 = type metadata accessor for Font.TextStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v122[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v143 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v17 = (_QWORD *)(a1 + v143[5]);
  v18 = v17[1];
  v153[0] = *v17;
  v153[1] = v18;
  v19 = sub_100114EF8();
  v140 = v19;
  swift_bridgeObjectRetain(v18);
  v20 = Text.init<A>(_:)(v153, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v139 = *(_BYTE **)(v14 + 104);
  v137 = v13;
  v27 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t))v139)(v16, enum case for Font.TextStyle.caption2(_:), v13);
  static Font.Weight.bold.getter(v27);
  v136 = v16;
  v28 = static Font.system(_:weight:)(v16);
  v138 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
  v138(v16, v13);
  v29 = Text.font(_:)(v28, v20, v22, v26, v24);
  v31 = v30;
  LOBYTE(v13) = v32;
  v34 = v33;
  swift_release(v28);
  v35 = v13 & 1;
  sub_1000D31B4(v20, v22, v26);
  v36 = swift_bridgeObjectRelease();
  v37 = static Color.primary.getter(v36);
  v38 = Text.foregroundColor(_:)(v37, v29, v31, v35, v34);
  v129 = v39;
  v130 = v38;
  v123 = v40;
  v131 = v41;
  swift_release(v37);
  sub_1000D31B4(v29, v31, v35);
  swift_bridgeObjectRelease();
  v42 = v141;
  v43 = (_QWORD *)(v141 + v143[6]);
  v44 = v43[1];
  v153[0] = *v43;
  v153[1] = v44;
  swift_bridgeObjectRetain(v44);
  v45 = Text.init<A>(_:)(v153, &type metadata for String, v140);
  v47 = v46;
  v49 = v48;
  v51 = v50 & 1;
  v53 = v136;
  v52 = v137;
  v54 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t))v139)(v136, enum case for Font.TextStyle.body(_:), v137);
  static Font.Weight.medium.getter(v54);
  v55 = static Font.system(_:weight:)(v53);
  v138(v53, v52);
  v56 = Text.font(_:)(v55, v45, v47, v51, v49);
  v58 = v57;
  LODWORD(v140) = v59;
  v61 = v60;
  swift_release(v55);
  sub_1000D31B4(v45, v47, v51);
  swift_bridgeObjectRelease();
  v62 = type metadata accessor for DayView(0);
  v64 = v62;
  v65 = *(unsigned __int8 *)(v42 + *(int *)(v62 + 20));
  v139 = (_BYTE *)*(int *)(v62 + 20);
  if (v65 == 1)
  {
    v66 = v42;
    v67 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    v68 = Color.init(_:)(v67);
  }
  else if (*(_BYTE *)(v42 + v143[7]))
  {
    v66 = v42;
    if (*(_BYTE *)(v42 + v143[7]) == 1)
      v68 = static Color.cyan.getter(v62);
    else
      v68 = static Color.primary.getter(v63);
  }
  else
  {
    v66 = v42;
    v68 = static Color.gray.getter(v63);
  }
  v69 = v68;
  v70 = v140 & 1;
  v71 = Text.foregroundColor(_:)(v68, v56, v58, v140 & 1, v61);
  v143 = v72;
  v74 = v73;
  v140 = v75;
  swift_release(v69);
  sub_1000D31B4(v56, v58, v70);
  swift_bridgeObjectRelease();
  v76 = *(_QWORD *)(v66 + *(int *)(v64 + 32));
  v78 = static Alignment.center.getter(v77);
  v80 = v79;
  while (1)
  {
    LOBYTE(v121) = 1;
    LOBYTE(v120) = 1;
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v154, v76, 0, 0, 1, 0, 1, v76, 0, 0, v120, 0, v121, v78, v80);
    v152 = v74 & 1;
    v151 = v155;
    v150 = v157;
    v149 = v159;
    v148 = v161;
    v147 = v163;
    v146 = v165;
    *(_QWORD *)&v145[0] = v71;
    *((_QWORD *)&v145[0] + 1) = v143;
    LOBYTE(v145[1]) = v74 & 1;
    *((_QWORD *)&v145[1] + 1) = v140;
    *(_QWORD *)&v145[2] = v154;
    BYTE8(v145[2]) = v155;
    *(_QWORD *)&v145[3] = v156;
    BYTE8(v145[3]) = v157;
    *(_QWORD *)&v145[4] = v158;
    BYTE8(v145[4]) = v159;
    *(_QWORD *)&v145[5] = v160;
    BYTE8(v145[5]) = v161;
    *(_QWORD *)&v145[6] = v162;
    BYTE8(v145[6]) = v163;
    *(_QWORD *)&v145[7] = v164;
    BYTE8(v145[7]) = v165;
    v145[8] = v166;
    v81 = enum case for DynamicTypeSize.accessibility1(_:);
    v78 = type metadata accessor for DynamicTypeSize(0);
    v80 = &type metadata accessor for DynamicTypeSize;
    v82 = (uint64_t)v142;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 104))(v142, v81, v78);
    sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    v84 = dispatch thunk of static Equatable.== infix(_:_:)(v82, v82, v78, v83);
    if ((v84 & 1) != 0)
      break;
    __break(1u);
    v118 = static os_log_type_t.fault.getter(v84, v85, v86, v87, v88, v89, v90, v91);
    v119 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v118, &_mh_execute_header, v119, "Contradictory frame constraints specified.", 42, 2);

  }
  v92 = sub_1000BA294(&qword_100BD6E18);
  v93 = sub_1003A3FF8();
  sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
  View.dynamicTypeSize<A>(_:)(v82, v92, v132, v93, v94);
  sub_100021A14(v82, (uint64_t *)&unk_100C0A510);
  memcpy(v153, v145, 0x90uLL);
  sub_10030C9E4((uint64_t)v153);
  if ((v139[v66] & 1) != 0)
  {
    v95 = v126;
    sub_1003A3B18(v66, (uint64_t)v126);
    v96 = 0;
    v98 = (uint64_t)v127;
    v97 = v128;
  }
  else
  {
    v96 = 1;
    v98 = (uint64_t)v127;
    v97 = v128;
    v95 = v126;
  }
  v99 = v124;
  v100 = (uint64_t)v125;
  v101 = v123;
  v102 = sub_1000BA294(&qword_100BDD138);
  v103 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, v96, 1, v102);
  v104 = v101 & 1;
  v105 = static Alignment.center.getter(v103);
  v107 = v106;
  v108 = (uint64_t)v133;
  v109 = (uint64_t)&v133[*(int *)(v99 + 36)];
  sub_100037794((uint64_t)v95, v109, &qword_100BDD120);
  v110 = (uint64_t *)(v109 + *(int *)(sub_1000BA294(&qword_100BDD140) + 36));
  *v110 = v105;
  v110[1] = v107;
  v112 = v134;
  v111 = v135;
  v113 = v144;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v134 + 16))(v108, v144, v135);
  sub_100021A14((uint64_t)v95, &qword_100BDD120);
  (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v113, v111);
  sub_1000F111C(v108, v100, &qword_100BDD130);
  sub_100037794(v100, v98, &qword_100BDD130);
  v115 = v129;
  v114 = v130;
  *(_QWORD *)v97 = v130;
  *(_QWORD *)(v97 + 8) = v115;
  *(_BYTE *)(v97 + 16) = v104;
  v116 = v131;
  *(_QWORD *)(v97 + 24) = v131;
  v117 = sub_1000BA294(&qword_100BDD148);
  sub_100037794(v98, v97 + *(int *)(v117 + 48), &qword_100BDD130);
  sub_1000D55D4(v114, v115, v104);
  swift_bridgeObjectRetain(v116);
  sub_100021A14(v100, &qword_100BDD130);
  sub_100021A14(v98, &qword_100BDD130);
  sub_1000D31B4(v114, v115, v104);
  swift_bridgeObjectRelease();
}

void sub_1003A3B18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  char v29;
  uint64_t v30;
  double v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unsigned __int8 v63;
  __int128 v64;

  v3 = v2;
  v56 = a1;
  v59 = a2;
  v57 = sub_1000BA294(&qword_100BDD150);
  __chkstk_darwin(v57);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000BA294(&qword_100BD3DA8);
  __chkstk_darwin(v54);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v53);
  v9 = (double *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = sub_1000BA294(&qword_100BDD158);
  __chkstk_darwin(v58);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v55 = (uint64_t)&v50 - v13;
  v14 = type metadata accessor for DynamicTypeSize(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DayView(0);
  sub_10010FD3C();
  v20 = DynamicTypeSize.isAccessibilitySize.getter(v19);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v21 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  v23 = *(unsigned __int8 *)(v56 + *(int *)(v21 + 28));
  if ((v20 & 1) != 0)
  {
    if (*(_BYTE *)(v56 + *(int *)(v21 + 28)))
    {
      if (v23 == 1)
        v24 = static Color.cyan.getter(v21);
      else
        v24 = static Color.white.getter(v21);
    }
    else
    {
      v24 = static Color.gray.getter(v22);
    }
    v26 = v24;
    v27 = *(double *)(v3 + *(int *)(v18 + 32));
    v28 = v27 + *(double *)(v3 + *(int *)(v18 + 36));
    static Alignment.center.getter(v24);
    _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&v28, 0, *(_QWORD *)&v27, 0);
    v56 = v60;
    v29 = v61;
    v30 = v62;
    v52 = v63;
    v50 = *((_QWORD *)&v64 + 1);
    v51 = v64;
    v31 = v27 * 0.15;
    v32 = (char *)v9 + *(int *)(v53 + 20);
    v33 = enum case for RoundedCornerStyle.continuous(_:);
    v34 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
    *v9 = v31;
    v9[1] = v31;
    sub_10000AB54((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v7[*(int *)(v54 + 36)] = 256;
    v35 = v58;
    sub_100037794((uint64_t)v7, (uint64_t)&v11[*(int *)(v58 + 36)], &qword_100BD3DA8);
    *(_QWORD *)v11 = v26;
    *((_WORD *)v11 + 4) = 256;
    *((_QWORD *)v11 + 2) = v56;
    v11[24] = v29;
    *((_QWORD *)v11 + 4) = v30;
    v11[40] = v52;
    v36 = v50;
    *((_QWORD *)v11 + 6) = v51;
    *((_QWORD *)v11 + 7) = v36;
    swift_retain();
    sub_100021A14((uint64_t)v7, &qword_100BD3DA8);
    sub_1000215BC((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    swift_release(v26);
    v37 = v55;
    sub_1000F111C((uint64_t)v11, v55, &qword_100BDD158);
    sub_100037794(v37, (uint64_t)v5, &qword_100BDD158);
    swift_storeEnumTagMultiPayload(v5, v57, 0);
    v38 = sub_1000BA294(&qword_100BDD160);
    v39 = sub_1003A405C();
    v40 = sub_1003A4100(&qword_100BDD190, &qword_100BDD160, &qword_100BDD198, &qword_100BDD1A0);
    _ConditionalContent<>.init(storage:)(v5, v35, v38, v39, v40);
    sub_100021A14(v37, &qword_100BDD158);
  }
  else
  {
    if (*(_BYTE *)(v56 + *(int *)(v21 + 28)))
    {
      if (v23 == 1)
        v25 = static Color.cyan.getter(v21);
      else
        v25 = static Color.white.getter(v21);
    }
    else
    {
      v25 = static Color.gray.getter(v22);
    }
    v41 = v25;
    v42 = *(_QWORD *)(v3 + *(int *)(v18 + 32));
    static Alignment.center.getter(v25);
    _FrameLayout.init(width:height:alignment:)(v42, 0, v42, 0);
    v43 = v60;
    v44 = v61;
    v45 = v62;
    v46 = v63;
    *(_QWORD *)v5 = v41;
    *((_WORD *)v5 + 4) = 256;
    *((_QWORD *)v5 + 2) = v43;
    v5[24] = v44;
    *((_QWORD *)v5 + 4) = v45;
    v5[40] = v46;
    *((_OWORD *)v5 + 3) = v64;
    swift_storeEnumTagMultiPayload(v5, v57, 1);
    v47 = sub_1000BA294(&qword_100BDD160);
    v48 = sub_1003A405C();
    v49 = sub_1003A4100(&qword_100BDD190, &qword_100BDD160, &qword_100BDD198, &qword_100BDD1A0);
    _ConditionalContent<>.init(storage:)(v5, v58, v47, v48, v49);
  }
}

unint64_t sub_1003A3FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD6E10;
  if (!qword_100BD6E10)
  {
    v1 = sub_100075EB0(&qword_100BD6E18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BD6E10);
  }
  return result;
}

unint64_t sub_1003A405C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD168;
  if (!qword_100BDD168)
  {
    v1 = sub_100075EB0(&qword_100BDD158);
    sub_1003A4100((unint64_t *)&qword_100BDD170, &qword_100BDD178, &qword_100BDD180, &qword_100BDD188);
    sub_10003D2DC(&qword_100BD9910, &qword_100BD3DA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD168);
  }
  return result;
}

uint64_t sub_1003A4100(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100075EB0(a2);
    sub_10003D2DC(a3, a4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003A4180()
{
  sub_10003D2DC(&qword_100BDD1A8, &qword_100BDD1B0);
}

void *TipView.init(model:style:onAction:onDismiss:)@<X0>(const void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  _QWORD *v20;
  uint64_t v21;
  void *result;

  v20 = (_QWORD *)(a9 + *(int *)(type metadata accessor for TipView(0) + 32));
  *v20 = swift_getKeyPath(&unk_100999998);
  v21 = sub_1000BA294(&qword_100BC2908);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  result = memcpy((void *)(a9 + 32), a1, 0x48uLL);
  *(_BYTE *)a9 = a2;
  *(double *)(a9 + 8) = a10;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_BYTE *)(a9 + 25) = HIBYTE(a4) & 1;
  *(_QWORD *)(a9 + 104) = a5;
  *(_QWORD *)(a9 + 112) = a6;
  *(_QWORD *)(a9 + 120) = a7;
  *(_QWORD *)(a9 + 128) = a8;
  return result;
}

void sub_1003A4284()
{
  EnvironmentValues.colorScheme.getter();
  sub_10004A298();
}

void sub_1003A42A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003A4300(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (void (*)(char *))&EnvironmentValues.colorScheme.setter);
}

void sub_1003A42B4()
{
  EnvironmentValues.layoutDirection.getter();
  sub_10004A298();
}

void sub_1003A42D0()
{
  EnvironmentValues.layoutDirection.getter();
  sub_10004A298();
}

void sub_1003A42EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003A4300(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (void (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

void sub_1003A4300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v8 = a5(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))((char *)&v13 - v10, a1, v9);
  a6(v11);
  sub_100079F70();
}

void sub_1003A4374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003A4300(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (void (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

void TipView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t OpaqueTypeConformance2;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v55[2];
  Swift::String v56;
  Swift::String v57;

  v2 = v1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  sub_1000BA294(&qword_100BDD1B8);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v11 = sub_1000BA294(&qword_100BDD1C0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v52 = sub_1000BA294(&qword_100BDD1C8);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  sub_100098728();
  v47 = v17 - v16;
  sub_1000BA294(&qword_100BDD1D0);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  v50 = sub_1000BA294(&qword_100BDD1D8);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = v24 - v23;
  v51 = sub_1000BA294(&qword_100BDD1E0);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100098728();
  v29 = v28 - v27;
  *(_QWORD *)v10 = static VerticalAlignment.top.getter(v30);
  *(_QWORD *)(v10 + 8) = 0x4032000000000000;
  *(_BYTE *)(v10 + 16) = 0;
  v31 = sub_1000BA294(&qword_100BDD1E8);
  sub_1003A4790(v2, v10 + *(int *)(v31 + 44));
  v33 = static Color.secondary.getter(v32);
  KeyPath = swift_getKeyPath(&unk_1009999C8);
  sub_100037768(v10, v15, &qword_100BDD1B8);
  v35 = (uint64_t *)(v15 + *(int *)(v11 + 36));
  *v35 = KeyPath;
  v35[1] = v33;
  sub_100021AA4(v10, &qword_100BDD1B8);
  static AccessibilityChildBehavior.contain.getter(v36);
  v37 = sub_1003A673C();
  View.accessibilityElement(children:)(v6, v11, v37);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v6, v49);
  sub_100021AA4(v15, &qword_100BDD1C0);
  v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v57._object = (void *)0x80000001009FC510;
  v39._countAndFlagsBits = 7366996;
  v39._object = (void *)0xE300000000000000;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v57._countAndFlagsBits = 0xD00000000000003CLL;
  v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v57);

  v56 = v41;
  v55[0] = v11;
  v55[1] = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v43 = sub_100114EF8();
  View.accessibilityLabel<A>(_:)(&v56, v52, &type metadata for String, OpaqueTypeConformance2, v43);
  v44 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v53 + 8))(v47, v52, v44);
  sub_100037768(v21, v25, &qword_100BDD1D0);
  *(_BYTE *)(v25 + *(int *)(v50 + 36)) = 1;
  sub_100021AA4(v21, &qword_100BDD1D0);
  static Edge.Set.horizontal.getter(v45);
  EdgeInsets.init(_all:)(13.0);
  sub_1000CCB28();
  sub_100037768(v25, v29, &qword_100BDD1D8);
  sub_1000DB950(v29 + *(int *)(v51 + 36));
  sub_100021AA4(v25, &qword_100BDD1D8);
  static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)(11.0);
  sub_1000CCB28();
  sub_100037768(v29, a1, &qword_100BDD1E0);
  v46 = sub_1000BA294(&qword_100BDD200);
  sub_1000DB950(a1 + *(int *)(v46 + 36));
  sub_100021AA4(v29, &qword_100BDD1E0);
}

void sub_1003A4790(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v101 = a2;
  v3 = sub_1000BA294(&qword_100BDD3A8);
  __chkstk_darwin(v3);
  v102 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v100 = (uint64_t *)((char *)&v82 - v6);
  v99 = type metadata accessor for LayoutDirection(0);
  v97 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v96 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v95 = (char *)&v82 - v9;
  v10 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v10);
  v86 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for BlendMode(0);
  v84 = *(_QWORD *)(v85 - 8);
  v12 = __chkstk_darwin(v85);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Image.ResizingMode(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1000BA294(&qword_100BDD3B0);
  __chkstk_darwin(v83);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1000BA294(&qword_100BDD3B8);
  __chkstk_darwin(v87);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1000BA294(&qword_100BDD3C0);
  __chkstk_darwin(v89);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BDD3C8);
  __chkstk_darwin(v25);
  v88 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1000BA294(&qword_100BDD3D0);
  __chkstk_darwin(v91);
  v90 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1000BA294(&qword_100BDD3D8);
  __chkstk_darwin(v93);
  v98 = (uint64_t)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v92 = (uint64_t)&v82 - v30;
  __chkstk_darwin(v31);
  v94 = (uint64_t)&v82 - v32;
  sub_10021D348(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  v34 = v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for Image.ResizingMode.stretch(_:), v15);
  v35 = Image.resizable(capInsets:resizingMode:)(v18, v34, 0.0, 0.0, 0.0, 0.0);
  v36 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v36);
  v37 = v84;
  if (*(_BYTE *)a1)
    v38 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  else
    v38 = (unsigned int *)&enum case for BlendMode.normal(_:);
  v39 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v14, *v38, v85);
  v40 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v41 = v37;
  v42 = (uint64_t)v86;
  v40(v86, v14, v39);
  sub_1003A7884(v42, (uint64_t)&v20[*(int *)(v83 + 36)]);
  *(_QWORD *)v20 = v35;
  *((_QWORD *)v20 + 1) = 0;
  *((_WORD *)v20 + 8) = 1;
  swift_retain();
  sub_1003A78C8(v42);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v39);
  swift_release(v35);
  v43 = *(_QWORD *)(a1 + 8);
  static Alignment.center.getter(v44);
  _FrameLayout.init(width:height:alignment:)(v43, 0, 0, 1);
  sub_100037768((uint64_t)v20, (uint64_t)v22, &qword_100BDD3B0);
  v45 = &v22[*(int *)(v87 + 36)];
  v46 = v104;
  *(_OWORD *)v45 = v103;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v105;
  sub_100021AA4((uint64_t)v20, &qword_100BDD3B0);
  v48 = static VerticalAlignment.top.getter(v47);
  sub_100037768((uint64_t)v22, (uint64_t)v24, &qword_100BDD3B8);
  v49 = v89;
  v50 = (uint64_t *)&v24[*(int *)(v89 + 36)];
  *v50 = v48;
  v50[1] = (uint64_t)sub_1003A4F58;
  v50[2] = 0;
  sub_100021AA4((uint64_t)v22, &qword_100BDD3B8);
  sub_1003A70C0((uint64_t)&unk_100BDD3E0);
  v51 = (uint64_t)v88;
  View.accessibility(hidden:)(1, v49, v52);
  sub_100021AA4((uint64_t)v24, &qword_100BDD3C0);
  type metadata accessor for TipView(0);
  v53 = v95;
  sub_1001591C8();
  v54 = v96;
  v55 = v97;
  v56 = v99;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for LayoutDirection.leftToRight(_:), v99);
  v57 = v54;
  LOBYTE(v54) = static LayoutDirection.== infix(_:_:)(v53, v54);
  v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  v58(v57, v56);
  v59 = v53;
  v60 = (uint64_t)v90;
  v61 = ((uint64_t (*)(char *, uint64_t))v58)(v59, v56);
  if ((v54 & 1) != 0)
    v62 = 1.0;
  else
    v62 = -1.0;
  v63 = static UnitPoint.center.getter(v61);
  v65 = v64;
  sub_100037768(v51, v60, &qword_100BDD3C8);
  v66 = v60 + *(int *)(v91 + 36);
  *(double *)v66 = v62;
  *(_QWORD *)(v66 + 8) = 0x3FF0000000000000;
  *(double *)(v66 + 16) = v63;
  *(_QWORD *)(v66 + 24) = v65;
  sub_100021AA4(v51, &qword_100BDD3C8);
  v68 = *(_QWORD *)(a1 + 16);
  if (!v68)
    v68 = static Color.secondary.getter(v67);
  KeyPath = swift_getKeyPath(&unk_1009999C8);
  v70 = v92;
  sub_100037768(v60, v92, &qword_100BDD3D0);
  v71 = (uint64_t *)(v70 + *(int *)(v93 + 36));
  *v71 = KeyPath;
  v71[1] = v68;
  swift_retain();
  sub_100021AA4(v60, &qword_100BDD3D0);
  v72 = v70;
  v73 = v94;
  sub_1000787D4(v72, v94, &qword_100BDD3D8);
  v75 = static HorizontalAlignment.leading.getter(v74);
  v76 = (uint64_t)v100;
  *v100 = v75;
  *(_QWORD *)(v76 + 8) = 0;
  *(_BYTE *)(v76 + 16) = 1;
  v77 = sub_1000BA294(&qword_100BDD400);
  sub_1003A4F60(a1, v76 + *(int *)(v77 + 44));
  v78 = v98;
  sub_100037768(v73, v98, &qword_100BDD3D8);
  v79 = v102;
  sub_100037768(v76, v102, &qword_100BDD3A8);
  v80 = v101;
  sub_100037768(v78, v101, &qword_100BDD3D8);
  v81 = sub_1000BA294(&qword_100BDD408);
  sub_100037768(v79, v80 + *(int *)(v81 + 48), &qword_100BDD3A8);
  sub_100021AA4(v76, &qword_100BDD3A8);
  sub_100021AA4(v73, &qword_100BDD3D8);
  sub_100021AA4(v79, &qword_100BDD3A8);
  sub_100021AA4(v78, &qword_100BDD3D8);
}

double sub_1003A4F58()
{
  return -6.0;
}

void sub_1003A4F60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unsigned int *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v116 = a2;
  v108 = type metadata accessor for PlainButtonStyle(0);
  v106 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v105 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC4FA0);
  v103 = *(_QWORD *)(v4 - 8);
  v104 = v4;
  __chkstk_darwin(v4);
  v102 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BDD410);
  v109 = *(_QWORD *)(v6 - 8);
  v110 = v6;
  __chkstk_darwin(v6);
  v107 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1000BA294(&qword_100BDD418);
  __chkstk_darwin(v101);
  v112 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v111 = (uint64_t)&v92 - v10;
  v98 = type metadata accessor for BlendMode(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for Divider(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1000BA294(&qword_100BDD420);
  __chkstk_darwin(v92);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1000BA294(&qword_100BDD428);
  __chkstk_darwin(v93);
  v100 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v92 - v18;
  __chkstk_darwin(v20);
  v99 = (uint64_t)&v92 - v21;
  v22 = sub_1000BA294(&qword_100BDD430);
  __chkstk_darwin(v22);
  v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v115 = (uint64_t)&v92 - v26;
  v27 = sub_1000BA294(&qword_100BDD438);
  __chkstk_darwin(v27);
  v29 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BDD440);
  __chkstk_darwin(v30);
  v114 = (uint64_t)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v34 = (char *)&v92 - v33;
  v36 = __chkstk_darwin(v35);
  v38 = (char *)&v92 - v37;
  *(_QWORD *)v29 = static VerticalAlignment.top.getter(v36);
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = 1;
  v39 = sub_1000BA294(&qword_100BDD448);
  sub_1003A57F4(a1, (uint64_t)&v29[*(int *)(v39 + 44)]);
  v90 = static Alignment.center.getter(v40);
  v91 = v41;
  v89 = 1;
  v88 = 0;
  sub_100946198();
  sub_100021AA4((uint64_t)v29, &qword_100BDD438);
  v113 = v38;
  sub_1000787D4((uint64_t)v34, (uint64_t)v38, &qword_100BDD440);
  if ((*(_BYTE *)(a1 + 25) & 1) != 0)
  {
    v43 = sub_1000BA294(&qword_100BDD458);
    v44 = v115;
    _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v43);
  }
  else
  {
    Divider.init()(v42);
    v46 = static Color.secondary.getter(v45);
    KeyPath = swift_getKeyPath(&unk_1009999C8);
    v48 = v94;
    v49 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v15, v13, v95);
    v50 = (uint64_t *)&v15[*(int *)(v92 + 36)];
    *v50 = KeyPath;
    v50[1] = v46;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);
    v51 = v97;
    if (*(_BYTE *)a1)
      v52 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    else
      v52 = (unsigned int *)&enum case for BlendMode.normal(_:);
    v53 = v96;
    v54 = v98;
    (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, *v52, v98);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(&v19[*(int *)(v93 + 36)], v53, v54);
    sub_100037768((uint64_t)v15, (uint64_t)v19, &qword_100BDD420);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
    sub_100021AA4((uint64_t)v15, &qword_100BDD420);
    v55 = v99;
    sub_1000787D4((uint64_t)v19, v99, &qword_100BDD428);
    v56 = *(_QWORD *)(a1 + 104);
    v57 = *(_QWORD *)(a1 + 112);
    __chkstk_darwin(v58);
    v90 = a1;
    swift_retain();
    v59 = v102;
    v60 = Button.init(action:label:)(v56, v57, sub_1003A7988, &v88, &type metadata for Text, &protocol witness table for Text);
    v61 = v105;
    PlainButtonStyle.init()(v60);
    sub_10007AB60((uint64_t)&qword_100BC4FC0);
    v63 = v62;
    sub_10007A100((uint64_t)&qword_100BD0908);
    v65 = v107;
    v64 = v108;
    v66 = v104;
    View.buttonStyle<A>(_:)(v61, v104, v108, v63, v67);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v61, v64);
    v68 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v59, v66);
    LOBYTE(v63) = static Edge.Set.top.getter(v68);
    v69 = EdgeInsets.init(_all:)(4.0);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v77 = v109;
    v76 = v110;
    v78 = (uint64_t)v112;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v112, v65, v110);
    v79 = v78 + *(int *)(v101 + 36);
    *(_BYTE *)v79 = v63;
    *(double *)(v79 + 8) = v69;
    *(_QWORD *)(v79 + 16) = v71;
    *(_QWORD *)(v79 + 24) = v73;
    *(_QWORD *)(v79 + 32) = v75;
    *(_BYTE *)(v79 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v76);
    v80 = v111;
    sub_1000787D4(v78, v111, &qword_100BDD418);
    v81 = v100;
    sub_100037768(v55, v100, &qword_100BDD428);
    sub_100037768(v80, v78, &qword_100BDD418);
    sub_100037768(v81, (uint64_t)v24, &qword_100BDD428);
    v82 = sub_1000BA294(&qword_100BDD450);
    sub_100037768(v78, (uint64_t)&v24[*(int *)(v82 + 48)], &qword_100BDD418);
    sub_100021AA4(v80, &qword_100BDD418);
    sub_100021AA4(v55, &qword_100BDD428);
    sub_100021AA4(v78, &qword_100BDD418);
    sub_100021AA4(v81, &qword_100BDD428);
    v83 = sub_1000BA294(&qword_100BDD458);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v83);
    v44 = v115;
    sub_1000787D4((uint64_t)v24, v115, &qword_100BDD430);
  }
  v85 = (uint64_t)v113;
  v84 = v114;
  sub_100037768((uint64_t)v113, v114, &qword_100BDD440);
  sub_100037768(v44, (uint64_t)v24, &qword_100BDD430);
  v86 = v116;
  sub_100037768(v84, v116, &qword_100BDD440);
  v87 = sub_1000BA294(&qword_100BDD460);
  sub_100037768((uint64_t)v24, v86 + *(int *)(v87 + 48), &qword_100BDD430);
  sub_100021AA4(v44, &qword_100BDD430);
  sub_100021AA4(v85, &qword_100BDD440);
  sub_100021AA4((uint64_t)v24, &qword_100BDD430);
  sub_100021AA4(v84, &qword_100BDD440);
}

void sub_1003A57F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = sub_1000BA294(&qword_100BDD468);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v30 - v8);
  v10 = sub_1000BA294(&qword_100BDD470);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v30 - v17;
  *(_QWORD *)v15 = static HorizontalAlignment.leading.getter(v19);
  *((_QWORD *)v15 + 1) = 0x4000000000000000;
  v15[16] = 0;
  v20 = sub_1000BA294(&qword_100BDD478);
  sub_1003A5A6C(a1, (uint64_t *)&v15[*(int *)(v20 + 44)]);
  sub_1000787D4((uint64_t)v15, (uint64_t)v18, &qword_100BDD470);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v21 = type metadata accessor for DismissButton(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v21);
  }
  else
  {
    v22 = *(_BYTE *)a1;
    v24 = *(_QWORD *)(a1 + 120);
    v23 = *(_QWORD *)(a1 + 128);
    *v9 = swift_getKeyPath(&unk_100999B00);
    v25 = sub_1000BA294(&qword_100BD4338);
    swift_storeEnumTagMultiPayload(v9, v25, 0);
    v26 = type metadata accessor for DismissButton(0);
    *((_BYTE *)v9 + *(int *)(v26 + 20)) = v22;
    v27 = (_QWORD *)((char *)v9 + *(int *)(v26 + 24));
    *v27 = v24;
    v27[1] = v23;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v26);
    swift_retain();
  }
  sub_100037768((uint64_t)v18, (uint64_t)v12, &qword_100BDD470);
  sub_100037768((uint64_t)v9, (uint64_t)v6, &qword_100BDD468);
  sub_100037768((uint64_t)v12, a2, &qword_100BDD470);
  v28 = sub_1000BA294(&qword_100BDD480);
  v29 = a2 + *(int *)(v28 + 48);
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  sub_100037768((uint64_t)v6, a2 + *(int *)(v28 + 64), &qword_100BDD468);
  sub_100021AA4((uint64_t)v9, &qword_100BDD468);
  sub_100021AA4((uint64_t)v18, &qword_100BDD470);
  sub_100021AA4((uint64_t)v6, &qword_100BDD468);
  sub_100021AA4((uint64_t)v12, &qword_100BDD470);
}

double sub_1003A5A6C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  _BYTE *v72;
  unsigned int *v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  double result;
  _BYTE v88[4];
  int v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v103 = a2;
  v3 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v3);
  v100 = &v88[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v97 = type metadata accessor for BlendMode(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v94 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = sub_1000BA294(&qword_100BC3B90);
  __chkstk_darwin(v96);
  v7 = &v88[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = sub_1000BA294(&qword_100BDD488);
  __chkstk_darwin(v101);
  v102 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v98 = &v88[-v10];
  __chkstk_darwin(v11);
  v99 = &v88[-v12];
  v104 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v105 = *(_QWORD *)(a1 + 56);
  v106 = v13;
  v14 = sub_100114EF8();
  v90 = v14;
  swift_bridgeObjectRetain(v13);
  v15 = Text.init<A>(_:)(&v105, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  v23 = static Color.primary.getter(v22);
  v24 = Text.foregroundColor(_:)(v23, v15, v17, v21, v19);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_release(v23);
  v31 = v28 & 1;
  sub_1000D31B4(v15, v17, v21);
  swift_bridgeObjectRelease();
  v33 = static Font.headline.getter(v32);
  v34 = Text.font(_:)(v33, v24, v26, v31, v30);
  v36 = v35;
  LOBYTE(v17) = v37;
  v39 = v38;
  swift_release(v33);
  sub_1000D31B4(v24, v26, v31);
  swift_bridgeObjectRelease();
  v41 = static Font.Weight.medium.getter(v40);
  v93 = Text.fontWeight(_:)(*(_QWORD *)&v41, 0, v34, v36, v17 & 1, v39);
  v91 = v42;
  v89 = v43;
  v92 = v44;
  sub_1000D31B4(v34, v36, v17 & 1);
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v104 + 80);
  v105 = *(_QWORD *)(v104 + 72);
  v106 = v45;
  swift_bridgeObjectRetain(v45);
  v46 = Text.init<A>(_:)(&v105, &type metadata for String, v90);
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  v53 = static Font.subheadline.getter(v46);
  v54 = Text.font(_:)(v53, v46, v48, v52, v50);
  v56 = v55;
  LOBYTE(v17) = v57;
  v59 = v58;
  swift_release(v53);
  v60 = v17 & 1;
  sub_1000D31B4(v46, v48, v52);
  v61 = swift_bridgeObjectRelease();
  v62 = static Color.secondary.getter(v61);
  v63 = Text.foregroundColor(_:)(v62, v54, v56, v60, v59);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  swift_release(v62);
  sub_1000D31B4(v54, v56, v60);
  v70 = swift_bridgeObjectRelease();
  v72 = v94;
  v71 = v95;
  if (*(_BYTE *)v104)
    v73 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  else
    v73 = (unsigned int *)&enum case for BlendMode.normal(_:);
  v74 = v97;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v95 + 104))(v94, *v73, v97, v70);
  v75 = v67 & 1;
  v76 = v89 & 1;
  v77 = (uint64_t)v100;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(v100, v72, v74);
  sub_1003A7884(v77, (uint64_t)&v7[*(int *)(v96 + 36)]);
  *(_QWORD *)v7 = v63;
  *((_QWORD *)v7 + 1) = v65;
  v7[16] = v75;
  *((_QWORD *)v7 + 3) = v69;
  sub_1000D55D4(v63, v65, v75);
  swift_bridgeObjectRetain(v69);
  sub_1003A78C8(v77);
  (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v72, v74);
  sub_1000D31B4(v63, v65, v75);
  swift_bridgeObjectRelease();
  v78 = v98;
  sub_100037768((uint64_t)v7, (uint64_t)v98, &qword_100BC3B90);
  *(_WORD *)&v78[*(int *)(v101 + 36)] = 256;
  sub_100021AA4((uint64_t)v7, &qword_100BC3B90);
  v79 = v99;
  sub_1000787D4((uint64_t)v78, (uint64_t)v99, &qword_100BDD488);
  v80 = v102;
  sub_100037768((uint64_t)v79, (uint64_t)v102, &qword_100BDD488);
  v81 = v103;
  v82 = v92;
  v83 = v93;
  v84 = v91;
  *v103 = v93;
  v81[1] = v84;
  *((_BYTE *)v81 + 16) = v76;
  v81[3] = v82;
  *((_WORD *)v81 + 16) = 256;
  v85 = v81;
  v86 = sub_1000BA294(&qword_100BDD490);
  sub_100037768((uint64_t)v80, (uint64_t)v85 + *(int *)(v86 + 48), &qword_100BDD488);
  sub_1000D55D4(v83, v84, v76);
  swift_bridgeObjectRetain(v82);
  sub_100021AA4((uint64_t)v79, &qword_100BDD488);
  sub_100021AA4((uint64_t)v80, &qword_100BDD488);
  sub_1000D31B4(v83, v84, v76);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1003A5FAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];

  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  v35[0] = v8;
  v35[1] = v9;
  v10 = sub_100114EF8();
  swift_bridgeObjectRetain(v9);
  v11 = Text.init<A>(_:)(v35, &type metadata for String, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  v18 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.body(_:), v4);
  static Font.Weight.medium.getter(v18);
  v19 = static Font.system(_:weight:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = Text.font(_:)(v19, v11, v13, v17, v15);
  v22 = v21;
  LOBYTE(v5) = v23;
  v25 = v24;
  swift_release(v19);
  LOBYTE(v19) = v5 & 1;
  sub_1000D31B4(v11, v13, v17);
  v26 = swift_bridgeObjectRelease();
  v27 = static Color.primary.getter(v26);
  v28 = Text.foregroundColor(_:)(v27, v20, v22, v5 & 1, v25);
  v30 = v29;
  LOBYTE(v17) = v31;
  v33 = v32;
  swift_release(v27);
  sub_1000D31B4(v20, v22, v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = v30;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v33;
}

uint64_t sub_1003A6150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[16];
  uint64_t v30;

  v28 = a1;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  v27 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BDD360);
  v25 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDD368);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(v1 + *(int *)(type metadata accessor for DismissButton(0) + 24));
  v15 = *v13;
  v14 = v13[1];
  v30 = v1;
  swift_retain();
  v16 = sub_1000BA294(&qword_100BDD370);
  sub_100345634((uint64_t)&unk_100BDD378);
  v18 = Button.init(action:label:)(v15, v14, sub_1003A77D4, v29, v16, v17);
  PlainButtonStyle.init()(v18);
  sub_10007AB60((uint64_t)&unk_100BDD390);
  v20 = v19;
  sub_10007A100((uint64_t)&qword_100BD0908);
  v21 = v26;
  View.buttonStyle<A>(_:)(v5, v6, v26, v20, v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  v23 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v28, v12, v9);
  *(_OWORD *)(v23 + *(int *)(sub_1000BA294(&qword_100BDD398) + 36)) = xmmword_10097DED0;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1003A6394(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  v39 = a1;
  v2 = type metadata accessor for ColorScheme(0);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v32 = (char *)&v31 - v5;
  v37 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDD3A0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BDD388);
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1000BA294(&qword_100BDD370);
  __chkstk_darwin(v36);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v40 = v18;
  v19 = static Font.Weight.semibold.getter(v18);
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, &type metadata for Image, &protocol witness table for Image);
  v20 = swift_release(v18);
  LODWORD(v18) = static HierarchicalShapeStyle.quaternary.getter(v20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  *(_DWORD *)&v15[*(int *)(v13 + 36)] = v18;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (*(_BYTE *)(v39 + *(int *)(type metadata accessor for DismissButton(0) + 20)) == 1)
  {
    v21 = v32;
    sub_1001591FC();
    v23 = v33;
    v22 = v34;
    v24 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for ColorScheme.light(_:), v35);
    v25 = static ColorScheme.== infix(_:_:)(v21, v23);
    v26 = *(void (**)(char *, uint64_t))(v22 + 8);
    v26(v23, v24);
    v26(v21, v24);
    v28 = v37;
    v27 = v38;
    v29 = v36;
    if ((v25 & 1) != 0)
      v30 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    else
      v30 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v30, v37);
  }
  else
  {
    v28 = v37;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for BlendMode.normal(_:), v37);
    v27 = v38;
    v29 = v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v17[*(int *)(v29 + 36)], v8, v28);
  sub_100037768((uint64_t)v15, (uint64_t)v17, &qword_100BDD388);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  sub_100021AA4((uint64_t)v15, &qword_100BDD388);
  sub_1000787D4((uint64_t)v17, v27, &qword_100BDD370);
}

void sub_1003A66DC()
{
  uint64_t *v0;

  *v0 = sub_1000DF5C0();
  sub_10004A298();
}

void sub_1003A66F8()
{
  uint64_t *v0;

  *v0 = sub_1000DF5C0();
  sub_10004A298();
}

void sub_1003A6714()
{
  __n128 v0;

  v0 = swift_retain();
  EnvironmentValues.foregroundColor.setter(v0);
  sub_10004A298();
}

unint64_t sub_1003A673C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD1F0;
  if (!qword_100BDD1F0)
  {
    v1 = sub_100075EB0(&qword_100BDD1C0);
    sub_10007AB60((uint64_t)&unk_100BDD1F8);
    sub_10007AB60((uint64_t)&qword_100BC4B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD1F0);
  }
  return result;
}

uint64_t sub_1003A67D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of TipView.body>>, 1);
}

_BYTE *initializeBufferWithCopyOfBuffer for TipView(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    *((_WORD *)v4 + 12) = *((_WORD *)a2 + 12);
    v8 = a2[4];
    v9 = a2[5];
    v10 = *((_BYTE *)a2 + 48);
    swift_retain();
    sub_10009D328(v8, v9);
    *((_QWORD *)v4 + 4) = v8;
    *((_QWORD *)v4 + 5) = v9;
    v4[48] = v10;
    v11 = a2[8];
    *((_QWORD *)v4 + 7) = a2[7];
    *((_QWORD *)v4 + 8) = v11;
    v12 = a2[10];
    *((_QWORD *)v4 + 9) = a2[9];
    *((_QWORD *)v4 + 10) = v12;
    *((_QWORD *)v4 + 11) = a2[11];
    v13 = a2[16];
    v24 = *((_OWORD *)a2 + 6);
    v25 = *((_OWORD *)a2 + 7);
    *((_OWORD *)v4 + 6) = v24;
    *((_OWORD *)v4 + 7) = v25;
    v14 = *(int *)(a3 + 32);
    v15 = &v4[v14];
    v16 = (uint64_t *)((char *)a2 + v14);
    *((_QWORD *)v4 + 16) = v13;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v24);
    swift_retain();
    swift_retain();
    v17 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v16) == 1)
    {
      v18 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = v15;
      v20 = v17;
      v21 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v19 = v15;
      v20 = v17;
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v20, v21);
  }
  return v4;
}

double destroy for TipView(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  swift_release(a1[2]);
  sub_10016F41C(a1[4], a1[5]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(a1[14]);
  swift_release(a1[16]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_10009D328(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 128);
  v20 = *(_OWORD *)(a2 + 96);
  v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v20;
  *(_OWORD *)(a1 + 112) = v21;
  v13 = *(int *)(a3 + 32);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v20);
  swift_retain();
  swift_retain();
  v16 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  return a1;
}

uint64_t assignWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release(v6);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10009D328(v7, v8);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_10016F41C(v10, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  swift_retain();
  swift_release(v16);
  v17 = *(_QWORD *)(a2 + 128);
  v18 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v17;
  swift_retain();
  swift_release(v18);
  if (a1 != a2)
  {
    v19 = *(int *)(a3 + 32);
    v20 = (_QWORD *)(a1 + v19);
    v21 = (_QWORD *)(a2 + v19);
    sub_100021AA4(a1 + v19, &qword_100BC2908);
    v22 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v21) == 1)
    {
      v23 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      v24 = 1;
    }
    else
    {
      *v20 = *v21;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v24);
  }
  return a1;
}

_OWORD *initializeWithTake for TipView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
  memcpy(a1 + 2, a2 + 2, 0x48uLL);
  *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v8) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v6);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v7;
  sub_10016F41C(v8, v9);
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release(v13);
  v14 = *(_QWORD *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release(v14);
  if (a1 != a2)
  {
    v15 = *(int *)(a3 + 32);
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_100021AA4(a1 + v15, &qword_100BC2908);
    v18 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v17) == 1)
    {
      v19 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

void sub_1003A6F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 64));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BC3800);
    sub_1000B250C(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

void sub_1003A6FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 64) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC3800);
    sub_1000987C4(a1 + *(int *)(a4 + 32), a2, a2, v7);
  }
}

void sub_1003A7000()
{
  sub_100345634((uint64_t)&unk_100BDD2A8);
}

unint64_t sub_1003A7034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD2B0;
  if (!qword_100BDD2B0)
  {
    v1 = sub_100075EB0(&qword_100BDD1E0);
    sub_1003A70C0((uint64_t)&unk_100BDD2B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD2B0);
  }
  return result;
}

void sub_1003A70C0(uint64_t a1)
{
  unint64_t *v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t *v4;

  if (!sub_10009987C(a1))
  {
    sub_1000AE8E8(0, v4);
    v3();
    v2();
    atomic_store(sub_100098C44((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>), v1);
  }
  sub_100099960();
}

unint64_t sub_1003A710C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BDD2C0;
  if (!qword_100BDD2C0)
  {
    v1 = sub_100075EB0(&qword_100BDD1D0);
    v2[0] = sub_100075EB0(&qword_100BDD1C0);
    v2[1] = sub_1003A673C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10007A100((uint64_t)&qword_100BC4E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD2C0);
  }
  return result;
}

_QWORD *sub_1003A71B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
  }
  swift_retain();
  return a1;
}

double sub_1003A72A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  double result;

  sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    v4 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release(*a1);
  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1003A7314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

_QWORD *sub_1003A73D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BD4338);
    v6 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  v15 = v12[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release(v15);
  return a1;
}

char *sub_1003A74BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  return a1;
}

char *sub_1003A756C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BD4338);
    v6 = sub_1000BA294(&qword_100BD4338);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  v9 = *(_QWORD *)&a1[v8 + 8];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  swift_release(v9);
  return a1;
}

uint64_t sub_1003A7640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A764C);
}

void sub_1003A764C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1000BA294(&qword_100BD4348);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1000B250C(a1, a2, v6);
  }
  else
  {
    sub_10003BCA4(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
    sub_100079F70();
  }
}

uint64_t sub_1003A76AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A76B8);
}

void sub_1003A76B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000BA294(&qword_100BD4348);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1000987C4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    sub_100079F70();
  }
}

uint64_t type metadata accessor for DismissButton(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDD320, (uint64_t)&nominal type descriptor for DismissButton);
}

void sub_1003A7734(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100158B48(319, (unint64_t *)&unk_100BD43B8, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100999A98;
    v4[2] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

uint64_t sub_1003A77C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2C58, 1);
}

void sub_1003A77D4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003A6394(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003A77DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_100BDD380;
  if (!qword_100BDD380)
  {
    v1 = sub_100075EB0(&qword_100BDD388);
    v2[0] = &type metadata for Image;
    v2[1] = &protocol witness table for Image;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10007AB60((uint64_t)&qword_100BC3AE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD380);
  }
  return result;
}

uint64_t sub_1003A7884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A78C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003A7904()
{
  sub_100345634((uint64_t)&unk_100BDD3E8);
}

void sub_1003A7928()
{
  sub_100345634((uint64_t)&unk_100BDD3F0);
}

unint64_t sub_1003A794C()
{
  unint64_t result;

  result = qword_100BDD3F8;
  if (!qword_100BDD3F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_100BDD3F8);
  }
  return result;
}

void sub_1003A7988(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003A5FAC(*(_QWORD *)(v1 + 16), a1);
}

void sub_1003A7990()
{
  EnvironmentValues.colorScheme.getter();
  sub_10004A298();
}

void sub_1003A79AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003A4300(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (void (*)(char *))&EnvironmentValues.colorScheme.setter);
}

unint64_t sub_1003A79D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  result = qword_100BDD498;
  if (!qword_100BDD498)
  {
    v1 = sub_100075EB0(&qword_100BDD398);
    v2 = sub_100075EB0(&qword_100BDD360);
    v3 = type metadata accessor for PlainButtonStyle(255);
    sub_10007AB60((uint64_t)&unk_100BDD390);
    v5 = v4;
    sub_10007A100((uint64_t)&qword_100BD0908);
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v5;
    v7[3] = v6;
    swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD498);
  }
  return result;
}

uint64_t sub_1003A7AC4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116[2];
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v123 = a2;
  sub_1000BA294(&qword_100BC68A0);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v6 = sub_1000987B4(v5);
  type metadata accessor for MonthlyAveragesChartModel(v6);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v9 = sub_1000987B4(v8);
  v10 = type metadata accessor for LocationDetailsKind(v9);
  sub_1000B43A4(v10, (uint64_t)&v154);
  v137 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v14 = sub_1000987B4(v13);
  v15 = type metadata accessor for LocationDetailEntity(v14);
  sub_1000B43A4(v15, (uint64_t)&v165);
  v139 = v16;
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v18);
  sub_100079F7C();
  v161 = v19;
  v160 = type metadata accessor for LocationEntity(0);
  v158 = *(_QWORD *)(v160 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v21);
  sub_100079F7C();
  v157 = v22;
  v23 = type metadata accessor for Calendar.Identifier(0);
  sub_1000B43A4(v23, (uint64_t)&v164);
  v132 = v24;
  sub_10009D98C();
  __chkstk_darwin(v25);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v26);
  sub_100079F7C();
  v28 = sub_1000987B4(v27);
  v29 = type metadata accessor for ConditionDetailPlatterViewModel(v28);
  sub_1000B43A4(v29, (uint64_t)&v148);
  sub_10009D98C();
  __chkstk_darwin(v30);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v31);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v32);
  sub_1000860D0();
  v163 = v33;
  sub_10009D2A4();
  __chkstk_darwin(v34);
  sub_100079F7C();
  v162 = v35;
  sub_1000BA294(&qword_100BCCC50);
  sub_10009D98C();
  __chkstk_darwin(v36);
  sub_100088FDC();
  v147 = v37;
  v144 = type metadata accessor for TimeZone(0);
  v128 = *(_QWORD *)(v144 - 8);
  sub_10009D98C();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v40 = sub_1000987B4(v39);
  v41 = type metadata accessor for Date(v40);
  v152 = *(_QWORD *)(v41 - 8);
  v153 = v41;
  sub_10009D98C();
  __chkstk_darwin(v42);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v43);
  sub_100079F7C();
  v142 = v44;
  v45 = sub_1000BA294(&qword_100BDD4A0);
  v46 = *(_QWORD *)(v45 - 8);
  v145 = v45;
  v146 = v46;
  sub_10009D98C();
  __chkstk_darwin(v47);
  v49 = (char *)v116 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for ArticlePlacementLocation(0);
  v143 = *(_QWORD *)(v159 - 8);
  sub_10009D98C();
  __chkstk_darwin(v50);
  v52 = (char *)v116 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BDAC90);
  sub_10009D98C();
  __chkstk_darwin(v53);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v54);
  v56 = (uint64_t *)((char *)v116 - v55);
  sub_1000BA294(&qword_100BC68B8);
  sub_10009D98C();
  __chkstk_darwin(v57);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v58);
  sub_1000860D0();
  v151 = v59;
  sub_10009D2A4();
  __chkstk_darwin(v60);
  sub_1000860D0();
  v148 = v61;
  sub_10009D2A4();
  __chkstk_darwin(v62);
  v64 = (char *)v116 - v63;
  type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_10009D98C();
  __chkstk_darwin(v65);
  sub_1000986FC();
  v150 = v66;
  sub_10009D2A4();
  __chkstk_darwin(v67);
  v69 = (char *)v116 - v68;
  sub_1000DB418(v2 + 5, v2[8]);
  sub_1009382A8(a1, (uint64_t)v69);
  v70 = type metadata accessor for TemperatureAveragesDetailInput(0);
  v71 = (char *)a1 + *(int *)(v70 + 36);
  v117 = (char *)a1 + *(int *)(v70 + 40);
  v72 = Date.formattedMonthAndDay(timeZone:)(v71);
  v154 = v69;
  v155 = v64;
  v73 = v144;
  v125 = v72;
  v126 = v74;
  sub_1003A8430((uint64_t)a1, (uint64_t)v69, (uint64_t)v2, v72, v74, (uint64_t)v64);
  v135 = v2;
  sub_1000DB418(v2 + 20, v2[23]);
  v149 = v70;
  v75 = v143;
  v76 = v159;
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v52, enum case for ArticlePlacementLocation.temperatureAveragesDetail(_:), v159);
  v156 = v56;
  sub_100500070((uint64_t)v52, v56);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v52, v76);
  type metadata accessor for TemperatureAveragesHeroChartInput(0);
  v159 = (uint64_t)a1;
  v77 = sub_1000BA294(&qword_100BCB238);
  Trend.baseline.getter(v77);
  v78 = v145;
  TrendBaseline.startDate.getter(v145);
  v79 = v147;
  v80.n128_f64[0] = (*(double (**)(char *, uint64_t))(v146 + 8))(v49, v78);
  TimeZone.init(secondsFromGMT:)(0, v80);
  result = _s7Weather24LocationCompositionStateOwet_0(v79, 1, v73);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v82 = v128;
    v83 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v127, v79, v73);
    v84 = Date.formattedYear(timeZone:)(v83);
    v147 = v84;
    v86 = v85;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v73);
    sub_1000C51C8(v152);
    v87 = v125;
    v88 = v126;
    v89 = v135;
    v90 = sub_1003A8968(v125, v126, v84, v86, v162);
    v91 = v159;
    v92 = v129;
    Calendar.identifier.getter(v90);
    v93 = v132;
    v94 = v131;
    v95 = v133;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v132 + 104))(v131, enum case for Calendar.Identifier.gregorian(_:), v133);
    LOBYTE(v84) = static Calendar.Identifier.== infix(_:_:)(v92, v94);
    v96 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v96(v94, v95);
    v97 = v92;
    v98 = v149;
    v96(v97, v95);
    v99 = (v84 & 1) == 0;
    v100 = v89;
    sub_1003A8DB8(v87, v88, v147, v86, v99, v163);
    swift_bridgeObjectRelease(v86);
    swift_bridgeObjectRelease(v88);
    v101 = *(_QWORD *)(v91 + *(int *)(v98 + 24));
    if (v101)
    {
      sub_1000DB418(v89, v89[3]);
      sub_1007C7128(v101, v148);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(v148, 1, 1, v116[1]);
    }
    v102 = v124;
    v103 = v122;
    v104 = v121;
    v105 = v120;
    v106 = v119;
    v107 = v118;
    v108 = v117;
    v109 = v157;
    static LocationEntity.makeFromLocation(_:name:)(v123, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16))(v105, v109, v160);
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 16))(v106, v108, v153);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v137 + 104))(v104, enum case for LocationDetailsKind.averages(_:), v103);
    LocationDetailEntity.init(location:date:kind:)(v105, v106, v104);
    sub_10000AB54((uint64_t)v154, v150, type metadata accessor for TemperatureAveragesHeroChartViewModel);
    sub_10003773C((uint64_t)v155, v151, &qword_100BC68B8);
    sub_1000DB418(v100 + 15, v100[18]);
    sub_1001A88D0((_QWORD *)(v159 + *(int *)(v98 + 20)), v102);
    sub_10003773C((uint64_t)v156, v107, &qword_100BDAC90);
    sub_10035D148(v107, v141);
    sub_10000AB54(v162, v134, type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10000AB54(v163, v136, type metadata accessor for ConditionDetailPlatterViewModel);
    v110 = v148;
    sub_10003773C(v148, v130, &qword_100BC68B8);
    v111 = v139;
    v112 = v161;
    v113 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v138, v161, v140);
    sub_1001F35B0();
    v115 = v114;
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v112, v113);
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v160);
    sub_1000FF448(v110, &qword_100BC68B8);
    sub_10006BD5C(v163, type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10006BD5C(v162, type metadata accessor for ConditionDetailPlatterViewModel);
    sub_1000FF448((uint64_t)v156, &qword_100BDAC90);
    sub_1000FF448((uint64_t)v155, &qword_100BC68B8);
    sub_10006BD5C((uint64_t)v154, type metadata accessor for TemperatureAveragesHeroChartViewModel);
    return v115;
  }
  return result;
}

uint64_t sub_1003A8430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  _QWORD v60[2];
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;

  v63 = a4;
  v64 = a5;
  v62 = a3;
  v60[1] = a2;
  v8 = type metadata accessor for WeatherDescription(0);
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  __chkstk_darwin(v8);
  v68 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC4E68);
  v66 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  v11 = __chkstk_darwin(v10);
  v65 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (char *)v60 - v13;
  v14 = type metadata accessor for ConditionUnits(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100BCB248);
  __chkstk_darwin(v18);
  v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BCB238);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for TemperatureAveragesDetailInput(0);
  sub_10003773C(a1 + *(int *)(v25 + 32), (uint64_t)v20, &qword_100BCB248);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_1000FF448((uint64_t)v20, &qword_100BCB248);
    if (qword_100BC2470 != -1)
      swift_once(&qword_100BC2470, sub_1006F38C8);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_1000AECD4(v26, (uint64_t)qword_100CAF138);
    v28 = Logger.logObject.getter(v27);
    v30 = static os_log_type_t.error.getter(v28, v29);
    if (os_log_type_enabled(v28, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v30, "Missing trend, for creating platter view summary.", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    v33 = a6;
    v34 = 1;
  }
  else
  {
    v60[0] = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    v35 = type metadata accessor for UnitManager(0);
    v36 = static UnitManager.standard.getter(v35);
    v37 = type metadata accessor for TemperatureAveragesHeroChartInput(0);
    UnitManager.conditionUnits(locale:)(a1 + *(int *)(v37 + 24));
    swift_release(v36);
    v39 = (void *)ConditionUnits.temperature.getter(v38);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
    v40 = sub_100113B0C();
    v41 = v39;
    v42 = (uint64_t)v61;
    Measurement.init(value:unit:)(v41, v40);
    v43 = v41;
    v44 = (uint64_t)v65;
    Measurement.init(value:unit:)(v43, v40);
    sub_1000DB418((_QWORD *)(v62 + 80), *(_QWORD *)(v62 + 104));
    v45 = v68;
    sub_10077B0E0((uint64_t)v24, v42, v44, v63, v64);
    v46 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v71._object = (void *)0x80000001009FD040;
    v47._countAndFlagsBits = 0x7972616D6D7553;
    v47._object = (void *)0xE700000000000000;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v71._countAndFlagsBits = 0xD000000000000023;
    v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v71);

    v50 = v67;
    v51 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v51(v44, v67);
    v51(v42, v50);
    (*(void (**)(char *, uint64_t))(v60[0] + 8))(v24, v21);
    v52 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    v53 = v70;
    _s7Weather24LocationCompositionStateOwst_0(a6 + v52[6], 1, 1, v70);
    v54 = a6 + v52[7];
    v55 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v54, v45, v53);
    v56 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v57 = swift_storeEnumTagMultiPayload(v54, v56, 0);
    v58 = a6 + v52[8];
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v55 + 32))(v58, v45, v53, v57);
    swift_storeEnumTagMultiPayload(v58, v56, 0);
    _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v56);
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    *(_BYTE *)(a6 + 16) = 2;
    *(Swift::String *)(a6 + 24) = v49;
    *(_BYTE *)(a6 + v52[9]) = 0;
    *(_BYTE *)(a6 + v52[10]) = 0;
    v33 = a6;
    v34 = 0;
    v32 = (uint64_t)v52;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v32);
}

uint64_t sub_1003A8968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(void);
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Swift::String v76;
  Swift::String v77;

  v71 = a3;
  v72 = a4;
  v69 = a1;
  v70 = a2;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDD4A8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = objc_msgSend(v13, "mainBundle");
  v76._countAndFlagsBits = 0x100000000000029ELL;
  v76._object = (void *)0x80000001009FCD50;
  v15._object = (void *)0x80000001009FCC10;
  v15._countAndFlagsBits = 0x1000000000000132;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v76);
  object = v17._object;
  countAndFlagsBits = v17._countAndFlagsBits;

  v73 = 0x3FB999999999999ALL;
  static Locale.autoupdatingCurrent.getter(v18);
  v19 = sub_10010D1D0();
  FloatingPointFormatStyle.Percent.init(locale:)(v8, &type metadata for Double, v19);
  v20 = sub_1003A9A1C();
  BinaryFloatingPoint.formatted<A>(_:)(&v74, v12, &type metadata for Double, v9, v19, v20);
  v21 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v22 = v21(v12, v9);
  v65 = v74;
  v66 = v75;
  v73 = 0x3FE999999999999ALL;
  static Locale.autoupdatingCurrent.getter(v22);
  FloatingPointFormatStyle.Percent.init(locale:)(v8, &type metadata for Double, v19);
  BinaryFloatingPoint.formatted<A>(_:)(&v74, v12, &type metadata for Double, v9, v19, v20);
  v21(v12, v9);
  v23 = v74;
  v61 = v75;
  v24 = objc_msgSend(v13, "mainBundle");
  v77._countAndFlagsBits = 0xD00000000000002CLL;
  v77._object = (void *)0x80000001009FD010;
  v25._object = (void *)0x80000001009FCFF0;
  v64 = 0x80000001009FCFF0;
  v25._countAndFlagsBits = 0xD000000000000016;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v77);
  v62 = v27._object;
  v63 = v27._countAndFlagsBits;

  v28 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  v29 = *(int *)(v28 + 24);
  v30 = v28;
  v59 = a5;
  v60 = v28;
  v31 = a5 + v29;
  v32 = type metadata accessor for WeatherDescription(0);
  _s7Weather24LocationCompositionStateOwst_0(v31, 1, 1, v32);
  v58 = a5 + *(int *)(v30 + 28);
  v33 = sub_1000BA294(&qword_100BCE380);
  v34 = type metadata accessor for WeatherDescription.Argument(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(_QWORD *)(v35 + 72);
  v37 = *(unsigned __int8 *)(v35 + 80);
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject(v33, v38 + 5 * v36, v37 | 7);
  *(_OWORD *)(v39 + 16) = xmmword_1009891E0;
  v40 = (_QWORD *)(v39 + v38);
  v41 = v70;
  *v40 = v69;
  v40[1] = v41;
  v42 = *(void (**)(void))(v35 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v42)(v39 + v38, enum case for WeatherDescription.Argument.string(_:), v34);
  v43 = (_QWORD *)(v39 + v38 + v36);
  v44 = v72;
  *v43 = v71;
  v43[1] = v44;
  v42();
  v45 = (_QWORD *)(v39 + v38 + 2 * v36);
  v46 = v61;
  *v45 = v23;
  v45[1] = v46;
  v42();
  v47 = (_QWORD *)(v39 + v38 + 3 * v36);
  v49 = v65;
  v48 = v66;
  *v47 = v65;
  v47[1] = v48;
  v42();
  v50 = (_QWORD *)(v39 + v38 + 4 * v36);
  *v50 = v49;
  v50[1] = v48;
  v42();
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v44);
  v51 = swift_bridgeObjectRetain(v48);
  v52 = v58;
  WeatherDescription.init(format:_:)(countAndFlagsBits, object, v39, v51);
  v53 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload(v52, v53, 0);
  v55 = v59;
  v54 = v60;
  result = _s7Weather24LocationCompositionStateOwst_0(v59 + *(int *)(v60 + 32), 1, 1, v53);
  *(_QWORD *)v55 = 0xD000000000000016;
  *(_QWORD *)(v55 + 8) = v64;
  *(_BYTE *)(v55 + 16) = 0;
  v57 = v62;
  *(_QWORD *)(v55 + 24) = v63;
  *(_QWORD *)(v55 + 32) = v57;
  *(_BYTE *)(v55 + *(int *)(v54 + 36)) = 0;
  *(_BYTE *)(v55 + *(int *)(v54 + 40)) = 0;
  return result;
}

void sub_1003A8DB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  id v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  void (*v81)(void);
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  unint64_t v110;
  void *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  void (*v117)(char *, char *, uint64_t);
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  void *object;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t countAndFlagsBits;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  Swift::String v141;

  v135 = a3;
  v136 = a4;
  v134 = a2;
  v132 = a1;
  v128 = a6;
  v126 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  __chkstk_darwin(v126);
  v127 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC3368);
  __chkstk_darwin(v8);
  v137 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BDCCB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for DateComponents(0);
  v130 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v16 = __chkstk_darwin(v15);
  v129 = (uint64_t)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v133 = (uint64_t)&v112 - v19;
  v20 = __chkstk_darwin(v18);
  countAndFlagsBits = (uint64_t)&v112 - v21;
  v22 = __chkstk_darwin(v20);
  v139 = (uint64_t)&v112 - v23;
  __chkstk_darwin(v22);
  v140 = (uint64_t)&v112 - v24;
  v25 = sub_1000BA294(&qword_100BCCC50);
  v26 = __chkstk_darwin(v25);
  v115 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v116 = (char *)&v112 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v112 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)&v112 - v33;
  v35 = type metadata accessor for TimeZone(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v113 = (char *)&v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v114 = (char *)&v112 - v40;
  __chkstk_darwin(v39);
  v42 = (char *)&v112 - v41;
  v43 = type metadata accessor for Calendar(0);
  v125 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v45 = (char *)&v112 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1003A98D0(a5);
  v123 = v47;
  v124 = v46;
  TimeZone.init(secondsFromGMT:)(0, v48);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35) == 1)
  {
    __break(1u);
    goto LABEL_20;
  }
  v117 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v117(v42, v34, v35);
  static Calendar.gregorianCalendar(with:)(v42);
  v118 = *(void (**)(char *, uint64_t))(v36 + 8);
  v118(v42, v35);
  v49 = v45;
  v50 = v43;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v12, v32, 0, 1, 0, 1, 1, 0);
  v51 = v140;
  Calendar.date(from:)(v14, v52);
  v53 = *(void (**)(char *, uint64_t))(v130 + 8);
  v54 = v138;
  v53(v14, v138);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v50);
  v130 = v35;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v12, v32, 0, 1, 0, 1, 1, 0);
  v55 = v139;
  v56 = v49;
  Calendar.date(from:)(v14, v57);
  v53(v14, v54);
  v58 = type metadata accessor for Date(0);
  LODWORD(v49) = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v58);
  v59 = countAndFlagsBits;
  sub_10003773C(v55, countAndFlagsBits, (uint64_t *)&unk_100BD35A0);
  v138 = v58;
  v121 = v56;
  v122 = v50;
  if ((_DWORD)v49 == 1 || _s7Weather24LocationCompositionStateOwet_0(v59, 1, v58) == 1)
  {
    sub_1000FF448(v59, (uint64_t *)&unk_100BD35A0);
    v60 = v133;
    if (qword_100BC2478 != -1)
      swift_once(&qword_100BC2478, sub_1006F38E8);
    v61 = type metadata accessor for Logger(0);
    v62 = sub_1000AECD4(v61, (uint64_t)qword_100CAF150);
    v63 = Logger.logObject.getter(v62);
    v65 = static os_log_type_t.error.getter(v63, v64);
    if (os_log_type_enabled(v63, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v65, "Could not derive dates for describing average range in platter view summary.", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
    }

  }
  else
  {
    sub_1000FF448(v59, (uint64_t *)&unk_100BD35A0);
    v60 = v133;
  }
  v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v141._countAndFlagsBits = 0xD000000000000033;
  v141._object = (void *)0x80000001009FC570;
  v133 = (uint64_t)"iner encompassing a tip view";
  v68._object = (void *)0x80000001009FC550;
  v68._countAndFlagsBits = 0xD00000000000001ALL;
  v69._countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)v67, v69, v141);
  countAndFlagsBits = v70._countAndFlagsBits;
  object = v70._object;

  v71 = type metadata accessor for WeatherDescription(0);
  _s7Weather24LocationCompositionStateOwst_0(v137, 1, 1, v71);
  v72 = sub_1000BA294(&qword_100BCE380);
  v73 = type metadata accessor for WeatherDescription.Argument(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(_QWORD *)(v74 + 72);
  v76 = *(unsigned __int8 *)(v74 + 80);
  v77 = (v76 + 32) & ~v76;
  v78 = swift_allocObject(v72, v77 + 6 * v75, v76 | 7);
  *(_OWORD *)(v78 + 16) = xmmword_10098C1A0;
  v119 = v78;
  v79 = (_QWORD *)(v78 + v77);
  v80 = v134;
  *v79 = v132;
  v79[1] = v80;
  v81 = *(void (**)(void))(v74 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v81)(v78 + v77, enum case for WeatherDescription.Argument.string(_:), v73);
  v82 = (_QWORD *)((char *)v79 + v75);
  v83 = v135;
  v84 = v136;
  *v82 = v135;
  v82[1] = v84;
  v81();
  v85 = (_QWORD *)((char *)v79 + 2 * v75);
  *v85 = v83;
  v85[1] = v84;
  v81();
  sub_10003773C(v140, v60, (uint64_t *)&unk_100BD35A0);
  LODWORD(v83) = _s7Weather24LocationCompositionStateOwet_0(v60, 1, v138);
  swift_bridgeObjectRetain_n(v84, 2);
  v86 = swift_bridgeObjectRetain(v80);
  v87 = v130;
  if ((_DWORD)v83 != 1)
  {
    v91 = (uint64_t)v116;
    TimeZone.init(secondsFromGMT:)(0, v86);
    if (_s7Weather24LocationCompositionStateOwet_0(v91, 1, v87) != 1)
    {
      v92 = v114;
      v117(v114, (char *)v91, v87);
      v88 = Date.formattedMonthAndDay(timeZone:)(v92);
      v89 = v93;
      v118(v92, v87);
      v90 = v138;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v60, v138);
      goto LABEL_14;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1000FF448(v60, (uint64_t *)&unk_100BD35A0);
  v88 = 0;
  v89 = 0xE000000000000000;
  v90 = v138;
LABEL_14:
  v94 = (_QWORD *)((char *)v79 + 3 * v75);
  *v94 = v88;
  v94[1] = v89;
  v81();
  v95 = v129;
  sub_10003773C(v139, v129, (uint64_t *)&unk_100BD35A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v95, 1, v90) == 1)
  {
    sub_1000FF448(v95, (uint64_t *)&unk_100BD35A0);
    v97 = 0;
    v98 = 0xE000000000000000;
LABEL_18:
    v102 = (_QWORD *)((char *)v79 + 4 * v75);
    *v102 = v97;
    v102[1] = v98;
    v81();
    v103 = (_QWORD *)((char *)v79 + 5 * v75);
    v104 = v136;
    *v103 = v135;
    v103[1] = v104;
    v81();
    v105 = swift_bridgeObjectRetain(v104);
    v106 = (uint64_t)v127;
    WeatherDescription.init(format:_:)(v124, v123, v119, v105);
    sub_1000FF448(v139, (uint64_t *)&unk_100BD35A0);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v122);
    v107 = v126;
    swift_storeEnumTagMultiPayload(v106, v126, 0);
    v108 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    v109 = v128;
    _s7Weather24LocationCompositionStateOwst_0(v128 + v108[8], 1, 1, v107);
    v110 = v133 | 0x8000000000000000;
    *(_QWORD *)v109 = 0xD00000000000001ALL;
    *(_QWORD *)(v109 + 8) = v110;
    *(_BYTE *)(v109 + 16) = 0;
    v111 = object;
    *(_QWORD *)(v109 + 24) = countAndFlagsBits;
    *(_QWORD *)(v109 + 32) = v111;
    sub_1000F6C3C(v137, v109 + v108[6]);
    sub_1003A99D8(v106, v109 + v108[7]);
    *(_BYTE *)(v109 + v108[9]) = 0;
    *(_BYTE *)(v109 + v108[10]) = 0;
    sub_1000FF448(v140, (uint64_t *)&unk_100BD35A0);
    return;
  }
  v99 = (uint64_t)v115;
  TimeZone.init(secondsFromGMT:)(0, v96);
  if (_s7Weather24LocationCompositionStateOwet_0(v99, 1, v87) != 1)
  {
    v100 = v113;
    v117(v113, (char *)v99, v87);
    v97 = Date.formattedMonthAndDay(timeZone:)(v100);
    v98 = v101;
    v118(v100, v87);
    (*(void (**)(uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v95);
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_1003A98D0(char a1)
{
  objc_class *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v11;

  v2 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((a1 & 1) != 0)
  {
    v3 = 0x1000000000000241;
    v4 = 0xD0000000000000FALL;
    v11 = 0x80000001009FC9C0;
    v5 = 0x80000001009FC8C0;
    v6.super.isa = v2;
    v7 = 0;
    v8 = 0xE000000000000000;
  }
  else
  {
    v11 = 0x80000001009FC690;
    v5 = 0x80000001009FC5B0;
    v4 = 0xD0000000000000DCLL;
    v6.super.isa = v2;
    v7 = 0;
    v8 = 0xE000000000000000;
    v3 = 0x1000000000000223;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1003A99D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003A9A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD4B0;
  if (!qword_100BDD4B0)
  {
    v1 = sub_100075EB0(&qword_100BDD4A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for FloatingPointFormatStyle<A>.Percent, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD4B0);
  }
  return result;
}

uint64_t destroy for TemperatureAveragesDetailViewModelFactory(_QWORD *a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 15);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 20);
}

_OWORD *initializeWithCopy for TemperatureAveragesDetailViewModelFactory(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

_QWORD *assignWithCopy for TemperatureAveragesDetailViewModelFactory(_QWORD *a1, _QWORD *a2)
{
  sub_100094D04(a1, a2);
  sub_100094D04(a1 + 5, a2 + 5);
  sub_100094D04(a1 + 10, a2 + 10);
  sub_100094D04(a1 + 15, a2 + 15);
  sub_100094D04(a1 + 20, a2 + 20);
  return a1;
}

void *initializeWithTake for TemperatureAveragesDetailViewModelFactory(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for TemperatureAveragesDetailViewModelFactory(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemperatureAveragesDetailViewModelFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureAveragesDetailViewModelFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureAveragesDetailViewModelFactory()
{
  return &type metadata for TemperatureAveragesDetailViewModelFactory;
}

char *sub_1003A9D20(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for PrecipitationAmount(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
  }
  swift_retain(v16);
  return v4;
}

uint64_t sub_1003A9DF4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for PrecipitationAmount(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

char *sub_1003A9E70(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for PrecipitationAmount(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_retain(v15);
  return a1;
}

char *sub_1003A9F1C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for PrecipitationAmount(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(&a1[a3[6]], &a2[a3[6]], v11);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  v17 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

char *sub_1003A9FE4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for PrecipitationAmount(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1003AA07C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a1 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for PrecipitationAmount(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[a3[6]], &a2[a3[6]], v11);
  v13 = a3[7];
  v14 = *(_QWORD *)&a1[v13 + 8];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  swift_release(v14);
  return a1;
}

uint64_t sub_1003AA128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003AA134);
}

void sub_1003AA134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_10003BCA4(*(_QWORD *)(a1 + 8));
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000C28E0();
    sub_1000B250C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1003AA188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AA194);
}

void sub_1003AA194(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100079F70();
  }
  else
  {
    v7 = sub_1000C28E0();
    sub_1000987C4(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata accessor for PrecipitationAmountsEditorRowView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDD510, (uint64_t)&nominal type descriptor for PrecipitationAmountsEditorRowView);
}

uint64_t sub_1003AA200(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v4 = &unk_100999BC8;
  result = type metadata accessor for PrecipitationAmount(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003AA284(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2D0C, 1);
}

uint64_t sub_1003AA294()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  _QWORD v19[2];

  v1 = v0;
  v2 = type metadata accessor for PrecipitationAmount(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - v7;
  v9 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v10(v8, (char *)v1 + *(int *)(v9 + 20), v2);
  v10(v5, (char *)v1 + *(int *)(v9 + 24), v2);
  sub_10000F1C8(&qword_100BDD558, (uint64_t (*)(uint64_t))&type metadata accessor for PrecipitationAmount);
  v12 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v5, v2, v11);
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v5, v2);
  v13(v8, v2);
  if ((v12 & 1) != 0)
  {
    v14 = *v1;
    swift_bridgeObjectRetain(v1[1]);
  }
  else
  {
    v19[0] = 42;
    v19[1] = 0xE100000000000000;
    v16 = *v1;
    v15 = (void *)v1[1];
    swift_bridgeObjectRetain(v15);
    v17._countAndFlagsBits = v16;
    v17._object = v15;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    return v19[0];
  }
  return v14;
}

void sub_1003AA400(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  _QWORD *v34;

  v32 = a1;
  v2 = sub_1000C28E0();
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v31 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  v10 = (int *)sub_1000B48D0();
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = (_QWORD *)(v13 - v12);
  v15 = v1[1];
  v27 = *v1;
  v16 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  sub_1000C5460((uint64_t)v9, (uint64_t)v1 + *(int *)(v16 + 24));
  v17 = (_QWORD *)((char *)v1 + *(int *)(v16 + 28));
  v19 = *v17;
  v18 = v17[1];
  v30 = v19;
  v28 = v18;
  *v14 = swift_getKeyPath(&unk_100999C30);
  v20 = sub_1000BA294(&qword_100BC4F28);
  swift_storeEnumTagMultiPayload(v14, v20, 0);
  v21 = (_QWORD *)((char *)v14 + v10[5]);
  *v21 = v27;
  v21[1] = v15;
  sub_1000C5460((uint64_t)v14 + v10[6], (uint64_t)v9);
  sub_1000C5460((uint64_t)v6, (uint64_t)v9);
  v22 = v31;
  sub_1000C5460(v31, (uint64_t)v6);
  swift_bridgeObjectRetain(v15);
  v23 = v28;
  swift_retain();
  State.init(wrappedValue:)(v22, v2);
  v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v6, v2);
  v24(v9, v2);
  v25 = (_QWORD *)((char *)v14 + v10[7]);
  *v25 = v30;
  v25[1] = v23;
  v34 = v1;
  sub_10000F1C8(&qword_100BDD550, type metadata accessor for PrecipitationAmountsEditorView);
  NavigationLink.init(destination:label:)(v14, sub_1003AB840, v33, &type metadata for Text, v10, &protocol witness table for Text, v26);
  sub_100098640();
}

uint64_t sub_1003AA61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD v8[2];

  v8[0] = sub_1003AA294();
  v8[1] = v2;
  v3 = sub_100114EF8();
  result = Text.init<A>(_:)(v8, &type metadata for String, v3);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t type metadata accessor for PrecipitationAmountsEditorView(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BDD5C0, (uint64_t)&nominal type descriptor for PrecipitationAmountsEditorView);
}

void sub_1003AA68C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[16];
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  _QWORD v77[3];

  v70 = a1;
  v61 = sub_1000B48D0();
  v3 = *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64);
  v66 = *(_QWORD *)(v61 - 8);
  v67 = v3;
  __chkstk_darwin(v61);
  v64 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC4FA0);
  v6 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  v69 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100098728();
  v65 = v9 - v8;
  v10 = type metadata accessor for InsetGroupedListStyle(0);
  v59 = *(_QWORD *)(v10 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_10004A2E8();
  v12 = sub_1000BA294(&qword_100BDD620);
  v58 = *(_QWORD *)(v12 - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  v17 = sub_1000BA294(&qword_100BDD628);
  v60 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  v22 = sub_1000BA294(&qword_100BDD630);
  v23 = *(_QWORD *)(v22 - 8);
  v62 = v22;
  v63 = v23;
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_100098728();
  v57 = v26 - v25;
  v72 = v1;
  v27 = sub_1000BA294(&qword_100BDD638);
  sub_10003D2DC(&qword_100BDD640, &qword_100BDD638);
  v29 = List<>.init(content:)(sub_1003AC380, v71, v27, v28);
  InsetGroupedListStyle.init()(v29);
  sub_10003D2DC(&qword_100BDD648, &qword_100BDD620);
  v31 = v30;
  View.listStyle<A>(_:)(v2, v12, v10, v30, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v2, v10);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v16, v12);
  v32 = v56;
  v33 = (uint64_t *)(v56 + *(int *)(v61 + 20));
  v35 = *v33;
  v34 = v33[1];
  v77[0] = v35;
  v77[1] = v34;
  v73 = v12;
  v74 = (_QWORD *)v10;
  v75 = v31;
  v76 = &protocol witness table for InsetGroupedListStyle;
  v36 = sub_10009885C((uint64_t)&v73, (uint64_t)&opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>);
  v37 = sub_100114EF8();
  View.navigationTitle<A>(_:)(v77, v17, &type metadata for String, v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v21, v17);
  v38 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = v64;
  sub_1003AC388(v32, v64);
  v46 = *(unsigned __int8 *)(v66 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_100B70A98, v47 + v67, v46 | 7);
  sub_1003AC3D0(v45, v48 + v47);
  v49 = v65;
  Button<>.init(_:action:)(v38, v40, v42 & 1, v44, sub_1003AC414, v48);
  v73 = v17;
  v74 = &type metadata for String;
  v75 = v36;
  v76 = (void *)v37;
  v50 = sub_10009885C((uint64_t)&v73, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>);
  sub_10003D2DC(&qword_100BC4FC0, &qword_100BC4FA0);
  v51 = v62;
  v52 = v68;
  v53 = v57;
  View.navigationBarItems<A>(trailing:)(v49, v62, v68, v50, v54);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v49, v52);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v53, v51);
  sub_100098640();
}

void sub_1003AAA68(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  char *v28;
  uint64_t v29;

  v2 = sub_1000BA294(&qword_100BDD650);
  __chkstk_darwin(v2);
  v29 = (uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v28 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v28 - v23;
  sub_1003AACE0((uint64_t)&v28 - v23);
  sub_1003AAEF0((uint64_t)v21);
  sub_1003AB104((uint64_t)v18);
  sub_1003AB31C((uint64_t)v15);
  v25 = (uint64_t)v12;
  v28 = v12;
  sub_10007EBC8((uint64_t)v24, (uint64_t)v12, &qword_100BDD650);
  sub_10007EBC8((uint64_t)v21, (uint64_t)v9, &qword_100BDD650);
  sub_10007EBC8((uint64_t)v18, (uint64_t)v6, &qword_100BDD650);
  v26 = v29;
  sub_10007EBC8((uint64_t)v15, v29, &qword_100BDD650);
  sub_10007EBC8(v25, a1, &qword_100BDD650);
  v27 = (int *)sub_1000BA294(&qword_100BDD658);
  sub_10007EBC8((uint64_t)v9, a1 + v27[12], &qword_100BDD650);
  sub_10007EBC8((uint64_t)v6, a1 + v27[16], &qword_100BDD650);
  sub_10007EBC8(v26, a1 + v27[20], &qword_100BDD650);
  sub_100021AA4((uint64_t)v15, &qword_100BDD650);
  sub_100021AA4((uint64_t)v18, &qword_100BDD650);
  sub_100021AA4((uint64_t)v21, &qword_100BDD650);
  sub_100021AA4((uint64_t)v24, &qword_100BDD650);
  sub_100021AA4(v26, &qword_100BDD650);
  sub_100021AA4((uint64_t)v6, &qword_100BDD650);
  sub_100021AA4((uint64_t)v9, &qword_100BDD650);
  sub_100021AA4((uint64_t)v28, &qword_100BDD650);
}

void sub_1003AACE0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PrecipitationAmount(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  PrecipitationAmount.pastHour.getter(v12);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BDD560);
  State.wrappedValue.getter(v7, v16);
  PrecipitationAmount.pastHour.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_1003AC388(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B70B38, v20 + v3, v19 | 7);
  sub_1003AC3D0(v18, v21 + v20);
  sub_1007AC170();
}

void sub_1003AAEF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PrecipitationAmount(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  PrecipitationAmount.pastSixHours.getter(v12);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BDD560);
  State.wrappedValue.getter(v7, v16);
  PrecipitationAmount.pastSixHours.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_1003AC388(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B70B10, v20 + v3, v19 | 7);
  sub_1003AC3D0(v18, v21 + v20);
  sub_1007AC170();
}

void sub_1003AB104(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PrecipitationAmount(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  PrecipitationAmount.pastTwentyFourHours.getter(v12);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BDD560);
  State.wrappedValue.getter(v7, v16);
  PrecipitationAmount.pastTwentyFourHours.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_1003AC388(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B70AE8, v20 + v3, v19 | 7);
  sub_1003AC3D0(v18, v21 + v20);
  sub_1007AC170();
}

void sub_1003AB31C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  v24 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PrecipitationAmount(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1000BA294(&qword_100BDD660);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  PrecipitationAmount.nextTwentyFourHours.getter(v12);
  v15 = sub_1000BA294(&qword_100BCB0A8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  v16 = sub_1000BA294(&qword_100BDD560);
  State.wrappedValue.getter(v7, v16);
  PrecipitationAmount.nextTwentyFourHours.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v15);
  v18 = v23;
  sub_1003AC388(v1, v23);
  v19 = *(unsigned __int8 *)(v24 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100B70AC0, v20 + v3, v19 | 7);
  sub_1003AC3D0(v18, v21 + v20);
  sub_1007AC170();
}

void sub_1003AB534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;

  v2 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC6510);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PrecipitationAmount(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void (**)(_QWORD *))(a1
                                        + *(int *)(type metadata accessor for PrecipitationAmountsEditorView(0) + 28));
  v13 = sub_1000BA294(&qword_100BDD560);
  State.wrappedValue.getter(v11, v13);
  v12(v11);
  v14.n128_f64[0] = (*(double (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  sub_1007A5A6C(v14);
  Binding.wrappedValue.getter(v5);
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter(v4, v5);
  sub_100021AA4((uint64_t)v7, &qword_100BC6510);
}

void sub_1003AB6A8(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000C28E0();
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = (_QWORD *)(v8 - v7);
  sub_1000BA294(&qword_100BDD660);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_10004A2E8();
  v11 = sub_1000BA294(&qword_100BCB0A8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v19 - v16;
  sub_10007EBC8(a1, v3, &qword_100BDD660);
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v11) == 1)
  {
    sub_100021AA4(v3, &qword_100BDD660);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v17, v3, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    sub_1000B48D0();
    v18 = sub_1000BA294(&qword_100BDD560);
    State.wrappedValue.getter(v9, v18);
    a3(v14);
    State.wrappedValue.setter(v9, v18);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100098640();
}

uint64_t sub_1003AB840@<X0>(uint64_t a1@<X8>)
{
  return sub_1003AA61C(a1);
}

uint64_t *sub_1003AB848(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v9 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = 1;
    }
    else
    {
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v7, v13);
    v15 = a3[5];
    v16 = a3[6];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (char *)a1 + v16;
    v21 = (char *)a2 + v16;
    v22 = type metadata accessor for PrecipitationAmount(0);
    v23 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 16);
    v24 = swift_bridgeObjectRetain(v19);
    v23(v20, v21, v22, v24);
    v25 = a3[7];
    v26 = a3[8];
    v27 = (uint64_t *)((char *)a1 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    v32 = swift_retain();
    v23(v30, v31, v22, v32);
    v33 = sub_1000BA294(&qword_100BDD560);
    *(_QWORD *)&v30[*(int *)(v33 + 28)] = *(_QWORD *)&v31[*(int *)(v33 + 28)];
  }
  swift_retain();
  return a1;
}

double sub_1003AB9DC(_QWORD *a1, int *a2)
{
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  __n128 v10;
  char *v11;
  uint64_t v12;
  double result;

  sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  swift_release(*a1);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(a1[1]);
    v5 = (char *)a1 + *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v6 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  v7 = (char *)a1 + a2[6];
  v8 = type metadata accessor for PrecipitationAmount(0);
  v9 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8));
  v11 = (char *)a1 + a2[8];
  ((void (*)(char *, uint64_t, __n128))v9)(v11, v8, v10);
  v12 = *(_QWORD *)&v11[*(int *)(sub_1000BA294(&qword_100BDD560) + 28)];
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

_QWORD *sub_1003ABAE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;

  v6 = sub_1000BA294(&qword_100BC4F28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v12);
  v13 = a3[5];
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (char *)a1 + v14;
  v19 = (char *)a2 + v14;
  v20 = type metadata accessor for PrecipitationAmount(0);
  v21 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v20 - 8) + 16);
  v22 = swift_bridgeObjectRetain(v17);
  v21(v18, v19, v20, v22);
  v23 = a3[7];
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (char *)a1 + v24;
  v29 = (char *)a2 + v24;
  v30 = swift_retain();
  v21(v28, v29, v20, v30);
  v31 = sub_1000BA294(&qword_100BDD560);
  *(_QWORD *)&v28[*(int *)(v31 + 28)] = *(_QWORD *)&v29[*(int *)(v31 + 28)];
  swift_retain();
  return a1;
}

_QWORD *sub_1003ABC4C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, v6, v12);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v16 = v15[1];
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for PrecipitationAmount(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  v26 = v23[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  v27 = swift_release(v26);
  v28 = a3[8];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  ((void (*)(char *, char *, uint64_t, __n128))v21)((char *)a1 + v28, v30, v20, v27);
  v31 = *(int *)(sub_1000BA294(&qword_100BDD560) + 28);
  v32 = *(_QWORD *)&v29[v31];
  *(_QWORD *)&v29[v31] = *(_QWORD *)&v30[v31];
  swift_retain();
  swift_release(v32);
  return a1;
}

_QWORD *sub_1003ABE00(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_1000BA294(&qword_100BC4F28);
  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PrecipitationAmount(0);
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  v20 = sub_1000BA294(&qword_100BDD560);
  *(_QWORD *)&v18[*(int *)(v20 + 28)] = *(_QWORD *)&v19[*(int *)(v20 + 28)];
  return a1;
}

_QWORD *sub_1003ABF40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_100021AA4((uint64_t)a1, &qword_100BC4F28);
    v6 = sub_1000BA294(&qword_100BC4F28);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = *(int *)(sub_1000BA294(&qword_100BC6510) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for PrecipitationAmount(0);
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  v22 = a3[7];
  v23 = *(_QWORD *)((char *)a1 + v22 + 8);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  v24 = swift_release(v23);
  v25 = a3[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  ((void (*)(char *, char *, uint64_t, __n128))v21)((char *)a1 + v25, v27, v20, v24);
  v28 = *(int *)(sub_1000BA294(&qword_100BDD560) + 28);
  v29 = *(_QWORD *)&v26[v28];
  *(_QWORD *)&v26[v28] = *(_QWORD *)&v27[v28];
  swift_release(v29);
  return a1;
}

uint64_t sub_1003AC0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003AC0D0);
}

void sub_1003AC0D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_10003BCA4(*(_QWORD *)(a1 + a3[5] + 8));
      sub_100079F70();
      return;
    }
    v9 = sub_1000C28E0();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v9;
      v10 = a3[6];
    }
    else
    {
      v7 = sub_1000BA294(&qword_100BDD560);
      v10 = a3[8];
    }
    v8 = a1 + v10;
  }
  sub_1000B250C(v8, a2, v7);
}

uint64_t sub_1003AC17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AC188);
}

void sub_1003AC188(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1000BA294(&qword_100BC6518);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      sub_100079F70();
      return;
    }
    v11 = sub_1000C28E0();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[6];
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BDD560);
      v12 = a4[8];
    }
    v10 = a1 + v12;
  }
  sub_1000987C4(v10, a2, a2, v9);
}

void sub_1003AC23C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_100158A50(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100999BC8;
    v4 = type metadata accessor for PrecipitationAmount(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v8[3] = (char *)&value witness table for () + 64;
      sub_1003AC2F0(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_1003AC2F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100BDD5D0)
  {
    v2 = type metadata accessor for PrecipitationAmount(255);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100BDD5D0);
  }
}

void sub_1003AC344()
{
  sub_10003D2DC(&qword_100BDD610, &qword_100BDD618);
}

uint64_t sub_1003AC370(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2D34, 1);
}

void sub_1003AC380(uint64_t a1@<X8>)
{
  sub_1003AAA68(a1);
}

uint64_t sub_1003AC388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrecipitationAmountsEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003AC3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrecipitationAmountsEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003AC414()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000E6FE0();
  sub_1003AB534(v0 + v1);
}

void sub_1003AC430(uint64_t a1)
{
  sub_1003AC46C(a1, (void (*)(char *))&PrecipitationAmount.nextTwentyFourHours.setter);
}

void sub_1003AC440(uint64_t a1)
{
  sub_1003AC46C(a1, (void (*)(char *))&PrecipitationAmount.pastTwentyFourHours.setter);
}

void sub_1003AC450(uint64_t a1)
{
  sub_1003AC46C(a1, (void (*)(char *))&PrecipitationAmount.pastSixHours.setter);
}

void sub_1003AC460(uint64_t a1)
{
  sub_1003AC46C(a1, (void (*)(char *))&PrecipitationAmount.pastHour.setter);
}

void sub_1003AC46C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;
  uint64_t v5;

  sub_1000E6FE0();
  sub_1003AB6A8(a1, v2 + v5, a2);
  sub_100079F70();
}

uint64_t sub_1003AC4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;

  v0 = sub_100075EB0(&qword_100BDD630);
  v1 = sub_100075EB0(&qword_100BC4FA0);
  v2 = sub_100075EB0(&qword_100BDD628);
  v3 = sub_100075EB0(&qword_100BDD620);
  v4 = type metadata accessor for InsetGroupedListStyle(255);
  sub_10003D2DC(&qword_100BDD648, &qword_100BDD620);
  v11 = v3;
  v12 = (_QWORD *)v4;
  v13 = v5;
  v14 = &protocol witness table for InsetGroupedListStyle;
  v6 = sub_10009885C((uint64_t)&v11, (uint64_t)&opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>);
  v7 = sub_100114EF8();
  v11 = v2;
  v12 = &type metadata for String;
  v13 = v6;
  v14 = (void *)v7;
  v8 = sub_10009885C((uint64_t)&v11, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>);
  sub_10003D2DC(&qword_100BC4FC0, &qword_100BC4FA0);
  v11 = v0;
  v12 = (_QWORD *)v1;
  v13 = v8;
  v14 = v9;
  return sub_10009885C((uint64_t)&v11, (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>);
}

void sub_1003AC5C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  double v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(_BOOL8, char *, double, double, double, double);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  double x;
  double y;
  double width;
  double height;
  _QWORD v34[3];
  double *v35;
  CGRect v36;
  CGRect v37;

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (_QWORD *)((char *)v34 - v6);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v34 - v13;
  v15 = (int *)type metadata accessor for DailyComponentForecastRowView(0);
  v16 = sub_1000BA294(&qword_100BDD670);
  State.wrappedValue.getter(v7, v16);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100021A14((uint64_t)v7, (uint64_t *)&unk_100BD35A0);
    v17 = 0;
  }
  else
  {
    v18 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v14, v7, v8);
    Date.init()(v18);
    v19 = Date.timeIntervalSince(_:)(v14);
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v12, v8);
    v20(v14, v8);
    v17 = v19 > 0.3;
  }
  v21 = *(void (**)(_BOOL8, char *, double, double, double, double))(a1 + v15[11]);
  v22 = (uint64_t *)(a1 + v15[21]);
  v24 = *v22;
  v23 = v22[1];
  v34[1] = v24;
  v34[2] = v23;
  v25 = sub_1000BA294(&qword_100BDD848);
  State.wrappedValue.getter(&v35, v25);
  v26 = v35[2];
  v27 = v35[3];
  v28 = v35[4];
  v29 = v35[5];
  swift_release(v35);
  v36.origin.x = v26;
  v36.origin.y = v27;
  v36.size.width = v28;
  v36.size.height = v29;
  v37 = CGRectInset(v36, -*(double *)(a1 + v15[12]), 0.0);
  x = v37.origin.x;
  y = v37.origin.y;
  width = v37.size.width;
  height = v37.size.height;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a1, v8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v8);
  v21(v17, v5, x, y, width, height);
  sub_100021A14((uint64_t)v5, (uint64_t *)&unk_100BD35A0);
}

void sub_1003AC83C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_1000BA294(&qword_100BDD7B0);
  sub_1003AC884(a1, a2 + *(int *)(v4 + 44));
}

void sub_1003AC884(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t (*v65)(char *);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t (*v96)(char *);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  double v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  char v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  _OWORD *v145;
  __int128 v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  double v150;
  void (*v151)(char *, uint64_t);
  char *v152;
  double v153;
  char *v154;
  double v155;
  char *v156;
  double v157;
  uint64_t v158;
  int v159;
  double v160;
  char *v161;
  double v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int *v181;
  char v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(char *);
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _OWORD *v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  int v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  void (*v243)(char *, char *, uint64_t);
  char *v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void (*v271)(char *, uint64_t, uint64_t);
  unsigned int v272;
  uint64_t v273;
  unsigned int v274;
  unsigned int v275;
  uint64_t v276;
  void (*v277)(char *, uint64_t);
  uint64_t (*v278)(char *);
  uint64_t KeyPath;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t *v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int *v298;
  int *v299;
  uint64_t v300;
  char v301;
  char *v302;
  char v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  char v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char v317;
  uint64_t v318;
  char v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char v326;
  uint64_t v327;
  char v328;
  uint64_t v329;
  char v330;
  uint64_t v331;
  uint64_t v332;
  __int16 v333;
  _QWORD v334[11];
  unsigned __int8 v335;
  uint64_t v336;
  unsigned __int8 v337;
  uint64_t v338;
  uint64_t v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  uint64_t v343;
  unsigned __int8 v344;
  uint64_t v345;
  unsigned __int8 v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  unsigned __int8 v350;
  uint64_t v351;
  unsigned __int8 v352;
  uint64_t v353;
  char *v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;

  v269 = a2;
  v266 = sub_1000BA294(&qword_100BDAF60);
  v3 = __chkstk_darwin(v266);
  v270 = (uint64_t)&v224 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v268 = (uint64_t)&v224 - v5;
  v6 = sub_1000BA294(qword_100BC4E80);
  __chkstk_darwin(v6);
  v260 = (uint64_t)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = sub_1000BA294(&qword_100BC4E68);
  v252 = *(_QWORD *)(v259 - 8);
  v8 = __chkstk_darwin(v259);
  v224 = (char *)&v224 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v256 = (char *)&v224 - v11;
  v12 = __chkstk_darwin(v10);
  v255 = (char *)&v224 - v13;
  v14 = __chkstk_darwin(v12);
  v251 = (char *)&v224 - v15;
  __chkstk_darwin(v14);
  v244 = (char *)&v224 - v16;
  v17 = type metadata accessor for WeatherDayVarianceView(0);
  v261 = *(_QWORD *)(v17 - 8);
  v262 = v17;
  __chkstk_darwin(v17);
  v258 = (char *)&v224 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = sub_1000BA294(&qword_100BDD7B8);
  __chkstk_darwin(v257);
  v265 = (char *)&v224 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100BDAF58);
  v21 = __chkstk_darwin(v20);
  v267 = (uint64_t)&v224 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v264 = (char *)&v224 - v24;
  __chkstk_darwin(v23);
  v292 = (uint64_t)&v224 - v25;
  v299 = (int *)type metadata accessor for DailyComponentForecastRowView(0);
  __chkstk_darwin(v299);
  v228 = (uint64_t)&v224 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for ColorSchemeContrast(0);
  v235 = *(_QWORD *)(v237 - 8);
  v27 = __chkstk_darwin(v237);
  v234 = (char *)&v224 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v233 = (char *)&v224 - v29;
  v232 = type metadata accessor for BlendMode(0);
  v230 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v229 = (char *)&v224 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = type metadata accessor for FontWithSmallVariantModifier(0);
  __chkstk_darwin(v283);
  v285 = (uint64_t *)((char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v288 = sub_1000BA294(&qword_100BDD7C0);
  __chkstk_darwin(v288);
  v287 = (char *)&v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = sub_1000BA294(&qword_100BDD7C8);
  v241 = *(_QWORD *)(v289 - 8);
  __chkstk_darwin(v289);
  v286 = (char *)&v224 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_1000BA294(&qword_100BDD7D0);
  __chkstk_darwin(v284);
  v290 = (char *)&v224 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_1000BA294(&qword_100BDD7D8);
  __chkstk_darwin(v227);
  v226 = (char *)&v224 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_1000BA294(&qword_100BDD7E0);
  __chkstk_darwin(v236);
  v240 = (uint64_t)&v224 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = sub_1000BA294(&qword_100BDAF50);
  v37 = __chkstk_darwin(v239);
  v291 = (uint64_t)&v224 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v238 = (uint64_t)&v224 - v40;
  __chkstk_darwin(v39);
  v296 = (uint64_t)&v224 - v41;
  v42 = sub_1000BA294(&qword_100BDD7E8);
  __chkstk_darwin(v42);
  v253 = (char *)&v224 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = sub_1000BA294(&qword_100BDAF48);
  v44 = __chkstk_darwin(v254);
  v297 = (uint64_t)&v224 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v295 = (uint64_t)&v224 - v46;
  v47 = sub_1000BA294(&qword_100BCCDA8);
  v48 = __chkstk_darwin(v47);
  v282 = (uint64_t)&v224 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v51 = (char *)&v224 - v50;
  v52 = type metadata accessor for Font.TextStyle(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v55 = (char *)&v224 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v56 = v298[5];
  v57 = a1;
  v293 = a1;
  v58 = (uint64_t *)(a1 + v56);
  v59 = v58[1];
  v320 = *v58;
  v321 = v59;
  v60 = sub_100114EF8();
  v276 = v60;
  swift_bridgeObjectRetain(v59);
  v61 = Text.init<A>(_:)(&v320, &type metadata for String, v60);
  v249 = v62;
  v250 = v61;
  KeyPath = v63;
  LODWORD(v248) = v64 & 1;
  v275 = enum case for Font.TextStyle.title3(_:);
  v65 = *(uint64_t (**)(char *))(v53 + 104);
  v66 = v65(v55);
  v278 = v65;
  static Font.Weight.medium.getter(v66);
  v67 = static Font.system(_:weight:)(v55);
  v68 = *(void (**)(char *, uint64_t))(v53 + 8);
  v68(v55, v52);
  v277 = v68;
  v274 = enum case for Font.TextStyle.body(_:);
  v69 = v65(v55);
  static Font.Weight.medium.getter(v69);
  v70 = static Font.system(_:weight:)(v55);
  v68(v55, v52);
  v294 = v57 + v299[17];
  v71 = *(_QWORD *)v294;
  LOBYTE(v57) = *(_BYTE *)(v294 + 8);
  sub_10008D47C(*(_QWORD *)v294, v57);
  sub_100109B54();
  LOBYTE(v68) = v72;
  sub_1000B15F8(v71, v57);
  v73 = enum case for Font.Leading.tight(_:);
  v272 = enum case for Font.Leading.tight(_:);
  v74 = type metadata accessor for Font.Leading(0);
  v271 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104);
  v280 = v51;
  v273 = v74;
  v271(v51, v73, v74);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v74);
  v75 = v282;
  sub_100037768((uint64_t)v51, v282, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v76 = sub_10040BDEC(v67, v70, v68 & 1, v75);
  v78 = v249;
  v77 = v250;
  LOBYTE(v74) = v248;
  v79 = KeyPath;
  v263 = Text.font(_:)(v76, v250, v249, v248, KeyPath);
  v281 = v80;
  v282 = v81;
  v231 = v82;
  swift_release(v67);
  swift_release(v70);
  swift_release(v76);
  sub_1000D31B4(v77, v78, v74);
  swift_bridgeObjectRelease(v79);
  v83 = (uint64_t)v280;
  sub_100021A14((uint64_t)v280, &qword_100BCCDA8);
  KeyPath = swift_getKeyPath(&unk_100999E20);
  v84 = v293;
  v85 = *(_QWORD *)(v293 + v299[10]);
  static Alignment.topLeading.getter();
  _FrameLayout.init(width:height:alignment:)(v85, 0, 0, 1);
  v250 = v334[10];
  LODWORD(v249) = v335;
  v248 = v336;
  v247 = v337;
  v245 = v339;
  v246 = v338;
  v86 = (uint64_t)v253;
  sub_10010B154((uint64_t)v253);
  v87 = v297;
  sub_100037768(v86, v297, &qword_100BDD7E8);
  *(_QWORD *)(v87 + *(int *)(v254 + 36)) = 0x3FF0000000000000;
  sub_100021A14(v86, &qword_100BDD7E8);
  sub_1000787D4(v87, v295, &qword_100BDAF48);
  v88 = (uint64_t *)(v84 + v298[17]);
  v89 = v88[1];
  v320 = *v88;
  v321 = v89;
  swift_bridgeObjectRetain(v89);
  v90 = Text.init<A>(_:)(&v320, &type metadata for String, v276);
  v242 = v91;
  v243 = (void (*)(char *, char *, uint64_t))v90;
  v93 = v92;
  LOBYTE(v84) = v94 & 1;
  v95 = swift_getKeyPath(&unk_100999E20);
  v96 = v278;
  v97 = ((uint64_t (*)(char *, _QWORD, uint64_t))v278)(v55, v275, v52);
  static Font.Weight.medium.getter(v97);
  v225 = static Font.system(_:weight:)(v55);
  v98 = v277;
  v277(v55, v52);
  v99 = ((uint64_t (*)(char *, _QWORD, uint64_t))v96)(v55, v274, v52);
  static Font.Weight.medium.getter(v99);
  v100 = static Font.system(_:weight:)(v55);
  v253 = v55;
  v254 = v52;
  v98(v55, v52);
  v101 = *(_QWORD *)v294;
  LOBYTE(v55) = *(_BYTE *)(v294 + 8);
  sub_10008D47C(*(_QWORD *)v294, (char)v55);
  sub_100109B54();
  LOBYTE(v52) = v102;
  sub_1000B15F8(v101, (char)v55);
  v103 = v273;
  v271((char *)v83, v272, v273);
  _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v103);
  v104 = v283;
  v105 = v285;
  sub_100037768(v83, (uint64_t)v285 + *(int *)(v283 + 24), &qword_100BCCDA8);
  v106 = (uint64_t)v105;
  *v105 = v225;
  v105[1] = v100;
  *((_BYTE *)v105 + *(int *)(v104 + 28)) = v52 & 1;
  v108 = (uint64_t)v287;
  v107 = v288;
  v109 = v106;
  sub_100080C0C(v106, (uint64_t)&v287[*(int *)(v288 + 36)], type metadata accessor for FontWithSmallVariantModifier);
  v111 = v242;
  v110 = (uint64_t)v243;
  *(_QWORD *)v108 = v243;
  *(_QWORD *)(v108 + 8) = v93;
  v112 = v93;
  *(_BYTE *)(v108 + 16) = v84;
  *(_QWORD *)(v108 + 24) = v111;
  *(_QWORD *)(v108 + 32) = v95;
  *(_QWORD *)(v108 + 40) = 1;
  *(_BYTE *)(v108 + 48) = 0;
  v113 = v110;
  sub_1000D55D4(v110, v112, v84);
  swift_bridgeObjectRetain(v111);
  swift_retain();
  sub_1000215BC(v109, type metadata accessor for FontWithSmallVariantModifier);
  v114 = v83;
  v115 = (uint64_t)v226;
  sub_100021A14(v114, &qword_100BCCDA8);
  v116 = v112;
  v117 = v293;
  sub_1000D31B4(v113, v116, v84);
  swift_release(v95);
  swift_bridgeObjectRelease(v111);
  v118 = sub_10010FAB0();
  v119 = v286;
  v242 = v118;
  View.monospacedDigit()(v107);
  sub_100021A14(v108, &qword_100BDD7C0);
  v120 = v241;
  v121 = (uint64_t)v290;
  v122 = v119;
  v123 = v119;
  v124 = v289;
  v243 = *(void (**)(char *, char *, uint64_t))(v241 + 16);
  v243(v290, v122, v289);
  *(_WORD *)(v121 + *(int *)(v284 + 36)) = 257;
  v241 = *(_QWORD *)(v120 + 8);
  ((void (*)(char *, uint64_t))v241)(v123, v124);
  v126 = v229;
  v125 = v230;
  v127 = v232;
  (*(void (**)(char *, _QWORD, uint64_t))(v230 + 104))(v229, enum case for BlendMode.plusLighter(_:), v232);
  (*(void (**)(uint64_t, char *, uint64_t))(v125 + 16))(v115 + *(int *)(v227 + 36), v126, v127);
  sub_100037768(v121, v115, &qword_100BDD7D0);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v127);
  sub_100021A14(v121, &qword_100BDD7D0);
  v128 = v233;
  sub_100114A94();
  v129 = v234;
  v130 = v235;
  v131 = v237;
  (*(void (**)(char *, _QWORD, uint64_t))(v235 + 104))(v234, enum case for ColorSchemeContrast.increased(_:), v237);
  v132 = v129;
  LOBYTE(v129) = static ColorSchemeContrast.== infix(_:_:)(v128, v129);
  v133 = *(void (**)(char *, uint64_t))(v130 + 8);
  v133(v132, v131);
  v133(v128, v131);
  v134 = v228;
  sub_100080C0C(v117, v228, type metadata accessor for DailyComponentForecastRowView);
  if ((v129 & 1) != 0)
  {
    sub_1000215BC(v134, type metadata accessor for DailyComponentForecastRowView);
    v135 = 1.0;
  }
  else
  {
    v136 = v134 + v299[19];
    v137 = *(_QWORD *)v136;
    v138 = *(_BYTE *)(v136 + 8);
    sub_10008D47C(*(_QWORD *)v136, v138);
    sub_100109B54();
    v140 = v139;
    sub_1000B15F8(v137, v138);
    sub_1000215BC(v134, type metadata accessor for DailyComponentForecastRowView);
    if ((v140 & 1) != 0)
      v135 = 1.0;
    else
      v135 = 0.27;
  }
  v141 = v240;
  sub_100037768(v115, v240, &qword_100BDD7D8);
  *(double *)(v141 + *(int *)(v236 + 36)) = v135;
  sub_100021A14(v115, &qword_100BDD7D8);
  v142 = v299;
  v143 = *(_QWORD *)(v117 + v299[8]);
  ((void (*)(void))static Alignment.trailing.getter)();
  _FrameLayout.init(width:height:alignment:)(v143, 0, 0, 1);
  v144 = v238;
  sub_100037768(v141, v238, &qword_100BDD7E0);
  v145 = (_OWORD *)(v144 + *(int *)(v239 + 36));
  v146 = v341;
  *v145 = v340;
  v145[1] = v146;
  v145[2] = v342;
  sub_100021A14(v141, &qword_100BDD7E0);
  sub_1000787D4(v144, v296, &qword_100BDAF50);
  static Alignment.center.getter(v147);
  _FrameLayout.init(width:height:alignment:)(0x4020000000000000, 0, 0, 1);
  v240 = v343;
  LODWORD(v239) = v344;
  v238 = v345;
  LODWORD(v237) = v346;
  v235 = v348;
  v236 = v347;
  v148 = v244;
  Measurement<>.converted(rounded:)(0);
  v149 = v259;
  v150 = Measurement.value.getter(v259);
  v151 = *(void (**)(char *, uint64_t))(v252 + 8);
  v151(v148, v149);
  v152 = v251;
  Measurement<>.converted(rounded:)(0);
  v153 = Measurement.value.getter(v149);
  v151(v152, v149);
  v154 = v255;
  Measurement<>.converted(rounded:)(0);
  v155 = Measurement.value.getter(v149);
  v151(v154, v149);
  v156 = v256;
  Measurement<>.converted(rounded:)(0);
  v157 = Measurement.value.getter(v149);
  v151(v156, v149);
  v158 = v260;
  sub_100037768(v117 + v142[7], v260, qword_100BC4E80);
  v159 = _s7Weather24LocationCompositionStateOwet_0(v158, 1, v149);
  if (v159 == 1)
  {
    sub_100021A14(v158, qword_100BC4E80);
    v160 = 0.0;
  }
  else
  {
    v161 = v224;
    Measurement<>.converted(rounded:)(0);
    v151((char *)v158, v149);
    v162 = Measurement.value.getter(v149);
    v151(v161, v149);
    v160 = v162;
  }
  LODWORD(v260) = v231 & 1;
  v163 = v117;
  v164 = *(unsigned __int8 *)(v117 + v298[16]);
  swift_bridgeObjectRetain(*(_QWORD *)(v163 + v298[20]));
  v166 = sub_10010F7C0(v165);
  v167 = v258;
  WeatherDayVarianceView.init(weekMaxTemp:weekMinTemp:dayHighTemp:dayLowTemp:currentTemp:isDaylight:temperatureGradient:)(*(_QWORD *)&v160, v159 == 1, v164, v166, v150, v153, v155, v157);
  v169 = v261;
  v168 = v262;
  v170 = (uint64_t)v265;
  (*(void (**)(char *, char *, uint64_t))(v261 + 16))(v265, v167, v262);
  *(_BYTE *)(v170 + *(int *)(v257 + 36)) = 1;
  (*(void (**)(char *, uint64_t))(v169 + 8))(v167, v168);
  v171 = *(_QWORD *)v294;
  LOBYTE(v167) = *(_BYTE *)(v294 + 8);
  sub_10008D47C(*(_QWORD *)v294, (char)v167);
  sub_100109B54();
  sub_1000B15F8(v171, (char)v167);
  sub_10008D47C(v171, (char)v167);
  sub_100109B54();
  sub_1000B15F8(v171, (char)v167);
  sub_10008D47C(v171, (char)v167);
  sub_100109B54();
  sub_1000B15F8(v171, (char)v167);
  v172 = sub_1000BA294(&qword_100BDD668);
  ScaledValue.wrappedValue.getter(&v320, v172);
  ScaledValue.wrappedValue.getter(&v320, v172);
  v173 = ScaledValue.wrappedValue.getter(&v320, v172);
  static Alignment.center.getter(v173);
  v174 = (uint64_t)v264;
  sub_1009461C8();
  sub_100021A14(v170, &qword_100BDD7B8);
  sub_1000787D4(v174, v292, &qword_100BDAF58);
  static Alignment.center.getter(v175);
  _FrameLayout.init(width:height:alignment:)(0x4020000000000000, 0, 0, 1);
  v265 = v349;
  LODWORD(v264) = v350;
  v262 = v351;
  LODWORD(v261) = v352;
  v258 = v354;
  v259 = v353;
  v176 = (uint64_t *)(v163 + v298[18]);
  v177 = v176[1];
  v320 = *v176;
  v321 = v177;
  swift_bridgeObjectRetain(v177);
  v178 = Text.init<A>(_:)(&v320, &type metadata for String, v276);
  v180 = v179;
  v298 = v181;
  v183 = v182 & 1;
  v184 = swift_getKeyPath(&unk_100999E20);
  v186 = (uint64_t)v253;
  v185 = v254;
  v187 = v278;
  v188 = ((uint64_t (*)(char *, _QWORD, uint64_t))v278)(v253, v275, v254);
  static Font.Weight.medium.getter(v188);
  v276 = static Font.system(_:weight:)(v186);
  v189 = (void (*)(uint64_t, uint64_t))v277;
  v277((char *)v186, v185);
  v190 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v187)(v186, v274, v185);
  static Font.Weight.medium.getter(v190);
  v191 = static Font.system(_:weight:)(v186);
  v189(v186, v185);
  v192 = *(_QWORD *)v294;
  LOBYTE(v186) = *(_BYTE *)(v294 + 8);
  sub_10008D47C(*(_QWORD *)v294, v186);
  sub_100109B54();
  LOBYTE(v189) = v193;
  sub_1000B15F8(v192, v186);
  v194 = (uint64_t)v280;
  v195 = v273;
  v271(v280, v272, v273);
  _s7Weather24LocationCompositionStateOwst_0(v194, 0, 1, v195);
  v196 = v283;
  v197 = v285;
  sub_100037768(v194, (uint64_t)v285 + *(int *)(v283 + 24), &qword_100BCCDA8);
  *v197 = v276;
  v197[1] = v191;
  *((_BYTE *)v197 + *(int *)(v196 + 28)) = v189 & 1;
  v199 = (uint64_t)v287;
  v198 = v288;
  sub_100080C0C((uint64_t)v197, (uint64_t)&v287[*(int *)(v288 + 36)], type metadata accessor for FontWithSmallVariantModifier);
  v200 = v178;
  *(_QWORD *)v199 = v178;
  *(_QWORD *)(v199 + 8) = v180;
  v201 = v180;
  *(_BYTE *)(v199 + 16) = v183;
  v202 = v298;
  *(_QWORD *)(v199 + 24) = v298;
  *(_QWORD *)(v199 + 32) = v184;
  *(_QWORD *)(v199 + 40) = 1;
  *(_BYTE *)(v199 + 48) = 0;
  v203 = v200;
  sub_1000D55D4(v200, v201, v183);
  swift_bridgeObjectRetain(v202);
  swift_retain();
  sub_1000215BC((uint64_t)v197, type metadata accessor for FontWithSmallVariantModifier);
  sub_100021A14(v194, &qword_100BCCDA8);
  sub_1000D31B4(v203, v201, v183);
  swift_release(v184);
  swift_bridgeObjectRelease(v202);
  v204 = v286;
  View.monospacedDigit()(v198);
  sub_100021A14(v199, &qword_100BDD7C0);
  v205 = (uint64_t)v290;
  v206 = v289;
  v243(v290, v204, v289);
  *(_WORD *)(v205 + *(int *)(v284 + 36)) = 257;
  v207 = ((uint64_t (*)(char *, uint64_t))v241)(v204, v206);
  v208 = *(_QWORD *)(v293 + v299[9]);
  static Alignment.trailing.getter(v207);
  _FrameLayout.init(width:height:alignment:)(v208, 0, 0, 1);
  v209 = v270;
  sub_100037768(v205, v270, &qword_100BDD7D0);
  v210 = (_OWORD *)(v209 + *(int *)(v266 + 36));
  v211 = v356;
  *v210 = v355;
  v210[1] = v211;
  v210[2] = v357;
  sub_100021A14(v205, &qword_100BDD7D0);
  v212 = v268;
  sub_1000787D4(v209, v268, &qword_100BDAF60);
  v213 = v263;
  v320 = v263;
  v214 = v281;
  v321 = v281;
  LOBYTE(v198) = v260;
  v322 = v260;
  v323 = v282;
  v324 = KeyPath;
  v325 = 1;
  v326 = 0;
  v327 = v250;
  v328 = v249;
  v329 = v248;
  v330 = v247;
  v331 = v246;
  v332 = v245;
  v333 = 257;
  v318 = 0;
  v319 = 1;
  v334[0] = &v320;
  v334[1] = &v318;
  v215 = v297;
  sub_100037768(v295, v297, &qword_100BDAF48);
  v316 = 0;
  v317 = 1;
  v334[2] = v215;
  v334[3] = &v316;
  v216 = v291;
  sub_100037768(v296, v291, &qword_100BDAF50);
  v308 = 0;
  v309 = 1;
  v310 = v240;
  v311 = v239;
  v312 = v238;
  v313 = v237;
  v314 = v236;
  v315 = v235;
  v334[4] = v216;
  v334[5] = &v308;
  v217 = v292;
  v218 = v267;
  sub_100037768(v292, v267, &qword_100BDAF58);
  v300 = 0;
  v301 = 1;
  v302 = v265;
  v303 = (char)v264;
  v304 = v262;
  v305 = v261;
  v306 = v259;
  v307 = v258;
  v334[6] = v218;
  v334[7] = &v300;
  sub_100037768(v212, v209, &qword_100BDAF60);
  v334[8] = v209;
  sub_10035DAC0((uint64_t)v334, v269);
  v219 = v213;
  sub_1000D55D4(v213, v214, v198);
  v220 = v282;
  swift_bridgeObjectRetain(v282);
  v221 = KeyPath;
  swift_retain();
  sub_100021A14(v212, &qword_100BDAF60);
  sub_100021A14(v217, &qword_100BDAF58);
  sub_100021A14(v296, &qword_100BDAF50);
  sub_100021A14(v295, &qword_100BDAF48);
  sub_1000D31B4(v219, v281, v198);
  swift_release(v221);
  swift_bridgeObjectRelease(v220);
  sub_100021A14(v209, &qword_100BDAF60);
  sub_100021A14(v218, &qword_100BDAF58);
  sub_100021A14(v291, &qword_100BDAF50);
  sub_100021A14(v297, &qword_100BDAF48);
  v222 = v323;
  v223 = v324;
  sub_1000D31B4(v320, v321, v322);
  swift_release(v223);
  swift_bridgeObjectRelease(v222);
}

char *sub_1003AE068(char *a1, char *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  void (*v161)(char *, char *, uint64_t, __n128);
  uint64_t v162;
  uint64_t v163;
  void (*v164)(char *, char *);
  void (*v165)(char *, char *, uint64_t, __n128);
  uint64_t v166;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v166 = type metadata accessor for Date(0);
    v164 = *(void (**)(char *, char *))(*(_QWORD *)(v166 - 8) + 16);
    v164(a1, a2);
    v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v12 = v7[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v7[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = type metadata accessor for TimeZone(0);
    v20 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain(v11);
    v21 = swift_bridgeObjectRetain(v15);
    v161 = v20;
    v162 = v19;
    v20(v17, v18, v19, v21);
    v22 = v7[8];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1000BA294(&qword_100BC4E68);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v165 = (void (*)(char *, char *, uint64_t, __n128))v26;
    v26(&a1[v7[9]], &a2[v7[9]], v25);
    v27 = v7[10];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = v7[11];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
    a1[v7[13]] = a2[v7[13]];
    v35 = v7[14];
    v36 = &a1[v35];
    v37 = &a2[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = v7[15];
    v40 = &a1[v39];
    v41 = &a2[v39];
    v42 = type metadata accessor for Precipitation(0);
    v43 = v30;
    v44 = v42;
    swift_bridgeObjectRetain(v43);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v38);
    v163 = v44;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
    {
      v45 = sub_1000BA294(&qword_100BCB338);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v40, v41, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
    }
    a1[v7[16]] = a2[v7[16]];
    v47 = v7[17];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = v7[18];
    v52 = &a1[v51];
    v53 = &a2[v51];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    v55 = v7[19];
    v56 = &a1[v55];
    v57 = &a2[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    v59 = v7[20];
    v60 = *(_QWORD *)&a2[v59];
    *(_QWORD *)&a1[v59] = v60;
    v61 = a3[5];
    v62 = &a1[v61];
    v63 = &a2[v61];
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v58);
    v64 = swift_bridgeObjectRetain(v60);
    v165(v62, v63, v25, v64);
    ((void (*)(char *, char *, uint64_t))v165)(&a1[a3[6]], &a2[a3[6]], v25);
    v65 = a3[7];
    v66 = &a1[v65];
    v67 = &a2[v65];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v65], 1, v25))
    {
      v68 = sub_1000BA294(qword_100BC4E80);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v165)(v66, v67, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v25);
    }
    v69 = a3[9];
    *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
    *(_OWORD *)&a1[v69] = *(_OWORD *)&a2[v69];
    v70 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
    v71 = &a1[v70];
    v72 = &a2[v70];
    v73 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v73;
    v74 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    a1[v74] = a2[v74];
    v75 = a3[14];
    v76 = &a1[v75];
    v77 = &a2[v75];
    v78 = *(_QWORD *)&a2[v75 + 8];
    *(_QWORD *)v76 = *(_QWORD *)&a2[v75];
    *((_QWORD *)v76 + 1) = v78;
    swift_retain();
    swift_retain();
    swift_retain();
    v79 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
    v80 = &v76[v79];
    v81 = &v77[v79];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, (uint64_t)v7))
    {
      v82 = sub_1000BA294(&qword_100BCB340);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v164)(v80, v81, v166);
      v83 = v7[5];
      v84 = &v80[v83];
      v85 = &v81[v83];
      v86 = *((_QWORD *)v85 + 1);
      *(_QWORD *)v84 = *(_QWORD *)v85;
      *((_QWORD *)v84 + 1) = v86;
      v87 = v7[6];
      v88 = &v80[v87];
      v89 = &v81[v87];
      v90 = *((_QWORD *)v89 + 1);
      *(_QWORD *)v88 = *(_QWORD *)v89;
      *((_QWORD *)v88 + 1) = v90;
      v91 = v7[7];
      v92 = &v80[v91];
      v93 = &v81[v91];
      swift_bridgeObjectRetain(v86);
      v94 = swift_bridgeObjectRetain(v90);
      v161(v92, v93, v162, v94);
      ((void (*)(char *, char *, uint64_t))v165)(&v80[v7[8]], &v81[v7[8]], v25);
      ((void (*)(char *, char *, uint64_t))v165)(&v80[v7[9]], &v81[v7[9]], v25);
      v95 = v7[10];
      v96 = &v80[v95];
      v97 = &v81[v95];
      v98 = *((_QWORD *)v97 + 1);
      *(_QWORD *)v96 = *(_QWORD *)v97;
      *((_QWORD *)v96 + 1) = v98;
      v99 = v7[11];
      v100 = &v80[v99];
      v101 = &v81[v99];
      v102 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v102;
      *(_QWORD *)&v80[v7[12]] = *(_QWORD *)&v81[v7[12]];
      v80[v7[13]] = v81[v7[13]];
      v103 = v7[14];
      v104 = &v80[v103];
      v105 = &v81[v103];
      v106 = *((_QWORD *)v105 + 1);
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *((_QWORD *)v104 + 1) = v106;
      v107 = v7[15];
      v108 = &v80[v107];
      v109 = &v81[v107];
      swift_bridgeObjectRetain(v98);
      swift_bridgeObjectRetain(v102);
      swift_bridgeObjectRetain(v106);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v163))
      {
        v110 = sub_1000BA294(&qword_100BCB338);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v108, v109, v163);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v163);
      }
      v80[v7[16]] = v81[v7[16]];
      v111 = v7[17];
      v112 = &v80[v111];
      v113 = &v81[v111];
      v114 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = *(_QWORD *)v113;
      *((_QWORD *)v112 + 1) = v114;
      v115 = v7[18];
      v116 = &v80[v115];
      v117 = &v81[v115];
      v118 = *((_QWORD *)v117 + 1);
      *(_QWORD *)v116 = *(_QWORD *)v117;
      *((_QWORD *)v116 + 1) = v118;
      v119 = v7[19];
      v120 = &v80[v119];
      v121 = &v81[v119];
      v122 = *((_QWORD *)v121 + 1);
      *(_QWORD *)v120 = *(_QWORD *)v121;
      *((_QWORD *)v120 + 1) = v122;
      v123 = v7[20];
      v124 = *(_QWORD *)&v81[v123];
      *(_QWORD *)&v80[v123] = v124;
      swift_bridgeObjectRetain(v114);
      swift_bridgeObjectRetain(v118);
      swift_bridgeObjectRetain(v122);
      swift_bridgeObjectRetain(v124);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, (uint64_t)v7);
    }
    v125 = a3[15];
    v126 = &a1[v125];
    v127 = &a2[v125];
    v128 = sub_1000BA294(&qword_100BD3380);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
    v129 = a3[16];
    v130 = &a1[v129];
    v131 = &a2[v129];
    v132 = sub_1000BA294(&qword_100BDD668);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v130, v131, v132);
    v133 = a3[17];
    v134 = &a1[v133];
    v135 = &a2[v133];
    v136 = *(_QWORD *)v135;
    LOBYTE(v131) = v135[8];
    sub_10008D47C(*(_QWORD *)v135, (char)v131);
    *(_QWORD *)v134 = v136;
    v134[8] = (char)v131;
    v137 = a3[18];
    v138 = &a1[v137];
    v139 = &a2[v137];
    v140 = *(_QWORD *)v139;
    LOBYTE(v131) = v139[8];
    sub_10008D47C(*(_QWORD *)v139, (char)v131);
    *(_QWORD *)v138 = v140;
    v138[8] = (char)v131;
    v141 = a3[19];
    v142 = &a1[v141];
    v143 = &a2[v141];
    v144 = *(_QWORD *)v143;
    LOBYTE(v131) = v143[8];
    sub_10008D47C(*(_QWORD *)v143, (char)v131);
    *(_QWORD *)v142 = v144;
    v142[8] = (char)v131;
    v145 = a3[20];
    v146 = &a1[v145];
    v147 = &a2[v145];
    v148 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v147) == 1)
    {
      v149 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v146, v147, v149);
      v150 = 1;
    }
    else
    {
      *(_QWORD *)v146 = *(_QWORD *)v147;
      swift_retain();
      v150 = 0;
    }
    swift_storeEnumTagMultiPayload(v146, v148, v150);
    v151 = a3[21];
    v152 = a3[22];
    v153 = &a1[v151];
    v154 = &a2[v151];
    v155 = *((_QWORD *)v154 + 1);
    *(_QWORD *)v153 = *(_QWORD *)v154;
    *((_QWORD *)v153 + 1) = v155;
    v156 = &a1[v152];
    v157 = &a2[v152];
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v166))
    {
      v158 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v164)(v156, v157, v166);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v166);
    }
    v159 = sub_1000BA294(&qword_100BDD670);
    *(_QWORD *)&v156[*(int *)(v159 + 28)] = *(_QWORD *)&v157[*(int *)(v159 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1003AE868(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  __n128 v97;
  void (*v98)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  int v140;
  int v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  _QWORD *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v217)(uint64_t, uint64_t);
  uint64_t v218;
  void (*v219)(char *, char *, uint64_t, __n128);
  void (*v220)(uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;

  v6 = type metadata accessor for Date(0);
  v224 = *(_QWORD *)(v6 - 8);
  v225 = v6;
  v220 = *(void (**)(uint64_t, uint64_t))(v224 + 24);
  v220(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = v7[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = v7[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for TimeZone(0);
  v218 = *(_QWORD *)(v19 - 8);
  v221 = v19;
  v217 = *(void (**)(uint64_t, uint64_t))(v218 + 24);
  v217(v17, v18);
  v20 = v7[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1000BA294(&qword_100BC4E68);
  v223 = *(_QWORD *)(v23 - 8);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 24);
  v24(v21, v22, v23);
  v24(a1 + v7[9], a2 + v7[9], v23);
  v25 = v7[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v28 = v27[1];
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease();
  v29 = v7[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v32 = v31[1];
  v30[1] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v33 = v7[14];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease();
  v37 = v7[15];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for Precipitation(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v43 = *(_QWORD *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
LABEL_6:
    v44 = sub_1000BA294(&qword_100BCB338);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v43 + 24))(v38, v39, v40);
LABEL_7:
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  v45 = v7[17];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v48 = v47[1];
  v46[1] = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease();
  v49 = v7[18];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  *v50 = *v51;
  v52 = v51[1];
  v50[1] = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease();
  v53 = v7[19];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  *v54 = *v55;
  v56 = v55[1];
  v54[1] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease();
  v57 = v7[20];
  v58 = *(_QWORD *)(a2 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  swift_bridgeObjectRetain(v58);
  v59 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v24)(a1 + a3[5], a2 + a3[5], v23, v59);
  v24(a1 + a3[6], a2 + a3[6], v23);
  v60 = a3[7];
  v61 = (void *)(a1 + v60);
  v62 = (const void *)(a2 + v60);
  v63 = _s7Weather24LocationCompositionStateOwet_0(a1 + v60, 1, v23);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v23);
  v222 = v40;
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, const void *, uint64_t))(v223 + 16))(v61, v62, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v223 + 8))(v61, v23);
LABEL_12:
    v65 = sub_1000BA294(qword_100BC4E80);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_13;
  }
  v24((uint64_t)v61, (uint64_t)v62, v23);
LABEL_13:
  v66 = a3[8];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (_QWORD *)(a2 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  v69 = a3[9];
  v70 = (_QWORD *)(a1 + v69);
  v71 = (_QWORD *)(a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v72 = a3[11];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  v75 = v74[1];
  v76 = v73[1];
  *v73 = *v74;
  v73[1] = v75;
  swift_retain();
  swift_release(v76);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v77 = a3[14];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = *(_QWORD *)(a1 + v77);
  *(_QWORD *)(a1 + v77) = *(_QWORD *)(a2 + v77);
  swift_retain();
  swift_release(v80);
  v81 = *(_QWORD *)(v78 + 8);
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(v79 + 8);
  swift_retain();
  swift_release(v81);
  v82 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v83 = (_BYTE *)(v78 + v82);
  v84 = (_BYTE *)(v79 + v82);
  LODWORD(v81) = _s7Weather24LocationCompositionStateOwet_0(v78 + v82, 1, (uint64_t)v7);
  v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, (uint64_t)v7);
  if (!(_DWORD)v81)
  {
    if (v85)
    {
      sub_1000215BC((uint64_t)v83, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_19;
    }
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v220)(v83, v84, v225);
    v116 = v7[5];
    v117 = &v83[v116];
    v118 = &v84[v116];
    *v117 = *v118;
    v119 = v118[1];
    v117[1] = v119;
    swift_bridgeObjectRetain(v119);
    swift_bridgeObjectRelease();
    v120 = v7[6];
    v121 = &v83[v120];
    v122 = &v84[v120];
    *v121 = *v122;
    v123 = v122[1];
    v121[1] = v123;
    swift_bridgeObjectRetain(v123);
    v124 = swift_bridgeObjectRelease();
    ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v217)(&v83[v7[7]], &v84[v7[7]], v221, v124);
    v24((uint64_t)&v83[v7[8]], (uint64_t)&v84[v7[8]], v23);
    v24((uint64_t)&v83[v7[9]], (uint64_t)&v84[v7[9]], v23);
    v125 = v7[10];
    v126 = &v83[v125];
    v127 = &v84[v125];
    *v126 = *v127;
    v128 = v127[1];
    v126[1] = v128;
    swift_bridgeObjectRetain(v128);
    swift_bridgeObjectRelease();
    v129 = v7[11];
    v130 = &v83[v129];
    v131 = &v84[v129];
    *v130 = *v131;
    v132 = v131[1];
    v130[1] = v132;
    swift_bridgeObjectRetain(v132);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v83[v7[12]] = *(_QWORD *)&v84[v7[12]];
    v83[v7[13]] = v84[v7[13]];
    v133 = v7[14];
    v134 = &v83[v133];
    v135 = &v84[v133];
    *v134 = *v135;
    v136 = v135[1];
    v134[1] = v136;
    swift_bridgeObjectRetain(v136);
    swift_bridgeObjectRelease();
    v137 = v7[15];
    v138 = &v83[v137];
    v139 = &v84[v137];
    v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v83[v137], 1, v222);
    v141 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v222);
    if (v140)
    {
      if (!v141)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v138, v139, v222);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v222);
LABEL_30:
        v83[v7[16]] = v84[v7[16]];
        v158 = v7[17];
        v159 = &v83[v158];
        v160 = &v84[v158];
        *v159 = *v160;
        v161 = v160[1];
        v159[1] = v161;
        swift_bridgeObjectRetain(v161);
        swift_bridgeObjectRelease();
        v162 = v7[18];
        v163 = &v83[v162];
        v164 = &v84[v162];
        *v163 = *v164;
        v165 = v164[1];
        v163[1] = v165;
        swift_bridgeObjectRetain(v165);
        swift_bridgeObjectRelease();
        v166 = v7[19];
        v167 = &v83[v166];
        v168 = &v84[v166];
        *v167 = *v168;
        v169 = v168[1];
        v167[1] = v169;
        swift_bridgeObjectRetain(v169);
        swift_bridgeObjectRelease();
        v170 = v7[20];
        v171 = *(_QWORD *)&v84[v170];
        *(_QWORD *)&v83[v170] = v171;
        swift_bridgeObjectRetain(v171);
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    else
    {
      v156 = *(_QWORD *)(v222 - 8);
      if (!v141)
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 24))(v138, v139, v222);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v156 + 8))(v138, v222);
    }
    v157 = sub_1000BA294(&qword_100BCB338);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    goto LABEL_30;
  }
  if (v85)
  {
LABEL_19:
    v115 = sub_1000BA294(&qword_100BCB340);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v224 + 16))(v83, v84, v225);
  v86 = v7[5];
  v87 = &v83[v86];
  v88 = &v84[v86];
  *v87 = *v88;
  v89 = v88[1];
  v87[1] = v89;
  v90 = v7[6];
  v91 = &v83[v90];
  v92 = &v84[v90];
  *v91 = *v92;
  v93 = v92[1];
  v91[1] = v93;
  v94 = v7[7];
  v95 = &v83[v94];
  v96 = &v84[v94];
  v219 = *(void (**)(char *, char *, uint64_t, __n128))(v218 + 16);
  swift_bridgeObjectRetain(v89);
  v97 = swift_bridgeObjectRetain(v93);
  v219(v95, v96, v221, v97);
  v98 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v223 + 16);
  v98(&v83[v7[8]], &v84[v7[8]], v23);
  v98(&v83[v7[9]], &v84[v7[9]], v23);
  v99 = v7[10];
  v100 = &v83[v99];
  v101 = &v84[v99];
  *v100 = *v101;
  v102 = v101[1];
  v100[1] = v102;
  v103 = v7[11];
  v104 = &v83[v103];
  v105 = &v84[v103];
  *v104 = *v105;
  v106 = v105[1];
  v104[1] = v106;
  *(_QWORD *)&v83[v7[12]] = *(_QWORD *)&v84[v7[12]];
  v83[v7[13]] = v84[v7[13]];
  v107 = v7[14];
  v108 = &v83[v107];
  v109 = &v84[v107];
  *v108 = *v109;
  v110 = v109[1];
  v108[1] = v110;
  v111 = v7[15];
  v112 = &v83[v111];
  v113 = &v84[v111];
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRetain(v106);
  swift_bridgeObjectRetain(v110);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v222))
  {
    v114 = sub_1000BA294(&qword_100BCB338);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v112, v113, v222);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v222);
  }
  v83[v7[16]] = v84[v7[16]];
  v142 = v7[17];
  v143 = &v83[v142];
  v144 = &v84[v142];
  *v143 = *v144;
  v145 = v144[1];
  v143[1] = v145;
  v146 = v7[18];
  v147 = &v83[v146];
  v148 = &v84[v146];
  *v147 = *v148;
  v149 = v148[1];
  v147[1] = v149;
  v150 = v7[19];
  v151 = &v83[v150];
  v152 = &v84[v150];
  *v151 = *v152;
  v153 = v152[1];
  v151[1] = v153;
  v154 = v7[20];
  v155 = *(_QWORD *)&v84[v154];
  *(_QWORD *)&v83[v154] = v155;
  swift_bridgeObjectRetain(v145);
  swift_bridgeObjectRetain(v149);
  swift_bridgeObjectRetain(v153);
  swift_bridgeObjectRetain(v155);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, (uint64_t)v7);
LABEL_31:
  v172 = a3[15];
  v173 = a1 + v172;
  v174 = a2 + v172;
  v175 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 24))(v173, v174, v175);
  v176 = a3[16];
  v177 = a1 + v176;
  v178 = a2 + v176;
  v179 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 24))(v177, v178, v179);
  v180 = a3[17];
  v181 = a1 + v180;
  v182 = a2 + v180;
  v183 = *(_QWORD *)v182;
  LOBYTE(v178) = *(_BYTE *)(v182 + 8);
  sub_10008D47C(*(_QWORD *)v182, v178);
  v184 = *(_QWORD *)v181;
  v185 = *(_BYTE *)(v181 + 8);
  *(_QWORD *)v181 = v183;
  *(_BYTE *)(v181 + 8) = v178;
  sub_1000B15F8(v184, v185);
  v186 = a3[18];
  v187 = a1 + v186;
  v188 = a2 + v186;
  v189 = *(_QWORD *)v188;
  LOBYTE(v178) = *(_BYTE *)(v188 + 8);
  sub_10008D47C(*(_QWORD *)v188, v178);
  v190 = *(_QWORD *)v187;
  v191 = *(_BYTE *)(v187 + 8);
  *(_QWORD *)v187 = v189;
  *(_BYTE *)(v187 + 8) = v178;
  sub_1000B15F8(v190, v191);
  v192 = a3[19];
  v193 = a1 + v192;
  v194 = a2 + v192;
  v195 = *(_QWORD *)v194;
  LOBYTE(v178) = *(_BYTE *)(v194 + 8);
  sub_10008D47C(*(_QWORD *)v194, v178);
  v196 = *(_QWORD *)v193;
  v197 = *(_BYTE *)(v193 + 8);
  *(_QWORD *)v193 = v195;
  *(_BYTE *)(v193 + 8) = v178;
  sub_1000B15F8(v196, v197);
  if (a1 != a2)
  {
    v198 = a3[20];
    v199 = (_QWORD *)(a1 + v198);
    v200 = (_QWORD *)(a2 + v198);
    sub_100021A14(a1 + v198, &qword_100BC68C8);
    v201 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v200) == 1)
    {
      v202 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v199, v200, v202);
      v203 = 1;
    }
    else
    {
      *v199 = *v200;
      swift_retain();
      v203 = 0;
    }
    swift_storeEnumTagMultiPayload(v199, v201, v203);
  }
  v204 = a3[21];
  v205 = a1 + v204;
  v206 = a2 + v204;
  v207 = *(_QWORD *)(a1 + v204);
  *(_QWORD *)(a1 + v204) = *(_QWORD *)(a2 + v204);
  swift_retain();
  swift_release(v207);
  v208 = *(_QWORD *)(v205 + 8);
  *(_QWORD *)(v205 + 8) = *(_QWORD *)(v206 + 8);
  swift_retain();
  swift_release(v208);
  v209 = a3[22];
  v210 = (char *)(a1 + v209);
  v211 = (char *)(a2 + v209);
  LODWORD(v208) = _s7Weather24LocationCompositionStateOwet_0(a1 + v209, 1, v225);
  v212 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v225);
  if (!(_DWORD)v208)
  {
    if (!v212)
    {
      ((void (*)(char *, char *, uint64_t))v220)(v210, v211, v225);
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v224 + 8))(v210, v225);
    goto LABEL_41;
  }
  if (v212)
  {
LABEL_41:
    v213 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v210, v211, v225);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v210, 0, 1, v225);
LABEL_42:
  v214 = *(int *)(sub_1000BA294(&qword_100BDD670) + 28);
  v215 = *(_QWORD *)&v210[v214];
  *(_QWORD *)&v210[v214] = *(_QWORD *)&v211[v214];
  swift_retain();
  swift_release(v215);
  return a1;
}

uint64_t sub_1003AF58C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;

  v6 = type metadata accessor for Date(0);
  v70 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v71 = v6;
  v70(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  v8 = v7[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for TimeZone(0);
  v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v69(v9, v10, v11);
  v12 = v7[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1000BA294(&qword_100BC4E68);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[9], a2 + v7[9], v15);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  *(_OWORD *)(a1 + v7[14]) = *(_OWORD *)(a2 + v7[14]);
  v17 = v7[15];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for Precipitation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BCB338);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  v16(a1 + a3[5], a2 + a3[5], v15);
  v16(a1 + a3[6], a2 + a3[6], v15);
  v22 = a3[7];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v22, 1, v15))
  {
    v25 = sub_1000BA294(qword_100BC4E80);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v23, (uint64_t)v24, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v15);
  }
  v26 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v27 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[14];
  v30 = (_QWORD *)(a1 + v29);
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a2 + v29 + 8);
  *v30 = *(_QWORD *)(a2 + v29);
  v30[1] = v32;
  v33 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v34 = (char *)v30 + v33;
  v35 = (char *)(v31 + v33);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v7))
  {
    v36 = sub_1000BA294(&qword_100BCB340);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v70)(v34, v35, v71);
    *(_OWORD *)&v34[v7[5]] = *(_OWORD *)&v35[v7[5]];
    *(_OWORD *)&v34[v7[6]] = *(_OWORD *)&v35[v7[6]];
    v69((uint64_t)&v34[v7[7]], (uint64_t)&v35[v7[7]], v11);
    v16((uint64_t)&v34[v7[8]], (uint64_t)&v35[v7[8]], v15);
    v16((uint64_t)&v34[v7[9]], (uint64_t)&v35[v7[9]], v15);
    *(_OWORD *)&v34[v7[10]] = *(_OWORD *)&v35[v7[10]];
    *(_OWORD *)&v34[v7[11]] = *(_OWORD *)&v35[v7[11]];
    *(_QWORD *)&v34[v7[12]] = *(_QWORD *)&v35[v7[12]];
    v34[v7[13]] = v35[v7[13]];
    *(_OWORD *)&v34[v7[14]] = *(_OWORD *)&v35[v7[14]];
    v37 = v7[15];
    v38 = &v34[v37];
    v39 = &v35[v37];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v35[v37], 1, v20))
    {
      v40 = sub_1000BA294(&qword_100BCB338);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v38, v39, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v20);
    }
    v34[v7[16]] = v35[v7[16]];
    *(_OWORD *)&v34[v7[17]] = *(_OWORD *)&v35[v7[17]];
    *(_OWORD *)&v34[v7[18]] = *(_OWORD *)&v35[v7[18]];
    *(_OWORD *)&v34[v7[19]] = *(_OWORD *)&v35[v7[19]];
    *(_QWORD *)&v34[v7[20]] = *(_QWORD *)&v35[v7[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v7);
  }
  v41 = a3[15];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  v45 = a3[16];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  v49 = a3[17];
  v50 = a3[18];
  v51 = a1 + v49;
  v52 = a2 + v49;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = *(_BYTE *)(v52 + 8);
  v53 = a1 + v50;
  v54 = a2 + v50;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  v55 = a3[19];
  v56 = a3[20];
  v57 = a1 + v55;
  v58 = a2 + v55;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_BYTE *)(v57 + 8) = *(_BYTE *)(v58 + 8);
  v59 = (void *)(a1 + v56);
  v60 = (const void *)(a2 + v56);
  v61 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v60) == 1)
  {
    v62 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v59, v60, v62);
    swift_storeEnumTagMultiPayload(v59, v61, 1);
  }
  else
  {
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  v63 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v64 = (char *)(a1 + v63);
  v65 = (char *)(a2 + v63);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v71))
  {
    v66 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v70)(v64, v65, v71);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v71);
  }
  v67 = sub_1000BA294(&qword_100BDD670);
  *(_QWORD *)&v64[*(int *)(v67 + 28)] = *(_QWORD *)&v65[*(int *)(v67 + 28)];
  return a1;
}

uint64_t sub_1003AFBDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  int v84;
  void (*v85)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  void *v166;
  const void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v183)(uint64_t, uint64_t);
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;

  v6 = type metadata accessor for Date(0);
  v188 = *(_QWORD *)(v6 - 8);
  v189 = v6;
  v185 = *(void (**)(uint64_t, uint64_t))(v188 + 40);
  v185(a1, a2);
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for TimeZone(0);
  v184 = *(_QWORD *)(v21 - 8);
  v186 = v21;
  v183 = *(void (**)(uint64_t, uint64_t))(v184 + 40);
  v183(v19, v20);
  v22 = v7[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1000BA294(&qword_100BC4E68);
  v187 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v187 + 40);
  v26(v23, v24, v25);
  v26(a1 + v7[9], a2 + v7[9], v25);
  v27 = v7[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v7[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  *(_BYTE *)(a1 + v7[13]) = *(_BYTE *)(a2 + v7[13]);
  v37 = v7[14];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = v7[15];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = type metadata accessor for Precipitation(0);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v48 = *(_QWORD *)(v45 - 8);
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v43, v45);
LABEL_6:
    v49 = sub_1000BA294(&qword_100BCB338);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v48 + 40))(v43, v44, v45);
LABEL_7:
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  v50 = v7[17];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  v55 = v7[18];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = v7[19];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  v65 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v26)(a1 + a3[5], a2 + a3[5], v25, v65);
  v26(a1 + a3[6], a2 + a3[6], v25);
  v66 = a3[7];
  v67 = (void *)(a1 + v66);
  v68 = (const void *)(a2 + v66);
  v69 = _s7Weather24LocationCompositionStateOwet_0(a1 + v66, 1, v25);
  v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v25);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(void *, const void *, uint64_t))(v187 + 32))(v67, v68, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v70)
  {
    (*(void (**)(void *, uint64_t))(v187 + 8))(v67, v25);
LABEL_12:
    v71 = sub_1000BA294(qword_100BC4E80);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_13;
  }
  v26((uint64_t)v67, (uint64_t)v68, v25);
LABEL_13:
  v72 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v72) = *(_OWORD *)(a2 + v72);
  v73 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v74 = *(_QWORD *)(a1 + v73 + 8);
  *(_OWORD *)(a1 + v73) = *(_OWORD *)(a2 + v73);
  swift_release(v74);
  v75 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v75) = *(_BYTE *)(a2 + v75);
  v76 = a3[14];
  v77 = a1 + v76;
  v78 = a2 + v76;
  v79 = *(_QWORD *)(a1 + v76);
  *(_QWORD *)(a1 + v76) = *(_QWORD *)(a2 + v76);
  swift_release(v79);
  v80 = *(_QWORD *)(v77 + 8);
  *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
  swift_release(v80);
  v81 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v82 = (_BYTE *)(v77 + v81);
  v83 = (_BYTE *)(v78 + v81);
  LODWORD(v77) = _s7Weather24LocationCompositionStateOwet_0(v77 + v81, 1, (uint64_t)v7);
  v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, (uint64_t)v7);
  if ((_DWORD)v77)
  {
    if (!v84)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v188 + 32))(v82, v83, v189);
      *(_OWORD *)&v82[v7[5]] = *(_OWORD *)&v83[v7[5]];
      *(_OWORD *)&v82[v7[6]] = *(_OWORD *)&v83[v7[6]];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v184 + 32))(&v82[v7[7]], &v83[v7[7]], v186);
      v85 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v187 + 32);
      v85(&v82[v7[8]], &v83[v7[8]], v25);
      v85(&v82[v7[9]], &v83[v7[9]], v25);
      *(_OWORD *)&v82[v7[10]] = *(_OWORD *)&v83[v7[10]];
      *(_OWORD *)&v82[v7[11]] = *(_OWORD *)&v83[v7[11]];
      *(_QWORD *)&v82[v7[12]] = *(_QWORD *)&v83[v7[12]];
      v82[v7[13]] = v83[v7[13]];
      *(_OWORD *)&v82[v7[14]] = *(_OWORD *)&v83[v7[14]];
      v86 = v7[15];
      v87 = &v82[v86];
      v88 = &v83[v86];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v83[v86], 1, v45))
      {
        v89 = sub_1000BA294(&qword_100BCB338);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v87, v88, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v45);
      }
      v82[v7[16]] = v83[v7[16]];
      *(_OWORD *)&v82[v7[17]] = *(_OWORD *)&v83[v7[17]];
      *(_OWORD *)&v82[v7[18]] = *(_OWORD *)&v83[v7[18]];
      *(_OWORD *)&v82[v7[19]] = *(_OWORD *)&v83[v7[19]];
      *(_QWORD *)&v82[v7[20]] = *(_QWORD *)&v83[v7[20]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, (uint64_t)v7);
      goto LABEL_31;
    }
    goto LABEL_19;
  }
  if (v84)
  {
    sub_1000215BC((uint64_t)v82, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
LABEL_19:
    v90 = sub_1000BA294(&qword_100BCB340);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_31;
  }
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v185)(v82, v83, v189);
  v91 = v7[5];
  v92 = &v82[v91];
  v93 = (uint64_t *)&v83[v91];
  v95 = *v93;
  v94 = v93[1];
  *v92 = v95;
  v92[1] = v94;
  swift_bridgeObjectRelease();
  v96 = v7[6];
  v97 = &v82[v96];
  v98 = (uint64_t *)&v83[v96];
  v100 = *v98;
  v99 = v98[1];
  *v97 = v100;
  v97[1] = v99;
  v101 = swift_bridgeObjectRelease();
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v183)(&v82[v7[7]], &v83[v7[7]], v186, v101);
  v26((uint64_t)&v82[v7[8]], (uint64_t)&v83[v7[8]], v25);
  v26((uint64_t)&v82[v7[9]], (uint64_t)&v83[v7[9]], v25);
  v102 = v7[10];
  v103 = &v82[v102];
  v104 = (uint64_t *)&v83[v102];
  v106 = *v104;
  v105 = v104[1];
  *v103 = v106;
  v103[1] = v105;
  swift_bridgeObjectRelease();
  v107 = v7[11];
  v108 = &v82[v107];
  v109 = (uint64_t *)&v83[v107];
  v111 = *v109;
  v110 = v109[1];
  *v108 = v111;
  v108[1] = v110;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v82[v7[12]] = *(_QWORD *)&v83[v7[12]];
  v82[v7[13]] = v83[v7[13]];
  v112 = v7[14];
  v113 = &v82[v112];
  v114 = (uint64_t *)&v83[v112];
  v116 = *v114;
  v115 = v114[1];
  *v113 = v116;
  v113[1] = v115;
  swift_bridgeObjectRelease();
  v117 = v7[15];
  v118 = &v82[v117];
  v119 = &v83[v117];
  v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v82[v117], 1, v45);
  v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v45);
  if (!v120)
  {
    v122 = *(_QWORD *)(v45 - 8);
    if (!v121)
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 40))(v118, v119, v45);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v118, v45);
    goto LABEL_29;
  }
  if (v121)
  {
LABEL_29:
    v123 = sub_1000BA294(&qword_100BCB338);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v118, v119, v45);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v45);
LABEL_30:
  v82[v7[16]] = v83[v7[16]];
  v124 = v7[17];
  v125 = &v82[v124];
  v126 = (uint64_t *)&v83[v124];
  v128 = *v126;
  v127 = v126[1];
  *v125 = v128;
  v125[1] = v127;
  swift_bridgeObjectRelease();
  v129 = v7[18];
  v130 = &v82[v129];
  v131 = (uint64_t *)&v83[v129];
  v133 = *v131;
  v132 = v131[1];
  *v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease();
  v134 = v7[19];
  v135 = &v82[v134];
  v136 = (uint64_t *)&v83[v134];
  v138 = *v136;
  v137 = v136[1];
  *v135 = v138;
  v135[1] = v137;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v82[v7[20]] = *(_QWORD *)&v83[v7[20]];
  swift_bridgeObjectRelease();
LABEL_31:
  v139 = a3[15];
  v140 = a1 + v139;
  v141 = a2 + v139;
  v142 = sub_1000BA294(&qword_100BD3380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 40))(v140, v141, v142);
  v143 = a3[16];
  v144 = a1 + v143;
  v145 = a2 + v143;
  v146 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 40))(v144, v145, v146);
  v147 = a3[17];
  v148 = a1 + v147;
  v149 = (uint64_t *)(a2 + v147);
  v150 = *v149;
  LOBYTE(v149) = *((_BYTE *)v149 + 8);
  v151 = *(_QWORD *)v148;
  v152 = *(_BYTE *)(v148 + 8);
  *(_QWORD *)v148 = v150;
  *(_BYTE *)(v148 + 8) = (_BYTE)v149;
  sub_1000B15F8(v151, v152);
  v153 = a3[18];
  v154 = a1 + v153;
  v155 = (uint64_t *)(a2 + v153);
  v156 = *v155;
  LOBYTE(v155) = *((_BYTE *)v155 + 8);
  v157 = *(_QWORD *)v154;
  v158 = *(_BYTE *)(v154 + 8);
  *(_QWORD *)v154 = v156;
  *(_BYTE *)(v154 + 8) = (_BYTE)v155;
  sub_1000B15F8(v157, v158);
  v159 = a3[19];
  v160 = a1 + v159;
  v161 = (uint64_t *)(a2 + v159);
  v162 = *v161;
  LOBYTE(v161) = *((_BYTE *)v161 + 8);
  v163 = *(_QWORD *)v160;
  v164 = *(_BYTE *)(v160 + 8);
  *(_QWORD *)v160 = v162;
  *(_BYTE *)(v160 + 8) = (_BYTE)v161;
  sub_1000B15F8(v163, v164);
  if (a1 != a2)
  {
    v165 = a3[20];
    v166 = (void *)(a1 + v165);
    v167 = (const void *)(a2 + v165);
    sub_100021A14(a1 + v165, &qword_100BC68C8);
    v168 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v167) == 1)
    {
      v169 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v166, v167, v169);
      swift_storeEnumTagMultiPayload(v166, v168, 1);
    }
    else
    {
      memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    }
  }
  v170 = a3[21];
  v171 = a1 + v170;
  v172 = a2 + v170;
  v173 = *(_QWORD *)(a1 + v170);
  *(_QWORD *)(a1 + v170) = *(_QWORD *)(a2 + v170);
  swift_release(v173);
  v174 = *(_QWORD *)(v171 + 8);
  *(_QWORD *)(v171 + 8) = *(_QWORD *)(v172 + 8);
  swift_release(v174);
  v175 = a3[22];
  v176 = (char *)(a1 + v175);
  v177 = (char *)(a2 + v175);
  LODWORD(v171) = _s7Weather24LocationCompositionStateOwet_0(a1 + v175, 1, v189);
  v178 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v189);
  if (!(_DWORD)v171)
  {
    if (!v178)
    {
      ((void (*)(char *, char *, uint64_t))v185)(v176, v177, v189);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v188 + 8))(v176, v189);
    goto LABEL_40;
  }
  if (v178)
  {
LABEL_40:
    v179 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v176, v177, v189);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v189);
LABEL_41:
  v180 = *(int *)(sub_1000BA294(&qword_100BDD670) + 28);
  v181 = *(_QWORD *)&v176[v180];
  *(_QWORD *)&v176[v180] = *(_QWORD *)&v177[v180];
  swift_release(v181);
  return a1;
}

uint64_t sub_1003B0698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B06A4);
}

uint64_t sub_1003B06A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  sub_1000E7004();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(&qword_100BC4E68);
  sub_100088FF0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_26:
    v8 = v4 + v11;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  sub_1000BA294(qword_100BC4E80);
  sub_100088FF0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[7];
    goto LABEL_26;
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    sub_1000BA294(&qword_100BCB330);
    sub_100088FF0();
    if (v9)
    {
      v7 = v16;
      v11 = a3[14];
    }
    else
    {
      sub_1000BA294(&qword_100BD3380);
      sub_100088FF0();
      if (v17)
      {
        v7 = v18;
        v11 = a3[15];
      }
      else
      {
        sub_1000BA294(&qword_100BDD668);
        sub_100088FF0();
        if (v19)
        {
          v7 = v20;
          v11 = a3[16];
        }
        else
        {
          sub_1000BA294(&qword_100BCD380);
          sub_100088FF0();
          if (v21)
          {
            v7 = v22;
            v11 = a3[20];
          }
          else
          {
            v7 = sub_1000BA294(&qword_100BDD670);
            v11 = a3[22];
          }
        }
      }
    }
    goto LABEL_26;
  }
  v14 = *(_QWORD *)(v4 + a3[11]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1003B07F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B07FC);
}

void sub_1003B07FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  sub_1000E7004();
  sub_10009D2E8();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    sub_1000BA294(&qword_100BC4E68);
    sub_10009D2E8();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      sub_1000BA294(qword_100BC4E80);
      sub_10009D2E8();
      if (v14)
      {
        v9 = v15;
        v13 = a4[7];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(v5 + a4[11]) = (v4 - 1);
          return;
        }
        sub_1000BA294(&qword_100BCB330);
        sub_10009D2E8();
        if (v11)
        {
          v9 = v16;
          v13 = a4[14];
        }
        else
        {
          sub_1000BA294(&qword_100BD3380);
          sub_10009D2E8();
          if (v17)
          {
            v9 = v18;
            v13 = a4[15];
          }
          else
          {
            sub_1000BA294(&qword_100BDD668);
            sub_10009D2E8();
            if (v19)
            {
              v9 = v20;
              v13 = a4[16];
            }
            else
            {
              sub_1000BA294(&qword_100BCD380);
              sub_10009D2E8();
              if (v21)
              {
                v9 = v22;
                v13 = a4[20];
              }
              else
              {
                v9 = sub_1000BA294(&qword_100BDD670);
                v13 = a4[22];
              }
            }
          }
        }
      }
    }
    v10 = v5 + v13;
  }
  _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
}

uint64_t sub_1003B0944()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = (int *)sub_1000D1774();
  v2 = *((_QWORD *)v1 - 1);
  v44 = *(unsigned __int8 *)(v2 + 80);
  v45 = v0;
  v42 = *(_QWORD *)(v2 + 64);
  v43 = (v44 + 16) & ~v44;
  v3 = v0 + v43;
  v4 = type metadata accessor for Date(0);
  v41 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v41(v0 + v43, v4);
  v5 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_1000BA548(v0 + v43 + v5[5]);
  sub_1000BA548(v0 + v43 + v5[6]);
  v6 = v0 + v43 + v5[7];
  v7 = type metadata accessor for TimeZone(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v3 + v5[8];
  v10 = sub_1000BA294(&qword_100BC4E68);
  sub_1000DCE44(v9);
  sub_1000DCE44(v3 + v5[9]);
  sub_1000BA548(v3 + v5[10]);
  sub_1000BA548(v3 + v5[11]);
  sub_1000BA548(v3 + v5[14]);
  v11 = v3 + v5[15];
  v12 = type metadata accessor for Precipitation(0);
  if (!sub_1000BEE54(v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  sub_1000BA548(v3 + v5[17]);
  sub_1000BA548(v3 + v5[18]);
  sub_1000BA548(v3 + v5[19]);
  swift_bridgeObjectRelease();
  sub_1000DCE44(v3 + v1[5]);
  sub_1000DCE44(v3 + v1[6]);
  v13 = v3 + v1[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v10))
    sub_1000DCE44(v13);
  swift_release(*(_QWORD *)(v3 + v1[11] + 8));
  v14 = (_QWORD *)(v3 + v1[14]);
  swift_release(*v14);
  swift_release(v14[1]);
  v15 = (uint64_t)v14 + *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v5))
  {
    sub_100098C94(v15, v16, v17, v18, v19, v20, v21, v22, v40, v41);
    sub_1000BA548(v15 + v5[5]);
    v23 = sub_1000BA548(v15 + v5[6]);
    ((void (*)(uint64_t, uint64_t, double))v8)(v15 + v5[7], v7, v23);
    sub_1000DCE44(v15 + v5[8]);
    sub_1000DCE44(v15 + v5[9]);
    sub_1000BA548(v15 + v5[10]);
    sub_1000BA548(v15 + v5[11]);
    sub_1000BA548(v15 + v5[14]);
    v24 = v15 + v5[15];
    if (!sub_1000BEE54(v24))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v24, v12);
    sub_1000BA548(v15 + v5[17]);
    sub_1000BA548(v15 + v5[18]);
    sub_1000BA548(v15 + v5[19]);
    swift_bridgeObjectRelease();
  }
  v25 = sub_1000BA294(&qword_100BD3380);
  sub_1000989A0(v25);
  v26 = sub_1000BA294(&qword_100BDD668);
  sub_1000989A0(v26);
  sub_1000C1E14(v1[17]);
  sub_1000C1E14(v1[18]);
  sub_1000C1E14(v1[19]);
  v27 = (_QWORD *)(v3 + v1[20]);
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v27) == 1)
  {
    v28 = type metadata accessor for ColorSchemeContrast(0);
    sub_1000989A0(v28);
  }
  else
  {
    swift_release(*v27);
  }
  v29 = (_QWORD *)(v3 + v1[21]);
  swift_release(*v29);
  swift_release(v29[1]);
  v30 = v3 + v1[22];
  if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v4))
    sub_100098C94(v30, v31, v32, v33, v34, v35, v36, v37, v40, v41);
  v38 = sub_1000BA294(&qword_100BDD670);
  swift_release(*(_QWORD *)(v30 + *(int *)(v38 + 28)));
  return swift_deallocObject(v45, v43 + v42, v44 | 7);
}

void sub_1003B0D20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000D1774() - 8) + 80);
  sub_1003AC5C0(v0 + ((v1 + 16) & ~v1));
}

void sub_1003B0D48(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1003AC83C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003B0D5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = qword_100BDD850;
  if (!qword_100BDD850)
  {
    v1 = sub_100075EB0(&qword_100BDD788);
    v2 = sub_100075EB0(&qword_100BDD778);
    v3 = sub_100075EB0(&qword_100BDD770);
    v4 = type metadata accessor for DailyForecastRowViewButtonStyle(255);
    sub_10003D2DC(&qword_100BDD7A0, &qword_100BDD770);
    v6 = v5;
    sub_10000F1C8(&qword_100BDD7A8, type metadata accessor for DailyForecastRowViewButtonStyle);
    v9 = v3;
    v10 = v4;
    v11 = v6;
    v12 = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v9 = v2;
    v10 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD850);
  }
  return result;
}

BOOL NotificationAuthorizationState.isAllowed.getter(char a1)
{
  return a1 == 1;
}

Weather::NotificationAuthorizationState_optional __swiftcall NotificationAuthorizationState.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B59F20, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return (Weather::NotificationAuthorizationState_optional)4;
  else
    return (Weather::NotificationAuthorizationState_optional)v3;
}

uint64_t NotificationAuthorizationState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003B0F24 + 4 * byte_100999E50[a1]))(0x7265746544746F6ELL, 0xED000064656E696DLL);
}

uint64_t sub_1003B0F24()
{
  return 0x6465776F6C6C61;
}

uint64_t sub_1003B0F3C()
{
  return 0x6465696E6564;
}

unint64_t sub_1003B0F50()
{
  return 0xD000000000000011;
}

void sub_1003B0F6C()
{
  unsigned __int8 *v0;

  sub_1004A7714(*v0);
}

void sub_1003B0F74()
{
  sub_1001D8438();
}

void sub_1003B0F7C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1001DA124(a1, *v1);
}

Weather::NotificationAuthorizationState_optional sub_1003B0F84@<W0>(Swift::String *a1@<X0>, Weather::NotificationAuthorizationState_optional *a2@<X8>)
{
  Weather::NotificationAuthorizationState_optional result;

  result.value = NotificationAuthorizationState.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_1003B0FB0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = NotificationAuthorizationState.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003B0FD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10009B650(*a1, *a2);
}

uint64_t sub_1003B0FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003B11EC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1003B1040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003B11EC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1003B1090()
{
  unint64_t result;

  result = qword_100BDD868;
  if (!qword_100BDD868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotificationAuthorizationState, &type metadata for NotificationAuthorizationState);
    atomic_store(result, (unint64_t *)&qword_100BDD868);
  }
  return result;
}

uint64_t sub_1003B10CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B11B0();
  return ShortDescribable.description.getter(a1, v2);
}

uint64_t storeEnumTagSinglePayload for NotificationAuthorizationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003B1140 + 4 * byte_100999E5D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003B1174 + 4 * byte_100999E58[v4]))();
}

uint64_t sub_1003B1174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B117C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B1184);
  return result;
}

uint64_t sub_1003B1190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B1198);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003B119C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B11A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1003B11B0()
{
  unint64_t result;

  result = qword_100BDD878;
  if (!qword_100BDD878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotificationAuthorizationState, &type metadata for NotificationAuthorizationState);
    atomic_store(result, (unint64_t *)&qword_100BDD878);
  }
  return result;
}

unint64_t sub_1003B11EC()
{
  unint64_t result;

  result = qword_100BDD880;
  if (!qword_100BDD880)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotificationAuthorizationState, &type metadata for NotificationAuthorizationState);
    atomic_store(result, (unint64_t *)&qword_100BDD880);
  }
  return result;
}

_QWORD *sub_1003B1228(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t active;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t, __n128);
  __n128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    v14 = type metadata accessor for DetailHeroChartLollipopModel(0);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v99 = v14;
    if (swift_getEnumCaseMultiPayload(v13) == 1)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v16 = *(int *)(active + 20);
      v17 = &v12[v16];
      v18 = &v13[v16];
      v19 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v17[v20[5]] = *(_QWORD *)&v18[v20[5]];
      *(_QWORD *)&v17[v20[6]] = *(_QWORD *)&v18[v20[6]];
      *(_QWORD *)&v17[v20[7]] = *(_QWORD *)&v18[v20[7]];
      v21 = *(int *)(active + 24);
      v22 = &v12[v21];
      v23 = &v13[v21];
      v24 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23);
      v97 = EnumCaseMultiPayload;
      if (EnumCaseMultiPayload == 2)
      {
        v38 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v38;
        v94 = v24;
        v39 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v40 = v39[5];
        v90 = &v23[v40];
        v91 = &v22[v40];
        v41 = type metadata accessor for AttributedString(0);
        v42 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v41 - 8) + 16);
        v43 = swift_bridgeObjectRetain(v38);
        v42(v91, v90, v41, v43);
        v44 = v39[6];
        v45 = &v22[v44];
        v46 = &v23[v44];
        v47 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = v47;
        v48 = v39[7];
        v49 = &v22[v48];
        v50 = &v23[v48];
        v92 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v92;
        v51 = v39[8];
        v52 = &v22[v51];
        v53 = &v23[v51];
        v27 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v27;
        v54 = v39[9];
        v55 = &v22[v54];
        v56 = &v23[v54];
        v28 = *((_QWORD *)v56 + 1);
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *((_QWORD *)v55 + 1) = v28;
        v57 = v39[10];
        v58 = &v22[v57];
        v59 = &v23[v57];
        v29 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v29;
        v60 = v39[11];
        v24 = v94;
        v22[v60] = v23[v60];
        swift_bridgeObjectRetain(v47);
        v26 = v92;
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v27 = *((_QWORD *)v23 + 1);
          *(_QWORD *)v22 = *(_QWORD *)v23;
          *((_QWORD *)v22 + 1) = v27;
          v28 = *((_QWORD *)v23 + 3);
          *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
          *((_QWORD *)v22 + 3) = v28;
          v29 = *((_QWORD *)v23 + 5);
          *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
          *((_QWORD *)v22 + 5) = v29;
          goto LABEL_13;
        }
        v26 = *((_QWORD *)v23 + 1);
        *(_QWORD *)v22 = *(_QWORD *)v23;
        *((_QWORD *)v22 + 1) = v26;
        v27 = *((_QWORD *)v23 + 3);
        *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
        *((_QWORD *)v22 + 3) = v27;
        v28 = *((_QWORD *)v23 + 5);
        *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
        *((_QWORD *)v22 + 5) = v28;
        v29 = *((_QWORD *)v23 + 7);
        *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
        *((_QWORD *)v22 + 7) = v29;
        v22[64] = v23[64];
        v22[65] = v23[65];
      }
      swift_bridgeObjectRetain(v26);
LABEL_13:
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v29);
      swift_storeEnumTagMultiPayload(v22, v24, v97);
      v61 = 1;
LABEL_18:
      swift_storeEnumTagMultiPayload(v12, v99, v61);
      v85 = *(int *)(a3 + 24);
      v86 = (char *)v4 + v85;
      v87 = (char *)a2 + v85;
      v88 = sub_1000BA294(&qword_100BC37F8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
      return v4;
    }
    v31 = type metadata accessor for LollipopDetailViewModel(0);
    v32 = swift_getEnumCaseMultiPayload(v13);
    v33 = v32;
    if ((_DWORD)v32 == 2)
    {
      v62 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v62;
      v98 = v31;
      v63 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v64 = v63[5];
      v93 = &v13[v64];
      v95 = &v12[v64];
      v65 = type metadata accessor for AttributedString(0);
      v66 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v65 - 8) + 16);
      v67 = swift_bridgeObjectRetain(v62);
      v66(v95, v93, v65, v67);
      v68 = v63[6];
      v69 = &v12[v68];
      v70 = &v13[v68];
      v71 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = *(_QWORD *)v70;
      *((_QWORD *)v69 + 1) = v71;
      v72 = v63[7];
      v73 = &v12[v72];
      v74 = &v13[v72];
      v96 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v96;
      v75 = v63[8];
      v76 = &v12[v75];
      v77 = &v13[v75];
      v35 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v35;
      v78 = v63[9];
      v79 = &v12[v78];
      v80 = &v13[v78];
      v36 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v36;
      v81 = v63[10];
      v82 = &v12[v81];
      v83 = &v13[v81];
      v37 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v37;
      v84 = v63[11];
      v31 = v98;
      v12[v84] = v13[v84];
      swift_bridgeObjectRetain(v71);
      v34 = v96;
    }
    else
    {
      if ((_DWORD)v32 != 1)
      {
        v35 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v35;
        v36 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v36;
        v37 = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        *((_QWORD *)v12 + 5) = v37;
        goto LABEL_17;
      }
      v34 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v34;
      v35 = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = v35;
      v36 = *((_QWORD *)v13 + 5);
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 5) = v36;
      v37 = *((_QWORD *)v13 + 7);
      *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
      *((_QWORD *)v12 + 7) = v37;
      v12[64] = v13[64];
      v12[65] = v13[65];
    }
    swift_bridgeObjectRetain(v34);
LABEL_17:
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    swift_storeEnumTagMultiPayload(v12, v31, v33);
    v61 = 0;
    goto LABEL_18;
  }
  v30 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_1003B16C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t active;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v6 = v4 + *(int *)(active + 20);
    v7 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v4 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      v9 = v4 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      v10 = type metadata accessor for AttributedString(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      break;
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = sub_1000BA294(&qword_100BC37F8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_1003B1880(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t active;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v96 = v12;
  if (swift_getEnumCaseMultiPayload(v11) != 1)
  {
    v29 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11);
    v31 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v60 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v60;
      v95 = v29;
      v61 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v62 = v61[5];
      v93 = &v10[v62];
      v63 = &v11[v62];
      v64 = type metadata accessor for AttributedString(0);
      v65 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v64 - 8) + 16);
      v66 = swift_bridgeObjectRetain(v60);
      v65(v93, v63, v64, v66);
      v67 = v61[6];
      v68 = &v10[v67];
      v69 = &v11[v67];
      v70 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v70;
      v71 = v61[7];
      v72 = &v10[v71];
      v73 = &v11[v71];
      v74 = *((_QWORD *)v73 + 1);
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *((_QWORD *)v72 + 1) = v74;
      v75 = v61[8];
      v76 = &v10[v75];
      v77 = &v11[v75];
      v33 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v33;
      v78 = v61[9];
      v79 = &v10[v78];
      v80 = &v11[v78];
      v34 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v34;
      v81 = v61[10];
      v82 = &v10[v81];
      v83 = &v11[v81];
      v35 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v35;
      v84 = v61[11];
      v29 = v95;
      v10[v84] = v11[v84];
      swift_bridgeObjectRetain(v70);
      v32 = v74;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v33 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v33;
        v34 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = v34;
        v35 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
        *((_QWORD *)v10 + 5) = v35;
        goto LABEL_15;
      }
      v32 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v32;
      v33 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v33;
      v34 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 5) = v34;
      v35 = *((_QWORD *)v11 + 7);
      *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
      *((_QWORD *)v10 + 7) = v35;
      v10[64] = v11[64];
      v10[65] = v11[65];
    }
    swift_bridgeObjectRetain(v32);
LABEL_15:
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    swift_storeEnumTagMultiPayload(v10, v29, v31);
    v59 = 0;
    goto LABEL_16;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  v14 = *(int *)(active + 20);
  v15 = &v10[v14];
  v16 = &v11[v14];
  v17 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)&v15[v18[5]] = *(_QWORD *)&v16[v18[5]];
  *(_QWORD *)&v15[v18[6]] = *(_QWORD *)&v16[v18[6]];
  *(_QWORD *)&v15[v18[7]] = *(_QWORD *)&v16[v18[7]];
  v19 = *(int *)(active + 24);
  v20 = &v10[v19];
  v21 = &v11[v19];
  v22 = type metadata accessor for LollipopDetailViewModel(0);
  v23 = swift_getEnumCaseMultiPayload(v21);
  v24 = v23;
  if ((_DWORD)v23 == 2)
  {
    v36 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v36;
    v94 = v22;
    v37 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v38 = v37[5];
    v90 = &v21[v38];
    v91 = &v20[v38];
    v39 = type metadata accessor for AttributedString(0);
    v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
    v41 = swift_bridgeObjectRetain(v36);
    v40(v91, v90, v39, v41);
    v42 = v37[6];
    v43 = &v20[v42];
    v44 = &v21[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = v37[7];
    v47 = &v20[v46];
    v48 = &v21[v46];
    v92 = *((_QWORD *)v48 + 1);
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v92;
    v49 = v37[8];
    v50 = &v20[v49];
    v51 = &v21[v49];
    v26 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v26;
    v52 = v37[9];
    v53 = &v20[v52];
    v54 = &v21[v52];
    v27 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v27;
    v55 = v37[10];
    v56 = &v20[v55];
    v57 = &v21[v55];
    v28 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v28;
    v58 = v37[11];
    v22 = v94;
    v20[v58] = v21[v58];
    swift_bridgeObjectRetain(v45);
    v25 = v92;
  }
  else
  {
    if ((_DWORD)v23 != 1)
    {
      v26 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v26;
      v27 = *((_QWORD *)v21 + 3);
      *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
      *((_QWORD *)v20 + 3) = v27;
      v28 = *((_QWORD *)v21 + 5);
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 5) = v28;
      goto LABEL_11;
    }
    v25 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v25;
    v26 = *((_QWORD *)v21 + 3);
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 3) = v26;
    v27 = *((_QWORD *)v21 + 5);
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 5) = v27;
    v28 = *((_QWORD *)v21 + 7);
    *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
    *((_QWORD *)v20 + 7) = v28;
    v20[64] = v21[64];
    v20[65] = v21[65];
  }
  swift_bridgeObjectRetain(v25);
LABEL_11:
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v59 = 1;
LABEL_16:
  swift_storeEnumTagMultiPayload(v10, v96, v59);
  v85 = *(int *)(a3 + 24);
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
  return a1;
}

_QWORD *sub_1003B1CF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t active;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a2[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v8 = a2[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  v9 = a2[7];
  a1[7] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_1000215BC((uint64_t)a1 + v10, type metadata accessor for DetailHeroChartLollipopModel);
    v13 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v96 = v13;
      v98 = a3;
      *(_QWORD *)v11 = *(_QWORD *)v12;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v15 = *(int *)(active + 20);
      v16 = &v11[v15];
      v17 = &v12[v15];
      v18 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v16[v19[5]] = *(_QWORD *)&v17[v19[5]];
      *(_QWORD *)&v16[v19[6]] = *(_QWORD *)&v17[v19[6]];
      *(_QWORD *)&v16[v19[7]] = *(_QWORD *)&v17[v19[7]];
      v20 = *(int *)(active + 24);
      v21 = &v11[v20];
      v22 = &v12[v20];
      v23 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22);
      v25 = EnumCaseMultiPayload;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v21 = *(_QWORD *)v22;
        v36 = *((_QWORD *)v22 + 1);
        *((_QWORD *)v21 + 1) = v36;
        v95 = v23;
        v37 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v38 = v37[5];
        v90 = &v22[v38];
        v91 = &v21[v38];
        v39 = type metadata accessor for AttributedString(0);
        v40 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v39 - 8) + 16);
        v41 = swift_bridgeObjectRetain(v36);
        v40(v91, v90, v39, v41);
        v42 = v37[6];
        v43 = &v21[v42];
        v44 = &v22[v42];
        *(_QWORD *)v43 = *(_QWORD *)v44;
        v45 = *((_QWORD *)v44 + 1);
        *((_QWORD *)v43 + 1) = v45;
        v46 = v37[7];
        v47 = &v21[v46];
        v48 = &v22[v46];
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v92 = *((_QWORD *)v48 + 1);
        *((_QWORD *)v47 + 1) = v92;
        v49 = v37[8];
        v50 = &v21[v49];
        v51 = &v22[v49];
        *(_QWORD *)v50 = *(_QWORD *)v51;
        v27 = *((_QWORD *)v51 + 1);
        *((_QWORD *)v50 + 1) = v27;
        v52 = v37[9];
        v53 = &v21[v52];
        v54 = &v22[v52];
        *(_QWORD *)v53 = *(_QWORD *)v54;
        v28 = *((_QWORD *)v54 + 1);
        *((_QWORD *)v53 + 1) = v28;
        v55 = v37[10];
        v56 = &v21[v55];
        v57 = &v22[v55];
        *(_QWORD *)v56 = *(_QWORD *)v57;
        v29 = *((_QWORD *)v57 + 1);
        *((_QWORD *)v56 + 1) = v29;
        v58 = v37[11];
        v23 = v95;
        v21[v58] = v22[v58];
        swift_bridgeObjectRetain(v45);
        v26 = v92;
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v27 = *((_QWORD *)v22 + 1);
          *((_QWORD *)v21 + 1) = v27;
          *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
          v28 = *((_QWORD *)v22 + 3);
          *((_QWORD *)v21 + 3) = v28;
          *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
          v29 = *((_QWORD *)v22 + 5);
          *((_QWORD *)v21 + 5) = v29;
          goto LABEL_12;
        }
        *(_QWORD *)v21 = *(_QWORD *)v22;
        v26 = *((_QWORD *)v22 + 1);
        *((_QWORD *)v21 + 1) = v26;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        v27 = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 3) = v27;
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        v28 = *((_QWORD *)v22 + 5);
        *((_QWORD *)v21 + 5) = v28;
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        v29 = *((_QWORD *)v22 + 7);
        *((_QWORD *)v21 + 7) = v29;
        v21[64] = v22[64];
        v21[65] = v22[65];
      }
      swift_bridgeObjectRetain(v26);
LABEL_12:
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v29);
      swift_storeEnumTagMultiPayload(v21, v23, v25);
      v59 = 1;
      v13 = v96;
      a3 = v98;
LABEL_17:
      swift_storeEnumTagMultiPayload(v11, v13, v59);
      goto LABEL_18;
    }
    v94 = type metadata accessor for LollipopDetailViewModel(0);
    v30 = swift_getEnumCaseMultiPayload(v12);
    v31 = v30;
    if ((_DWORD)v30 == 2)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      v97 = v13;
      v60 = *((_QWORD *)v12 + 1);
      *((_QWORD *)v11 + 1) = v60;
      v99 = a3;
      v61 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v62 = v61[5];
      v93 = &v11[v62];
      v63 = &v12[v62];
      v64 = type metadata accessor for AttributedString(0);
      v65 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v64 - 8) + 16);
      v66 = swift_bridgeObjectRetain(v60);
      v65(v93, v63, v64, v66);
      v67 = v61[6];
      v68 = &v11[v67];
      v69 = &v12[v67];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      v70 = *((_QWORD *)v69 + 1);
      *((_QWORD *)v68 + 1) = v70;
      v71 = v61[7];
      v72 = &v11[v71];
      v73 = &v12[v71];
      *(_QWORD *)v72 = *(_QWORD *)v73;
      v74 = *((_QWORD *)v73 + 1);
      *((_QWORD *)v72 + 1) = v74;
      v75 = v61[8];
      v76 = &v11[v75];
      v77 = &v12[v75];
      *(_QWORD *)v76 = *(_QWORD *)v77;
      v33 = *((_QWORD *)v77 + 1);
      *((_QWORD *)v76 + 1) = v33;
      v78 = v61[9];
      v79 = &v11[v78];
      v80 = &v12[v78];
      *(_QWORD *)v79 = *(_QWORD *)v80;
      v34 = *((_QWORD *)v80 + 1);
      *((_QWORD *)v79 + 1) = v34;
      v81 = v61[10];
      v82 = &v11[v81];
      v83 = &v12[v81];
      *(_QWORD *)v82 = *(_QWORD *)v83;
      v35 = *((_QWORD *)v83 + 1);
      *((_QWORD *)v82 + 1) = v35;
      v84 = v61[11];
      a3 = v99;
      v11[v84] = v12[v84];
      swift_bridgeObjectRetain(v70);
      v32 = v74;
      v13 = v97;
    }
    else
    {
      if ((_DWORD)v30 != 1)
      {
        *(_QWORD *)v11 = *(_QWORD *)v12;
        v33 = *((_QWORD *)v12 + 1);
        *((_QWORD *)v11 + 1) = v33;
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        v34 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v11 + 3) = v34;
        *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
        v35 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v11 + 5) = v35;
        goto LABEL_16;
      }
      *(_QWORD *)v11 = *(_QWORD *)v12;
      v32 = *((_QWORD *)v12 + 1);
      *((_QWORD *)v11 + 1) = v32;
      *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
      v33 = *((_QWORD *)v12 + 3);
      *((_QWORD *)v11 + 3) = v33;
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      v34 = *((_QWORD *)v12 + 5);
      *((_QWORD *)v11 + 5) = v34;
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      v35 = *((_QWORD *)v12 + 7);
      *((_QWORD *)v11 + 7) = v35;
      v11[64] = v12[64];
      v11[65] = v12[65];
    }
    swift_bridgeObjectRetain(v32);
LABEL_16:
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    swift_storeEnumTagMultiPayload(v11, v94, v31);
    v59 = 0;
    goto LABEL_17;
  }
LABEL_18:
  v85 = *(int *)(a3 + 24);
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
  return a1;
}

_OWORD *sub_1003B2298(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t active;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    *v9 = *v10;
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v13 = *(int *)(active + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    v17 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(_QWORD *)&v14[v17[5]] = *(_QWORD *)&v15[v17[5]];
    *(_QWORD *)&v14[v17[6]] = *(_QWORD *)&v15[v17[6]];
    *(_QWORD *)&v14[v17[7]] = *(_QWORD *)&v15[v17[7]];
    v18 = *(int *)(active + 24);
    v19 = (_OWORD *)((char *)v9 + v18);
    v20 = (_OWORD *)((char *)v10 + v18);
    v21 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v20) == 2)
    {
      *v19 = *v20;
      v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v23 = v22[5];
      v24 = (char *)v19 + v23;
      v41 = v11;
      v25 = v3;
      v26 = (char *)v20 + v23;
      v27 = type metadata accessor for AttributedString(0);
      v28 = v26;
      v3 = v25;
      v11 = v41;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v28, v27);
      *(_OWORD *)((char *)v19 + v22[6]) = *(_OWORD *)((char *)v20 + v22[6]);
      *(_OWORD *)((char *)v19 + v22[7]) = *(_OWORD *)((char *)v20 + v22[7]);
      *(_OWORD *)((char *)v19 + v22[8]) = *(_OWORD *)((char *)v20 + v22[8]);
      *(_OWORD *)((char *)v19 + v22[9]) = *(_OWORD *)((char *)v20 + v22[9]);
      *(_OWORD *)((char *)v19 + v22[10]) = *(_OWORD *)((char *)v20 + v22[10]);
      *((_BYTE *)v19 + v22[11]) = *((_BYTE *)v20 + v22[11]);
      swift_storeEnumTagMultiPayload(v19, v21, 2);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v35 = 1;
  }
  else
  {
    v29 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v10) == 2)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v30 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v31 = v30[5];
      v32 = (char *)v9 + v31;
      v33 = (char *)v10 + v31;
      v34 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)((char *)v9 + v30[6]) = *(_OWORD *)((char *)v10 + v30[6]);
      *(_OWORD *)((char *)v9 + v30[7]) = *(_OWORD *)((char *)v10 + v30[7]);
      *(_OWORD *)((char *)v9 + v30[8]) = *(_OWORD *)((char *)v10 + v30[8]);
      *(_OWORD *)((char *)v9 + v30[9]) = *(_OWORD *)((char *)v10 + v30[9]);
      *(_OWORD *)((char *)v9 + v30[10]) = *(_OWORD *)((char *)v10 + v30[10]);
      *((_BYTE *)v9 + v30[11]) = *((_BYTE *)v10 + v30[11]);
      swift_storeEnumTagMultiPayload(v9, v29, 2);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    v35 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v35);
  v36 = *(int *)(v3 + 24);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  return a1;
}

_QWORD *sub_1003B2594(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t active;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_1000215BC((uint64_t)a1 + v10, type metadata accessor for DetailHeroChartLollipopModel);
    v13 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      *v11 = *v12;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v15 = *(int *)(active + 20);
      v16 = (char *)v11 + v15;
      v17 = (char *)v12 + v15;
      v18 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      v19 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v16[v19[5]] = *(_QWORD *)&v17[v19[5]];
      *(_QWORD *)&v16[v19[6]] = *(_QWORD *)&v17[v19[6]];
      *(_QWORD *)&v16[v19[7]] = *(_QWORD *)&v17[v19[7]];
      v20 = *(int *)(active + 24);
      v21 = (_OWORD *)((char *)v11 + v20);
      v22 = (_OWORD *)((char *)v12 + v20);
      v23 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v22) == 2)
      {
        *v21 = *v22;
        v24 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v25 = v24[5];
        v26 = (char *)v21 + v25;
        v43 = a3;
        v27 = v13;
        v28 = (char *)v22 + v25;
        v29 = type metadata accessor for AttributedString(0);
        v30 = v28;
        v13 = v27;
        a3 = v43;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v30, v29);
        *(_OWORD *)((char *)v21 + v24[6]) = *(_OWORD *)((char *)v22 + v24[6]);
        *(_OWORD *)((char *)v21 + v24[7]) = *(_OWORD *)((char *)v22 + v24[7]);
        *(_OWORD *)((char *)v21 + v24[8]) = *(_OWORD *)((char *)v22 + v24[8]);
        *(_OWORD *)((char *)v21 + v24[9]) = *(_OWORD *)((char *)v22 + v24[9]);
        *(_OWORD *)((char *)v21 + v24[10]) = *(_OWORD *)((char *)v22 + v24[10]);
        *((_BYTE *)v21 + v24[11]) = *((_BYTE *)v22 + v24[11]);
        swift_storeEnumTagMultiPayload(v21, v23, 2);
      }
      else
      {
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      v37 = 1;
    }
    else
    {
      v31 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v12) == 2)
      {
        *(_OWORD *)v11 = *(_OWORD *)v12;
        v32 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v33 = v32[5];
        v34 = (char *)v11 + v33;
        v35 = (char *)v12 + v33;
        v36 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        *(_OWORD *)((char *)v11 + v32[6]) = *(_OWORD *)((char *)v12 + v32[6]);
        *(_OWORD *)((char *)v11 + v32[7]) = *(_OWORD *)((char *)v12 + v32[7]);
        *(_OWORD *)((char *)v11 + v32[8]) = *(_OWORD *)((char *)v12 + v32[8]);
        *(_OWORD *)((char *)v11 + v32[9]) = *(_OWORD *)((char *)v12 + v32[9]);
        *(_OWORD *)((char *)v11 + v32[10]) = *(_OWORD *)((char *)v12 + v32[10]);
        *((_BYTE *)v11 + v32[11]) = *((_BYTE *)v12 + v32[11]);
        swift_storeEnumTagMultiPayload(v11, v31, 2);
      }
      else
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v37);
  }
  v38 = *(int *)(a3 + 24);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t sub_1003B28D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B28E4);
}

uint64_t sub_1003B28E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BC37F8);
      v10 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1003B2980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B298C);
}

uint64_t sub_1003B298C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for DetailHeroChartLollipopModel(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BC37F8);
      v10 = *(int *)(a4 + 24);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DetailHeroChartHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDD8E0;
  if (!qword_100BDD8E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetailHeroChartHeaderView);
  return result;
}

void sub_1003B2A5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = "@";
  v2 = type metadata accessor for DetailHeroChartLollipopModel(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100158880(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_1003B2AEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB2DF0, 1);
}

void sub_1003B2AFC(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];

  v3 = sub_1000BA294(&qword_100BDD920);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)v5 = static Alignment.topLeading.getter(v6);
  *((_QWORD *)v5 + 1) = v7;
  v8 = sub_1000BA294(&qword_100BDD928);
  v9 = sub_1003B2C1C(v1, &v5[*(int *)(v8 + 44)]);
  v10 = static Edge.Set.horizontal.getter(v9);
  swift_beginAccess(&unk_100BDE048, v21, 1, 0);
  v11 = sub_1003BD550();
  v12 = EdgeInsets.init(_all:)(v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10003773C((uint64_t)v5, a1, &qword_100BDD920);
  v19 = a1 + *(int *)(sub_1000BA294(&qword_100BDD930) + 36);
  *(_BYTE *)v19 = v10;
  *(double *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  sub_100021A14((uint64_t)v5, &qword_100BDD920);
}

uint64_t sub_1003B2C1C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  uint64_t v45;
  double v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t OpaqueTypeConformance2;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t active;
  uint64_t v82;
  char *v83;
  double *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _BYTE v108[488];
  double v109[61];
  _BYTE v110[416];
  uint64_t v111;
  double v112;
  char v113;
  double v114;
  char v115;
  double v116;
  char v117;
  double v118;
  char v119;
  double v120;
  char v121;
  double v122;
  char v123;
  __int128 v124;
  _BYTE v125[352];

  v103 = a2;
  v102 = sub_1000BA294(&qword_100BDD938);
  v86 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v83 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v85 = (char *)&v78 - v5;
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  __chkstk_darwin(active);
  v84 = (double *)((char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_1000BA294(&qword_100BDD940);
  __chkstk_darwin(v95);
  v100 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for LollipopDetailView(0);
  __chkstk_darwin(v97);
  v94 = (uint64_t)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_1000BA294(&qword_100BDD948);
  __chkstk_darwin(v98);
  v79 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v78 - v11;
  v12 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v12);
  v80 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BDD950);
  __chkstk_darwin(v14);
  v101 = (uint64_t)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v99 = (char *)&v78 - v17;
  v92 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v92);
  v91 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - v20;
  v90 = sub_1000BA294(&qword_100BDD958);
  v105 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v96 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v89 = (char *)&v78 - v24;
  __chkstk_darwin(v25);
  v104 = (char *)&v78 - v26;
  v88 = static HorizontalAlignment.leading.getter(v27);
  sub_1003B34C8(a1);
  swift_beginAccess(&unk_100BF4A60, &v111, 1, 0);
  v28 = sub_1005DD500();
  v87 = type metadata accessor for DetailHeroChartHeaderView(0);
  v93 = a1;
  v29 = sub_1000BA294(&qword_100BC37F8);
  v30 = ScaledMetric.wrappedValue.getter(v109, v29);
  v31 = v28 * v109[0];
  v32 = static Alignment.center.getter(v30);
  v34 = v33;
  v110[360] = 0;
  memcpy(&v110[7], v125, 0x160uLL);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v112, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v31, 0, 0, 1, 0, 1, v32, v34);
  v110[408] = v113;
  v110[400] = v115;
  v110[392] = v117;
  v110[384] = v119;
  v110[376] = v121;
  v110[368] = v123;
  *(_QWORD *)&v109[0] = v88;
  v109[1] = 0.0;
  LOBYTE(v109[2]) = 0;
  memcpy((char *)&v109[2] + 1, v110, 0x167uLL);
  v109[47] = v112;
  LOBYTE(v109[48]) = v113;
  v109[49] = v114;
  LOBYTE(v109[50]) = v115;
  v109[51] = v116;
  LOBYTE(v109[52]) = v117;
  v109[53] = v118;
  LOBYTE(v109[54]) = v119;
  v109[55] = v120;
  LOBYTE(v109[56]) = v121;
  v109[57] = v122;
  LOBYTE(v109[58]) = v123;
  *(_OWORD *)&v109[59] = v124;
  v35 = (uint64_t)v93 + *(int *)(v87 + 20);
  sub_100095B78(v35, (uint64_t)v21, type metadata accessor for DetailHeroChartLollipopModel);
  v36 = swift_getEnumCaseMultiPayload(v21) == 1;
  sub_1000215BC((uint64_t)v21, type metadata accessor for DetailHeroChartLollipopModel);
  v37 = sub_1000BA294(&qword_100BDD960);
  v38 = sub_1003B4028();
  v39 = v89;
  View.isHidden(_:defaultAccessibilityHidden:)(v36, 0, v37, v38);
  memcpy(v108, v109, sizeof(v108));
  sub_1003B40AC((uint64_t)v108);
  v41 = v104;
  v40 = v105;
  v42 = v90;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v39, v90);
  v43 = v91;
  sub_100095B78(v35, v91, type metadata accessor for DetailHeroChartLollipopModel);
  if (swift_getEnumCaseMultiPayload(v43) == 1)
  {
    v44 = v84;
    sub_10007C77C(v43, (uint64_t)v84, type metadata accessor for DetailHeroChartActiveLollipopModel);
    v45 = v94;
    sub_100095B78((uint64_t)v44 + *(int *)(active + 24), v94, type metadata accessor for LollipopDetailViewModel);
    v46 = *v44;
    v47 = sub_1003B41A4();
    v48 = v83;
    v49 = v97;
    View.offsetXWithinBounds(_:)(v97, v47, v46);
    sub_1000215BC(v45, type metadata accessor for LollipopDetailView);
    v51 = v85;
    v50 = v86;
    v52 = v48;
    v53 = v102;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v52, v102);
    v54 = v100;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v100, v51, v53);
    swift_storeEnumTagMultiPayload(v54, v95, 1);
    v55 = sub_1003B41E4();
    v106 = v49;
    v107 = v47;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of View.offsetXWithinBounds(_:)>>, 1);
    v57 = (uint64_t)v99;
    _ConditionalContent<>.init(storage:)(v54, v98, v53, v55, OpaqueTypeConformance2);
    v58 = *(void (**)(char *, uint64_t))(v50 + 8);
    v59 = v51;
    v41 = v104;
    v40 = v105;
    v58(v59, v53);
    v60 = (uint64_t)v44;
    v61 = type metadata accessor for DetailHeroChartActiveLollipopModel;
  }
  else
  {
    v62 = v43;
    v63 = v80;
    sub_10007C77C(v62, v80, type metadata accessor for LollipopDetailViewModel);
    v64 = v94;
    sub_100095B78(v63, v94, type metadata accessor for LollipopDetailViewModel);
    v65 = v79;
    sub_100095B78(v64, v79, type metadata accessor for LollipopDetailView);
    sub_1000215BC(v64, type metadata accessor for LollipopDetailView);
    v66 = v82;
    sub_1003B428C(v65, v82);
    v67 = v100;
    sub_10003773C(v66, v100, &qword_100BDD948);
    swift_storeEnumTagMultiPayload(v67, v95, 0);
    v68 = sub_1003B41E4();
    v69 = sub_1003B41A4();
    v106 = v97;
    v107 = v69;
    v70 = swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of View.offsetXWithinBounds(_:)>>, 1);
    v57 = (uint64_t)v99;
    _ConditionalContent<>.init(storage:)(v67, v98, v102, v68, v70);
    sub_100021A14(v66, &qword_100BDD948);
    v60 = v63;
    v61 = type metadata accessor for LollipopDetailViewModel;
  }
  sub_1000215BC(v60, v61);
  v71 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v72 = v96;
  v71(v96, v41, v42);
  v73 = v101;
  sub_10003773C(v57, v101, &qword_100BDD950);
  v74 = v103;
  v71(v103, v72, v42);
  v75 = sub_1000BA294(&qword_100BDD998);
  sub_10003773C(v73, (uint64_t)&v74[*(int *)(v75 + 48)], &qword_100BDD950);
  sub_100021A14(v57, &qword_100BDD950);
  v76 = *(void (**)(char *, uint64_t))(v40 + 8);
  v76(v41, v42);
  sub_100021A14(v73, &qword_100BDD950);
  return ((uint64_t (*)(char *, uint64_t))v76)(v72, v42);
}

void sub_1003B34C8(uint64_t *a1)
{
  uint64_t v2;
  __n128 v3;
  double v4;
  double v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[24];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  double v87;
  char v88;
  double *v89;
  double *v90;
  uint64_t *v91;
  char *v92;
  uint64_t *v93;
  char v94[24];
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  __int128 v105;

  type metadata accessor for DetailHeroChartHeaderView(0);
  v2 = sub_1000BA294(&qword_100BC37F8);
  ScaledMetric.wrappedValue.getter(&v76, v2);
  v3.n128_f64[0] = 1.0 / v76;
  v4 = 1.0 / v76 * 20.0;
  v37 = static Axis.Set.horizontal.getter(v3);
  sub_1003B3884(a1, (uint64_t)&v76);
  v35 = v77;
  v36 = *(_QWORD *)&v76;
  v43 = *(_OWORD *)v79;
  v42 = *(_QWORD *)&v79[16];
  v47 = v80;
  v46 = v81;
  v44 = v78;
  v45 = v82;
  v41 = BYTE1(v82);
  v39 = v84;
  v40 = v83;
  v38 = v85;
  swift_beginAccess(&unk_100BF4A60, v94, 1, 0);
  v5 = sub_1005DD404();
  static Alignment.center.getter(v6);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v5, 0);
  v34 = v95;
  v33 = v96;
  v32 = v97;
  v31 = v98;
  v29 = v100;
  v30 = v99;
  v28 = static Axis.Set.horizontal.getter(v7);
  sub_1003B3C54(a1, (uint64_t)&v76);
  v8 = *(_QWORD *)&v76;
  v9 = v77;
  v10 = v78;
  v27 = *(_OWORD *)v79;
  v11 = *(_QWORD *)&v79[16];
  v12 = v80;
  v13 = v81;
  v14 = v82;
  v15 = BYTE1(v82);
  v16 = v83;
  v26 = v84;
  v25 = v85;
  v17 = sub_1005DD4DC();
  static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(0, 1, *(_QWORD *)&v17, 0);
  LOBYTE(v76) = v37;
  v77 = v36;
  v78 = v35;
  v79[0] = v44;
  *(_OWORD *)&v79[8] = v43;
  v80 = v42;
  v87 = v4;
  v88 = 0;
  LOBYTE(v81) = v47;
  v82 = v46;
  LOBYTE(v83) = v45;
  BYTE1(v83) = v41;
  v84 = v40;
  v85 = v39;
  v86 = v38;
  v89 = &v87;
  v90 = &v76;
  v68 = 0;
  v69 = 1;
  v70 = v34;
  v71 = v33;
  v72 = v32;
  v73 = v31;
  v74 = v30;
  v75 = v29;
  v55 = v28;
  v56 = v8;
  v57 = v9;
  v58 = v10;
  v59 = v27;
  v60 = v11;
  v61 = v12;
  v62 = v13;
  v63 = v14;
  v64 = v15;
  v65 = v16;
  v66 = v26;
  v67 = v25;
  v91 = &v68;
  v92 = &v55;
  v48 = 0;
  v49 = 1;
  v50 = v101;
  v51 = v102;
  v52 = v103;
  v53 = v104;
  v54 = v105;
  v93 = &v48;
  sub_10035DC18();
  v19 = *((_QWORD *)&v59 + 1);
  v20 = v60;
  LOBYTE(v8) = v61;
  v21 = v65;
  sub_1000D31B4(v56, v57, v58);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v19, v20, v8);
  swift_release(v21);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)&v79[16];
  v23 = v80;
  LOBYTE(v8) = v81;
  v24 = v84;
  sub_1000D31B4(v77, v78, v79[0]);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v22, v23, v8);
  swift_release(v24);
  swift_bridgeObjectRelease();
}

double sub_1003B3884@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t KeyPath;
  double result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v66 = a1[1];
  v74 = *a1;
  v67 = v74;
  v75 = v66;
  v73 = sub_100114EF8();
  swift_bridgeObjectRetain(v66);
  v3 = Text.init<A>(_:)(&v74, &type metadata for String, v73);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  swift_beginAccess(&unk_100BF4A60, &v74, 33, 0);
  v10 = sub_1005DD2CC();
  swift_endAccess(&v74);
  v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);
  LOBYTE(v10) = v15 & 1;
  sub_1000D31B4(v3, v5, v9);
  v18 = swift_bridgeObjectRelease();
  v19 = static Color.primary.getter(v18);
  v20 = Text.foregroundColor(_:)(v19, v11, v13, v15 & 1, v17);
  v22 = v21;
  LOBYTE(v5) = v23;
  v25 = v24;
  swift_release(v19);
  sub_1000D31B4(v11, v13, v10);
  swift_bridgeObjectRelease();
  v64 = a1[3];
  v74 = a1[2];
  v65 = v74;
  v75 = v64;
  v26 = swift_bridgeObjectRetain(v64);
  v27 = Text.accessibilityLabel<A>(_:)(&v74, v20, v22, v5 & 1, v25, &type metadata for String, v73, v26);
  v69 = v28;
  v70 = v27;
  v72 = v29;
  v68 = v30 & 1;
  sub_1000D31B4(v20, v22, v5 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = v67;
  v75 = v66;
  swift_bridgeObjectRetain(v66);
  v31 = Text.init<A>(_:)(&v74, &type metadata for String, v73);
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  v38 = static Font.headline.getter(v31);
  static Font.Weight.medium.getter(v38);
  v39 = Font.weight(_:)(v38);
  swift_release(v38);
  v40 = Text.font(_:)(v39, v31, v33, v37, v35);
  v42 = v41;
  LOBYTE(v5) = v43;
  v45 = v44;
  swift_release(v39);
  v46 = v5 & 1;
  sub_1000D31B4(v31, v33, v37);
  v47 = swift_bridgeObjectRelease();
  v48 = static Color.primary.getter(v47);
  v49 = Text.foregroundColor(_:)(v48, v40, v42, v46, v45);
  v51 = v50;
  LOBYTE(v33) = v52;
  v54 = v53;
  swift_release(v48);
  LOBYTE(v48) = v33 & 1;
  sub_1000D31B4(v40, v42, v46);
  swift_bridgeObjectRelease();
  v74 = v65;
  v75 = v64;
  v55 = swift_bridgeObjectRetain(v64);
  v56 = Text.accessibilityLabel<A>(_:)(&v74, v49, v51, v33 & 1, v54, &type metadata for String, v73, v55);
  v58 = v57;
  v60 = v59;
  LOBYTE(v54) = v61 & 1;
  sub_1000D31B4(v49, v51, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_10099A0A8);
  LOBYTE(v74) = v68;
  *(_QWORD *)a2 = v70;
  *(_QWORD *)(a2 + 8) = v69;
  *(_BYTE *)(a2 + 16) = v68;
  *(_QWORD *)(a2 + 24) = v72;
  *(_QWORD *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = v58;
  *(_BYTE *)(a2 + 48) = v54;
  *(_QWORD *)(a2 + 56) = v60;
  *(_WORD *)(a2 + 64) = 256;
  *(_QWORD *)(a2 + 72) = KeyPath;
  *(_QWORD *)(a2 + 80) = 2;
  *(_BYTE *)(a2 + 88) = 0;
  sub_1000D55D4(v70, v69, v68);
  swift_bridgeObjectRetain(v72);
  sub_1000D55D4(v56, v58, v54);
  swift_bridgeObjectRetain(v60);
  swift_retain();
  sub_1000D31B4(v56, v58, v54);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v70, v69, v74);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_1003B3C54@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t KeyPath;
  double result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v66 = a1[5];
  v74 = a1[4];
  v67 = v74;
  v75 = v66;
  v73 = sub_100114EF8();
  swift_bridgeObjectRetain(v66);
  v3 = Text.init<A>(_:)(&v74, &type metadata for String, v73);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  swift_beginAccess(&unk_100BF4A60, &v74, 33, 0);
  v10 = sub_1005DD428();
  swift_endAccess(&v74);
  v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_release(v10);
  LOBYTE(v10) = v15 & 1;
  sub_1000D31B4(v3, v5, v9);
  v18 = swift_bridgeObjectRelease();
  v19 = static Color.secondary.getter(v18);
  v20 = Text.foregroundColor(_:)(v19, v11, v13, v15 & 1, v17);
  v22 = v21;
  LOBYTE(v5) = v23;
  v25 = v24;
  swift_release(v19);
  sub_1000D31B4(v11, v13, v10);
  swift_bridgeObjectRelease();
  v64 = a1[7];
  v74 = a1[6];
  v65 = v74;
  v75 = v64;
  v26 = swift_bridgeObjectRetain(v64);
  v27 = Text.accessibilityLabel<A>(_:)(&v74, v20, v22, v5 & 1, v25, &type metadata for String, v73, v26);
  v69 = v28;
  v70 = v27;
  v72 = v29;
  v68 = v30 & 1;
  sub_1000D31B4(v20, v22, v5 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = v67;
  v75 = v66;
  swift_bridgeObjectRetain(v66);
  v31 = Text.init<A>(_:)(&v74, &type metadata for String, v73);
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  v38 = static Font.footnote.getter(v31);
  static Font.Weight.medium.getter(v38);
  v39 = Font.weight(_:)(v38);
  swift_release(v38);
  v40 = Text.font(_:)(v39, v31, v33, v37, v35);
  v42 = v41;
  LOBYTE(v5) = v43;
  v45 = v44;
  swift_release(v39);
  v46 = v5 & 1;
  sub_1000D31B4(v31, v33, v37);
  v47 = swift_bridgeObjectRelease();
  v48 = static Color.secondary.getter(v47);
  v49 = Text.foregroundColor(_:)(v48, v40, v42, v46, v45);
  v51 = v50;
  LOBYTE(v33) = v52;
  v54 = v53;
  swift_release(v48);
  LOBYTE(v48) = v33 & 1;
  sub_1000D31B4(v40, v42, v46);
  swift_bridgeObjectRelease();
  v74 = v65;
  v75 = v64;
  v55 = swift_bridgeObjectRetain(v64);
  v56 = Text.accessibilityLabel<A>(_:)(&v74, v49, v51, v33 & 1, v54, &type metadata for String, v73, v55);
  v58 = v57;
  v60 = v59;
  LOBYTE(v54) = v61 & 1;
  sub_1000D31B4(v49, v51, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_10099A0A8);
  LOBYTE(v74) = v68;
  *(_QWORD *)a2 = v70;
  *(_QWORD *)(a2 + 8) = v69;
  *(_BYTE *)(a2 + 16) = v68;
  *(_QWORD *)(a2 + 24) = v72;
  *(_QWORD *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = v58;
  *(_BYTE *)(a2 + 48) = v54;
  *(_QWORD *)(a2 + 56) = v60;
  *(_WORD *)(a2 + 64) = 256;
  *(_QWORD *)(a2 + 72) = KeyPath;
  *(_QWORD *)(a2 + 80) = 2;
  *(_BYTE *)(a2 + 88) = 0;
  sub_1000D55D4(v70, v69, v68);
  swift_bridgeObjectRetain(v72);
  sub_1000D55D4(v56, v58, v54);
  swift_bridgeObjectRetain(v60);
  swift_retain();
  sub_1000D31B4(v56, v58, v54);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v70, v69, v74);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

unint64_t sub_1003B4028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD968;
  if (!qword_100BDD968)
  {
    v1 = sub_100075EB0(&qword_100BDD960);
    sub_10003D310(&qword_100BDD970, &qword_100BDD978, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD968);
  }
  return result;
}

uint64_t sub_1003B40AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_BYTE *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_BYTE *)(a1 + 232);
  v11 = *(_QWORD *)(a1 + 256);
  v12 = *(_QWORD *)(a1 + 248);
  v10 = *(_BYTE *)(a1 + 264);
  v13 = *(_QWORD *)(a1 + 288);
  sub_1000D31B4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_1000D31B4(v2, v3, v4);
  swift_release(v5);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v6, v7, v8);
  swift_bridgeObjectRelease();
  sub_1000D31B4(v12, v11, v10);
  swift_release(v13);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1003B41A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD980;
  if (!qword_100BDD980)
  {
    v1 = type metadata accessor for LollipopDetailView(255);
    result = swift_getWitnessTable(&unk_1009DDA54, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD980);
  }
  return result;
}

unint64_t sub_1003B41E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD988;
  if (!qword_100BDD988)
  {
    v1 = sub_100075EB0(&qword_100BDD948);
    sub_1003B41A4();
    sub_1003B4250();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD988);
  }
  return result;
}

unint64_t sub_1003B4250()
{
  unint64_t result;

  result = qword_100BDD990;
  if (!qword_100BDD990)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, (unint64_t *)&qword_100BDD990);
  }
  return result;
}

uint64_t sub_1003B428C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDD948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003B42E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDD9A0;
  if (!qword_100BDD9A0)
  {
    v1 = sub_100075EB0(&qword_100BDD930);
    sub_10003D310(&qword_100BDD9A8, &qword_100BDD920, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDD9A0);
  }
  return result;
}

void sub_1003B4364(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  char v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v153 = a2;
  v154 = a3;
  v145 = a4;
  v146 = a1;
  v4 = type metadata accessor for TimeZone(0);
  v138 = *(_QWORD *)(v4 - 8);
  v139 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v137 = v6;
  sub_1000BA294(&qword_100BC3378);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v140 = v8;
  v127 = type metadata accessor for CurrentWeather(0);
  v126 = *(_QWORD *)(v127 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v125 = v10;
  v152 = type metadata accessor for Elevation(0);
  v136 = *(_QWORD *)(v152 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v150 = v12;
  sub_1000BA294(&qword_100BC35F8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v147 = v14;
  v151 = type metadata accessor for Location(0);
  v149 = *(_QWORD *)(v151 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v148 = v16;
  sub_1000BA294(&qword_100BC3350);
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v18);
  v20 = (char *)&v123 - v19;
  sub_1000BA294(&qword_100BC3460);
  sub_10009D98C();
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v23);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v141 = v25;
  sub_10009D2A4();
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v123 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v123 - v30;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v33);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v34);
  sub_1000860D0();
  v135 = v35;
  sub_10009D2A4();
  v37 = __chkstk_darwin(v36);
  v39 = (char *)&v123 - v38;
  __chkstk_darwin(v37);
  v41 = (char *)&v123 - v40;
  v42 = type metadata accessor for Date(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v44);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v45);
  sub_1000860D0();
  v144 = v46;
  sub_10009D2A4();
  __chkstk_darwin(v47);
  sub_1000860D0();
  v143 = v48;
  sub_10009D2A4();
  v50 = __chkstk_darwin(v49);
  v52 = (char *)&v123 - v51;
  v53 = __chkstk_darwin(v50);
  v55 = (char *)&v123 - v54;
  v56 = __chkstk_darwin(v53);
  v58 = (char *)&v123 - v57;
  static Settings.VFX.overrideConditionBackgroundDate.getter(v56);
  sub_100037768(v153, (uint64_t)v31, &qword_100BC3460);
  v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  v142((uint64_t)v55, (uint64_t)v154, v42);
  sub_1000B4744((uint64_t)v41);
  if (!v71)
  {
    v63 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v55, v42);
    sub_100098898(v63, &qword_100BC3460);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    sub_1000C4898((uint64_t)v58, (uint64_t)v41);
    v65 = v151;
    v66 = v152;
    v67 = (uint64_t)v58;
    v68 = v146;
    v69 = (uint64_t)v147;
    goto LABEL_14;
  }
  v133 = v43;
  v59 = v58;
  sub_1000787D4((uint64_t)v31, (uint64_t)v29, &qword_100BC3460);
  v60 = type metadata accessor for WeatherData(0);
  sub_100088FC8((uint64_t)v29, 1, v60);
  if (v71)
  {
    v61 = &qword_100BC3460;
    v62 = (uint64_t)v29;
LABEL_9:
    sub_100021A14(v62, v61);
    v65 = v151;
    v72 = v152;
    v73 = (uint64_t)v59;
    sub_1000C4638((uint64_t)v39, 1);
    goto LABEL_10;
  }
  sub_100037768((uint64_t)&v29[*(int *)(v60 + 36)], (uint64_t)v20, &qword_100BC3350);
  sub_1000215BC((uint64_t)v29, type metadata accessor for WeatherData);
  v70 = type metadata accessor for WeatherDataOverrides(0);
  sub_100088FC8((uint64_t)v20, 1, v70);
  if (v71)
  {
    v61 = &qword_100BC3350;
    v62 = (uint64_t)v20;
    goto LABEL_9;
  }
  sub_100037768((uint64_t)&v20[*(int *)(v70 + 20)], (uint64_t)v39, (uint64_t *)&unk_100BD35A0);
  sub_1000215BC((uint64_t)v20, type metadata accessor for WeatherDataOverrides);
  v65 = v151;
  v72 = v152;
  v73 = (uint64_t)v59;
LABEL_10:
  v43 = v133;
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32);
  sub_1000C4898((uint64_t)v52, (uint64_t)v55);
  sub_1000B4744((uint64_t)v39);
  if (v71)
  {
    sub_1000C4898(v73, (uint64_t)v52);
    sub_100021A14((uint64_t)v39, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v42);
    sub_1000C4898(v73, (uint64_t)v39);
  }
  v66 = v72;
  v74 = v146;
  v69 = (uint64_t)v147;
  sub_100021A14((uint64_t)v41, (uint64_t *)&unk_100BD35A0);
  v67 = v73;
  v68 = v74;
LABEL_14:
  sub_100037768(v68, v69, &qword_100BC35F8);
  sub_100088FC8(v69, 1, v65);
  if (v71)
  {
    sub_100021A14(v69, &qword_100BC35F8);
    v75 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
    v76 = v145;
    _s7Weather24LocationCompositionStateOwst_0(v145 + *(int *)(v75 + 20), 1, 1, v66);
    v77 = v76 + *(int *)(v75 + 24);
    v78 = type metadata accessor for BackgroundMoonData(0);
    _s7Weather24LocationCompositionStateOwst_0(v77, 1, 1, v78);
    sub_1000C4898(v76, v67);
    return;
  }
  v79 = v148;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 32))(v148, v69, v65);
  v80 = static GeoHandler.getElevation(for:on:)(v79, v67);
  v81 = v67;
  v82 = v135;
  static Settings.VFX.overrideConditionBackgroundDate.getter(v80);
  v83 = v141;
  sub_100037768(v153, v141, &qword_100BC3460);
  v84 = v144;
  v85 = v142;
  v142(v144, (uint64_t)v154, v42);
  sub_1000B4744(v82);
  v124 = v81;
  v147 = v64;
  if (v86)
  {
    v133 = v43;
    sub_1000E7014(v83, &qword_100BC3460, (uint64_t)&v157);
    v87 = (void (*)(uint64_t, uint64_t))type metadata accessor for WeatherData(0);
    v88 = sub_100088FC8(v81, 1, (uint64_t)v87);
    v154 = v87;
    if (v71)
    {
      sub_100098898(v88, &qword_100BC3460);
      v89 = v130;
    }
    else
    {
      sub_1000E7014(v81 + *((int *)v87 + 9), &qword_100BC3350, (uint64_t)&v155);
      v85 = v142;
      sub_1000215BC(v81, type metadata accessor for WeatherData);
      v94 = type metadata accessor for WeatherDataOverrides(0);
      v96 = sub_100088FC8(v81, 1, v94);
      v89 = v130;
      if (!v95)
      {
        sub_100037768(v81, (uint64_t)v130, (uint64_t *)&unk_100BD35A0);
        sub_1000215BC(v81, type metadata accessor for WeatherDataOverrides);
LABEL_26:
        v97 = v131;
        sub_100037768(v83, v131, &qword_100BC3460);
        v98 = v132;
        v99 = v144;
        v85(v132, v144, v42);
        sub_1000B4744((uint64_t)v89);
        if (v71)
        {
          sub_1000E7014(v97, &qword_100BC3460, (uint64_t)&v156);
          v100 = sub_100088FC8(v99, 1, (uint64_t)v154);
          if (v71)
          {
            sub_100075DD0(v97);
            sub_1000C5E04();
            sub_100075DD0(v83);
            v108 = 1;
            v105 = v129;
          }
          else
          {
            v104 = v125;
            WeatherDataModel.currentWeather.getter(v100);
            sub_1000215BC(v99, type metadata accessor for WeatherData);
            v105 = v129;
            CurrentWeather.date.getter(v106);
            (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v104, v127);
            sub_100021A14(v97, &qword_100BC3460);
            v107 = sub_1000C5E04();
            v108 = 0;
          }
          sub_100098898(v107, &qword_100BC3460);
          sub_1000C4638(v105, v108);
          v109 = v128;
          sub_1000C4898(v128, v132);
          sub_1000B4744(v105);
          v110 = v145;
          v111 = v143;
          if (v71)
          {
            sub_1000C4898(v143, v109);
            sub_100021A14(v105, (uint64_t *)&unk_100BD35A0);
          }
          else
          {
            v89(v109, v42);
            sub_1000C4898(v111, v105);
          }
          v91 = v42;
          v92 = v110;
          v103 = v89;
          sub_100021A14((uint64_t)v89, (uint64_t *)&unk_100BD35A0);
        }
        else
        {
          v101 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
          v101(v98, v42);
          sub_100075DD0(v97);
          v102 = v99;
          v103 = v101;
          v101(v102, v42);
          sub_100075DD0(v83);
          v91 = v42;
          sub_1000C4898(v143, (uint64_t)v89);
          v92 = v145;
        }
        v154 = v103;
        sub_100021A14(v82, (uint64_t *)&unk_100BD35A0);
        v93 = v134;
        v90 = v143;
        goto LABEL_36;
      }
      sub_100098898(v96, &qword_100BC3350);
    }
    sub_1000C4638((uint64_t)v89, 1);
    goto LABEL_26;
  }
  v154 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v154(v84, v42);
  sub_100021A14(v83, &qword_100BC3460);
  v90 = v143;
  sub_1000C4898(v143, v82);
  v91 = v42;
  v92 = v145;
  v93 = v134;
LABEL_36:
  v112 = v93[5];
  v113 = v93[6];
  v114 = sub_1000DB418(v93 + 2, v112);
  v115 = v137;
  v116 = v148;
  v117 = Location.timeZone.getter(v114);
  v118 = Location.coordinate.getter(v117);
  v119 = v140;
  dispatch thunk of MoonDataProviderType.weatherBackgroundMoonData(for:timeZone:coordinate:)(v90, v115, v112, v113, v118);
  (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v115, v139);
  v154(v90, v91);
  (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v116, v151);
  v120 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v121 = v92 + *(int *)(v120 + 20);
  v122 = v152;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v121, v150, v152);
  _s7Weather24LocationCompositionStateOwst_0(v121, 0, 1, v122);
  v147(v92, v124, v91);
  sub_1000787D4(v119, v92 + *(int *)(v120 + 24), &qword_100BC3378);
}

uint64_t type metadata accessor for WeatherConditionBackgroundTimeDataFactory()
{
  return objc_opt_self(_TtC7Weather41WeatherConditionBackgroundTimeDataFactory);
}

double sub_1003B4E74()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(double *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0x4053800000000000;
  *(_BYTE *)(v0 + 24) = 0;
  return 78.0;
}

uint64_t sub_1003B4EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for Font.TextStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100099864();
  if (*(_QWORD *)(v0 + 32))
  {
    v4 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v5 = sub_1000BC0D4(enum case for Font.TextStyle.largeTitle(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
    static Font.Weight.medium.getter(v5);
    v4 = static Font.system(_:weight:)(v1);
    sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v6 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v4;
    swift_retain();
    swift_release(v6);
  }
  swift_retain();
  return v4;
}

void sub_1003B4F54(__n128 a1)
{
  uint64_t v1;

  if (!*(_QWORD *)(v1 + 40))
  {
    *(_QWORD *)(v1 + 40) = static Color.primary.getter(a1);
    swift_retain();
    sub_100089020();
  }
  swift_retain();
  sub_100079F70();
}

uint64_t sub_1003B4FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100099864();
  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 48))
  {
    v9 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v8, enum case for Font.TextStyle.largeTitle(_:), v4, v6);
    static Font.Weight.medium.getter(v10);
    v11 = static Font.system(_:weight:)(v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_1000BC0D4(enum case for Font.Leading.tight(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
    v9 = Font.leading(_:)(v1, v11);
    swift_release(v11);
    sub_1000BD208(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v12 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v9;
    swift_retain();
    swift_release(v12);
  }
  swift_retain();
  return v9;
}

void sub_1003B50D8(__n128 a1)
{
  uint64_t v1;

  if (!*(_QWORD *)(v1 + 56))
  {
    *(_QWORD *)(v1 + 56) = static Color.primary.getter(a1);
    swift_retain();
    sub_100089020();
  }
  swift_retain();
  sub_100079F70();
}

double sub_1003B5124()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
    return *(double *)(v0 + 64);
  *(_QWORD *)(v0 + 64) = 0x3FF0000000000000;
  *(_BYTE *)(v0 + 72) = 0;
  return 1.0;
}

void sub_1003B5148()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 80))
  {
    *(_QWORD *)(v0 + 80) = sub_1003B4EA0();
    swift_retain();
    sub_100089020();
  }
  swift_retain();
  sub_100079F70();
}

void sub_1003B5194(__n128 a1)
{
  uint64_t v1;

  if (!*(_QWORD *)(v1 + 88))
  {
    *(_QWORD *)(v1 + 88) = static Color.secondary.getter(a1);
    swift_retain();
    sub_100089020();
  }
  swift_retain();
  sub_100079F70();
}

double sub_1003B51E0()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 104) & 1) == 0)
    return *(double *)(v0 + 96);
  *(_QWORD *)(v0 + 96) = 0x4010000000000000;
  *(_BYTE *)(v0 + 104) = 0;
  return 4.0;
}

double sub_1003B5204()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 120) & 1) == 0)
    return *(double *)(v0 + 112);
  *(_QWORD *)(v0 + 112) = 0x4024000000000000;
  *(_BYTE *)(v0 + 120) = 0;
  return 10.0;
}

double sub_1003B5228()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 136) & 1) == 0)
    return *(double *)(v0 + 128);
  *(_QWORD *)(v0 + 128) = 0x4024000000000000;
  *(_BYTE *)(v0 + 136) = 0;
  return 10.0;
}

double sub_1003B524C(uint64_t a1)
{
  uint64_t v1;
  double result;

  if ((*(_BYTE *)(v1 + 152) & 1) == 0)
    return *(double *)(v1 + 144);
  result = static Font.Weight.medium.getter(a1);
  *(double *)(v1 + 144) = result;
  *(_BYTE *)(v1 + 152) = 0;
  return result;
}

_QWORD *sub_1003B5278()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return v0;
}

uint64_t sub_1003B52BC()
{
  uint64_t v0;

  sub_1003B5278();
  return swift_deallocClassInstance(v0, 154, 7);
}

uint64_t type metadata accessor for DefaultChartHeaderStyle()
{
  return objc_opt_self(_TtC7Weather23DefaultChartHeaderStyle);
}

double sub_1003B52FC()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)(v0 + 64) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  *(_QWORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 104) = 1;
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 120) = 1;
  *(_QWORD *)(v0 + 128) = 0;
  *(_BYTE *)(v0 + 136) = 1;
  *(_QWORD *)(v0 + 144) = 0;
  *(_WORD *)(v0 + 152) = 257;
  return result;
}

double sub_1003B5348()
{
  return sub_1003B4E74();
}

double sub_1003B5368()
{
  return sub_1003B5204();
}

double sub_1003B5388()
{
  return sub_1003B5228();
}

uint64_t sub_1003B53A8()
{
  return sub_1003B4EA0();
}

void sub_1003B53C8(__n128 a1)
{
  sub_1003B4F54(a1);
}

uint64_t sub_1003B53E8()
{
  return sub_1003B4FA0();
}

void sub_1003B5408(__n128 a1)
{
  sub_1003B50D8(a1);
}

double sub_1003B5428()
{
  return sub_1003B5124();
}

void sub_1003B5448()
{
  sub_1003B5148();
}

void sub_1003B5468(__n128 a1)
{
  sub_1003B5194(a1);
}

double sub_1003B5488()
{
  return sub_1003B51E0();
}

double sub_1003B54A8(uint64_t a1)
{
  return sub_1003B524C(a1);
}

void sub_1003B54C8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for DefaultChartHeaderStyle();
  v1 = swift_allocObject(v0, 154, 7);
  sub_1003B52FC();
  qword_100CAE700 = v1;
}

uint64_t *sub_1003B5500(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v15 = type metadata accessor for Location.Identifier(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v11 = a1;
      v12 = a3;
      v13 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v9 = type metadata accessor for LocationModel(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_1000BA294(&qword_100BDDB50);
      *((_BYTE *)a1 + *(int *)(v10 + 48)) = *((_BYTE *)a2 + *(int *)(v10 + 48));
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1003B5600(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Location.Identifier(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for LocationModel(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_1003B565C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for Location.Identifier(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v9 = a1;
    v10 = a3;
    v11 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for LocationModel(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = sub_1000BA294(&qword_100BDDB50);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    v9 = a1;
    v10 = a3;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

void *sub_1003B5734(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1003B581C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for Location.Identifier(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for LocationModel(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_1000BA294(&qword_100BDDB50);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1003B581C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ListViewAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1003B5858(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 2)
  {
    v12 = type metadata accessor for Location.Identifier(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v9 = a1;
    v10 = a3;
    v11 = 2;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for LocationModel(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = sub_1000BA294(&qword_100BDDB50);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    v9 = a1;
    v10 = a3;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

void *sub_1003B5930(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1003B581C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = type metadata accessor for Location.Identifier(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for LocationModel(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_1000BA294(&qword_100BDDB50);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1003B5A18(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  if (a1 == 0x5364657265746E65 && a2 == 0xEF73676E69747465)
  {
    v5 = 0xEF73676E69747465;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5364657265746E65, 0xEF73676E69747465, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD00000000000001ALL)
  {
    v7 = 0x80000001009FD400;
    if (a2 == 0x80000001009FD400)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x80000001009FD400, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000010)
  {
    v8 = 0x80000001009FD3E0;
    if (a2 == 0x80000001009FD3E0)
      goto LABEL_18;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009FD3E0, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_18:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if (a1 == 0xD000000000000010)
  {
    v9 = 0x80000001009FD3C0;
    if (a2 == 0x80000001009FD3C0)
      goto LABEL_23;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009FD3C0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_23:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0x6F4C646570706174 && a2 == 0xEE006E6F69746163)
  {
    v11 = 0xEE006E6F69746163;
    goto LABEL_31;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4C646570706174, 0xEE006E6F69746163, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
LABEL_31:
    swift_bridgeObjectRelease(v11);
    return 4;
  }
  if (a1 == 0xD000000000000020)
  {
    v12 = 0x80000001009FD390;
    if (a2 == 0x80000001009FD390)
      goto LABEL_36;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x80000001009FD390, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_36:
    swift_bridgeObjectRelease(v12);
    return 5;
  }
  if (a1 == 0xD00000000000001ELL)
  {
    v13 = 0x80000001009FBAA0;
    if (a2 == 0x80000001009FBAA0)
      goto LABEL_41;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x80000001009FBAA0, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
LABEL_41:
    swift_bridgeObjectRelease(v13);
    return 6;
  }
  if (a1 == 0xD000000000000019 && a2 == 0x80000001009FD370)
  {
    v14 = 0x80000001009FD370;
LABEL_47:
    swift_bridgeObjectRelease(v14);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019, 0x80000001009FD370, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_47;
  }
  if (a1 == 0xD00000000000001ELL)
  {
    v15 = 0x80000001009FD350;
    if (a2 == 0x80000001009FD350)
      goto LABEL_52;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x80000001009FD350, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
LABEL_52:
    swift_bridgeObjectRelease(v15);
    return 8;
  }
  if (a1 == 0xD000000000000020)
  {
    v16 = 0x80000001009FA0A0;
    if (a2 == 0x80000001009FA0A0)
      goto LABEL_57;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x80000001009FA0A0, a1, a2, 0) & 1) != 0)
  {
    v16 = a2;
LABEL_57:
    swift_bridgeObjectRelease(v16);
    return 9;
  }
  if (a1 == 0xD00000000000001ELL)
  {
    v17 = 0x80000001009FBAE0;
    if (a2 == 0x80000001009FBAE0)
      goto LABEL_62;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ELL, 0x80000001009FBAE0, a1, a2, 0) & 1) != 0)
  {
    v17 = a2;
LABEL_62:
    swift_bridgeObjectRelease(v17);
    return 10;
  }
  if (a1 == 0xD000000000000010)
  {
    v18 = 0x80000001009FD330;
    if (a2 == 0x80000001009FD330)
      goto LABEL_67;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001009FD330, a1, a2, 0) & 1) != 0)
  {
    v18 = a2;
LABEL_67:
    swift_bridgeObjectRelease(v18);
    return 11;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x80000001009FD310)
  {
    v19 = 0x80000001009FD310;
LABEL_73:
    swift_bridgeObjectRelease(v19);
    return 12;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x80000001009FD310, a1, a2, 0) & 1) != 0)
  {
    v19 = a2;
    goto LABEL_73;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001009FD2F0)
  {
    v20 = 0x80000001009FD2F0;
LABEL_79:
    swift_bridgeObjectRelease(v20);
    return 13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x80000001009FD2F0, a1, a2, 0) & 1) != 0)
  {
    v20 = a2;
    goto LABEL_79;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001009FD420)
  {
    swift_bridgeObjectRelease(0x80000001009FD420);
    return 14;
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x80000001009FD420, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v21 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1003B5FBC()
{
  return 15;
}

uint64_t sub_1003B5FC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003B6004 + 4 * byte_10099A280[a1]))(0x5364657265746E65, 0xEF73676E69747465);
}

unint64_t sub_1003B6004()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1003B615C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v8;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x697469736E617274 && a2 == 0xEF65746174536E6FLL)
  {
    swift_bridgeObjectRelease(0xEF65746174536E6FLL);
    return 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x697469736E617274, 0xEF65746174536E6FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1003B6254(char a1)
{
  if ((a1 & 1) != 0)
    return 0x697469736E617274;
  else
    return 12383;
}

uint64_t sub_1003B628C(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease(0xE200000000000000);
    v5 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

void sub_1003B62F8()
{
  _QWORD v0[9];

  Hasher.init(_seed:)(v0);
  sub_1000C1CFC();
  Hasher._finalize()();
  sub_100098918();
}

uint64_t sub_1003B6328()
{
  unsigned __int8 *v0;

  return sub_1003B5FC4(*v0);
}

uint64_t sub_1003B6330@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003B5A18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003B6354@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1003B5FBC();
  *a1 = result;
  return result;
}

uint64_t sub_1003B6378(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B84F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B63A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B84F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B63C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B852C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B63F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B852C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B6418(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B869C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6440(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B869C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B6468(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8660();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6490(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8660();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B64B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B88B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B64E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B88B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003B6508()
{
  sub_1003B62F8();
}

uint64_t sub_1003B6520(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B85E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6548(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B85E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B6570(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B887C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6598(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B887C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B65C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B85AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B65E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B85AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B6610(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8804();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6638(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8804();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B6660(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8840();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6688(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8840();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B66B0()
{
  char *v0;

  return sub_1003B6254(*v0);
}

uint64_t sub_1003B66B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003B615C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003B66DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B87C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6704(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B87C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B672C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B878C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6754(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B878C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B677C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8750();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B67A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8750();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B67CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8714();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B67F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8714();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003B681C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B86D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B6844(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B86D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003B686C()
{
  _QWORD v0[9];

  Hasher.init(_seed:)(v0);
  sub_1000C1CFC();
  Hasher._finalize()();
  sub_100098918();
}

uint64_t sub_1003B6898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003B628C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1003B68C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8624();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003B68E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003B8624();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003B6910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  type metadata accessor for ListViewAction(0);
  sub_10009D98C();
  __chkstk_darwin(v1);
  sub_100098728();
  v4 = v3 - v2;
  v5 = sub_1000BA294(&qword_100BDDC08);
  __chkstk_darwin(v5);
  sub_100098728();
  sub_1003B8468(v0, v4);
  v6 = (char *)sub_1003B69C8 + 4 * byte_10099A28F[swift_getEnumCaseMultiPayload(v4)];
  __asm { BR              X10 }
}

uint64_t sub_1003B69C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_100099A28(0x6F4C646570706174, 0xEE006E6F69746163, v5);
  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  v0[3] = v1;
  v0[4] = sub_1003B84AC();
  v7 = sub_10005F164(v0);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v4 + 32))(v7, v2, v1);
}

void sub_1003B6E40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  _BYTE v70[8];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v74 = sub_1000BA294(&qword_100BDDD30);
  v72 = *(_QWORD *)(v74 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_1000BD964(v3, v60);
  v69[0] = sub_1000BA294(&qword_100BDDD38);
  v68 = *(_QWORD *)(v69[0] - 8);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_1000BEA84(v5, v60);
  v73 = sub_1000BA294(&qword_100BDDD40);
  sub_1000BBFEC(*(_QWORD *)(v73 - 8));
  __chkstk_darwin(v6);
  sub_10009D384(v7, v60);
  v71 = type metadata accessor for Location.Identifier(0);
  v69[1] = *(_QWORD *)(v71 - 8);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_10009BE88(v9, v60);
  v10 = sub_1000BA294(&qword_100BDDD48);
  v66 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_1000BD41C(v12, v60);
  v65 = sub_1000BA294(&qword_100BDDD50);
  sub_1000BBFEC(*(_QWORD *)(v65 - 8));
  __chkstk_darwin(v13);
  sub_10009511C((uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1000BA294(&qword_100BDDD58);
  sub_1000B43A4(v15, (uint64_t)&v81);
  sub_1000BBFEC(v16);
  __chkstk_darwin(v17);
  sub_100088FDC();
  sub_10009511C(v18);
  v19 = sub_1000BA294(&qword_100BDDD60);
  sub_1000B43A4(v19, (uint64_t)&v79);
  sub_1000BBFEC(v20);
  __chkstk_darwin(v21);
  sub_100088FDC();
  sub_10009511C(v22);
  v63 = sub_1000BA294(&qword_100BDDD68);
  sub_1000BBFEC(*(_QWORD *)(v63 - 8));
  __chkstk_darwin(v23);
  sub_100088FDC();
  sub_10009511C(v24);
  v25 = sub_1000BA294(&qword_100BDDD70);
  sub_1000B43A4(v25, (uint64_t)v76);
  sub_1000BBFEC(v26);
  __chkstk_darwin(v27);
  sub_100088FDC();
  sub_10009511C(v28);
  v62 = sub_1000BA294(&qword_100BDDD78);
  sub_1000BBFEC(*(_QWORD *)(v62 - 8));
  __chkstk_darwin(v29);
  sub_100088FDC();
  sub_10009511C(v30);
  v31 = sub_1000BA294(&qword_100BDDD80);
  sub_1000B43A4(v31, (uint64_t)&v80);
  sub_1000BBFEC(v32);
  __chkstk_darwin(v33);
  sub_100088FDC();
  sub_10009511C(v34);
  v64 = type metadata accessor for LocationModel(0);
  sub_1000BBFEC(*(_QWORD *)(v64 - 8));
  __chkstk_darwin(v35);
  sub_100088FDC();
  v75 = v36;
  v37 = sub_1000BA294(&qword_100BDDD88);
  sub_1000B43A4(v37, (uint64_t)v70);
  sub_1000BBFEC(v38);
  __chkstk_darwin(v39);
  sub_100088FDC();
  sub_10009511C(v40);
  v41 = sub_1000BA294(&qword_100BDDD90);
  sub_1000B43A4(v41, (uint64_t)v69);
  sub_1000BBFEC(v42);
  __chkstk_darwin(v43);
  sub_100088FDC();
  sub_10009511C(v44);
  v61 = sub_1000BA294(&qword_100BDDD98);
  sub_1000BBFEC(*(_QWORD *)(v61 - 8));
  __chkstk_darwin(v45);
  sub_100088FDC();
  sub_10009511C(v46);
  v47 = sub_1000BA294(&qword_100BDDDA0);
  __chkstk_darwin(v47);
  sub_100098728();
  type metadata accessor for ListViewAction(0);
  sub_10009D98C();
  __chkstk_darwin(v48);
  sub_100098728();
  v51 = v50 - v49;
  v77 = sub_1000BA294(&qword_100BDDDA8);
  v76[0] = *(_QWORD *)(v77 - 8);
  sub_10009D98C();
  __chkstk_darwin(v52);
  sub_100098728();
  v55 = v54 - v53;
  v56 = a1[3];
  v57 = a1[4];
  sub_1000DB418(a1, v56);
  v58 = sub_1003B84F0();
  v76[1] = v55;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ListViewAction.CodingKeys, &type metadata for ListViewAction.CodingKeys, v58, v56, v57);
  sub_1003B8468(v78, v51);
  v59 = (char *)sub_1003B7294 + 4 * word_10099A29E[swift_getEnumCaseMultiPayload(v51)];
  __asm { BR              X10 }
}

void sub_1003B7294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;

  *(_DWORD *)(v3 - 96) = *(unsigned __int8 *)(v2 + *(int *)(sub_1000BA294(&qword_100BDDB50) + 48));
  v4 = *(_QWORD *)(v3 - 336);
  v5 = *(_QWORD *)(v3 - 136);
  v6 = *(_QWORD *)(v3 - 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v2, v6);
  sub_1000C0A40();
  v7 = *(_QWORD *)(v3 - 352);
  sub_1000D1264((uint64_t)&type metadata for ListViewAction.TappedLocationCodingKeys, v3 - 65);
  *(_BYTE *)(v3 - 65) = 0;
  v8 = sub_100051B90(&qword_100BDDDB8, (uint64_t (*)(uint64_t))&type metadata accessor for LocationModel, (uint64_t)&protocol conformance descriptor for LocationModel);
  v9 = *(_QWORD *)(v3 - 304);
  v10 = *(_QWORD *)(v3 - 104);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v5, v3 - 65, v9, v6, v8);
  if (v10)
  {
    sub_100098B40(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 512) + 8));
    v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v12 = v5;
  }
  else
  {
    *(_BYTE *)(v3 - 65) = *(_DWORD *)(v3 - 96);
    *(_BYTE *)(v3 - 66) = 1;
    v13 = sub_1001F5678();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v3 - 65, v3 - 66, v9, &type metadata for TransitionState, v13);
    sub_100098B40(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 512) + 8));
    v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v12 = *(_QWORD *)(v3 - 136);
  }
  v11(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v1, v0);
  sub_1000B44B0();
}

void sub_1003B7764(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[6];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100[8];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[2];
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v103 = a2;
  v107 = sub_1000BA294(&qword_100BDDC20);
  v105 = *(_QWORD *)(v107 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_10009D384(v4, v90[0]);
  v5 = sub_1000BA294(&qword_100BDDC28);
  sub_1000B43A4(v5, (uint64_t)&v113);
  sub_1000BBFEC(v6);
  __chkstk_darwin(v7);
  sub_100088FDC();
  v102 = v8;
  v9 = sub_1000BA294(&qword_100BDDC30);
  sub_1000B43A4(v9, (uint64_t)&v114);
  v106 = v10;
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_1000BD964(v12, v90[0]);
  v13 = sub_1000BA294(&qword_100BDDC38);
  sub_1000B43A4(v13, (uint64_t)&v112);
  sub_1000BBFEC(v14);
  __chkstk_darwin(v15);
  sub_100088FDC();
  v101 = v16;
  v95 = sub_1000BA294(&qword_100BDDC40);
  sub_1000BBFEC(*(_QWORD *)(v95 - 8));
  __chkstk_darwin(v17);
  sub_10009BE88(v18, v90[0]);
  v94 = sub_1000BA294(&qword_100BDDC48);
  sub_1000BBFEC(*(_QWORD *)(v94 - 8));
  __chkstk_darwin(v19);
  sub_100088FDC();
  v99 = v20;
  v21 = sub_1000BA294(&qword_100BDDC50);
  sub_1000B43A4(v21, (uint64_t)v109);
  sub_1000BBFEC(v22);
  __chkstk_darwin(v23);
  sub_1000BEA84(v24, v90[0]);
  v25 = sub_1000BA294(&qword_100BDDC58);
  sub_1000B43A4(v25, (uint64_t)&v107);
  sub_1000BBFEC(v26);
  __chkstk_darwin(v27);
  sub_100088FDC();
  v98 = v28;
  v93 = sub_1000BA294(&qword_100BDDC60);
  sub_1000BBFEC(*(_QWORD *)(v93 - 8));
  __chkstk_darwin(v29);
  sub_100088FDC();
  v97 = v30;
  v31 = sub_1000BA294(&qword_100BDDC68);
  sub_1000B43A4(v31, (uint64_t)&v103);
  sub_1000BBFEC(v32);
  __chkstk_darwin(v33);
  sub_1000BD41C(v34, v90[0]);
  v35 = sub_1000BA294(&qword_100BDDC70);
  sub_1000B43A4(v35, (uint64_t)&v111);
  sub_1000BBFEC(v36);
  __chkstk_darwin(v37);
  sub_100088FDC();
  v109[1] = v38;
  v104 = sub_1000BA294(&qword_100BDDC78);
  sub_1000BBFEC(*(_QWORD *)(v104 - 8));
  __chkstk_darwin(v39);
  sub_100088FDC();
  v96 = v40;
  v41 = sub_1000BA294(&qword_100BDDC80);
  sub_1000B43A4(v41, (uint64_t)&v102);
  sub_1000BBFEC(v42);
  __chkstk_darwin(v43);
  sub_100088FDC();
  sub_10009511C(v44);
  v45 = sub_1000BA294(&qword_100BDDC88);
  sub_1000B43A4(v45, (uint64_t)v100);
  sub_1000BBFEC(v46);
  __chkstk_darwin(v47);
  sub_10009511C((uint64_t)v90 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_1000BA294(&qword_100BDDC90);
  sub_1000BBFEC(*(_QWORD *)(v92 - 8));
  __chkstk_darwin(v49);
  sub_100088FDC();
  sub_10009511C(v50);
  v51 = sub_1000BA294(&qword_100BDDC98);
  v108 = *(_QWORD *)(v51 - 8);
  v109[0] = v51;
  sub_10009D98C();
  __chkstk_darwin(v52);
  sub_100098728();
  v55 = v54 - v53;
  v56 = type metadata accessor for ListViewAction(0);
  sub_10009D98C();
  __chkstk_darwin(v57);
  v59 = (char *)v90 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)v90 - v61;
  __chkstk_darwin(v63);
  v65 = (char *)v90 - v64;
  __chkstk_darwin(v66);
  v68 = (char *)v90 - v67;
  v69 = a1[3];
  v70 = a1[4];
  v110 = a1;
  sub_1000DB418(a1, v69);
  v71 = sub_1003B84F0();
  v72 = v111;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ListViewAction.CodingKeys, &type metadata for ListViewAction.CodingKeys, v71, v69, v70);
  if (!v72)
  {
    v90[2] = (uint64_t)v62;
    v90[4] = (uint64_t)v59;
    v90[3] = (uint64_t)v65;
    v91 = v56;
    v90[5] = (uint64_t)v68;
    v73 = v109[0];
    v111 = v55;
    v74 = KeyedDecodingContainer.allKeys.getter(v109[0]);
    v75 = *(_QWORD *)(v74 + 16);
    if (v75)
    {
      v76 = v73;
      v90[1] = 0;
      v77 = *(unsigned __int8 *)(v74 + 32);
      sub_10055FF58(1, v75, v74, v74 + 32, 0, (2 * v75) | 1);
      v79 = v78;
      v81 = v80;
      swift_bridgeObjectRelease();
      if (v79 == v81 >> 1)
        __asm { BR              X9 }
      v73 = v76;
    }
    v82 = v91;
    v83 = type metadata accessor for DecodingError(0);
    swift_allocError(v83, &protocol witness table for DecodingError, 0, 0);
    v85 = v84;
    sub_1000BA294(&qword_100BC6CF8);
    *v85 = v82;
    v86 = v111;
    v87 = KeyedDecodingContainer.codingPath.getter(v73);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v87, 0xD00000000000002BLL, 0x80000001009F2600, 0);
    v88 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v83 - 8) + 104))(v85, enum case for DecodingError.typeMismatch(_:), v83);
    swift_willThrow(v88, v89);
    sub_1000B48D8();
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v86, v73);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v110);
  sub_1000B44B0();
}

void sub_1003B7D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  sub_1000D0CD8();
  sub_1000BC0E0((uint64_t)&type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys, v2 - 65);
  if (!v1)
  {
    v3 = sub_1000CCC54();
    sub_100094F10(v3, v4);
    sub_1000B48D8();
    sub_1000C48A0();
    v5 = sub_1000DCE4C();
    v7 = swift_storeEnumTagMultiPayload(v5, v6, 4);
    sub_1003B8568(v0, *(_QWORD *)(v2 - 168), v7);
    JUMPOUT(0x1003B7D64);
  }
  JUMPOUT(0x1003B7D48);
}

void sub_1003B7DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  sub_100110280();
  sub_1000BC0E0((uint64_t)&type metadata for ListViewAction.TappedEditButtonCodingKeys, v2 - 65);
  if (!v1)
  {
    v3 = sub_1000CCC54();
    sub_100094F10(v3, v4);
    sub_1000B48D8();
    sub_1000C48A0();
    v5 = sub_1000DCE4C();
    v7 = swift_storeEnumTagMultiPayload(v5, v6, 5);
    sub_1003B8568(v0, *(_QWORD *)(v2 - 168), v7);
    JUMPOUT(0x1003B7D64);
  }
  JUMPOUT(0x1003B7D48);
}

void sub_1003B7E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  sub_1000994B4();
  sub_1000BC0E0((uint64_t)&type metadata for ListViewAction.TappedDoneButtonCodingKeys, v3 - 65);
  if (!v1)
  {
    v4 = sub_1000CCC54();
    v5(v4, v2);
    sub_1000B48D8();
    sub_1000C48A0();
    v6 = sub_1000DCE4C();
    v8 = swift_storeEnumTagMultiPayload(v6, v7, 6);
    sub_1003B8568(v0, *(_QWORD *)(v3 - 168), v8);
    JUMPOUT(0x1003B7D64);
  }
  JUMPOUT(0x1003B7D48);
}

void sub_1003B7E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000C0A40();
  v4 = *(_QWORD *)(v3 - 96);
  sub_1000C5468((uint64_t)&type metadata for ListViewAction.TappedLocationCodingKeys, v3 - 65, v2, (uint64_t)&type metadata for ListViewAction.TappedLocationCodingKeys);
  if (!v0)
  {
    v5 = type metadata accessor for LocationModel(0);
    *(_BYTE *)(v3 - 65) = 0;
    sub_100051B90(&qword_100BDDD08, (uint64_t (*)(uint64_t))&type metadata accessor for LocationModel, (uint64_t)&protocol conformance descriptor for LocationModel);
    v6 = *(_QWORD *)(v3 - 520);
    sub_1000C153C(v5, v3 - 65);
    sub_1000BA294(&qword_100BDDB50);
    *(_BYTE *)(v3 - 65) = 1;
    sub_1001F5FD8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for TransitionState, v3 - 65, v1);
    sub_10009CC44(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 360) + 8));
    sub_1000B48D8();
    sub_10007A170(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8));
    swift_storeEnumTagMultiPayload(v6, *(_QWORD *)(v3 - 496), 0);
    v7 = *(_QWORD *)(v3 - 504);
    sub_1003B8568(v6, v7);
    sub_1003B8568(v7, *(_QWORD *)(v3 - 168));
    JUMPOUT(0x1003B7D64);
  }
  sub_1000B48D8();
  JUMPOUT(0x1003B7D58);
}

void sub_1003B816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;
  uint64_t v6;

  sub_1000C6A74();
  sub_1000BC0E0((uint64_t)&type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys, v2 - 65);
  if (!v1)
  {
    v3 = sub_1000CCC54();
    sub_100094F10(v3, v4);
    sub_1000B48D8();
    sub_1000C48A0();
    v5 = sub_1000DCE4C();
    swift_storeEnumTagMultiPayload(v5, v6, 13);
    sub_1003B8568(v0, *(_QWORD *)(v2 - 168));
    JUMPOUT(0x1003B7D64);
  }
  JUMPOUT(0x1003B7D48);
}

void sub_1003B81B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000E773C();
  v5 = *(_QWORD *)(v4 - 184);
  sub_1000C5468((uint64_t)&type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys, v4 - 65, v3, (uint64_t)&type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys);
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v0);
    sub_1000B48D8();
    sub_1000C48A0();
    sub_1000DCE4C();
    JUMPOUT(0x1003B8208);
  }
  JUMPOUT(0x1003B7D48);
}

uint64_t sub_1003B83D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100051B90(&qword_100BDDC18, type metadata accessor for ListViewAction, (uint64_t)&unk_10099A3B8);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1003B8414(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B7764(a1, a2);
}

void sub_1003B8428(_QWORD *a1)
{
  sub_1003B6E40(a1);
}

uint64_t sub_1003B843C()
{
  return sub_100051B90(&qword_100BDDC00, type metadata accessor for ListViewAction, (uint64_t)&unk_10099A390);
}

uint64_t sub_1003B8468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListViewAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003B84AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDDC10;
  if (!qword_100BDDC10)
  {
    v1 = sub_100075EB0(&qword_100BDDC08);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDDC10);
  }
  return result;
}

unint64_t sub_1003B84F0()
{
  unint64_t result;

  result = qword_100BDDCA0;
  if (!qword_100BDDCA0)
  {
    result = swift_getWitnessTable(&unk_10099B1C8, &type metadata for ListViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCA0);
  }
  return result;
}

unint64_t sub_1003B852C()
{
  unint64_t result;

  result = qword_100BDDCA8;
  if (!qword_100BDDCA8)
  {
    result = swift_getWitnessTable(&unk_10099B178, &type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCA8);
  }
  return result;
}

uint64_t sub_1003B8568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ListViewAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003B85AC()
{
  unint64_t result;

  result = qword_100BDDCB0;
  if (!qword_100BDDCB0)
  {
    result = swift_getWitnessTable(&unk_10099B128, &type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCB0);
  }
  return result;
}

unint64_t sub_1003B85E8()
{
  unint64_t result;

  result = qword_100BDDCB8;
  if (!qword_100BDDCB8)
  {
    result = swift_getWitnessTable(&unk_10099B0D8, &type metadata for ListViewAction.LocationTransitionBeganCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCB8);
  }
  return result;
}

unint64_t sub_1003B8624()
{
  unint64_t result;

  result = qword_100BDDCC8;
  if (!qword_100BDDCC8)
  {
    result = swift_getWitnessTable(&unk_10099B088, &type metadata for ListViewAction.UpdatedSearchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCC8);
  }
  return result;
}

unint64_t sub_1003B8660()
{
  unint64_t result;

  result = qword_100BDDCD0;
  if (!qword_100BDDCD0)
  {
    result = swift_getWitnessTable(&unk_10099B038, &type metadata for ListViewAction.DismissedNotificationsOptInTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCD0);
  }
  return result;
}

unint64_t sub_1003B869C()
{
  unint64_t result;

  result = qword_100BDDCD8;
  if (!qword_100BDDCD8)
  {
    result = swift_getWitnessTable(&unk_10099AFE8, &type metadata for ListViewAction.DismissedNotificationsOptInAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCD8);
  }
  return result;
}

unint64_t sub_1003B86D8()
{
  unint64_t result;

  result = qword_100BDDCE0;
  if (!qword_100BDDCE0)
  {
    result = swift_getWitnessTable(&unk_10099AF98, &type metadata for ListViewAction.TappedUnitsConfigurationButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCE0);
  }
  return result;
}

unint64_t sub_1003B8714()
{
  unint64_t result;

  result = qword_100BDDCE8;
  if (!qword_100BDDCE8)
  {
    result = swift_getWitnessTable(&unk_10099AF48, &type metadata for ListViewAction.TappedReportWeatherButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCE8);
  }
  return result;
}

unint64_t sub_1003B8750()
{
  unint64_t result;

  result = qword_100BDDCF0;
  if (!qword_100BDDCF0)
  {
    result = swift_getWitnessTable(&unk_10099AEF8, &type metadata for ListViewAction.TappedNotificationsOptInButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCF0);
  }
  return result;
}

unint64_t sub_1003B878C()
{
  unint64_t result;

  result = qword_100BDDCF8;
  if (!qword_100BDDCF8)
  {
    result = swift_getWitnessTable(&unk_10099AEA8, &type metadata for ListViewAction.TappedNotificationSettingsButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDCF8);
  }
  return result;
}

unint64_t sub_1003B87C8()
{
  unint64_t result;

  result = qword_100BDDD00;
  if (!qword_100BDDD00)
  {
    result = swift_getWitnessTable(&unk_10099AE58, &type metadata for ListViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDD00);
  }
  return result;
}

unint64_t sub_1003B8804()
{
  unint64_t result;

  result = qword_100BDDD10;
  if (!qword_100BDDD10)
  {
    result = swift_getWitnessTable(&unk_10099AE08, &type metadata for ListViewAction.TappedDoneButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDD10);
  }
  return result;
}

unint64_t sub_1003B8840()
{
  unint64_t result;

  result = qword_100BDDD18;
  if (!qword_100BDDD18)
  {
    result = swift_getWitnessTable(&unk_10099ADB8, &type metadata for ListViewAction.TappedEditButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDD18);
  }
  return result;
}

unint64_t sub_1003B887C()
{
  unint64_t result;

  result = qword_100BDDD20;
  if (!qword_100BDDD20)
  {
    result = swift_getWitnessTable(&unk_10099AD68, &type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDD20);
  }
  return result;
}

unint64_t sub_1003B88B8()
{
  unint64_t result;

  result = qword_100BDDD28;
  if (!qword_100BDDD28)
  {
    result = swift_getWitnessTable(&unk_10099AD18, &type metadata for ListViewAction.EnteredSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDD28);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ListViewAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 14) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v5 = v6 - 15;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ListViewAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1003B89C8 + 4 * byte_10099A2DF[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1003B89FC + 4 * byte_10099A2DA[v4]))();
}

uint64_t sub_1003B89FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B8A0CLL);
  return result;
}

uint64_t sub_1003B8A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B8A20);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1003B8A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.CodingKeys()
{
  return &type metadata for ListViewAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.EnteredSettingsCodingKeys()
{
  return &type metadata for ListViewAction.EnteredSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.OpenNotificationsOptInFlowCodingKeys()
{
  return &type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedEditButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedEditButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedDoneButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedDoneButtonCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ListViewAction.TappedLocationCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003B8AD4 + 4 * byte_10099A2E9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003B8B08 + 4 * byte_10099A2E4[v4]))();
}

uint64_t sub_1003B8B08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8B10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B8B18);
  return result;
}

uint64_t sub_1003B8B24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B8B2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003B8B30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8B38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedLocationCodingKeys()
{
  return &type metadata for ListViewAction.TappedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedNotificationSettingsButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedNotificationSettingsButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedNotificationsOptInButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedNotificationsOptInButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedReportWeatherButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedReportWeatherButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedUnitsConfigurationButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedUnitsConfigurationButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.DismissedNotificationsOptInAlertCodingKeys()
{
  return &type metadata for ListViewAction.DismissedNotificationsOptInAlertCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.DismissedNotificationsOptInTipCodingKeys()
{
  return &type metadata for ListViewAction.DismissedNotificationsOptInTipCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.UpdatedSearchingCodingKeys()
{
  return &type metadata for ListViewAction.UpdatedSearchingCodingKeys;
}

uint64_t _s7Weather14ListViewActionO26UpdatedSearchingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003B8C08 + 4 * byte_10099A2EE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003B8C28 + 4 * byte_10099A2F3[v4]))();
}

_BYTE *sub_1003B8C08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003B8C28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003B8C30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003B8C38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003B8C40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003B8C48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.LocationTransitionBeganCodingKeys()
{
  return &type metadata for ListViewAction.LocationTransitionBeganCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.ResetExternalSearchQueryCodingKeys()
{
  return &type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys()
{
  return &type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys;
}

unint64_t sub_1003B8C88()
{
  unint64_t result;

  result = qword_100BDDDC0;
  if (!qword_100BDDDC0)
  {
    result = swift_getWitnessTable(&unk_10099A7A8, &type metadata for ListViewAction.LocationTransitionBeganCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDC0);
  }
  return result;
}

unint64_t sub_1003B8CC8()
{
  unint64_t result;

  result = qword_100BDDDC8;
  if (!qword_100BDDDC8)
  {
    result = swift_getWitnessTable(&unk_10099A860, &type metadata for ListViewAction.UpdatedSearchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDC8);
  }
  return result;
}

unint64_t sub_1003B8D08()
{
  unint64_t result;

  result = qword_100BDDDD0;
  if (!qword_100BDDDD0)
  {
    result = swift_getWitnessTable(&unk_10099AAF8, &type metadata for ListViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDD0);
  }
  return result;
}

unint64_t sub_1003B8D48()
{
  unint64_t result;

  result = qword_100BDDDD8;
  if (!qword_100BDDDD8)
  {
    result = swift_getWitnessTable(&unk_10099ACF0, &type metadata for ListViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDD8);
  }
  return result;
}

unint64_t sub_1003B8D88()
{
  unint64_t result;

  result = qword_100BDDDE0;
  if (!qword_100BDDDE0)
  {
    result = swift_getWitnessTable(&unk_10099AC10, &type metadata for ListViewAction.EnteredSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDE0);
  }
  return result;
}

unint64_t sub_1003B8DC8()
{
  unint64_t result;

  result = qword_100BDDDE8;
  if (!qword_100BDDDE8)
  {
    result = swift_getWitnessTable(&unk_10099AC38, &type metadata for ListViewAction.EnteredSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDE8);
  }
  return result;
}

unint64_t sub_1003B8E08()
{
  unint64_t result;

  result = qword_100BDDDF0;
  if (!qword_100BDDDF0)
  {
    result = swift_getWitnessTable(&unk_10099ABC0, &type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDF0);
  }
  return result;
}

unint64_t sub_1003B8E48()
{
  unint64_t result;

  result = qword_100BDDDF8;
  if (!qword_100BDDDF8)
  {
    result = swift_getWitnessTable(&unk_10099ABE8, &type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDDF8);
  }
  return result;
}

unint64_t sub_1003B8E88()
{
  unint64_t result;

  result = qword_100BDDE00;
  if (!qword_100BDDE00)
  {
    result = swift_getWitnessTable(&unk_10099AB70, &type metadata for ListViewAction.TappedEditButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE00);
  }
  return result;
}

unint64_t sub_1003B8EC8()
{
  unint64_t result;

  result = qword_100BDDE08;
  if (!qword_100BDDE08)
  {
    result = swift_getWitnessTable(&unk_10099AB98, &type metadata for ListViewAction.TappedEditButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE08);
  }
  return result;
}

unint64_t sub_1003B8F08()
{
  unint64_t result;

  result = qword_100BDDE10;
  if (!qword_100BDDE10)
  {
    result = swift_getWitnessTable(&unk_10099AB20, &type metadata for ListViewAction.TappedDoneButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE10);
  }
  return result;
}

unint64_t sub_1003B8F48()
{
  unint64_t result;

  result = qword_100BDDE18;
  if (!qword_100BDDE18)
  {
    result = swift_getWitnessTable(&unk_10099AB48, &type metadata for ListViewAction.TappedDoneButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE18);
  }
  return result;
}

unint64_t sub_1003B8F88()
{
  unint64_t result;

  result = qword_100BDDE20;
  if (!qword_100BDDE20)
  {
    result = swift_getWitnessTable(&unk_10099AA68, &type metadata for ListViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE20);
  }
  return result;
}

unint64_t sub_1003B8FC8()
{
  unint64_t result;

  result = qword_100BDDE28;
  if (!qword_100BDDE28)
  {
    result = swift_getWitnessTable(&unk_10099AA90, &type metadata for ListViewAction.TappedLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE28);
  }
  return result;
}

unint64_t sub_1003B9008()
{
  unint64_t result;

  result = qword_100BDDE30;
  if (!qword_100BDDE30)
  {
    result = swift_getWitnessTable(&unk_10099AA18, &type metadata for ListViewAction.TappedNotificationSettingsButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE30);
  }
  return result;
}

unint64_t sub_1003B9048()
{
  unint64_t result;

  result = qword_100BDDE38;
  if (!qword_100BDDE38)
  {
    result = swift_getWitnessTable(&unk_10099AA40, &type metadata for ListViewAction.TappedNotificationSettingsButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE38);
  }
  return result;
}

unint64_t sub_1003B9088()
{
  unint64_t result;

  result = qword_100BDDE40;
  if (!qword_100BDDE40)
  {
    result = swift_getWitnessTable(&unk_10099A9C8, &type metadata for ListViewAction.TappedNotificationsOptInButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE40);
  }
  return result;
}

unint64_t sub_1003B90C8()
{
  unint64_t result;

  result = qword_100BDDE48;
  if (!qword_100BDDE48)
  {
    result = swift_getWitnessTable(&unk_10099A9F0, &type metadata for ListViewAction.TappedNotificationsOptInButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE48);
  }
  return result;
}

unint64_t sub_1003B9108()
{
  unint64_t result;

  result = qword_100BDDE50;
  if (!qword_100BDDE50)
  {
    result = swift_getWitnessTable(&unk_10099A978, &type metadata for ListViewAction.TappedReportWeatherButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE50);
  }
  return result;
}

unint64_t sub_1003B9148()
{
  unint64_t result;

  result = qword_100BDDE58;
  if (!qword_100BDDE58)
  {
    result = swift_getWitnessTable(&unk_10099A9A0, &type metadata for ListViewAction.TappedReportWeatherButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE58);
  }
  return result;
}

unint64_t sub_1003B9188()
{
  unint64_t result;

  result = qword_100BDDE60;
  if (!qword_100BDDE60)
  {
    result = swift_getWitnessTable(&unk_10099A928, &type metadata for ListViewAction.TappedUnitsConfigurationButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE60);
  }
  return result;
}

unint64_t sub_1003B91C8()
{
  unint64_t result;

  result = qword_100BDDE68;
  if (!qword_100BDDE68)
  {
    result = swift_getWitnessTable(&unk_10099A950, &type metadata for ListViewAction.TappedUnitsConfigurationButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE68);
  }
  return result;
}

unint64_t sub_1003B9208()
{
  unint64_t result;

  result = qword_100BDDE70;
  if (!qword_100BDDE70)
  {
    result = swift_getWitnessTable(&unk_10099A8D8, &type metadata for ListViewAction.DismissedNotificationsOptInAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE70);
  }
  return result;
}

unint64_t sub_1003B9248()
{
  unint64_t result;

  result = qword_100BDDE78;
  if (!qword_100BDDE78)
  {
    result = swift_getWitnessTable(&unk_10099A900, &type metadata for ListViewAction.DismissedNotificationsOptInAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE78);
  }
  return result;
}

unint64_t sub_1003B9288()
{
  unint64_t result;

  result = qword_100BDDE80;
  if (!qword_100BDDE80)
  {
    result = swift_getWitnessTable(&unk_10099A888, &type metadata for ListViewAction.DismissedNotificationsOptInTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE80);
  }
  return result;
}

unint64_t sub_1003B92C8()
{
  unint64_t result;

  result = qword_100BDDE88;
  if (!qword_100BDDE88)
  {
    result = swift_getWitnessTable(&unk_10099A8B0, &type metadata for ListViewAction.DismissedNotificationsOptInTipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE88);
  }
  return result;
}

unint64_t sub_1003B9308()
{
  unint64_t result;

  result = qword_100BDDE90;
  if (!qword_100BDDE90)
  {
    result = swift_getWitnessTable(&unk_10099A7D0, &type metadata for ListViewAction.UpdatedSearchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE90);
  }
  return result;
}

unint64_t sub_1003B9348()
{
  unint64_t result;

  result = qword_100BDDE98;
  if (!qword_100BDDE98)
  {
    result = swift_getWitnessTable(&unk_10099A7F8, &type metadata for ListViewAction.UpdatedSearchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDE98);
  }
  return result;
}

unint64_t sub_1003B9388()
{
  unint64_t result;

  result = qword_100BDDEA0;
  if (!qword_100BDDEA0)
  {
    result = swift_getWitnessTable(&unk_10099A718, &type metadata for ListViewAction.LocationTransitionBeganCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEA0);
  }
  return result;
}

unint64_t sub_1003B93C8()
{
  unint64_t result;

  result = qword_100BDDEA8;
  if (!qword_100BDDEA8)
  {
    result = swift_getWitnessTable(&unk_10099A740, &type metadata for ListViewAction.LocationTransitionBeganCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEA8);
  }
  return result;
}

unint64_t sub_1003B9408()
{
  unint64_t result;

  result = qword_100BDDEB0;
  if (!qword_100BDDEB0)
  {
    result = swift_getWitnessTable(&unk_10099A6C8, &type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEB0);
  }
  return result;
}

unint64_t sub_1003B9448()
{
  unint64_t result;

  result = qword_100BDDEB8;
  if (!qword_100BDDEB8)
  {
    result = swift_getWitnessTable(&unk_10099A6F0, &type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEB8);
  }
  return result;
}

unint64_t sub_1003B9488()
{
  unint64_t result;

  result = qword_100BDDEC0;
  if (!qword_100BDDEC0)
  {
    result = swift_getWitnessTable(&unk_10099A678, &type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEC0);
  }
  return result;
}

unint64_t sub_1003B94C8()
{
  unint64_t result;

  result = qword_100BDDEC8;
  if (!qword_100BDDEC8)
  {
    result = swift_getWitnessTable(&unk_10099A6A0, &type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDEC8);
  }
  return result;
}

unint64_t sub_1003B9508()
{
  unint64_t result;

  result = qword_100BDDED0;
  if (!qword_100BDDED0)
  {
    result = swift_getWitnessTable(&unk_10099AC60, &type metadata for ListViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDED0);
  }
  return result;
}

unint64_t sub_1003B9548()
{
  unint64_t result;

  result = qword_100BDDED8;
  if (!qword_100BDDED8)
  {
    result = swift_getWitnessTable(&unk_10099AC88, &type metadata for ListViewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDDED8);
  }
  return result;
}

void sub_1003B9588(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v50;
  uint64_t *v51;
  void *v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  Swift::String v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;

  v79 = a4;
  v77 = a3;
  v78 = a2;
  v75 = a1;
  v76 = a5;
  v7 = sub_1000BA294(&qword_100BDDFA0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BCB0A8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v72 - v16;
  v18 = sub_1000BA294(&qword_100BDDF88);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 <= 0.0)
  {
    v72 = v8;
    v73 = v7;
    v74 = v12;
    (*(void (**)(char *, void *, uint64_t))(v19 + 16))(v21, v75, v18);
    if ((v79 & 1) != 0)
    {
      Trend.currentValue.getter(v18);
      Trend.baseline.getter(v18);
      v40 = v73;
      TrendBaseline.value.getter(v73);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v10, v40);
      v41 = sub_1000A0794(0, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
      v42 = static Measurement.< infix<A, B>(_:_:)(v17, v15, v41, v41, v41);
      v43 = *(void (**)(char *, uint64_t))(v74 + 8);
      v43(v15, v11);
      v43(v17, v11);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      if ((v42 & 1) != 0)
      {
        v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v82._countAndFlagsBits = 0xD000000000000082;
        v82._object = (void *)0x80000001009FE560;
        v39 = 0xE000000000000000;
        v45._countAndFlagsBits = 0x766120776F6C6562;
        v45._object = (void *)0xED00006567617265;
        v46._countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v82);
        countAndFlagsBits = v47._countAndFlagsBits;
        object = v47._object;

        v50 = String.trimmingHyphensAndMinusSigns()();
        v22 = v50._countAndFlagsBits;
        v25 = (uint64_t)v50._object;
        v37 = 0;
LABEL_14:
        v51 = v76;
        goto LABEL_15;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    v52 = (void *)objc_opt_self(NSBundle);
    v53 = objc_msgSend(v52, "mainBundle");
    if (a6 == 0.0)
    {
      v54._countAndFlagsBits = 0xD000000000000022;
      v83._countAndFlagsBits = 0xD00000000000009DLL;
      v83._object = (void *)0x80000001009FE440;
      v54._object = (void *)0x80000001009FE410;
      v55._countAndFlagsBits = 0x657661206D6F7266;
      v55._object = (void *)0xEC00000065676172;
      v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v83);
      countAndFlagsBits = v56._countAndFlagsBits;
      object = v56._object;

      v57 = objc_msgSend(v52, "mainBundle");
      v58 = 0xD000000000000038;
      v59 = 0xD00000000000003FLL;
      v71 = 0x80000001009FE520;
      v60 = 0x80000001009FE4E0;
    }
    else
    {
      v61._countAndFlagsBits = 0xD000000000000028;
      v84._countAndFlagsBits = 0xD0000000000000A4;
      v84._object = (void *)0x80000001009FE2D0;
      v61._object = (void *)0x80000001009FE2A0;
      v62._countAndFlagsBits = 0x657661206D6F7266;
      v62._object = (void *)0xEC00000065676172;
      v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v53, v62, v84);
      countAndFlagsBits = v63._countAndFlagsBits;
      object = v63._object;

      v57 = objc_msgSend(v52, "mainBundle");
      v59 = 0xD000000000000048;
      v71 = 0x80000001009FE3C0;
      v60 = 0x80000001009FE380;
      v58 = 0xD000000000000031;
    }
    v64._countAndFlagsBits = 0x206D6F7266204025;
    v64._object = (void *)0xEF65676172657661;
    v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v58, (Swift::String_optional)0, (NSBundle)v57, v64, *(Swift::String *)&v59);

    v66 = sub_1000BA294(&qword_100BC3C38);
    v67 = swift_allocObject(v66, 72, 7);
    *(_OWORD *)(v67 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v67 + 56) = &type metadata for String;
    *(_QWORD *)(v67 + 64) = sub_1000B2E24();
    v68 = v77;
    *(_QWORD *)(v67 + 32) = v78;
    *(_QWORD *)(v67 + 40) = v68;
    swift_bridgeObjectRetain(v68);
    v37 = static String.localizedStringWithFormat(_:_:)(v65._countAndFlagsBits, v65._object, v67);
    v39 = v69;
    swift_bridgeObjectRelease(v65._object);
    swift_bridgeObjectRelease(v67);
    v70 = String.replacingHyphensWithMinusSigns()();
    v22 = v70._countAndFlagsBits;
    v25 = (uint64_t)v70._object;
    goto LABEL_14;
  }
  v23 = v77;
  v22 = v78;
  v74 = sub_1003BA38C(v78, v77);
  v25 = v24;
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = objc_msgSend(v26, "mainBundle");
  v28._countAndFlagsBits = 0xD000000000000029;
  v80._countAndFlagsBits = 0xD000000000000097;
  v80._object = (void *)0x80000001009FE620;
  v28._object = (void *)0x80000001009FE5F0;
  v29._countAndFlagsBits = 0x76612065766F6261;
  v29._object = (void *)0xED00006567617265;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v80);
  v75 = v30._object;

  v31 = objc_msgSend(v26, "mainBundle");
  v32._countAndFlagsBits = 0xD000000000000011;
  v81._countAndFlagsBits = 0xD00000000000004ALL;
  v81._object = (void *)0x80000001009FE720;
  v33._object = (void *)0x80000001009FE6C0;
  v32._object = (void *)0x80000001009FE700;
  v33._countAndFlagsBits = 0xD000000000000031;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v31, v32, v81);

  v35 = sub_1000BA294(&qword_100BC3C38);
  v36 = swift_allocObject(v35, 72, 7);
  *(_OWORD *)(v36 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v36 + 56) = &type metadata for String;
  *(_QWORD *)(v36 + 64) = sub_1000B2E24();
  *(_QWORD *)(v36 + 32) = v22;
  *(_QWORD *)(v36 + 40) = v23;
  swift_bridgeObjectRetain(v23);
  v37 = static String.localizedStringWithFormat(_:_:)(v34._countAndFlagsBits, v34._object, v36);
  v39 = v38;
  swift_bridgeObjectRelease(v34._object);
  swift_bridgeObjectRelease(v36);
  if ((v79 & 1) != 0)
  {
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRetain(v23);
    v25 = v23;
  }
  else
  {
    v22 = v74;
  }
  countAndFlagsBits = v30._countAndFlagsBits;
  object = v75;
  v51 = v76;
LABEL_15:
  *v51 = v22;
  v51[1] = v25;
  v51[2] = countAndFlagsBits;
  v51[3] = (uint64_t)object;
  v51[4] = v37;
  v51[5] = v39;
}

void sub_1003B9C80(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v50;
  uint64_t *v51;
  void *v52;
  id v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  objc_class *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  NSBundle v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  Swift::String v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;
  Swift::String v86;

  v81 = a4;
  v79 = a3;
  v80 = a2;
  v77 = a1;
  v78 = a5;
  v7 = sub_1000BA294(&qword_100BDD4A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC4E68);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v74 - v16;
  v18 = sub_1000BA294(&qword_100BCB238);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 <= 0.0)
  {
    v74 = v8;
    v75 = v7;
    v76 = v12;
    (*(void (**)(char *, void *, uint64_t))(v19 + 16))(v21, v77, v18);
    if ((v81 & 1) != 0)
    {
      Trend.currentValue.getter(v18);
      Trend.baseline.getter(v18);
      v40 = v75;
      TrendBaseline.value.getter(v75);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v40);
      v41 = sub_1000A0794(0, (unint64_t *)&qword_100BC5658, NSUnitTemperature_ptr);
      v42 = static Measurement.< infix<A, B>(_:_:)(v17, v15, v41, v41, v41);
      v43 = *(void (**)(char *, uint64_t))(v76 + 8);
      v43(v15, v11);
      v43(v17, v11);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      if ((v42 & 1) != 0)
      {
        v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v45._countAndFlagsBits = 0xD000000000000018;
        v84._countAndFlagsBits = 0xD000000000000085;
        v84._object = (void *)0x80000001009FDD50;
        v45._object = (void *)0x80000001009FDD30;
        v39 = 0xE000000000000000;
        v46._countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v84);
        countAndFlagsBits = v47._countAndFlagsBits;
        object = v47._object;

        v50 = String.trimmingHyphensAndMinusSigns()();
        v22 = v50._countAndFlagsBits;
        v25 = (uint64_t)v50._object;
        v37 = 0;
LABEL_14:
        v51 = v78;
        goto LABEL_15;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    v52 = (void *)objc_opt_self(NSBundle);
    v53 = objc_msgSend(v52, "mainBundle");
    if (a6 == 0.0)
    {
      v85._countAndFlagsBits = 0x10000000000000ABLL;
      v54._countAndFlagsBits = 0xD00000000000002ELL;
      v85._object = (void *)0x80000001009FDBC0;
      v54._object = (void *)0x80000001009FDB90;
      v55._object = (void *)0x80000001009FD9E0;
      v55._countAndFlagsBits = 0xD000000000000017;
      v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v85);
      countAndFlagsBits = v56._countAndFlagsBits;
      object = v56._object;

      v57 = (objc_class *)objc_msgSend(v52, "mainBundle");
      v58 = 0x1000000000000062;
      v59 = 0xD00000000000001ALL;
      v60 = 0xD000000000000044;
      v73 = 0x80000001009FDCC0;
      v61 = 0x80000001009FDC70;
      v62 = 0x80000001009FDB00;
      v63.super.isa = v57;
    }
    else
    {
      v86._countAndFlagsBits = 0x10000000000000B2;
      v64._countAndFlagsBits = 0xD000000000000034;
      v86._object = (void *)0x80000001009FDA00;
      v64._object = (void *)0x80000001009FD9A0;
      v65._object = (void *)0x80000001009FD9E0;
      v65._countAndFlagsBits = 0xD000000000000017;
      v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v53, v65, v86);
      countAndFlagsBits = v66._countAndFlagsBits;
      object = v66._object;

      v57 = (objc_class *)objc_msgSend(v52, "mainBundle");
      v59 = 0xD00000000000001ALL;
      v60 = 0xD00000000000003DLL;
      v73 = 0x80000001009FDB20;
      v61 = 0x80000001009FDAC0;
      v62 = 0x80000001009FDB00;
      v63.super.isa = v57;
      v58 = 0x1000000000000060;
    }
    v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v60, (Swift::String_optional)0, v63, *(Swift::String *)&v59, *(Swift::String *)&v58);

    v68 = sub_1000BA294(&qword_100BC3C38);
    v69 = swift_allocObject(v68, 72, 7);
    *(_OWORD *)(v69 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v69 + 56) = &type metadata for String;
    *(_QWORD *)(v69 + 64) = sub_1000B2E24();
    v70 = v79;
    *(_QWORD *)(v69 + 32) = v80;
    *(_QWORD *)(v69 + 40) = v70;
    swift_bridgeObjectRetain(v70);
    v37 = static String.localizedStringWithFormat(_:_:)(v67._countAndFlagsBits, v67._object, v69);
    v39 = v71;
    swift_bridgeObjectRelease(v67._object);
    swift_bridgeObjectRelease(v69);
    v72 = String.replacingHyphensWithMinusSigns()();
    v22 = v72._countAndFlagsBits;
    v25 = (uint64_t)v72._object;
    goto LABEL_14;
  }
  v23 = v79;
  v22 = v80;
  v76 = sub_1003BA38C(v80, v79);
  v25 = v24;
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = objc_msgSend(v26, "mainBundle");
  v82._countAndFlagsBits = 0x10000000000000A5;
  v28._countAndFlagsBits = 0xD000000000000018;
  v29._countAndFlagsBits = 0xD000000000000035;
  v82._object = (void *)0x80000001009FDE40;
  v29._object = (void *)0x80000001009FDDE0;
  v28._object = (void *)0x80000001009FDE20;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v27, v28, v82);
  v77 = v30._object;

  v31 = objc_msgSend(v26, "mainBundle");
  v32._countAndFlagsBits = 0xD00000000000001CLL;
  v33._countAndFlagsBits = 0xD00000000000003DLL;
  v83._object = (void *)0x80000001009FDF50;
  v33._object = (void *)0x80000001009FDEF0;
  v32._object = (void *)0x80000001009FDF30;
  v83._countAndFlagsBits = 0x1000000000000060;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v31, v32, v83);

  v35 = sub_1000BA294(&qword_100BC3C38);
  v36 = swift_allocObject(v35, 72, 7);
  *(_OWORD *)(v36 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v36 + 56) = &type metadata for String;
  *(_QWORD *)(v36 + 64) = sub_1000B2E24();
  *(_QWORD *)(v36 + 32) = v22;
  *(_QWORD *)(v36 + 40) = v23;
  swift_bridgeObjectRetain(v23);
  v37 = static String.localizedStringWithFormat(_:_:)(v34._countAndFlagsBits, v34._object, v36);
  v39 = v38;
  swift_bridgeObjectRelease(v34._object);
  swift_bridgeObjectRelease(v36);
  if ((v81 & 1) != 0)
  {
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRetain(v23);
    v25 = v23;
  }
  else
  {
    v22 = v76;
  }
  countAndFlagsBits = v30._countAndFlagsBits;
  object = v77;
  v51 = v78;
LABEL_15:
  *v51 = v22;
  v51[1] = v25;
  v51[2] = countAndFlagsBits;
  v51[3] = (uint64_t)object;
  v51[4] = v37;
  v51[5] = v39;
}

uint64_t sub_1003BA38C(uint64_t a1, uint64_t a2)
{
  id v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v12;

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12._object = (void *)0x80000001009FE000;
  v5._object = (void *)0x80000001009FDFC0;
  v5._countAndFlagsBits = 0xD000000000000030;
  v6._countAndFlagsBits = 4203819;
  v6._object = (void *)0xE300000000000000;
  v12._countAndFlagsBits = 0x1000000000000070;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v12);

  v8 = sub_1000BA294(&qword_100BC3C38);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_1000B2E24();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v10 = static String.localizedStringWithFormat(_:_:)(v7._countAndFlagsBits, v7._object, v9);
  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_1003BA4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Swift::String v17;

  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._object = (void *)0x80000001009FD850;
  v9._object = (void *)0x80000001009FD810;
  v9._countAndFlagsBits = 0xD000000000000037;
  v10._countAndFlagsBits = 0x4025204025;
  v10._object = (void *)0xE500000000000000;
  v17._countAndFlagsBits = 0x1000000000000142;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v17);

  v12 = sub_1000BA294(&qword_100BC3C38);
  v13 = swift_allocObject(v12, 112, 7);
  *(_OWORD *)(v13 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v13 + 56) = &type metadata for String;
  v14 = sub_1000B2E24();
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 96) = &type metadata for String;
  *(_QWORD *)(v13 + 104) = v14;
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 72) = a3;
  *(_QWORD *)(v13 + 80) = a4;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v15 = String.init(format:_:)(v11._countAndFlagsBits, v11._object, v13);
  swift_bridgeObjectRelease(v11._object);
  return v15;
}

uint64_t sub_1003BA608@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, __n128);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t (*v71)(_QWORD);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  double v81;
  void *v82;
  double v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  id v93;
  Swift::String v94;
  Swift::String v95;
  Swift::String v96;
  id v97;
  Swift::String v98;
  Swift::String v99;
  Swift::String v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  id v120;
  id v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  id v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  id v129;
  Swift::String v130;
  Swift::String v131;
  Swift::String v132;
  id v133;
  Swift::String v134;
  Swift::String v135;
  Swift::String v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  __n128 v153;
  char *v154;
  char *v155;
  id v156;
  unint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __n128 v175;
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  Swift::String v178;
  Swift::String v179;
  void *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __n128 v197;
  void (*v198)(char *, uint64_t);
  Swift::String v199;
  Swift::String v200;
  void *v201;
  uint64_t v203;
  void *v204;
  id v205;
  unint64_t v206;
  __int128 v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  void *v211;
  unint64_t v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  __int128 v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t (*v233)(char *, uint64_t);
  char *v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t, __n128);
  uint64_t v243;
  void (*v244)(char *, uint64_t);
  uint64_t v245;
  char *v246;
  void (*v247)(char *, uint64_t);
  char *v248;
  void *v249;
  char *v250;
  uint64_t (*v251)(_QWORD);
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _OWORD v255[13];
  _OWORD v256[13];
  Swift::String v257;
  Swift::String v258;
  Swift::String v259;
  Swift::String v260;
  Swift::String v261;
  Swift::String v262;
  Swift::String v263;

  v231 = a3;
  v232 = a2;
  v249 = a1;
  v230 = a4;
  v254 = type metadata accessor for WeatherFormatPlaceholder(0);
  v247 = *(void (**)(char *, uint64_t))(v254 - 8);
  __chkstk_darwin(v254);
  v250 = (char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v5);
  v226 = (uint64_t)&v203 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v237 = *(_QWORD *)(v241 - 8);
  v7 = __chkstk_darwin(v241);
  v235 = (char *)&v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v248 = (char *)&v203 - v9;
  v251 = (uint64_t (*)(_QWORD))type metadata accessor for Locale.Language(0);
  v245 = *((_QWORD *)v251 - 1);
  __chkstk_darwin(v251);
  v229 = (char *)&v203 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = (void (*)(char *, uint64_t, __n128))type metadata accessor for Locale(0);
  v228 = *((_QWORD *)v242 - 1);
  __chkstk_darwin(v242);
  *(_QWORD *)&v227 = (char *)&v203 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_1000BA294(&qword_100BDD4A0);
  v244 = *(void (**)(char *, uint64_t))(v238 - 8);
  __chkstk_darwin(v238);
  v13 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BC4E68);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v246 = (char *)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v236 = (char *)&v203 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v203 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v203 - v24;
  __chkstk_darwin(v23);
  v240 = (char *)&v203 - v26;
  v27 = sub_1000BA294(&qword_100BCB238);
  Trend.currentValue.getter(v27);
  v28 = type metadata accessor for UnitManager(0);
  v29 = static UnitManager.standard.getter(v28);
  v30 = (void *)UnitManager.temperature.getter();
  swift_release(v29);
  Measurement<>.converted(to:)(v30, v14);

  v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  v31(v22, v14);
  Measurement.rounded.getter(v14);
  v31(v25, v14);
  v243 = v27;
  Trend.baseline.getter(v27);
  v32 = v238;
  TrendBaseline.value.getter(v238);
  v233 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v244 + 1);
  v234 = v13;
  v33 = v233(v13, v32);
  v252 = v28;
  v34 = static UnitManager.standard.getter(v33);
  v35 = (void *)UnitManager.temperature.getter();
  swift_release(v34);
  Measurement<>.converted(to:)(v35, v14);

  v31(v22, v14);
  Measurement.rounded.getter(v14);
  v31(v25, v14);
  Measurement.rounded.getter(v14);
  Measurement.rounded.getter(v14);
  v36 = sub_1000A0794(0, (unint64_t *)&qword_100BC5658, NSUnitTemperature_ptr);
  static Measurement<>.- infix(_:_:)(v25, v22, v36);
  v31(v22, v14);
  v239 = v25;
  v253 = v14;
  v244 = v31;
  v37 = ((uint64_t (*)(char *, uint64_t))v31)(v25, v14);
  v38 = v227;
  v39 = static Locale.current.getter(v37);
  v40 = v229;
  Locale.language.getter(v39);
  v41 = v38;
  v42 = v242;
  v43 = (*(uint64_t (**)(uint64_t))(v228 + 8))(v41);
  LOBYTE(v34) = Locale.Language.prefersFullTemperatureScale.getter(v43);
  v44 = (*(uint64_t (**)(char *, uint64_t (*)(_QWORD)))(v245 + 8))(v40, v251);
  if ((v34 & 1) != 0)
  {
    v45 = static Set<>.value.getter(v44);
    v46 = v226;
    _s7Weather24LocationCompositionStateOwst_0(v226, 1, 1, (uint64_t)v42);
    v47 = v248;
    static WeatherFormatStyle<>.weather(_:locale:)(v45, v46);
    swift_bridgeObjectRelease(v45);
    sub_100021A68(v46, &qword_100BC3340);
    LODWORD(v245) = enum case for WeatherFormatPlaceholder.none(_:);
    v48 = v247;
    v251 = (uint64_t (*)(_QWORD))*((_QWORD *)v247 + 13);
    v49 = v250;
    v50 = v254;
    v51 = v251(v250);
    v52 = static UnitManager.standard.getter(v51);
    v229 = (char *)sub_1000ABD74((unint64_t *)&qword_100BCB9D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
    v53 = v241;
    *(_QWORD *)&v227 = Measurement.formatted<A>(_:placeholder:unitManager:)(v47, v49, v52, &protocol witness table for UnitManager, v253, v241, v229);
    v55 = v54;
    v56 = swift_release(v52);
    v57 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v48 + 1);
    v57(v49, v50, v56);
    v247 = *(void (**)(char *, uint64_t))(v237 + 8);
    v58 = ((uint64_t (*)(char *, uint64_t))v247)(v47, v53);
    v59 = static Set<>.unit.getter(v58);
    _s7Weather24LocationCompositionStateOwst_0(v46, 1, 1, (uint64_t)v242);
    static WeatherFormatStyle<>.weather(_:locale:)(v59, v46);
    swift_bridgeObjectRelease(v59);
    sub_100021A68(v46, &qword_100BC3340);
    v60 = ((uint64_t (*)(char *, _QWORD, uint64_t))v251)(v49, v245, v50);
    v61 = static UnitManager.standard.getter(v60);
    v62 = Measurement.formatted<A>(_:placeholder:unitManager:)(v47, v49, v61, &protocol witness table for UnitManager, v253, v53, v229);
    v228 = v63;
    v229 = (char *)v62;
    v64 = swift_release(v61);
    v65 = v247;
    v242 = v57;
    v57(v49, v50, v64);
    v66 = v53;
    v67 = v227;
    v68 = v65;
    v65(v47, v66);
  }
  else
  {
    v69 = v248;
    static WeatherFormatStyle<>.weather.getter(v44);
    v70 = v247;
    v71 = (uint64_t (*)(_QWORD))*((_QWORD *)v247 + 13);
    v72 = v250;
    LODWORD(v245) = enum case for WeatherFormatPlaceholder.none(_:);
    v73 = v254;
    v251 = v71;
    v74 = v71(v250);
    v75 = static UnitManager.standard.getter(v74);
    v76 = sub_1000ABD74((unint64_t *)&qword_100BCB9D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
    v77 = v241;
    v67 = Measurement.formatted<A>(_:placeholder:unitManager:)(v69, v72, v75, &protocol witness table for UnitManager, v253, v241, v76);
    v55 = v78;
    v79 = swift_release(v75);
    v242 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v70 + 1);
    v242(v72, v73, v79);
    v68 = *(void (**)(char *, uint64_t))(v237 + 8);
    v68(v69, v77);
    v228 = 0;
    v229 = 0;
  }
  v80 = v253;
  v81 = Measurement.value.getter(v253);
  v82 = v249;
  sub_1003B9C80(v249, v67, v55, 0, (uint64_t *)v256, v81);
  v223 = *((_QWORD *)&v256[0] + 1);
  v224 = *(_QWORD *)&v256[0];
  v227 = v256[1];
  v225 = *((_QWORD *)&v256[2] + 1);
  v226 = *(_QWORD *)&v256[2];
  v83 = Measurement.value.getter(v80);
  sub_1003B9C80(v82, v67, v55, 1, (uint64_t *)v256, v83);
  v84 = v256[0];
  v85 = v256[1];
  swift_bridgeObjectRelease(*((_QWORD *)&v256[2] + 1));
  swift_bridgeObjectRelease(v55);
  v86 = sub_1003BA4BC(v84, *((uint64_t *)&v84 + 1), v85, *((uint64_t *)&v85 + 1));
  v221 = v87;
  v222 = v86;
  swift_bridgeObjectRelease(*((_QWORD *)&v85 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)&v84 + 1));
  v88 = (void *)objc_opt_self(NSBundle);
  v89 = objc_msgSend(v88, "mainBundle");
  v90._countAndFlagsBits = 0xD00000000000001ELL;
  v257._countAndFlagsBits = 0xD00000000000003DLL;
  v257._object = (void *)0x80000001009FD4F0;
  v90._object = (void *)0x80000001009FD4D0;
  v91._countAndFlagsBits = 0x7961646F54;
  v91._object = (void *)0xE500000000000000;
  v92 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, (Swift::String_optional)0, (NSBundle)v89, v91, v257);
  object = v92._object;
  countAndFlagsBits = v92._countAndFlagsBits;

  v205 = v88;
  v93 = objc_msgSend(v88, "mainBundle");
  v258._countAndFlagsBits = 0xD00000000000004BLL;
  v212 = 0xD00000000000004BLL;
  v258._object = (void *)0x80000001009FD560;
  v94._object = (void *)0x80000001009FD530;
  v211 = (void *)0x80000001009FD530;
  v94._countAndFlagsBits = 0xD00000000000002CLL;
  v95._countAndFlagsBits = 0x2073277961646F54;
  v95._object = (void *)0xEC00000068676948;
  v96 = NSLocalizedString(_:tableName:bundle:value:comment:)(v94, (Swift::String_optional)0, (NSBundle)v93, v95, v258);
  v217 = v96._object;
  v218 = v96._countAndFlagsBits;

  v97 = objc_msgSend(v88, "mainBundle");
  v98._countAndFlagsBits = 0xD00000000000003BLL;
  v259._object = (void *)0x80000001009FD5F0;
  v98._object = (void *)0x80000001009FD5B0;
  v99._countAndFlagsBits = 1076181576;
  v99._object = (void *)0xE400000000000000;
  v259._countAndFlagsBits = 0x100000000000004BLL;
  v100 = NSLocalizedString(_:tableName:bundle:value:comment:)(v98, (Swift::String_optional)0, (NSBundle)v97, v99, v259);
  v216 = v100._countAndFlagsBits;
  v214 = (uint64_t)v100._object;

  v208 = sub_1000BA294(&qword_100BC3C38);
  v101 = swift_allocObject(v208, 72, 7);
  v207 = xmmword_10097CA50;
  *(_OWORD *)(v101 + 16) = xmmword_10097CA50;
  v102 = v239;
  v103 = Trend.currentValue.getter(v243);
  v104 = v248;
  v105 = static WeatherFormatStyle<>.weather.getter(v103);
  v106 = v235;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v105);
  v107 = v241;
  v247 = v68;
  v68(v104, v241);
  v108 = v250;
  v109 = ((uint64_t (*)(char *, _QWORD, uint64_t))v251)(v250, v245, v254);
  v110 = static UnitManager.standard.getter(v109);
  v237 = sub_1000ABD74((unint64_t *)&qword_100BCB9D8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
  v111 = v253;
  v112 = Measurement.formatted<A>(_:placeholder:unitManager:)(v106, v108, v110, &protocol witness table for UnitManager, v253, v107, v237);
  v114 = v113;
  v115 = swift_release(v110);
  v242(v108, v254, v115);
  v247(v106, v107);
  v244(v102, v111);
  *(_QWORD *)(v101 + 56) = &type metadata for String;
  v206 = sub_1000B2E24();
  *(_QWORD *)(v101 + 64) = v206;
  *(_QWORD *)(v101 + 32) = v112;
  *(_QWORD *)(v101 + 40) = v114;
  v116 = v214;
  v117 = String.init(format:_:)(v216, v214, v101);
  v215 = v118;
  v216 = v117;
  *(_QWORD *)&v119 = swift_bridgeObjectRelease(v116).n128_u64[0];
  v120 = v205;
  v121 = objc_msgSend(v205, "mainBundle", v119);
  v122._countAndFlagsBits = 0xD000000000000017;
  v260._countAndFlagsBits = 0xD000000000000041;
  v260._object = (void *)0x80000001009FD660;
  v122._object = (void *)0x80000001009FD640;
  v123._countAndFlagsBits = 0x65676172657641;
  v123._object = (void *)0xE700000000000000;
  v124 = NSLocalizedString(_:tableName:bundle:value:comment:)(v122, (Swift::String_optional)0, (NSBundle)v121, v123, v260);
  v213 = v124._object;
  v214 = v124._countAndFlagsBits;

  v125 = objc_msgSend(v120, "mainBundle");
  v261._object = (void *)0x80000001009FD6B0;
  v126._countAndFlagsBits = 0xD00000000000002CLL;
  v126._object = v211;
  v261._countAndFlagsBits = v212;
  v127._countAndFlagsBits = 0x2065676172657641;
  v127._object = (void *)0xEC00000068676948;
  v128 = NSLocalizedString(_:tableName:bundle:value:comment:)(v126, (Swift::String_optional)0, (NSBundle)v125, v127, v261);
  v211 = v128._object;
  v212 = v128._countAndFlagsBits;

  v129 = objc_msgSend(v120, "mainBundle");
  v130._countAndFlagsBits = 0xD000000000000020;
  v262._countAndFlagsBits = 0xD00000000000004ALL;
  v262._object = (void *)0x80000001009FD730;
  v130._object = (void *)0x80000001009FD700;
  v131._countAndFlagsBits = 6780481;
  v131._object = (void *)0xE300000000000000;
  v132 = NSLocalizedString(_:tableName:bundle:value:comment:)(v130, (Swift::String_optional)0, (NSBundle)v129, v131, v262);
  v209 = v132._object;
  v210 = v132._countAndFlagsBits;

  v133 = objc_msgSend(v120, "mainBundle");
  v263._countAndFlagsBits = 0x100000000000004FLL;
  v134._countAndFlagsBits = 0xD00000000000003ELL;
  v263._object = (void *)0x80000001009FD7C0;
  v134._object = (void *)0x80000001009FD780;
  v135._countAndFlagsBits = 1076181576;
  v135._object = (void *)0xE400000000000000;
  v136 = NSLocalizedString(_:tableName:bundle:value:comment:)(v134, (Swift::String_optional)0, (NSBundle)v133, v135, v263);
  v204 = v136._object;
  v205 = (id)v136._countAndFlagsBits;

  v137 = swift_allocObject(v208, 72, 7);
  *(_OWORD *)(v137 + 16) = v207;
  v138 = v234;
  Trend.baseline.getter(v243);
  v139 = v238;
  TrendBaseline.value.getter(v238);
  v140 = v233(v138, v139);
  v141 = v248;
  v142 = static WeatherFormatStyle<>.weather.getter(v140);
  v143 = v106;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v142);
  v144 = v241;
  v145 = v247;
  v247(v141, v241);
  v146 = v250;
  v147 = v254;
  v148 = ((uint64_t (*)(char *, _QWORD, uint64_t))v251)(v250, v245, v254);
  v149 = static UnitManager.standard.getter(v148);
  v150 = v253;
  v151 = v239;
  v208 = Measurement.formatted<A>(_:placeholder:unitManager:)(v143, v146, v149, &protocol witness table for UnitManager, v253, v144, v237);
  *(_QWORD *)&v207 = v152;
  v153 = swift_release(v149);
  v242(v146, v147, v153);
  v154 = v143;
  v145(v143, v144);
  v155 = v151;
  v244(v151, v150);
  v156 = v205;
  v157 = v206;
  *(_QWORD *)(v137 + 56) = &type metadata for String;
  *(_QWORD *)(v137 + 64) = v157;
  v158 = v207;
  *(_QWORD *)(v137 + 32) = v208;
  *(_QWORD *)(v137 + 40) = v158;
  v159 = v204;
  v208 = String.init(format:_:)(v156, v204, v137);
  *(_QWORD *)&v207 = v160;
  swift_bridgeObjectRelease(v159);
  v161 = v155;
  v162 = Trend.currentValue.getter(v243);
  v163 = v248;
  v164 = static WeatherFormatStyle<>.weather.getter(v162);
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v164);
  v165 = v144;
  v145(v163, v144);
  v166 = v250;
  v167 = v254;
  v168 = ((uint64_t (*)(char *, _QWORD, uint64_t))v251)(v250, v245, v254);
  v169 = static UnitManager.standard.getter(v168);
  v170 = v253;
  v171 = v161;
  v172 = Measurement.formatted<A>(_:placeholder:unitManager:)(v154, v166, v169, &protocol witness table for UnitManager, v253, v165, v237);
  v174 = v173;
  v175 = swift_release(v169);
  v242(v166, v167, v175);
  v176 = v247;
  v247(v154, v165);
  v177 = v170;
  v244(v171, v170);
  *(_QWORD *)&v256[0] = v172;
  *((_QWORD *)&v256[0] + 1) = v174;
  swift_bridgeObjectRetain(v174);
  v178._countAndFlagsBits = 8250;
  v178._object = (void *)0xE200000000000000;
  String.append(_:)(v178);
  v180 = v217;
  v179._countAndFlagsBits = v218;
  v179._object = v217;
  String.append(_:)(v179);
  swift_bridgeObjectRelease(v174);
  swift_bridgeObjectRelease(v180);
  v217 = (void *)*((_QWORD *)&v256[0] + 1);
  v218 = *(_QWORD *)&v256[0];
  v181 = v234;
  Trend.baseline.getter(v243);
  v182 = v238;
  TrendBaseline.value.getter(v238);
  v183 = v233(v181, v182);
  v184 = v248;
  v185 = static WeatherFormatStyle<>.weather.getter(v183);
  v186 = v235;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter(v185);
  v176(v184, v165);
  v187 = v250;
  v188 = v254;
  v189 = ((uint64_t (*)(char *, _QWORD, uint64_t))v251)(v250, v245, v254);
  v190 = static UnitManager.standard.getter(v189);
  v191 = v186;
  v192 = v177;
  v193 = v239;
  v194 = Measurement.formatted<A>(_:placeholder:unitManager:)(v186, v187, v190, &protocol witness table for UnitManager, v177, v165, v237);
  v196 = v195;
  v197 = swift_release(v190);
  v242(v187, v188, v197);
  v247(v191, v165);
  v198 = v244;
  v244(v193, v192);
  *(_QWORD *)&v256[0] = v194;
  *((_QWORD *)&v256[0] + 1) = v196;
  swift_bridgeObjectRetain(v196);
  v199._countAndFlagsBits = 8250;
  v199._object = (void *)0xE200000000000000;
  String.append(_:)(v199);
  v201 = v211;
  v200._countAndFlagsBits = v212;
  v200._object = v211;
  String.append(_:)(v200);
  swift_bridgeObjectRelease(v196);
  swift_bridgeObjectRelease(v201);
  *(_QWORD *)&v255[0] = v224;
  *((_QWORD *)&v255[0] + 1) = v223;
  *(_QWORD *)&v255[1] = v229;
  *((_QWORD *)&v255[1] + 1) = v228;
  v255[2] = v227;
  *(_QWORD *)&v255[3] = v226;
  *((_QWORD *)&v255[3] + 1) = v225;
  *(_QWORD *)&v255[4] = v222;
  *((_QWORD *)&v255[4] + 1) = v221;
  *(_QWORD *)&v255[5] = countAndFlagsBits;
  *((_QWORD *)&v255[5] + 1) = object;
  v255[6] = 0uLL;
  *(_QWORD *)&v255[7] = v216;
  *((_QWORD *)&v255[7] + 1) = v215;
  *(_QWORD *)&v255[8] = v218;
  *((_QWORD *)&v255[8] + 1) = v217;
  *(_QWORD *)&v255[9] = v214;
  *((_QWORD *)&v255[9] + 1) = v213;
  *(_QWORD *)&v255[10] = v210;
  *((_QWORD *)&v255[10] + 1) = v209;
  *(_QWORD *)&v255[11] = v208;
  *((_QWORD *)&v255[11] + 1) = v207;
  v255[12] = v256[0];
  memcpy(v256, v255, sizeof(v256));
  sub_100019C08(v256, 0, v231, v230);
  sub_100029D2C(v255);
  v198(v246, v192);
  v198(v236, v192);
  return ((uint64_t (*)(char *, uint64_t))v198)(v240, v192);
}

uint64_t sub_1003BB790@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  double v52;
  void *v53;
  uint64_t v54;
  double v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  void (*v84)(char *, uint64_t);
  id v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  id v102;
  id v103;
  Swift::String v104;
  Swift::String v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  Swift::String v110;
  void *v111;
  uint64_t v112;
  Swift::String v113;
  id v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;
  void (*v118)(char *);
  uint64_t v119;
  Swift::String v120;
  void *v121;
  uint64_t v122;
  Swift::String v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  void *object;
  uint64_t countAndFlagsBits;
  __int128 v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  char *v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *);
  unsigned int v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  void (*v172)(char *);
  char *v173;
  uint64_t v174;
  uint64_t v175;
  _OWORD v176[13];
  _OWORD v177[13];
  Swift::String v178;
  Swift::String v179;
  Swift::String v180;
  Swift::String v181;

  v148 = a4;
  v149 = a3;
  v174 = a2;
  v147 = a5;
  v153 = type metadata accessor for WeatherFormatPlaceholder(0);
  v157 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v130 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v7);
  v167 = (uint64_t)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle(0);
  v156 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v128 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_1000BA294(&qword_100BDDFA0);
  v162 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v163 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WeatherFormatScaling(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1000BA294(&qword_100BCB0A8);
  v15 = *(_QWORD *)(v175 - 8);
  v16 = __chkstk_darwin(v175);
  v137 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v173 = (char *)&v127 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v127 - v21;
  __chkstk_darwin(v20);
  v166 = (char *)&v127 - v23;
  v24 = sub_1000BA294(&qword_100BDDF88);
  v165 = v24;
  v150 = a1;
  Trend.currentValue.getter(v24);
  LODWORD(v171) = enum case for WeatherFormatScaling.automatic(_:);
  v172 = *(void (**)(char *))(v12 + 104);
  v168 = v11;
  v172(v14);
  v25 = v174;
  Measurement<>.converted(usage:scaling:)(v174);
  v170 = *(void (**)(char *, uint64_t))(v12 + 8);
  v170(v14, v11);
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v22, v175);
  v155 = v26;
  v27 = v163;
  Trend.baseline.getter(v24);
  v28 = v173;
  v29 = v164;
  TrendBaseline.value.getter(v164);
  v138 = *(void (**)(char *, uint64_t))(v162 + 8);
  v138(v27, v29);
  v30 = v171;
  v31 = v168;
  v32 = (void (*)(char *, uint64_t, uint64_t))v172;
  ((void (*)(char *, _QWORD, uint64_t))v172)(v14, v171, v168);
  v146 = v22;
  Measurement<>.converted(usage:scaling:)(v25);
  v33 = v14;
  v34 = v14;
  v35 = (void (*)(char *, uint64_t, __n128))v170;
  v170(v33, v31);
  v26(v28, v175);
  v36 = sub_1000A0794(0, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
  static Measurement<>.- infix(_:_:)(v166, v22, v36);
  v162 = type metadata accessor for Locale(0);
  v37 = v167;
  v38 = _s7Weather24LocationCompositionStateOwst_0(v167, 1, 1, v162);
  v39 = static Set<>.full.getter(v38);
  v129 = v34;
  v32(v34, v30, v31);
  v40 = v128;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)(v39, v174, v34, 2, v37);
  v41 = swift_bridgeObjectRelease(v39);
  v35(v34, v31, v41);
  sub_100021A68(v37, &qword_100BC3340);
  v161 = enum case for WeatherFormatPlaceholder.none(_:);
  v42 = v157;
  v160 = *(void (**)(char *))(v157 + 104);
  v43 = v130;
  v44 = v153;
  v160(v130);
  v159 = type metadata accessor for UnitManager(0);
  v45 = static UnitManager.standard.getter(v159);
  v158 = sub_1000ABD74((unint64_t *)&qword_100BCB0B8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitLength.BaseWeatherFormatStyle);
  v46 = v175;
  v47 = v169;
  v154 = (id)Measurement.formatted<A>(_:placeholder:unitManager:)(v40, v43, v45, &protocol witness table for UnitManager, v175, v169, v158);
  v49 = v48;
  v50 = swift_release(v45);
  v157 = *(_QWORD *)(v42 + 8);
  ((void (*)(char *, uint64_t, __n128))v157)(v43, v44, v50);
  v156 = *(_QWORD *)(v156 + 8);
  v51 = v40;
  ((void (*)(char *, uint64_t))v156)(v40, v47);
  v52 = Measurement.value.getter(v46);
  v53 = v150;
  v54 = (uint64_t)v154;
  sub_1003B9588(v150, (uint64_t)v154, v49, 0, (uint64_t *)v177, v52);
  v141 = *((_QWORD *)&v177[0] + 1);
  v142 = *(_QWORD *)&v177[0];
  v145 = v177[1];
  v143 = *((_QWORD *)&v177[2] + 1);
  v144 = *(_QWORD *)&v177[2];
  v55 = Measurement.value.getter(v46);
  sub_1003B9588(v53, v54, v49, 1, (uint64_t *)v177, v55);
  v56 = v177[0];
  v57 = v177[1];
  swift_bridgeObjectRelease(*((_QWORD *)&v177[2] + 1));
  swift_bridgeObjectRelease(v49);
  v58 = sub_1003BA4BC(v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1));
  v139 = v59;
  v140 = v58;
  swift_bridgeObjectRelease(*((_QWORD *)&v57 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)&v56 + 1));
  v154 = (id)objc_opt_self(NSBundle);
  v60 = objc_msgSend(v154, "mainBundle");
  v61._countAndFlagsBits = 0xD000000000000037;
  v178._countAndFlagsBits = 0xD000000000000038;
  v178._object = (void *)0x80000001009FE0C0;
  v61._object = (void *)0x80000001009FE080;
  v62._countAndFlagsBits = 0x206425207473614CLL;
  v62._object = (void *)0xEC00000073796164;
  v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v178);

  v134 = sub_1000BA294(&qword_100BC3C38);
  v64 = swift_allocObject(v134, 72, 7);
  v133 = xmmword_10097CA50;
  *(_OWORD *)(v64 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v64 + 56) = &type metadata for Int;
  *(_QWORD *)(v64 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v64 + 32) = 30;
  v65 = String.init(format:_:)(v63._countAndFlagsBits, v63._object, v64);
  v135 = v66;
  v136 = v65;
  swift_bridgeObjectRelease(v63._object);
  v67 = v137;
  Trend.currentValue.getter(v165);
  v68 = v167;
  v69 = _s7Weather24LocationCompositionStateOwst_0(v167, 1, 1, v162);
  v70 = static Set<>.full.getter(v69);
  v71 = v129;
  v72 = v168;
  ((void (*)(char *, _QWORD, uint64_t))v172)(v129, v171, v168);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)(v70, v174, v71, 2, v68);
  v73 = swift_bridgeObjectRelease(v70);
  ((void (*)(char *, uint64_t, __n128))v170)(v71, v72, v73);
  sub_100021A68(v68, &qword_100BC3340);
  v74 = v153;
  v75 = ((uint64_t (*)(char *, _QWORD, uint64_t))v160)(v43, v161, v153);
  v76 = static UnitManager.standard.getter(v75);
  v77 = v51;
  v78 = v51;
  v79 = v175;
  v80 = v169;
  v81 = Measurement.formatted<A>(_:placeholder:unitManager:)(v77, v43, v76, &protocol witness table for UnitManager, v175, v169, v158);
  v151 = v82;
  v152 = v81;
  v83 = swift_release(v76);
  ((void (*)(char *, uint64_t, __n128))v157)(v43, v74, v83);
  ((void (*)(char *, uint64_t))v156)(v78, v80);
  v84 = v155;
  v155(v67, v79);
  v85 = objc_msgSend(v154, "mainBundle");
  v86._countAndFlagsBits = 0xD000000000000034;
  v179._object = (void *)0x80000001009FE140;
  v86._object = (void *)0x80000001009FE100;
  v87._countAndFlagsBits = 0x65676172657641;
  v87._object = (void *)0xE700000000000000;
  v179._countAndFlagsBits = 0xD00000000000002FLL;
  v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)v85, v87, v179);
  object = v88._object;
  countAndFlagsBits = v88._countAndFlagsBits;

  v89 = v163;
  Trend.baseline.getter(v165);
  v90 = v164;
  TrendBaseline.value.getter(v164);
  v138(v89, v90);
  v91 = v167;
  v92 = _s7Weather24LocationCompositionStateOwst_0(v167, 1, 1, v162);
  v93 = static Set<>.full.getter(v92);
  v94 = v168;
  ((void (*)(char *, _QWORD, uint64_t))v172)(v71, v171, v168);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)(v93, v174, v71, 2, v91);
  v95 = swift_bridgeObjectRelease(v93);
  ((void (*)(char *, uint64_t, __n128))v170)(v71, v94, v95);
  sub_100021A68(v91, &qword_100BC3340);
  v96 = ((uint64_t (*)(char *, _QWORD, uint64_t))v160)(v43, v161, v74);
  v97 = static UnitManager.standard.getter(v96);
  v98 = v175;
  v99 = v169;
  v172 = (void (*)(char *))Measurement.formatted<A>(_:placeholder:unitManager:)(v78, v43, v97, &protocol witness table for UnitManager, v175, v169, v158);
  v174 = v100;
  v101 = swift_release(v97);
  ((void (*)(char *, uint64_t, __n128))v157)(v43, v74, v101);
  ((void (*)(char *, uint64_t))v156)(v78, v99);
  v84(v67, v98);
  v102 = v154;
  v103 = objc_msgSend(v154, "mainBundle");
  v104._countAndFlagsBits = 0xD000000000000040;
  v180._countAndFlagsBits = 0xD00000000000004ELL;
  v180._object = (void *)0x80000001009FE1C0;
  v104._object = (void *)0x80000001009FE170;
  v105._countAndFlagsBits = 0x646425207473614CLL;
  v105._object = (void *)0xE800000000000000;
  v106 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, (Swift::String_optional)0, (NSBundle)v103, v105, v180);

  v107 = swift_allocObject(v134, 72, 7);
  *(_OWORD *)(v107 + 16) = v133;
  *(_QWORD *)(v107 + 56) = &type metadata for Int;
  *(_QWORD *)(v107 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v107 + 32) = 30;
  v108 = String.init(format:_:)(v106._countAndFlagsBits, v106._object, v107);
  v170 = v109;
  v171 = v108;
  swift_bridgeObjectRelease(v106._object);
  *(_QWORD *)&v177[0] = v152;
  *((_QWORD *)&v177[0] + 1) = v151;
  swift_bridgeObjectRetain(v151);
  v110._countAndFlagsBits = 8250;
  v110._object = (void *)0xE200000000000000;
  String.append(_:)(v110);
  v111 = v135;
  v112 = v136;
  v113._countAndFlagsBits = v136;
  v113._object = v135;
  String.append(_:)(v113);
  v168 = *((_QWORD *)&v177[0] + 1);
  v169 = *(_QWORD *)&v177[0];
  v114 = objc_msgSend(v102, "mainBundle");
  v115._countAndFlagsBits = 0xD00000000000003DLL;
  v181._countAndFlagsBits = 0xD000000000000045;
  v181._object = (void *)0x80000001009FE250;
  v115._object = (void *)0x80000001009FE210;
  v116._countAndFlagsBits = 6780481;
  v116._object = (void *)0xE300000000000000;
  v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v115, (Swift::String_optional)0, (NSBundle)v114, v116, v181);

  v118 = v172;
  *(_QWORD *)&v177[0] = v172;
  v119 = v174;
  *((_QWORD *)&v177[0] + 1) = v174;
  swift_bridgeObjectRetain(v174);
  v120._countAndFlagsBits = 8250;
  v120._object = (void *)0xE200000000000000;
  String.append(_:)(v120);
  v121 = object;
  v122 = countAndFlagsBits;
  v123._countAndFlagsBits = countAndFlagsBits;
  v123._object = object;
  String.append(_:)(v123);
  *(_QWORD *)&v176[0] = v142;
  *((_QWORD *)&v176[0] + 1) = v141;
  v176[1] = 0uLL;
  v176[2] = v145;
  *(_QWORD *)&v176[3] = v144;
  *((_QWORD *)&v176[3] + 1) = v143;
  *(_QWORD *)&v176[4] = v140;
  *((_QWORD *)&v176[4] + 1) = v139;
  *(_QWORD *)&v176[5] = v112;
  *((_QWORD *)&v176[5] + 1) = v111;
  *(_QWORD *)&v176[6] = v171;
  *((_QWORD *)&v176[6] + 1) = v170;
  *(_QWORD *)&v176[7] = v152;
  *((_QWORD *)&v176[7] + 1) = v151;
  *(_QWORD *)&v176[8] = v169;
  *((_QWORD *)&v176[8] + 1) = v168;
  *(_QWORD *)&v176[9] = v122;
  *((_QWORD *)&v176[9] + 1) = v121;
  v176[10] = v117;
  *(_QWORD *)&v176[11] = v118;
  *((_QWORD *)&v176[11] + 1) = v119;
  v176[12] = v177[0];
  memcpy(v177, v176, sizeof(v177));
  sub_100019C08(v177, 1, v148, v147);
  sub_100029D2C(v176);
  v124 = v175;
  v125 = v155;
  v155(v173, v175);
  v125(v146, v124);
  return ((uint64_t (*)(char *, uint64_t))v125)(v166, v124);
}

uint64_t sub_1003BC3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCB328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1003BC408(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Location(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for LocationOfInterest(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return v4;
}

uint64_t sub_1003BC4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for LocationOfInterest(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_BYTE *sub_1003BC544(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *sub_1003BC5E8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *sub_1003BC68C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *sub_1003BC730(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for LocationOfInterest(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_1003BC7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BC7E0);
}

void sub_1003BC7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    sub_100079F70();
  }
  else
  {
    v6 = type metadata accessor for Location(0);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = type metadata accessor for LocationOfInterest(0);
      v8 = *(int *)(a3 + 24);
    }
    _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
  }
}

uint64_t sub_1003BC870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BC87C);
}

_BYTE *sub_1003BC87C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for Location(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = type metadata accessor for LocationOfInterest(0);
      v10 = *(int *)(a4 + 24);
    }
    return (_BYTE *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)&v5[v10], a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for HomeAndWorkRefinementRowViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDE000;
  if (!qword_100BDE000)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeAndWorkRefinementRowViewModel);
  return result;
}

uint64_t sub_1003BC944(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = &unk_10099B308;
  result = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for LocationOfInterest(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = &unk_10099B308;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void sub_1003BC9D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;

  if (*a1 == *a2)
  {
    v4 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
    if ((static Location.== infix(_:_:)(&a1[*(int *)(v4 + 20)], &a2[*(int *)(v4 + 20)]) & 1) != 0)
      static LocationOfInterest.== infix(_:_:)(&a1[*(int *)(v4 + 24)], &a2[*(int *)(v4 + 24)]);
  }
  sub_100079F70();
}

uint64_t storeEnumTagSinglePayload for HomeAndWorkRefinementRowViewModel.InfoButtonPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003BCAB0 + 4 * byte_10099B2D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003BCAE4 + 4 * byte_10099B2D0[v4]))();
}

uint64_t sub_1003BCAE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BCAEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003BCAF4);
  return result;
}

uint64_t sub_1003BCB00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003BCB08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003BCB0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BCB14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeAndWorkRefinementRowViewModel.InfoButtonPosition()
{
  return &type metadata for HomeAndWorkRefinementRowViewModel.InfoButtonPosition;
}

unint64_t sub_1003BCB34()
{
  unint64_t result;

  result = qword_100BDE040;
  if (!qword_100BDE040)
  {
    result = swift_getWitnessTable(&unk_10099B3A4, &type metadata for HomeAndWorkRefinementRowViewModel.InfoButtonPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE040);
  }
  return result;
}

uint64_t sub_1003BCB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v122 = v3;
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v125 = v5;
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v124 = v7;
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v120 = v9;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v123 = v11;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v121 = v13;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v128 = v15;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v129 = v17;
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v127 = v19;
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v126 = v21;
  v22 = type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  v119 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v113 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v113 - v29;
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v113 - v35;
  v37 = type metadata accessor for SearchViewState.ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  v40 = (char *)&v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  v42 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100084050(v42, (uint64_t)v30, type metadata accessor for ViewState);
  sub_1003BD328((uint64_t)&v30[*(int *)(v22 + 32)], (uint64_t)v36);
  sub_1000215BC((uint64_t)v30, type metadata accessor for ViewState);
  v43 = type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v43) != 1)
  {
    v116 = v33;
    v117 = v42;
    v118 = v22;
    v44 = v128;
    v45 = v129;
    sub_100084050((uint64_t)&v36[*(int *)(v43 + 20)], (uint64_t)v40, type metadata accessor for SearchViewState.ViewState);
    sub_1000215BC((uint64_t)v36, type metadata accessor for SearchViewState);
    if (swift_getEnumCaseMultiPayload(v40) != 1)
    {
      sub_1000215BC((uint64_t)v40, type metadata accessor for SearchViewState.ViewState);
      return 1;
    }
    swift_bridgeObjectRelease();
    sub_100084050(v117, (uint64_t)v27, type metadata accessor for ViewState);
    v46 = v118;
    v47 = *(_QWORD *)&v27[*(int *)(v118 + 36) + 8];
    v114 = v41;
    v115 = v43;
    v113 = v37;
    if (v47 == 1)
    {
      v48 = (void *)objc_opt_self(UIDevice);
      v49 = objc_msgSend(v48, "currentDevice", sub_1000DDA24(), v113, v114);
      objc_msgSend(v49, "userInterfaceIdiom");

      v50 = v27[*(int *)(v46 + 28)];
      v51 = v44;
      v52 = v126;
      v53 = v127;
      v54 = (uint64_t)v27;
      v55 = v120;
      v56 = v121;
      v57 = (uint64_t)v119;
      if (v50 == 1)
      {
        swift_release(v33);
        sub_1000215BC(v54, type metadata accessor for ViewState);
        v58 = type metadata accessor for ListViewState._Storage();
        swift_allocObject(v58, 90, 7);
        sub_100149094(0, 0, 1, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
        v33 = v59;
LABEL_11:
        v61 = type metadata accessor for AppConfigurationState(0);
        v64 = sub_1000BA2E8(v52, v62, v63, v61);
        v65 = type metadata accessor for EnvironmentState(v64);
        v68 = sub_1000BA2E8(v53, v66, v67, v65);
        v69 = type metadata accessor for LocationsState(v68);
        v72 = sub_1000BA2E8(v45, v70, v71, v69);
        v73 = type metadata accessor for NotificationsOptInState(v72);
        v76 = sub_1000BA2E8(v51, v74, v75, v73);
        v77 = type metadata accessor for TimeState(v76);
        v78 = v56;
        sub_10009D34C(v56, v79, v80, v77);
        sub_100084050(v117, v57, type metadata accessor for ViewState);
        sub_10055E36C(0, 256, 2, 3, 0, 0xE000000000000000, 0, 1, 2, 0, 0, 2, 2, (uint64_t)v33);
        v82 = v81;
        v83 = type metadata accessor for ViewState.SecondaryViewState(0);
        sub_10009D34C(v55, v84, v85, v83);
        v87 = v115;
        v86 = v116;
        swift_storeEnumTagMultiPayload((char *)v116 + *(int *)(v115 + 20), v113, 3);
        v88 = v55;
        v89 = v57;
        v90 = v51;
        v91 = (uint64_t)v86 + *(int *)(v87 + 28);
        v92 = type metadata accessor for Location(0);
        sub_10009D34C(v91, v93, v94, v92);
        *v86 = 0;
        v86[1] = 0xE000000000000000;
        *((_BYTE *)v86 + *(int *)(v87 + 24)) = 0;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v87);
        v95 = type metadata accessor for DisplayMetrics(0);
        v96 = v124;
        v99 = sub_1000BA2E8(v124, v97, v98, v95);
        v100 = type metadata accessor for WeatherMapPresentationState(v99);
        v101 = v125;
        sub_10009D34C(v125, v102, v103, v100);
        v104 = v123;
        sub_100112494();
        swift_release(v82);
        sub_100021A14(v101, &qword_100BC5F68);
        sub_100021A14(v96, &qword_100BC5F70);
        sub_100021A14((uint64_t)v86, &qword_100BC5F78);
        sub_100021A14(v88, &qword_100BC5F80);
        sub_1000215BC(v89, type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v104, 0, 1, v118);
        v105 = type metadata accessor for ModalViewState(0);
        v106 = v122;
        sub_10009D34C(v122, v107, v108, v105);
        v109 = v126;
        v110 = v127;
        v111 = v129;
        v60 = sub_1000DEBAC(0, 3, v126, v127, v129, 0, 0, 0, v90, v78, v104, v106, 0, 0, 0, 0, 0, 0, 0,
                v114);
        swift_release(v33);
        sub_100021A14(v106, &qword_100BC5F60);
        sub_100021A14(v104, &qword_100BC5F88);
        sub_100021A14(v78, &qword_100BC5F90);
        sub_100021A14(v90, &qword_100BC5F98);
        sub_100021A14(v111, &qword_100BC5FA0);
        sub_100021A14(v110, &qword_100BC5FA8);
        sub_100021A14(v109, &qword_100BC5FB0);
        return v60;
      }
    }
    else
    {
      sub_1000DDA24();
      v51 = v44;
      v52 = v126;
      v53 = v127;
      v54 = (uint64_t)v27;
      v55 = v120;
      v56 = v121;
      v57 = (uint64_t)v119;
    }
    sub_1000215BC(v54, type metadata accessor for ViewState);
    goto LABEL_11;
  }
  sub_100021A14((uint64_t)v36, &qword_100BC5F78);
  return 1;
}

uint64_t sub_1003BD328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC5F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Optional<A>.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(a1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 16))(v8, v10, v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v1) == 1)
  {
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    v11 = swift_bridgeObjectRelease();
    v16 = 0x6C616E6F6974704FLL;
    v17 = 0xE90000000000003CLL;
    v12._countAndFlagsBits = _typeName(_:qualified:)(v1, 0, v11);
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 0x6C696E2E3ELL;
    v13._object = (void *)0xE500000000000000;
    String.append(_:)(v13);
    return v16;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v1);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v14;
}

uint64_t sub_1003BD4E0(uint64_t a1)
{
  return Optional<A>.description.getter(a1);
}

uint64_t sub_1003BD4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v2 = static Font.footnote.getter();
    *(_QWORD *)(v0 + 64) = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

double sub_1003BD52C()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return *(double *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0x4010000000000000;
  *(_BYTE *)(v0 + 56) = 0;
  return 4.0;
}

double sub_1003BD550()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(double *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0x4030000000000000;
  *(_BYTE *)(v0 + 24) = 0;
  return 16.0;
}

double sub_1003BD574()
{
  _BYTE *v0;

  if ((v0[8] & 1) == 0)
    return *(double *)v0;
  *(_QWORD *)v0 = 0x4030000000000000;
  v0[8] = 0;
  return 16.0;
}

double sub_1003BD598()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    return *(double *)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0x4046000000000000;
  *(_BYTE *)(v0 + 40) = 0;
  return 44.0;
}

void sub_1003BD5BC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  _BYTE __src[98];

  v3 = a1;
  sub_1000BA294(&qword_100BDE320);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = sub_1000BA294(&qword_100BDE328);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = sub_1000BA294(&qword_100BDE330);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10004A2E8();
  if (v3 == 6)
  {
    sub_100037768(v1, v7, &qword_100BDE320);
    sub_100037768(v7, v12, &qword_100BDE320);
    swift_storeEnumTagMultiPayload(v12, v8, 1);
    sub_1003C0C40((unint64_t *)&qword_100BDE338, &qword_100BDE330);
    v15 = sub_1003C0CA4();
    sub_1000CCC64(v15);
    v16 = v7;
    v17 = &qword_100BDE320;
  }
  else
  {
    sub_10043E3D0();
    sub_100037768(v1, v2, &qword_100BDE320);
    memcpy((void *)(v2 + *(int *)(v13 + 36)), __src, 0x62uLL);
    sub_100037768(v2, v12, &qword_100BDE330);
    swift_storeEnumTagMultiPayload(v12, v8, 0);
    sub_1003C0C40((unint64_t *)&qword_100BDE338, &qword_100BDE330);
    v18 = sub_1003C0CA4();
    sub_1000CCC64(v18);
    v16 = v2;
    v17 = &qword_100BDE330;
  }
  sub_100021A14(v16, v17);
}

uint64_t sub_1003BD788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;

  v14 = sub_1000BA294(&qword_100BCB340);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_10009883C();
  v18 = v16 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - v20;
  sub_10007802C(a1, a6, type metadata accessor for DailyForecastComponentViewModel);
  v22 = (int *)sub_1000DAEDC();
  v23 = (_QWORD *)(a6 + v22[5]);
  *v23 = a2;
  v23[1] = a3;
  v24 = (_QWORD *)(a6 + v22[6]);
  *v24 = a4;
  v24[1] = a5;
  *(double *)(a6 + v22[7]) = a7;
  v25 = (_QWORD *)(a6 + v22[8]);
  *v25 = swift_getKeyPath(&unk_10099B690);
  v26 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  v27 = a6 + v22[9];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_10099B668);
  *(_BYTE *)(v27 + 8) = 0;
  v28 = a6 + v22[10];
  *(_QWORD *)v28 = swift_getKeyPath(&unk_10099B6C0);
  *(_BYTE *)(v28 + 8) = 0;
  Text.Measurements.init()();
  v29 = sub_1000E7020();
  sub_10009D34C((uint64_t)v21, v30, v31, v29);
  sub_100037768((uint64_t)v21, v18, &qword_100BCB340);
  State.init(wrappedValue:)(v18, v14);
  sub_100021A14((uint64_t)v21, &qword_100BCB340);
  v32 = (uint64_t *)(a6 + v22[13]);
  v33 = type metadata accessor for ObservableResolver(0);
  sub_10000F1C8((unint64_t *)&qword_100BD0930, (uint64_t (*)(uint64_t))&type metadata accessor for ObservableResolver);
  result = EnvironmentObject.init()(v33, v34);
  *v32 = result;
  v32[1] = v36;
  return result;
}

uint64_t *sub_1003BD96C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v100)(char *, char *, uint64_t, __n128);
  char *v101;
  char *__dsta;
  char *__dst;
  __int128 v104;
  void (*v105)(char *, char *, uint64_t);
  char *v106;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
    v9 = v8[5];
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain(v4);
    v12 = sub_1000BA294(&qword_100BC4E68);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13((char *)v7 + v8[6], (char *)a2 + v8[6], v12);
    v13((char *)v7 + v8[7], (char *)a2 + v8[7], v12);
    v14 = v8[8];
    v15 = (uint64_t *)((char *)v7 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[9];
    v19 = (uint64_t *)((char *)v7 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[5];
    v23 = a3[6];
    v104 = *(_OWORD *)((char *)a2 + v22);
    *(_OWORD *)((char *)v7 + v22) = v104;
    v24 = (uint64_t *)((char *)v7 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v28 = (uint64_t *)((char *)v7 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v21);
    swift_unknownObjectRetain(v104);
    swift_retain();
    v30 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v29) == 1)
    {
      v31 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v32);
    v33 = a3[9];
    v34 = (char *)v7 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)v35;
    v37 = v35[8];
    sub_10008D47C(*(_QWORD *)v35, v37);
    *(_QWORD *)v34 = v36;
    v34[8] = v37;
    v38 = a3[10];
    v39 = (char *)v7 + v38;
    v40 = (char *)a2 + v38;
    v41 = *(_QWORD *)v40;
    v42 = v40[8];
    sub_10008D47C(*(_QWORD *)v40, v42);
    *(_QWORD *)v39 = v41;
    v39[8] = v42;
    v43 = a3[11];
    v44 = (char *)v7 + v43;
    v45 = (char *)a2 + v43;
    v46 = type metadata accessor for Text.Measurements(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
    v47 = a3[12];
    v48 = (char *)v7 + v47;
    v49 = (char *)a2 + v47;
    v50 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, (uint64_t)v50))
    {
      v51 = sub_1000BA294(&qword_100BCB340);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v52 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v48, v49, v52);
      v53 = v50[5];
      v54 = &v48[v53];
      v55 = &v49[v53];
      v56 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      v57 = v50[6];
      v58 = &v48[v57];
      v59 = &v49[v57];
      v105 = v13;
      v60 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      v61 = v50[7];
      v101 = &v49[v61];
      __dsta = &v48[v61];
      v62 = type metadata accessor for TimeZone(0);
      v100 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v62 - 8) + 16);
      swift_bridgeObjectRetain(v56);
      v63 = swift_bridgeObjectRetain(v60);
      v100(__dsta, v101, v62, v63);
      v105(&v48[v50[8]], &v49[v50[8]], v12);
      v105(&v48[v50[9]], &v49[v50[9]], v12);
      v64 = v50[10];
      v65 = &v48[v64];
      v66 = &v49[v64];
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = v67;
      v68 = v50[11];
      v69 = &v48[v68];
      v70 = &v49[v68];
      v71 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = *(_QWORD *)v70;
      *((_QWORD *)v69 + 1) = v71;
      *(_QWORD *)&v48[v50[12]] = *(_QWORD *)&v49[v50[12]];
      v48[v50[13]] = v49[v50[13]];
      v72 = v50[14];
      v73 = &v48[v72];
      v74 = &v49[v72];
      v75 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v76 = v50[15];
      __dst = &v48[v76];
      v106 = &v49[v76];
      v77 = type metadata accessor for Precipitation(0);
      swift_bridgeObjectRetain(v67);
      swift_bridgeObjectRetain(v71);
      swift_bridgeObjectRetain(v75);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v77))
      {
        v78 = sub_1000BA294(&qword_100BCB338);
        memcpy(__dst, v106, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(__dst, v106, v77);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v77);
      }
      v48[v50[16]] = v49[v50[16]];
      v79 = v50[17];
      v80 = &v48[v79];
      v81 = &v49[v79];
      v82 = *((_QWORD *)v81 + 1);
      *(_QWORD *)v80 = *(_QWORD *)v81;
      *((_QWORD *)v80 + 1) = v82;
      v83 = v50[18];
      v84 = &v48[v83];
      v85 = &v49[v83];
      v86 = *((_QWORD *)v85 + 1);
      *(_QWORD *)v84 = *(_QWORD *)v85;
      *((_QWORD *)v84 + 1) = v86;
      v87 = v50[19];
      v88 = &v48[v87];
      v89 = &v49[v87];
      v90 = *((_QWORD *)v89 + 1);
      *(_QWORD *)v88 = *(_QWORD *)v89;
      *((_QWORD *)v88 + 1) = v90;
      v91 = v50[20];
      v92 = *(_QWORD *)&v49[v91];
      *(_QWORD *)&v48[v91] = v92;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRetain(v86);
      swift_bridgeObjectRetain(v90);
      swift_bridgeObjectRetain(v92);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, (uint64_t)v50);
    }
    v93 = sub_1000BA294(&qword_100BDE090);
    *(_QWORD *)&v48[*(int *)(v93 + 28)] = *(_QWORD *)&v49[*(int *)(v93 + 28)];
    v94 = a3[13];
    v95 = (uint64_t *)((char *)v7 + v94);
    v96 = (uint64_t *)((char *)a2 + v94);
    v98 = *v96;
    v97 = v96[1];
    *v95 = v98;
    v95[1] = v97;
    swift_retain();
  }
  swift_retain();
  return v7;
}

char *sub_1003BDE74(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1000BA294(&qword_100BC4E68);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v15) == 1)
  {
    v17 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = a3[9];
  v19 = a3[10];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  v24 = a3[11];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = a3[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
  {
    v32 = sub_1000BA294(&qword_100BCB340);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v33 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v29, v30, v33);
    *(_OWORD *)&v29[v31[5]] = *(_OWORD *)&v30[v31[5]];
    *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
    v34 = v31[7];
    v35 = &v29[v34];
    v36 = &v30[v34];
    v37 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
    v11(&v29[v31[8]], &v30[v31[8]], v10);
    v11(&v29[v31[9]], &v30[v31[9]], v10);
    *(_OWORD *)&v29[v31[10]] = *(_OWORD *)&v30[v31[10]];
    *(_OWORD *)&v29[v31[11]] = *(_OWORD *)&v30[v31[11]];
    *(_QWORD *)&v29[v31[12]] = *(_QWORD *)&v30[v31[12]];
    v29[v31[13]] = v30[v31[13]];
    *(_OWORD *)&v29[v31[14]] = *(_OWORD *)&v30[v31[14]];
    v38 = v31[15];
    v39 = &v29[v38];
    v40 = &v30[v38];
    v41 = type metadata accessor for Precipitation(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      v42 = sub_1000BA294(&qword_100BCB338);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v29[v31[16]] = v30[v31[16]];
    *(_OWORD *)&v29[v31[17]] = *(_OWORD *)&v30[v31[17]];
    *(_OWORD *)&v29[v31[18]] = *(_OWORD *)&v30[v31[18]];
    *(_OWORD *)&v29[v31[19]] = *(_OWORD *)&v30[v31[19]];
    *(_QWORD *)&v29[v31[20]] = *(_QWORD *)&v30[v31[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
  }
  v43 = sub_1000BA294(&qword_100BDE090);
  *(_QWORD *)&v29[*(int *)(v43 + 28)] = *(_QWORD *)&v30[*(int *)(v43 + 28)];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  return a1;
}

char *sub_1003BE240(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1000BA294(&qword_100BC4E68);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[v6[6]], &a2[v6[6]], v10);
  v12(&a1[v6[7]], &a2[v6[7]], v10);
  v13 = v6[8];
  v14 = &a1[v13];
  v15 = (uint64_t *)&a2[v13];
  v17 = *v15;
  v16 = v15[1];
  *(_QWORD *)v14 = v17;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  v18 = v6[9];
  v19 = &a1[v18];
  v20 = (uint64_t *)&a2[v18];
  v22 = *v20;
  v21 = v20[1];
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[5];
  v24 = (uint64_t *)&a1[v23];
  v25 = (uint64_t *)&a2[v23];
  v26 = v25[1];
  v27 = *v24;
  *v24 = *v25;
  swift_unknownObjectRelease(v27);
  v24[1] = v26;
  v28 = a3[6];
  v29 = *(_QWORD *)&a1[v28 + 8];
  *(_OWORD *)&a1[v28] = *(_OWORD *)&a2[v28];
  swift_release(v29);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  if (a1 != a2)
  {
    v30 = a3[8];
    v31 = &a1[v30];
    v32 = &a2[v30];
    sub_100021A14((uint64_t)&a1[v30], &qword_100BC37D8);
    v33 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v32) == 1)
    {
      v34 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)v37;
  LOBYTE(v37) = v37[8];
  v39 = *(_QWORD *)v36;
  v40 = v36[8];
  *(_QWORD *)v36 = v38;
  v36[8] = (char)v37;
  sub_1000B15F8(v39, v40);
  v41 = a3[10];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)v43;
  LOBYTE(v43) = v43[8];
  v45 = *(_QWORD *)v42;
  v46 = v42[8];
  *(_QWORD *)v42 = v44;
  v42[8] = (char)v43;
  sub_1000B15F8(v45, v46);
  v47 = a3[11];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[12];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, (uint64_t)v54);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, (uint64_t)v54);
  if (!v55)
  {
    if (v56)
    {
      sub_1000215BC((uint64_t)v52, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_11;
    }
    v70 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v52, v53, v70);
    v71 = v54[5];
    v72 = &v52[v71];
    v73 = (uint64_t *)&v53[v71];
    v75 = *v73;
    v74 = v73[1];
    *(_QWORD *)v72 = v75;
    *((_QWORD *)v72 + 1) = v74;
    swift_bridgeObjectRelease();
    v76 = v54[6];
    v77 = &v52[v76];
    v78 = (uint64_t *)&v53[v76];
    v80 = *v78;
    v79 = v78[1];
    *(_QWORD *)v77 = v80;
    *((_QWORD *)v77 + 1) = v79;
    swift_bridgeObjectRelease();
    v81 = v54[7];
    v82 = &v52[v81];
    v83 = &v53[v81];
    v84 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 40))(v82, v83, v84);
    v12(&v52[v54[8]], &v53[v54[8]], v10);
    v12(&v52[v54[9]], &v53[v54[9]], v10);
    v85 = v54[10];
    v86 = &v52[v85];
    v87 = (uint64_t *)&v53[v85];
    v89 = *v87;
    v88 = v87[1];
    *(_QWORD *)v86 = v89;
    *((_QWORD *)v86 + 1) = v88;
    swift_bridgeObjectRelease();
    v90 = v54[11];
    v91 = &v52[v90];
    v92 = (uint64_t *)&v53[v90];
    v94 = *v92;
    v93 = v92[1];
    *(_QWORD *)v91 = v94;
    *((_QWORD *)v91 + 1) = v93;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v52[v54[12]] = *(_QWORD *)&v53[v54[12]];
    v52[v54[13]] = v53[v54[13]];
    v95 = v54[14];
    v96 = &v52[v95];
    v97 = (uint64_t *)&v53[v95];
    v99 = *v97;
    v98 = v97[1];
    *(_QWORD *)v96 = v99;
    *((_QWORD *)v96 + 1) = v98;
    swift_bridgeObjectRelease();
    v100 = v54[15];
    v101 = &v52[v100];
    v102 = &v53[v100];
    v103 = type metadata accessor for Precipitation(0);
    v104 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v103);
    v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103);
    if (v104)
    {
      if (!v105)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
LABEL_20:
        v52[v54[16]] = v53[v54[16]];
        v108 = v54[17];
        v109 = &v52[v108];
        v110 = (uint64_t *)&v53[v108];
        v112 = *v110;
        v111 = v110[1];
        *(_QWORD *)v109 = v112;
        *((_QWORD *)v109 + 1) = v111;
        swift_bridgeObjectRelease();
        v113 = v54[18];
        v114 = &v52[v113];
        v115 = (uint64_t *)&v53[v113];
        v117 = *v115;
        v116 = v115[1];
        *(_QWORD *)v114 = v117;
        *((_QWORD *)v114 + 1) = v116;
        swift_bridgeObjectRelease();
        v118 = v54[19];
        v119 = &v52[v118];
        v120 = (uint64_t *)&v53[v118];
        v122 = *v120;
        v121 = v120[1];
        *(_QWORD *)v119 = v122;
        *((_QWORD *)v119 + 1) = v121;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v52[v54[20]] = *(_QWORD *)&v53[v54[20]];
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      v106 = *(_QWORD *)(v103 - 8);
      if (!v105)
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v101, v102, v103);
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v103);
    }
    v107 = sub_1000BA294(&qword_100BCB338);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    goto LABEL_20;
  }
  if (v56)
  {
LABEL_11:
    v69 = sub_1000BA294(&qword_100BCB340);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_21;
  }
  v57 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v52, v53, v57);
  *(_OWORD *)&v52[v54[5]] = *(_OWORD *)&v53[v54[5]];
  *(_OWORD *)&v52[v54[6]] = *(_OWORD *)&v53[v54[6]];
  v58 = v54[7];
  v59 = &v52[v58];
  v60 = v11;
  v61 = &v53[v58];
  v62 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v59, v61, v62);
  v63 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  v63(&v52[v54[8]], &v53[v54[8]], v10);
  v63(&v52[v54[9]], &v53[v54[9]], v10);
  *(_OWORD *)&v52[v54[10]] = *(_OWORD *)&v53[v54[10]];
  *(_OWORD *)&v52[v54[11]] = *(_OWORD *)&v53[v54[11]];
  *(_QWORD *)&v52[v54[12]] = *(_QWORD *)&v53[v54[12]];
  v52[v54[13]] = v53[v54[13]];
  *(_OWORD *)&v52[v54[14]] = *(_OWORD *)&v53[v54[14]];
  v64 = v54[15];
  v65 = &v52[v64];
  v66 = &v53[v64];
  v67 = type metadata accessor for Precipitation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
  {
    v68 = sub_1000BA294(&qword_100BCB338);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
  }
  v52[v54[16]] = v53[v54[16]];
  *(_OWORD *)&v52[v54[17]] = *(_OWORD *)&v53[v54[17]];
  *(_OWORD *)&v52[v54[18]] = *(_OWORD *)&v53[v54[18]];
  *(_OWORD *)&v52[v54[19]] = *(_OWORD *)&v53[v54[19]];
  *(_QWORD *)&v52[v54[20]] = *(_QWORD *)&v53[v54[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, (uint64_t)v54);
LABEL_21:
  v123 = *(int *)(sub_1000BA294(&qword_100BDE090) + 28);
  v124 = *(_QWORD *)&v52[v123];
  *(_QWORD *)&v52[v123] = *(_QWORD *)&v53[v123];
  swift_release(v124);
  v125 = a3[13];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = *(_QWORD *)&a1[v125];
  *(_QWORD *)&a1[v125] = *(_QWORD *)v127;
  swift_release(v128);
  *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
  return a1;
}

void sub_1003BE938(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1000C28E8();
  sub_100088FF0();
  if (v11)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_1000D9D90();
      sub_100079F70();
      return;
    }
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_100088FF0();
    if (v11)
    {
      v7 = v9;
      v10 = a3[8];
    }
    else
    {
      sub_1000BCF7C();
      sub_100088FF0();
      if (v11)
      {
        v7 = v12;
        v10 = a3[11];
      }
      else
      {
        v7 = sub_1000BA294(&qword_100BDE090);
        v10 = a3[12];
      }
    }
    v8 = v4 + v10;
  }
  sub_1000B250C(v8, v3, v7);
}

uint64_t sub_1003BE9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BE9E4);
}

void sub_1003BE9E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000C28E8();
  sub_10009D2E8();
  if (v13)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5]) = (v4 - 1);
      sub_100079F70();
      return;
    }
    sub_1000BA294((uint64_t *)&unk_100C09CA0);
    sub_10009D2E8();
    if (v13)
    {
      v9 = v11;
      v12 = a4[8];
    }
    else
    {
      sub_1000BCF7C();
      sub_10009D2E8();
      if (v13)
      {
        v9 = v14;
        v12 = a4[11];
      }
      else
      {
        v9 = sub_1000BA294(&qword_100BDE090);
        v12 = a4[12];
      }
    }
    v10 = v5 + v12;
  }
  sub_1000987C4(v10, v4, v4, v9);
}

void sub_1003BEA94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  Swift::String v52;
  void *object;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v70 = a1;
  v60 = a3;
  v58 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v58);
  v59 = (uint64_t *)((char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1000BA294(&qword_100BCD380);
  __chkstk_darwin(v6);
  v68 = (uint64_t *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_1000BA294(&qword_100BCB330);
  __chkstk_darwin(v67);
  v69 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BCB410);
  __chkstk_darwin(v61);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BCB340);
  v12 = __chkstk_darwin(v11);
  v63 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v57 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v20 = __chkstk_darwin(v19);
  v57 = (uint64_t)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v57 - v22;
  v24 = (int *)type metadata accessor for DailyComponentForecastRowViewLargeText(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v23;
  sub_100080C0C(a2, (uint64_t)v23, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  v27 = type metadata accessor for DailyComponentRowView(0);
  v28 = *(int *)(v27 + 20);
  v29 = *(int *)(v27 + 24);
  v62 = v27;
  v30 = (uint64_t *)((char *)v3 + v28);
  v31 = v30[1];
  v64 = *v30;
  v32 = *(uint64_t *)((char *)v3 + v29);
  sub_100080C0C(a2, (uint64_t)v18, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v19);
  v65 = v3;
  v33 = *v3;
  v34 = &qword_100BCB340;
  sub_10010CE80(v33, (uint64_t)v16);
  v35 = (uint64_t)&v10[*(int *)(v61 + 48)];
  sub_100037768((uint64_t)v18, (uint64_t)v10, &qword_100BCB340);
  sub_100037768((uint64_t)v16, v35, &qword_100BCB340);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v19) == 1)
  {
    swift_retain();
    sub_100021A14((uint64_t)v16, &qword_100BCB340);
    sub_100021A14((uint64_t)v18, &qword_100BCB340);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v19) == 1)
    {
      v36 = -1;
    }
    else
    {
      v34 = &qword_100BCB410;
      v36 = 0;
    }
    v37 = v31;
  }
  else
  {
    v37 = v31;
    sub_100037768((uint64_t)v10, v63, &qword_100BCB340);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v19) == 1)
    {
      swift_retain();
      sub_100021A14((uint64_t)v16, &qword_100BCB340);
      sub_100021A14((uint64_t)v18, &qword_100BCB340);
      sub_1000215BC(v63, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      v36 = 0;
      v34 = &qword_100BCB410;
    }
    else
    {
      v38 = v57;
      sub_10007802C(v35, v57, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      swift_retain();
      v39 = v63;
      v36 = sub_10010C890(v63, v38);
      sub_1000215BC(v38, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      v34 = &qword_100BCB340;
      sub_100021A14((uint64_t)v16, &qword_100BCB340);
      sub_100021A14((uint64_t)v18, &qword_100BCB340);
      sub_1000215BC(v39, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    }
  }
  sub_100021A14((uint64_t)v10, v34);
  v40 = (uint64_t)v69;
  Binding.projectedValue.getter(v67);
  KeyPath = swift_getKeyPath(&unk_10099B608);
  v42 = (uint64_t)v68;
  *v68 = KeyPath;
  v43 = sub_1000BA294(&qword_100BC68C8);
  swift_storeEnumTagMultiPayload(v42, v43, 0);
  v44 = swift_getKeyPath(&unk_10099B638);
  sub_10007802C((uint64_t)v66, (uint64_t)v26, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  sub_1000787D4(v42, (uint64_t)&v26[v24[5]], &qword_100BCD380);
  v45 = &v26[v24[6]];
  *(_QWORD *)v45 = v44;
  v45[8] = 0;
  v46 = &v26[v24[7]];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_10099B668);
  v46[8] = 0;
  v47 = &v26[v24[8]];
  *(_QWORD *)v47 = v64;
  *((_QWORD *)v47 + 1) = v37;
  *(_QWORD *)&v26[v24[9]] = v32;
  v26[v24[10]] = v36 & 1;
  v48 = (uint64_t *)&v26[v24[11]];
  v49 = type metadata accessor for FrameContainer(0);
  v50 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  *(_OWORD *)(v50 + 16) = 0u;
  *(_OWORD *)(v50 + 32) = 0u;
  ObservationRegistrar.init()(v50);
  v71 = v50;
  State.init(wrappedValue:)(&v71, v49);
  v51 = v73;
  *v48 = v72;
  v48[1] = v51;
  sub_1000787D4(v40, (uint64_t)&v26[v24[12]], &qword_100BCB330);
  v72 = 1601790308;
  v73 = 0xE400000000000000;
  if (__OFADD__(v70, 1))
  {
    __break(1u);
  }
  else
  {
    v71 = v70 + 1;
    v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
    object = v52._object;
    String.append(_:)(v52);
    swift_bridgeObjectRelease(object);
    v54 = v73;
    v55 = (uint64_t)v59;
    *v59 = v72;
    *(_QWORD *)(v55 + 8) = v54;
    v56 = type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload(v55, v56, 5);
    swift_storeEnumTagMultiPayload(v55, v58, 1);
    sub_100335290();
    sub_1000215BC(v55, type metadata accessor for AutomationInfo);
    sub_1000215BC((uint64_t)v26, type metadata accessor for DailyComponentForecastRowViewLargeText);
  }
}

void sub_1003BF0D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_1000BA294(&qword_100BD9480);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v20 - v8;
  v10 = sub_1000BA294(&qword_100BDE2B0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v20 - v14;
  v16 = (int *)type metadata accessor for DailyComponentRowView(0);
  v17 = *(_QWORD *)(a1 + v16[8]);
  v18 = a1 + v16[7];
  sub_10010BDC4(v17, v18, (uint64_t)v15, *(double *)(a1 + v16[11]), *(double *)(a1 + v16[9]), *(double *)(a1 + v16[9] + 8), *(double *)(a1 + v16[10]), *(double *)(a1 + v16[10] + 8));
  sub_1003BEA94(v17, v18, (uint64_t)v9);
  sub_100037768((uint64_t)v15, (uint64_t)v13, &qword_100BDE2B0);
  sub_100037768((uint64_t)v9, (uint64_t)v7, &qword_100BD9480);
  sub_100037768((uint64_t)v13, a2, &qword_100BDE2B0);
  v19 = sub_1000BA294(&qword_100BDE318);
  sub_100037768((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_100BD9480);
  sub_100021A14((uint64_t)v9, &qword_100BD9480);
  sub_100021A14((uint64_t)v15, &qword_100BDE2B0);
  sub_100021A14((uint64_t)v7, &qword_100BD9480);
  sub_100021A14((uint64_t)v13, &qword_100BDE2B0);
}

uint64_t sub_1003BF298()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = (int *)type metadata accessor for DailyComponentView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v8 = v0 + v4 + v7[5];
  sub_1000BA294(&qword_100BC4E68);
  sub_1000B48E0(v8);
  sub_1000B48E0(v0 + v4 + v7[6]);
  sub_1000B48E0(v0 + v4 + v7[7]);
  sub_1000DA958(v7[8]);
  sub_1000DA958(v7[9]);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + v1[5]));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  v9 = (_QWORD *)(v0 + v4 + v1[8]);
  sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v9) == 1)
  {
    v10 = type metadata accessor for ContentSizeCategory(0);
    sub_1000B2568(v10);
  }
  else
  {
    swift_release(*v9);
  }
  sub_1000BD9E8(v1[9]);
  sub_1000BD9E8(v1[10]);
  v11 = sub_1000BCF7C();
  sub_1000B2568(v11);
  v12 = v6 + v1[12];
  v13 = (int *)sub_1000E7020();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, (uint64_t)v13))
  {
    v21 = v5;
    v14 = type metadata accessor for Date(0);
    sub_1000B2568(v14);
    sub_1000BAA84(v13[5]);
    sub_1000BAA84(v13[6]);
    v15 = v12 + v13[7];
    v16 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    sub_1000B48E0(v12 + v13[8]);
    sub_1000B48E0(v12 + v13[9]);
    sub_1000BAA84(v13[10]);
    sub_1000BAA84(v13[11]);
    sub_1000BAA84(v13[14]);
    v17 = v12 + v13[15];
    v18 = type metadata accessor for Precipitation(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    sub_1000BAA84(v13[17]);
    sub_1000BAA84(v13[18]);
    sub_1000BAA84(v13[19]);
    swift_bridgeObjectRelease();
    v5 = v21;
  }
  v19 = sub_1000BA294(&qword_100BDE090);
  swift_release(*(_QWORD *)(v12 + *(int *)(v19 + 28)));
  swift_release(*(_QWORD *)(v6 + v1[13]));
  return swift_deallocObject(v0, ((((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1003BF52C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003BF550()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_1000994C0();
  v0[1] = v1;
  sub_10004A298();
}

unint64_t sub_1003BF570()
{
  unint64_t result;

  result = qword_100BDE1D8;
  if (!qword_100BDE1D8)
  {
    result = swift_getWitnessTable(&unk_1009A022C, &type metadata for LocationTipOverlayModifier);
    atomic_store(result, (unint64_t *)&qword_100BDE1D8);
  }
  return result;
}

_QWORD *sub_1003BF5AC(char *a1, char *a2, int *a3)
{
  int v3;
  uint64_t v4;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  __n128 v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t, __n128);
  __n128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v133)(char *, char *, uint64_t, __n128);
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int *v139;
  _QWORD *v140;
  void (*v141)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v3 & 0x20000) != 0)
  {
    v65 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    swift_bridgeObjectRetain(v4);
    v12 = sub_1000BA294(&qword_100BC4E68);
    v141 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v141(v10, v11, v12);
    v141(&a1[v8[6]], &a2[v8[6]], v12);
    v141(&a1[v8[7]], &a2[v8[7]], v12);
    v13 = v8[8];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v8[9];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = a3[5];
    v22 = a3[6];
    v23 = &a1[v21];
    v24 = (uint64_t *)&a2[v21];
    v25 = *v24;
    v26 = v24[1];
    v27 = *(_QWORD *)&a2[v22];
    *(_QWORD *)v23 = v25;
    *((_QWORD *)v23 + 1) = v26;
    *(_QWORD *)&a1[v22] = v27;
    v139 = a3;
    v140 = a1;
    v28 = a3[7];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = type metadata accessor for Date(0);
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v20);
    v33 = swift_retain();
    v135 = v32;
    v136 = v31;
    ((void (*)(char *, char *, uint64_t, __n128))v32)(v29, v30, v31, v33);
    v34 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    v35 = v34[5];
    v36 = &v29[v35];
    v37 = &v30[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = v34[6];
    v40 = &v29[v39];
    v41 = &v30[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    v43 = v34[7];
    v44 = &v29[v43];
    v137 = &v30[v43];
    v45 = type metadata accessor for TimeZone(0);
    v46 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v45 - 8) + 16);
    swift_bridgeObjectRetain(v38);
    v47 = swift_bridgeObjectRetain(v42);
    v133 = v46;
    v134 = v45;
    v46(v44, v137, v45, v47);
    v141(&v29[v34[8]], &v30[v34[8]], v12);
    v138 = v12;
    v141(&v29[v34[9]], &v30[v34[9]], v12);
    v48 = v34[10];
    v49 = &v29[v48];
    v50 = &v30[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = v34[11];
    v53 = &v29[v52];
    v54 = &v30[v52];
    v55 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v55;
    *(_QWORD *)&v29[v34[12]] = *(_QWORD *)&v30[v34[12]];
    v29[v34[13]] = v30[v34[13]];
    v56 = v34[14];
    v57 = &v29[v56];
    v58 = &v30[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = v34[15];
    v61 = &v29[v60];
    v62 = &v30[v60];
    v63 = type metadata accessor for Precipitation(0);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v59);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
    {
      v64 = sub_1000BA294(&qword_100BCB338);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
    }
    v29[v34[16]] = v30[v34[16]];
    v66 = v34[17];
    v67 = &v29[v66];
    v68 = &v30[v66];
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    v70 = v34[18];
    v71 = &v29[v70];
    v72 = &v30[v70];
    v73 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v73;
    v74 = v34[19];
    v75 = &v29[v74];
    v76 = &v30[v74];
    v77 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v77;
    v78 = v34[20];
    v79 = *(_QWORD *)&v30[v78];
    *(_QWORD *)&v29[v78] = v79;
    v65 = v140;
    v80 = v139[9];
    *(_QWORD *)((char *)v140 + v139[8]) = *(_QWORD *)&a2[v139[8]];
    *(_OWORD *)((char *)v140 + v80) = *(_OWORD *)&a2[v80];
    v81 = v139[11];
    *(_OWORD *)((char *)v140 + v139[10]) = *(_OWORD *)&a2[v139[10]];
    *(_QWORD *)((char *)v140 + v81) = *(_QWORD *)&a2[v81];
    v82 = v139[13];
    *((_BYTE *)v140 + v139[12]) = a2[v139[12]];
    v83 = (_QWORD *)((char *)v140 + v82);
    v84 = &a2[v82];
    v85 = *(_QWORD *)&a2[v82 + 8];
    *v83 = *(_QWORD *)&a2[v82];
    v83[1] = v85;
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v73);
    swift_bridgeObjectRetain(v77);
    swift_bridgeObjectRetain(v79);
    swift_retain();
    swift_retain();
    v86 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
    v87 = (char *)v83 + v86;
    v88 = &v84[v86];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v84[v86], 1, (uint64_t)v34))
    {
      v89 = sub_1000BA294(&qword_100BCB340);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      v135(v87, v88, v136);
      v90 = v34[5];
      v91 = &v87[v90];
      v92 = &v88[v90];
      v93 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v91 = *(_QWORD *)v92;
      *((_QWORD *)v91 + 1) = v93;
      v94 = v34[6];
      v95 = &v87[v94];
      v96 = &v88[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      v98 = v34[7];
      v99 = &v87[v98];
      v100 = &v88[v98];
      swift_bridgeObjectRetain(v93);
      v101 = swift_bridgeObjectRetain(v97);
      v133(v99, v100, v134, v101);
      v141(&v87[v34[8]], &v88[v34[8]], v138);
      v141(&v87[v34[9]], &v88[v34[9]], v138);
      v102 = v34[10];
      v103 = &v87[v102];
      v104 = &v88[v102];
      v105 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v105;
      v106 = v34[11];
      v107 = &v87[v106];
      v108 = &v88[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      *(_QWORD *)&v87[v34[12]] = *(_QWORD *)&v88[v34[12]];
      v87[v34[13]] = v88[v34[13]];
      v110 = v34[14];
      v111 = &v87[v110];
      v112 = &v88[v110];
      v113 = *((_QWORD *)v112 + 1);
      *(_QWORD *)v111 = *(_QWORD *)v112;
      *((_QWORD *)v111 + 1) = v113;
      v114 = v34[15];
      v115 = &v87[v114];
      v116 = &v88[v114];
      swift_bridgeObjectRetain(v105);
      swift_bridgeObjectRetain(v109);
      swift_bridgeObjectRetain(v113);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v63))
      {
        v117 = sub_1000BA294(&qword_100BCB338);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v115, v116, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v63);
      }
      v87[v34[16]] = v88[v34[16]];
      v118 = v34[17];
      v119 = &v87[v118];
      v120 = &v88[v118];
      v121 = *((_QWORD *)v120 + 1);
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *((_QWORD *)v119 + 1) = v121;
      v122 = v34[18];
      v123 = &v87[v122];
      v124 = &v88[v122];
      v125 = *((_QWORD *)v124 + 1);
      *(_QWORD *)v123 = *(_QWORD *)v124;
      *((_QWORD *)v123 + 1) = v125;
      v126 = v34[19];
      v127 = &v87[v126];
      v128 = &v88[v126];
      v129 = *((_QWORD *)v128 + 1);
      *(_QWORD *)v127 = *(_QWORD *)v128;
      *((_QWORD *)v127 + 1) = v129;
      v130 = v34[20];
      v131 = *(_QWORD *)&v88[v130];
      *(_QWORD *)&v87[v130] = v131;
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRetain(v125);
      swift_bridgeObjectRetain(v129);
      swift_bridgeObjectRetain(v131);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, (uint64_t)v34);
    }
  }
  return v65;
}

char *sub_1003BFBD4(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v43)(char *, char *);
  uint64_t v44;
  void (*v45)(char *, char *);
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1000BA294(&qword_100BC4E68);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Date(0);
  v45 = *(void (**)(char *, char *))(*(_QWORD *)(v16 - 8) + 32);
  v46 = v16;
  v45(v14, v15);
  v17 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  v18 = v17[7];
  v19 = &v14[v18];
  v20 = &v15[v18];
  v21 = type metadata accessor for TimeZone(0);
  v43 = *(void (**)(char *, char *))(*(_QWORD *)(v21 - 8) + 32);
  v44 = v21;
  v43(v19, v20);
  v11(&v14[v17[8]], &v15[v17[8]], v10);
  v47 = v11;
  v11(&v14[v17[9]], &v15[v17[9]], v10);
  *(_OWORD *)&v14[v17[10]] = *(_OWORD *)&v15[v17[10]];
  *(_OWORD *)&v14[v17[11]] = *(_OWORD *)&v15[v17[11]];
  *(_QWORD *)&v14[v17[12]] = *(_QWORD *)&v15[v17[12]];
  v14[v17[13]] = v15[v17[13]];
  *(_OWORD *)&v14[v17[14]] = *(_OWORD *)&v15[v17[14]];
  v22 = v17[15];
  v23 = &v14[v22];
  v24 = &v15[v22];
  v25 = type metadata accessor for Precipitation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = sub_1000BA294(&qword_100BCB338);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  v14[v17[16]] = v15[v17[16]];
  *(_OWORD *)&v14[v17[17]] = *(_OWORD *)&v15[v17[17]];
  *(_OWORD *)&v14[v17[18]] = *(_OWORD *)&v15[v17[18]];
  *(_OWORD *)&v14[v17[19]] = *(_OWORD *)&v15[v17[19]];
  *(_QWORD *)&v14[v17[20]] = *(_QWORD *)&v15[v17[20]];
  v27 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  v28 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  v29 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)&a2[v29];
  v33 = *(_QWORD *)&a2[v29 + 8];
  *(_QWORD *)v30 = v32;
  *((_QWORD *)v30 + 1) = v33;
  v34 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v35 = &v30[v34];
  v36 = &v31[v34];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v31[v34], 1, (uint64_t)v17))
  {
    v37 = sub_1000BA294(&qword_100BCB340);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v45)(v35, v36, v46);
    *(_OWORD *)&v35[v17[5]] = *(_OWORD *)&v36[v17[5]];
    *(_OWORD *)&v35[v17[6]] = *(_OWORD *)&v36[v17[6]];
    ((void (*)(char *, char *, uint64_t))v43)(&v35[v17[7]], &v36[v17[7]], v44);
    v47(&v35[v17[8]], &v36[v17[8]], v10);
    v47(&v35[v17[9]], &v36[v17[9]], v10);
    *(_OWORD *)&v35[v17[10]] = *(_OWORD *)&v36[v17[10]];
    *(_OWORD *)&v35[v17[11]] = *(_OWORD *)&v36[v17[11]];
    *(_QWORD *)&v35[v17[12]] = *(_QWORD *)&v36[v17[12]];
    v35[v17[13]] = v36[v17[13]];
    *(_OWORD *)&v35[v17[14]] = *(_OWORD *)&v36[v17[14]];
    v38 = v17[15];
    v39 = &v35[v38];
    v40 = &v36[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v36[v38], 1, v25))
    {
      v41 = sub_1000BA294(&qword_100BCB338);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v39, v40, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v25);
    }
    v35[v17[16]] = v36[v17[16]];
    *(_OWORD *)&v35[v17[17]] = *(_OWORD *)&v36[v17[17]];
    *(_OWORD *)&v35[v17[18]] = *(_OWORD *)&v36[v17[18]];
    *(_OWORD *)&v35[v17[19]] = *(_OWORD *)&v36[v17[19]];
    *(_QWORD *)&v35[v17[20]] = *(_QWORD *)&v36[v17[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v17);
  }
  return a1;
}

char *sub_1003C005C(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v146)(char *, char *);
  void (*v147)(char *, char *);
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1000BA294(&qword_100BC4E68);
  v151 = *(_QWORD *)(v10 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v151 + 40);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  v12 = v6[8];
  v13 = &a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v16 = *v14;
  v15 = v14[1];
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = v6[9];
  v18 = &a1[v17];
  v19 = (uint64_t *)&a2[v17];
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[5];
  v23 = *(_QWORD *)&a1[v22 + 8];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  swift_release(v23);
  v24 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = type metadata accessor for Date(0);
  v150 = *(_QWORD *)(v27 - 8);
  v152 = v27;
  v147 = *(void (**)(char *, char *))(v150 + 40);
  v147(v25, v26);
  v28 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v29 = v28[5];
  v30 = &v25[v29];
  v31 = &v26[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  v34 = v28[6];
  v35 = &v25[v34];
  v36 = &v26[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v39 = v28[7];
  v40 = &v25[v39];
  v41 = &v26[v39];
  v42 = type metadata accessor for TimeZone(0);
  v149 = *(_QWORD *)(v42 - 8);
  v153 = v42;
  v146 = *(void (**)(char *, char *))(v149 + 40);
  v146(v40, v41);
  v11(&v25[v28[8]], &v26[v28[8]], v10);
  v154 = v10;
  v148 = v11;
  v11(&v25[v28[9]], &v26[v28[9]], v10);
  v43 = v28[10];
  v44 = &v25[v43];
  v45 = &v26[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = v28[11];
  v49 = &v25[v48];
  v50 = &v26[v48];
  v52 = *(_QWORD *)v50;
  v51 = *((_QWORD *)v50 + 1);
  *(_QWORD *)v49 = v52;
  *((_QWORD *)v49 + 1) = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25[v28[12]] = *(_QWORD *)&v26[v28[12]];
  v25[v28[13]] = v26[v28[13]];
  v53 = v28[14];
  v54 = &v25[v53];
  v55 = &v26[v53];
  v57 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  *(_QWORD *)v54 = v57;
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  v58 = v28[15];
  v59 = &v25[v58];
  v60 = &v26[v58];
  v61 = type metadata accessor for Precipitation(0);
  LODWORD(v40) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v61);
  v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61);
  v155 = v61;
  if ((_DWORD)v40)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v63 = *(_QWORD *)(v61 - 8);
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v61);
LABEL_6:
    v64 = sub_1000BA294(&qword_100BCB338);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v59, v60, v61);
LABEL_7:
  v25[v28[16]] = v26[v28[16]];
  v65 = v28[17];
  v66 = &v25[v65];
  v67 = &v26[v65];
  v69 = *(_QWORD *)v67;
  v68 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = v69;
  *((_QWORD *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  v70 = v28[18];
  v71 = &v25[v70];
  v72 = &v26[v70];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *(_QWORD *)v71 = v74;
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  v75 = v28[19];
  v76 = &v25[v75];
  v77 = &v26[v75];
  v79 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  *(_QWORD *)v76 = v79;
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25[v28[20]] = *(_QWORD *)&v26[v28[20]];
  swift_bridgeObjectRelease();
  v80 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v80] = *(_OWORD *)&a2[v80];
  v81 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v81] = *(_QWORD *)&a2[v81];
  v82 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v85 = *(_QWORD *)&a1[v82];
  *(_QWORD *)&a1[v82] = *(_QWORD *)&a2[v82];
  swift_release(v85);
  v86 = *((_QWORD *)v83 + 1);
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  swift_release(v86);
  v87 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v88 = &v83[v87];
  v89 = &v84[v87];
  LODWORD(v83) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v83[v87], 1, (uint64_t)v28);
  v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, (uint64_t)v28);
  if (!(_DWORD)v83)
  {
    if (v90)
    {
      sub_1000215BC((uint64_t)v88, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_13;
    }
    ((void (*)(char *, char *, uint64_t))v147)(v88, v89, v152);
    v97 = v28[5];
    v98 = &v88[v97];
    v99 = &v89[v97];
    v101 = *(_QWORD *)v99;
    v100 = *((_QWORD *)v99 + 1);
    *(_QWORD *)v98 = v101;
    *((_QWORD *)v98 + 1) = v100;
    swift_bridgeObjectRelease();
    v102 = v28[6];
    v103 = &v88[v102];
    v104 = &v89[v102];
    v106 = *(_QWORD *)v104;
    v105 = *((_QWORD *)v104 + 1);
    *(_QWORD *)v103 = v106;
    *((_QWORD *)v103 + 1) = v105;
    v107 = swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t, __n128))v146)(&v88[v28[7]], &v89[v28[7]], v153, v107);
    v148(&v88[v28[8]], &v89[v28[8]], v154);
    v148(&v88[v28[9]], &v89[v28[9]], v154);
    v108 = v28[10];
    v109 = &v88[v108];
    v110 = &v89[v108];
    v112 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    *(_QWORD *)v109 = v112;
    *((_QWORD *)v109 + 1) = v111;
    swift_bridgeObjectRelease();
    v113 = v28[11];
    v114 = &v88[v113];
    v115 = &v89[v113];
    v117 = *(_QWORD *)v115;
    v116 = *((_QWORD *)v115 + 1);
    *(_QWORD *)v114 = v117;
    *((_QWORD *)v114 + 1) = v116;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v88[v28[12]] = *(_QWORD *)&v89[v28[12]];
    v88[v28[13]] = v89[v28[13]];
    v118 = v28[14];
    v119 = &v88[v118];
    v120 = &v89[v118];
    v122 = *(_QWORD *)v120;
    v121 = *((_QWORD *)v120 + 1);
    *(_QWORD *)v119 = v122;
    *((_QWORD *)v119 + 1) = v121;
    swift_bridgeObjectRelease();
    v123 = v28[15];
    v124 = &v88[v123];
    v125 = &v89[v123];
    v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v88[v123], 1, v155);
    v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v155);
    if (v126)
    {
      if (!v127)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v124, v125, v155);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v155);
LABEL_23:
        v88[v28[16]] = v89[v28[16]];
        v130 = v28[17];
        v131 = &v88[v130];
        v132 = &v89[v130];
        v134 = *(_QWORD *)v132;
        v133 = *((_QWORD *)v132 + 1);
        *(_QWORD *)v131 = v134;
        *((_QWORD *)v131 + 1) = v133;
        swift_bridgeObjectRelease();
        v135 = v28[18];
        v136 = &v88[v135];
        v137 = &v89[v135];
        v139 = *(_QWORD *)v137;
        v138 = *((_QWORD *)v137 + 1);
        *(_QWORD *)v136 = v139;
        *((_QWORD *)v136 + 1) = v138;
        swift_bridgeObjectRelease();
        v140 = v28[19];
        v141 = &v88[v140];
        v142 = &v89[v140];
        v144 = *(_QWORD *)v142;
        v143 = *((_QWORD *)v142 + 1);
        *(_QWORD *)v141 = v144;
        *((_QWORD *)v141 + 1) = v143;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v88[v28[20]] = *(_QWORD *)&v89[v28[20]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      v128 = *(_QWORD *)(v155 - 8);
      if (!v127)
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 40))(v124, v125, v155);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v128 + 8))(v124, v155);
    }
    v129 = sub_1000BA294(&qword_100BCB338);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    goto LABEL_23;
  }
  if (v90)
  {
LABEL_13:
    v96 = sub_1000BA294(&qword_100BCB340);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v88, v89, v152);
  *(_OWORD *)&v88[v28[5]] = *(_OWORD *)&v89[v28[5]];
  *(_OWORD *)&v88[v28[6]] = *(_OWORD *)&v89[v28[6]];
  (*(void (**)(char *, char *, uint64_t))(v149 + 32))(&v88[v28[7]], &v89[v28[7]], v153);
  v91 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
  v91(&v88[v28[8]], &v89[v28[8]], v154);
  v91(&v88[v28[9]], &v89[v28[9]], v154);
  *(_OWORD *)&v88[v28[10]] = *(_OWORD *)&v89[v28[10]];
  *(_OWORD *)&v88[v28[11]] = *(_OWORD *)&v89[v28[11]];
  *(_QWORD *)&v88[v28[12]] = *(_QWORD *)&v89[v28[12]];
  v88[v28[13]] = v89[v28[13]];
  *(_OWORD *)&v88[v28[14]] = *(_OWORD *)&v89[v28[14]];
  v92 = v28[15];
  v93 = &v88[v92];
  v94 = &v89[v92];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v89[v92], 1, v155))
  {
    v95 = sub_1000BA294(&qword_100BCB338);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v93, v94, v155);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v155);
  }
  v88[v28[16]] = v89[v28[16]];
  *(_OWORD *)&v88[v28[17]] = *(_OWORD *)&v89[v28[17]];
  *(_OWORD *)&v88[v28[18]] = *(_OWORD *)&v89[v28[18]];
  *(_OWORD *)&v88[v28[19]] = *(_OWORD *)&v89[v28[19]];
  *(_QWORD *)&v88[v28[20]] = *(_QWORD *)&v89[v28[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, (uint64_t)v28);
  return a1;
}

uint64_t sub_1003C08A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C08AC);
}

void sub_1003C08AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1000C28E8();
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = v4;
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_1000D9D90();
      sub_100079F70();
      return;
    }
    sub_1000E7020();
    sub_100088FF0();
    if (v7)
    {
      v8 = v10;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v8 = sub_1000BA294(&qword_100BCB330);
      v11 = *(int *)(a3 + 52);
    }
    v9 = v4 + v11;
  }
  sub_1000B250C(v9, v3, v8);
}

uint64_t sub_1003C092C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C0938);
}

void sub_1003C0938(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1000C28E8();
  sub_10009D2E8();
  if (v9)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + a4[5]) = (v4 - 1);
      sub_100079F70();
      return;
    }
    sub_1000E7020();
    sub_10009D2E8();
    if (v9)
    {
      v10 = v12;
      v13 = a4[7];
    }
    else
    {
      v10 = sub_1000BA294(&qword_100BCB330);
      v13 = a4[13];
    }
    v11 = v5 + v13;
  }
  sub_1000987C4(v11, v4, v4, v10);
}

unint64_t sub_1003C09CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE2D8;
  if (!qword_100BDE2D8)
  {
    v1 = sub_100075EB0(&qword_100BDE2D0);
    sub_1003C0A50();
    sub_1001CDAD0(&qword_100BDE2F0, &qword_100BDE2C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE2D8);
  }
  return result;
}

unint64_t sub_1003C0A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE2E0;
  if (!qword_100BDE2E0)
  {
    v1 = sub_100075EB0(&qword_100BD9480);
    sub_10000F1C8(&qword_100BDE2E8, type metadata accessor for DailyComponentForecastRowViewLargeText);
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE2E0);
  }
  return result;
}

unint64_t sub_1003C0AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE2F8;
  if (!qword_100BDE2F8)
  {
    v1 = sub_100075EB0(&qword_100BDE2B0);
    sub_1003C0B70();
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE2F8);
  }
  return result;
}

unint64_t sub_1003C0B70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE300;
  if (!qword_100BDE300)
  {
    v1 = sub_100075EB0(&qword_100BD9488);
    sub_10000F1C8(&qword_100BDE308, type metadata accessor for DailyComponentForecastRowView);
    sub_10000F1C8((unint64_t *)&qword_100BC6768, type metadata accessor for AutomationInfoViewModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE300);
  }
  return result;
}

void sub_1003C0C10(_BYTE *a1@<X8>)
{
  *a1 = EnvironmentValues.accessibilityReduceTransparency.getter() & 1;
  sub_10004A298();
}

uint64_t sub_1003C0C40(unint64_t *a1, uint64_t *a2)
{
  void (*v2)(void);
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000B4444(0, a2);
    v2();
    sub_1003BF570();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003C0CA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE340;
  if (!qword_100BDE340)
  {
    v1 = sub_100075EB0(&qword_100BDE320);
    sub_1003C0D28();
    sub_1001CDAD0(&qword_100BDE2A0, &qword_100BDE2A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE340);
  }
  return result;
}

unint64_t sub_1003C0D28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE348;
  if (!qword_100BDE348)
  {
    v1 = sub_100075EB0(&qword_100BDE350);
    sub_1003C0DAC();
    sub_10000F1C8(&qword_100BDE388, type metadata accessor for TrackExposureModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE348);
  }
  return result;
}

unint64_t sub_1003C0DAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE358;
  if (!qword_100BDE358)
  {
    v1 = sub_100075EB0(&qword_100BDE360);
    sub_1001CDAD0(&qword_100BDE368, &qword_100BDE370);
    sub_1001CDAD0(&qword_100BDE378, &qword_100BDE380);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE358);
  }
  return result;
}

unint64_t sub_1003C0E4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE390;
  if (!qword_100BDE390)
  {
    v1 = sub_100075EB0(qword_100BDE398);
    sub_1003C09CC();
    sub_1003C0AEC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE390);
  }
  return result;
}

uint64_t type metadata accessor for DefaultNewsContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultNewsContentView);
}

uint64_t sub_1003C0ED0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB32B8, 1);
}

uint64_t sub_1003C0F04@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[488];
  _QWORD v67[62];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = type metadata accessor for Optional(255, a5);
  v67[3] = a5;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v18 = sub_1000BBB64(255, 7, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &qword_100BF8CD0;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &qword_100BF90A0;
      goto LABEL_11;
    }
    v23 = &qword_100BF8EB8;
    goto LABEL_11;
  }
  if (v11)
    v23 = &qword_100BF8900;
  else
    v23 = &qword_100BF8AE8;
LABEL_11:
  memcpy(v67, v23, 0x1E8uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1003C1B94, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_100262688, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_1003C1328@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[7];
  _QWORD v110[7];
  _QWORD v111[7];
  _BYTE v112[24];
  _BYTE v113[40];
  _QWORD v114[4];
  char v115;

  v103 = a5;
  v106 = a2;
  v90 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v85 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Optional(0, a4);
  v95 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v107 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v82 - v14;
  v86 = (void (*)(uint64_t, uint64_t))type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v86);
  v83 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - v17;
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v88 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  v99 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v97 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v98 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v96 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  v93 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v92 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v105 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v101 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v82 - v44;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle, (uint64_t)v18);
  a2(v18, a3[33], a3[34], a3[35], a3[36]);
  sub_100080DF4((uint64_t)v18);
  v91 = v45;
  v46 = v103;
  sub_1000B2074(v42, a4, v103);
  v87 = v19;
  v47 = *(void (**)(char *, uint64_t))(v19 + 8);
  v48 = v85;
  v47(v42, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, (uint64_t)v18);
  v106(v18, *a3, a3[1], a3[2], a3[3]);
  v84 = v18;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v42, a4, v46);
  v104 = v42;
  v47(v42, a4);
  v94 = a1;
  v49 = a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map, v112, 0, 0);
  sub_1001A1D04(v49, v48);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, (uint64_t)v86) == 1)
  {
    sub_1001A1D4C(v48);
    v50 = 1;
    v51 = a3;
  }
  else
  {
    v52 = v83;
    sub_1001A1D8C(v48, v83);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v113);
    sub_1001A1DD0((uint64_t)v113, (uint64_t)v114);
    v51 = a3;
    if (v115 == 1)
    {
      sub_100080DF4(v52);
      v50 = 1;
    }
    else
    {
      v53 = v105;
      v106((char *)v52, v114[0], v114[1], v114[2], v114[3]);
      sub_100080DF4(v52);
      v54 = (uint64_t)v104;
      sub_1000B2074(v53, a4, v103);
      v47(v53, a4);
      sub_1000B1100(v54, a4, v107);
      v47((char *)v54, a4);
      v50 = 0;
    }
  }
  v55 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, v50, 1, a4);
  v56 = v103;
  sub_100158984(v55, a4, v102);
  v86 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v86(v55, v100);
  v57 = v94;
  v58 = (uint64_t)v84;
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v84);
  v59 = v105;
  v106((char *)v58, v51[16], v51[17], v51[18], v51[19]);
  sub_100080DF4(v58);
  sub_1000B2074(v59, a4, v56);
  v47(v59, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v58);
  v60 = v92;
  v61 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v106;
  v106((char *)v58, v51[8], v51[9], v51[10], v51[11]);
  sub_100080DF4(v58);
  v62 = v103;
  sub_1000B2074(v60, a4, v103);
  v47(v60, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v58);
  v63 = v93;
  v61(v58, v51[49], v51[50], v51[51], v51[52]);
  sub_100080DF4(v58);
  sub_1000B2074(v63, a4, v62);
  v47(v63, a4);
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v58);
  v64 = v96;
  v61(v58, v51[45], v51[46], v51[47], v51[48]);
  sub_100080DF4(v58);
  v65 = v62;
  sub_1000B2074(v64, a4, v62);
  v47(v64, a4);
  v66 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v66(v64, v91, a4);
  v111[0] = v64;
  v67 = v98;
  v66(v98, v101, a4);
  v111[1] = v67;
  v68 = v107;
  v69 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v107, v102, v100);
  v111[2] = v68;
  v70 = v97;
  v66(v97, v104, a4);
  v111[3] = v70;
  v71 = v99;
  v66(v99, v105, a4);
  v111[4] = v71;
  v72 = (uint64_t)v88;
  v73 = v92;
  v66(v88, v92, a4);
  v111[5] = v72;
  v74 = (uint64_t)v89;
  v75 = v93;
  v66(v89, v93, a4);
  v111[6] = v74;
  v110[0] = a4;
  v110[1] = a4;
  v110[2] = v69;
  v110[3] = a4;
  v110[4] = a4;
  v110[5] = a4;
  v110[6] = a4;
  v109[0] = v65;
  v109[1] = v65;
  v108 = v65;
  v109[2] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v69);
  v109[3] = v65;
  v109[4] = v65;
  v109[5] = v65;
  v109[6] = v65;
  sub_10052800C((uint64_t)v111, 7, (uint64_t)v110, (uint64_t)v109, v76, v77, v78, v79, v82, v83, (uint64_t)v84, v85, (uint64_t)v86, v87, (uint64_t)v88, (uint64_t)v89, v90, (uint64_t)v91);
  v47(v75, a4);
  v47(v73, a4);
  v47(v105, a4);
  v47(v104, a4);
  v80 = v86;
  v86(v102, v69);
  v47(v101, a4);
  v47(v91, a4);
  v47((char *)v74, a4);
  v47((char *)v72, a4);
  v47(v99, a4);
  v47(v97, a4);
  v80(v107, v69);
  v47(v98, a4);
  return ((uint64_t (*)(char *, uint64_t))v47)(v96, a4);
}

uint64_t sub_1003C1B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1003C0F04(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1003C1B94()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003C1328);
}

void sub_1003C1BA4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v4 = *a1;
  v5 = a1[1];
  v6 = v4 == *a2 && v5 == a2[1];
  if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2) & 1) != 0)
  {
    v7 = *(int *)(type metadata accessor for HistoricalFactsCategory(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1000BA294(&qword_100BDE420);
    v11 = sub_1003C1C88();
    v12 = sub_1003C1CCC();
    static NonEmpty<>.== infix(_:_:)(v8, v9, v10, v11, v12);
  }
  else
  {
    sub_100079F70();
  }
}

uint64_t sub_1003C1C40(_QWORD *a1, _QWORD *a2)
{
  return sub_1003C1BA0(*a1, *a2);
}

uint64_t type metadata accessor for HistoricalFactsCategory(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDE498;
  if (!qword_100BDE498)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoricalFactsCategory);
  return result;
}

unint64_t sub_1003C1C88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE428;
  if (!qword_100BDE428)
  {
    v1 = sub_100075EB0(&qword_100BDE420);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BDE428);
  }
  return result;
}

unint64_t sub_1003C1CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE430;
  if (!qword_100BDE430)
  {
    v1 = sub_100075EB0(&qword_100BDE420);
    sub_1003C1D30();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100BDE430);
  }
  return result;
}

unint64_t sub_1003C1D30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD8EC0;
  if (!qword_100BD8EC0)
  {
    v1 = type metadata accessor for WeatherDescription(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherDescription, v1);
    atomic_store(result, (unint64_t *)&qword_100BD8EC0);
  }
  return result;
}

uint64_t *sub_1003C1D70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain(v5);
    v9 = sub_1000BA294(&qword_100BDE438);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_1003C1E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1000BA294(&qword_100BDE438);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1003C1E4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  swift_bridgeObjectRetain(v4);
  v8 = sub_1000BA294(&qword_100BDE438);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1003C1EB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1000BA294(&qword_100BDE438);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_1003C1F30(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1000BA294(&qword_100BDE438);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1003C1F90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1000BA294(&qword_100BDE438);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003C2000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C200C);
}

void sub_1003C200C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100079F70();
  }
  else
  {
    v6 = sub_1000BA294(&qword_100BDE438);
    _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_1003C207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C2088);
}

uint64_t sub_1003C2088(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BDE438);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1003C20F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10099B798;
  sub_1003C216C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1003C216C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_100BDE4A8)
  {
    v2 = sub_100075EB0(&qword_100BDE420);
    v3 = sub_1003C1C88();
    v4 = type metadata accessor for NonEmpty(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_100BDE4A8);
  }
}

ValueMetadata *type metadata accessor for HistoricalFactsPlatterInput()
{
  return &type metadata for HistoricalFactsPlatterInput;
}

uint64_t sub_1003C21E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003C2234 + 4 * byte_10099B825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003C2268 + 4 * byte_10099B820[v4]))();
}

uint64_t sub_1003C2268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C2270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003C2278);
  return result;
}

uint64_t sub_1003C2284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003C228CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003C2290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C2298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C22A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD v26[9];
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;

  sub_1000986AC();
  v27 = v0;
  v28 = v1;
  v3 = v2;
  v4 = type metadata accessor for WeatherDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1000BCED8();
  if ((v3 & 1) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v7._countAndFlagsBits = 0xD000000000000028;
    v29._countAndFlagsBits = 0xD000000000000058;
    v29._object = (void *)0x80000001009FEB50;
    v7._object = (void *)0x80000001009FEB20;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v29);

    v10 = sub_1000BA294(&qword_100BCE380);
    v11 = *(_QWORD *)(type metadata accessor for WeatherDescription.Argument(0) - 8);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = swift_allocObject(v10, v13 + *(_QWORD *)(v11 + 72), v12 | 7);
    *(_OWORD *)(v14 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v14 + v13) = 10;
    v15.n128_f64[0] = (*(double (**)(void))(v11 + 104))();
    v16 = WeatherDescription.init(format:_:)(v9._countAndFlagsBits, v9._object, v14, v15);
    v17 = ((uint64_t (*)(uint64_t))WeatherDescription.string.getter)(v16);
    v19 = v18;
    sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v26[0] = v17;
    v26[1] = v19;
    v20 = sub_100114EF8();
    return Text.init<A>(_:)(v26, &type metadata for String, v20);
  }
  else
  {
    v22 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000020, 0x80000001009FEAF0);
    return sub_1000C39C0(v22, v23, v24, v25);
  }
}

uint64_t sub_1003C2474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1000BA294(&qword_100BCBB48);
  __chkstk_darwin(v1);
  sub_1000BCED8();
  v2 = Image.init(systemName:)(0xD000000000000011, 0x80000001009FEAD0);
  static SymbolRenderingMode.hierarchical.getter();
  v3 = type metadata accessor for SymbolRenderingMode(0);
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v3);
  v4 = Image.symbolRenderingMode(_:)(v0, v2);
  swift_release(v2);
  sub_100021A68(v0, &qword_100BCBB48);
  return v4;
}

uint64_t sub_1003C2534()
{
  return sub_1003C22A4();
}

uint64_t sub_1003C253C()
{
  return sub_1003C2474();
}

void sub_1003C2548(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_1001445CC);
}

uint64_t sub_1003C2554()
{
  return Image.init(_internalSystemName:)(0x662E68746C616568, 0xEB000000006C6C69);
}

uint64_t sub_1003C2574(uint64_t a1, uint64_t a2)
{
  return sub_1003C25E8(a1, a2, 0xD00000000000001ALL, 0x80000001009FEAB0);
}

uint64_t sub_1003C2590()
{
  return sub_1003C268C(0xD000000000000021, 0x80000001009FEA80);
}

void sub_1003C25C0(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_10014936C);
}

uint64_t sub_1003C25CC(uint64_t a1, uint64_t a2)
{
  return sub_1003C25E8(a1, a2, 0xD000000000000014, 0x80000001009FEA60);
}

uint64_t sub_1003C25E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003C2668(a3, a4);
}

uint64_t sub_1003C2610()
{
  return sub_1003C268C(0xD000000000000020, 0x80000001009FEA30);
}

uint64_t sub_1003C263C()
{
  return sub_1003C26B0(7364973, 0xE300000000000000);
}

void sub_1003C265C(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_100123A9C);
}

uint64_t sub_1003C2668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
  return sub_1000C39C0(v2, v3, v4, v5);
}

uint64_t sub_1003C268C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = LocalizedStringKey.init(stringLiteral:)(a1, a2);
  return sub_1000C39C0(v2, v3, v4, v5);
}

uint64_t sub_1003C26B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v5);
  sub_100079FBC();
  v6 = Image.init(systemName:)(a1, a2);
  v7 = enum case for Image.TemplateRenderingMode.template(_:);
  v8 = type metadata accessor for Image.TemplateRenderingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v8);
  v9 = Image.renderingMode(_:)(v2, v6);
  swift_release(v6);
  sub_100021A68(v2, &qword_100BDD818);
  return v9;
}

uint64_t sub_1003C278C(uint64_t a1, uint64_t a2)
{
  return sub_1003C25E8(a1, a2, 0xD000000000000014, 0x80000001009FEA10);
}

uint64_t sub_1003C27A8()
{
  return sub_1003C268C(0xD00000000000001DLL, 0x80000001009FE9F0);
}

uint64_t sub_1003C27D4()
{
  return sub_1003C26B0(1684957559, 0xE400000000000000);
}

void sub_1003C27F4(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_10014CDF8);
}

void sub_1003C2800(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1000C1A8C(a1, a2, a3);
  *v3 = sub_1000C6A80(v4);
  v3[1] = v5;
  sub_100079F70();
}

uint64_t sub_1003C2824()
{
  return Image.init(systemName:)(0x2E78616D2E6E7573, 0xEC0000006C6C6966);
}

uint64_t sub_1003C2844()
{
  return sub_1003C28DC();
}

uint64_t sub_1003C2868(uint64_t a1, uint64_t a2)
{
  return sub_1003C28A0(a1, a2, 0xD000000000000038, 0x80000001009FE9B0, 0xD000000000000030, 0x80000001009FE970);
}

uint64_t sub_1003C28A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;

  return sub_1003C2918(*v6, a3, a4, a5, a6);
}

uint64_t sub_1003C28C8()
{
  return sub_1003C2824();
}

void sub_1003C28D0(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_10014D178);
}

uint64_t sub_1003C28DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v0 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000013, 0x80000001009FE950);
  return sub_1000C39C0(v0, v1, v2, v3);
}

uint64_t sub_1003C2918(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((a1 & 1) == 0)
  {
    a2 = a4;
    a3 = a5;
  }
  v7 = LocalizedStringKey.init(stringLiteral:)(a2, a3);
  return sub_1000C39C0(v7, v8, v9, v10);
}

uint64_t sub_1003C2954()
{
  return Image.init(systemName:)(0xD000000000000010, 0x80000001009FE8D0);
}

uint64_t sub_1003C2970(uint64_t a1, uint64_t a2)
{
  return sub_1003C28A0(a1, a2, 0xD00000000000002FLL, 0x80000001009FE920, 0xD000000000000027, 0x80000001009FE8F0);
}

uint64_t sub_1003C29A8()
{
  return sub_1003C2954();
}

void sub_1003C29B0(uint64_t a1, uint64_t a2)
{
  sub_1003C2800(a1, a2, (uint64_t (*)(void))sub_1001238FC);
}

_QWORD *sub_1003C29BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v5 = *(_QWORD *)(type metadata accessor for URLHandlerPattern(0) - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v29 = 3 * v6;
  v31 = v7 | 7;
  v32 = v8 + 3 * v6;
  v37 = v6;
  sub_10009EF94();
  v28 = a1;
  v9 = (uint64_t *)(a1 + 40);
  v10 = _swiftEmptyArrayStorage;
  v30 = v8;
  do
  {
    v36 = v3;
    v11 = *(v9 - 1);
    v12 = *v9;
    v13 = sub_1000BA294(&qword_100BD64D8);
    v14 = swift_allocObject(v13, v32, v31);
    *(_OWORD *)(v14 + 16) = xmmword_10098B610;
    v35 = v14;
    v15 = v14 + v8;
    v16 = *(_QWORD *)aWeather_4;
    v17 = unk_100BDC4B8;
    swift_bridgeObjectRetain_n(v12, 2);
    swift_bridgeObjectRetain(v17);
    sub_1000D9D2C();
    sub_10009EF94();
    sub_1000878DC();
    URLHandlerPattern.init(scheme:host:path:fragment:params:conditions:)(v16, v17, 0, 0, v11, v12, a2, a3);
    sub_1000DB978();
    sub_1000D9D2C();
    sub_10009EF94();
    sub_1000878DC();
    sub_1000C39E4(1886680168, 0xE400000000000000);
    sub_1000DB978();
    sub_1000D9D2C();
    sub_10009EF94();
    sub_1000878DC();
    sub_1000C39E4(0x7370747468, 0xE500000000000000);
    swift_bridgeObjectRelease(v12);
    v18 = v10[2];
    if (__OFADD__(v18, 3))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native(v10) || (v19 = v10[3] >> 1, v19 < v18 + 3))
    {
      sub_1005FF1E8();
      v10 = v20;
      v19 = v20[3] >> 1;
    }
    v8 = v30;
    v21 = v10[2];
    if (v19 - v21 < 3)
      goto LABEL_19;
    v22 = (char *)v10 + v30 + v21 * v37;
    if (v15 < (unint64_t)&v22[v29] && (unint64_t)v22 < v15 + v29)
    {
      result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25);
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy(v22);
    v24 = v10[2];
    v25 = __OFADD__(v24, 3);
    v26 = v24 + 3;
    if (v25)
      goto LABEL_20;
    v9 += 2;
    v10[2] = v26;
    swift_bridgeObjectRelease(v35);
    v3 = v36 - 1;
  }
  while (v36 != 1);
  swift_bridgeObjectRelease(v28);
  return v10;
}

uint64_t sub_1003C2CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t Parameter;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  __n128 v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, __n128);
  char *v72;
  uint64_t v73;
  void (*v74)(_QWORD);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, __n128);
  id v85;
  NSString v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  char isUniquelyReferenced_nonNull_native;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  double v124;
  double v125;
  char v126;
  char v127;
  double v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  __n128 v157;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(_QWORD);
  char *v175;
  uint64_t v176;
  uint64_t ParameterKey;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;

  v2 = sub_1000BA294(&qword_100BD64E0);
  v167 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100088FDC();
  v166 = v3;
  sub_1000BA294(&qword_100BC61F8);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v6 = sub_1000987B4(v5);
  v163 = type metadata accessor for OpenL2Descriptor(v6);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v9 = sub_1000987B4(v8);
  v172 = type metadata accessor for ActivityAction(v9);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v12 = sub_1000987B4(v11);
  ParameterKey = type metadata accessor for WeatherQueryParameterKey(v12);
  v182 = *(_QWORD *)(ParameterKey - 8);
  __chkstk_darwin(ParameterKey);
  sub_1000986FC();
  v180 = v13;
  sub_10009D2A4();
  __chkstk_darwin(v14);
  sub_1000860D0();
  v174 = v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  v181 = (void (*)(char *, uint64_t))((char *)&v159 - v17);
  v18 = type metadata accessor for URLHandlerMatch.Values(0);
  v184 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_1000986FC();
  v171 = v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_1000860D0();
  v179 = v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  sub_1000860D0();
  v176 = v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v187 = v25;
  sub_10009D2A4();
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v159 - v28;
  v30 = type metadata accessor for URLHandlerMatch(0, v27);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  sub_1000986FC();
  v170 = v32;
  sub_10009D2A4();
  __chkstk_darwin(v33);
  sub_1000860D0();
  v178 = v34;
  sub_10009D2A4();
  __chkstk_darwin(v35);
  sub_1000860D0();
  v175 = v36;
  sub_10009D2A4();
  __chkstk_darwin(v37);
  v39 = (char *)&v159 - v38;
  __chkstk_darwin(v40);
  v42 = (char *)&v159 - v41;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_1000986FC();
  v169 = v44;
  sub_10009D2A4();
  __chkstk_darwin(v45);
  v47 = (char *)&v159 - v46;
  v48 = type metadata accessor for Date(0);
  v188 = v47;
  v168 = v48;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 1, 1, v48);
  sub_1001C6D68();
  v191 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v49 = v2;
  URLHandlerContext.match.getter(v2);
  sub_1000DDA30();
  v50 = *(void (**)(char *, uint64_t))(v31 + 8);
  v50(v42, v30);
  v51 = URLHandlerMatch.Values.subscript.getter(0x646E696B326CLL, 0xE600000000000000);
  v53 = v52;
  v54 = *(void (**)(char *, uint64_t))(v184 + 8);
  v189 = v18;
  v54(v29, v18);
  v186 = a1;
  v190 = v30;
  if (v53)
  {
    v162 = v53;
    v55 = v49;
    v161 = v54;
    v56 = URLHandlerContext.match.getter(v49);
    v160 = v51;
    v57 = v187;
    URLHandlerMatch.values.getter(v56);
    v159 = v39;
    v50(v39, v30);
    v59 = v181;
    v58 = v182;
    v184 = *(_QWORD *)(v182 + 104);
    v60 = ParameterKey;
    v61 = ((uint64_t (*)(void (*)(char *, uint64_t), _QWORD, uint64_t))v184)(v181, enum case for WeatherQueryParameterKey.temperature(_:), ParameterKey);
    Parameter = WeatherQueryParameterKey.rawValue.getter(v61);
    v64 = v63;
    v65 = *(char **)(v58 + 8);
    ((void (*)(_QWORD, uint64_t))v65)(v59, v60);
    v66 = URLHandlerMatch.Values.subscript.getter(Parameter, v64);
    v68 = v67;
    v69 = swift_bridgeObjectRelease();
    v70 = v189;
    v71 = (void (*)(uint64_t, uint64_t, __n128))v161;
    ((void (*)(uint64_t, uint64_t, __n128))v161)(v57, v189, v69);
    LODWORD(v182) = sub_10095A6F8(v160, v162, v66, v68);
    v72 = v175;
    v185 = v55;
    URLHandlerContext.match.getter(v55);
    v73 = v176;
    sub_1000DDA30();
    v181 = v50;
    v50(v72, v190);
    v74 = v174;
    v75 = ((uint64_t (*)(void (*)(_QWORD), _QWORD, uint64_t))v184)(v174, enum case for WeatherQueryParameterKey.date(_:), v60);
    v76 = WeatherQueryParameterKey.rawValue.getter(v75);
    v78 = v77;
    v175 = v65;
    ((void (*)(void (*)(_QWORD), uint64_t))v65)(v74, v60);
    URLHandlerMatch.Values.subscript.getter(v76, v78);
    v80 = v79;
    v81 = swift_bridgeObjectRelease();
    v71(v73, v70, v81);
    v82 = (uint64_t)v188;
    v83 = v60;
    v84 = v71;
    if (v80)
    {
      v85 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
      objc_msgSend(v85, "setFormatOptions:", 1907);
      v86 = String._bridgeToObjectiveC()();
      v87 = objc_msgSend(v85, "dateFromString:", v86, swift_bridgeObjectRelease().n128_f64[0]);

      if (v87)
      {
        v88 = v169;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v87);

        v89 = 0;
      }
      else
      {
        v89 = 1;
        v88 = v169;
      }
      v95 = v168;

      sub_100021A14(v82, (uint64_t *)&unk_100BD35A0);
      _s7Weather24LocationCompositionStateOwst_0(v88, v89, 1, v95);
      sub_10016C5F4(v88, v82);
      v83 = v60;
    }
    v96 = v178;
    v97 = URLHandlerContext.match.getter(v185);
    v98 = v179;
    URLHandlerMatch.values.getter(v97);
    v99 = v190;
    v50 = v181;
    ((void (*)(uint64_t))v181)(v96);
    v100 = v180;
    v101 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v184)(v180, enum case for WeatherQueryParameterKey.position(_:), v83);
    v102 = WeatherQueryParameterKey.rawValue.getter(v101);
    v104 = v103;
    ((void (*)(uint64_t, uint64_t))v175)(v100, v83);
    v105 = URLHandlerMatch.Values.subscript.getter(v102, v104);
    v107 = v106;
    v108 = swift_bridgeObjectRelease();
    v109 = v98;
    v91 = v189;
    v84(v109, v189, v108);
    if (v107)
    {
      v110 = v191;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v191);
      v193 = v110;
      sub_10016E2A4(v105, v107, isUniquelyReferenced_nonNull_native);
      v191 = v193;
      swift_bridgeObjectRelease();
    }
    v92 = v187;
    v94 = v159;
    v93 = v99;
    v90 = v185;
  }
  else
  {
    LODWORD(v182) = 16;
    v90 = v49;
    v91 = v189;
    v92 = v187;
    v93 = v30;
    v94 = v39;
    v84 = (void (*)(uint64_t, uint64_t, __n128))v54;
  }
  sub_1000C5470();
  sub_1000DDA30();
  v50(v94, v93);
  v112 = sub_10015E084();
  ((void (*)(uint64_t, uint64_t))v84)(v92, v91);
  if ((v112 & 1) != 0)
  {
    v113 = v183;
    sub_1000DB418((_QWORD *)(v183 + 48), *(_QWORD *)(v183 + 72));
    v114 = v173;
    swift_storeEnumTagMultiPayload(v173, v172, 4);
    v115 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    v116 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_10026563C(v114, v115 & 1, v116 & 1);
    sub_1000215BC(v114, type metadata accessor for ActivityAction);
    v117 = v182;
    if (v182 == 16)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      v133 = (uint64_t)v188;
      goto LABEL_23;
    }
    v134 = (int *)v163;
    v135 = v164;
    v136 = (uint64_t)&v164[*(int *)(v163 + 24)];
    v137 = type metadata accessor for Location(0);
    _s7Weather24LocationCompositionStateOwst_0(v136, 1, 1, v137);
    v138 = (uint64_t)v188;
    sub_10007C714((uint64_t)v188, (uint64_t)&v135[v134[9]]);
    *v135 = v117;
    v135[1] = 0;
    v139 = &v135[v134[7]];
    *(_QWORD *)v139 = 0;
    *((_QWORD *)v139 + 1) = 0;
    v139[16] = 1;
    v140 = &v135[v134[8]];
    *v140 = 0;
    v140[1] = 0;
    *(_QWORD *)&v135[v134[10]] = v191;
    sub_1000DB418((_QWORD *)(v113 + 48), *(_QWORD *)(v113 + 72));
    v141 = v165;
    sub_1003C39D8((uint64_t)v135, v165);
    _s7Weather24LocationCompositionStateOwst_0(v141, 0, 1, (uint64_t)v134);
    sub_100264948(v141);
    sub_100021A14(v141, &qword_100BC61F8);
    sub_1000215BC((uint64_t)v135, type metadata accessor for OpenL2Descriptor);
    v133 = v138;
  }
  else
  {
    v118 = v170;
    v119 = sub_1000C5470();
    v120 = v91;
    v121 = (void (*)(uint64_t, uint64_t))v84;
    v122 = v171;
    URLHandlerMatch.values.getter(v119);
    v50(v118, v93);
    v123 = sub_10015E328();
    v125 = v124;
    v127 = v126;
    v121(v122, v120);
    if ((v127 & 1) != 0)
    {
      v142 = v186;
      v143 = v90;
      v144 = v190;
      v181 = v50;
      swift_bridgeObjectRelease();
      if (qword_100BC24A8 != -1)
        swift_once(&qword_100BC24A8, sub_1006F3908);
      v145 = type metadata accessor for Logger(0);
      sub_1000AECD4(v145, (uint64_t)qword_100CAF1E0);
      v146 = v167;
      v147 = v166;
      v148 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 16))(v166, v142, v143);
      v149 = Logger.logObject.getter(v148);
      v150 = static os_log_type_t.default.getter(v149);
      if (os_log_type_enabled(v149, v150))
      {
        v151 = swift_slowAlloc(22, -1);
        v152 = swift_slowAlloc(32, -1);
        v153 = v143;
        v185 = v143;
        v154 = v152;
        *(_DWORD *)v151 = 141558275;
        v192 = 1752392040;
        v193 = v152;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, &v193);
        *(_WORD *)(v151 + 12) = 2081;
        v191 = v151 + 14;
        URLHandlerContext.match.getter(v153);
        sub_1000DDA30();
        v181(v94, v144);
        v155 = String.init<A>(describing:)(v92);
        v192 = sub_1000CE1C8(v155, v156, (uint64_t *)&v193);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, &v193);
        v157 = swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, __n128))(v167 + 8))(v147, v185, v157);
        _os_log_impl((void *)&_mh_execute_header, v149, v150, "No coordinates available in URL, matches=%{private,mask.hash}s", (uint8_t *)v151, 0x16u);
        swift_arrayDestroy(v154, 1);
        sub_1000986F0(v154);
        sub_1000986F0(v151);

      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v147, v143);
      }
      goto LABEL_22;
    }
    v128 = v125;
    URLHandlerContext.match.getter(v90);
    sub_1000DDA30();
    v50(v94, v190);
    v129 = sub_10015E6B8();
    v131 = v130;
    v121(v92, v120);
    v132 = (uint64_t)v188;
    sub_1001C6064(v129, v131, v182, (uint64_t)v188, v191, *(double *)&v123, v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v133 = v132;
  }
LABEL_23:
  sub_100021A14(v133, (uint64_t *)&unk_100BD35A0);
  return 1;
}

void sub_1003C38C4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[3];
  swift_release(v0[5]);
  swift_release(v1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 6);
  swift_release(v0[11]);
  swift_bridgeObjectRelease();
  sub_10004A298();
}

uint64_t sub_1003C3908()
{
  uint64_t v0;

  sub_1003C38C4();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for LocationURLHandlerLink()
{
  return objc_opt_self(_TtC7Weather22LocationURLHandlerLink);
}

uint64_t sub_1003C3948()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 96));
}

uint64_t sub_1003C3954(uint64_t a1)
{
  sub_1003C2CD0(a1);
  return 1;
}

unint64_t sub_1003C3978(uint64_t a1)
{
  unint64_t result;

  result = sub_1003C399C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003C399C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE618;
  if (!qword_100BDE618)
  {
    v1 = type metadata accessor for LocationURLHandlerLink();
    result = swift_getWitnessTable(&unk_10099BC58, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE618);
  }
  return result;
}

uint64_t sub_1003C39D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OpenL2Descriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C3A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;

  v5 = type metadata accessor for ActualListInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  type metadata accessor for ListInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100079FBC();
  sub_1000BA294(&qword_100BDE858);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v16 = v13 - v12 + *(int *)(v15 + 48);
  sub_100080C0C(a1, v13 - v12, type metadata accessor for ListInput);
  sub_100080C0C(a2, v16, type metadata accessor for ListInput);
  sub_100088FC8(v14, 1, v5);
  if (!v19)
  {
    sub_100080C0C(v14, v2, type metadata accessor for ListInput);
    sub_100088FC8(v16, 1, v5);
    if (!v19)
    {
      sub_10007802C(v16, v9, type metadata accessor for ActualListInput);
      v18 = sub_1003C3BCC(v2, v9);
      sub_1000215BC(v9, type metadata accessor for ActualListInput);
      sub_1000215BC(v2, type metadata accessor for ActualListInput);
      sub_100098AD4(v20, type metadata accessor for ListInput);
      return v18 & 1;
    }
    sub_1000215BC(v2, type metadata accessor for ActualListInput);
LABEL_9:
    sub_1000B3B00(v17, &qword_100BDE858);
    v18 = 0;
    return v18 & 1;
  }
  v17 = sub_100088FC8(v16, 1, v5);
  if (!v19)
    goto LABEL_9;
  sub_100098AD4(v17, type metadata accessor for ListInput);
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_1003C3BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v75;
  uint64_t v76;
  _QWORD *v77;
  int v78;
  _QWORD *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  char v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  BOOL v130;
  char v131;
  char v132;
  char v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  unsigned __int8 *v140;
  unsigned __int8 *v141;
  BOOL v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v153 = sub_10009985C();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v152 = (unsigned __int8 *)v6;
  v148 = sub_1000BA294(&qword_100BC4B48);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v154 = v8;
  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v151 = v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  sub_1000860D0();
  v149 = v12;
  sub_10009D2A4();
  __chkstk_darwin(v13);
  sub_100079F7C();
  v150 = v14;
  v15 = sub_10009876C();
  v157 = type metadata accessor for SearchViewState.ViewState(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v155 = v17;
  v156 = sub_1000BA294(&qword_100BDE860);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100079FBC();
  sub_1000BA294(&qword_100BD0488);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v160 = v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  sub_1000860D0();
  v158 = v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  sub_100079F7C();
  v159 = v24;
  v25 = sub_10009876C();
  v26 = type metadata accessor for CurrentLocation(v25);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100098728();
  v30 = v29 - v28;
  v31 = sub_1000BA294(&qword_100BDE868);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100098728();
  v35 = v34 - v33;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  v38 = (char *)&v143 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v143 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v143 - v43;
  sub_1000F13D4();
  if ((v45 & 1) == 0)
    goto LABEL_16;
  v144 = v2;
  v46 = (int *)type metadata accessor for ActualListInput(0);
  v47 = v46[5];
  v146 = a1;
  sub_100099330(a1 + v47, (uint64_t)v44);
  v145 = v46;
  v48 = v46[5];
  v147 = a2;
  sub_100099330(a2 + v48, (uint64_t)v41);
  v49 = v35 + *(int *)(v31 + 48);
  sub_100099330((uint64_t)v44, v35);
  sub_100099330((uint64_t)v41, v49);
  sub_100088FC8(v35, 1, v26);
  if (v56)
  {
    sub_100099298((uint64_t)v41);
    sub_100099298((uint64_t)v44);
    sub_100088FC8(v49, 1, v26);
    if (v56)
    {
      sub_100021A14(v35, (uint64_t *)&unk_100C0D170);
      goto LABEL_13;
    }
LABEL_10:
    v57 = &qword_100BDE868;
    v58 = v35;
LABEL_11:
    sub_100021A14(v58, v57);
LABEL_16:
    v65 = 0;
    return v65 & 1;
  }
  sub_100037768(v35, (uint64_t)v38, (uint64_t *)&unk_100C0D170);
  sub_100088FC8(v49, 1, v26);
  if (v56)
  {
    sub_100075DD0((uint64_t)v41);
    sub_100075DD0((uint64_t)v44);
    sub_1000215BC((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    goto LABEL_10;
  }
  sub_10007802C(v49, v30, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  v59 = static CurrentLocation.== infix(_:_:)(v38, v30);
  sub_1000215BC(v30, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  sub_10009E47C((uint64_t)v41);
  sub_10009E47C((uint64_t)v44);
  sub_1000215BC((uint64_t)v38, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  sub_10009E47C(v35);
  if ((v59 & 1) == 0)
    goto LABEL_16;
LABEL_13:
  v60 = v145;
  v61 = v146;
  v62 = v147;
  sub_10009C578(*(_QWORD *)(v146 + v145[6]), *(_QWORD *)(v147 + v145[6]), v50, v51, v52, v53, v54, v55, v143, v144, (uint64_t)v145, v146, v147, v148, v149, v150, (uint64_t)v151, (uint64_t)v152, v153,
    v154);
  if ((v63 & 1) == 0)
    goto LABEL_16;
  sub_10009C58C();
  if ((v64 & 1) == 0)
    goto LABEL_16;
  sub_1000D1788();
  if (!v56)
    goto LABEL_16;
  sub_1000C1E34();
  if (v67)
  {
    v72 = v159;
    v71 = v160;
    v73 = v158;
    if (!v68)
      goto LABEL_16;
    if (*v69 != *v70 || v67 != v68)
    {
      sub_100099264(*v69, v67, *v70, v68);
      v65 = sub_10007A150();
      if ((v75 & 1) == 0)
        return v65 & 1;
    }
  }
  else
  {
    v72 = v159;
    v71 = v160;
    v73 = v158;
    if (v68)
      goto LABEL_16;
  }
  v76 = v60[10];
  v77 = (_QWORD *)(v61 + v76);
  v78 = *(unsigned __int8 *)(v61 + v76 + 8);
  v79 = (_QWORD *)(v62 + v76);
  v80 = *(_BYTE *)(v62 + v76 + 8);
  if (v78 == 1)
  {
    if ((v80 & 1) == 0)
      goto LABEL_16;
  }
  else
  {
    if (*v77 != *v79)
      v80 = 1;
    if ((v80 & 1) != 0)
      goto LABEL_16;
  }
  sub_1000D1788();
  if (!v56)
    goto LABEL_16;
  v81 = v60[12];
  v82 = *(_QWORD *)(v61 + v81);
  v83 = *(_QWORD *)(v61 + v81 + 8);
  v84 = (uint64_t *)(v62 + v81);
  v85 = v84[1];
  if (v82 != *v84 || v83 != v85)
  {
    sub_100099264(v82, v83, *v84, v85);
    v65 = sub_10007A150();
    if ((v87 & 1) == 0)
      return v65 & 1;
  }
  sub_1000C1E34();
  if (v88)
  {
    if (!v89)
      goto LABEL_16;
    if (*v90 != *v91 || v88 != v89)
    {
      sub_100099264(*v90, v88, *v91, v89);
      v65 = sub_10007A150();
      if ((v93 & 1) == 0)
        return v65 & 1;
    }
  }
  else if (v89)
  {
    goto LABEL_16;
  }
  sub_1000BCF38(v61 + v60[14], v72);
  sub_1000BCF38(v62 + v60[14], v73);
  v94 = v144;
  v95 = v144 + *(int *)(v156 + 48);
  sub_1000BCF38(v72, v144);
  sub_1000BCF38(v73, v95);
  v96 = v157;
  sub_100088FC8(v94, 1, v157);
  if (v56)
  {
    sub_100099298(v73);
    sub_100099298(v72);
    sub_100088FC8(v95, 1, v96);
    if (v56)
    {
      sub_100021A14(v144, &qword_100BD0488);
      goto LABEL_59;
    }
    goto LABEL_57;
  }
  sub_100037768(v94, v71, &qword_100BD0488);
  sub_100088FC8(v95, 1, v96);
  if (v97)
  {
    sub_100075DD0(v73);
    sub_100075DD0(v72);
    sub_1000215BC(v71, type metadata accessor for SearchViewState.ViewState);
LABEL_57:
    v57 = &qword_100BDE860;
    v58 = v144;
    goto LABEL_11;
  }
  v98 = v155;
  sub_1000D05D0(v95);
  v105 = sub_10010A1BC(v71, v98, v99, v100, v101, v102, v103, v104, v143, v144, (uint64_t)v145, v146);
  sub_10009EFA8(v98);
  sub_10009E47C(v73);
  sub_10009E47C(v72);
  sub_10009EFA8(v71);
  sub_10009E47C(v94);
  if ((v105 & 1) == 0)
    goto LABEL_16;
LABEL_59:
  sub_1000D1788();
  if (!v56)
    goto LABEL_16;
  if ((sub_10009B654(*(_BYTE *)(v61 + v60[16]), *(_BYTE *)(v62 + v60[16])) & 1) == 0)
    goto LABEL_16;
  sub_1000D1788();
  if (!v56)
    goto LABEL_16;
  sub_1000C2908();
  if (!v56)
    goto LABEL_16;
  if ((sub_1000D0124(v145[19]) & 1) == 0)
    goto LABEL_16;
  sub_1000C2908();
  if (!v56)
    goto LABEL_16;
  sub_1000C2908();
  if (!v56)
    goto LABEL_16;
  v106 = v145[22];
  v107 = *(_BYTE *)(v147 + v106);
  v108 = LocationAuthorizationState.rawValue.getter(*(_BYTE *)(v146 + v106));
  v110 = v109;
  v111 = LocationAuthorizationState.rawValue.getter(v107);
  if (v108 == v111 && v110 == v112)
  {
    swift_bridgeObjectRelease_n(v110, 2);
    v116 = v146;
    v115 = v147;
    v117 = v145;
  }
  else
  {
    v114 = sub_100099264(v108, v110, v111, v112);
    swift_bridgeObjectRelease();
    sub_1000986C4();
    v65 = 0;
    v116 = v146;
    v115 = v147;
    v117 = v145;
    if ((v114 & 1) == 0)
      return v65 & 1;
  }
  if ((sub_10009B650(*(unsigned __int8 *)(v116 + v117[23]), *(unsigned __int8 *)(v115 + v117[23])) & 1) == 0)
    goto LABEL_16;
  if (*(unsigned __int8 *)(v146 + v145[24]) != *(unsigned __int8 *)(v147 + v145[24]))
    goto LABEL_16;
  sub_10009CA08();
  if ((v118 & 1) == 0)
    goto LABEL_16;
  if ((sub_1000D0124(v145[25]) & 1) == 0)
    goto LABEL_16;
  sub_1000C2908();
  if (!v56)
    goto LABEL_16;
  v119 = v145[27];
  v120 = *(void **)(v146 + v119);
  v121 = *(void **)(v147 + v119);
  if (v120)
  {
    if (!v121)
      goto LABEL_16;
    sub_10009AA74();
    v122 = v121;
    v123 = v120;
    v124 = static NSObject.== infix(_:_:)(v123, v122);

    if ((v124 & 1) == 0)
      goto LABEL_16;
  }
  else if (v121)
  {
    goto LABEL_16;
  }
  v125 = v145[28];
  v126 = *(_QWORD *)(v146 + v125);
  v127 = *(_QWORD *)(v146 + v125 + 8);
  v128 = (uint64_t *)(v147 + v125);
  v129 = v128[1];
  v130 = v126 == *v128 && v127 == v129;
  if (v130 || (sub_100099264(v126, v127, *v128, v129), v65 = sub_10007A150(), (v131 & 1) != 0))
  {
    sub_10009E970();
    if ((v132 & 1) == 0)
      goto LABEL_16;
    sub_10009B6B0();
    if ((v133 & 1) == 0)
      goto LABEL_16;
    sub_1000C2908();
    if (!v56)
      goto LABEL_16;
    if (*(_QWORD *)(v146 + v145[30]) != *(_QWORD *)(v147 + v145[30]))
      goto LABEL_16;
    sub_1000C2908();
    if (!v56)
      goto LABEL_16;
    v134 = v145;
    v135 = v150;
    sub_1000BCF38(v146 + v145[32], v150);
    v136 = v149;
    sub_1000BCF38(v147 + v134[32], v149);
    v137 = v154;
    v138 = v154 + *(int *)(v148 + 48);
    sub_1000BCF38(v135, v154);
    sub_1000BCF38(v136, v138);
    sub_100088FC8(v137, 1, v153);
    if (v56)
    {
      sub_100099298(v149);
      sub_100099298(v150);
      sub_100088FC8(v138, 1, v153);
      if (v56)
      {
        sub_100021A14(v154, &qword_100BC3620);
        goto LABEL_111;
      }
    }
    else
    {
      sub_100037768(v154, (uint64_t)v151, &qword_100BC3620);
      sub_100088FC8(v138, 1, v153);
      if (!v139)
      {
        v140 = v152;
        sub_1000D05D0(v138);
        v141 = v151;
        v142 = sub_10007BDA4(v151, v140);
        sub_10009EFA8((uint64_t)v140);
        sub_10009E47C(v149);
        sub_10009E47C(v150);
        sub_10009EFA8((uint64_t)v141);
        sub_10009E47C(v154);
        if (!v142)
          goto LABEL_16;
LABEL_111:
        sub_1000C2908();
        if (v56)
        {
          sub_1000C2908();
          if (v56)
          {
            sub_10094907C();
            return v65 & 1;
          }
        }
        goto LABEL_16;
      }
      sub_100075DD0(v149);
      sub_100075DD0(v150);
      sub_1000215BC((uint64_t)v151, type metadata accessor for ContentStatusBanner);
    }
    v57 = &qword_100BC4B48;
    v58 = v154;
    goto LABEL_11;
  }
  return v65 & 1;
}

void sub_1003C461C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, char a20,uint64_t a21,char a22,char a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,__int128 a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38,char a39,uint64_t a40)
{
  char v41;
  int *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char *v51;

  *a9 = a1;
  v41 = a5 & 1;
  v42 = (int *)type metadata accessor for ActualListInput(0);
  sub_1000787D4(a2, (uint64_t)a9 + v42[5], (uint64_t *)&unk_100C0D170);
  *(_QWORD *)((char *)a9 + v42[6]) = a3;
  *(_QWORD *)((char *)a9 + v42[7]) = a4;
  *((_BYTE *)a9 + v42[8]) = v41;
  v43 = (_QWORD *)((char *)a9 + v42[9]);
  *v43 = a6;
  v43[1] = a7;
  v44 = (char *)a9 + v42[10];
  *(_QWORD *)v44 = a8;
  v44[8] = a10 & 1;
  *((_BYTE *)a9 + v42[11]) = a11;
  v45 = (_QWORD *)((char *)a9 + v42[12]);
  *v45 = a12;
  v45[1] = a13;
  v46 = (_QWORD *)((char *)a9 + v42[13]);
  *v46 = a14;
  v46[1] = a15;
  sub_1000787D4(a16, (uint64_t)a9 + v42[14], &qword_100BD0488);
  *((_BYTE *)a9 + v42[15]) = a17;
  *((_BYTE *)a9 + v42[16]) = a18;
  *((_BYTE *)a9 + v42[17]) = a19;
  *((_BYTE *)a9 + v42[18]) = a20;
  v47 = (char *)a9 + v42[19];
  v48 = sub_100098778();
  v49 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
  v49(v47, a21, v48);
  *((_BYTE *)a9 + v42[20]) = a22;
  *((_BYTE *)a9 + v42[21]) = a23;
  *((_BYTE *)a9 + v42[22]) = a24;
  *((_BYTE *)a9 + v42[23]) = a25;
  v50 = (char *)a9 + v42[24];
  *v50 = a26;
  *((_QWORD *)v50 + 1) = a27;
  v49((char *)a9 + v42[25], a28, v48);
  *((_BYTE *)a9 + v42[26]) = a29;
  *(_QWORD *)((char *)a9 + v42[27]) = a30;
  v51 = (char *)a9 + v42[28];
  *(_OWORD *)v51 = a31;
  *((_QWORD *)v51 + 2) = a32;
  *((_QWORD *)v51 + 3) = a33;
  *((_BYTE *)a9 + v42[29]) = a34;
  *(_QWORD *)((char *)a9 + v42[30]) = a35;
  *((_BYTE *)a9 + v42[31]) = a36;
  sub_1000787D4(a37, (uint64_t)a9 + v42[32], &qword_100BC3620);
  *((_BYTE *)a9 + v42[33]) = a38;
  *((_BYTE *)a9 + v42[34]) = a39;
  *(_QWORD *)((char *)a9 + v42[35]) = a40;
}

double sub_1003C4938@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double result;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  uint64_t v85;
  int v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  char v104;
  char v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  int v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unsigned __int8 *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  int EnumCaseMultiPayload;
  id v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int *v223;
  unsigned __int8 *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237[8];

  sub_1000BA294(&qword_100BC3620);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v7 = sub_1000987B4(v6);
  v215 = type metadata accessor for ModalViewState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v222 = v9;
  v10 = sub_10009876C();
  type metadata accessor for TimeState(v10);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v13 = sub_1000987B4(v12);
  v213 = type metadata accessor for Date(v13);
  v221 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  sub_1000986FC();
  v230 = v14;
  sub_10009D2A4();
  __chkstk_darwin(v15);
  sub_100079F7C();
  v229 = v16;
  sub_1000BA294(&qword_100BD0488);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100088FDC();
  v227 = v18;
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v220 = v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  sub_100079F7C();
  v23 = sub_1000987B4(v22);
  v24 = type metadata accessor for ListInput(v23);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v27 = sub_1000987B4(v26);
  v196 = type metadata accessor for CurrentWeather(v27);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  sub_100088FDC();
  v29 = sub_1000987B4(v28);
  type metadata accessor for LocationViewerActiveLocationState(v29);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_100088FDC();
  v199 = v31;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100088FDC();
  v200 = v33;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_100079FBC();
  v197 = type metadata accessor for WeatherData(0);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v37 = sub_1000987B4(v36);
  v211 = type metadata accessor for ViewState.SecondaryViewState(v37);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_100088FDC();
  v225 = v39;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  sub_1000986FC();
  v228 = v41;
  sub_10009D2A4();
  __chkstk_darwin(v42);
  v44 = (char *)&v189 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v189 - v46;
  __chkstk_darwin(v48);
  sub_100079F7C();
  v236 = v49;
  v50 = sub_10009876C();
  v235 = type metadata accessor for ViewState(v50);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_1000986FC();
  v212 = v52;
  sub_10009D2A4();
  __chkstk_darwin(v53);
  v55 = (char *)&v189 - v54;
  __chkstk_darwin(v56);
  sub_1000860D0();
  v219 = v57;
  sub_10009D2A4();
  __chkstk_darwin(v58);
  sub_1000860D0();
  v218 = v59;
  sub_10009D2A4();
  __chkstk_darwin(v60);
  v62 = (uint64_t *)((char *)&v189 - v61);
  __chkstk_darwin(v63);
  v66 = (uint64_t *)((char *)&v189 - v65);
  if (qword_100BC22D8 != -1)
    swift_once(&qword_100BC22D8, sub_1005E696C);
  v67 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  v198 = v2;
  if (byte_100CAEE78 == 1)
  {
    sub_1000C1A98(v67, v64, type metadata accessor for ViewState);
    v68 = *v66;
LABEL_9:
    v205 = v55;
    sub_100109964();
    v206 = v68;
    swift_retain();
    goto LABEL_10;
  }
  sub_100080C0C(v67, (uint64_t)v62, type metadata accessor for ViewState);
  v68 = *v62;
  v69 = v235;
  if (*(_QWORD *)((char *)v62 + *(int *)(v235 + 36) + 8) != 1)
    goto LABEL_9;
  v70 = (void *)objc_opt_self(UIDevice);
  v71 = objc_msgSend(v70, "currentDevice", swift_retain().n128_f64[0]);
  objc_msgSend(v71, "userInterfaceIdiom");

  if (*((_BYTE *)v62 + *(int *)(v69 + 28)) == 1)
  {
    v72 = sub_10009D338();
    sub_10004A2E0(v72, type metadata accessor for ViewState);
    v73 = type metadata accessor for ActualListInput(0);
    sub_10009926C(a2, 1, v74, v73);
    _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v24);
    return result;
  }
  v205 = v55;
  v206 = v68;
  sub_100109964();
LABEL_10:
  sub_10004A2E0(v76, type metadata accessor for ViewState);
  v77 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
  v78 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v234 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v79 = a1;
  v80 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v81 = *(_QWORD *)(v77 + 24);
  v226 = v79 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v82 = v236;
  sub_100037768(v79 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v236, (uint64_t *)&unk_100C0D170);
  v83 = v79;
  v84 = (unsigned __int8 *)(v79 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
  v223 = (int *)type metadata accessor for NotificationsOptInState(0);
  v224 = v84;
  LODWORD(v204) = v84[v223[14]];
  sub_100037768(v82, (uint64_t)v47, (uint64_t *)&unk_100C0D170);
  v85 = type metadata accessor for CurrentLocation(0);
  v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v85);
  v233 = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v80);
  v232 = v81;
  v87 = swift_bridgeObjectRetain(v81);
  if (v86 == 1)
  {
    sub_100021A14((uint64_t)v47, (uint64_t *)&unk_100C0D170);
    v90 = 0;
    v91 = 0;
  }
  else
  {
    v90 = CurrentLocation.id.getter(v87);
    v91 = v92;
    sub_1000215BC((uint64_t)v47, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  sub_10009AD1C(v90, v91, v234, v233, v80, v232, v88, v89, v189, v190, v191, v192, v193, v194, v195, v196, v197, v198, v199,
    v200);
  v94 = v93;
  swift_bridgeObjectRelease();
  sub_100037768(v236, (uint64_t)v44, (uint64_t *)&unk_100C0D170);
  v95 = sub_100088FC8((uint64_t)v44, 1, v85);
  v97 = v206;
  if (v126)
  {
    sub_1000B3B00(v95, (uint64_t *)&unk_100C0D170);
    v98 = 0;
    v100 = 0;
  }
  else
  {
    v98 = CurrentLocation.id.getter(v96);
    v100 = v99;
    sub_100098AD4(v98, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  v103 = (uint64_t *)v225;
  sub_10066D12C(v98, v100, v234, v233, v80, v232, v101, v102, v189, v190, v191, v192, v193, v194, v195, v196, v197, v198, v199,
    v200);
  v105 = v104;
  sub_1000986C4();
  v106 = v83 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v83 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v237, 0, 0);
  v201 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
  v107 = *(_BYTE *)(v83 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  v225 = v106;
  v203 = sub_10009AC0C(v204, v94 & 1, v105 & 1, *(_BYTE *)(v106 + 1), v107);
  v108 = *(_QWORD *)(v97 + 48);
  if (!*(_QWORD *)(v97 + 56))
    v108 = 0;
  v202 = v108;
  v109 = v224[v223[12]];
  v110 = *(unsigned __int8 *)(v231 + 16);
  v207 = v80;
  if (v110)
  {
    v111 = v235;
    if (v110 != 3 && !v109)
      v109 = v110;
  }
  else
  {
    v111 = v235;
  }
  LODWORD(v211) = v109;
  v193 = v83;
  v112 = v83 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  v113 = v218;
  sub_1000D8F60(v112);
  sub_1000C1A98(v113 + *(int *)(v111 + 20), v114, type metadata accessor for ViewState.SecondaryViewState);
  sub_100099A30((uint64_t)&v236);
  sub_10009EFA8(v113);
  if (swift_getEnumCaseMultiPayload(v103) != 1)
  {
    v116 = *v103;
    v117 = *(_QWORD *)(v77 + 16);
    v118 = v199;
    sub_100080C0C(*v103 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v199, type metadata accessor for LocationViewerActiveLocationState);
    swift_bridgeObjectRetain(v117);
    sub_10008B21C();
    v120 = v119;
    v122 = v121;
    sub_1000215BC(v118, type metadata accessor for LocationViewerActiveLocationState);
    v123 = v200;
    sub_1000EED10(v120, v122, v117);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v124 = type metadata accessor for LocationWeatherDataState(0);
    sub_100088FC8(v123, 1, v124);
    if (v126)
    {
      sub_100021A14(v123, &qword_100BC3380);
      _s7Weather24LocationCompositionStateOwst_0(v198, 1, 1, v197);
      v115 = v210;
    }
    else
    {
      v125 = v198;
      sub_1000EADE8();
      sub_1000215BC(v123, type metadata accessor for LocationWeatherDataState);
      sub_100088FC8(v125, 1, v197);
      v115 = v210;
      if (!v126)
      {
        v128 = v125;
        v129 = v192;
        sub_10007802C(v128, v192, type metadata accessor for WeatherData);
        v130 = v194;
        v132 = WeatherDataModel.currentWeather.getter(v131);
        HIDWORD(v189) = CurrentWeather.requiresAdditionalContrast.getter(v132);
        v133 = swift_release(v116);
        (*(void (**)(uint64_t, uint64_t, __n128))(v195 + 8))(v130, v196, v133);
        sub_1000215BC(v129, type metadata accessor for WeatherData);
LABEL_33:
        v111 = v235;
        goto LABEL_34;
      }
    }
    swift_release(v116);
    sub_1000B3B00(v127, &qword_100BC3460);
    HIDWORD(v189) = 0;
    goto LABEL_33;
  }
  sub_1000215BC((uint64_t)v103, type metadata accessor for ViewState.SecondaryViewState);
  HIDWORD(v189) = 0;
  v115 = v210;
LABEL_34:
  v134 = type metadata accessor for LocationsState(0);
  v135 = v226;
  v136 = *(_QWORD *)(v226 + *(int *)(v134 + 36));
  sub_100037768(v236, v228, (uint64_t *)&unk_100C0D170);
  v192 = v134;
  v137 = *(_QWORD *)(v135 + *(int *)(v134 + 24));
  LODWORD(v200) = *(unsigned __int8 *)(v97 + 88);
  v138 = *(_QWORD *)(v97 + 80);
  v199 = *(_QWORD *)(v97 + 72);
  v197 = *(_QWORD *)(v97 + 16);
  LODWORD(v195) = *(unsigned __int8 *)(v97 + 24);
  LODWORD(v194) = *(unsigned __int8 *)(v97 + 64);
  v139 = v219;
  sub_1000D8F60(v112);
  sub_100037768(v139 + *(int *)(v111 + 32), (uint64_t)v115, &qword_100BC5F78);
  v198 = v138;
  swift_bridgeObjectRetain(v138);
  v218 = v136;
  swift_bridgeObjectRetain(v136);
  sub_100099A30((uint64_t)&v228);
  v210 = (uint64_t *)v137;
  swift_bridgeObjectRetain(v137);
  sub_10009EFA8(v139);
  v140 = type metadata accessor for SearchViewState(0);
  sub_100088FC8((uint64_t)v115, 1, v140);
  if (v126)
  {
    sub_100021A14((uint64_t)v115, &qword_100BC5F78);
    v191 = 0;
    v190 = 0xE000000000000000;
  }
  else
  {
    v141 = v115[1];
    v191 = *v115;
    v190 = v141;
    swift_bridgeObjectRetain(v141);
    sub_1000215BC((uint64_t)v115, type metadata accessor for SearchViewState);
  }
  v142 = v112;
  v143 = (uint64_t)v205;
  sub_100080C0C(v112, (uint64_t)v205, type metadata accessor for ViewState);
  v144 = v143 + *(int *)(v111 + 32);
  v145 = v220;
  sub_100037768(v144, v220, &qword_100BC5F78);
  sub_1000215BC(v143, type metadata accessor for ViewState);
  sub_100088FC8(v145, 1, v140);
  if (v126)
  {
    sub_100021A14(v145, &qword_100BC5F78);
    v148 = 1;
    sub_1000C1560();
    v146 = v227;
  }
  else
  {
    v146 = v227;
    sub_100080C0C(v145 + *(int *)(v140 + 20), v227, type metadata accessor for SearchViewState.ViewState);
    sub_10004A2E0(v147, type metadata accessor for SearchViewState);
    v148 = 0;
    sub_1000C1560();
  }
  v149 = v214;
  v150 = v213;
  v151 = type metadata accessor for SearchViewState.ViewState(0);
  sub_10009926C(v146, v148, v152, v151);
  LODWORD(v220) = *(unsigned __int8 *)(v97 + 26);
  v153 = v224;
  LODWORD(v219) = *v224;
  LODWORD(v215) = v224[17];
  v154 = v223;
  v155 = v221;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v221 + 16))(v229, &v224[v223[10]], v150);
  LODWORD(v224) = v153[v154[11]];
  v156 = v225;
  LODWORD(v223) = *(unsigned __int8 *)(v225 + 1);
  LODWORD(v214) = *(unsigned __int8 *)(v137 + v201);
  LODWORD(v213) = *(unsigned __int8 *)(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  v157 = *(_QWORD *)(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  sub_100080C0C(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v149, type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 32))(v230, v149, v150);
  v158 = type metadata accessor for EnvironmentState(0);
  LODWORD(v221) = *(unsigned __int8 *)(v156 + *(int *)(v158 + 36));
  v159 = *(void **)(v156 + *(int *)(v158 + 64) + 16);
  v160 = v222;
  sub_1000D8F60(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v160);
  v162 = v159;
  swift_bridgeObjectRetain(v157);
  sub_10009EFA8(v160);
  sub_100080C0C(v142, (uint64_t)type metadata accessor for ViewState, type metadata accessor for ViewState);
  v163 = *(_QWORD *)((char *)type metadata accessor for ViewState + *(int *)(v235 + 36) + 8);
  sub_10009EFA8((uint64_t)type metadata accessor for ViewState);
  v164 = *(_BYTE *)(v97 + 89);
  v165 = *(_QWORD *)(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  if (*(_QWORD *)(v165 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners));
    v166 = sub_1000F9020(0, 0);
    if ((v167 & 1) != 0)
    {
      v168 = v166;
      v169 = *(_QWORD *)(v165 + 56);
      v170 = sub_10009985C();
      v171 = v169 + *(_QWORD *)(*(_QWORD *)(v170 - 8) + 72) * v168;
      v138 = v217;
      sub_1000C1A98(v171, v172, type metadata accessor for ContentStatusBanner);
      v173 = v138;
      v174 = 0;
      v175 = 1;
      v176 = v170;
    }
    else
    {
      sub_10009985C();
      v173 = sub_1000D1E04();
    }
    _s7Weather24LocationCompositionStateOwst_0(v173, v174, v175, v176);
    sub_10009D338();
    sub_1000986C4();
  }
  else
  {
    sub_10009985C();
    v177 = sub_1000D1E04();
    _s7Weather24LocationCompositionStateOwst_0(v177, v178, v179, v180);
    sub_10009D338();
  }
  v181 = v216;
  v182 = v192;
  sub_100021A14(v236, (uint64_t *)&unk_100C0D170);
  v183 = *(_QWORD *)(v226 + *(int *)(v182 + 28));
  *((_QWORD *)&v188 + 1) = v233;
  *(_QWORD *)&v188 = v234;
  v184 = v211;
  sub_1003C461C(v218, v228, v196, (uint64_t)v210, v200, v199, v198, v197, v181, v195, v194, v191, v190, v202, v204, v227, v220, v203, v219,
    v215,
    v229,
    (char)v224,
    v211,
    (char)v223,
    v214,
    v213,
    v157,
    v230,
    v221,
    (uint64_t)v159,
    v188,
    v207,
    v232,
    EnumCaseMultiPayload == 0,
    v163,
    v164,
    v138,
    *(_BYTE *)(v225 + 2) == 4,
    BYTE4(v189) & 1,
    v183);
  v185 = type metadata accessor for ActualListInput(0);
  sub_10009926C((uint64_t)v181, 0, v186, v185);
  *(_BYTE *)(v231 + 16) = v184;
  v187 = v209;
  sub_10007802C((uint64_t)v181, v209, type metadata accessor for ListInput);
  _s7Weather24LocationCompositionStateOwst_0(v187, 0, 1, v208);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v183).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ListInputFactory()
{
  return objc_opt_self(_TtC7Weather16ListInputFactory);
}

uint64_t *sub_1003C5950(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v89)(char *, char *, uint64_t);
  _QWORD *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v9 = *a2;
  *a1 = *a2;
  v10 = v7[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CurrentLocation(0);
  swift_bridgeObjectRetain(v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    v14 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_16;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12);
  if (EnumCaseMultiPayload == 2)
  {
    v20 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v12, v20);
    v17 = v11;
    v18 = v13;
    v19 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v21 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, v12, v21);
    v17 = v11;
    v18 = v13;
    v19 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_15;
    }
    v16 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
    v17 = v11;
    v18 = v13;
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v18, v19);
LABEL_15:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
LABEL_16:
  v22 = v7[6];
  v23 = *(uint64_t *)((char *)a2 + v22);
  *(uint64_t *)((char *)a1 + v22) = v23;
  v24 = v7[7];
  v25 = *(uint64_t *)((char *)a2 + v24);
  *(uint64_t *)((char *)a1 + v24) = v25;
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v26 = v7[9];
  v27 = (uint64_t *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = v7[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v7[11]) = *((_BYTE *)a2 + v7[11]);
  v33 = v7[12];
  v34 = (uint64_t *)((char *)a1 + v33);
  v35 = (uint64_t *)((char *)a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = v7[13];
  v38 = (uint64_t *)((char *)a1 + v37);
  v39 = (uint64_t *)((char *)a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = v7[14];
  v42 = (uint64_t *)((char *)a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  v44 = type metadata accessor for SearchViewState.ViewState(0);
  v45 = v23;
  v46 = v44;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v40);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v46))
  {
    v48 = swift_getEnumCaseMultiPayload(v43);
    if (v48 == 1)
    {
      v53 = *v43;
      *v42 = *v43;
      swift_bridgeObjectRetain(v53);
      v50 = v42;
      v51 = v46;
      v52 = 1;
    }
    else
    {
      if (v48)
      {
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        goto LABEL_24;
      }
      v49 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v42, v43, v49);
      v50 = v42;
      v51 = v46;
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v50, v51, v52);
LABEL_24:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v46);
    goto LABEL_25;
  }
  v47 = sub_1000BA294(&qword_100BD0488);
  memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
LABEL_25:
  *((_BYTE *)a1 + v7[15]) = *((_BYTE *)a2 + v7[15]);
  *((_BYTE *)a1 + v7[16]) = *((_BYTE *)a2 + v7[16]);
  *((_BYTE *)a1 + v7[17]) = *((_BYTE *)a2 + v7[17]);
  *((_BYTE *)a1 + v7[18]) = *((_BYTE *)a2 + v7[18]);
  v54 = v7[19];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for Date(0);
  v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
  v58(v55, v56, v57);
  *((_BYTE *)a1 + v7[20]) = *((_BYTE *)a2 + v7[20]);
  *((_BYTE *)a1 + v7[21]) = *((_BYTE *)a2 + v7[21]);
  *((_BYTE *)a1 + v7[22]) = *((_BYTE *)a2 + v7[22]);
  *((_BYTE *)a1 + v7[23]) = *((_BYTE *)a2 + v7[23]);
  v59 = v7[24];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  *v60 = *v61;
  v62 = *((_QWORD *)v61 + 1);
  *((_QWORD *)v60 + 1) = v62;
  v63 = v7[25];
  v64 = (char *)a1 + v63;
  v65 = (char *)a2 + v63;
  v66 = swift_bridgeObjectRetain(v62);
  v89 = v58;
  ((void (*)(char *, char *, uint64_t, __n128))v58)(v64, v65, v57, v66);
  *((_BYTE *)a1 + v7[26]) = *((_BYTE *)a2 + v7[26]);
  v67 = v7[27];
  v68 = *(void **)((char *)a2 + v67);
  *(uint64_t *)((char *)a1 + v67) = (uint64_t)v68;
  v69 = v7[28];
  v70 = (uint64_t *)((char *)a1 + v69);
  v71 = (uint64_t *)((char *)a2 + v69);
  v72 = v71[1];
  *v70 = *v71;
  v70[1] = v72;
  v73 = v71[2];
  v74 = v71[3];
  v70[2] = v73;
  v70[3] = v74;
  *((_BYTE *)a1 + v7[29]) = *((_BYTE *)a2 + v7[29]);
  *(uint64_t *)((char *)a1 + v7[30]) = *(uint64_t *)((char *)a2 + v7[30]);
  *((_BYTE *)a1 + v7[31]) = *((_BYTE *)a2 + v7[31]);
  v75 = v7[32];
  __dst = (uint64_t *)((char *)a1 + v75);
  v76 = (uint64_t *)((char *)a2 + v75);
  v77 = type metadata accessor for ContentStatusBanner(0);
  v78 = v68;
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRetain(v74);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
  {
    v79 = sub_1000BA294(&qword_100BC3620);
    memcpy(__dst, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    *(_BYTE *)__dst = *(_BYTE *)v76;
    v80 = v76 + 1;
    v81 = v76[2];
    if (v81 >= 2)
    {
      __dst[1] = *v80;
      __dst[2] = v81;
      swift_bridgeObjectRetain(v81);
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v80;
    }
    v82 = *(int *)(v77 + 24);
    v83 = (char *)__dst + v82;
    v84 = (char *)v76 + v82;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v57))
    {
      v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v89(v83, v84, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v57);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v77);
  }
  *((_BYTE *)a1 + v7[33]) = *((_BYTE *)a2 + v7[33]);
  *((_BYTE *)a1 + v7[34]) = *((_BYTE *)a2 + v7[34]);
  v86 = v7[35];
  v87 = *(uint64_t *)((char *)a2 + v86);
  *(uint64_t *)((char *)a1 + v86) = v87;
  swift_bridgeObjectRetain(v87);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

double sub_1003C5F58(uint64_t a1)
{
  int *v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;

  v2 = (int *)type metadata accessor for ActualListInput(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2))
  {
    swift_bridgeObjectRelease();
    v4 = a1 + v2[5];
    v5 = type metadata accessor for CurrentLocation(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)
      && swift_getEnumCaseMultiPayload(v4) <= 2)
    {
      v6 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = a1 + v2[14];
    v8 = type metadata accessor for SearchViewState.ViewState(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7);
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      else if (!EnumCaseMultiPayload)
      {
        v17 = type metadata accessor for CodableError(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v7, v17);
      }
    }
    v9 = a1 + v2[19];
    v10 = type metadata accessor for Date(0);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v11(v9, v10);
    v12 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v11)(a1 + v2[25], v10, v12);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = a1 + v2[32];
    v14 = type metadata accessor for ContentStatusBanner(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    {
      if (*(_QWORD *)(v13 + 16) >= 2uLL)
        swift_bridgeObjectRelease();
      v15 = v13 + *(int *)(v14 + 24);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v10))
        v11(v15, v10);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t *sub_1003C61A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __n128 v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v87)(char *, char *, uint64_t);
  _QWORD *__dst;

  v6 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v6[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for CurrentLocation(0);
  swift_bridgeObjectRetain(v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_14;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
  if (EnumCaseMultiPayload == 2)
  {
    v18 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v10, v18);
    v15 = v9;
    v16 = v11;
    v17 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v19 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v10, v19);
    v15 = v9;
    v16 = v11;
    v17 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_13;
    }
    v14 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
    v15 = v9;
    v16 = v11;
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v16, v17);
LABEL_13:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_14:
  v20 = v6[6];
  v21 = *(uint64_t *)((char *)a2 + v20);
  *(uint64_t *)((char *)a1 + v20) = v21;
  v22 = v6[7];
  v23 = *(uint64_t *)((char *)a2 + v22);
  *(uint64_t *)((char *)a1 + v22) = v23;
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v24 = v6[9];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = v6[10];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v31 = v6[12];
  v32 = (uint64_t *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = v6[13];
  v36 = (uint64_t *)((char *)a1 + v35);
  v37 = (uint64_t *)((char *)a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = v6[14];
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  v42 = type metadata accessor for SearchViewState.ViewState(0);
  v43 = v21;
  v44 = v42;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v38);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
  {
    v46 = swift_getEnumCaseMultiPayload(v41);
    if (v46 == 1)
    {
      v51 = *v41;
      *v40 = *v41;
      swift_bridgeObjectRetain(v51);
      v48 = v40;
      v49 = v44;
      v50 = 1;
    }
    else
    {
      if (v46)
      {
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        goto LABEL_22;
      }
      v47 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v40, v41, v47);
      v48 = v40;
      v49 = v44;
      v50 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v49, v50);
LABEL_22:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
    goto LABEL_23;
  }
  v45 = sub_1000BA294(&qword_100BD0488);
  memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_23:
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
  v52 = v6[19];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for Date(0);
  v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v56(v53, v54, v55);
  *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
  *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
  *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
  *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
  v57 = v6[24];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *v58 = *v59;
  v60 = *((_QWORD *)v59 + 1);
  *((_QWORD *)v58 + 1) = v60;
  v61 = v6[25];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = swift_bridgeObjectRetain(v60);
  v87 = v56;
  ((void (*)(char *, char *, uint64_t, __n128))v56)(v62, v63, v55, v64);
  *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
  v65 = v6[27];
  v66 = *(void **)((char *)a2 + v65);
  *(uint64_t *)((char *)a1 + v65) = (uint64_t)v66;
  v67 = v6[28];
  v68 = (uint64_t *)((char *)a1 + v67);
  v69 = (uint64_t *)((char *)a2 + v67);
  v70 = v69[1];
  *v68 = *v69;
  v68[1] = v70;
  v71 = v69[2];
  v72 = v69[3];
  v68[2] = v71;
  v68[3] = v72;
  *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
  *(uint64_t *)((char *)a1 + v6[30]) = *(uint64_t *)((char *)a2 + v6[30]);
  *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
  v73 = v6[32];
  __dst = (uint64_t *)((char *)a1 + v73);
  v74 = (uint64_t *)((char *)a2 + v73);
  v75 = type metadata accessor for ContentStatusBanner(0);
  v76 = v66;
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRetain(v72);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
  {
    v77 = sub_1000BA294(&qword_100BC3620);
    memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    *(_BYTE *)__dst = *(_BYTE *)v74;
    v78 = v74 + 1;
    v79 = v74[2];
    if (v79 >= 2)
    {
      __dst[1] = *v78;
      __dst[2] = v79;
      swift_bridgeObjectRetain(v79);
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v78;
    }
    v80 = *(int *)(v75 + 24);
    v81 = (char *)__dst + v80;
    v82 = (char *)v74 + v80;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v55))
    {
      v83 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v87(v81, v82, v55);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v55);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v75);
  }
  *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
  *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
  v84 = v6[35];
  v85 = *(uint64_t *)((char *)a2 + v84);
  *(uint64_t *)((char *)a1 + v84) = v85;
  swift_bridgeObjectRetain(v85);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

_QWORD *sub_1003C678C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  int v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  void *v160;
  void *v161;
  id v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  int v174;
  size_t v175;
  void *v176;
  const void *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  const void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  int v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  _QWORD *__dst;

  v6 = (int *)type metadata accessor for ActualListInput(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for ActualListInput);
      goto LABEL_7;
    }
    v15 = *a2;
    *a1 = *a2;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRelease();
    v16 = v6[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for CurrentLocation(0);
    v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
    v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
    if (v20)
    {
      if (!v21)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18);
        if (EnumCaseMultiPayload == 2)
        {
          v106 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v17, v18, v106);
          v24 = v17;
          v25 = v19;
          v26 = 2;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v107 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v17, v18, v107);
          v24 = v17;
          v25 = v19;
          v26 = 1;
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            goto LABEL_55;
          }
          v23 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v17, v18, v23);
          v24 = v17;
          v25 = v19;
          v26 = 0;
        }
        swift_storeEnumTagMultiPayload(v24, v25, v26);
LABEL_55:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        goto LABEL_59;
      }
    }
    else
    {
      if (!v21)
      {
        if (a1 == a2)
          goto LABEL_59;
        sub_1000215BC((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
        v101 = swift_getEnumCaseMultiPayload(v18);
        if (v101 == 2)
        {
          v108 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v17, v18, v108);
          v103 = v17;
          v104 = v19;
          v105 = 2;
        }
        else if (v101 == 1)
        {
          v109 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v17, v18, v109);
          v103 = v17;
          v104 = v19;
          v105 = 1;
        }
        else
        {
          if (v101)
          {
            v32 = *(_QWORD *)(v19 - 8);
            goto LABEL_21;
          }
          v102 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v17, v18, v102);
          v103 = v17;
          v104 = v19;
          v105 = 0;
        }
        swift_storeEnumTagMultiPayload(v103, v104, v105);
LABEL_59:
        v110 = v6[6];
        v111 = *(_QWORD *)((char *)a2 + v110);
        *(_QWORD *)((char *)a1 + v110) = v111;
        swift_bridgeObjectRetain(v111);
        swift_bridgeObjectRelease();
        v112 = v6[7];
        v113 = *(_QWORD *)((char *)a2 + v112);
        *(_QWORD *)((char *)a1 + v112) = v113;
        swift_bridgeObjectRetain(v113);
        swift_bridgeObjectRelease();
        *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
        v114 = v6[9];
        v115 = (_QWORD *)((char *)a1 + v114);
        v116 = (_QWORD *)((char *)a2 + v114);
        *v115 = *v116;
        v117 = v116[1];
        v115[1] = v117;
        swift_bridgeObjectRetain(v117);
        swift_bridgeObjectRelease();
        v118 = v6[10];
        v119 = (char *)a1 + v118;
        v120 = (char *)a2 + v118;
        v121 = *(_QWORD *)v120;
        v119[8] = v120[8];
        *(_QWORD *)v119 = v121;
        *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
        v122 = v6[12];
        v123 = (_QWORD *)((char *)a1 + v122);
        v124 = (_QWORD *)((char *)a2 + v122);
        *v123 = *v124;
        v125 = v124[1];
        v123[1] = v125;
        swift_bridgeObjectRetain(v125);
        swift_bridgeObjectRelease();
        v126 = v6[13];
        v127 = (_QWORD *)((char *)a1 + v126);
        v128 = (_QWORD *)((char *)a2 + v126);
        *v127 = *v128;
        v129 = v128[1];
        v127[1] = v129;
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRelease();
        v130 = v6[14];
        v131 = (_QWORD *)((char *)a1 + v130);
        v132 = (_QWORD *)((char *)a2 + v130);
        v133 = type metadata accessor for SearchViewState.ViewState(0);
        v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v133);
        v135 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v133);
        if (v134)
        {
          if (!v135)
          {
            v136 = swift_getEnumCaseMultiPayload(v132);
            if (v136 == 1)
            {
              v147 = *v132;
              *v131 = *v132;
              swift_bridgeObjectRetain(v147);
              v138 = v131;
              v139 = v133;
              v140 = 1;
            }
            else
            {
              if (v136)
              {
                memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
                goto LABEL_75;
              }
              v137 = type metadata accessor for CodableError(0);
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v131, v132, v137);
              v138 = v131;
              v139 = v133;
              v140 = 0;
            }
            swift_storeEnumTagMultiPayload(v138, v139, v140);
LABEL_75:
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v133);
            goto LABEL_76;
          }
        }
        else
        {
          if (!v135)
          {
            if (a1 == a2)
              goto LABEL_76;
            sub_1000215BC((uint64_t)v131, type metadata accessor for SearchViewState.ViewState);
            v142 = swift_getEnumCaseMultiPayload(v132);
            if (v142 == 1)
            {
              v196 = *v132;
              *v131 = *v132;
              swift_bridgeObjectRetain(v196);
              v144 = v131;
              v145 = v133;
              v146 = 1;
            }
            else
            {
              if (v142)
              {
                v141 = *(_QWORD *)(v133 - 8);
                goto LABEL_67;
              }
              v143 = type metadata accessor for CodableError(0);
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v131, v132, v143);
              v144 = v131;
              v145 = v133;
              v146 = 0;
            }
            swift_storeEnumTagMultiPayload(v144, v145, v146);
LABEL_76:
            *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
            *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
            *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
            *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
            v148 = v6[19];
            v149 = (char *)a1 + v148;
            v150 = (char *)a2 + v148;
            v151 = type metadata accessor for Date(0);
            v152 = *(_QWORD *)(v151 - 8);
            v153 = *(void (**)(char *, char *, uint64_t))(v152 + 24);
            v153(v149, v150, v151);
            *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
            *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
            *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
            *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
            v154 = v6[24];
            v155 = (char *)a1 + v154;
            v156 = (char *)a2 + v154;
            *v155 = *v156;
            v157 = *((_QWORD *)v156 + 1);
            *((_QWORD *)v155 + 1) = v157;
            swift_bridgeObjectRetain(v157);
            v158 = swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t, __n128))v153)((char *)a1 + v6[25], (char *)a2 + v6[25], v151, v158);
            *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
            v159 = v6[27];
            v160 = *(void **)((char *)a1 + v159);
            v161 = *(void **)((char *)a2 + v159);
            *(_QWORD *)((char *)a1 + v159) = v161;
            v162 = v161;

            v163 = v6[28];
            v164 = (_QWORD *)((char *)a1 + v163);
            v165 = (char *)a2 + v163;
            *v164 = *(_QWORD *)((char *)a2 + v163);
            v166 = *(_QWORD *)((char *)a2 + v163 + 8);
            v164[1] = v166;
            swift_bridgeObjectRetain(v166);
            swift_bridgeObjectRelease();
            v167 = *((_QWORD *)v165 + 2);
            v164[2] = v167;
            swift_bridgeObjectRetain(v167);
            swift_bridgeObjectRelease();
            v168 = *((_QWORD *)v165 + 3);
            v164[3] = v168;
            swift_bridgeObjectRetain(v168);
            swift_bridgeObjectRelease();
            *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
            *(_QWORD *)((char *)a1 + v6[30]) = *(_QWORD *)((char *)a2 + v6[30]);
            *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
            v169 = v6[32];
            v170 = (uint64_t)a1 + v169;
            v171 = (uint64_t)a2 + v169;
            v172 = type metadata accessor for ContentStatusBanner(0);
            v173 = _s7Weather24LocationCompositionStateOwet_0(v170, 1, v172);
            v174 = _s7Weather24LocationCompositionStateOwet_0(v171, 1, v172);
            if (v173)
            {
              if (!v174)
              {
                *(_BYTE *)v170 = *(_BYTE *)v171;
                if (*(_QWORD *)(v171 + 16) >= 2uLL)
                {
                  *(_QWORD *)(v170 + 8) = *(_QWORD *)(v171 + 8);
                  v179 = *(_QWORD *)(v171 + 16);
                  *(_QWORD *)(v170 + 16) = v179;
                  swift_bridgeObjectRetain(v179);
                }
                else
                {
                  *(_OWORD *)(v170 + 8) = *(_OWORD *)(v171 + 8);
                }
                v180 = *(int *)(v172 + 24);
                v181 = (void *)(v170 + v180);
                v182 = (const void *)(v171 + v180);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v151))
                {
                  v183 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v152 + 16))(v181, v182, v151);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v151);
                }
                v184 = v170;
                v185 = v172;
                goto LABEL_92;
              }
            }
            else
            {
              if (!v174)
              {
                *(_BYTE *)v170 = *(_BYTE *)v171;
                v178 = *(_QWORD *)(v171 + 16);
                if (*(_QWORD *)(v170 + 16) >= 2uLL)
                {
                  if (v178 >= 2)
                  {
                    *(_QWORD *)(v170 + 8) = *(_QWORD *)(v171 + 8);
                    v190 = *(_QWORD *)(v171 + 16);
                    *(_QWORD *)(v170 + 16) = v190;
                    swift_bridgeObjectRetain(v190);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_1001A27B4(v170 + 8);
                    *(_OWORD *)(v170 + 8) = *(_OWORD *)(v171 + 8);
                  }
                }
                else if (v178 >= 2)
                {
                  *(_QWORD *)(v170 + 8) = *(_QWORD *)(v171 + 8);
                  v189 = *(_QWORD *)(v171 + 16);
                  *(_QWORD *)(v170 + 16) = v189;
                  swift_bridgeObjectRetain(v189);
                }
                else
                {
                  *(_OWORD *)(v170 + 8) = *(_OWORD *)(v171 + 8);
                }
                v191 = *(int *)(v172 + 24);
                v192 = v170 + v191;
                v193 = v171 + v191;
                v194 = _s7Weather24LocationCompositionStateOwet_0(v192, 1, v151);
                v195 = _s7Weather24LocationCompositionStateOwet_0(v193, 1, v151);
                if (v194)
                {
                  if (!v195)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v192, v193, v151);
                    v184 = v192;
                    v185 = v151;
LABEL_92:
                    _s7Weather24LocationCompositionStateOwst_0(v184, 0, 1, v185);
                    goto LABEL_93;
                  }
                }
                else
                {
                  if (!v195)
                  {
                    v153((char *)v192, (char *)v193, v151);
                    goto LABEL_93;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v192, v151);
                }
                v175 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
                v176 = (void *)v192;
                v177 = (const void *)v193;
LABEL_83:
                memcpy(v176, v177, v175);
LABEL_93:
                *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
                *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
                v186 = v6[35];
                v187 = *(_QWORD *)((char *)a2 + v186);
                *(_QWORD *)((char *)a1 + v186) = v187;
                swift_bridgeObjectRetain(v187);
                swift_bridgeObjectRelease();
                return a1;
              }
              sub_1000215BC(v170, type metadata accessor for ContentStatusBanner);
            }
            v175 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
            v176 = (void *)v170;
            v177 = (const void *)v171;
            goto LABEL_83;
          }
          sub_1000215BC((uint64_t)v131, type metadata accessor for SearchViewState.ViewState);
        }
        v141 = *(_QWORD *)(sub_1000BA294(&qword_100BD0488) - 8);
LABEL_67:
        memcpy(v131, v132, *(_QWORD *)(v141 + 64));
        goto LABEL_76;
      }
      sub_1000215BC((uint64_t)v17, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    }
    v32 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_21:
    memcpy(v17, v18, *(_QWORD *)(v32 + 64));
    goto LABEL_59;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = *a2;
  *a1 = *a2;
  v10 = v6[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CurrentLocation(0);
  swift_bridgeObjectRetain(v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    v14 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_27;
  }
  v27 = swift_getEnumCaseMultiPayload(v12);
  if (v27 == 2)
  {
    v33 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v11, v12, v33);
    v29 = v11;
    v30 = v13;
    v31 = 2;
  }
  else if (v27 == 1)
  {
    v34 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v11, v12, v34);
    v29 = v11;
    v30 = v13;
    v31 = 1;
  }
  else
  {
    if (v27)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_26;
    }
    v28 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v12, v28);
    v29 = v11;
    v30 = v13;
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v30, v31);
LABEL_26:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
LABEL_27:
  v35 = v6[6];
  v36 = *(_QWORD *)((char *)a2 + v35);
  *(_QWORD *)((char *)a1 + v35) = v36;
  v37 = v6[7];
  v38 = *(_QWORD *)((char *)a2 + v37);
  *(_QWORD *)((char *)a1 + v37) = v38;
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  v39 = v6[9];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  *v40 = *v41;
  v42 = v41[1];
  v40[1] = v42;
  v43 = v6[10];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(_QWORD *)v45;
  v44[8] = v45[8];
  *(_QWORD *)v44 = v46;
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  v47 = v6[12];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  *v48 = *v49;
  v50 = v49[1];
  v48[1] = v50;
  v51 = v6[13];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  *v52 = *v53;
  v54 = v53[1];
  v52[1] = v54;
  v55 = v6[14];
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (_QWORD *)((char *)a2 + v55);
  v58 = type metadata accessor for SearchViewState.ViewState(0);
  v59 = v36;
  v60 = v58;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v54);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v60))
  {
    v62 = swift_getEnumCaseMultiPayload(v57);
    if (v62 == 1)
    {
      v67 = *v57;
      *v56 = *v57;
      swift_bridgeObjectRetain(v67);
      v64 = v56;
      v65 = v60;
      v66 = 1;
    }
    else
    {
      if (v62)
      {
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        goto LABEL_35;
      }
      v63 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v56, v57, v63);
      v64 = v56;
      v65 = v60;
      v66 = 0;
    }
    swift_storeEnumTagMultiPayload(v64, v65, v66);
LABEL_35:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v60);
    goto LABEL_36;
  }
  v61 = sub_1000BA294(&qword_100BD0488);
  memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
LABEL_36:
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
  v68 = v6[19];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = type metadata accessor for Date(0);
  v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
  v72(v69, v70, v71);
  *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
  *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
  *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
  *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
  v73 = v6[24];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  *v74 = *v75;
  v76 = *((_QWORD *)v75 + 1);
  *((_QWORD *)v74 + 1) = v76;
  v77 = v6[25];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  v80 = swift_bridgeObjectRetain(v76);
  v197 = v72;
  ((void (*)(char *, char *, uint64_t, __n128))v72)(v78, v79, v71, v80);
  *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
  v81 = v6[27];
  v82 = *(void **)((char *)a2 + v81);
  *(_QWORD *)((char *)a1 + v81) = v82;
  v83 = v6[28];
  v84 = (_QWORD *)((char *)a1 + v83);
  v85 = (_QWORD *)((char *)a2 + v83);
  *v84 = *v85;
  v86 = v85[1];
  v84[1] = v86;
  v87 = v85[2];
  v84[2] = v87;
  v88 = v85[3];
  v84[3] = v88;
  *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
  *(_QWORD *)((char *)a1 + v6[30]) = *(_QWORD *)((char *)a2 + v6[30]);
  *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
  v89 = v6[32];
  __dst = (_QWORD *)((char *)a1 + v89);
  v90 = (_QWORD *)((char *)a2 + v89);
  v91 = type metadata accessor for ContentStatusBanner(0);
  v92 = v82;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRetain(v88);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
  {
    v93 = sub_1000BA294(&qword_100BC3620);
    memcpy(__dst, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    *(_BYTE *)__dst = *(_BYTE *)v90;
    if (v90[2] >= 2uLL)
    {
      __dst[1] = v90[1];
      v94 = v90[2];
      __dst[2] = v94;
      swift_bridgeObjectRetain(v94);
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)(v90 + 1);
    }
    v95 = *(int *)(v91 + 24);
    v96 = (char *)__dst + v95;
    v97 = (char *)v90 + v95;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v71))
    {
      v98 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      v197(v96, v97, v71);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v71);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v91);
  }
  *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
  *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
  v99 = v6[35];
  v100 = *(_QWORD *)((char *)a2 + v99);
  *(_QWORD *)((char *)a1 + v99) = v100;
  swift_bridgeObjectRetain(v100);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

_QWORD *sub_1003C76B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;

  v6 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
    if (EnumCaseMultiPayload == 2)
    {
      v17 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v8, v9, v17);
      v14 = v8;
      v15 = v10;
      v16 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
      v14 = v8;
      v15 = v10;
      v16 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_13;
      }
      v13 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      v14 = v8;
      v15 = v10;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_13:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    goto LABEL_14;
  }
  v11 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_14:
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  v19 = v6[10];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  v22 = v6[14];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for SearchViewState.ViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = sub_1000BA294(&qword_100BD0488);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v24))
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v27 = type metadata accessor for CodableError(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v23, v24, v27);
      swift_storeEnumTagMultiPayload(v23, v25, 0);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
  v28 = v6[19];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for Date(0);
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
  v32(v29, v30, v31);
  *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
  *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
  *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
  *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
  *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
  v32((char *)a1 + v6[25], (char *)a2 + v6[25], v31);
  *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
  *(_QWORD *)((char *)a1 + v6[27]) = *(_QWORD *)((char *)a2 + v6[27]);
  v33 = v6[28];
  v34 = (_OWORD *)((char *)a1 + v33);
  v35 = (_OWORD *)((char *)a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
  *(_QWORD *)((char *)a1 + v6[30]) = *(_QWORD *)((char *)a2 + v6[30]);
  *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
  v37 = v6[32];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_1000BA294(&qword_100BC3620);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v38 = *v39;
    *(_OWORD *)(v38 + 8) = *(_OWORD *)(v39 + 8);
    v42 = *(int *)(v40 + 24);
    v43 = &v38[v42];
    v44 = &v39[v42];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v31))
    {
      v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v32(v43, v44, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v31);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
  *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
  *(_QWORD *)((char *)a1 + v6[35]) = *(_QWORD *)((char *)a2 + v6[35]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

_QWORD *sub_1003C7BA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  __n128 v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  void *v118;
  const void *v119;
  uint64_t v120;
  size_t v121;
  void *v122;
  const void *v123;
  _QWORD *v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  int v134;
  uint64_t v135;

  v6 = (int *)type metadata accessor for ActualListInput(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1000215BC((uint64_t)a1, type metadata accessor for ActualListInput);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRelease();
    v14 = v6[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for CurrentLocation(0);
    v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
    v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16);
        if (EnumCaseMultiPayload == 2)
        {
          v65 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v15, v16, v65);
          v22 = v15;
          v23 = v17;
          v24 = 2;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v66 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v15, v16, v66);
          v22 = v15;
          v23 = v17;
          v24 = 1;
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_49;
          }
          v21 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v15, v16, v21);
          v22 = v15;
          v23 = v17;
          v24 = 0;
        }
        swift_storeEnumTagMultiPayload(v22, v23, v24);
LABEL_49:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
        goto LABEL_53;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 == a2)
          goto LABEL_53;
        sub_1000215BC((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
        v60 = swift_getEnumCaseMultiPayload(v16);
        if (v60 == 2)
        {
          v67 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v15, v16, v67);
          v62 = v15;
          v63 = v17;
          v64 = 2;
        }
        else if (v60 == 1)
        {
          v68 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v15, v16, v68);
          v62 = v15;
          v63 = v17;
          v64 = 1;
        }
        else
        {
          if (v60)
          {
            v30 = *(_QWORD *)(v17 - 8);
            goto LABEL_21;
          }
          v61 = type metadata accessor for Location(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v15, v16, v61);
          v62 = v15;
          v63 = v17;
          v64 = 0;
        }
        swift_storeEnumTagMultiPayload(v62, v63, v64);
LABEL_53:
        *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
        swift_bridgeObjectRelease();
        *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
        v69 = v6[9];
        v70 = (_QWORD *)((char *)a1 + v69);
        v71 = (_QWORD *)((char *)a2 + v69);
        v73 = *v71;
        v72 = v71[1];
        *v70 = v73;
        v70[1] = v72;
        swift_bridgeObjectRelease();
        v74 = v6[10];
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v75[8] = v76[8];
        *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
        v77 = v6[12];
        v78 = (_QWORD *)((char *)a1 + v77);
        v79 = (_QWORD *)((char *)a2 + v77);
        v81 = *v79;
        v80 = v79[1];
        *v78 = v81;
        v78[1] = v80;
        swift_bridgeObjectRelease();
        v82 = v6[13];
        v83 = (_QWORD *)((char *)a1 + v82);
        v84 = (_QWORD *)((char *)a2 + v82);
        v86 = *v84;
        v85 = v84[1];
        *v83 = v86;
        v83[1] = v85;
        swift_bridgeObjectRelease();
        v87 = v6[14];
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        v90 = type metadata accessor for SearchViewState.ViewState(0);
        v91 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v90);
        v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90);
        if (v91)
        {
          if (!v92)
          {
            if (swift_getEnumCaseMultiPayload(v89))
            {
              memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
            }
            else
            {
              v94 = type metadata accessor for CodableError(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v88, v89, v94);
              swift_storeEnumTagMultiPayload(v88, v90, 0);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
LABEL_66:
            *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
            *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
            *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
            *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
            v95 = v6[19];
            v96 = (char *)a1 + v95;
            v97 = (char *)a2 + v95;
            v98 = type metadata accessor for Date(0);
            v99 = *(_QWORD *)(v98 - 8);
            v100 = *(void (**)(char *, char *, uint64_t))(v99 + 40);
            v100(v96, v97, v98);
            *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
            *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
            *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
            *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
            v101 = v6[24];
            v102 = (char *)a1 + v101;
            v103 = (char *)a2 + v101;
            *v102 = *v103;
            *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
            v104 = swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t, __n128))v100)((char *)a1 + v6[25], (char *)a2 + v6[25], v98, v104);
            *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
            v105 = v6[27];
            v106 = *(void **)((char *)a1 + v105);
            *(_QWORD *)((char *)a1 + v105) = *(_QWORD *)((char *)a2 + v105);

            v107 = v6[28];
            v108 = (_QWORD *)((char *)a1 + v107);
            v109 = (char *)a2 + v107;
            v110 = *(_QWORD *)((char *)a2 + v107 + 8);
            *v108 = *(_QWORD *)((char *)a2 + v107);
            v108[1] = v110;
            swift_bridgeObjectRelease();
            v108[2] = *((_QWORD *)v109 + 2);
            swift_bridgeObjectRelease();
            v108[3] = *((_QWORD *)v109 + 3);
            swift_bridgeObjectRelease();
            *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
            *(_QWORD *)((char *)a1 + v6[30]) = *(_QWORD *)((char *)a2 + v6[30]);
            *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
            v111 = v6[32];
            v112 = (uint64_t)a1 + v111;
            v113 = (uint64_t)a2 + v111;
            v114 = type metadata accessor for ContentStatusBanner(0);
            v115 = _s7Weather24LocationCompositionStateOwet_0(v112, 1, v114);
            v116 = _s7Weather24LocationCompositionStateOwet_0(v113, 1, v114);
            if (v115)
            {
              if (!v116)
              {
                *(_BYTE *)v112 = *(_BYTE *)v113;
                *(_OWORD *)(v112 + 8) = *(_OWORD *)(v113 + 8);
                v117 = *(int *)(v114 + 24);
                v118 = (void *)(v112 + v117);
                v119 = (const void *)(v113 + v117);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v98))
                {
                  v120 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                  memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v99 + 32))(v118, v119, v98);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v98);
                }
                v126 = v112;
                v127 = v114;
                goto LABEL_78;
              }
              goto LABEL_72;
            }
            if (v116)
            {
              sub_1000215BC(v112, type metadata accessor for ContentStatusBanner);
LABEL_72:
              v121 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
              v122 = (void *)v112;
              v123 = (const void *)v113;
              goto LABEL_73;
            }
            *(_BYTE *)v112 = *(_BYTE *)v113;
            v124 = (_QWORD *)(v113 + 8);
            if (*(_QWORD *)(v112 + 16) >= 2uLL)
            {
              v129 = *(_QWORD *)(v113 + 16);
              if (v129 >= 2)
              {
                *(_QWORD *)(v112 + 8) = *v124;
                *(_QWORD *)(v112 + 16) = v129;
                swift_bridgeObjectRelease();
                goto LABEL_85;
              }
              sub_1001A27B4(v112 + 8);
              v125 = *(_OWORD *)(v113 + 8);
            }
            else
            {
              v125 = *(_OWORD *)v124;
            }
            *(_OWORD *)(v112 + 8) = v125;
LABEL_85:
            v130 = *(int *)(v114 + 24);
            v131 = v112 + v130;
            v132 = v113 + v130;
            v133 = _s7Weather24LocationCompositionStateOwet_0(v131, 1, v98);
            v134 = _s7Weather24LocationCompositionStateOwet_0(v132, 1, v98);
            if (v133)
            {
              if (!v134)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v131, v132, v98);
                v126 = v131;
                v127 = v98;
LABEL_78:
                _s7Weather24LocationCompositionStateOwst_0(v126, 0, 1, v127);
                goto LABEL_79;
              }
            }
            else
            {
              if (!v134)
              {
                v100((char *)v131, (char *)v132, v98);
                goto LABEL_79;
              }
              (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v131, v98);
            }
            v121 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
            v122 = (void *)v131;
            v123 = (const void *)v132;
LABEL_73:
            memcpy(v122, v123, v121);
LABEL_79:
            *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
            *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
            *(_QWORD *)((char *)a1 + v6[35]) = *(_QWORD *)((char *)a2 + v6[35]);
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v92)
          {
            if (a1 == a2)
              goto LABEL_66;
            sub_1000215BC((uint64_t)v88, type metadata accessor for SearchViewState.ViewState);
            if (!swift_getEnumCaseMultiPayload(v89))
            {
              v135 = type metadata accessor for CodableError(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v88, v89, v135);
              swift_storeEnumTagMultiPayload(v88, v90, 0);
              goto LABEL_66;
            }
            v93 = *(_QWORD *)(v90 - 8);
LABEL_60:
            memcpy(v88, v89, *(_QWORD *)(v93 + 64));
            goto LABEL_66;
          }
          sub_1000215BC((uint64_t)v88, type metadata accessor for SearchViewState.ViewState);
        }
        v93 = *(_QWORD *)(sub_1000BA294(&qword_100BD0488) - 8);
        goto LABEL_60;
      }
      sub_1000215BC((uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    }
    v30 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_21:
    memcpy(v15, v16, *(_QWORD *)(v30 + 64));
    goto LABEL_53;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = v6[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    v25 = swift_getEnumCaseMultiPayload(v11);
    if (v25 == 2)
    {
      v31 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v10, v11, v31);
      v27 = v10;
      v28 = v12;
      v29 = 2;
    }
    else if (v25 == 1)
    {
      v32 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v10, v11, v32);
      v27 = v10;
      v28 = v12;
      v29 = 1;
    }
    else
    {
      if (v25)
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_26;
      }
      v26 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v10, v11, v26);
      v27 = v10;
      v28 = v12;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
LABEL_26:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    goto LABEL_27;
  }
  v13 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_27:
  *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  v33 = v6[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  v36 = v6[14];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for SearchViewState.ViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    v40 = sub_1000BA294(&qword_100BD0488);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v38))
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v41 = type metadata accessor for CodableError(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v37, v38, v41);
      swift_storeEnumTagMultiPayload(v37, v39, 0);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
  *((_BYTE *)a1 + v6[18]) = *((_BYTE *)a2 + v6[18]);
  v42 = v6[19];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Date(0);
  v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32);
  v46(v43, v44, v45);
  *((_BYTE *)a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
  *((_BYTE *)a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
  *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
  *((_BYTE *)a1 + v6[23]) = *((_BYTE *)a2 + v6[23]);
  *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
  v46((char *)a1 + v6[25], (char *)a2 + v6[25], v45);
  *((_BYTE *)a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
  *(_QWORD *)((char *)a1 + v6[27]) = *(_QWORD *)((char *)a2 + v6[27]);
  v47 = v6[28];
  v48 = (_OWORD *)((char *)a1 + v47);
  v49 = (_OWORD *)((char *)a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  *((_BYTE *)a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
  *(_QWORD *)((char *)a1 + v6[30]) = *(_QWORD *)((char *)a2 + v6[30]);
  *((_BYTE *)a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
  v51 = v6[32];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
  {
    v55 = sub_1000BA294(&qword_100BC3620);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    *v52 = *v53;
    *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
    v56 = *(int *)(v54 + 24);
    v57 = &v52[v56];
    v58 = &v53[v56];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v45))
    {
      v59 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      v46(v57, v58, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  }
  *((_BYTE *)a1 + v6[33]) = *((_BYTE *)a2 + v6[33]);
  *((_BYTE *)a1 + v6[34]) = *((_BYTE *)a2 + v6[34]);
  *(_QWORD *)((char *)a1 + v6[35]) = *(_QWORD *)((char *)a2 + v6[35]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_1003C8888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C8894);
}

uint64_t sub_1003C8894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for ActualListInput(0);
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1003C88D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C88E4);
}

uint64_t sub_1003C88E4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for ActualListInput(0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1003C8924(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActualListInput(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1003C8954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActualListInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

_QWORD *sub_1003C898C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v95)(char *, char *, uint64_t);
  _QWORD *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
    return v7;
  }
  v7 = a1;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for CurrentLocation(0);
  swift_bridgeObjectRetain(v4);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_14;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10);
  if (EnumCaseMultiPayload == 2)
  {
    v18 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v10, v18);
    v15 = v9;
    v16 = v11;
    v17 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v19 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v10, v19);
    v15 = v9;
    v16 = v11;
    v17 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_13;
    }
    v14 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
    v15 = v9;
    v16 = v11;
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v16, v17);
LABEL_13:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_14:
  v20 = a3[6];
  v21 = a3[7];
  v22 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)v7 + v20) = v22;
  v23 = *(_QWORD *)((char *)a2 + v21);
  *(_QWORD *)((char *)v7 + v21) = v23;
  v24 = a3[9];
  *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v25 = (_QWORD *)((char *)v7 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = (char *)v7 + v28;
  v31 = (char *)a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *((_BYTE *)v7 + v29) = *((_BYTE *)a2 + v29);
  v32 = a3[12];
  v33 = a3[13];
  v34 = (_QWORD *)((char *)v7 + v32);
  v35 = (_QWORD *)((char *)a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = (_QWORD *)((char *)v7 + v33);
  v38 = (_QWORD *)((char *)a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = a3[14];
  v41 = (_QWORD *)((char *)v7 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v43 = type metadata accessor for SearchViewState.ViewState(0);
  v44 = v22;
  v45 = v43;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v39);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v45))
  {
    v47 = swift_getEnumCaseMultiPayload(v42);
    if (v47 == 1)
    {
      v52 = *v42;
      *v41 = *v42;
      swift_bridgeObjectRetain(v52);
      v49 = v41;
      v50 = v45;
      v51 = 1;
    }
    else
    {
      if (v47)
      {
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        goto LABEL_22;
      }
      v48 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v41, v42, v48);
      v49 = v41;
      v50 = v45;
      v51 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v50, v51);
LABEL_22:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v45);
    goto LABEL_23;
  }
  v46 = sub_1000BA294(&qword_100BD0488);
  memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
LABEL_23:
  v53 = a3[16];
  *((_BYTE *)v7 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)v7 + v53) = *((_BYTE *)a2 + v53);
  v54 = a3[18];
  *((_BYTE *)v7 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)v7 + v54) = *((_BYTE *)a2 + v54);
  v55 = a3[19];
  v56 = (char *)v7 + v55;
  v57 = (char *)a2 + v55;
  v58 = type metadata accessor for Date(0);
  v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
  v59(v56, v57, v58);
  v60 = a3[21];
  *((_BYTE *)v7 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)v7 + v60) = *((_BYTE *)a2 + v60);
  v61 = a3[23];
  *((_BYTE *)v7 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)v7 + v61) = *((_BYTE *)a2 + v61);
  v62 = a3[24];
  v63 = a3[25];
  v64 = (char *)v7 + v62;
  v65 = (char *)a2 + v62;
  *v64 = *v65;
  v66 = *((_QWORD *)v65 + 1);
  *((_QWORD *)v64 + 1) = v66;
  v67 = (char *)v7 + v63;
  v68 = (char *)a2 + v63;
  v69 = swift_bridgeObjectRetain(v66);
  v95 = v59;
  ((void (*)(char *, char *, uint64_t, __n128))v59)(v67, v68, v58, v69);
  v70 = a3[27];
  *((_BYTE *)v7 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v71 = *(void **)((char *)a2 + v70);
  *(_QWORD *)((char *)v7 + v70) = v71;
  v72 = a3[28];
  v73 = a3[29];
  v74 = (_QWORD *)((char *)v7 + v72);
  v75 = (_QWORD *)((char *)a2 + v72);
  v76 = v75[1];
  *v74 = *v75;
  v74[1] = v76;
  v77 = v75[2];
  v78 = v75[3];
  v74[2] = v77;
  v74[3] = v78;
  *((_BYTE *)v7 + v73) = *((_BYTE *)a2 + v73);
  v79 = a3[31];
  *(_QWORD *)((char *)v7 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  *((_BYTE *)v7 + v79) = *((_BYTE *)a2 + v79);
  v80 = a3[32];
  __dst = (_QWORD *)((char *)v7 + v80);
  v81 = (_QWORD *)((char *)a2 + v80);
  v82 = type metadata accessor for ContentStatusBanner(0);
  v83 = v71;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRetain(v78);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
  {
    v84 = sub_1000BA294(&qword_100BC3620);
    memcpy(__dst, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
  }
  else
  {
    *(_BYTE *)__dst = *(_BYTE *)v81;
    v85 = v81 + 1;
    v86 = v81[2];
    if (v86 >= 2)
    {
      __dst[1] = *v85;
      __dst[2] = v86;
      swift_bridgeObjectRetain(v86);
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v85;
    }
    v87 = *(int *)(v82 + 24);
    v88 = (char *)__dst + v87;
    v89 = (char *)v81 + v87;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v58))
    {
      v90 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      v95(v88, v89, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v58);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v82);
  }
  v91 = a3[34];
  *((_BYTE *)v7 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)v7 + v91) = *((_BYTE *)a2 + v91);
  v92 = a3[35];
  v93 = *(_QWORD *)((char *)a2 + v92);
  *(_QWORD *)((char *)v7 + v92) = v93;
  swift_bridgeObjectRetain(v93);
  return v7;
}

double sub_1003C8F1C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v18;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for CurrentLocation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)
    && swift_getEnumCaseMultiPayload(v4) <= 2)
  {
    v6 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[14];
  v8 = type metadata accessor for SearchViewState.ViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7);
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      v18 = type metadata accessor for CodableError(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v7, v18);
    }
  }
  v9 = a1 + a2[19];
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, __n128))v11)(a1 + a2[25], v10, v12);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + a2[32];
  v14 = type metadata accessor for ContentStatusBanner(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
  {
    if (*(_QWORD *)(v13 + 16) >= 2uLL)
      swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v10))
      v11(v15, v10);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1003C913C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __n128 v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v94)(char *, char *, uint64_t);
  _QWORD *__dst;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CurrentLocation(0);
  swift_bridgeObjectRetain(v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_12;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
  if (EnumCaseMultiPayload == 2)
  {
    v17 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v9, v17);
    v14 = v8;
    v15 = v10;
    v16 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v18 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
    v14 = v8;
    v15 = v10;
    v16 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_11;
    }
    v13 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    v14 = v8;
    v15 = v10;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_11:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_12:
  v19 = a3[6];
  v20 = a3[7];
  v21 = *(_QWORD *)((char *)a2 + v19);
  *(_QWORD *)((char *)a1 + v19) = v21;
  v22 = *(_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[10];
  v28 = a3[11];
  v29 = (char *)a1 + v27;
  v30 = (char *)a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
  v31 = a3[12];
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)((char *)a1 + v32);
  v37 = (_QWORD *)((char *)a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a3[14];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = type metadata accessor for SearchViewState.ViewState(0);
  v43 = v21;
  v44 = v42;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v38);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
  {
    v45 = sub_1000BA294(&qword_100BD0488);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_21;
  }
  v46 = swift_getEnumCaseMultiPayload(v41);
  if (v46 == 1)
  {
    v51 = *v41;
    *v40 = *v41;
    swift_bridgeObjectRetain(v51);
    v48 = v40;
    v49 = v44;
    v50 = 1;
  }
  else
  {
    if (v46)
    {
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      goto LABEL_20;
    }
    v47 = type metadata accessor for CodableError(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v40, v41, v47);
    v48 = v40;
    v49 = v44;
    v50 = 0;
  }
  swift_storeEnumTagMultiPayload(v48, v49, v50);
LABEL_20:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
LABEL_21:
  v52 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v52) = *((_BYTE *)a2 + v52);
  v53 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v53) = *((_BYTE *)a2 + v53);
  v54 = a3[19];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for Date(0);
  v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
  v58(v55, v56, v57);
  v59 = a3[21];
  *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)a1 + v59) = *((_BYTE *)a2 + v59);
  v60 = a3[23];
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + v60) = *((_BYTE *)a2 + v60);
  v61 = a3[24];
  v62 = a3[25];
  v63 = (char *)a1 + v61;
  v64 = (char *)a2 + v61;
  *v63 = *v64;
  v65 = *((_QWORD *)v64 + 1);
  *((_QWORD *)v63 + 1) = v65;
  v66 = (char *)a1 + v62;
  v67 = (char *)a2 + v62;
  v68 = swift_bridgeObjectRetain(v65);
  v94 = v58;
  ((void (*)(char *, char *, uint64_t, __n128))v58)(v66, v67, v57, v68);
  v69 = a3[27];
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v70 = *(void **)((char *)a2 + v69);
  *(_QWORD *)((char *)a1 + v69) = v70;
  v71 = a3[28];
  v72 = a3[29];
  v73 = (_QWORD *)((char *)a1 + v71);
  v74 = (_QWORD *)((char *)a2 + v71);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = v74[2];
  v77 = v74[3];
  v73[2] = v76;
  v73[3] = v77;
  *((_BYTE *)a1 + v72) = *((_BYTE *)a2 + v72);
  v78 = a3[31];
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  *((_BYTE *)a1 + v78) = *((_BYTE *)a2 + v78);
  v79 = a3[32];
  __dst = (_QWORD *)((char *)a1 + v79);
  v80 = (_QWORD *)((char *)a2 + v79);
  v81 = type metadata accessor for ContentStatusBanner(0);
  v82 = v70;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRetain(v77);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
  {
    v83 = sub_1000BA294(&qword_100BC3620);
    memcpy(__dst, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    *(_BYTE *)__dst = *(_BYTE *)v80;
    v84 = v80 + 1;
    v85 = v80[2];
    if (v85 >= 2)
    {
      __dst[1] = *v84;
      __dst[2] = v85;
      swift_bridgeObjectRetain(v85);
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v84;
    }
    v86 = *(int *)(v81 + 24);
    v87 = (char *)__dst + v86;
    v88 = (char *)v80 + v86;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v57))
    {
      v89 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      v94(v87, v88, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v57);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v81);
  }
  v90 = a3[34];
  *((_BYTE *)a1 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)a1 + v90) = *((_BYTE *)a2 + v90);
  v91 = a3[35];
  v92 = *(_QWORD *)((char *)a2 + v91);
  *(_QWORD *)((char *)a1 + v91) = v92;
  swift_bridgeObjectRetain(v92);
  return a1;
}

_QWORD *sub_1003C96A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  size_t v93;
  void *v94;
  const void *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  const void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CurrentLocation(0);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9);
      if (EnumCaseMultiPayload == 2)
      {
        v24 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v9, v24);
        v15 = v8;
        v16 = v10;
        v17 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v25 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v8, v9, v25);
        v15 = v8;
        v16 = v10;
        v17 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          goto LABEL_20;
        }
        v14 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        v15 = v8;
        v16 = v10;
        v17 = 0;
      }
      swift_storeEnumTagMultiPayload(v15, v16, v17);
LABEL_20:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  if (v12)
  {
    sub_1000215BC((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
LABEL_9:
    v18 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_10:
    memcpy(v8, v9, *(_QWORD *)(v18 + 64));
    goto LABEL_24;
  }
  if (a1 == a2)
    goto LABEL_24;
  sub_1000215BC((uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  v19 = swift_getEnumCaseMultiPayload(v9);
  if (v19 == 2)
  {
    v26 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v8, v9, v26);
    v21 = v8;
    v22 = v10;
    v23 = 2;
  }
  else if (v19 == 1)
  {
    v27 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v8, v9, v27);
    v21 = v8;
    v22 = v10;
    v23 = 1;
  }
  else
  {
    if (v19)
    {
      v18 = *(_QWORD *)(v10 - 8);
      goto LABEL_10;
    }
    v20 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
    v21 = v8;
    v22 = v10;
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v21, v22, v23);
LABEL_24:
  v28 = a3[6];
  v29 = *(_QWORD *)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease();
  v30 = a3[7];
  v31 = *(_QWORD *)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v32 = a3[9];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v35 = v34[1];
  v33[1] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease();
  v36 = a3[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v40 = a3[12];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  *v41 = *v42;
  v43 = v42[1];
  v41[1] = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease();
  v44 = a3[13];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  *v45 = *v46;
  v47 = v46[1];
  v45[1] = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  v51 = type metadata accessor for SearchViewState.ViewState(0);
  v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v51);
  v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      v54 = swift_getEnumCaseMultiPayload(v50);
      if (v54 == 1)
      {
        v65 = *v50;
        *v49 = *v50;
        swift_bridgeObjectRetain(v65);
        v56 = v49;
        v57 = v51;
        v58 = 1;
      }
      else
      {
        if (v54)
        {
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          goto LABEL_40;
        }
        v55 = type metadata accessor for CodableError(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v49, v50, v55);
        v56 = v49;
        v57 = v51;
        v58 = 0;
      }
      swift_storeEnumTagMultiPayload(v56, v57, v58);
LABEL_40:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
      goto LABEL_41;
    }
    goto LABEL_31;
  }
  if (v53)
  {
    sub_1000215BC((uint64_t)v49, type metadata accessor for SearchViewState.ViewState);
LABEL_31:
    v59 = *(_QWORD *)(sub_1000BA294(&qword_100BD0488) - 8);
LABEL_32:
    memcpy(v49, v50, *(_QWORD *)(v59 + 64));
    goto LABEL_41;
  }
  if (a1 == a2)
    goto LABEL_41;
  sub_1000215BC((uint64_t)v49, type metadata accessor for SearchViewState.ViewState);
  v60 = swift_getEnumCaseMultiPayload(v50);
  if (v60 == 1)
  {
    v114 = *v50;
    *v49 = *v50;
    swift_bridgeObjectRetain(v114);
    v62 = v49;
    v63 = v51;
    v64 = 1;
  }
  else
  {
    if (v60)
    {
      v59 = *(_QWORD *)(v51 - 8);
      goto LABEL_32;
    }
    v61 = type metadata accessor for CodableError(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v49, v50, v61);
    v62 = v49;
    v63 = v51;
    v64 = 0;
  }
  swift_storeEnumTagMultiPayload(v62, v63, v64);
LABEL_41:
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  v66 = a3[19];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = type metadata accessor for Date(0);
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(void (**)(char *, char *, uint64_t))(v70 + 24);
  v71(v67, v68, v69);
  *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + a3[23]) = *((_BYTE *)a2 + a3[23]);
  v72 = a3[24];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  *v73 = *v74;
  v75 = *((_QWORD *)v74 + 1);
  *((_QWORD *)v73 + 1) = v75;
  swift_bridgeObjectRetain(v75);
  v76 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v71)((char *)a1 + a3[25], (char *)a2 + a3[25], v69, v76);
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v77 = a3[27];
  v78 = *(void **)((char *)a1 + v77);
  v79 = *(void **)((char *)a2 + v77);
  *(_QWORD *)((char *)a1 + v77) = v79;
  v80 = v79;

  v81 = a3[28];
  v82 = (_QWORD *)((char *)a1 + v81);
  v83 = (char *)a2 + v81;
  *v82 = *(_QWORD *)((char *)a2 + v81);
  v84 = *(_QWORD *)((char *)a2 + v81 + 8);
  v82[1] = v84;
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRelease();
  v85 = *((_QWORD *)v83 + 2);
  v82[2] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease();
  v86 = *((_QWORD *)v83 + 3);
  v82[3] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[29]) = *((_BYTE *)a2 + a3[29]);
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  *((_BYTE *)a1 + a3[31]) = *((_BYTE *)a2 + a3[31]);
  v87 = a3[32];
  v88 = (uint64_t)a1 + v87;
  v89 = (uint64_t)a2 + v87;
  v90 = type metadata accessor for ContentStatusBanner(0);
  v91 = _s7Weather24LocationCompositionStateOwet_0(v88, 1, v90);
  v92 = _s7Weather24LocationCompositionStateOwet_0(v89, 1, v90);
  if (v91)
  {
    if (!v92)
    {
      *(_BYTE *)v88 = *(_BYTE *)v89;
      if (*(_QWORD *)(v89 + 16) >= 2uLL)
      {
        *(_QWORD *)(v88 + 8) = *(_QWORD *)(v89 + 8);
        v97 = *(_QWORD *)(v89 + 16);
        *(_QWORD *)(v88 + 16) = v97;
        swift_bridgeObjectRetain(v97);
      }
      else
      {
        *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
      }
      v98 = *(int *)(v90 + 24);
      v99 = (void *)(v88 + v98);
      v100 = (const void *)(v89 + v98);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v69))
      {
        v101 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(v99, v100, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v69);
      }
      v102 = v88;
      v103 = v90;
      goto LABEL_57;
    }
    goto LABEL_47;
  }
  if (v92)
  {
    sub_1000215BC(v88, type metadata accessor for ContentStatusBanner);
LABEL_47:
    v93 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v94 = (void *)v88;
    v95 = (const void *)v89;
    goto LABEL_48;
  }
  *(_BYTE *)v88 = *(_BYTE *)v89;
  v96 = *(_QWORD *)(v89 + 16);
  if (*(_QWORD *)(v88 + 16) >= 2uLL)
  {
    if (v96 >= 2)
    {
      *(_QWORD *)(v88 + 8) = *(_QWORD *)(v89 + 8);
      v108 = *(_QWORD *)(v89 + 16);
      *(_QWORD *)(v88 + 16) = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001A27B4(v88 + 8);
      *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
    }
  }
  else if (v96 >= 2)
  {
    *(_QWORD *)(v88 + 8) = *(_QWORD *)(v89 + 8);
    v107 = *(_QWORD *)(v89 + 16);
    *(_QWORD *)(v88 + 16) = v107;
    swift_bridgeObjectRetain(v107);
  }
  else
  {
    *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
  }
  v109 = *(int *)(v90 + 24);
  v110 = v88 + v109;
  v111 = v89 + v109;
  v112 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v69);
  v113 = _s7Weather24LocationCompositionStateOwet_0(v111, 1, v69);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v110, v111, v69);
      v102 = v110;
      v103 = v69;
LABEL_57:
      _s7Weather24LocationCompositionStateOwst_0(v102, 0, 1, v103);
      goto LABEL_58;
    }
  }
  else
  {
    if (!v113)
    {
      v71((char *)v110, (char *)v111, v69);
      goto LABEL_58;
    }
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v110, v69);
  }
  v93 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v94 = (void *)v110;
  v95 = (const void *)v111;
LABEL_48:
  memcpy(v94, v95, v93);
LABEL_58:
  *((_BYTE *)a1 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)a1 + a3[34]) = *((_BYTE *)a2 + a3[34]);
  v104 = a3[35];
  v105 = *(_QWORD *)((char *)a2 + v104);
  *(_QWORD *)((char *)a1 + v104) = v105;
  swift_bridgeObjectRetain(v105);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1003C9FD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CurrentLocation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1000BA294((uint64_t *)&unk_100C0D170);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_12;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
  if (EnumCaseMultiPayload == 2)
  {
    v16 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v7, v8, v16);
    v13 = v7;
    v14 = v9;
    v15 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v7, v8, v17);
    v13 = v7;
    v14 = v9;
    v15 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      goto LABEL_11;
    }
    v12 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = v7;
    v14 = v9;
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v14, v15);
LABEL_11:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_12:
  v18 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v20 = a3[10];
  v21 = a3[11];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  v24 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  v25 = a3[14];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  v28 = type metadata accessor for SearchViewState.ViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_1000BA294(&qword_100BD0488);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v27))
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v30 = type metadata accessor for CodableError(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v26, v27, v30);
      swift_storeEnumTagMultiPayload(v26, v28, 0);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v31 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  v32 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v32) = *((_BYTE *)a2 + v32);
  v33 = a3[19];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Date(0);
  v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
  v37(v34, v35, v36);
  v38 = a3[21];
  *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  v39 = a3[23];
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
  v40 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)((char *)a2 + a3[24]);
  v37((char *)a1 + v40, (char *)a2 + v40, v36);
  v41 = a3[27];
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  *(_QWORD *)((char *)a1 + v41) = *(_QWORD *)((char *)a2 + v41);
  v42 = a3[28];
  v43 = a3[29];
  v44 = (_OWORD *)((char *)a1 + v42);
  v45 = (_OWORD *)((char *)a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  *((_BYTE *)a1 + v43) = *((_BYTE *)a2 + v43);
  v47 = a3[31];
  *(_QWORD *)((char *)a1 + a3[30]) = *(_QWORD *)((char *)a2 + a3[30]);
  *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
  v48 = a3[32];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = type metadata accessor for ContentStatusBanner(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    v52 = sub_1000BA294(&qword_100BC3620);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    *v49 = *v50;
    *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
    v53 = *(int *)(v51 + 24);
    v54 = &v49[v53];
    v55 = &v50[v53];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v36))
    {
      v56 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v37(v54, v55, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  v57 = a3[34];
  *((_BYTE *)a1 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  *(_QWORD *)((char *)a1 + a3[35]) = *(_QWORD *)((char *)a2 + a3[35]);
  return a1;
}

_QWORD *sub_1003CA448(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  size_t v85;
  void *v86;
  const void *v87;
  _QWORD *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t v100;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CurrentLocation(0);
  v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8);
      if (EnumCaseMultiPayload == 2)
      {
        v23 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v7, v8, v23);
        v14 = v7;
        v15 = v9;
        v16 = 2;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v24 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v7, v8, v24);
        v14 = v7;
        v15 = v9;
        v16 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_20;
        }
        v13 = type metadata accessor for Location(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
        v14 = v7;
        v15 = v9;
        v16 = 0;
      }
      swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_20:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  if (v11)
  {
    sub_1000215BC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
LABEL_9:
    v17 = *(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100C0D170) - 8);
LABEL_10:
    memcpy(v7, v8, *(_QWORD *)(v17 + 64));
    goto LABEL_24;
  }
  if (a1 == a2)
    goto LABEL_24;
  sub_1000215BC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  v18 = swift_getEnumCaseMultiPayload(v8);
  if (v18 == 2)
  {
    v25 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v7, v8, v25);
    v20 = v7;
    v21 = v9;
    v22 = 2;
  }
  else if (v18 == 1)
  {
    v26 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v7, v8, v26);
    v20 = v7;
    v21 = v9;
    v22 = 1;
  }
  else
  {
    if (v18)
    {
      v17 = *(_QWORD *)(v9 - 8);
      goto LABEL_10;
    }
    v19 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
    v20 = v7;
    v21 = v9;
    v22 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v21, v22);
LABEL_24:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v27 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = a3[11];
  v34 = (char *)a1 + v32;
  v35 = (char *)a2 + v32;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
  v36 = a3[12];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[13];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[14];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = type metadata accessor for SearchViewState.ViewState(0);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (!v50)
  {
    if (!v51)
    {
      if (a1 == a2)
        goto LABEL_37;
      sub_1000215BC((uint64_t)v47, type metadata accessor for SearchViewState.ViewState);
      if (!swift_getEnumCaseMultiPayload(v48))
      {
        v100 = type metadata accessor for CodableError(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v47, v48, v100);
        swift_storeEnumTagMultiPayload(v47, v49, 0);
        goto LABEL_37;
      }
      v52 = *(_QWORD *)(v49 - 8);
LABEL_31:
      memcpy(v47, v48, *(_QWORD *)(v52 + 64));
      goto LABEL_37;
    }
    sub_1000215BC((uint64_t)v47, type metadata accessor for SearchViewState.ViewState);
LABEL_30:
    v52 = *(_QWORD *)(sub_1000BA294(&qword_100BD0488) - 8);
    goto LABEL_31;
  }
  if (v51)
    goto LABEL_30;
  if (swift_getEnumCaseMultiPayload(v48))
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v53 = type metadata accessor for CodableError(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v47, v48, v53);
    swift_storeEnumTagMultiPayload(v47, v49, 0);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
LABEL_37:
  v54 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v54) = *((_BYTE *)a2 + v54);
  v55 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  v56 = a3[19];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(void (**)(char *, char *, uint64_t))(v60 + 40);
  v61(v57, v58, v59);
  v62 = a3[21];
  *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)a1 + v62) = *((_BYTE *)a2 + v62);
  v63 = a3[23];
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + v63) = *((_BYTE *)a2 + v63);
  v64 = a3[24];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  *v65 = *v66;
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  v67 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v61)((char *)a1 + a3[25], (char *)a2 + a3[25], v59, v67);
  v68 = a3[27];
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  v69 = *(void **)((char *)a1 + v68);
  *(_QWORD *)((char *)a1 + v68) = *(_QWORD *)((char *)a2 + v68);

  v70 = a3[28];
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (char *)a2 + v70;
  v73 = *(_QWORD *)((char *)a2 + v70 + 8);
  *v71 = *(_QWORD *)((char *)a2 + v70);
  v71[1] = v73;
  swift_bridgeObjectRelease();
  v71[2] = *((_QWORD *)v72 + 2);
  swift_bridgeObjectRelease();
  v71[3] = *((_QWORD *)v72 + 3);
  swift_bridgeObjectRelease();
  v74 = a3[30];
  *((_BYTE *)a1 + a3[29]) = *((_BYTE *)a2 + a3[29]);
  *(_QWORD *)((char *)a1 + v74) = *(_QWORD *)((char *)a2 + v74);
  v75 = a3[32];
  *((_BYTE *)a1 + a3[31]) = *((_BYTE *)a2 + a3[31]);
  v76 = (uint64_t)a1 + v75;
  v77 = (uint64_t)a2 + v75;
  v78 = type metadata accessor for ContentStatusBanner(0);
  v79 = _s7Weather24LocationCompositionStateOwet_0(v76, 1, v78);
  v80 = _s7Weather24LocationCompositionStateOwet_0(v77, 1, v78);
  if (v79)
  {
    if (!v80)
    {
      *(_BYTE *)v76 = *(_BYTE *)v77;
      *(_OWORD *)(v76 + 8) = *(_OWORD *)(v77 + 8);
      v81 = *(int *)(v78 + 24);
      v82 = (void *)(v76 + v81);
      v83 = (const void *)(v77 + v81);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v59))
      {
        v84 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v82, v83, v59);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v59);
      }
      v90 = v76;
      v91 = v78;
      goto LABEL_49;
    }
    goto LABEL_43;
  }
  if (v80)
  {
    sub_1000215BC(v76, type metadata accessor for ContentStatusBanner);
LABEL_43:
    v85 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v86 = (void *)v76;
    v87 = (const void *)v77;
    goto LABEL_44;
  }
  *(_BYTE *)v76 = *(_BYTE *)v77;
  v88 = (_QWORD *)(v77 + 8);
  if (*(_QWORD *)(v76 + 16) >= 2uLL)
  {
    v94 = *(_QWORD *)(v77 + 16);
    if (v94 >= 2)
    {
      *(_QWORD *)(v76 + 8) = *v88;
      *(_QWORD *)(v76 + 16) = v94;
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    sub_1001A27B4(v76 + 8);
    v89 = *(_OWORD *)(v77 + 8);
  }
  else
  {
    v89 = *(_OWORD *)v88;
  }
  *(_OWORD *)(v76 + 8) = v89;
LABEL_55:
  v95 = *(int *)(v78 + 24);
  v96 = v76 + v95;
  v97 = v77 + v95;
  v98 = _s7Weather24LocationCompositionStateOwet_0(v96, 1, v59);
  v99 = _s7Weather24LocationCompositionStateOwet_0(v97, 1, v59);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v96, v97, v59);
      v90 = v96;
      v91 = v59;
LABEL_49:
      _s7Weather24LocationCompositionStateOwst_0(v90, 0, 1, v91);
      goto LABEL_50;
    }
  }
  else
  {
    if (!v99)
    {
      v61((char *)v96, (char *)v97, v59);
      goto LABEL_50;
    }
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v96, v59);
  }
  v85 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v86 = (void *)v96;
  v87 = (const void *)v97;
LABEL_44:
  memcpy(v86, v87, v85);
LABEL_50:
  v92 = a3[34];
  *((_BYTE *)a1 + a3[33]) = *((_BYTE *)a2 + a3[33]);
  *((_BYTE *)a1 + v92) = *((_BYTE *)a2 + v92);
  *(_QWORD *)((char *)a1 + a3[35]) = *(_QWORD *)((char *)a2 + a3[35]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003CAC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CAC34);
}

uint64_t sub_1003CAC34(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C0D170);
    sub_100088FF0();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_1000BA294(&qword_100BD0488);
      sub_100088FF0();
      if (v11)
      {
        v9 = v12;
        v10 = a3[14];
      }
      else
      {
        sub_100098778();
        sub_100088FF0();
        if (v13)
        {
          v9 = v14;
          v10 = a3[19];
        }
        else
        {
          v9 = sub_1000BA294(&qword_100BC3620);
          v10 = a3[32];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v10, a2, v9);
  }
}

_QWORD *sub_1003CAD04(_QWORD *result, uint64_t a2, int a3, int *a4)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    sub_1000BA294((uint64_t *)&unk_100C0D170);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_1000BA294(&qword_100BD0488);
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[14];
      }
      else
      {
        sub_100098778();
        sub_10009D2E8();
        if (v12)
        {
          v8 = v13;
          v9 = a4[19];
        }
        else
        {
          v8 = sub_1000BA294(&qword_100BC3620);
          v9 = a4[32];
        }
      }
    }
    return (_QWORD *)sub_1000987C4((uint64_t)v5 + v9, a2, a2, v8);
  }
  return result;
}

void sub_1003CADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned int a6, char a7, char a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;

  v9 = v8;
  v26 = a6;
  v25 = a4;
  v23 = a3;
  v14 = sub_1000BC114(a1, a2, a3, a4, a5);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.identifier.getter(v18);
  v19 = sub_100012AB4(v8 + 12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) != 0)
  {
    v20 = v9 + 7;
    v21 = v9[10];
    v22 = v9[11];
  }
  else
  {
    v20 = v9 + 2;
    v21 = v9[5];
    v22 = v9[6];
  }
  sub_1000DB418(v20, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v22 + 8))(a1, a2, v23, v25, v24, v26, a7 & 1, a8 & 1, v21, v22);
  sub_100098640();
}

void sub_1003CAECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned int a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD v22[4];
  uint64_t v23;
  unsigned int v24;

  v8 = v7;
  v24 = a6;
  v23 = a4;
  v13 = sub_1000BC114(a1, a2, a3, a4, a5);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.identifier.getter(v17);
  v18 = sub_100012AB4(v7 + 12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) != 0)
  {
    v19 = v8 + 7;
    v20 = v8[10];
    v21 = v8[11];
  }
  else
  {
    v19 = v8 + 2;
    v20 = v8[5];
    v21 = v8[6];
  }
  sub_1000DB418(v19, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v21 + 16))(a1, a2, a3, v23, v22[3], v24, a7 & 1, v20, v21);
  sub_100098640();
}

void sub_1003CAFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned int a6, char a7, char a8)
{
  sub_1003CADC8(a1, a2, a3, a4, a5 & 1, a6, a7, a8);
}

void sub_1003CAFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unsigned int a6, char a7)
{
  sub_1003CAECC(a1, a2, a3, a4, a5 & 1, a6, a7);
}

uint64_t sub_1003CB014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10004037C(v10, static OpenWeatherAirQualityIntent.title);
  sub_1000AECD4(v10, (uint64_t)static OpenWeatherAirQualityIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001009FEE70);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "The title of the 'Open Air Quality Details' intent", 50, 2);
}

uint64_t OpenWeatherAirQualityIntent.title.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC2060, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title, (uint64_t)sub_1003CB014);
}

void static OpenWeatherAirQualityIntent.title.getter(uint64_t a1@<X8>)
{
  sub_1003CC3A4(&qword_100BC2060, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title, (uint64_t)sub_1003CB014, a1);
}

void static OpenWeatherAirQualityIntent.title.setter(uint64_t a1)
{
  sub_1003CC444(a1, &qword_100BC2060, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title, (uint64_t)sub_1003CB014);
}

void static OpenWeatherAirQualityIntent.title.modify()
{
  uint64_t v0;

  if (qword_100BC2060 != -1)
    swift_once(&qword_100BC2060, sub_1003CB014);
  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_1000BAB40(v0, (uint64_t)static OpenWeatherAirQualityIntent.title);
  sub_10004A298();
}

uint64_t sub_1003CB254()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v0 = sub_1000BA294(&qword_100BC2918);
  __chkstk_darwin(v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = __chkstk_darwin(v13);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for IntentDescription(0, v14);
  sub_10004037C(v17, static OpenWeatherAirQualityIntent.description);
  sub_1000AECD4(v17, (uint64_t)static OpenWeatherAirQualityIntent.description);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x80000001009FEE00);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "The description of the 'Open Air Quality Details' intent", 56, 2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v13);
  return IntentDescription.init(_:categoryName:searchKeywords:)(v16, v2, _swiftEmptyArrayStorage);
}

uint64_t OpenWeatherAirQualityIntent.description.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC2068, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description, (uint64_t)sub_1003CB254);
}

void static OpenWeatherAirQualityIntent.description.getter(uint64_t a1@<X8>)
{
  sub_1003CC3A4(&qword_100BC2068, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description, (uint64_t)sub_1003CB254, a1);
}

void static OpenWeatherAirQualityIntent.description.setter(uint64_t a1)
{
  sub_1003CC444(a1, &qword_100BC2068, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description, (uint64_t)sub_1003CB254);
}

void static OpenWeatherAirQualityIntent.description.modify(__n128 a1)
{
  uint64_t v1;

  if (qword_100BC2068 != -1)
    swift_once(&qword_100BC2068, sub_1003CB254);
  v1 = type metadata accessor for IntentDescription(0, a1);
  sub_1000BAB40(v1, (uint64_t)static OpenWeatherAirQualityIntent.description);
  sub_10004A298();
}

void *OpenWeatherAirQualityIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenWeatherAirQualityIntent.isDiscoverable;
}

uint64_t static OpenWeatherAirQualityIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;

  sub_1000BA294(&qword_100BDE928);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100099864();
  v2 = sub_1000BA294(&qword_100BDE930);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_1003CB694();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for OpenWeatherAirQualityIntent, v7);
  v8._object = (void *)0x80000001009FECD0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_10099BF20);
  v10 = sub_1000BA294(&qword_100BDE940);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v2, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for OpenWeatherAirQualityIntent, v7);
  return IntentParameterSummary.init(_:table:_:)(v0, 0, 0, sub_1003CB718, 0, &type metadata for OpenWeatherAirQualityIntent, v7);
}

unint64_t sub_1003CB694()
{
  unint64_t result;

  result = qword_100BDE938;
  if (!qword_100BDE938)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWeatherAirQualityIntent, &type metadata for OpenWeatherAirQualityIntent);
    atomic_store(result, (unint64_t *)&qword_100BDE938);
  }
  return result;
}

void sub_1003CB6D0()
{
  IntentParameter.projectedValue.getter();
  sub_10004A298();
}

void sub_1003CB6EC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1003CB6D0();
  *a1 = v2;
}

uint64_t sub_1003CB718()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_10099C348);
  v1 = sub_1003CB694();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_1000BA294(&qword_100BCB640);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1009898A0;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain();
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for OpenWeatherAirQualityIntent, v1, v5);
  swift_release(v2);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1003CB7DC()
{
  IntentParameter.projectedValue.getter();
  sub_10004A298();
}

void sub_1003CB7F8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1003CB7DC();
  *a1 = v2;
}

uint64_t sub_1003CB820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = sub_1000BA294(&qword_100BDEA20);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_100099864();
  v3 = sub_1003CD4BC();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)(v3, &type metadata for LocationSearchEntity, &type metadata for LocationSearchEntityFromStringResolver, v3);
  v4 = sub_1003CD4F8();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)(v4, &type metadata for LocationSearchEntity, &type metadata for LocationSearchEntityFromWeatherCoreResolver, v4);
  v5 = sub_1001FD248();
  static ResolverSpecificationBuilder.buildPartialBlock<A>(first:)(v5, &type metadata for LocationSearchEntity, &type metadata for LocationSearchEntityFromStringResolver, v5, v3);
  static ResolverSpecificationBuilder.buildPartialBlock<A, each B>(accumulated:next:)(v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1003CB938()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_1000BA294(&qword_100BDEA10);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BDE948);
  sub_10004037C(v3, static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_1000AECD4(v3, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  v4 = sub_1003CB694();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 2, &type metadata for OpenWeatherAirQualityIntent, v4);
  v5._object = (void *)0x80000001009FEDD0;
  v5._countAndFlagsBits = 0xD00000000000002CLL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(&unk_10099BF20);
  v7 = sub_1000BA294(&qword_100BDE940);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v0, v7);
  swift_release(KeyPath);
  v8._countAndFlagsBits = 38;
  v8._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v8);
  v9 = swift_getKeyPath(&unk_10099C348);
  v10 = sub_1000BA294(&qword_100BDEA18);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(v9, v0, v10);
  swift_release(v9);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v11);
  return IntentURLRepresentation.init(stringInterpolation:)(v2, &type metadata for OpenWeatherAirQualityIntent, v4);
}

uint64_t OpenWeatherAirQualityIntent.urlRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_100BC2070 != -1)
    swift_once(&qword_100BC2070, sub_1003CB938);
  v0 = sub_1000BA294(&qword_100BDE948);
  return sub_1000AECD4(v0, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
}

void static OpenWeatherAirQualityIntent.urlRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  if (qword_100BC2070 != -1)
    swift_once(&qword_100BC2070, sub_1003CB938);
  v2 = sub_1000BA294(&qword_100BDE948);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_10009922C(v3, (uint64_t)v4, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_10003BCFC();
}

void static OpenWeatherAirQualityIntent.urlRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v6[24];

  if (qword_100BC2070 != -1)
    swift_once(&qword_100BC2070, sub_1003CB938);
  v2 = sub_1000BA294(&qword_100BDE948);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_1000BBC6C(v3, (uint64_t)v6);
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  v5 = swift_endAccess(v6);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v2, v5);
  sub_10003BCFC();
}

void static OpenWeatherAirQualityIntent.urlRepresentation.modify()
{
  uint64_t v0;

  if (qword_100BC2070 != -1)
    swift_once(&qword_100BC2070, sub_1003CB938);
  v0 = sub_1000BA294(&qword_100BDE948);
  sub_1000BAB40(v0, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_10004A298();
}

uint64_t OpenWeatherAirQualityIntent.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[3];
  _OWORD v70[2];
  char v71;

  v68 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  sub_100088FDC();
  v67 = v1;
  sub_1000BA294(&qword_100BC2910);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  v66 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v56 - v5;
  sub_1000BA294(&qword_100BC2918);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v8 = v7;
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  __chkstk_darwin(v9);
  sub_100098728();
  v14 = v13 - v12;
  type metadata accessor for Locale(0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  type metadata accessor for String.LocalizationValue(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100099864();
  v17 = type metadata accessor for LocalizedStringResource(0);
  v63 = v17;
  __chkstk_darwin(v17);
  sub_100098728();
  v60 = v19 - v18;
  v64 = sub_1000BA294(&qword_100BC2920);
  sub_1000DF5EC(0x61636F4Cu);
  sub_1000C5154();
  v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 104);
  v58 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v59 = v11;
  v22 = v21(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  v57 = v21;
  sub_1000DDA38(v22, v23, v24, v25, v26, (uint64_t)"The title of the 'location' parameter of intents");
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000001009F0A20);
  sub_1000C5154();
  v27 = v21(v14, v20, v11);
  v28 = v8;
  sub_1000CCC9C(v27, v29, v30, v31, v32, (uint64_t)"The description of the 'location' parameter for the 'Open Air Quality Details' intent");
  _s7Weather24LocationCompositionStateOwst_0(v8, 0, 1, v17);
  type metadata accessor for IntentDialog(0);
  memset(v70, 0, sizeof(v70));
  v71 = 0;
  v33 = v65;
  sub_1000C4470(v65);
  v34 = v66;
  sub_1000C4470(v66);
  v61 = enum case for InputConnectionBehavior.default(_:);
  v62 = *(void (**)(uint64_t))(v0 + 104);
  v35 = v67;
  v62(v67);
  sub_1000BA294(&qword_100BC2928);
  sub_10003D310(&qword_100BC2930, &qword_100BC2928, (uint64_t)&protocol conformance descriptor for ResolverSpecificationBuilder<A>.Specification<A1, Pack{repeat B1}>);
  sub_10015C43C();
  v36 = v60;
  v64 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)(v60, v28, v70, v33, v34, v35, sub_1003CB820, 0);
  v56 = sub_1000BA294(&qword_100BC2940);
  sub_1000DF5EC(0x69736F50u);
  sub_1000C5154();
  v37 = v58;
  v38 = v59;
  v39 = v57;
  v40 = v57(v14, v58, v59);
  v41 = v36;
  sub_1000DDA38(v40, v42, v43, v44, v45, (uint64_t)"The title of the 'position' parameter of intents");
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001009F0AF0);
  sub_1000C5154();
  v46 = v39(v14, v37, v38);
  sub_1000CCC9C(v46, v47, v48, v49, v50, (uint64_t)"The description of the 'position' parameter for the 'Open Air Quality Details' intent");
  _s7Weather24LocationCompositionStateOwst_0(v28, 0, 1, v63);
  v69[0] = 0;
  v51 = v65;
  sub_1000C4470(v65);
  v52 = v66;
  sub_1000C4470(v66);
  v53 = v67;
  ((void (*)(uint64_t, _QWORD, uint64_t))v62)(v67, v61, v68);
  v54 = sub_10015C6A4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v41, v28, v69, v51, v52, v53, &off_100B5A1B8, v54);
  return v64;
}

uint64_t sub_1003CC0C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = OpenWeatherAirQualityIntent.urlRepresentation.unsafeMutableAddressor();
  swift_beginAccess(v2, v5, 0, 0);
  v3 = sub_1000BA294(&qword_100BDE948);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

void sub_1003CC124(uint64_t a1@<X8>)
{
  sub_1003CCDEC(OpenWeatherAirQualityIntent.title.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1003CC148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_1003CD47C();
  *v4 = v2;
  v4[1] = sub_1003CC1AC;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_1003CC1AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + 16);
  v3 = *v1;
  result = swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  return result;
}

uint64_t sub_1003CC208@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = OpenWeatherAirQualityIntent.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003CC22C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003CB694();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1003CC254()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1000BA294(&qword_100BC2918);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10004037C(v6, static AirQualityPosition.typeDisplayRepresentation);
  sub_1000AECD4(v6, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)(0x6E6F697469736F50, 0xE800000000000000);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v5, v2);
}

uint64_t AirQualityPosition.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC2078, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation, (uint64_t)sub_1003CC254);
}

void static AirQualityPosition.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  sub_1003CC3A4(&qword_100BC2078, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation, (uint64_t)sub_1003CC254, a1);
}

void sub_1003CC3A4(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_1000AECD4(v8, a3);
  sub_10009922C(v9, (uint64_t)v10, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
  sub_10003BCFC();
}

void static AirQualityPosition.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_1003CC444(a1, &qword_100BC2078, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation, (uint64_t)sub_1003CC254);
}

void sub_1003CC444(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _BYTE v12[24];

  if (*a2 != -1)
    swift_once(a2, a5);
  v8 = a3(0);
  v9 = sub_1000AECD4(v8, a4);
  sub_1000BBC6C(v9, (uint64_t)v12);
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v9, a1, v8);
  v11 = swift_endAccess(v12);
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(a1, v8, v11);
  sub_10003BCFC();
}

void static AirQualityPosition.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_100BC2078 != -1)
    swift_once(&qword_100BC2078, sub_1003CC254);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_1000BAB40(v0, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
  sub_10004A298();
}

uint64_t sub_1003CC538()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE *v22;
  uint64_t v23;

  v0 = sub_1000BA294(&qword_100BCAE40);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BC2918);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BDE9F8);
  v11 = sub_1000BA294(&qword_100BDEA00);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 + 2 * v13, v14 | 7);
  v23 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10097DA20;
  v17 = (_BYTE *)(v16 + v15);
  *v17 = 0;
  LocalizedStringResource.init(stringLiteral:)(7368532, 0xE300000000000000);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  v18 = type metadata accessor for DisplayRepresentation.Image(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v5, v2, _swiftEmptyArrayStorage);
  v22 = &v17[v13 + *(int *)(v11 + 48)];
  v17[v13] = 1;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x80000001009FECF0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v18);
  v19 = sub_1000BA294(&qword_100BDEA08);
  v20 = swift_allocObject(v19, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 24 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7);
  *(_OWORD *)(v20 + 16) = xmmword_10099BF00;
  LocalizedStringResource.init(stringLiteral:)(910702147, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x656E657A6E6542, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(20291, 0xE200000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x4D206E6F62726143, 0xEF656469786F6E6FLL);
  LocalizedStringResource.init(stringLiteral:)(808537424, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x80000001009FED10);
  LocalizedStringResource.init(stringLiteral:)(0x352E324D50, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x80000001009FED30);
  LocalizedStringResource.init(stringLiteral:)(3360846, 0xE300000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x61696E6F6D6D41, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(1128811854, 0xE400000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000018, 0x80000001009FED50);
  LocalizedStringResource.init(stringLiteral:)(20302, 0xE200000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x80000001009FED70);
  LocalizedStringResource.init(stringLiteral:)(3297102, 0xE300000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x80000001009FED90);
  LocalizedStringResource.init(stringLiteral:)(7884622, 0xE300000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x6E65676F7274694ELL, 0xEF73656469784F20);
  LocalizedStringResource.init(stringLiteral:)(13135, 0xE200000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x656E6F7A4FLL, 0xE500000000000000);
  LocalizedStringResource.init(stringLiteral:)(3297107, 0xE300000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x44207275666C7553, 0xEE00656469786F69);
  LocalizedStringResource.init(stringLiteral:)(5460564, 0xE300000000000000);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001009FEDB0);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v9, v5, v2, v20);
  type metadata accessor for DisplayRepresentation(0);
  sub_1003CD2B0();
  result = Dictionary.init(dictionaryLiteral:)(v23);
  static AirQualityPosition.caseDisplayRepresentations = result;
  return result;
}

uint64_t *AirQualityPosition.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_100BC2080 != -1)
    swift_once(&qword_100BC2080, sub_1003CC538);
  return &static AirQualityPosition.caseDisplayRepresentations;
}

double static AirQualityPosition.caseDisplayRepresentations.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_100BC2080 != -1)
    swift_once(&qword_100BC2080, sub_1003CC538);
  sub_10009922C((uint64_t)&static AirQualityPosition.caseDisplayRepresentations, (uint64_t)v1, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static AirQualityPosition.caseDisplayRepresentations).n128_u64[0];
  return result;
}

double static AirQualityPosition.caseDisplayRepresentations.setter(uint64_t a1)
{
  double result;
  _BYTE v3[24];

  if (qword_100BC2080 != -1)
    swift_once(&qword_100BC2080, sub_1003CC538);
  sub_10009922C((uint64_t)&static AirQualityPosition.caseDisplayRepresentations, (uint64_t)v3, 1);
  static AirQualityPosition.caseDisplayRepresentations = a1;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void static AirQualityPosition.caseDisplayRepresentations.modify(uint64_t a1)
{
  if (qword_100BC2080 != -1)
    swift_once(&qword_100BC2080, sub_1003CC538);
  sub_1000BBC6C((uint64_t)&static AirQualityPosition.caseDisplayRepresentations, a1);
  sub_10004A298();
}

uint64_t AirQualityPosition.urlRepresentationParameter.getter(char a1)
{
  BOOL v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v2 = 0x736C6961746564;
  else
    v2 = 7368564;
  if (v1)
    v3 = 0xE300000000000000;
  else
    v3 = 0xE700000000000000;
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v3);
  return 0x6E6F697469736F70;
}

uint64_t AirQualityPosition.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736C6961746564;
  else
    return 7368564;
}

Weather::AirQualityPosition_optional __swiftcall AirQualityPosition.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  Weather::AirQualityPosition_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5A1E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = Weather_AirQualityPosition_details;
  else
    v4.value = Weather_AirQualityPosition_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static AirQualityPosition.allCases.getter()
{
  return &off_100B5A230;
}

void sub_1003CCD20(char *a1, unsigned __int8 *a2)
{
  sub_10068AFFC(*a1, *a2);
}

void sub_1003CCD2C()
{
  sub_1004A7664();
}

double sub_1003CCD34(uint64_t a1)
{
  char *v1;

  return sub_1001D8948(a1, *v1);
}

void sub_1003CCD3C(uint64_t a1)
{
  sub_1001D9F34(a1);
}

Weather::AirQualityPosition_optional sub_1003CCD44@<W0>(Swift::String *a1@<X0>, Weather::AirQualityPosition_optional *a2@<X8>)
{
  Weather::AirQualityPosition_optional result;

  result.value = AirQualityPosition.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_1003CCD70@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = AirQualityPosition.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003CCD98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = AirQualityPosition.urlRepresentationParameter.getter(*v0);
  return sub_1001FD508(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8), v1, v2, v3);
}

void sub_1003CCDD8(uint64_t a1@<X8>)
{
  sub_1003CCDEC(AirQualityPosition.typeDisplayRepresentation.unsafeMutableAddressor, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, a1);
}

void sub_1003CCDEC(uint64_t (*a1)(void)@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v5 = a1();
  sub_10009922C(v5, (uint64_t)v7, 0);
  v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
  sub_10003BCFC();
}

uint64_t sub_1003CCE44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10015C6A4();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

double sub_1003CCE7C()
{
  double result;
  _BYTE v1[24];

  AirQualityPosition.caseDisplayRepresentations.unsafeMutableAddressor();
  swift_beginAccess(&static AirQualityPosition.caseDisplayRepresentations, v1, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static AirQualityPosition.caseDisplayRepresentations).n128_u64[0];
  return result;
}

uint64_t sub_1003CCEC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003CD1B0();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1003CCEFC(_QWORD *a1@<X8>)
{
  *a1 = &off_100B5A230;
}

unint64_t sub_1003CCF14()
{
  unint64_t result;

  result = qword_100BDE950;
  if (!qword_100BDE950)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWeatherAirQualityIntent, &type metadata for OpenWeatherAirQualityIntent);
    atomic_store(result, (unint64_t *)&qword_100BDE950);
  }
  return result;
}

unint64_t sub_1003CCF54()
{
  unint64_t result;

  result = qword_100BDE958;
  if (!qword_100BDE958)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWeatherAirQualityIntent, &type metadata for OpenWeatherAirQualityIntent);
    atomic_store(result, (unint64_t *)&qword_100BDE958);
  }
  return result;
}

unint64_t sub_1003CCF94()
{
  unint64_t result;

  result = qword_100BDE960;
  if (!qword_100BDE960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Never, &type metadata for Never);
    atomic_store(result, (unint64_t *)&qword_100BDE960);
  }
  return result;
}

uint64_t sub_1003CCFD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static OpenWeatherAirQualityIntent.parameterSummary>>, 1);
}

unint64_t sub_1003CCFE4()
{
  unint64_t result;

  result = qword_100BDE970;
  if (!qword_100BDE970)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE970);
  }
  return result;
}

unint64_t sub_1003CD024()
{
  unint64_t result;

  result = qword_100BDE978;
  if (!qword_100BDE978)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE978);
  }
  return result;
}

unint64_t sub_1003CD064()
{
  unint64_t result;

  result = qword_100BDE980;
  if (!qword_100BDE980)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE980);
  }
  return result;
}

unint64_t sub_1003CD0A4()
{
  unint64_t result;

  result = qword_100BDE988;
  if (!qword_100BDE988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE988);
  }
  return result;
}

void *sub_1003CD0E0()
{
  return &protocol witness table for String;
}

unint64_t sub_1003CD0F0()
{
  unint64_t result;

  result = qword_100BDE998;
  if (!qword_100BDE998)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE998);
  }
  return result;
}

unint64_t sub_1003CD130()
{
  unint64_t result;

  result = qword_100BDE9A0;
  if (!qword_100BDE9A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9A0);
  }
  return result;
}

unint64_t sub_1003CD170()
{
  unint64_t result;

  result = qword_100BDE9A8;
  if (!qword_100BDE9A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9A8);
  }
  return result;
}

unint64_t sub_1003CD1B0()
{
  unint64_t result;

  result = qword_100BDE9B0;
  if (!qword_100BDE9B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9B0);
  }
  return result;
}

uint64_t sub_1003CD1EC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10015C6A4();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1003CD230()
{
  unint64_t result;

  result = qword_100BDE9B8;
  if (!qword_100BDE9B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9B8);
  }
  return result;
}

unint64_t sub_1003CD270()
{
  unint64_t result;

  result = qword_100BDE9C0;
  if (!qword_100BDE9C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9C0);
  }
  return result;
}

unint64_t sub_1003CD2B0()
{
  unint64_t result;

  result = qword_100BDE9C8;
  if (!qword_100BDE9C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AirQualityPosition, &type metadata for AirQualityPosition);
    atomic_store(result, (unint64_t *)&qword_100BDE9C8);
  }
  return result;
}

void sub_1003CD2EC()
{
  sub_10003D310(&qword_100BDE9D0, &qword_100BDE9D8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t *assignWithCopy for OpenWeatherAirQualityIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for OpenWeatherAirQualityIntent()
{
  return &type metadata for OpenWeatherAirQualityIntent;
}

uint64_t storeEnumTagSinglePayload for AirQualityPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003CD3D0 + 4 * byte_10099BF15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003CD404 + 4 * byte_10099BF10[v4]))();
}

uint64_t sub_1003CD404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD40C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003CD414);
  return result;
}

uint64_t sub_1003CD420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003CD428);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003CD42C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirQualityPosition()
{
  return &type metadata for AirQualityPosition;
}

void sub_1003CD450()
{
  sub_10003D310(&qword_100BDE9E0, &qword_100BDE9E8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_1003CD47C()
{
  unint64_t result;

  result = qword_100BDE9F0;
  if (!qword_100BDE9F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenWeatherAirQualityIntent, &type metadata for OpenWeatherAirQualityIntent);
    atomic_store(result, (unint64_t *)&qword_100BDE9F0);
  }
  return result;
}

unint64_t sub_1003CD4BC()
{
  unint64_t result;

  result = qword_100BDEA28;
  if (!qword_100BDEA28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSearchEntityFromStringResolver, &type metadata for LocationSearchEntityFromStringResolver);
    atomic_store(result, (unint64_t *)&qword_100BDEA28);
  }
  return result;
}

unint64_t sub_1003CD4F8()
{
  unint64_t result;

  result = qword_100BDEA30;
  if (!qword_100BDEA30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationSearchEntityFromWeatherCoreResolver, &type metadata for LocationSearchEntityFromWeatherCoreResolver);
    atomic_store(result, (unint64_t *)&qword_100BDEA30);
  }
  return result;
}

void sub_1003CD538(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a2;
  v63 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v60 = v4;
  sub_10009D2A4();
  __chkstk_darwin(v5);
  sub_100079F7C();
  v62 = v6;
  v64 = type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v59 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v9);
  sub_100079F7C();
  v61 = v10;
  v11 = type metadata accessor for SunriseSunsetDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v57 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v14);
  v58 = (uint64_t)&v56 - v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  type metadata accessor for ModalViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_10009883C();
  v22 = v20 - v21;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v56 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v56 - v27;
  v29 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_10009883C();
  v33 = v31 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v56 - v35;
  v37 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_100080C0C(v37, (uint64_t)v28, type metadata accessor for ModalViewState);
  if (sub_1000988D0((uint64_t)v28) != 5)
  {
    sub_1000215BC((uint64_t)v28, type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  v56 = v11;
  sub_1000C0CEC((uint64_t)v28, (uint64_t)v36);
  sub_1000C0CEC((uint64_t)v36, v33);
  if (swift_getEnumCaseMultiPayload(v33, v29) != 3)
  {
    sub_1000215BC(v33, type metadata accessor for ModalViewState.LocationDetailModal);
    v11 = v56;
LABEL_6:
    sub_100080C0C(v37, (uint64_t)v26, type metadata accessor for ModalViewState);
    v41 = sub_1000988D0((uint64_t)v26);
    v42 = v64;
    if (v41)
    {
      sub_1000215BC((uint64_t)v26, type metadata accessor for ModalViewState);
    }
    else
    {
      v43 = v11;
      v44 = v61;
      sub_1000C0CEC((uint64_t)v26, v61);
      v45 = v62;
      sub_100080C0C(v44 + *(int *)(v42 + 20), v62, type metadata accessor for LocationPreviewModalViewState);
      sub_1000215BC(v44, type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload(v45, v63) == 4)
      {
        v46 = v45;
        v47 = v58;
        sub_1000C0CEC(v46, v58);
        v48 = v47;
        v39 = v65;
        goto LABEL_19;
      }
      sub_1000215BC(v45, type metadata accessor for LocationPreviewModalViewState);
    }
    sub_100080C0C(v37, v22, type metadata accessor for ModalViewState);
    if (sub_1000988D0(v22) == 4)
    {
      v49 = type metadata accessor for ModalViewState.MapViewModal(0);
      sub_100088FC8(v22, 1, v49);
      if (!v50)
      {
        v43 = v11;
        v51 = v59;
        sub_1000C0CEC(v22, v59);
        v52 = v60;
        sub_100080C0C(v51 + *(int *)(v42 + 20), v60, type metadata accessor for LocationPreviewModalViewState);
        sub_1000215BC(v51, type metadata accessor for LocationPreviewViewState);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v52, v63);
        v39 = v65;
        if ((_DWORD)EnumCaseMultiPayload != 4)
        {
          sub_1000878B4(EnumCaseMultiPayload, type metadata accessor for LocationPreviewModalViewState);
          v40 = 1;
          goto LABEL_21;
        }
        v54 = v52;
        v55 = v57;
        sub_1000C0CEC(v54, v57);
        v48 = v55;
LABEL_19:
        sub_1000C0CEC(v48, v39);
        v40 = 0;
LABEL_21:
        v11 = v43;
        goto LABEL_22;
      }
      sub_100021A14(v22, &qword_100BC5F58);
    }
    else
    {
      sub_1000215BC(v22, type metadata accessor for ModalViewState);
    }
    v40 = 1;
    v39 = v65;
    goto LABEL_22;
  }
  sub_1000C0CEC(v33, (uint64_t)v18);
  v38 = (uint64_t)v18;
  v39 = v65;
  sub_1000C0CEC(v38, v65);
  v40 = 0;
  v11 = v56;
LABEL_22:
  _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v11);
  sub_100098640();
}

void sub_1003CD9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((static Location.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    v4 = sub_100098CAC();
    sub_1000FAF2C((uint64_t *)(a1 + *(int *)(v4 + 20)), (uint64_t *)(a2 + *(int *)(v4 + 20)));
    if ((v5 & 1) != 0)
      sub_1000FA3BC(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24));
  }
  sub_100079F70();
}

uint64_t sub_1003CDA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v5 = (int *)sub_100098CAC();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100099864();
  type metadata accessor for SunriseSunsetDetailInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  sub_1000BA294(&qword_100BDEBE8);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v16 = v13 - v12 + *(int *)(v15 + 48);
  sub_100080C0C(a1, v13 - v12, type metadata accessor for SunriseSunsetDetailInput);
  sub_100080C0C(a2, v16, type metadata accessor for SunriseSunsetDetailInput);
  sub_100088FC8(v14, 1, (uint64_t)v5);
  if (v19)
  {
    v17 = sub_100088FC8(v16, 1, (uint64_t)v5);
    if (v19)
      goto LABEL_5;
  }
  else
  {
    sub_100080C0C(v14, v10, type metadata accessor for SunriseSunsetDetailInput);
    v20 = sub_100088FC8(v16, 1, (uint64_t)v5);
    if (!v19)
    {
      sub_10007802C(v16, v2, type metadata accessor for SunriseSunsetDetailInput.Input);
      v21 = static Location.== infix(_:_:)(v10, v2);
      if ((v21 & 1) == 0
        || (sub_1000FAF2C((uint64_t *)(v10 + v5[5]), (uint64_t *)(v2 + v5[5])), (v22 & 1) == 0)
        || (sub_1000FA3BC(v10 + v5[6], v2 + v5[6]) & 1) == 0
        || *(unsigned __int8 *)(v10 + v5[7]) != *(unsigned __int8 *)(v2 + v5[7]))
      {
        sub_10009EFA8(v2);
        sub_10009EFA8(v10);
        sub_100098AD4(v23, type metadata accessor for SunriseSunsetDetailInput);
        return 0;
      }
      sub_10009EFA8(v2);
      sub_10009EFA8(v10);
LABEL_5:
      sub_100098AD4(v17, type metadata accessor for SunriseSunsetDetailInput);
      return 1;
    }
    sub_1000878B4(v20, type metadata accessor for SunriseSunsetDetailInput.Input);
  }
  sub_100021A14(v14, &qword_100BDEBE8);
  return 0;
}

void sub_1003CDC30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  _BOOL4 v61;
  _WORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  void (*v88)(char *, uint64_t, double);
  uint64_t v89;
  uint64_t v90;
  uint64_t EnumCaseMultiPayload;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  os_log_type_t v104;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  void (*v114)(char *, uint64_t, double);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v131 = a2;
  sub_1000994CC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_1000986FC();
  v126 = v5;
  sub_10009D2A4();
  __chkstk_darwin(v6);
  sub_100079F7C();
  v124 = v7;
  sub_1000C2148();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v125 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v122 = v11;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for LocationWeatherDataState(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_10009883C();
  v20 = v18 - v19;
  __chkstk_darwin(v21);
  sub_100079F7C();
  v128 = v22;
  v23 = type metadata accessor for Location(0);
  v24 = *(_QWORD *)(v23 - 8);
  v129 = v23;
  v130 = v24;
  __chkstk_darwin(v23);
  v127 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v26);
  v123 = (char *)&v118 - v27;
  sub_10009D2A4();
  __chkstk_darwin(v28);
  v121 = (char *)&v118 - v29;
  sub_10009D2A4();
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v118 - v32;
  __chkstk_darwin(v31);
  sub_100079F7C();
  v35 = v34;
  sub_1000BA294(&qword_100BCBC40);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_10009883C();
  v39 = v37 - v38;
  __chkstk_darwin(v40);
  v42 = (char *)&v118 - v41;
  v43 = type metadata accessor for SunriseSunsetDetailViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v44);
  sub_100099864();
  sub_1003CD538(a1, (uint64_t)v42);
  sub_100088FC8((uint64_t)v42, 1, v43);
  if (v57)
  {
    sub_100021A14((uint64_t)v42, &qword_100BCBC40);
    if (qword_100BC2450 != -1)
      swift_once(&qword_100BC2450, sub_1006F3844);
    v45 = sub_100098720();
    v46 = sub_1000AECD4(v45, (uint64_t)qword_100CAF0E8);
    Logger.logObject.getter(v46);
    v47 = sub_100094F54();
    v48 = sub_1000B42F4(v47);
    v49 = v131;
    if (v48)
    {
      v50 = (_WORD *)sub_100098710(2);
      *v50 = 0;
      sub_10009D290((void *)&_mh_execute_header, v51, v52, "Failed to create sunriseSunset detail input due to missing view state");
      sub_1000986F0((uint64_t)v50);
    }

    v53 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
    v54 = v49;
    v55 = 1;
    goto LABEL_8;
  }
  sub_10007802C((uint64_t)v42, v2, type metadata accessor for SunriseSunsetDetailViewState);
  sub_1003CD538(a1, v39);
  sub_100088FC8(v39, 1, v43);
  if (!v57)
  {
    v120 = v2;
    v67 = v129;
    v66 = v130;
    v119 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 16);
    v119(v33, v39, v129);
    sub_1000215BC(v39, type metadata accessor for SunriseSunsetDetailViewState);
    v68 = *(void (**)(uint64_t, char *, uint64_t))(v66 + 32);
    v69 = v33;
    v70 = v35;
    v68((uint64_t)v35, v69, v67);
    v71 = *(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain(v71);
    v73 = Location.id.getter(v72);
    sub_1000EED10(v73, v74, (uint64_t)v71);
    sub_1000986C4();
    swift_bridgeObjectRelease(v71);
    sub_100088FC8(v15, 1, v16);
    if (v75)
    {
      sub_100021A14(v15, &qword_100BC3380);
      if (qword_100BC2450 != -1)
        swift_once(&qword_100BC2450, sub_1006F3844);
      v76 = sub_100098720();
      sub_1000AECD4(v76, (uint64_t)qword_100CAF0E8);
      v77 = v127;
      v78 = sub_1000E7030();
      Logger.logObject.getter(v78);
      v79 = sub_100094F54();
      if (os_log_type_enabled((os_log_t)v71, v79))
      {
        v80 = (uint8_t *)sub_100098710(12);
        v81 = sub_100098710(32);
        v132 = v81;
        *(_DWORD *)v80 = 136315138;
        sub_1002084DC();
        v82 = dispatch thunk of CustomStringConvertible.description.getter(v67);
        v84 = sub_1000C0E20(v82, v83);
        v85 = sub_100099A3C(v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v85, v86);
        v87 = sub_1000986C4();
        v88 = *(void (**)(char *, uint64_t, double))(v130 + 8);
        v88(v77, v67, v87);
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v71, v79, "Failed to create sunriseSunset detail input due to missing weather for location=%s", v80, 0xCu);
        swift_arrayDestroy(v81, 1);
        sub_1000986F0(v81);
        sub_1000986F0((uint64_t)v80);

        v89 = ((uint64_t (*)(char *, uint64_t))v88)(v70, v67);
        sub_10009BEE8(v89, type metadata accessor for SunriseSunsetDetailViewState);
        v56 = 1;
LABEL_31:
        v49 = v131;
        goto LABEL_32;
      }

      sub_1000B48E8();
    }
    else
    {
      v71 = type metadata accessor for LocationWeatherDataState;
      v90 = v128;
      sub_1000C0CEC(v15, v128);
      sub_100080C0C(v90, v20, type metadata accessor for LocationWeatherDataState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v16);
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        sub_1000215BC(v90, type metadata accessor for LocationWeatherDataState);
        v92 = v20 + *(int *)(sub_1000BA294(&qword_100BC3358) + 64);
        v93 = v122;
        sub_10009C0AC(v20, v122);
        v94 = v124;
        sub_10007802C(v92, v124, type metadata accessor for NewsDataModel);
        sub_100098AD4(v95, type metadata accessor for PreprocessedWeatherData);
        v96 = v121;
        v68((uint64_t)v121, v70, v67);
        v97 = v125;
        sub_10009C0AC(v93, v125);
        v98 = v126;
        sub_10007802C(v94, v126, type metadata accessor for NewsDataModel);
        v99 = *(unsigned __int8 *)(v120 + *(int *)(v43 + 24));
        sub_1000215BC(v120, type metadata accessor for SunriseSunsetDetailViewState);
        LOBYTE(v94) = v99 == 2;
        v49 = v131;
        v68(v131, v96, v67);
        v100 = (int *)sub_100098CAC();
        sub_10009C0AC(v97, v49 + v100[5]);
        sub_10007802C(v98, v49 + v100[6], type metadata accessor for NewsDataModel);
        *(_BYTE *)(v49 + v100[7]) = v94;
        v54 = v49;
        v55 = 0;
        v53 = (uint64_t)v100;
LABEL_8:
        _s7Weather24LocationCompositionStateOwst_0(v54, v55, 1, v53);
        v56 = 0;
        goto LABEL_32;
      }
      sub_1000878B4(EnumCaseMultiPayload, type metadata accessor for LocationWeatherDataState);
      if (qword_100BC2450 != -1)
        swift_once(&qword_100BC2450, sub_1006F3844);
      v101 = sub_100098720();
      sub_1000AECD4(v101, (uint64_t)qword_100CAF0E8);
      v102 = v123;
      v103 = sub_1000E7030();
      Logger.logObject.getter(v103);
      v104 = sub_100094F54();
      if (os_log_type_enabled((os_log_t)type metadata accessor for LocationWeatherDataState, v104))
      {
        v105 = v67;
        v106 = (uint8_t *)sub_100098710(12);
        v107 = sub_100098710(32);
        v132 = v107;
        *(_DWORD *)v106 = 136315138;
        sub_1002084DC();
        v108 = dispatch thunk of CustomStringConvertible.description.getter(v105);
        v110 = sub_1000C0E20(v108, v109);
        v111 = sub_100099A3C(v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v111, v112);
        v113 = sub_1000986C4();
        v114 = *(void (**)(char *, uint64_t, double))(v130 + 8);
        v114(v102, v105, v113);
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)type metadata accessor for LocationWeatherDataState, v104, "Failed to create sunriseSunset detail input due to missing weather data, location=%s", v106, 0xCu);
        v56 = 1;
        swift_arrayDestroy(v107, 1);
        sub_1000986F0(v107);
        sub_1000986F0((uint64_t)v106);

        sub_1000215BC(v128, type metadata accessor for LocationWeatherDataState);
        v115 = ((uint64_t (*)(char *, uint64_t))v114)(v70, v105);
        sub_10009BEE8(v115, type metadata accessor for SunriseSunsetDetailViewState);
        goto LABEL_31;
      }

      sub_1000B48E8();
      sub_1000215BC(v90, type metadata accessor for LocationWeatherDataState);
    }
    v116 = ((uint64_t (*)(char *, uint64_t))v71)(v70, v67);
    sub_10009BEE8(v116, type metadata accessor for SunriseSunsetDetailViewState);
    v56 = 1;
    goto LABEL_31;
  }
  sub_100021A14(v39, &qword_100BCBC40);
  if (qword_100BC2450 != -1)
    swift_once(&qword_100BC2450, sub_1006F3844);
  v58 = sub_100098720();
  v59 = sub_1000AECD4(v58, (uint64_t)qword_100CAF0E8);
  Logger.logObject.getter(v59);
  v60 = sub_100094F54();
  v61 = sub_1000B42F4(v60);
  v49 = v131;
  if (v61)
  {
    v62 = (_WORD *)sub_100098710(2);
    *v62 = 0;
    sub_10009D290((void *)&_mh_execute_header, v63, v64, "Failed to create sunriseSunset detail input due to missing location");
    sub_1000986F0((uint64_t)v62);
  }

  sub_1000878B4(v65, type metadata accessor for SunriseSunsetDetailViewState);
  v56 = 1;
LABEL_32:
  v117 = type metadata accessor for SunriseSunsetDetailInput(0);
  _s7Weather24LocationCompositionStateOwst_0(v49, v56, 1, v117);
  sub_100098640();
}

uint64_t type metadata accessor for SunriseSunsetDetailInputFactory()
{
  return objc_opt_self(_TtC7Weather31SunriseSunsetDetailInputFactory);
}

uint64_t *sub_1003CE540(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    return a1;
  }
  v9 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = v7[5];
  v11 = (uint64_t *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = *(uint64_t *)((char *)a2 + v10 + 8);
  *v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = v13;
  v14 = (int *)type metadata accessor for WeatherData(0);
  v15 = v14[5];
  v16 = (char *)v11 + v15;
  v17 = &v12[v15];
  v18 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_1000BA294(&qword_100BC3340);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v20 = v14[6];
  v21 = (char *)v11 + v20;
  v22 = &v12[v20];
  v23 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = v14[7];
  v25 = (char *)v11 + v24;
  v26 = &v12[v24];
  v27 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  v30 = v14[8];
  v31 = (_QWORD *)((char *)v11 + v30);
  v32 = &v12[v30];
  v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v32);
  if (EnumCaseMultiPayload == 1)
  {
    v39 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v31, v32, v39);
    v36 = v31;
    v37 = v33;
    v38 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      goto LABEL_17;
    }
    v35 = *((_QWORD *)v32 + 1);
    *v31 = *(_QWORD *)v32;
    v31[1] = v35;
    swift_bridgeObjectRetain(v35);
    v36 = v31;
    v37 = v33;
    v38 = 0;
  }
  swift_storeEnumTagMultiPayload(v36, v37, v38);
LABEL_17:
  v40 = v14[9];
  v41 = (char *)v11 + v40;
  v42 = &v12[v40];
  v43 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    v44 = sub_1000BA294(&qword_100BC3350);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v45))
    {
      v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v45);
    }
    v47 = *(int *)(v43 + 20);
    v48 = &v41[v47];
    v49 = &v42[v47];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v45))
    {
      v50 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v48, v49, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  v51 = v7[6];
  v52 = (uint64_t *)((char *)a1 + v51);
  v53 = (uint64_t *)((char *)a2 + v51);
  v54 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v53) == 1)
  {
    v55 = *v53;
    *v52 = *v53;
    swift_bridgeObjectRetain(v55);
    v56 = v52;
    v57 = v54;
    v58 = 1;
  }
  else
  {
    v59 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v52, v53, v59);
    v56 = v52;
    v57 = v54;
    v58 = 0;
  }
  swift_storeEnumTagMultiPayload(v56, v57, v58);
  *((_BYTE *)a1 + v7[7]) = *((_BYTE *)a2 + v7[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t type metadata accessor for SunriseSunsetDetailInput.Input(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDEBA8, (uint64_t)&nominal type descriptor for SunriseSunsetDetailInput.Input);
}

void sub_1003CE9DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v2))
  {
    v3 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = a1 + *(int *)(v2 + 20);
    swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for WeatherData(0);
    v6 = v4 + v5[5];
    v7 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = v4 + v5[6];
    v9 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = v4 + v5[7];
    v11 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
    {
      v12 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
    }
    v13 = v4 + v5[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    v16 = v4 + v5[9];
    v17 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      v18 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
      v19 = v16 + *(int *)(v17 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v19, v18);
    }
    v20 = a1 + *(int *)(v2 + 24);
    type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v20) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = type metadata accessor for News(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    }
  }
}

char *sub_1003CEC48(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v7 = type metadata accessor for Location(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = v6[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)&a2[v8 + 8];
  *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
  *((_QWORD *)v9 + 1) = v11;
  v12 = (int *)type metadata accessor for WeatherData(0);
  v13 = v12[5];
  v14 = &v9[v13];
  v15 = &v10[v13];
  v16 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v11);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BC3340);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v18 = v12[6];
  v19 = &v9[v18];
  v20 = &v10[v18];
  v21 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = v12[7];
  v23 = &v9[v22];
  v24 = &v10[v22];
  v25 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    v26 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v23, v24, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  v28 = v12[8];
  v29 = &v9[v28];
  v30 = &v10[v28];
  v31 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30);
  if (EnumCaseMultiPayload == 1)
  {
    v37 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v29, v30, v37);
    v34 = v29;
    v35 = v31;
    v36 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      goto LABEL_15;
    }
    v33 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v33;
    swift_bridgeObjectRetain(v33);
    v34 = v29;
    v35 = v31;
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v34, v35, v36);
LABEL_15:
  v38 = v12[9];
  v39 = &v9[v38];
  v40 = &v10[v38];
  v41 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    v42 = sub_1000BA294(&qword_100BC3350);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v43))
    {
      v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v39, v40, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v43);
    }
    v45 = *(int *)(v41 + 20);
    v46 = &v39[v45];
    v47 = &v40[v45];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v43))
    {
      v48 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v46, v47, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v43);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  v49 = v6[6];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v51) == 1)
  {
    v53 = *(_QWORD *)v51;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    swift_bridgeObjectRetain(v53);
    v54 = v50;
    v55 = v52;
    v56 = 1;
  }
  else
  {
    v57 = type metadata accessor for News(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v50, v51, v57);
    v54 = v50;
    v55 = v52;
    v56 = 0;
  }
  swift_storeEnumTagMultiPayload(v54, v55, v56);
  a1[v6[7]] = a2[v6[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

_BYTE *sub_1003CF0AC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  size_t v104;
  void *v105;
  const void *v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  int v133;
  uint64_t v134;

  v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = v6[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      *v11 = *(_QWORD *)&a2[v10];
      v13 = *(_QWORD *)&a2[v10 + 8];
      v11[1] = v13;
      v14 = (int *)type metadata accessor for WeatherData(0);
      v15 = v14[5];
      v16 = (char *)v11 + v15;
      v17 = &v12[v15];
      v18 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v13);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_1000BA294(&qword_100BC3340);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v32 = v14[6];
      v33 = (char *)v11 + v32;
      v34 = &v12[v32];
      v35 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      v36 = v14[7];
      v37 = (char *)v11 + v36;
      v38 = &v12[v36];
      v39 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v41 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v37, v38, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      v42 = v14[8];
      v43 = (_QWORD *)((char *)v11 + v42);
      v44 = &v12[v42];
      v45 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v44);
      if (EnumCaseMultiPayload == 1)
      {
        v51 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v43, v44, v51);
        v48 = v43;
        v49 = v45;
        v50 = 1;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          goto LABEL_21;
        }
        *v43 = *(_QWORD *)v44;
        v47 = *((_QWORD *)v44 + 1);
        v43[1] = v47;
        swift_bridgeObjectRetain(v47);
        v48 = v43;
        v49 = v45;
        v50 = 0;
      }
      swift_storeEnumTagMultiPayload(v48, v49, v50);
LABEL_21:
      v52 = v14[9];
      v53 = (char *)v11 + v52;
      v54 = &v12[v52];
      v55 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
      {
        v56 = sub_1000BA294(&qword_100BC3350);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v57))
        {
          v58 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v53, v54, v57);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v57);
        }
        v82 = *(int *)(v55 + 20);
        v83 = &v53[v82];
        v84 = &v54[v82];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v57))
        {
          v85 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v83, v84, v57);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v57);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      }
      v86 = v6[6];
      v87 = (uint64_t *)&a1[v86];
      v88 = (uint64_t *)&a2[v86];
      v89 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v88) == 1)
      {
        v90 = *v88;
        *v87 = *v88;
        swift_bridgeObjectRetain(v90);
        v91 = v87;
        v92 = v89;
        v93 = 1;
      }
      else
      {
        v94 = type metadata accessor for News(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v87, v88, v94);
        v91 = v87;
        v92 = v89;
        v93 = 0;
      }
      swift_storeEnumTagMultiPayload(v91, v92, v93);
      a1[v6[7]] = a2[v6[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for SunriseSunsetDetailInput.Input);
    goto LABEL_7;
  }
  v20 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(a1, a2, v20);
  v21 = v6[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *v22 = *(_QWORD *)&a2[v21];
  v24 = *(_QWORD *)&a2[v21 + 8];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  v25 = (int *)type metadata accessor for WeatherData(0);
  v26 = v25[5];
  v27 = (char *)v22 + v26;
  v28 = &v23[v26];
  v29 = type metadata accessor for Locale(0);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v59 = *(_QWORD *)(v29 - 8);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v29);
LABEL_27:
    v60 = sub_1000BA294(&qword_100BC3340);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v27, v28, v29);
LABEL_28:
  v61 = v25[6];
  v62 = (char *)v22 + v61;
  v63 = &v23[v61];
  v64 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 24))(v62, v63, v64);
  v65 = v25[7];
  v66 = (char *)v22 + v65;
  v67 = &v23[v65];
  v68 = sub_1000BA294(&qword_100BC3348);
  v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v68);
  v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68);
  if (v69)
  {
    if (!v70)
    {
      v71 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v66, v67, v71);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v70)
  {
    sub_100021A14((uint64_t)v66, &qword_100BC3348);
LABEL_33:
    v72 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_34;
  }
  v107 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 24))(v66, v67, v107);
LABEL_34:
  if (a1 == a2)
    goto LABEL_50;
  v73 = v25[8];
  v74 = (_QWORD *)((char *)v22 + v73);
  v75 = &v23[v73];
  sub_1000215BC((uint64_t)v22 + v73, type metadata accessor for WeatherData.WeatherStatisticsState);
  v76 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  v77 = swift_getEnumCaseMultiPayload(v75);
  if (v77 == 1)
  {
    v95 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v74, v75, v95);
    v79 = v74;
    v80 = v76;
    v81 = 1;
    goto LABEL_48;
  }
  if (!v77)
  {
    *v74 = *(_QWORD *)v75;
    v78 = *((_QWORD *)v75 + 1);
    v74[1] = v78;
    swift_bridgeObjectRetain(v78);
    v79 = v74;
    v80 = v76;
    v81 = 0;
LABEL_48:
    swift_storeEnumTagMultiPayload(v79, v80, v81);
    goto LABEL_50;
  }
  memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
LABEL_50:
  v96 = v25[9];
  v97 = (char *)v22 + v96;
  v98 = &v23[v96];
  v99 = type metadata accessor for WeatherDataOverrides(0);
  v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v99);
  v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99);
  if (v100)
  {
    if (!v101)
    {
      v102 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v102))
      {
        v103 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v97, v98, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v102);
      }
      v111 = *(int *)(v99 + 20);
      v112 = &v97[v111];
      v113 = &v98[v111];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v102))
      {
        v114 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v112, v113, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v102);
      }
      v115 = (uint64_t)v97;
      v116 = v99;
      goto LABEL_68;
    }
    goto LABEL_56;
  }
  if (v101)
  {
    sub_1000215BC((uint64_t)v97, type metadata accessor for WeatherDataOverrides);
LABEL_56:
    v104 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v105 = v97;
    v106 = v98;
    goto LABEL_57;
  }
  v108 = type metadata accessor for Date(0);
  v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v108);
  v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v108);
  if (!v109)
  {
    v127 = *(_QWORD *)(v108 - 8);
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 24))(v97, v98, v108);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v97, v108);
    goto LABEL_78;
  }
  if (v110)
  {
LABEL_78:
    v128 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v97, v98, v108);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v108);
LABEL_79:
  v129 = *(int *)(v99 + 20);
  v130 = (uint64_t)&v97[v129];
  v131 = (uint64_t)&v98[v129];
  v132 = _s7Weather24LocationCompositionStateOwet_0(v130, 1, v108);
  v133 = _s7Weather24LocationCompositionStateOwet_0(v131, 1, v108);
  if (v132)
  {
    if (!v133)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v130, v131, v108);
      v115 = v130;
      v116 = v108;
LABEL_68:
      _s7Weather24LocationCompositionStateOwst_0(v115, 0, 1, v116);
      goto LABEL_69;
    }
  }
  else
  {
    v134 = *(_QWORD *)(v108 - 8);
    if (!v133)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 24))(v130, v131, v108);
      goto LABEL_69;
    }
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v130, v108);
  }
  v104 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v105 = (void *)v130;
  v106 = (const void *)v131;
LABEL_57:
  memcpy(v105, v106, v104);
LABEL_69:
  if (a1 != a2)
  {
    v117 = v6[6];
    v118 = (uint64_t *)&a1[v117];
    v119 = (uint64_t *)&a2[v117];
    sub_1000215BC((uint64_t)&a1[v117], type metadata accessor for NewsDataModel);
    v120 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v119) == 1)
    {
      v121 = *v119;
      *v118 = *v119;
      swift_bridgeObjectRetain(v121);
      v122 = v118;
      v123 = v120;
      v124 = 1;
    }
    else
    {
      v125 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v118, v119, v125);
      v122 = v118;
      v123 = v120;
      v124 = 0;
    }
    swift_storeEnumTagMultiPayload(v122, v123, v124);
  }
  a1[v6[7]] = a2[v6[7]];
  return a1;
}

char *sub_1003CFB98(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = v6[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
    v11 = (int *)type metadata accessor for WeatherData(0);
    v12 = v11[5];
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = type metadata accessor for Locale(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_1000BA294(&qword_100BC3340);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = v11[7];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = sub_1000BA294(&qword_100BC3348);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
    {
      v25 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v22, v23, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
    }
    v27 = v11[8];
    v28 = &v9[v27];
    v29 = &v10[v27];
    v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v29) == 1)
    {
      v31 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload(v28, v30, 1);
    }
    else
    {
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    v32 = v11[9];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v35 = type metadata accessor for WeatherDataOverrides(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      v36 = sub_1000BA294(&qword_100BC3350);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v37))
      {
        v38 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v33, v34, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v37);
      }
      v39 = *(int *)(v35 + 20);
      v40 = &v33[v39];
      v41 = &v34[v39];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v37))
      {
        v42 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v40, v41, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v37);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    v43 = v6[6];
    v44 = &a1[v43];
    v45 = &a2[v43];
    v46 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v45))
    {
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload(v44, v46, 0);
    }
    a1[v6[7]] = a2[v6[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

_BYTE *sub_1003CFFCC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  int v114;
  uint64_t v115;

  v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = v6[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
      v13 = (int *)type metadata accessor for WeatherData(0);
      v14 = v13[5];
      v15 = &v11[v14];
      v16 = &v12[v14];
      v17 = type metadata accessor for Locale(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC3340);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v31 = v13[6];
      v32 = &v11[v31];
      v33 = &v12[v31];
      v34 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      v35 = v13[7];
      v36 = &v11[v35];
      v37 = &v12[v35];
      v38 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        v39 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v40 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v36, v37, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      v41 = v13[8];
      v42 = &v11[v41];
      v43 = &v12[v41];
      v44 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload(v43) == 1)
      {
        v45 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v42, v43, v45);
        swift_storeEnumTagMultiPayload(v42, v44, 1);
      }
      else
      {
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      v46 = v13[9];
      v47 = &v11[v46];
      v48 = &v12[v46];
      v49 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        v50 = sub_1000BA294(&qword_100BC3350);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v51 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v51))
        {
          v52 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v47, v48, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v51);
        }
        v83 = *(int *)(v49 + 20);
        v84 = &v47[v83];
        v85 = &v48[v83];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v51))
        {
          v86 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v84, v85, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v51);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      v87 = v6[6];
      v88 = &a1[v87];
      v89 = &a2[v87];
      v90 = type metadata accessor for NewsDataModel(0);
      if (swift_getEnumCaseMultiPayload(v89))
      {
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v91 = type metadata accessor for News(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v88, v89, v91);
        swift_storeEnumTagMultiPayload(v88, v90, 0);
      }
      a1[v6[7]] = a2[v6[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_1000215BC((uint64_t)a1, type metadata accessor for SunriseSunsetDetailInput.Input);
    goto LABEL_7;
  }
  v19 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(a1, a2, v19);
  v20 = v6[5];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a2[v20 + 8];
  *v21 = *(_QWORD *)&a2[v20];
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for WeatherData(0);
  v25 = v24[5];
  v26 = (char *)v21 + v25;
  v27 = &v22[v25];
  v28 = type metadata accessor for Locale(0);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v53 = *(_QWORD *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v28);
LABEL_24:
    v54 = sub_1000BA294(&qword_100BC3340);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v26, v27, v28);
LABEL_25:
  v55 = v24[6];
  v56 = (char *)v21 + v55;
  v57 = &v22[v55];
  v58 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = v24[7];
  v60 = (char *)v21 + v59;
  v61 = &v22[v59];
  v62 = sub_1000BA294(&qword_100BC3348);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v62);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      v65 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v60, v61, v65);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v64)
  {
    sub_100021A14((uint64_t)v60, &qword_100BC3348);
LABEL_30:
    v66 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_31;
  }
  v92 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v60, v61, v92);
LABEL_31:
  if (a1 != a2)
  {
    v67 = v24[8];
    v68 = (char *)v21 + v67;
    v69 = &v22[v67];
    sub_1000215BC((uint64_t)v21 + v67, type metadata accessor for WeatherData.WeatherStatisticsState);
    v70 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v69) == 1)
    {
      v71 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v68, v69, v71);
      swift_storeEnumTagMultiPayload(v68, v70, 1);
    }
    else
    {
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
  }
  v72 = v24[9];
  v73 = (char *)v21 + v72;
  v74 = &v22[v72];
  v75 = type metadata accessor for WeatherDataOverrides(0);
  v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v75);
  v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      v78 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v78))
      {
        v79 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v73, v74, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v78);
      }
      v96 = *(int *)(v75 + 20);
      v97 = &v73[v96];
      v98 = &v74[v96];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v78))
      {
        v99 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v97, v98, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v78);
      }
      v100 = (uint64_t)v73;
      v101 = v75;
      goto LABEL_62;
    }
    goto LABEL_41;
  }
  if (v77)
  {
    sub_1000215BC((uint64_t)v73, type metadata accessor for WeatherDataOverrides);
LABEL_41:
    v80 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v81 = v73;
    v82 = v74;
    goto LABEL_42;
  }
  v93 = type metadata accessor for Date(0);
  v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v93);
  v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v93);
  if (!v94)
  {
    v108 = *(_QWORD *)(v93 - 8);
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v73, v74, v93);
      goto LABEL_72;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v73, v93);
    goto LABEL_71;
  }
  if (v95)
  {
LABEL_71:
    v109 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v73, v74, v93);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v93);
LABEL_72:
  v110 = *(int *)(v75 + 20);
  v111 = (uint64_t)&v73[v110];
  v112 = (uint64_t)&v74[v110];
  v113 = _s7Weather24LocationCompositionStateOwet_0(v111, 1, v93);
  v114 = _s7Weather24LocationCompositionStateOwet_0(v112, 1, v93);
  if (v113)
  {
    if (!v114)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v111, v112, v93);
      v100 = v111;
      v101 = v93;
LABEL_62:
      _s7Weather24LocationCompositionStateOwst_0(v100, 0, 1, v101);
      goto LABEL_63;
    }
  }
  else
  {
    v115 = *(_QWORD *)(v93 - 8);
    if (!v114)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 40))(v111, v112, v93);
      goto LABEL_63;
    }
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v111, v93);
  }
  v80 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v81 = (void *)v111;
  v82 = (const void *)v112;
LABEL_42:
  memcpy(v81, v82, v80);
LABEL_63:
  if (a1 != a2)
  {
    v102 = v6[6];
    v103 = &a1[v102];
    v104 = &a2[v102];
    sub_1000215BC((uint64_t)&a1[v102], type metadata accessor for NewsDataModel);
    v105 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v104))
    {
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v106 = type metadata accessor for News(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v103, v104, v106);
      swift_storeEnumTagMultiPayload(v103, v105, 0);
    }
  }
  a1[v6[7]] = a2[v6[7]];
  return a1;
}

uint64_t sub_1003D0A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D0A44);
}

uint64_t sub_1003D0A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100098CAC();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1003D0A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D0A90);
}

uint64_t sub_1003D0A90(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1003D0AD0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1003D0B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SunriseSunsetDetailInput(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BDEB40, (uint64_t)&nominal type descriptor for SunriseSunsetDetailInput);
}

uint64_t sub_1003D0B4C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for SunriseSunsetDetailInput.Input(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

_QWORD *sub_1003D0BA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for Location(0);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 8);
  *v9 = *(_QWORD *)((char *)a2 + v8);
  v9[1] = v11;
  v12 = (int *)type metadata accessor for WeatherData(0);
  v13 = v12[5];
  v14 = (char *)v9 + v13;
  v15 = &v10[v13];
  v16 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v11);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_1000BA294(&qword_100BC3340);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v19 = v12[6];
  v20 = (char *)v9 + v19;
  v21 = &v10[v19];
  v22 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = v12[7];
  v24 = (char *)v9 + v23;
  v25 = &v10[v23];
  v26 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    v27 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  v29 = v12[8];
  v30 = (_QWORD *)((char *)v9 + v29);
  v31 = &v10[v29];
  v32 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v31);
  if (EnumCaseMultiPayload == 1)
  {
    v38 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v30, v31, v38);
    v35 = v30;
    v36 = v32;
    v37 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      goto LABEL_15;
    }
    v34 = *((_QWORD *)v31 + 1);
    *v30 = *(_QWORD *)v31;
    v30[1] = v34;
    swift_bridgeObjectRetain(v34);
    v35 = v30;
    v36 = v32;
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(v35, v36, v37);
LABEL_15:
  v39 = v12[9];
  v40 = (char *)v9 + v39;
  v41 = &v10[v39];
  v42 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    v43 = sub_1000BA294(&qword_100BC3350);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v44 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
    {
      v45 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v40, v41, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
    }
    v46 = *(int *)(v42 + 20);
    v47 = &v40[v46];
    v48 = &v41[v46];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v44))
    {
      v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v47, v48, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v44);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  v50 = a3[6];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  v53 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v52) == 1)
  {
    v54 = *v52;
    *v51 = *v52;
    swift_bridgeObjectRetain(v54);
    v55 = v51;
    v56 = v53;
    v57 = 1;
  }
  else
  {
    v58 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v51, v52, v58);
    v55 = v51;
    v56 = v53;
    v57 = 0;
  }
  swift_storeEnumTagMultiPayload(v55, v56, v57);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

void sub_1003D0FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for WeatherData(0);
  v7 = v5 + v6[5];
  v8 = type metadata accessor for Locale(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v6[7];
  v12 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    v13 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  v14 = v5 + v6[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  v17 = v5 + v6[9];
  v18 = type metadata accessor for WeatherDataOverrides(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
  {
    v19 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
    v20 = v17 + *(int *)(v18 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v20, v19);
  }
  v21 = a1 + *(int *)(a2 + 24);
  type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v21) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = type metadata accessor for News(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  }
}

uint64_t sub_1003D1220(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = (int *)type metadata accessor for WeatherData(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = (const void *)(v9 + v12);
  v15 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_1000BA294(&qword_100BC3340);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v17 = v11[6];
  v18 = (char *)v8 + v17;
  v19 = v9 + v17;
  v20 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v11[7];
  v22 = (char *)v8 + v21;
  v23 = (const void *)(v9 + v21);
  v24 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = type metadata accessor for Date(0);
    (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v27 = v11[8];
  v28 = (_QWORD *)((char *)v8 + v27);
  v29 = (_QWORD *)(v9 + v27);
  v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v29);
  if (EnumCaseMultiPayload == 1)
  {
    v36 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v28, v29, v36);
    v33 = v28;
    v34 = v30;
    v35 = 1;
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    v32 = v29[1];
    *v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain(v32);
    v33 = v28;
    v34 = v30;
    v35 = 0;
LABEL_11:
    swift_storeEnumTagMultiPayload(v33, v34, v35);
    goto LABEL_13;
  }
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_13:
  v37 = v11[9];
  v38 = (char *)v8 + v37;
  v39 = (char *)(v9 + v37);
  v40 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_1000BA294(&qword_100BC3350);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v42 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
    {
      v43 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v38, v39, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
    }
    v44 = *(int *)(v40 + 20);
    v45 = &v38[v44];
    v46 = &v39[v44];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v42))
    {
      v47 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v45, v46, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v48 = a3[6];
  v49 = (uint64_t *)(a1 + v48);
  v50 = (uint64_t *)(a2 + v48);
  v51 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v50) == 1)
  {
    v52 = *v50;
    *v49 = *v50;
    swift_bridgeObjectRetain(v52);
    v53 = v49;
    v54 = v51;
    v55 = 1;
  }
  else
  {
    v56 = type metadata accessor for News(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v49, v50, v56);
    v53 = v49;
    v54 = v51;
    v55 = 0;
  }
  swift_storeEnumTagMultiPayload(v53, v54, v55);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003D1638(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for WeatherData(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = (const void *)(v9 + v12);
  v15 = type metadata accessor for Locale(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294(&qword_100BC3340);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  v20 = v11[6];
  v21 = (char *)v8 + v20;
  v22 = v9 + v20;
  v23 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = v11[7];
  v25 = (char *)v8 + v24;
  v26 = (const void *)(v9 + v24);
  v27 = sub_1000BA294(&qword_100BC3348);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_100021A14((uint64_t)v25, &qword_100BC3348);
LABEL_12:
    v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v53 = type metadata accessor for Date(0);
  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v25, v26, v53);
LABEL_13:
  if (a1 == a2)
    goto LABEL_20;
  v32 = v11[8];
  v33 = (_QWORD *)((char *)v8 + v32);
  v34 = (_QWORD *)(v9 + v32);
  sub_1000215BC((uint64_t)v8 + v32, type metadata accessor for WeatherData.WeatherStatisticsState);
  v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v34);
  if (EnumCaseMultiPayload == 1)
  {
    v41 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v33, v34, v41);
    v38 = v33;
    v39 = v35;
    v40 = 1;
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *v33 = *v34;
    v37 = v34[1];
    v33[1] = v37;
    swift_bridgeObjectRetain(v37);
    v38 = v33;
    v39 = v35;
    v40 = 0;
LABEL_18:
    swift_storeEnumTagMultiPayload(v38, v39, v40);
    goto LABEL_20;
  }
  memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_20:
  v42 = v11[9];
  v43 = (char *)v8 + v42;
  v44 = (char *)(v9 + v42);
  v45 = type metadata accessor for WeatherDataOverrides(0);
  v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      v48 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v48))
      {
        v49 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v43, v44, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v48);
      }
      v57 = *(int *)(v45 + 20);
      v58 = &v43[v57];
      v59 = &v44[v57];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v48))
      {
        v60 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v58, v59, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v48);
      }
      v61 = (uint64_t)v43;
      v62 = v45;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v47)
  {
    sub_1000215BC((uint64_t)v43, type metadata accessor for WeatherDataOverrides);
LABEL_26:
    v50 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v51 = v43;
    v52 = v44;
LABEL_27:
    memcpy(v51, v52, v50);
    goto LABEL_39;
  }
  v54 = type metadata accessor for Date(0);
  v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v54);
  v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v54);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v43, v44, v54);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v54);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  v73 = *(_QWORD *)(v54 - 8);
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v54);
LABEL_47:
    v74 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v43, v44, v54);
LABEL_48:
  v75 = *(int *)(v45 + 20);
  v76 = (uint64_t)&v43[v75];
  v77 = (uint64_t)&v44[v75];
  v78 = _s7Weather24LocationCompositionStateOwet_0(v76, 1, v54);
  v79 = _s7Weather24LocationCompositionStateOwet_0(v77, 1, v54);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v76, v77, v54);
      v61 = v76;
      v62 = v54;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v62);
      goto LABEL_39;
    }
    goto LABEL_53;
  }
  v80 = *(_QWORD *)(v54 - 8);
  if (v79)
  {
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v76, v54);
LABEL_53:
    v50 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v51 = (void *)v76;
    v52 = (const void *)v77;
    goto LABEL_27;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 24))(v76, v77, v54);
LABEL_39:
  if (a1 != a2)
  {
    v63 = a3[6];
    v64 = (uint64_t *)(a1 + v63);
    v65 = (uint64_t *)(a2 + v63);
    sub_1000215BC(a1 + v63, type metadata accessor for NewsDataModel);
    v66 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v65) == 1)
    {
      v67 = *v65;
      *v64 = *v65;
      swift_bridgeObjectRetain(v67);
      v68 = v64;
      v69 = v66;
      v70 = 1;
    }
    else
    {
      v71 = type metadata accessor for News(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v64, v65, v71);
      v68 = v64;
      v69 = v66;
      v70 = 0;
    }
    swift_storeEnumTagMultiPayload(v68, v69, v70);
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003D1CC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for WeatherData(0);
  v11 = v10[5];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = type metadata accessor for Locale(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294(&qword_100BC3340);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = v10[6];
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = v10[7];
  v21 = (void *)(v8 + v20);
  v22 = (const void *)(v9 + v20);
  v23 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = type metadata accessor for Date(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v26 = v10[8];
  v27 = (void *)(v8 + v26);
  v28 = (const void *)(v9 + v26);
  v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload(v28) == 1)
  {
    v30 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload(v27, v29, 1);
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  v31 = v10[9];
  v32 = (char *)(v8 + v31);
  v33 = (char *)(v9 + v31);
  v34 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294(&qword_100BC3350);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v36 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      v37 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    v38 = *(int *)(v34 + 20);
    v39 = &v32[v38];
    v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  v42 = a3[6];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  v45 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v44))
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = type metadata accessor for News(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v43, v44, v46);
    swift_storeEnumTagMultiPayload(v43, v45, 0);
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003D20B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for WeatherData(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = (const void *)(v9 + v12);
  v15 = type metadata accessor for Locale(0);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1000BA294(&qword_100BC3340);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  v20 = v11[6];
  v21 = (char *)v8 + v20;
  v22 = v9 + v20;
  v23 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = v11[7];
  v25 = (char *)v8 + v24;
  v26 = (const void *)(v9 + v24);
  v27 = sub_1000BA294(&qword_100BC3348);
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      v30 = type metadata accessor for Date(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_100021A14((uint64_t)v25, &qword_100BC3348);
LABEL_12:
    v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  v48 = type metadata accessor for Date(0);
  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    v32 = v11[8];
    v33 = (char *)v8 + v32;
    v34 = (const void *)(v9 + v32);
    sub_1000215BC((uint64_t)v8 + v32, type metadata accessor for WeatherData.WeatherStatisticsState);
    v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload(v34) == 1)
    {
      v36 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload(v33, v35, 1);
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
  }
  v37 = v11[9];
  v38 = (char *)v8 + v37;
  v39 = (char *)(v9 + v37);
  v40 = type metadata accessor for WeatherDataOverrides(0);
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      v43 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        v44 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      v52 = *(int *)(v40 + 20);
      v53 = &v38[v52];
      v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        v55 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      v56 = (uint64_t)v38;
      v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_1000215BC((uint64_t)v38, type metadata accessor for WeatherDataOverrides);
LABEL_23:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3350) - 8) + 64);
    v46 = v38;
    v47 = v39;
LABEL_24:
    memcpy(v46, v47, v45);
    goto LABEL_36;
  }
  v49 = type metadata accessor for Date(0);
  v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  v64 = *(_QWORD *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v49);
LABEL_43:
    v65 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v38, v39, v49);
LABEL_44:
  v66 = *(int *)(v40 + 20);
  v67 = (uint64_t)&v38[v66];
  v68 = (uint64_t)&v39[v66];
  v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v49);
  v70 = _s7Weather24LocationCompositionStateOwet_0(v68, 1, v49);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v67, v68, v49);
      v56 = v67;
      v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_36;
    }
    goto LABEL_49;
  }
  v71 = *(_QWORD *)(v49 - 8);
  if (v70)
  {
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v67, v49);
LABEL_49:
    v45 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v46 = (void *)v67;
    v47 = (const void *)v68;
    goto LABEL_24;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 40))(v67, v68, v49);
LABEL_36:
  if (a1 != a2)
  {
    v58 = a3[6];
    v59 = (void *)(a1 + v58);
    v60 = (const void *)(a2 + v58);
    sub_1000215BC(a1 + v58, type metadata accessor for NewsDataModel);
    v61 = type metadata accessor for NewsDataModel(0);
    if (swift_getEnumCaseMultiPayload(v60))
    {
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      v62 = type metadata accessor for News(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v59, v60, v62);
      swift_storeEnumTagMultiPayload(v59, v61, 0);
    }
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003D2700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D270C);
}

void sub_1003D270C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1000988EC();
  sub_100088FF0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_1000C2148();
    sub_100088FF0();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1000994CC();
      sub_100088FF0();
      if (!v12)
      {
        sub_100079F70();
        return;
      }
      v7 = v13;
      v11 = *(int *)(a3 + 24);
    }
    v8 = v4 + v11;
  }
  _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
}

uint64_t sub_1003D27AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D27B8);
}

void sub_1003D27B8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1000988EC();
  sub_10009D2E8();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1000C2148();
    sub_10009D2E8();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1000994CC();
      sub_10009D2E8();
      if (!v13)
      {
        *(_BYTE *)(v5 + a4[7]) = v4 + 1;
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  sub_1000987C4(v9, v4, v4, v8);
}

uint64_t sub_1003D2844(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  result = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for WeatherData(319);
    if (v4 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for NewsDataModel(319);
      if (v5 <= 0x3F)
      {
        v6[2] = *(_QWORD *)(result - 8) + 64;
        v6[3] = &unk_10099C3E0;
        swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1003D28EC(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  char *v93;
  unsigned __int8 *v94;
  uint64_t v95;
  void (*v96)(char *, unsigned __int8 *, uint64_t, __n128);
  __n128 v97;
  uint64_t v98;
  char *v99;
  unsigned __int8 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unsigned __int8 *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unsigned __int8 *v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unsigned __int8 *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unsigned __int8 *v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int EnumCaseMultiPayload;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  unsigned __int8 *v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  unsigned __int8 *v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  unsigned __int8 *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  unsigned __int8 *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  unsigned __int8 *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  unsigned __int8 *v220;
  __int128 v221;
  uint64_t v222;
  char *v223;
  unsigned __int8 *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  unsigned __int8 *v254;
  uint64_t *result;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unsigned __int8 *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *(char **)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)&v12[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 1u:
        v8 = type metadata accessor for AppConfiguration(0);
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = a1;
        v10 = a3;
        v11 = 1;
        goto LABEL_192;
      case 2u:
        v49 = type metadata accessor for EnvironmentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 2u:
            v50 = type metadata accessor for Locale(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
            v51 = a1;
            v52 = v49;
            v53 = 2;
            goto LABEL_190;
          case 3u:
            v161 = type metadata accessor for ActivityAction(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation(0);
              v207 = (char *)&loc_1003D3D34 + 4 * word_10099C4F0[swift_getEnumCaseMultiPayload(a2)];
              __asm { BR              X10 }
            }
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
            }
            else
            {
              v163 = type metadata accessor for SavedLocation(0);
              if (swift_getEnumCaseMultiPayload(a2) == 1)
              {
                v164 = type metadata accessor for SavedLocation.Placeholder(0);
                v165 = 1;
              }
              else
              {
                v164 = type metadata accessor for Location(0);
                v165 = 0;
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(_QWORD *)(v164 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload(a1, v163, v165);
              swift_storeEnumTagMultiPayload(a1, v161, 0);
            }
            v51 = a1;
            v52 = v49;
            v53 = 3;
            goto LABEL_190;
          case 4u:
            v144 = *((_QWORD *)a2 + 1);
            *a1 = *(_QWORD *)a2;
            a1[1] = v144;
            swift_bridgeObjectRetain(v144);
            v51 = a1;
            v52 = v49;
            v53 = 4;
            goto LABEL_190;
          case 8u:
            v166 = *((_QWORD *)a2 + 1);
            if (v166 >= 2)
            {
              *a1 = *(_QWORD *)a2;
              a1[1] = v166;
              swift_bridgeObjectRetain(v166);
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            v51 = a1;
            v52 = v49;
            v53 = 8;
            goto LABEL_190;
          case 0xAu:
            v167 = type metadata accessor for ConfiguredUnitsAction(0);
            v168 = swift_getEnumCaseMultiPayload(a2);
            if (v168 == 1)
            {
              v208 = type metadata accessor for UnitConfiguration.Temperature(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v208))
              {
                v209 = sub_1000BA294(&qword_100BD7148);
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(a1, a2, v208);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v208);
              }
              v170 = a1;
              v171 = v167;
              v172 = 1;
            }
            else
            {
              if (v168)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
                goto LABEL_182;
              }
              v169 = type metadata accessor for ConfiguredUnit(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(a1, a2, v169);
              v170 = a1;
              v171 = v167;
              v172 = 0;
            }
            swift_storeEnumTagMultiPayload(v170, v171, v172);
LABEL_182:
            v51 = a1;
            v52 = v49;
            v53 = 10;
LABEL_190:
            swift_storeEnumTagMultiPayload(v51, v52, v53);
LABEL_191:
            v9 = a1;
            v10 = a3;
            v11 = 2;
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
            goto LABEL_191;
        }
        goto LABEL_192;
      case 3u:
        v13 = type metadata accessor for LocationsAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v14 = type metadata accessor for CurrentLocation(0);
            v15 = swift_getEnumCaseMultiPayload(a2);
            if (v15 == 2)
            {
              v227 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v227 - 8) + 16))(a1, a2, v227);
              v17 = a1;
              v18 = v14;
              v19 = 2;
            }
            else if (v15 == 1)
            {
              v228 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v228 - 8) + 16))(a1, a2, v228);
              v17 = a1;
              v18 = v14;
              v19 = 1;
            }
            else
            {
              if (v15)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
                goto LABEL_154;
              }
              v16 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
              v17 = a1;
              v18 = v14;
              v19 = 0;
            }
            swift_storeEnumTagMultiPayload(v17, v18, v19);
LABEL_154:
            v128 = a1;
            v129 = v13;
            v130 = 0;
            goto LABEL_155;
          case 1u:
            v126 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(a1, a2, v126);
            v127 = sub_1000BA294(&qword_100BDEBF8);
            *((_BYTE *)a1 + *(int *)(v127 + 48)) = a2[*(int *)(v127 + 48)];
            v128 = a1;
            v129 = v13;
            v130 = 1;
            goto LABEL_155;
          case 2u:
            v131 = *(_QWORD *)a2;
            v132 = *((_QWORD *)a2 + 1);
            *a1 = v131;
            a1[1] = v132;
            swift_bridgeObjectRetain(v131);
            swift_bridgeObjectRetain(v132);
            v128 = a1;
            v129 = v13;
            v130 = 2;
            goto LABEL_155;
          case 5u:
            v145 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v145);
            v128 = a1;
            v129 = v13;
            v130 = 5;
            goto LABEL_155;
          case 6u:
            v146 = *(_QWORD *)a2;
            v147 = *((_QWORD *)a2 + 1);
            v148 = a2[16];
            sub_100163980(v146, v147, v148);
            *a1 = v146;
            a1[1] = v147;
            *((_BYTE *)a1 + 16) = v148;
            v128 = a1;
            v129 = v13;
            v130 = 6;
LABEL_155:
            swift_storeEnumTagMultiPayload(v128, v129, v130);
            goto LABEL_156;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_156:
            v9 = a1;
            v10 = a3;
            v11 = 3;
            goto LABEL_192;
        }
      case 4u:
        v54 = type metadata accessor for NotificationsAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 1u:
            v55 = type metadata accessor for LocationModel(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v55))
            {
              v56 = type metadata accessor for NotificationLocation(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v55);
            }
            v201 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
            v202 = (char *)a1 + v201;
            v203 = &a2[v201];
            v204 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
            {
              v205 = sub_1000BA294(&qword_100BD4280);
              memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v202, v203, v204);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
            }
            v178 = a1;
            v179 = v54;
            v180 = 1;
            goto LABEL_128;
          case 2u:
            v173 = type metadata accessor for NotificationSubscription.Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(a1, a2, v173);
            v174 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
            v175 = (char *)a1 + v174;
            v176 = &a2[v174];
            v177 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v175, v176, v177);
            v178 = a1;
            v179 = v54;
            v180 = 2;
            goto LABEL_128;
          case 3u:
            v181 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v181);
            v178 = a1;
            v179 = v54;
            v180 = 3;
            goto LABEL_128;
          case 4u:
            v182 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v182);
            v178 = a1;
            v179 = v54;
            v180 = 4;
            goto LABEL_128;
          case 5u:
            v183 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
            v184 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
            v185 = (char *)a1 + v184;
            v186 = &a2[v184];
            v187 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v186, v187);
            v178 = a1;
            v179 = v54;
            v180 = 5;
LABEL_128:
            swift_storeEnumTagMultiPayload(v178, v179, v180);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            break;
        }
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_192;
      case 5u:
        v57 = type metadata accessor for NotificationsOptInAction(0);
        v58 = swift_getEnumCaseMultiPayload(a2);
        switch(v58)
        {
          case 4:
            v102 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
            v61 = a1;
            v62 = v57;
            v63 = 4;
            goto LABEL_67;
          case 3:
            v103 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            *((_BYTE *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain(v103);
            v61 = a1;
            v62 = v57;
            v63 = 3;
            goto LABEL_67;
          case 2:
            v59 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
            v60 = sub_1000BA294(&qword_100BCB648);
            *((_BYTE *)a1 + *(int *)(v60 + 48)) = a2[*(int *)(v60 + 48)];
            v61 = a1;
            v62 = v57;
            v63 = 2;
LABEL_67:
            swift_storeEnumTagMultiPayload(v61, v62, v63);
            goto LABEL_69;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
LABEL_69:
        v9 = a1;
        v10 = a3;
        v11 = 5;
        goto LABEL_192;
      case 6u:
        v20 = type metadata accessor for ViewAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v21 = type metadata accessor for ListViewAction(0);
            v22 = swift_getEnumCaseMultiPayload(a2);
            if (v22 == 2)
            {
              v206 = type metadata accessor for Location.Identifier(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(a1, a2, v206);
              v25 = a1;
              v26 = v21;
              v27 = 2;
            }
            else
            {
              if (v22)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
                goto LABEL_133;
              }
              v23 = type metadata accessor for LocationModel(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
              v24 = sub_1000BA294(&qword_100BDDB50);
              *((_BYTE *)a1 + *(int *)(v24 + 48)) = a2[*(int *)(v24 + 48)];
              v25 = a1;
              v26 = v21;
              v27 = 0;
            }
            swift_storeEnumTagMultiPayload(v25, v26, v27);
LABEL_133:
            v158 = a1;
            v159 = v20;
            v160 = 0;
            goto LABEL_187;
          case 1u:
            v133 = type metadata accessor for LocationViewerViewAction(0);
            v134 = swift_getEnumCaseMultiPayload(a2);
            switch(v134)
            {
              case 2:
                v229 = type metadata accessor for Location.Identifier(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(a1, a2, v229);
                v136 = a1;
                v137 = v133;
                v138 = 2;
                goto LABEL_159;
              case 1:
                v230 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(a1, a2, v230);
                v136 = a1;
                v137 = v133;
                v138 = 1;
                goto LABEL_159;
              case 0:
                v135 = type metadata accessor for LocationModel(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(a1, a2, v135);
                v136 = a1;
                v137 = v133;
                v138 = 0;
LABEL_159:
                swift_storeEnumTagMultiPayload(v136, v137, v138);
                goto LABEL_161;
            }
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
LABEL_161:
            v158 = a1;
            v159 = v20;
            v160 = 1;
LABEL_187:
            swift_storeEnumTagMultiPayload(v158, v159, v160);
LABEL_188:
            v9 = a1;
            v10 = a3;
            v11 = 6;
            break;
          case 3u:
            v139 = type metadata accessor for SearchViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v140 = type metadata accessor for CodableError(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(a1, a2, v140);
                v141 = a1;
                v142 = v139;
                v143 = 0;
                goto LABEL_185;
              case 1u:
                v235 = *(_QWORD *)a2;
                *a1 = *(_QWORD *)a2;
                swift_bridgeObjectRetain(v235);
                v141 = a1;
                v142 = v139;
                v143 = 1;
                goto LABEL_185;
              case 2u:
                v236 = *((_QWORD *)a2 + 1);
                *a1 = *(_QWORD *)a2;
                a1[1] = v236;
                swift_bridgeObjectRetain(v236);
                v141 = a1;
                v142 = v139;
                v143 = 2;
                goto LABEL_185;
              case 3u:
                v237 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(a1, a2, v237);
                v141 = a1;
                v142 = v139;
                v143 = 3;
                goto LABEL_185;
              case 4u:
                v238 = type metadata accessor for LocationOfInterest(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(a1, a2, v238);
                v141 = a1;
                v142 = v139;
                v143 = 4;
                goto LABEL_185;
              case 5u:
                v240 = *(void **)a2;
                v239 = *((_QWORD *)a2 + 1);
                *a1 = *(_QWORD *)a2;
                a1[1] = v239;
                v242 = *((_QWORD *)a2 + 2);
                v241 = *((_QWORD *)a2 + 3);
                a1[2] = v242;
                a1[3] = v241;
                v244 = *((_QWORD *)a2 + 4);
                v243 = *((_QWORD *)a2 + 5);
                a1[4] = v244;
                a1[5] = v243;
                v245 = *((_QWORD *)a2 + 6);
                a1[6] = v245;
                v246 = type metadata accessor for SearchLocation(0);
                v247 = *(int *)(v246 + 32);
                v261 = (char *)a1 + v247;
                v263 = v246;
                v259 = &a2[v247];
                v248 = type metadata accessor for Location(0);
                v249 = v240;
                swift_bridgeObjectRetain(v242);
                swift_bridgeObjectRetain(v244);
                swift_bridgeObjectRetain(v245);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v259, 1, v248))
                {
                  v250 = sub_1000BA294(&qword_100BC35F8);
                  memcpy(v261, v259, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(v261, v259, v248);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v248);
                }
                v252 = *(int *)(v263 + 36);
                v253 = (char *)a1 + v252;
                v254 = &a2[v252];
                *(_OWORD *)v253 = *(_OWORD *)v254;
                v253[16] = v254[16];
                v141 = a1;
                v142 = v139;
                v143 = 5;
                goto LABEL_185;
              case 6u:
                v251 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(a1, a2, v251);
                v141 = a1;
                v142 = v139;
                v143 = 6;
LABEL_185:
                swift_storeEnumTagMultiPayload(v141, v142, v143);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
                break;
            }
            v158 = a1;
            v159 = v20;
            v160 = 3;
            goto LABEL_187;
          case 4u:
            v149 = type metadata accessor for InteractiveMapViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v150 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(a1, a2, v150);
                v151 = a1;
                v152 = v149;
                v153 = 0;
                goto LABEL_167;
              case 1u:
                v231 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(a1, a2, v231);
                v151 = a1;
                v152 = v149;
                v153 = 1;
                goto LABEL_167;
              case 2u:
                v232 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(a1, a2, v232);
                v151 = a1;
                v152 = v149;
                v153 = 2;
                goto LABEL_167;
              case 3u:
                v233 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(a1, a2, v233);
                v151 = a1;
                v152 = v149;
                v153 = 3;
                goto LABEL_167;
              case 4u:
                v234 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(a1, a2, v234);
                v151 = a1;
                v152 = v149;
                v153 = 4;
LABEL_167:
                swift_storeEnumTagMultiPayload(v151, v152, v153);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
                break;
            }
            v158 = a1;
            v159 = v20;
            v160 = 4;
            goto LABEL_187;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_BYTE *)a1 + 16) = a2[16];
            *((_BYTE *)a1 + 17) = a2[17];
            *((_BYTE *)a1 + 18) = a2[18];
            v154 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
            v155 = (char *)a1 + v154;
            v156 = &a2[v154];
            v157 = type metadata accessor for DynamicTypeSize(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
            v158 = a1;
            v159 = v20;
            v160 = 5;
            goto LABEL_187;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            goto LABEL_188;
        }
        goto LABEL_192;
      case 7u:
        v64 = type metadata accessor for ModalViewAction(0);
        v65 = swift_getEnumCaseMultiPayload(a2);
        if (v65 == 3)
        {
          v85 = *(_QWORD *)a2;
          if ((~*(_QWORD *)a2 & 0xF000000000000006) != 0)
          {
            v191 = *((_QWORD *)a2 + 1);
            v192 = *((_QWORD *)a2 + 2);
            v193 = *((_QWORD *)a2 + 3);
            v194 = *((_QWORD *)a2 + 4);
            v195 = *((_QWORD *)a2 + 7);
            v256 = *((_QWORD *)a2 + 5);
            v257 = *((_QWORD *)a2 + 8);
            v258 = *((_QWORD *)a2 + 9);
            v260 = *((_QWORD *)a2 + 10);
            v262 = *((_QWORD *)a2 + 11);
            v196 = *((_QWORD *)a2 + 6);
            sub_10019D33C(v85, v191, v192, v193, v194, v256, v196, v195, v257, v258, v260, v262);
            *a1 = v85;
            a1[1] = v191;
            a1[2] = v192;
            a1[3] = v193;
            a1[4] = v194;
            a1[5] = v256;
            a1[6] = v196;
            a1[7] = v195;
            a1[8] = v257;
            a1[9] = v258;
            a1[10] = v260;
            a1[11] = v262;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
          v188 = a1;
          v189 = v64;
          v190 = 3;
        }
        else
        {
          if (v65)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
            goto LABEL_116;
          }
          v66 = type metadata accessor for LocationPreviewViewAction(0);
          if (swift_getEnumCaseMultiPayload(a2) == 1)
          {
            v67 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(a1, a2, v67);
            swift_storeEnumTagMultiPayload(a1, v66, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          v188 = a1;
          v189 = v64;
          v190 = 0;
        }
        swift_storeEnumTagMultiPayload(v188, v189, v190);
LABEL_116:
        v9 = a1;
        v10 = a3;
        v11 = 7;
        goto LABEL_192;
      case 8u:
        v68 = type metadata accessor for LocationViewAction(0);
        v69 = swift_getEnumCaseMultiPayload(a2);
        if (v69 == 2)
        {
          v104 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(a1, a2, v104);
          v105 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
          v106 = (char *)a1 + v105;
          v107 = &a2[v105];
          v108 = type metadata accessor for LocationOfInterest(0);
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
          v109 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
          v110 = (char *)a1 + v109;
          v111 = &a2[v109];
          v112 = *((_OWORD *)v111 + 1);
          *(_OWORD *)v110 = *(_OWORD *)v111;
          *((_OWORD *)v110 + 1) = v112;
          v110[32] = v111[32];
          v71 = a1;
          v72 = v68;
          v73 = 2;
        }
        else if (v69 == 1)
        {
          v113 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload(a2))
          {
            case 0u:
              v114 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(a1, a2, v114);
              v115 = sub_1000BA294(&qword_100BC5FE8);
              *((_BYTE *)a1 + *(int *)(v115 + 48)) = a2[*(int *)(v115 + 48)];
              v116 = a1;
              v117 = v113;
              v118 = 0;
              goto LABEL_143;
            case 1u:
              v210 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(a1, a2, v210);
              v116 = a1;
              v117 = v113;
              v118 = 1;
              goto LABEL_143;
            case 2u:
              v211 = type metadata accessor for DetailCondition(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(a1, a2, v211);
              v212 = sub_1000BA294(&qword_100BC5FF8);
              *((_BYTE *)a1 + *(int *)(v212 + 48)) = a2[*(int *)(v212 + 48)];
              v116 = a1;
              v117 = v113;
              v118 = 2;
              goto LABEL_143;
            case 4u:
              *(_BYTE *)a1 = *a2;
              v213 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
              v214 = (char *)a1 + v213;
              v215 = &a2[v213];
              v216 = type metadata accessor for Location(0);
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v214, v215, v216);
              v116 = a1;
              v117 = v113;
              v118 = 4;
LABEL_143:
              swift_storeEnumTagMultiPayload(v116, v117, v118);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
              break;
          }
          v217 = sub_1000BA294(&qword_100BC5FC8);
          v218 = *(int *)(v217 + 48);
          v219 = (char *)a1 + v218;
          v220 = &a2[v218];
          v221 = *((_OWORD *)v220 + 1);
          *(_OWORD *)v219 = *(_OWORD *)v220;
          *((_OWORD *)v219 + 1) = v221;
          v219[32] = v220[32];
          v222 = *(int *)(v217 + 64);
          v223 = (char *)a1 + v222;
          v224 = &a2[v222];
          v225 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
          {
            v226 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v223, v224, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
          }
          v71 = a1;
          v72 = v68;
          v73 = 1;
        }
        else
        {
          if (v69)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            goto LABEL_149;
          }
          v70 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(a1, a2, v70);
          v71 = a1;
          v72 = v68;
          v73 = 0;
        }
        swift_storeEnumTagMultiPayload(v71, v72, v73);
LABEL_149:
        v9 = a1;
        v10 = a3;
        v11 = 8;
        goto LABEL_192;
      case 9u:
        type metadata accessor for WeatherDataAction(0);
        v74 = (char *)&loc_1003D2ED4 + 4 * word_10099C484[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      case 0xAu:
        v75 = type metadata accessor for DebugAction(0);
        v76 = swift_getEnumCaseMultiPayload(a2);
        if (v76 == 1)
        {
          v86 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(a1, a2, v86);
          v87 = a1;
          v88 = v75;
          v89 = 1;
        }
        else
        {
          if (v76)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            goto LABEL_120;
          }
          v77 = type metadata accessor for WeatherCondition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v77))
          {
            v78 = sub_1000BA294(&qword_100BC3660);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(a1, a2, v77);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v77);
          }
          v197 = *(int *)(sub_1000BA294(&qword_100BD0A98) + 48);
          v198 = (uint64_t *)((char *)a1 + v197);
          v199 = &a2[v197];
          v200 = *((_QWORD *)v199 + 1);
          *v198 = *(_QWORD *)v199;
          v198[1] = v200;
          swift_bridgeObjectRetain(v200);
          v87 = a1;
          v88 = v75;
          v89 = 0;
        }
        swift_storeEnumTagMultiPayload(v87, v88, v89);
LABEL_120:
        v9 = a1;
        v10 = a3;
        v11 = 10;
        goto LABEL_192;
      case 0xBu:
        v28 = type metadata accessor for ConditionDetailViewAction(0);
        v29 = swift_getEnumCaseMultiPayload(a2);
        switch(v29)
        {
          case 2:
            v90 = *((_QWORD *)a2 + 1);
            *a1 = *(_QWORD *)a2;
            a1[1] = v90;
            v91 = (int *)type metadata accessor for DetailChartSelection(0);
            v92 = v91[5];
            v93 = (char *)a1 + v92;
            v94 = &a2[v92];
            v95 = type metadata accessor for Date(0);
            v96 = *(void (**)(char *, unsigned __int8 *, uint64_t, __n128))(*(_QWORD *)(v95 - 8) + 16);
            v97 = swift_bridgeObjectRetain(v90);
            v96(v93, v94, v95, v97);
            ((void (*)(char *, unsigned __int8 *, uint64_t))v96)((char *)a1 + v91[6], &a2[v91[6]], v95);
            ((void (*)(char *, unsigned __int8 *, uint64_t))v96)((char *)a1 + v91[7], &a2[v91[7]], v95);
            *(uint64_t *)((char *)a1 + v91[8]) = *(_QWORD *)&a2[v91[8]];
            v98 = v91[9];
            v99 = (char *)a1 + v98;
            v100 = &a2[v98];
            v99[8] = v100[8];
            *(_QWORD *)v99 = *(_QWORD *)v100;
            v31 = a1;
            v32 = v28;
            v33 = 2;
            goto LABEL_62;
          case 1:
            v101 = type metadata accessor for DetailCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(a1, a2, v101);
            v31 = a1;
            v32 = v28;
            v33 = 1;
            goto LABEL_62;
          case 0:
            v30 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
            v31 = a1;
            v32 = v28;
            v33 = 0;
LABEL_62:
            swift_storeEnumTagMultiPayload(v31, v32, v33);
            goto LABEL_64;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_64:
        v9 = a1;
        v10 = a3;
        v11 = 11;
        goto LABEL_192;
      case 0xDu:
        v34 = type metadata accessor for MoonDetailViewAction(0);
        v35 = swift_getEnumCaseMultiPayload(a2);
        if (v35 == 1)
        {
          v84 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(a1, a2, v84);
          v39 = a1;
          v40 = v34;
          v41 = 1;
          goto LABEL_52;
        }
        if (!v35)
        {
          v36 = type metadata accessor for MoonDetailSelectedDate(0);
          v37 = swift_getEnumCaseMultiPayload(a2);
          v38 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          swift_storeEnumTagMultiPayload(a1, v36, v37);
          v39 = a1;
          v40 = v34;
          v41 = 0;
LABEL_52:
          swift_storeEnumTagMultiPayload(v39, v40, v41);
          goto LABEL_54;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
LABEL_54:
        v9 = a1;
        v10 = a3;
        v11 = 13;
LABEL_192:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      case 0xEu:
        v42 = type metadata accessor for AveragesDetailViewAction(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          *a1 = *(_QWORD *)a2;
          v43 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          v44 = v43[5];
          v45 = (char *)a1 + v44;
          v46 = &a2[v44];
          v47 = type metadata accessor for Date(0);
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
          *(uint64_t *)((char *)a1 + v43[6]) = *(_QWORD *)&a2[v43[6]];
          *(uint64_t *)((char *)a1 + v43[7]) = *(_QWORD *)&a2[v43[7]];
          swift_storeEnumTagMultiPayload(a1, v42, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        v9 = a1;
        v10 = a3;
        v11 = 14;
        goto LABEL_192;
      case 0x10u:
        v48 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v48;
        swift_bridgeObjectRetain(v48);
        v9 = a1;
        v10 = a3;
        v11 = 16;
        goto LABEL_192;
      case 0x11u:
        v79 = type metadata accessor for PerformanceTestAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v80 = type metadata accessor for DetailCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(a1, a2, v80);
            v81 = a1;
            v82 = v79;
            v83 = 0;
            goto LABEL_78;
          case 2u:
            v119 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(a1, a2, v119);
            v81 = a1;
            v82 = v79;
            v83 = 2;
            goto LABEL_78;
          case 3u:
            *a1 = *(_QWORD *)a2;
            v120 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
            v121 = *(int *)(v120 + 48);
            v122 = (char *)a1 + v121;
            v123 = &a2[v121];
            v124 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
            *((_BYTE *)a1 + *(int *)(v120 + 64)) = a2[*(int *)(v120 + 64)];
            v81 = a1;
            v82 = v79;
            v83 = 3;
            goto LABEL_78;
          case 4u:
            v125 = type metadata accessor for WeatherCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(a1, a2, v125);
            v81 = a1;
            v82 = v79;
            v83 = 4;
LABEL_78:
            swift_storeEnumTagMultiPayload(v81, v82, v83);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            break;
        }
        v9 = a1;
        v10 = a3;
        v11 = 17;
        goto LABEL_192;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t *sub_1003D5228(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  unsigned __int8 *v91;
  uint64_t v92;
  void (*v93)(char *, unsigned __int8 *, uint64_t, __n128);
  __n128 v94;
  uint64_t v95;
  char *v96;
  unsigned __int8 *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unsigned __int8 *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unsigned __int8 *v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unsigned __int8 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  unsigned __int8 *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int EnumCaseMultiPayload;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  unsigned __int8 *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  unsigned __int8 *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  unsigned __int8 *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  unsigned __int8 *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  unsigned __int8 *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  unsigned __int8 *v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  char *v223;
  unsigned __int8 *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  id v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned __int8 *v251;
  __int128 v252;
  uint64_t *result;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unsigned __int8 *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;

  if (a1 != (uint64_t *)a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for MainAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 1u:
        v6 = type metadata accessor for AppConfiguration(0);
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_191;
      case 2u:
        v46 = type metadata accessor for EnvironmentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 2u:
            v47 = type metadata accessor for Locale(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
            v48 = a1;
            v49 = v46;
            v50 = 2;
            goto LABEL_189;
          case 3u:
            v160 = type metadata accessor for ActivityAction(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation(0);
              v206 = (char *)&loc_1003D66D8 + 4 * word_10099C6CC[swift_getEnumCaseMultiPayload(a2)];
              __asm { BR              X10 }
            }
            if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
            }
            else
            {
              v162 = type metadata accessor for SavedLocation(0);
              if (swift_getEnumCaseMultiPayload(a2) == 1)
              {
                v163 = type metadata accessor for SavedLocation.Placeholder(0);
                v164 = 1;
              }
              else
              {
                v163 = type metadata accessor for Location(0);
                v164 = 0;
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(_QWORD *)(v163 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload(a1, v162, v164);
              swift_storeEnumTagMultiPayload(a1, v160, 0);
            }
            v48 = a1;
            v49 = v46;
            v50 = 3;
            goto LABEL_189;
          case 4u:
            *a1 = *(_QWORD *)a2;
            v143 = *((_QWORD *)a2 + 1);
            a1[1] = v143;
            swift_bridgeObjectRetain(v143);
            v48 = a1;
            v49 = v46;
            v50 = 4;
            goto LABEL_189;
          case 8u:
            if (*((_QWORD *)a2 + 1) >= 2uLL)
            {
              *a1 = *(_QWORD *)a2;
              v199 = *((_QWORD *)a2 + 1);
              a1[1] = v199;
              swift_bridgeObjectRetain(v199);
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            v48 = a1;
            v49 = v46;
            v50 = 8;
            goto LABEL_189;
          case 0xAu:
            v165 = type metadata accessor for ConfiguredUnitsAction(0);
            v166 = swift_getEnumCaseMultiPayload(a2);
            if (v166 == 1)
            {
              v207 = type metadata accessor for UnitConfiguration.Temperature(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v207))
              {
                v208 = sub_1000BA294(&qword_100BD7148);
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v207 - 8) + 16))(a1, a2, v207);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v207);
              }
              v168 = a1;
              v169 = v165;
              v170 = 1;
            }
            else
            {
              if (v166)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
                goto LABEL_181;
              }
              v167 = type metadata accessor for ConfiguredUnit(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(a1, a2, v167);
              v168 = a1;
              v169 = v165;
              v170 = 0;
            }
            swift_storeEnumTagMultiPayload(v168, v169, v170);
LABEL_181:
            v48 = a1;
            v49 = v46;
            v50 = 10;
LABEL_189:
            swift_storeEnumTagMultiPayload(v48, v49, v50);
LABEL_190:
            v7 = a1;
            v8 = a3;
            v9 = 2;
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
            goto LABEL_190;
        }
        goto LABEL_191;
      case 3u:
        v10 = type metadata accessor for LocationsAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v11 = type metadata accessor for CurrentLocation(0);
            v12 = swift_getEnumCaseMultiPayload(a2);
            if (v12 == 2)
            {
              v227 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v227 - 8) + 16))(a1, a2, v227);
              v14 = a1;
              v15 = v11;
              v16 = 2;
            }
            else if (v12 == 1)
            {
              v228 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v228 - 8) + 16))(a1, a2, v228);
              v14 = a1;
              v15 = v11;
              v16 = 1;
            }
            else
            {
              if (v12)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
                goto LABEL_153;
              }
              v13 = type metadata accessor for Location(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
              v14 = a1;
              v15 = v11;
              v16 = 0;
            }
            swift_storeEnumTagMultiPayload(v14, v15, v16);
LABEL_153:
            v127 = a1;
            v128 = v10;
            v129 = 0;
            goto LABEL_154;
          case 1u:
            v125 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(a1, a2, v125);
            v126 = sub_1000BA294(&qword_100BDEBF8);
            *((_BYTE *)a1 + *(int *)(v126 + 48)) = a2[*(int *)(v126 + 48)];
            v127 = a1;
            v128 = v10;
            v129 = 1;
            goto LABEL_154;
          case 2u:
            v130 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            v131 = *((_QWORD *)a2 + 1);
            a1[1] = v131;
            swift_bridgeObjectRetain(v130);
            swift_bridgeObjectRetain(v131);
            v127 = a1;
            v128 = v10;
            v129 = 2;
            goto LABEL_154;
          case 5u:
            v144 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v144);
            v127 = a1;
            v128 = v10;
            v129 = 5;
            goto LABEL_154;
          case 6u:
            v145 = *(_QWORD *)a2;
            v146 = *((_QWORD *)a2 + 1);
            v147 = a2[16];
            sub_100163980(v145, v146, v147);
            *a1 = v145;
            a1[1] = v146;
            *((_BYTE *)a1 + 16) = v147;
            v127 = a1;
            v128 = v10;
            v129 = 6;
LABEL_154:
            swift_storeEnumTagMultiPayload(v127, v128, v129);
            goto LABEL_155;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_155:
            v7 = a1;
            v8 = a3;
            v9 = 3;
            goto LABEL_191;
        }
      case 4u:
        v51 = type metadata accessor for NotificationsAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 1u:
            v52 = type metadata accessor for LocationModel(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v52))
            {
              v53 = type metadata accessor for NotificationLocation(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v52);
            }
            v200 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
            v201 = (char *)a1 + v200;
            v202 = &a2[v200];
            v203 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v203))
            {
              v204 = sub_1000BA294(&qword_100BD4280);
              memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v201, 0, 1, v203);
            }
            v176 = a1;
            v177 = v51;
            v178 = 1;
            goto LABEL_127;
          case 2u:
            v171 = type metadata accessor for NotificationSubscription.Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(a1, a2, v171);
            v172 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
            v173 = (char *)a1 + v172;
            v174 = &a2[v172];
            v175 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v173, v174, v175);
            v176 = a1;
            v177 = v51;
            v178 = 2;
            goto LABEL_127;
          case 3u:
            v179 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v179);
            v176 = a1;
            v177 = v51;
            v178 = 3;
            goto LABEL_127;
          case 4u:
            v180 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            swift_bridgeObjectRetain(v180);
            v176 = a1;
            v177 = v51;
            v178 = 4;
            goto LABEL_127;
          case 5u:
            v181 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(a1, a2, v181);
            v182 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
            v183 = (char *)a1 + v182;
            v184 = &a2[v182];
            v185 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v183, v184, v185);
            v176 = a1;
            v177 = v51;
            v178 = 5;
LABEL_127:
            swift_storeEnumTagMultiPayload(v176, v177, v178);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
            break;
        }
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_191;
      case 5u:
        v54 = type metadata accessor for NotificationsOptInAction(0);
        v55 = swift_getEnumCaseMultiPayload(a2);
        switch(v55)
        {
          case 4:
            v100 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(a1, a2, v100);
            v58 = a1;
            v59 = v54;
            v60 = 4;
            goto LABEL_66;
          case 3:
            v101 = *(_QWORD *)a2;
            *a1 = *(_QWORD *)a2;
            *((_BYTE *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain(v101);
            v58 = a1;
            v59 = v54;
            v60 = 3;
            goto LABEL_66;
          case 2:
            v56 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
            v57 = sub_1000BA294(&qword_100BCB648);
            *((_BYTE *)a1 + *(int *)(v57 + 48)) = a2[*(int *)(v57 + 48)];
            v58 = a1;
            v59 = v54;
            v60 = 2;
LABEL_66:
            swift_storeEnumTagMultiPayload(v58, v59, v60);
            goto LABEL_68;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
LABEL_68:
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_191;
      case 6u:
        v17 = type metadata accessor for ViewAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v18 = type metadata accessor for ListViewAction(0);
            v19 = swift_getEnumCaseMultiPayload(a2);
            if (v19 == 2)
            {
              v205 = type metadata accessor for Location.Identifier(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v205 - 8) + 16))(a1, a2, v205);
              v22 = a1;
              v23 = v18;
              v24 = 2;
            }
            else
            {
              if (v19)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                goto LABEL_132;
              }
              v20 = type metadata accessor for LocationModel(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
              v21 = sub_1000BA294(&qword_100BDDB50);
              *((_BYTE *)a1 + *(int *)(v21 + 48)) = a2[*(int *)(v21 + 48)];
              v22 = a1;
              v23 = v18;
              v24 = 0;
            }
            swift_storeEnumTagMultiPayload(v22, v23, v24);
LABEL_132:
            v157 = a1;
            v158 = v17;
            v159 = 0;
            goto LABEL_186;
          case 1u:
            v132 = type metadata accessor for LocationViewerViewAction(0);
            v133 = swift_getEnumCaseMultiPayload(a2);
            switch(v133)
            {
              case 2:
                v229 = type metadata accessor for Location.Identifier(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v229 - 8) + 16))(a1, a2, v229);
                v135 = a1;
                v136 = v132;
                v137 = 2;
                goto LABEL_158;
              case 1:
                v230 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(a1, a2, v230);
                v135 = a1;
                v136 = v132;
                v137 = 1;
                goto LABEL_158;
              case 0:
                v134 = type metadata accessor for LocationModel(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(a1, a2, v134);
                v135 = a1;
                v136 = v132;
                v137 = 0;
LABEL_158:
                swift_storeEnumTagMultiPayload(v135, v136, v137);
                goto LABEL_160;
            }
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
LABEL_160:
            v157 = a1;
            v158 = v17;
            v159 = 1;
LABEL_186:
            swift_storeEnumTagMultiPayload(v157, v158, v159);
LABEL_187:
            v7 = a1;
            v8 = a3;
            v9 = 6;
            break;
          case 3u:
            v138 = type metadata accessor for SearchViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v139 = type metadata accessor for CodableError(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(a1, a2, v139);
                v140 = a1;
                v141 = v138;
                v142 = 0;
                goto LABEL_184;
              case 1u:
                v235 = *(_QWORD *)a2;
                *a1 = *(_QWORD *)a2;
                swift_bridgeObjectRetain(v235);
                v140 = a1;
                v141 = v138;
                v142 = 1;
                goto LABEL_184;
              case 2u:
                *a1 = *(_QWORD *)a2;
                v236 = *((_QWORD *)a2 + 1);
                a1[1] = v236;
                swift_bridgeObjectRetain(v236);
                v140 = a1;
                v141 = v138;
                v142 = 2;
                goto LABEL_184;
              case 3u:
                v237 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(a1, a2, v237);
                v140 = a1;
                v141 = v138;
                v142 = 3;
                goto LABEL_184;
              case 4u:
                v238 = type metadata accessor for LocationOfInterest(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(a1, a2, v238);
                v140 = a1;
                v141 = v138;
                v142 = 4;
                goto LABEL_184;
              case 5u:
                v239 = *(void **)a2;
                *a1 = *(_QWORD *)a2;
                a1[1] = *((_QWORD *)a2 + 1);
                v240 = *((_QWORD *)a2 + 2);
                a1[2] = v240;
                a1[3] = *((_QWORD *)a2 + 3);
                v241 = *((_QWORD *)a2 + 4);
                a1[4] = v241;
                a1[5] = *((_QWORD *)a2 + 5);
                v242 = *((_QWORD *)a2 + 6);
                a1[6] = v242;
                v243 = type metadata accessor for SearchLocation(0);
                v244 = *(int *)(v243 + 32);
                v259 = v243;
                v261 = (char *)a1 + v244;
                v257 = &a2[v244];
                v245 = type metadata accessor for Location(0);
                v246 = v239;
                swift_bridgeObjectRetain(v240);
                swift_bridgeObjectRetain(v241);
                swift_bridgeObjectRetain(v242);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v245))
                {
                  v247 = sub_1000BA294(&qword_100BC35F8);
                  memcpy(v261, v257, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v245 - 8) + 16))(v261, v257, v245);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v245);
                }
                v249 = *(int *)(v259 + 36);
                v250 = (char *)a1 + v249;
                v251 = &a2[v249];
                v252 = *(_OWORD *)v251;
                v250[16] = v251[16];
                *(_OWORD *)v250 = v252;
                v140 = a1;
                v141 = v138;
                v142 = 5;
                goto LABEL_184;
              case 6u:
                v248 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(a1, a2, v248);
                v140 = a1;
                v141 = v138;
                v142 = 6;
LABEL_184:
                swift_storeEnumTagMultiPayload(v140, v141, v142);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
                break;
            }
            v157 = a1;
            v158 = v17;
            v159 = 3;
            goto LABEL_186;
          case 4u:
            v148 = type metadata accessor for InteractiveMapViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v149 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(a1, a2, v149);
                v150 = a1;
                v151 = v148;
                v152 = 0;
                goto LABEL_166;
              case 1u:
                v231 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(a1, a2, v231);
                v150 = a1;
                v151 = v148;
                v152 = 1;
                goto LABEL_166;
              case 2u:
                v232 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(a1, a2, v232);
                v150 = a1;
                v151 = v148;
                v152 = 2;
                goto LABEL_166;
              case 3u:
                v233 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(a1, a2, v233);
                v150 = a1;
                v151 = v148;
                v152 = 3;
                goto LABEL_166;
              case 4u:
                v234 = type metadata accessor for Location(0);
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(a1, a2, v234);
                v150 = a1;
                v151 = v148;
                v152 = 4;
LABEL_166:
                swift_storeEnumTagMultiPayload(v150, v151, v152);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
                break;
            }
            v157 = a1;
            v158 = v17;
            v159 = 4;
            goto LABEL_186;
          case 5u:
            *a1 = *(_QWORD *)a2;
            a1[1] = *((_QWORD *)a2 + 1);
            *((_BYTE *)a1 + 16) = a2[16];
            *((_BYTE *)a1 + 17) = a2[17];
            *((_BYTE *)a1 + 18) = a2[18];
            v153 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
            v154 = (char *)a1 + v153;
            v155 = &a2[v153];
            v156 = type metadata accessor for DynamicTypeSize(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
            v157 = a1;
            v158 = v17;
            v159 = 5;
            goto LABEL_186;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_187;
        }
        goto LABEL_191;
      case 7u:
        v61 = type metadata accessor for ModalViewAction(0);
        v62 = swift_getEnumCaseMultiPayload(a2);
        if (v62 == 3)
        {
          v82 = *(_QWORD *)a2;
          if ((~*(_QWORD *)a2 & 0xF000000000000006) != 0)
          {
            v189 = *((_QWORD *)a2 + 1);
            v190 = *((_QWORD *)a2 + 2);
            v191 = *((_QWORD *)a2 + 3);
            v192 = *((_QWORD *)a2 + 4);
            v193 = *((_QWORD *)a2 + 7);
            v254 = *((_QWORD *)a2 + 5);
            v255 = *((_QWORD *)a2 + 8);
            v256 = *((_QWORD *)a2 + 9);
            v258 = *((_QWORD *)a2 + 10);
            v260 = *((_QWORD *)a2 + 11);
            v194 = *((_QWORD *)a2 + 6);
            sub_10019D33C(v82, v189, v190, v191, v192, v254, v194, v193, v255, v256, v258, v260);
            *a1 = v82;
            a1[1] = v189;
            a1[2] = v190;
            a1[3] = v191;
            a1[4] = v192;
            a1[5] = v254;
            a1[6] = v194;
            a1[7] = v193;
            a1[8] = v255;
            a1[9] = v256;
            a1[10] = v258;
            a1[11] = v260;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
          v186 = a1;
          v187 = v61;
          v188 = 3;
        }
        else
        {
          if (v62)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
            goto LABEL_115;
          }
          v63 = type metadata accessor for LocationPreviewViewAction(0);
          if (swift_getEnumCaseMultiPayload(a2) == 1)
          {
            v64 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
            swift_storeEnumTagMultiPayload(a1, v63, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          v186 = a1;
          v187 = v61;
          v188 = 0;
        }
        swift_storeEnumTagMultiPayload(v186, v187, v188);
LABEL_115:
        v7 = a1;
        v8 = a3;
        v9 = 7;
        goto LABEL_191;
      case 8u:
        v65 = type metadata accessor for LocationViewAction(0);
        v66 = swift_getEnumCaseMultiPayload(a2);
        if (v66 == 2)
        {
          v102 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
          v103 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
          v104 = (char *)a1 + v103;
          v105 = &a2[v103];
          v106 = type metadata accessor for LocationOfInterest(0);
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
          v107 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
          v108 = (char *)a1 + v107;
          v109 = &a2[v107];
          v110 = *(_OWORD *)v109;
          v111 = *((_OWORD *)v109 + 1);
          v108[32] = v109[32];
          *(_OWORD *)v108 = v110;
          *((_OWORD *)v108 + 1) = v111;
          v68 = a1;
          v69 = v65;
          v70 = 2;
        }
        else if (v66 == 1)
        {
          v112 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload(a2))
          {
            case 0u:
              v113 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(a1, a2, v113);
              v114 = sub_1000BA294(&qword_100BC5FE8);
              *((_BYTE *)a1 + *(int *)(v114 + 48)) = a2[*(int *)(v114 + 48)];
              v115 = a1;
              v116 = v112;
              v117 = 0;
              goto LABEL_142;
            case 1u:
              v209 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(a1, a2, v209);
              v115 = a1;
              v116 = v112;
              v117 = 1;
              goto LABEL_142;
            case 2u:
              v210 = type metadata accessor for DetailCondition(0);
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(a1, a2, v210);
              v211 = sub_1000BA294(&qword_100BC5FF8);
              *((_BYTE *)a1 + *(int *)(v211 + 48)) = a2[*(int *)(v211 + 48)];
              v115 = a1;
              v116 = v112;
              v117 = 2;
              goto LABEL_142;
            case 4u:
              *(_BYTE *)a1 = *a2;
              v212 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
              v213 = (char *)a1 + v212;
              v214 = &a2[v212];
              v215 = type metadata accessor for Location(0);
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
              v115 = a1;
              v116 = v112;
              v117 = 4;
LABEL_142:
              swift_storeEnumTagMultiPayload(v115, v116, v117);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
              break;
          }
          v216 = sub_1000BA294(&qword_100BC5FC8);
          v217 = *(int *)(v216 + 48);
          v218 = (char *)a1 + v217;
          v219 = &a2[v217];
          v220 = *(_OWORD *)v219;
          v221 = *((_OWORD *)v219 + 1);
          v218[32] = v219[32];
          *(_OWORD *)v218 = v220;
          *((_OWORD *)v218 + 1) = v221;
          v222 = *(int *)(v216 + 64);
          v223 = (char *)a1 + v222;
          v224 = &a2[v222];
          v225 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
          {
            v226 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v223, v224, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
          }
          v68 = a1;
          v69 = v65;
          v70 = 1;
        }
        else
        {
          if (v66)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
            goto LABEL_148;
          }
          v67 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(a1, a2, v67);
          v68 = a1;
          v69 = v65;
          v70 = 0;
        }
        swift_storeEnumTagMultiPayload(v68, v69, v70);
LABEL_148:
        v7 = a1;
        v8 = a3;
        v9 = 8;
        goto LABEL_191;
      case 9u:
        type metadata accessor for WeatherDataAction(0);
        v71 = (char *)&loc_1003D5804 + 4 * word_10099C660[swift_getEnumCaseMultiPayload(a2)];
        __asm { BR              X10 }
        return result;
      case 0xAu:
        v72 = type metadata accessor for DebugAction(0);
        v73 = swift_getEnumCaseMultiPayload(a2);
        if (v73 == 1)
        {
          v83 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(a1, a2, v83);
          v84 = a1;
          v85 = v72;
          v86 = 1;
        }
        else
        {
          if (v73)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            goto LABEL_119;
          }
          v74 = type metadata accessor for WeatherCondition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v74))
          {
            v75 = sub_1000BA294(&qword_100BC3660);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(a1, a2, v74);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v74);
          }
          v195 = *(int *)(sub_1000BA294(&qword_100BD0A98) + 48);
          v196 = (uint64_t *)((char *)a1 + v195);
          v197 = &a2[v195];
          *v196 = *(_QWORD *)v197;
          v198 = *((_QWORD *)v197 + 1);
          v196[1] = v198;
          swift_bridgeObjectRetain(v198);
          v84 = a1;
          v85 = v72;
          v86 = 0;
        }
        swift_storeEnumTagMultiPayload(v84, v85, v86);
LABEL_119:
        v7 = a1;
        v8 = a3;
        v9 = 10;
        goto LABEL_191;
      case 0xBu:
        v25 = type metadata accessor for ConditionDetailViewAction(0);
        v26 = swift_getEnumCaseMultiPayload(a2);
        switch(v26)
        {
          case 2:
            *a1 = *(_QWORD *)a2;
            v87 = *((_QWORD *)a2 + 1);
            a1[1] = v87;
            v88 = (int *)type metadata accessor for DetailChartSelection(0);
            v89 = v88[5];
            v90 = (char *)a1 + v89;
            v91 = &a2[v89];
            v92 = type metadata accessor for Date(0);
            v93 = *(void (**)(char *, unsigned __int8 *, uint64_t, __n128))(*(_QWORD *)(v92 - 8) + 16);
            v94 = swift_bridgeObjectRetain(v87);
            v93(v90, v91, v92, v94);
            ((void (*)(char *, unsigned __int8 *, uint64_t))v93)((char *)a1 + v88[6], &a2[v88[6]], v92);
            ((void (*)(char *, unsigned __int8 *, uint64_t))v93)((char *)a1 + v88[7], &a2[v88[7]], v92);
            *(uint64_t *)((char *)a1 + v88[8]) = *(_QWORD *)&a2[v88[8]];
            v95 = v88[9];
            v96 = (char *)a1 + v95;
            v97 = &a2[v95];
            v98 = v97[8];
            *(_QWORD *)v96 = *(_QWORD *)v97;
            v96[8] = v98;
            v28 = a1;
            v29 = v25;
            v30 = 2;
            goto LABEL_61;
          case 1:
            v99 = type metadata accessor for DetailCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(a1, a2, v99);
            v28 = a1;
            v29 = v25;
            v30 = 1;
            goto LABEL_61;
          case 0:
            v27 = type metadata accessor for Date(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
            v28 = a1;
            v29 = v25;
            v30 = 0;
LABEL_61:
            swift_storeEnumTagMultiPayload(v28, v29, v30);
            goto LABEL_63;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_63:
        v7 = a1;
        v8 = a3;
        v9 = 11;
        goto LABEL_191;
      case 0xDu:
        v31 = type metadata accessor for MoonDetailViewAction(0);
        v32 = swift_getEnumCaseMultiPayload(a2);
        if (v32 == 1)
        {
          v81 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(a1, a2, v81);
          v36 = a1;
          v37 = v31;
          v38 = 1;
          goto LABEL_51;
        }
        if (!v32)
        {
          v33 = type metadata accessor for MoonDetailSelectedDate(0);
          v34 = swift_getEnumCaseMultiPayload(a2);
          v35 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          swift_storeEnumTagMultiPayload(a1, v33, v34);
          v36 = a1;
          v37 = v31;
          v38 = 0;
LABEL_51:
          swift_storeEnumTagMultiPayload(v36, v37, v38);
          goto LABEL_53;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_53:
        v7 = a1;
        v8 = a3;
        v9 = 13;
LABEL_191:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      case 0xEu:
        v39 = type metadata accessor for AveragesDetailViewAction(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          *a1 = *(_QWORD *)a2;
          v40 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          v41 = v40[5];
          v42 = (char *)a1 + v41;
          v43 = &a2[v41];
          v44 = type metadata accessor for Date(0);
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
          *(uint64_t *)((char *)a1 + v40[6]) = *(_QWORD *)&a2[v40[6]];
          *(uint64_t *)((char *)a1 + v40[7]) = *(_QWORD *)&a2[v40[7]];
          swift_storeEnumTagMultiPayload(a1, v39, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        v7 = a1;
        v8 = a3;
        v9 = 14;
        goto LABEL_191;
      case 0x10u:
        *a1 = *(_QWORD *)a2;
        v45 = *((_QWORD *)a2 + 1);
        a1[1] = v45;
        swift_bridgeObjectRetain(v45);
        v7 = a1;
        v8 = a3;
        v9 = 16;
        goto LABEL_191;
      case 0x11u:
        v76 = type metadata accessor for PerformanceTestAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v77 = type metadata accessor for DetailCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(a1, a2, v77);
            v78 = a1;
            v79 = v76;
            v80 = 0;
            goto LABEL_77;
          case 2u:
            v118 = type metadata accessor for Location(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(a1, a2, v118);
            v78 = a1;
            v79 = v76;
            v80 = 2;
            goto LABEL_77;
          case 3u:
            *a1 = *(_QWORD *)a2;
            v119 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
            v120 = *(int *)(v119 + 48);
            v121 = (char *)a1 + v120;
            v122 = &a2[v120];
            v123 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
            *((_BYTE *)a1 + *(int *)(v119 + 64)) = a2[*(int *)(v119 + 64)];
            v78 = a1;
            v79 = v76;
            v80 = 3;
            goto LABEL_77;
          case 4u:
            v124 = type metadata accessor for WeatherCondition(0);
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(a1, a2, v124);
            v78 = a1;
            v79 = v76;
            v80 = 4;
LABEL_77:
            swift_storeEnumTagMultiPayload(v78, v79, v80);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
            break;
        }
        v7 = a1;
        v8 = a3;
        v9 = 17;
        goto LABEL_191;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_QWORD *sub_1003D7D88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  __int128 v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  __int128 v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  int *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  __int128 v307;
  __int128 v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  __int128 v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  int *v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v366;
  uint64_t v367;
  void (*v368)(char *, char *);
  uint64_t v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  char *v373;
  int *v374;

  switch(swift_getEnumCaseMultiPayload(a2))
  {
    case 1u:
      v6 = type metadata accessor for AppConfiguration(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_235;
    case 2u:
      v50 = type metadata accessor for EnvironmentAction(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
      if (EnumCaseMultiPayload != 10)
      {
        if (EnumCaseMultiPayload != 3)
        {
          if (EnumCaseMultiPayload != 2)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            goto LABEL_234;
          }
          v52 = type metadata accessor for Locale(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
          v53 = a1;
          v54 = v50;
          v55 = 2;
          goto LABEL_233;
        }
        v127 = type metadata accessor for ActivityAction(0);
        v128 = swift_getEnumCaseMultiPayload(a2);
        if (v128 != 1)
        {
          if (v128)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
LABEL_232:
            v53 = a1;
            v54 = v50;
            v55 = 3;
LABEL_233:
            swift_storeEnumTagMultiPayload(v53, v54, v55);
LABEL_234:
            v7 = a1;
            v8 = a3;
            v9 = 2;
            goto LABEL_235;
          }
          v129 = type metadata accessor for SavedLocation(0);
          if (swift_getEnumCaseMultiPayload(a2) == 1)
          {
            v130 = type metadata accessor for SavedLocation.Placeholder(0);
            v131 = 1;
          }
          else
          {
            v130 = type metadata accessor for Location(0);
            v131 = 0;
          }
          (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v130 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload(a1, v129, v131);
          v254 = a1;
          v255 = v127;
          v256 = 0;
LABEL_231:
          swift_storeEnumTagMultiPayload(v254, v255, v256);
          goto LABEL_232;
        }
        v207 = type metadata accessor for PreviewLocation(0);
        v208 = swift_getEnumCaseMultiPayload(a2);
        if (v208 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          v352 = type metadata accessor for SearchLocation(0);
          v353 = *(int *)(v352 + 32);
          v354 = (char *)a1 + v353;
          v355 = (char *)a2 + v353;
          v356 = type metadata accessor for Location(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v355, 1, v356))
          {
            v357 = sub_1000BA294(&qword_100BC35F8);
            memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 32))(v354, v355, v356);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v354, 0, 1, v356);
          }
          v362 = *(int *)(v352 + 36);
          v363 = (char *)a1 + v362;
          v364 = (char *)a2 + v362;
          *(_OWORD *)v363 = *(_OWORD *)v364;
          v363[16] = v364[16];
          v210 = a1;
          v211 = v207;
          v212 = 2;
        }
        else if (v208 == 1)
        {
          v358 = type metadata accessor for LocationOfInterest(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v358 - 8) + 32))(a1, a2, v358);
          v210 = a1;
          v211 = v207;
          v212 = 1;
        }
        else
        {
          if (v208)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
LABEL_230:
            v254 = a1;
            v255 = v127;
            v256 = 1;
            goto LABEL_231;
          }
          v209 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(a1, a2, v209);
          v210 = a1;
          v211 = v207;
          v212 = 0;
        }
        swift_storeEnumTagMultiPayload(v210, v211, v212);
        goto LABEL_230;
      }
      v121 = type metadata accessor for ConfiguredUnitsAction(0);
      v122 = swift_getEnumCaseMultiPayload(a2);
      if (v122 == 1)
      {
        v205 = type metadata accessor for UnitConfiguration.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v205))
        {
          v206 = sub_1000BA294(&qword_100BD7148);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(a1, a2, v205);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v205);
        }
        v124 = a1;
        v125 = v121;
        v126 = 1;
      }
      else
      {
        if (v122)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
LABEL_174:
          v53 = a1;
          v54 = v50;
          v55 = 10;
          goto LABEL_233;
        }
        v123 = type metadata accessor for ConfiguredUnit(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(a1, a2, v123);
        v124 = a1;
        v125 = v121;
        v126 = 0;
      }
      swift_storeEnumTagMultiPayload(v124, v125, v126);
      goto LABEL_174;
    case 3u:
      v56 = type metadata accessor for LocationsAction(0);
      v57 = swift_getEnumCaseMultiPayload(a2);
      if (v57 == 1)
      {
        v94 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(a1, a2, v94);
        v95 = sub_1000BA294(&qword_100BDEBF8);
        *((_BYTE *)a1 + *(int *)(v95 + 48)) = *((_BYTE *)a2 + *(int *)(v95 + 48));
        v96 = a1;
        v97 = v56;
        v98 = 1;
        goto LABEL_126;
      }
      if (v57)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        goto LABEL_127;
      }
      v58 = type metadata accessor for CurrentLocation(0);
      v59 = swift_getEnumCaseMultiPayload(a2);
      switch(v59)
      {
        case 2:
          v203 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(a1, a2, v203);
          v61 = a1;
          v62 = v58;
          v63 = 2;
          goto LABEL_123;
        case 1:
          v204 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(a1, a2, v204);
          v61 = a1;
          v62 = v58;
          v63 = 1;
          goto LABEL_123;
        case 0:
          v60 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
          v61 = a1;
          v62 = v58;
          v63 = 0;
LABEL_123:
          swift_storeEnumTagMultiPayload(v61, v62, v63);
          goto LABEL_125;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
LABEL_125:
      v96 = a1;
      v97 = v56;
      v98 = 0;
LABEL_126:
      swift_storeEnumTagMultiPayload(v96, v97, v98);
LABEL_127:
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_235;
    case 4u:
      v64 = type metadata accessor for NotificationsAction(0);
      v65 = swift_getEnumCaseMultiPayload(a2);
      switch(v65)
      {
        case 5:
          v132 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
          v133 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
          v134 = (char *)a1 + v133;
          v135 = (char *)a2 + v133;
          v136 = type metadata accessor for NotificationSubscription.Kind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
          v118 = a1;
          v119 = v64;
          v120 = 5;
          break;
        case 2:
          v113 = type metadata accessor for NotificationSubscription.Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
          v114 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
          v115 = (char *)a1 + v114;
          v116 = (char *)a2 + v114;
          v117 = type metadata accessor for NotificationSubscription.Kind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
          v118 = a1;
          v119 = v64;
          v120 = 2;
          break;
        case 1:
          v66 = type metadata accessor for LocationModel(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v66))
          {
            v67 = type metadata accessor for NotificationLocation(0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v66);
          }
          v198 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
          v199 = (char *)a1 + v198;
          v200 = (char *)a2 + v198;
          v201 = type metadata accessor for URL(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
          {
            v202 = sub_1000BA294(&qword_100BD4280);
            memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v199, v200, v201);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
          }
          v118 = a1;
          v119 = v64;
          v120 = 1;
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          goto LABEL_120;
      }
      swift_storeEnumTagMultiPayload(v118, v119, v120);
LABEL_120:
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_235;
    case 5u:
      v10 = type metadata accessor for NotificationsOptInAction(0);
      v11 = swift_getEnumCaseMultiPayload(a2);
      if (v11 == 4)
      {
        v92 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(a1, a2, v92);
        v14 = a1;
        v15 = v10;
        v16 = 4;
        goto LABEL_55;
      }
      if (v11 == 2)
      {
        v12 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v13 = sub_1000BA294(&qword_100BCB648);
        *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
        v14 = a1;
        v15 = v10;
        v16 = 2;
LABEL_55:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        goto LABEL_57;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_57:
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_235;
    case 6u:
      v17 = type metadata accessor for ViewAction(0);
      switch(swift_getEnumCaseMultiPayload(a2))
      {
        case 0u:
          v18 = type metadata accessor for ListViewAction(0);
          v19 = swift_getEnumCaseMultiPayload(a2);
          if (v19 == 2)
          {
            v236 = type metadata accessor for Location.Identifier(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(a1, a2, v236);
            v22 = a1;
            v23 = v18;
            v24 = 2;
          }
          else
          {
            if (v19)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
              goto LABEL_152;
            }
            v20 = type metadata accessor for LocationModel(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
            v21 = sub_1000BA294(&qword_100BDDB50);
            *((_BYTE *)a1 + *(int *)(v21 + 48)) = *((_BYTE *)a2 + *(int *)(v21 + 48));
            v22 = a1;
            v23 = v18;
            v24 = 0;
          }
          swift_storeEnumTagMultiPayload(v22, v23, v24);
LABEL_152:
          v194 = a1;
          v195 = v17;
          v196 = 0;
          goto LABEL_225;
        case 1u:
          v174 = type metadata accessor for LocationViewerViewAction(0);
          v175 = swift_getEnumCaseMultiPayload(a2);
          if (v175 == 2)
          {
            v257 = type metadata accessor for Location.Identifier(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(a1, a2, v257);
            v177 = a1;
            v178 = v174;
            v179 = 2;
          }
          else if (v175 == 1)
          {
            v258 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(a1, a2, v258);
            v177 = a1;
            v178 = v174;
            v179 = 1;
          }
          else
          {
            if (v175)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
LABEL_170:
              v194 = a1;
              v195 = v17;
              v196 = 1;
LABEL_225:
              swift_storeEnumTagMultiPayload(v194, v195, v196);
LABEL_226:
              v7 = a1;
              v8 = a3;
              v9 = 6;
              goto LABEL_235;
            }
            v176 = type metadata accessor for LocationModel(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(a1, a2, v176);
            v177 = a1;
            v178 = v174;
            v179 = 0;
          }
          swift_storeEnumTagMultiPayload(v177, v178, v179);
          goto LABEL_170;
        case 3u:
          v180 = type metadata accessor for SearchViewAction(0);
          switch(swift_getEnumCaseMultiPayload(a2))
          {
            case 0u:
              v181 = type metadata accessor for CodableError(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(a1, a2, v181);
              v182 = a1;
              v183 = v180;
              v184 = 0;
              goto LABEL_223;
            case 3u:
              v259 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v259 - 8) + 32))(a1, a2, v259);
              v182 = a1;
              v183 = v180;
              v184 = 3;
              goto LABEL_223;
            case 4u:
              v260 = type metadata accessor for LocationOfInterest(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(a1, a2, v260);
              v182 = a1;
              v183 = v180;
              v184 = 4;
              goto LABEL_223;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              v261 = type metadata accessor for SearchLocation(0);
              v262 = *(int *)(v261 + 32);
              v263 = (char *)a1 + v262;
              v264 = (char *)a2 + v262;
              v265 = type metadata accessor for Location(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
              {
                v266 = sub_1000BA294(&qword_100BC35F8);
                memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v263, v264, v265);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v265);
              }
              v359 = *(int *)(v261 + 36);
              v360 = (char *)a1 + v359;
              v361 = (char *)a2 + v359;
              *(_OWORD *)v360 = *(_OWORD *)v361;
              v360[16] = v361[16];
              v182 = a1;
              v183 = v180;
              v184 = 5;
              goto LABEL_223;
            case 6u:
              v267 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(a1, a2, v267);
              v182 = a1;
              v183 = v180;
              v184 = 6;
LABEL_223:
              swift_storeEnumTagMultiPayload(v182, v183, v184);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
              break;
          }
          v194 = a1;
          v195 = v17;
          v196 = 3;
          goto LABEL_225;
        case 4u:
          v185 = type metadata accessor for InteractiveMapViewAction(0);
          switch(swift_getEnumCaseMultiPayload(a2))
          {
            case 0u:
              v186 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(a1, a2, v186);
              v187 = a1;
              v188 = v185;
              v189 = 0;
              goto LABEL_186;
            case 1u:
              v268 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(a1, a2, v268);
              v187 = a1;
              v188 = v185;
              v189 = 1;
              goto LABEL_186;
            case 2u:
              v269 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v269 - 8) + 32))(a1, a2, v269);
              v187 = a1;
              v188 = v185;
              v189 = 2;
              goto LABEL_186;
            case 3u:
              v270 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(a1, a2, v270);
              v187 = a1;
              v188 = v185;
              v189 = 3;
              goto LABEL_186;
            case 4u:
              v271 = type metadata accessor for Location(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(a1, a2, v271);
              v187 = a1;
              v188 = v185;
              v189 = 4;
LABEL_186:
              swift_storeEnumTagMultiPayload(v187, v188, v189);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
              break;
          }
          v194 = a1;
          v195 = v17;
          v196 = 4;
          goto LABEL_225;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
          *((_BYTE *)a1 + 18) = *((_BYTE *)a2 + 18);
          v190 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
          v191 = (char *)a1 + v190;
          v192 = (char *)a2 + v190;
          v193 = type metadata accessor for DynamicTypeSize(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v191, v192, v193);
          v194 = a1;
          v195 = v17;
          v196 = 5;
          goto LABEL_225;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_226;
      }
    case 7u:
      v68 = type metadata accessor for ModalViewAction(0);
      if (swift_getEnumCaseMultiPayload(a2))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        v90 = type metadata accessor for LocationPreviewViewAction(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          v91 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(a1, a2, v91);
          swift_storeEnumTagMultiPayload(a1, v90, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload(a1, v68, 0);
      }
      v7 = a1;
      v8 = a3;
      v9 = 7;
      goto LABEL_235;
    case 8u:
      v69 = type metadata accessor for LocationViewAction(0);
      v70 = swift_getEnumCaseMultiPayload(a2);
      if (v70 == 2)
      {
        v137 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(a1, a2, v137);
        v138 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
        v139 = (char *)a1 + v138;
        v140 = (char *)a2 + v138;
        v141 = type metadata accessor for LocationOfInterest(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v139, v140, v141);
        v142 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
        v143 = (char *)a1 + v142;
        v144 = (char *)a2 + v142;
        v145 = *((_OWORD *)v144 + 1);
        *(_OWORD *)v143 = *(_OWORD *)v144;
        *((_OWORD *)v143 + 1) = v145;
        v143[32] = v144[32];
        v72 = a1;
        v73 = v69;
        v74 = 2;
      }
      else if (v70 == 1)
      {
        v146 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v147 = type metadata accessor for URL(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
            v148 = sub_1000BA294(&qword_100BC5FE8);
            *((_BYTE *)a1 + *(int *)(v148 + 48)) = *((_BYTE *)a2 + *(int *)(v148 + 48));
            v149 = a1;
            v150 = v146;
            v151 = 0;
            goto LABEL_157;
          case 1u:
            v237 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(a1, a2, v237);
            v149 = a1;
            v150 = v146;
            v151 = 1;
            goto LABEL_157;
          case 2u:
            v238 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(a1, a2, v238);
            v239 = sub_1000BA294(&qword_100BC5FF8);
            *((_BYTE *)a1 + *(int *)(v239 + 48)) = *((_BYTE *)a2 + *(int *)(v239 + 48));
            v149 = a1;
            v150 = v146;
            v151 = 2;
            goto LABEL_157;
          case 4u:
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v240 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
            v241 = (char *)a1 + v240;
            v242 = (char *)a2 + v240;
            v243 = type metadata accessor for Location(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v241, v242, v243);
            v149 = a1;
            v150 = v146;
            v151 = 4;
LABEL_157:
            swift_storeEnumTagMultiPayload(v149, v150, v151);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
            break;
        }
        v244 = sub_1000BA294(&qword_100BC5FC8);
        v245 = *(int *)(v244 + 48);
        v246 = (char *)a1 + v245;
        v247 = (char *)a2 + v245;
        v248 = *((_OWORD *)v247 + 1);
        *(_OWORD *)v246 = *(_OWORD *)v247;
        *((_OWORD *)v246 + 1) = v248;
        v246[32] = v247[32];
        v249 = *(int *)(v244 + 64);
        v250 = (char *)a1 + v249;
        v251 = (char *)a2 + v249;
        v252 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251, 1, v252))
        {
          v253 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v251, v252);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v250, 0, 1, v252);
        }
        v72 = a1;
        v73 = v69;
        v74 = 1;
      }
      else
      {
        if (v70)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          goto LABEL_163;
        }
        v71 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
        v72 = a1;
        v73 = v69;
        v74 = 0;
      }
      swift_storeEnumTagMultiPayload(v72, v73, v74);
LABEL_163:
      v7 = a1;
      v8 = a3;
      v9 = 8;
      goto LABEL_235;
    case 9u:
      v75 = type metadata accessor for WeatherDataAction(0);
      switch(swift_getEnumCaseMultiPayload(a2))
      {
        case 4u:
          v366 = v75;
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v76 = sub_1000BA294(&qword_100BCB630);
          v77 = *(int *)(v76 + 48);
          v78 = (char *)a1 + v77;
          v79 = (char *)a2 + v77;
          *(_OWORD *)((char *)a1 + v77) = *(_OWORD *)((char *)a2 + v77);
          v80 = (int *)type metadata accessor for WeatherData(0);
          v81 = v80[5];
          v82 = &v78[v81];
          v83 = &v79[v81];
          v84 = type metadata accessor for Locale(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
          {
            v85 = sub_1000BA294(&qword_100BC3340);
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
          }
          v213 = v80[6];
          v214 = &v78[v213];
          v215 = &v79[v213];
          v216 = type metadata accessor for WeatherDataModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v214, v215, v216);
          v217 = v80[7];
          v218 = &v78[v217];
          v219 = &v79[v217];
          v220 = sub_1000BA294(&qword_100BC3348);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v220))
          {
            v221 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
          }
          else
          {
            v223 = type metadata accessor for Date(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v218, v219, v223);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v220);
          }
          v224 = v80[8];
          v225 = &v78[v224];
          v226 = &v79[v224];
          v227 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload(v226) == 1)
          {
            v228 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 32))(v225, v226, v228);
            swift_storeEnumTagMultiPayload(v225, v227, 1);
          }
          else
          {
            memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
          }
          v229 = v80[9];
          v230 = &v78[v229];
          v231 = &v79[v229];
          v232 = type metadata accessor for WeatherDataOverrides(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, v232))
          {
            v233 = sub_1000BA294(&qword_100BC3350);
            memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
          }
          else
          {
            v234 = type metadata accessor for Date(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, v234))
            {
              v235 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v230, v231, v234);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v234);
            }
            v272 = *(int *)(v232 + 20);
            v273 = &v230[v272];
            v274 = &v231[v272];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v234))
            {
              v275 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
              memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v273, v274, v234);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v234);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v232);
          }
          v372 = v76;
          v276 = *(int *)(v76 + 64);
          v277 = (char *)a1 + v276;
          v278 = (char *)a2 + v276;
          v279 = type metadata accessor for UUID(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 32))(v277, v278, v279);
          v280 = type metadata accessor for PreprocessedWeatherData(0);
          *(_QWORD *)&v277[*(int *)(v280 + 20)] = *(_QWORD *)&v278[*(int *)(v280 + 20)];
          v374 = (int *)v280;
          v281 = *(int *)(v280 + 24);
          v371 = v277;
          v282 = &v277[v281];
          v283 = &v278[v281];
          v284 = *(_OWORD *)&v278[v281 + 16];
          *(_OWORD *)v282 = *(_OWORD *)&v278[v281];
          *((_OWORD *)v282 + 1) = v284;
          *((_OWORD *)v282 + 2) = *(_OWORD *)&v278[v281 + 32];
          v285 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel(0);
          v286 = *(int *)(v285 + 28);
          v287 = &v282[v286];
          v288 = &v283[v286];
          v289 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          v373 = v278;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v288, 1, v289))
          {
            v290 = sub_1000BA294(&qword_100BC3360);
            memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v287 = *(_OWORD *)v288;
            v291 = *(int *)(v289 + 20);
            v292 = &v287[v291];
            v293 = &v288[v291];
            v294 = type metadata accessor for TemperatureScaleConfiguration(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v292, v293, v294);
            v295 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(_QWORD *)&v292[v295[5]] = *(_QWORD *)&v293[v295[5]];
            *(_QWORD *)&v292[v295[6]] = *(_QWORD *)&v293[v295[6]];
            *(_QWORD *)&v292[v295[7]] = *(_QWORD *)&v293[v295[7]];
            *(_OWORD *)&v292[v295[8]] = *(_OWORD *)&v293[v295[8]];
            v292[v295[9]] = v293[v295[9]];
            v278 = v373;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v287, 0, 1, v289);
          }
          *(_OWORD *)&v282[*(int *)(v285 + 32)] = *(_OWORD *)&v283[*(int *)(v285 + 32)];
          v296 = v374[7];
          v297 = &v371[v296];
          v298 = &v278[v296];
          *(_QWORD *)&v371[v296] = *(_QWORD *)&v278[v296];
          v299 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
          v300 = &v297[v299];
          v301 = &v298[v299];
          v302 = type metadata accessor for WeatherDescription(0);
          v367 = v302;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v301, 1, v302))
          {
            v303 = sub_1000BA294(&qword_100BC3368);
            memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v300, v301, v302);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v300, 0, 1, v302);
          }
          v304 = v374[8];
          v305 = &v371[v304];
          v306 = &v278[v304];
          v307 = *(_OWORD *)&v278[v304 + 16];
          *(_OWORD *)v305 = *(_OWORD *)&v278[v304];
          *((_OWORD *)v305 + 1) = v307;
          v308 = *(_OWORD *)&v278[v304 + 48];
          *((_OWORD *)v305 + 2) = *(_OWORD *)&v278[v304 + 32];
          *((_OWORD *)v305 + 3) = v308;
          v309 = *(int *)(type metadata accessor for ListPreprocessedDataModel(0) + 32);
          v310 = &v305[v309];
          v311 = &v306[v309];
          v370 = type metadata accessor for Date(0);
          v368 = *(void (**)(char *, char *))(*(_QWORD *)(v370 - 8) + 32);
          v368(v310, v311);
          v312 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
          v313 = *(int *)(v312 + 20);
          v314 = &v310[v313];
          v315 = &v311[v313];
          v316 = type metadata accessor for Elevation(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v315, 1, v316))
          {
            v317 = sub_1000BA294(&qword_100BC3370);
            memcpy(v314, v315, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v314, v315, v316);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v314, 0, 1, v316);
          }
          v318 = *(int *)(v312 + 24);
          v319 = &v310[v318];
          v320 = &v311[v318];
          v321 = type metadata accessor for BackgroundMoonData(0);
          v369 = v321;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v320, 1, v321))
          {
            v322 = sub_1000BA294(&qword_100BC3378);
            memcpy(v319, v320, *(_QWORD *)(*(_QWORD *)(v322 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 32))(v319, v320, v321);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v319, 0, 1, v321);
          }
          memcpy(&v371[v374[9]], &v373[v374[9]], 0x70uLL);
          v323 = v374[10];
          v324 = &v371[v323];
          v325 = &v373[v323];
          (*(void (**)(char *, char *))(*(_QWORD *)(v367 - 8) + 32))(&v371[v323], &v373[v323]);
          v326 = type metadata accessor for UVIndexComponentPreprocessedDataModel(0);
          *(_OWORD *)&v324[*(int *)(v326 + 20)] = *(_OWORD *)&v325[*(int *)(v326 + 20)];
          v327 = v374[11];
          v328 = &v371[v327];
          v329 = &v373[v327];
          v330 = *((_OWORD *)v329 + 1);
          *(_OWORD *)v328 = *(_OWORD *)v329;
          *((_OWORD *)v328 + 1) = v330;
          *((_OWORD *)v328 + 2) = *((_OWORD *)v329 + 2);
          v331 = v374[12];
          v332 = &v371[v331];
          v333 = &v373[v331];
          v334 = type metadata accessor for PressureTrend(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(v332, v333, v334);
          v335 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
          *(_OWORD *)&v332[v335[5]] = *(_OWORD *)&v333[v335[5]];
          *(_OWORD *)&v332[v335[6]] = *(_OWORD *)&v333[v335[6]];
          *(_OWORD *)&v332[v335[7]] = *(_OWORD *)&v333[v335[7]];
          *(_QWORD *)&v332[v335[8]] = *(_QWORD *)&v333[v335[8]];
          *(_OWORD *)&v332[v335[9]] = *(_OWORD *)&v333[v335[9]];
          memcpy(&v371[v374[13]], &v373[v374[13]], 0xE8uLL);
          v336 = v374[14];
          v337 = &v371[v336];
          v338 = &v373[v336];
          ((void (*)(char *, char *, uint64_t))v368)(&v371[v336], &v373[v336], v370);
          v339 = *(int *)(v312 + 20);
          v340 = &v337[v339];
          v341 = &v338[v339];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v338[v339], 1, v316))
          {
            v342 = sub_1000BA294(&qword_100BC3370);
            memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v342 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v340, v341, v316);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v340, 0, 1, v316);
          }
          v343 = *(int *)(v312 + 24);
          v344 = &v337[v343];
          v345 = &v338[v343];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v338[v343], 1, v369))
          {
            v346 = sub_1000BA294(&qword_100BC3378);
            memcpy(v344, v345, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v344, v345, v369);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v369);
          }
          memcpy(&v371[v374[15]], &v373[v374[15]], 0x70uLL);
          v347 = *(int *)(v372 + 80);
          v348 = (char *)a1 + v347;
          v349 = (char *)a2 + v347;
          v350 = type metadata accessor for NewsDataModel(0);
          if (swift_getEnumCaseMultiPayload(v349))
          {
            memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
          }
          else
          {
            v351 = type metadata accessor for News(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 32))(v348, v349, v351);
            swift_storeEnumTagMultiPayload(v348, v350, 0);
          }
          v167 = a1;
          v168 = v366;
          v169 = 4;
          goto LABEL_215;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v159 = *(int *)(sub_1000BA294(&qword_100BCB620) + 48);
          v160 = (char *)a1 + v159;
          v161 = (char *)a2 + v159;
          v162 = type metadata accessor for NewsDataModel(0);
          if (swift_getEnumCaseMultiPayload(v161))
          {
            memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
          }
          else
          {
            v222 = type metadata accessor for News(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v160, v161, v222);
            swift_storeEnumTagMultiPayload(v160, v162, 0);
          }
          v167 = a1;
          v168 = v75;
          v169 = 5;
          goto LABEL_215;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v163 = *(int *)(sub_1000BA294(&qword_100BCB628) + 48);
          v164 = (char *)a1 + v163;
          v165 = (char *)a2 + v163;
          v166 = type metadata accessor for AvailableDataSets(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
          v167 = a1;
          v168 = v75;
          v169 = 6;
          goto LABEL_215;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v170 = *(int *)(sub_1000BA294(&qword_100BCB618) + 48);
          v171 = (char *)a1 + v170;
          v172 = (char *)a2 + v170;
          v173 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
          v167 = a1;
          v168 = v75;
          v169 = 8;
LABEL_215:
          swift_storeEnumTagMultiPayload(v167, v168, v169);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          break;
      }
      v7 = a1;
      v8 = a3;
      v9 = 9;
      goto LABEL_235;
    case 0xAu:
      v86 = type metadata accessor for DebugAction(0);
      v87 = swift_getEnumCaseMultiPayload(a2);
      if (v87 == 1)
      {
        v99 = type metadata accessor for Location(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(a1, a2, v99);
        v100 = a1;
        v101 = v86;
        v102 = 1;
      }
      else
      {
        if (v87)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          goto LABEL_113;
        }
        v88 = type metadata accessor for WeatherCondition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v88))
        {
          v89 = sub_1000BA294(&qword_100BC3660);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(a1, a2, v88);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v88);
        }
        v197 = sub_1000BA294(&qword_100BD0A98);
        *(_OWORD *)((char *)a1 + *(int *)(v197 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v197 + 48));
        v100 = a1;
        v101 = v86;
        v102 = 0;
      }
      swift_storeEnumTagMultiPayload(v100, v101, v102);
LABEL_113:
      v7 = a1;
      v8 = a3;
      v9 = 10;
      goto LABEL_235;
    case 0xBu:
      v25 = type metadata accessor for ConditionDetailViewAction(0);
      v26 = swift_getEnumCaseMultiPayload(a2);
      switch(v26)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v103 = (int *)type metadata accessor for DetailChartSelection(0);
          v104 = v103[5];
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = type metadata accessor for Date(0);
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32);
          v108(v105, v106, v107);
          v108((char *)a1 + v103[6], (char *)a2 + v103[6], v107);
          v108((char *)a1 + v103[7], (char *)a2 + v103[7], v107);
          *(_QWORD *)((char *)a1 + v103[8]) = *(_QWORD *)((char *)a2 + v103[8]);
          v109 = v103[9];
          v110 = (char *)a1 + v109;
          v111 = (char *)a2 + v109;
          v110[8] = v111[8];
          *(_QWORD *)v110 = *(_QWORD *)v111;
          v28 = a1;
          v29 = v25;
          v30 = 2;
          goto LABEL_68;
        case 1:
          v112 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(a1, a2, v112);
          v28 = a1;
          v29 = v25;
          v30 = 1;
          goto LABEL_68;
        case 0:
          v27 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
          v28 = a1;
          v29 = v25;
          v30 = 0;
LABEL_68:
          swift_storeEnumTagMultiPayload(v28, v29, v30);
          goto LABEL_70;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_70:
      v7 = a1;
      v8 = a3;
      v9 = 11;
      goto LABEL_235;
    case 0xDu:
      v31 = type metadata accessor for MoonDetailViewAction(0);
      v32 = swift_getEnumCaseMultiPayload(a2);
      if (v32 == 1)
      {
        v93 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(a1, a2, v93);
        v36 = a1;
        v37 = v31;
        v38 = 1;
        goto LABEL_59;
      }
      if (!v32)
      {
        v33 = type metadata accessor for MoonDetailSelectedDate(0);
        v34 = swift_getEnumCaseMultiPayload(a2);
        v35 = type metadata accessor for Date(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
        swift_storeEnumTagMultiPayload(a1, v33, v34);
        v36 = a1;
        v37 = v31;
        v38 = 0;
LABEL_59:
        swift_storeEnumTagMultiPayload(v36, v37, v38);
        goto LABEL_61;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_61:
      v7 = a1;
      v8 = a3;
      v9 = 13;
LABEL_235:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      return a1;
    case 0xEu:
      v39 = type metadata accessor for AveragesDetailViewAction(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        *a1 = *a2;
        v40 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        v41 = v40[5];
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        *(_QWORD *)((char *)a1 + v40[6]) = *(_QWORD *)((char *)a2 + v40[6]);
        *(_QWORD *)((char *)a1 + v40[7]) = *(_QWORD *)((char *)a2 + v40[7]);
        swift_storeEnumTagMultiPayload(a1, v39, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      v7 = a1;
      v8 = a3;
      v9 = 14;
      goto LABEL_235;
    case 0x11u:
      v45 = type metadata accessor for PerformanceTestAction(0);
      switch(swift_getEnumCaseMultiPayload(a2))
      {
        case 0u:
          v46 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(a1, a2, v46);
          v47 = a1;
          v48 = v45;
          v49 = 0;
          goto LABEL_90;
        case 2u:
          v152 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(a1, a2, v152);
          v47 = a1;
          v48 = v45;
          v49 = 2;
          goto LABEL_90;
        case 3u:
          *a1 = *a2;
          v153 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
          v154 = *(int *)(v153 + 48);
          v155 = (char *)a1 + v154;
          v156 = (char *)a2 + v154;
          v157 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
          *((_BYTE *)a1 + *(int *)(v153 + 64)) = *((_BYTE *)a2 + *(int *)(v153 + 64));
          v47 = a1;
          v48 = v45;
          v49 = 3;
          goto LABEL_90;
        case 4u:
          v158 = type metadata accessor for WeatherCondition(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
          v47 = a1;
          v48 = v45;
          v49 = 4;
LABEL_90:
          swift_storeEnumTagMultiPayload(v47, v48, v49);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          break;
      }
      v7 = a1;
      v8 = a3;
      v9 = 17;
      goto LABEL_235;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *sub_1003DA038(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  __int128 v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  __int128 v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  int *v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  __int128 v307;
  __int128 v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  __int128 v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  int *v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v366;
  uint64_t v367;
  void (*v368)(char *, char *);
  uint64_t v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  char *v373;
  int *v374;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for MainAction);
    switch(swift_getEnumCaseMultiPayload(a2))
    {
      case 1u:
        v6 = type metadata accessor for AppConfiguration(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_236;
      case 2u:
        v50 = type metadata accessor for EnvironmentAction(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
        if (EnumCaseMultiPayload != 10)
        {
          if (EnumCaseMultiPayload != 3)
          {
            if (EnumCaseMultiPayload != 2)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
              goto LABEL_235;
            }
            v52 = type metadata accessor for Locale(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(a1, a2, v52);
            v53 = a1;
            v54 = v50;
            v55 = 2;
            goto LABEL_234;
          }
          v127 = type metadata accessor for ActivityAction(0);
          v128 = swift_getEnumCaseMultiPayload(a2);
          if (v128 != 1)
          {
            if (v128)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
LABEL_233:
              v53 = a1;
              v54 = v50;
              v55 = 3;
LABEL_234:
              swift_storeEnumTagMultiPayload(v53, v54, v55);
LABEL_235:
              v7 = a1;
              v8 = a3;
              v9 = 2;
              goto LABEL_236;
            }
            v129 = type metadata accessor for SavedLocation(0);
            if (swift_getEnumCaseMultiPayload(a2) == 1)
            {
              v130 = type metadata accessor for SavedLocation.Placeholder(0);
              v131 = 1;
            }
            else
            {
              v130 = type metadata accessor for Location(0);
              v131 = 0;
            }
            (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v130 - 8) + 32))(a1, a2);
            swift_storeEnumTagMultiPayload(a1, v129, v131);
            v254 = a1;
            v255 = v127;
            v256 = 0;
LABEL_232:
            swift_storeEnumTagMultiPayload(v254, v255, v256);
            goto LABEL_233;
          }
          v207 = type metadata accessor for PreviewLocation(0);
          v208 = swift_getEnumCaseMultiPayload(a2);
          if (v208 == 2)
          {
            *a1 = *a2;
            *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
            *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
            v352 = type metadata accessor for SearchLocation(0);
            v353 = *(int *)(v352 + 32);
            v354 = (char *)a1 + v353;
            v355 = (char *)a2 + v353;
            v356 = type metadata accessor for Location(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v355, 1, v356))
            {
              v357 = sub_1000BA294(&qword_100BC35F8);
              memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v357 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 32))(v354, v355, v356);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v354, 0, 1, v356);
            }
            v362 = *(int *)(v352 + 36);
            v363 = (char *)a1 + v362;
            v364 = (char *)a2 + v362;
            *(_OWORD *)v363 = *(_OWORD *)v364;
            v363[16] = v364[16];
            v210 = a1;
            v211 = v207;
            v212 = 2;
          }
          else if (v208 == 1)
          {
            v358 = type metadata accessor for LocationOfInterest(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v358 - 8) + 32))(a1, a2, v358);
            v210 = a1;
            v211 = v207;
            v212 = 1;
          }
          else
          {
            if (v208)
            {
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
LABEL_231:
              v254 = a1;
              v255 = v127;
              v256 = 1;
              goto LABEL_232;
            }
            v209 = type metadata accessor for Location(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(a1, a2, v209);
            v210 = a1;
            v211 = v207;
            v212 = 0;
          }
          swift_storeEnumTagMultiPayload(v210, v211, v212);
          goto LABEL_231;
        }
        v121 = type metadata accessor for ConfiguredUnitsAction(0);
        v122 = swift_getEnumCaseMultiPayload(a2);
        if (v122 == 1)
        {
          v205 = type metadata accessor for UnitConfiguration.Temperature(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v205))
          {
            v206 = sub_1000BA294(&qword_100BD7148);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(a1, a2, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v205);
          }
          v124 = a1;
          v125 = v121;
          v126 = 1;
        }
        else
        {
          if (v122)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
LABEL_175:
            v53 = a1;
            v54 = v50;
            v55 = 10;
            goto LABEL_234;
          }
          v123 = type metadata accessor for ConfiguredUnit(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(a1, a2, v123);
          v124 = a1;
          v125 = v121;
          v126 = 0;
        }
        swift_storeEnumTagMultiPayload(v124, v125, v126);
        goto LABEL_175;
      case 3u:
        v56 = type metadata accessor for LocationsAction(0);
        v57 = swift_getEnumCaseMultiPayload(a2);
        if (v57 == 1)
        {
          v94 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(a1, a2, v94);
          v95 = sub_1000BA294(&qword_100BDEBF8);
          *((_BYTE *)a1 + *(int *)(v95 + 48)) = *((_BYTE *)a2 + *(int *)(v95 + 48));
          v96 = a1;
          v97 = v56;
          v98 = 1;
          goto LABEL_127;
        }
        if (v57)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          goto LABEL_128;
        }
        v58 = type metadata accessor for CurrentLocation(0);
        v59 = swift_getEnumCaseMultiPayload(a2);
        if (v59 == 2)
        {
          v203 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(a1, a2, v203);
          v61 = a1;
          v62 = v58;
          v63 = 2;
        }
        else if (v59 == 1)
        {
          v204 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(a1, a2, v204);
          v61 = a1;
          v62 = v58;
          v63 = 1;
        }
        else
        {
          if (v59)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
LABEL_126:
            v96 = a1;
            v97 = v56;
            v98 = 0;
LABEL_127:
            swift_storeEnumTagMultiPayload(v96, v97, v98);
LABEL_128:
            v7 = a1;
            v8 = a3;
            v9 = 3;
            goto LABEL_236;
          }
          v60 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
          v61 = a1;
          v62 = v58;
          v63 = 0;
        }
        swift_storeEnumTagMultiPayload(v61, v62, v63);
        goto LABEL_126;
      case 4u:
        v64 = type metadata accessor for NotificationsAction(0);
        v65 = swift_getEnumCaseMultiPayload(a2);
        switch(v65)
        {
          case 5:
            v132 = type metadata accessor for Location(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(a1, a2, v132);
            v133 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
            v134 = (char *)a1 + v133;
            v135 = (char *)a2 + v133;
            v136 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
            v118 = a1;
            v119 = v64;
            v120 = 5;
            break;
          case 2:
            v113 = type metadata accessor for NotificationSubscription.Location(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(a1, a2, v113);
            v114 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
            v115 = (char *)a1 + v114;
            v116 = (char *)a2 + v114;
            v117 = type metadata accessor for NotificationSubscription.Kind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
            v118 = a1;
            v119 = v64;
            v120 = 2;
            break;
          case 1:
            v66 = type metadata accessor for LocationModel(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v66))
            {
              v67 = type metadata accessor for NotificationLocation(0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v66);
            }
            v198 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
            v199 = (char *)a1 + v198;
            v200 = (char *)a2 + v198;
            v201 = type metadata accessor for URL(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
            {
              v202 = sub_1000BA294(&qword_100BD4280);
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 32))(v199, v200, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
            }
            v118 = a1;
            v119 = v64;
            v120 = 1;
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
            goto LABEL_121;
        }
        swift_storeEnumTagMultiPayload(v118, v119, v120);
LABEL_121:
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_236;
      case 5u:
        v10 = type metadata accessor for NotificationsOptInAction(0);
        v11 = swift_getEnumCaseMultiPayload(a2);
        if (v11 == 4)
        {
          v92 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(a1, a2, v92);
          v14 = a1;
          v15 = v10;
          v16 = 4;
        }
        else
        {
          if (v11 != 2)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_58:
            v7 = a1;
            v8 = a3;
            v9 = 5;
            goto LABEL_236;
          }
          v12 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
          v13 = sub_1000BA294(&qword_100BCB648);
          *((_BYTE *)a1 + *(int *)(v13 + 48)) = *((_BYTE *)a2 + *(int *)(v13 + 48));
          v14 = a1;
          v15 = v10;
          v16 = 2;
        }
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        goto LABEL_58;
      case 6u:
        v17 = type metadata accessor for ViewAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v18 = type metadata accessor for ListViewAction(0);
            v19 = swift_getEnumCaseMultiPayload(a2);
            if (v19 == 2)
            {
              v236 = type metadata accessor for Location.Identifier(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(a1, a2, v236);
              v22 = a1;
              v23 = v18;
              v24 = 2;
            }
            else
            {
              if (v19)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                goto LABEL_153;
              }
              v20 = type metadata accessor for LocationModel(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
              v21 = sub_1000BA294(&qword_100BDDB50);
              *((_BYTE *)a1 + *(int *)(v21 + 48)) = *((_BYTE *)a2 + *(int *)(v21 + 48));
              v22 = a1;
              v23 = v18;
              v24 = 0;
            }
            swift_storeEnumTagMultiPayload(v22, v23, v24);
LABEL_153:
            v194 = a1;
            v195 = v17;
            v196 = 0;
            goto LABEL_226;
          case 1u:
            v174 = type metadata accessor for LocationViewerViewAction(0);
            v175 = swift_getEnumCaseMultiPayload(a2);
            if (v175 == 2)
            {
              v257 = type metadata accessor for Location.Identifier(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(a1, a2, v257);
              v177 = a1;
              v178 = v174;
              v179 = 2;
            }
            else if (v175 == 1)
            {
              v258 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(a1, a2, v258);
              v177 = a1;
              v178 = v174;
              v179 = 1;
            }
            else
            {
              if (v175)
              {
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
LABEL_171:
                v194 = a1;
                v195 = v17;
                v196 = 1;
LABEL_226:
                swift_storeEnumTagMultiPayload(v194, v195, v196);
LABEL_227:
                v7 = a1;
                v8 = a3;
                v9 = 6;
LABEL_236:
                swift_storeEnumTagMultiPayload(v7, v8, v9);
                return a1;
              }
              v176 = type metadata accessor for LocationModel(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(a1, a2, v176);
              v177 = a1;
              v178 = v174;
              v179 = 0;
            }
            swift_storeEnumTagMultiPayload(v177, v178, v179);
            goto LABEL_171;
          case 3u:
            v180 = type metadata accessor for SearchViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v181 = type metadata accessor for CodableError(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(a1, a2, v181);
                v182 = a1;
                v183 = v180;
                v184 = 0;
                goto LABEL_224;
              case 3u:
                v259 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v259 - 8) + 32))(a1, a2, v259);
                v182 = a1;
                v183 = v180;
                v184 = 3;
                goto LABEL_224;
              case 4u:
                v260 = type metadata accessor for LocationOfInterest(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(a1, a2, v260);
                v182 = a1;
                v183 = v180;
                v184 = 4;
                goto LABEL_224;
              case 5u:
                *a1 = *a2;
                *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
                *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
                *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
                v261 = type metadata accessor for SearchLocation(0);
                v262 = *(int *)(v261 + 32);
                v263 = (char *)a1 + v262;
                v264 = (char *)a2 + v262;
                v265 = type metadata accessor for Location(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
                {
                  v266 = sub_1000BA294(&qword_100BC35F8);
                  memcpy(v263, v264, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v263, v264, v265);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v265);
                }
                v359 = *(int *)(v261 + 36);
                v360 = (char *)a1 + v359;
                v361 = (char *)a2 + v359;
                *(_OWORD *)v360 = *(_OWORD *)v361;
                v360[16] = v361[16];
                v182 = a1;
                v183 = v180;
                v184 = 5;
                goto LABEL_224;
              case 6u:
                v267 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(a1, a2, v267);
                v182 = a1;
                v183 = v180;
                v184 = 6;
LABEL_224:
                swift_storeEnumTagMultiPayload(v182, v183, v184);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
                break;
            }
            v194 = a1;
            v195 = v17;
            v196 = 3;
            goto LABEL_226;
          case 4u:
            v185 = type metadata accessor for InteractiveMapViewAction(0);
            switch(swift_getEnumCaseMultiPayload(a2))
            {
              case 0u:
                v186 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(a1, a2, v186);
                v187 = a1;
                v188 = v185;
                v189 = 0;
                goto LABEL_187;
              case 1u:
                v268 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v268 - 8) + 32))(a1, a2, v268);
                v187 = a1;
                v188 = v185;
                v189 = 1;
                goto LABEL_187;
              case 2u:
                v269 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v269 - 8) + 32))(a1, a2, v269);
                v187 = a1;
                v188 = v185;
                v189 = 2;
                goto LABEL_187;
              case 3u:
                v270 = type metadata accessor for WeatherMapOverlayKind(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(a1, a2, v270);
                v187 = a1;
                v188 = v185;
                v189 = 3;
                goto LABEL_187;
              case 4u:
                v271 = type metadata accessor for Location(0);
                (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(a1, a2, v271);
                v187 = a1;
                v188 = v185;
                v189 = 4;
LABEL_187:
                swift_storeEnumTagMultiPayload(v187, v188, v189);
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
                break;
            }
            v194 = a1;
            v195 = v17;
            v196 = 4;
            goto LABEL_226;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
            *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
            *((_BYTE *)a1 + 18) = *((_BYTE *)a2 + 18);
            v190 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
            v191 = (char *)a1 + v190;
            v192 = (char *)a2 + v190;
            v193 = type metadata accessor for DynamicTypeSize(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(v191, v192, v193);
            v194 = a1;
            v195 = v17;
            v196 = 5;
            goto LABEL_226;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            goto LABEL_227;
        }
      case 7u:
        v68 = type metadata accessor for ModalViewAction(0);
        if (swift_getEnumCaseMultiPayload(a2))
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          v90 = type metadata accessor for LocationPreviewViewAction(0);
          if (swift_getEnumCaseMultiPayload(a2) == 1)
          {
            v91 = type metadata accessor for Location(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(a1, a2, v91);
            swift_storeEnumTagMultiPayload(a1, v90, 1);
          }
          else
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          }
          swift_storeEnumTagMultiPayload(a1, v68, 0);
        }
        v7 = a1;
        v8 = a3;
        v9 = 7;
        goto LABEL_236;
      case 8u:
        v69 = type metadata accessor for LocationViewAction(0);
        v70 = swift_getEnumCaseMultiPayload(a2);
        if (v70 == 2)
        {
          v137 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(a1, a2, v137);
          v138 = *(int *)(sub_1000BA294(&qword_100BC5FC0) + 48);
          v139 = (char *)a1 + v138;
          v140 = (char *)a2 + v138;
          v141 = type metadata accessor for LocationOfInterest(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v139, v140, v141);
          v142 = *(int *)(sub_1000BA294(&qword_100BC5FB8) + 48);
          v143 = (char *)a1 + v142;
          v144 = (char *)a2 + v142;
          v145 = *((_OWORD *)v144 + 1);
          *(_OWORD *)v143 = *(_OWORD *)v144;
          *((_OWORD *)v143 + 1) = v145;
          v143[32] = v144[32];
          v72 = a1;
          v73 = v69;
          v74 = 2;
        }
        else if (v70 == 1)
        {
          v146 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload(a2))
          {
            case 0u:
              v147 = type metadata accessor for URL(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(a1, a2, v147);
              v148 = sub_1000BA294(&qword_100BC5FE8);
              *((_BYTE *)a1 + *(int *)(v148 + 48)) = *((_BYTE *)a2 + *(int *)(v148 + 48));
              v149 = a1;
              v150 = v146;
              v151 = 0;
              goto LABEL_158;
            case 1u:
              v237 = type metadata accessor for WeatherMapOverlayKind(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(a1, a2, v237);
              v149 = a1;
              v150 = v146;
              v151 = 1;
              goto LABEL_158;
            case 2u:
              v238 = type metadata accessor for DetailCondition(0);
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v238 - 8) + 32))(a1, a2, v238);
              v239 = sub_1000BA294(&qword_100BC5FF8);
              *((_BYTE *)a1 + *(int *)(v239 + 48)) = *((_BYTE *)a2 + *(int *)(v239 + 48));
              v149 = a1;
              v150 = v146;
              v151 = 2;
              goto LABEL_158;
            case 4u:
              *(_BYTE *)a1 = *(_BYTE *)a2;
              v240 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
              v241 = (char *)a1 + v240;
              v242 = (char *)a2 + v240;
              v243 = type metadata accessor for Location(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v241, v242, v243);
              v149 = a1;
              v150 = v146;
              v151 = 4;
LABEL_158:
              swift_storeEnumTagMultiPayload(v149, v150, v151);
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
              break;
          }
          v244 = sub_1000BA294(&qword_100BC5FC8);
          v245 = *(int *)(v244 + 48);
          v246 = (char *)a1 + v245;
          v247 = (char *)a2 + v245;
          v248 = *((_OWORD *)v247 + 1);
          *(_OWORD *)v246 = *(_OWORD *)v247;
          *((_OWORD *)v246 + 1) = v248;
          v246[32] = v247[32];
          v249 = *(int *)(v244 + 64);
          v250 = (char *)a1 + v249;
          v251 = (char *)a2 + v249;
          v252 = type metadata accessor for Date(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251, 1, v252))
          {
            v253 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
            memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v251, v252);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v250, 0, 1, v252);
          }
          v72 = a1;
          v73 = v69;
          v74 = 1;
        }
        else
        {
          if (v70)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            goto LABEL_164;
          }
          v71 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
          v72 = a1;
          v73 = v69;
          v74 = 0;
        }
        swift_storeEnumTagMultiPayload(v72, v73, v74);
LABEL_164:
        v7 = a1;
        v8 = a3;
        v9 = 8;
        goto LABEL_236;
      case 9u:
        v75 = type metadata accessor for WeatherDataAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 4u:
            v366 = v75;
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v76 = sub_1000BA294(&qword_100BCB630);
            v77 = *(int *)(v76 + 48);
            v78 = (char *)a1 + v77;
            v79 = (char *)a2 + v77;
            *(_OWORD *)((char *)a1 + v77) = *(_OWORD *)((char *)a2 + v77);
            v80 = (int *)type metadata accessor for WeatherData(0);
            v81 = v80[5];
            v82 = &v78[v81];
            v83 = &v79[v81];
            v84 = type metadata accessor for Locale(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
            {
              v85 = sub_1000BA294(&qword_100BC3340);
              memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
            }
            v213 = v80[6];
            v214 = &v78[v213];
            v215 = &v79[v213];
            v216 = type metadata accessor for WeatherDataModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v214, v215, v216);
            v217 = v80[7];
            v218 = &v78[v217];
            v219 = &v79[v217];
            v220 = sub_1000BA294(&qword_100BC3348);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v220))
            {
              v221 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
            }
            else
            {
              v223 = type metadata accessor for Date(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v218, v219, v223);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v220);
            }
            v224 = v80[8];
            v225 = &v78[v224];
            v226 = &v79[v224];
            v227 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload(v226) == 1)
            {
              v228 = type metadata accessor for WeatherStatisticsModel(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 32))(v225, v226, v228);
              swift_storeEnumTagMultiPayload(v225, v227, 1);
            }
            else
            {
              memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
            }
            v229 = v80[9];
            v230 = &v78[v229];
            v231 = &v79[v229];
            v232 = type metadata accessor for WeatherDataOverrides(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, v232))
            {
              v233 = sub_1000BA294(&qword_100BC3350);
              memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
            }
            else
            {
              v234 = type metadata accessor for Date(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, v234))
              {
                v235 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v230, v231, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v230, v231, v234);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v234);
              }
              v272 = *(int *)(v232 + 20);
              v273 = &v230[v272];
              v274 = &v231[v272];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v234))
              {
                v275 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
                memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 32))(v273, v274, v234);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v234);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v232);
            }
            v372 = v76;
            v276 = *(int *)(v76 + 64);
            v277 = (char *)a1 + v276;
            v278 = (char *)a2 + v276;
            v279 = type metadata accessor for UUID(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 32))(v277, v278, v279);
            v280 = type metadata accessor for PreprocessedWeatherData(0);
            *(_QWORD *)&v277[*(int *)(v280 + 20)] = *(_QWORD *)&v278[*(int *)(v280 + 20)];
            v374 = (int *)v280;
            v281 = *(int *)(v280 + 24);
            v371 = v277;
            v282 = &v277[v281];
            v283 = &v278[v281];
            v284 = *(_OWORD *)&v278[v281 + 16];
            *(_OWORD *)v282 = *(_OWORD *)&v278[v281];
            *((_OWORD *)v282 + 1) = v284;
            *((_OWORD *)v282 + 2) = *(_OWORD *)&v278[v281 + 32];
            v285 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel(0);
            v286 = *(int *)(v285 + 28);
            v287 = &v282[v286];
            v288 = &v283[v286];
            v289 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            v373 = v278;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v288, 1, v289))
            {
              v290 = sub_1000BA294(&qword_100BC3360);
              memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v287 = *(_OWORD *)v288;
              v291 = *(int *)(v289 + 20);
              v292 = &v287[v291];
              v293 = &v288[v291];
              v294 = type metadata accessor for TemperatureScaleConfiguration(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v292, v293, v294);
              v295 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(_QWORD *)&v292[v295[5]] = *(_QWORD *)&v293[v295[5]];
              *(_QWORD *)&v292[v295[6]] = *(_QWORD *)&v293[v295[6]];
              *(_QWORD *)&v292[v295[7]] = *(_QWORD *)&v293[v295[7]];
              *(_OWORD *)&v292[v295[8]] = *(_OWORD *)&v293[v295[8]];
              v292[v295[9]] = v293[v295[9]];
              v278 = v373;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v287, 0, 1, v289);
            }
            *(_OWORD *)&v282[*(int *)(v285 + 32)] = *(_OWORD *)&v283[*(int *)(v285 + 32)];
            v296 = v374[7];
            v297 = &v371[v296];
            v298 = &v278[v296];
            *(_QWORD *)&v371[v296] = *(_QWORD *)&v278[v296];
            v299 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
            v300 = &v297[v299];
            v301 = &v298[v299];
            v302 = type metadata accessor for WeatherDescription(0);
            v367 = v302;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v301, 1, v302))
            {
              v303 = sub_1000BA294(&qword_100BC3368);
              memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v300, v301, v302);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v300, 0, 1, v302);
            }
            v304 = v374[8];
            v305 = &v371[v304];
            v306 = &v278[v304];
            v307 = *(_OWORD *)&v278[v304 + 16];
            *(_OWORD *)v305 = *(_OWORD *)&v278[v304];
            *((_OWORD *)v305 + 1) = v307;
            v308 = *(_OWORD *)&v278[v304 + 48];
            *((_OWORD *)v305 + 2) = *(_OWORD *)&v278[v304 + 32];
            *((_OWORD *)v305 + 3) = v308;
            v309 = *(int *)(type metadata accessor for ListPreprocessedDataModel(0) + 32);
            v310 = &v305[v309];
            v311 = &v306[v309];
            v370 = type metadata accessor for Date(0);
            v368 = *(void (**)(char *, char *))(*(_QWORD *)(v370 - 8) + 32);
            v368(v310, v311);
            v312 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
            v313 = *(int *)(v312 + 20);
            v314 = &v310[v313];
            v315 = &v311[v313];
            v316 = type metadata accessor for Elevation(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v315, 1, v316))
            {
              v317 = sub_1000BA294(&qword_100BC3370);
              memcpy(v314, v315, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v314, v315, v316);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v314, 0, 1, v316);
            }
            v318 = *(int *)(v312 + 24);
            v319 = &v310[v318];
            v320 = &v311[v318];
            v321 = type metadata accessor for BackgroundMoonData(0);
            v369 = v321;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v320, 1, v321))
            {
              v322 = sub_1000BA294(&qword_100BC3378);
              memcpy(v319, v320, *(_QWORD *)(*(_QWORD *)(v322 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 32))(v319, v320, v321);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v319, 0, 1, v321);
            }
            memcpy(&v371[v374[9]], &v373[v374[9]], 0x70uLL);
            v323 = v374[10];
            v324 = &v371[v323];
            v325 = &v373[v323];
            (*(void (**)(char *, char *))(*(_QWORD *)(v367 - 8) + 32))(&v371[v323], &v373[v323]);
            v326 = type metadata accessor for UVIndexComponentPreprocessedDataModel(0);
            *(_OWORD *)&v324[*(int *)(v326 + 20)] = *(_OWORD *)&v325[*(int *)(v326 + 20)];
            v327 = v374[11];
            v328 = &v371[v327];
            v329 = &v373[v327];
            v330 = *((_OWORD *)v329 + 1);
            *(_OWORD *)v328 = *(_OWORD *)v329;
            *((_OWORD *)v328 + 1) = v330;
            *((_OWORD *)v328 + 2) = *((_OWORD *)v329 + 2);
            v331 = v374[12];
            v332 = &v371[v331];
            v333 = &v373[v331];
            v334 = type metadata accessor for PressureTrend(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(v332, v333, v334);
            v335 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
            *(_OWORD *)&v332[v335[5]] = *(_OWORD *)&v333[v335[5]];
            *(_OWORD *)&v332[v335[6]] = *(_OWORD *)&v333[v335[6]];
            *(_OWORD *)&v332[v335[7]] = *(_OWORD *)&v333[v335[7]];
            *(_QWORD *)&v332[v335[8]] = *(_QWORD *)&v333[v335[8]];
            *(_OWORD *)&v332[v335[9]] = *(_OWORD *)&v333[v335[9]];
            memcpy(&v371[v374[13]], &v373[v374[13]], 0xE8uLL);
            v336 = v374[14];
            v337 = &v371[v336];
            v338 = &v373[v336];
            ((void (*)(char *, char *, uint64_t))v368)(&v371[v336], &v373[v336], v370);
            v339 = *(int *)(v312 + 20);
            v340 = &v337[v339];
            v341 = &v338[v339];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v338[v339], 1, v316))
            {
              v342 = sub_1000BA294(&qword_100BC3370);
              memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v342 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(v340, v341, v316);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v340, 0, 1, v316);
            }
            v343 = *(int *)(v312 + 24);
            v344 = &v337[v343];
            v345 = &v338[v343];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v338[v343], 1, v369))
            {
              v346 = sub_1000BA294(&qword_100BC3378);
              memcpy(v344, v345, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v344, v345, v369);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v369);
            }
            memcpy(&v371[v374[15]], &v373[v374[15]], 0x70uLL);
            v347 = *(int *)(v372 + 80);
            v348 = (char *)a1 + v347;
            v349 = (char *)a2 + v347;
            v350 = type metadata accessor for NewsDataModel(0);
            if (swift_getEnumCaseMultiPayload(v349))
            {
              memcpy(v348, v349, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
            }
            else
            {
              v351 = type metadata accessor for News(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 32))(v348, v349, v351);
              swift_storeEnumTagMultiPayload(v348, v350, 0);
            }
            v167 = a1;
            v168 = v366;
            v169 = 4;
            goto LABEL_216;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v159 = *(int *)(sub_1000BA294(&qword_100BCB620) + 48);
            v160 = (char *)a1 + v159;
            v161 = (char *)a2 + v159;
            v162 = type metadata accessor for NewsDataModel(0);
            if (swift_getEnumCaseMultiPayload(v161))
            {
              memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
            }
            else
            {
              v222 = type metadata accessor for News(0);
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v160, v161, v222);
              swift_storeEnumTagMultiPayload(v160, v162, 0);
            }
            v167 = a1;
            v168 = v75;
            v169 = 5;
            goto LABEL_216;
          case 6u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v163 = *(int *)(sub_1000BA294(&qword_100BCB628) + 48);
            v164 = (char *)a1 + v163;
            v165 = (char *)a2 + v163;
            v166 = type metadata accessor for AvailableDataSets(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
            v167 = a1;
            v168 = v75;
            v169 = 6;
            goto LABEL_216;
          case 8u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v170 = *(int *)(sub_1000BA294(&qword_100BCB618) + 48);
            v171 = (char *)a1 + v170;
            v172 = (char *)a2 + v170;
            v173 = type metadata accessor for WeatherStatisticsModel(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v171, v172, v173);
            v167 = a1;
            v168 = v75;
            v169 = 8;
LABEL_216:
            swift_storeEnumTagMultiPayload(v167, v168, v169);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            break;
        }
        v7 = a1;
        v8 = a3;
        v9 = 9;
        goto LABEL_236;
      case 0xAu:
        v86 = type metadata accessor for DebugAction(0);
        v87 = swift_getEnumCaseMultiPayload(a2);
        if (v87 == 1)
        {
          v99 = type metadata accessor for Location(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(a1, a2, v99);
          v100 = a1;
          v101 = v86;
          v102 = 1;
        }
        else
        {
          if (v87)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
            goto LABEL_114;
          }
          v88 = type metadata accessor for WeatherCondition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v88))
          {
            v89 = sub_1000BA294(&qword_100BC3660);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(a1, a2, v88);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v88);
          }
          v197 = sub_1000BA294(&qword_100BD0A98);
          *(_OWORD *)((char *)a1 + *(int *)(v197 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v197 + 48));
          v100 = a1;
          v101 = v86;
          v102 = 0;
        }
        swift_storeEnumTagMultiPayload(v100, v101, v102);
LABEL_114:
        v7 = a1;
        v8 = a3;
        v9 = 10;
        goto LABEL_236;
      case 0xBu:
        v25 = type metadata accessor for ConditionDetailViewAction(0);
        v26 = swift_getEnumCaseMultiPayload(a2);
        if (v26 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v103 = (int *)type metadata accessor for DetailChartSelection(0);
          v104 = v103[5];
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = type metadata accessor for Date(0);
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32);
          v108(v105, v106, v107);
          v108((char *)a1 + v103[6], (char *)a2 + v103[6], v107);
          v108((char *)a1 + v103[7], (char *)a2 + v103[7], v107);
          *(_QWORD *)((char *)a1 + v103[8]) = *(_QWORD *)((char *)a2 + v103[8]);
          v109 = v103[9];
          v110 = (char *)a1 + v109;
          v111 = (char *)a2 + v109;
          v110[8] = v111[8];
          *(_QWORD *)v110 = *(_QWORD *)v111;
          v28 = a1;
          v29 = v25;
          v30 = 2;
        }
        else if (v26 == 1)
        {
          v112 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(a1, a2, v112);
          v28 = a1;
          v29 = v25;
          v30 = 1;
        }
        else
        {
          if (v26)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_71:
            v7 = a1;
            v8 = a3;
            v9 = 11;
            goto LABEL_236;
          }
          v27 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
          v28 = a1;
          v29 = v25;
          v30 = 0;
        }
        swift_storeEnumTagMultiPayload(v28, v29, v30);
        goto LABEL_71;
      case 0xDu:
        v31 = type metadata accessor for MoonDetailViewAction(0);
        v32 = swift_getEnumCaseMultiPayload(a2);
        if (v32 == 1)
        {
          v93 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(a1, a2, v93);
          v36 = a1;
          v37 = v31;
          v38 = 1;
        }
        else
        {
          if (v32)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_62:
            v7 = a1;
            v8 = a3;
            v9 = 13;
            goto LABEL_236;
          }
          v33 = type metadata accessor for MoonDetailSelectedDate(0);
          v34 = swift_getEnumCaseMultiPayload(a2);
          v35 = type metadata accessor for Date(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(a1, a2, v35);
          swift_storeEnumTagMultiPayload(a1, v33, v34);
          v36 = a1;
          v37 = v31;
          v38 = 0;
        }
        swift_storeEnumTagMultiPayload(v36, v37, v38);
        goto LABEL_62;
      case 0xEu:
        v39 = type metadata accessor for AveragesDetailViewAction(0);
        if (swift_getEnumCaseMultiPayload(a2) == 1)
        {
          *a1 = *a2;
          v40 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          v41 = v40[5];
          v42 = (char *)a1 + v41;
          v43 = (char *)a2 + v41;
          v44 = type metadata accessor for Date(0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
          *(_QWORD *)((char *)a1 + v40[6]) = *(_QWORD *)((char *)a2 + v40[6]);
          *(_QWORD *)((char *)a1 + v40[7]) = *(_QWORD *)((char *)a2 + v40[7]);
          swift_storeEnumTagMultiPayload(a1, v39, 1);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        v7 = a1;
        v8 = a3;
        v9 = 14;
        goto LABEL_236;
      case 0x11u:
        v45 = type metadata accessor for PerformanceTestAction(0);
        switch(swift_getEnumCaseMultiPayload(a2))
        {
          case 0u:
            v46 = type metadata accessor for DetailCondition(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(a1, a2, v46);
            v47 = a1;
            v48 = v45;
            v49 = 0;
            goto LABEL_91;
          case 2u:
            v152 = type metadata accessor for Location(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(a1, a2, v152);
            v47 = a1;
            v48 = v45;
            v49 = 2;
            goto LABEL_91;
          case 3u:
            *a1 = *a2;
            v153 = sub_1000BA294((uint64_t *)&unk_100BFFA70);
            v154 = *(int *)(v153 + 48);
            v155 = (char *)a1 + v154;
            v156 = (char *)a2 + v154;
            v157 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
            *((_BYTE *)a1 + *(int *)(v153 + 64)) = *((_BYTE *)a2 + *(int *)(v153 + 64));
            v47 = a1;
            v48 = v45;
            v49 = 3;
            goto LABEL_91;
          case 4u:
            v158 = type metadata accessor for WeatherCondition(0);
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(a1, a2, v158);
            v47 = a1;
            v48 = v45;
            v49 = 4;
LABEL_91:
            swift_storeEnumTagMultiPayload(v47, v48, v49);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
            break;
        }
        v7 = a1;
        v8 = a3;
        v9 = 17;
        goto LABEL_236;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1003DC300()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[6];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009FFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.utility(_:), v7);
  v11 = (void *)static OS_dispatch_queue.global(qos:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_1003DC50C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B71BC0;
  v12 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_1001221E0();
  v15 = sub_1000BA294(&qword_100BD4F10);
  v16 = sub_100121014();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v0, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v2, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1003DC50C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  if (qword_100BC2488 != -1)
    swift_once(&qword_100BC2488, sub_1001597A0);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_1000AECD4(v0, (uint64_t)qword_100CAF180);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting widget timeline reload", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  type metadata accessor for WidgetCenter(0);
  v5 = static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();
  swift_release(v5);
  oslog = Logger.logObject.getter(v6);
  v7 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Finished widget timeline reload", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

}

uint64_t sub_1003DC674(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v15;
  void *v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    swift_retain();
    asyncMain(block:)(sub_1003DC9DC, v1);
    return swift_release(v1);
  }
  else
  {
    sub_10009FFE0();
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.utility(_:), v10);
    v15 = (void *)static OS_dispatch_queue.global(qos:)(v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    aBlock[4] = sub_1003DC8F0;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100088F7C;
    aBlock[3] = &unk_100B71BE8;
    v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v17);
    v22 = _swiftEmptyArrayStorage;
    v18 = sub_1001221E0();
    v19 = sub_1000BA294(&qword_100BD4F10);
    v20 = sub_100121014();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v19, v20, v3, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1003DC8C4()
{
  return Debounce.run(finished:)(LocationSearchEntityFromStringResolver.init(), 0);
}

void sub_1003DC8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  type metadata accessor for WidgetCenter(0);
  v0 = static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();
  swift_release(v0);
  if (qword_100BC2488 != -1)
    swift_once(&qword_100BC2488, sub_1001597A0);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000AECD4(v1, (uint64_t)qword_100CAF180);
  oslog = Logger.logObject.getter(v2);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Finished widget timeline reload without debounce", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

}

uint64_t sub_1003DC9DC()
{
  return sub_1003DC8C4();
}

uint64_t sub_1003DC9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, __n128 a4@<Q1>, __n128 a5@<Q2>)
{
  char v5;
  char v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  double v27;

  v5 = a5.n128_u8[0];
  v6 = a4.n128_u8[0];
  sub_1003DCABC(a1, a2);
  type metadata accessor for FeelsLikeComponentVarianceView(0);
  v27 = a3;
  v26 = 0x401C000000000000;
  v8 = sub_10010FE84();
  v9 = ScaledValue.init(wrappedValue:step:)(&v27, &v26, &type metadata for CGFloat, v8);
  v17 = sub_1000C48E8(v9, v10, v11, v12, v13, v14, v15, v16, v26, v6);
  return sub_1000C48E8(v17, v18, v19, v20, v21, v22, v23, v24, v26, v5);
}

uint64_t sub_1003DCABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeelsLikeComponentVarianceView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDEDC8, (uint64_t)&nominal type descriptor for FeelsLikeComponentVarianceView);
}

_QWORD *sub_1003DCB14(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)((char *)a1 + v8[5]) = *(_QWORD *)((char *)a2 + v8[5]);
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v9 = v8[8];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain(v12);
    v17 = sub_1000BA294(&qword_100BDACA8);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18((char *)a1 + a3[6], (char *)a2 + a3[6], v17);
    v18((char *)a1 + a3[7], (char *)a2 + a3[7], v17);
  }
  return a1;
}

uint64_t sub_1003DCC50(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[5];
  v6 = sub_1000BA294(&qword_100BDACA8);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  v8(a1 + a2[6], v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + a2[7], v6);
}

uint64_t sub_1003DCD0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = a3[5];
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain(v11);
  v16 = sub_1000BA294(&qword_100BDACA8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v17(a1 + a3[6], a2 + a3[6], v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  return a1;
}

uint64_t sub_1003DCE1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1000BA294(&qword_100BDACA8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + a3[6], a2 + a3[6], v15);
  v16(a1 + a3[7], a2 + a3[7], v15);
  return a1;
}

uint64_t sub_1003DCF40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1000BA294(&qword_100BDACA8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  v12(a1 + a3[7], a2 + a3[7], v11);
  return a1;
}

uint64_t sub_1003DD040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(a1 + v7[5]) = *(_QWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = a3[5];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1000BA294(&qword_100BDACA8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(a1 + a3[6], a2 + a3[6], v16);
  v17(a1 + a3[7], a2 + a3[7], v16);
  return a1;
}

uint64_t sub_1003DD154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DD160);
}

uint64_t sub_1003DD160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000C1494();
  sub_100088FF0();
  if (v7)
  {
    v8 = v6;
    v9 = a1;
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BDACA8);
    v9 = a1 + *(int *)(a3 + 20);
  }
  return sub_1000B250C(v9, a2, v8);
}

uint64_t sub_1003DD1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DD1C4);
}

uint64_t sub_1003DD1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_1000C1494();
  sub_10009D2E8();
  if (v8)
  {
    v9 = v7;
    v10 = a1;
  }
  else
  {
    v9 = sub_1000BA294(&qword_100BDACA8);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return sub_1000987C4(v10, a2, a2, v9);
}

void sub_1003DD224(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_1003688E4(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = v7;
      swift_initStructMetadata(a1, 256, 4, &v6, a1 + 16);
    }
  }
}

uint64_t sub_1003DD2AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB36EC, 1);
}

void sub_1003DD2BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = static VerticalAlignment.center.getter(a1);
  type metadata accessor for FeelsLikeComponentVarianceView(0);
  v5 = sub_1000BA294(&qword_100BDACA8);
  ScaledValue.wrappedValue.getter(&v8, v5);
  v6 = v8;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = 0;
  v7 = sub_1000BA294(&qword_100BDEE08);
  sub_1003DD340(v2, a2 + *(int *)(v7 + 44));
}

void sub_1003DD340(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v74 = a2;
  v68 = sub_1000BA294(&qword_100BDEE10);
  __chkstk_darwin(v68);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1000BA294(&qword_100BDEE18);
  __chkstk_darwin(v71);
  v73 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1000BA294(&qword_100BDEE20);
  __chkstk_darwin(v72);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TemperatureVarianceView(0);
  __chkstk_darwin(v11);
  v69 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - v14;
  v16 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1000BA294(&qword_100BDEE28);
  __chkstk_darwin(v66);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1000BA294(&qword_100BDEE30);
  __chkstk_darwin(v67);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v70 = (uint64_t)&v64 - v24;
  if (*(double *)(a1 + *(int *)(v8 + 20)) >= *(double *)(a1 + *(int *)(v8 + 24)))
  {
    sub_10000AB54(a1, (uint64_t)v10, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
    *(_QWORD *)v15 = swift_getKeyPath(&unk_10099C940);
    *((_WORD *)v15 + 4) = 0;
    v76 = 0x3FF0000000000000;
    *(_QWORD *)&v77 = 0x4010000000000000;
    v46 = sub_10010FE84();
    ScaledValue.init(wrappedValue:step:)(&v77, &v76, &type metadata for CGFloat, v46);
    Text.Measurements.init()(v47);
    sub_1003DCABC((uint64_t)v10, (uint64_t)&v15[*(int *)(v11 + 24)]);
    v48 = enum case for RoundedCornerStyle.continuous(_:);
    v49 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v18, v48, v49);
    type metadata accessor for FeelsLikeComponentVarianceView(0);
    v50 = sub_1000BA294(&qword_100BDACA8);
    ScaledValue.wrappedValue.getter(&v77, v50);
    v51 = v77;
    v52 = ScaledValue.wrappedValue.getter(&v77, v50);
    v53 = v77;
    static Alignment.center.getter(v52);
    _FrameLayout.init(width:height:alignment:)(v51, 0, v53, 0);
    sub_10000AB54((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v54 = &v20[*(int *)(v66 + 36)];
    v55 = v78;
    *(_OWORD *)v54 = v77;
    *((_OWORD *)v54 + 1) = v55;
    *((_OWORD *)v54 + 2) = v79;
    sub_1000215BC((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    LODWORD(v53) = static HierarchicalShapeStyle.primary.getter(v56);
    sub_100037794((uint64_t)v20, (uint64_t)v22, &qword_100BDEE28);
    *(_DWORD *)&v22[*(int *)(v67 + 36)] = v53;
    sub_100021A14((uint64_t)v20, &qword_100BDEE28);
    v57 = v70;
    sub_1000F111C((uint64_t)v22, v70, &qword_100BDEE30);
    v58 = v69;
    sub_10000AB54((uint64_t)v15, v69, type metadata accessor for TemperatureVarianceView);
    sub_100037794(v57, (uint64_t)v22, &qword_100BDEE30);
    sub_10000AB54(v58, (uint64_t)v4, type metadata accessor for TemperatureVarianceView);
    v59 = sub_1000BA294(&qword_100BDEE38);
    sub_100037794((uint64_t)v22, (uint64_t)&v4[*(int *)(v59 + 48)], &qword_100BDEE30);
    sub_100021A14((uint64_t)v22, &qword_100BDEE30);
    sub_1000215BC(v58, type metadata accessor for TemperatureVarianceView);
    v60 = v73;
    sub_100037794((uint64_t)v4, v73, &qword_100BDEE10);
    swift_storeEnumTagMultiPayload(v60, v71, 1);
    sub_10003D310(&qword_100BDEE40, &qword_100BDEE20, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v62 = v61;
    sub_10003D310(&qword_100BDEE48, &qword_100BDEE10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v60, v72, v68, v62, v63);
    sub_100021A14((uint64_t)v4, &qword_100BDEE10);
    sub_100021A14(v57, &qword_100BDEE30);
    sub_1000215BC((uint64_t)v15, type metadata accessor for TemperatureVarianceView);
  }
  else
  {
    v25 = enum case for RoundedCornerStyle.continuous(_:);
    v26 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v18, v25, v26);
    type metadata accessor for FeelsLikeComponentVarianceView(0);
    v64 = v10;
    v27 = sub_1000BA294(&qword_100BDACA8);
    v65 = v7;
    v28 = v27;
    ScaledValue.wrappedValue.getter(&v77, v27);
    v29 = v77;
    v30 = ScaledValue.wrappedValue.getter(&v77, v28);
    v31 = v77;
    static Alignment.center.getter(v30);
    _FrameLayout.init(width:height:alignment:)(v29, 0, v31, 0);
    sub_10000AB54((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v32 = &v20[*(int *)(v66 + 36)];
    v33 = v78;
    *(_OWORD *)v32 = v77;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v79;
    sub_1000215BC((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    LODWORD(v31) = static HierarchicalShapeStyle.primary.getter(v34);
    sub_100037794((uint64_t)v20, (uint64_t)v22, &qword_100BDEE28);
    *(_DWORD *)&v22[*(int *)(v67 + 36)] = v31;
    sub_100021A14((uint64_t)v20, &qword_100BDEE28);
    v35 = v70;
    sub_1000F111C((uint64_t)v22, v70, &qword_100BDEE30);
    v36 = (uint64_t)v64;
    sub_10000AB54(a1, (uint64_t)v64, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
    *(_QWORD *)v15 = swift_getKeyPath(&unk_10099C940);
    *((_WORD *)v15 + 4) = 0;
    v75 = 0x3FF0000000000000;
    v76 = 0x4010000000000000;
    v37 = sub_10010FE84();
    ScaledValue.init(wrappedValue:step:)(&v76, &v75, &type metadata for CGFloat, v37);
    Text.Measurements.init()(v38);
    sub_1003DCABC(v36, (uint64_t)&v15[*(int *)(v11 + 24)]);
    sub_100037794(v35, (uint64_t)v22, &qword_100BDEE30);
    v39 = v69;
    sub_10000AB54((uint64_t)v15, v69, type metadata accessor for TemperatureVarianceView);
    v40 = (uint64_t)v65;
    sub_100037794((uint64_t)v22, (uint64_t)v65, &qword_100BDEE30);
    v41 = sub_1000BA294(&qword_100BDEE50);
    sub_10000AB54(v39, v40 + *(int *)(v41 + 48), type metadata accessor for TemperatureVarianceView);
    sub_1000215BC(v39, type metadata accessor for TemperatureVarianceView);
    sub_100021A14((uint64_t)v22, &qword_100BDEE30);
    v42 = v73;
    sub_100037794(v40, v73, &qword_100BDEE20);
    swift_storeEnumTagMultiPayload(v42, v71, 0);
    sub_10003D310(&qword_100BDEE40, &qword_100BDEE20, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v44 = v43;
    sub_10003D310(&qword_100BDEE48, &qword_100BDEE10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v42, v72, v68, v44, v45);
    sub_100021A14(v40, &qword_100BDEE20);
    sub_1000215BC((uint64_t)v15, type metadata accessor for TemperatureVarianceView);
    sub_100021A14(v35, &qword_100BDEE30);
  }
}

uint64_t type metadata accessor for TemperatureVarianceView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDEEB0, (uint64_t)&nominal type descriptor for TemperatureVarianceView);
}

uint64_t sub_1003DDB5C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_BYTE *, _QWORD);
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[32];

  v1 = v0 + *(int *)(type metadata accessor for TemperatureVarianceView(0) + 24);
  LODWORD(v1) = *(unsigned __int8 *)(v1
                                   + *(int *)(type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0)
                                            + 36));
  type metadata accessor for Style(0);
  v2 = (void (*)(_BYTE *, _QWORD))static Style.dayVariance.modify(v6);
  if ((_DWORD)v1 == 1)
    v3 = WeatherDayVarianceViewStyle.gradientTrack.getter();
  else
    v3 = WeatherDayVarianceViewStyle.nightGradientTrack.getter();
  v4 = v3;
  v2(v6, 0);
  return v4;
}

uint64_t sub_1003DDBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  uint64_t v6;
  int *v7;
  double v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 2);
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
  v6 = v1 + *(int *)(type metadata accessor for TemperatureVarianceView(0) + 24);
  v7 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  v8 = *(double *)(v6 + v7[6]);
  v9 = *(double *)(v6 + v7[5]);
  if (v9 >= v8)
    v10 = 0x6F642E776F727261;
  else
    v10 = 0x70752E776F727261;
  if (v9 >= v8)
    v11 = 0xEA00000000006E77;
  else
    v11 = 0xE800000000000000;
  v12 = Image.init(systemName:)(v10, v11);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release(v12);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v13);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v6 + v7[8]));
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
  v15 = LocalizedStringKey.init(stringInterpolation:)(v4);
  v19 = Text.init(_:tableName:bundle:comment:)(v15, v17, v16 & 1, v18, 0, 0, 0, "Indicates the difference between the actual and feels like temperatures. The first argument is an arrow, up or down depending on the difference. The second argument is the difference.");
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = static Font.caption2.getter(v19);
  v27 = Text.font(_:)(v26, v19, v21, v25, v23);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v26);
  sub_1000D31B4(v19, v21, v25);
  swift_bridgeObjectRelease();
  v35 = static Font.Weight.semibold.getter(v34);
  v36 = Text.fontWeight(_:)(*(_QWORD *)&v35, 0, v27, v29, v31 & 1, v33);
  sub_1000D31B4(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1003DDE18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;

  v0 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TemperatureVarianceView(0);
  v3 = sub_1003DDBF4();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = type metadata accessor for Text.WritingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v10);
  v11 = Text.Measurements.size(of:in:writingMode:)(v3, v5, v9, v7, v2, INFINITY, INFINITY);
  v13 = v12;
  sub_1000D31B4(v3, v5, v9);
  swift_bridgeObjectRelease();
  sub_100021A14((uint64_t)v2, &qword_100BC39D0);
  return CGSize.adding(height:)(2.0, v11, v13);
}

double sub_1003DDF38(double a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  int *v8;
  double v9;

  sub_1003DDE18();
  v4 = v3;
  sub_1003DDE18();
  v6 = v5;
  v7 = v1 + *(int *)(type metadata accessor for TemperatureVarianceView(0) + 24);
  v8 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  v9 = vabdd_f64(*(double *)(v7 + v8[6]), *(double *)(v7 + v8[5])) / *(double *)(v7 + v8[7]);
  if (v9 > 1.0)
    v9 = 1.0;
  return v4 + (a1 - v6) * v9;
}

uint64_t sub_1003DDFC0(double a1)
{
  sub_1003DDF38(a1);
  sub_1003DDE18();
  sub_1003DDE18();
  type metadata accessor for TemperatureVarianceView(0);
  return type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
}

void sub_1003DE038(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  _OWORD v19[3];

  v3 = sub_1000BA294(&qword_100BDEF00);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1000BA294(&qword_100BDEF08);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + *(int *)(type metadata accessor for TemperatureVarianceView(0) + 24);
  v10 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  if (*(double *)(v9 + *(int *)(v10 + 20)) >= *(double *)(v9 + *(int *)(v10 + 24)))
    v11 = static Alignment.trailing.getter(v10);
  else
    v11 = static Alignment.leading.getter(v10);
  *v5 = v11;
  v5[1] = v12;
  v13 = sub_1000BA294(&qword_100BDEF10);
  sub_1003DE1B4(v1, (uint64_t)v5 + *(int *)(v13 + 44));
  v14 = sub_1003DDE18();
  v16 = v15;
  static Alignment.center.getter(v14);
  _FrameLayout.init(width:height:alignment:)(0, 1, v16, 0);
  sub_100037794((uint64_t)v5, (uint64_t)v8, &qword_100BDEF00);
  v17 = &v8[*(int *)(v6 + 36)];
  v18 = v19[1];
  *(_OWORD *)v17 = v19[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v19[2];
  sub_100021A14((uint64_t)v5, &qword_100BDEF00);
  sub_1000F111C((uint64_t)v8, a1, &qword_100BDEF08);
}

void sub_1003DE1B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  double v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  double v75;
  double v76;
  char v77;
  char v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  double v96;
  double v97;
  char v98;
  char v99;
  double v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD *v104;
  __int128 v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  uint64_t v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t KeyPath;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  double v155;
  double v156;
  char v157;
  double v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _OWORD v207[2];
  uint64_t v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  _OWORD v212[3];
  uint64_t v213;
  __int128 v214;
  uint64_t v215;
  uint64_t v216;

  v202 = a2;
  v192 = sub_1000BA294(&qword_100BCF148);
  __chkstk_darwin(v192);
  v196 = (uint64_t *)((char *)&v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v195 = type metadata accessor for Image.Scale(0);
  v194 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin(v195);
  v193 = (char *)&v171 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = sub_1000BA294(&qword_100BD9840);
  __chkstk_darwin(v190);
  v199 = (char *)&v171 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_1000BA294(&qword_100BDEF18);
  __chkstk_darwin(v198);
  v201 = (uint64_t)&v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v197 = (uint64_t)&v171 - v8;
  __chkstk_darwin(v9);
  v200 = (uint64_t)&v171 - v10;
  v188 = type metadata accessor for TemperatureScaleConfiguration(0);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v186 = (char *)&v171 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  __chkstk_darwin(v12);
  v175 = (uint64_t)&v171 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for FeelsLikeComponentVarianceBarView(0);
  __chkstk_darwin(v176);
  v178 = (uint64_t)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1000BA294(&qword_100BDEF20);
  __chkstk_darwin(v177);
  v180 = (uint64_t)&v171 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_1000BA294(&qword_100BDEF28);
  __chkstk_darwin(v179);
  v185 = (uint64_t)&v171 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_1000BA294(&qword_100BDEF30);
  __chkstk_darwin(v182);
  v184 = (uint64_t)&v171 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_1000BA294(&qword_100BDEF38);
  __chkstk_darwin(v183);
  v191 = (uint64_t)&v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v181 = (uint64_t)&v171 - v20;
  v22 = __chkstk_darwin(v21);
  v205 = (uint64_t)&v171 - v23;
  v24 = type metadata accessor for UnevenRoundedRectangle(0, v22);
  __chkstk_darwin(v24);
  v26 = (char *)&v171 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100BDEF40);
  __chkstk_darwin(v27);
  v29 = (char *)&v171 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_1000BA294(&qword_100BDEF48);
  __chkstk_darwin(v172);
  v31 = (char *)&v171 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_1000BA294(&qword_100BDEF50);
  __chkstk_darwin(v173);
  v189 = (uint64_t)&v171 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v171 - v34;
  __chkstk_darwin(v36);
  v204 = (uint64_t)&v171 - v37;
  v38 = a1 + *(int *)(type metadata accessor for TemperatureVarianceView(0) + 24);
  v39 = *(int *)(v12 + 20);
  *(_QWORD *)&v203 = *(int *)(v12 + 24);
  v40 = *(double *)(v38 + v203);
  v174 = v39;
  v41 = *(double *)(v38 + v39);
  v206 = a1;
  if (v41 >= v40)
  {
    v45 = sub_1000BA294(&qword_100BDACA8);
    ScaledValue.wrappedValue.getter(v212, v45);
    v44 = *(double *)v212 * 0.5;
    v43 = 0.0;
  }
  else
  {
    v42 = sub_1000BA294(&qword_100BDACA8);
    ScaledValue.wrappedValue.getter(v212, v42);
    v43 = *(double *)v212 * 0.5;
    v44 = 0.0;
  }
  v46 = &v26[*(int *)(v24 + 20)];
  v47 = enum case for RoundedCornerStyle.continuous(_:);
  v48 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  *(double *)v26 = RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)(v44, v43, v43, v44);
  *((_QWORD *)v26 + 1) = v49;
  *((_QWORD *)v26 + 2) = v50;
  *((_QWORD *)v26 + 3) = v51;
  v52 = v206;
  v53 = sub_1003DDB5C();
  v55 = static UnitPoint.top.getter(v54);
  v57 = v56;
  v58 = static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v207, v53, v55, v57, v58, v59);
  sub_10000AB54((uint64_t)v26, (uint64_t)v29, (uint64_t (*)(_QWORD))&type metadata accessor for UnevenRoundedRectangle);
  v60 = &v29[*(int *)(v27 + 52)];
  v61 = v207[1];
  *(_OWORD *)v60 = v207[0];
  *((_OWORD *)v60 + 1) = v61;
  *((_QWORD *)v60 + 4) = v208;
  *(_WORD *)&v29[*(int *)(v27 + 56)] = 256;
  sub_1000215BC((uint64_t)v26, (uint64_t (*)(_QWORD))&type metadata accessor for UnevenRoundedRectangle);
  v62 = sub_1000BA294(&qword_100BDACA8);
  v63 = ScaledValue.wrappedValue.getter(v212, v62);
  v64 = *(_QWORD *)&v212[0];
  static Alignment.center.getter(v63);
  _FrameLayout.init(width:height:alignment:)(0, 1, v64, 0);
  sub_100037794((uint64_t)v29, (uint64_t)v31, &qword_100BDEF40);
  v65 = &v31[*(int *)(v172 + 36)];
  v66 = v210;
  *(_OWORD *)v65 = v209;
  *((_OWORD *)v65 + 1) = v66;
  *((_OWORD *)v65 + 2) = v211;
  sub_100021A14((uint64_t)v29, &qword_100BDEF40);
  sub_100037794((uint64_t)v31, (uint64_t)v35, &qword_100BDEF48);
  v35[*(int *)(v173 + 36)] = 1;
  sub_100021A14((uint64_t)v31, &qword_100BDEF48);
  sub_1000F111C((uint64_t)v35, v204, &qword_100BDEF50);
  v67 = v175;
  sub_10000AB54(v38, v175, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  sub_1003DDE18();
  v69 = v68;
  v71 = v70;
  v72 = *(_QWORD *)v52;
  v73 = *(unsigned __int8 *)(v52 + 8);
  v74 = *(_BYTE *)(v52 + 9);
  sub_100082BE8(*(_QWORD *)v52, v73, v74);
  sub_1007A5DE0();
  v76 = v75;
  v78 = v77;
  sub_100082C5C(v72, v73, v74);
  v79 = v76;
  if ((v78 & 1) != 0)
    v79 = 0.0;
  v80 = sub_1003DDF38(v79);
  ScaledValue.wrappedValue.getter(v212, v62);
  v81 = *(_QWORD *)&v212[0];
  v82 = v178;
  v83 = sub_1003DCABC(v67, v178);
  v84 = v176;
  v85 = (_QWORD *)(v82 + *(int *)(v176 + 20));
  *v85 = v69;
  v85[1] = v71;
  *(double *)(v82 + *(int *)(v84 + 24)) = v80;
  *(_QWORD *)(v82 + *(int *)(v84 + 28)) = v81;
  v86 = v174;
  if (*(double *)(v38 + v174) >= *(double *)(v38 + v203))
    v87 = 3.14159265;
  else
    v87 = 0.0;
  v88 = static UnitPoint.center.getter(v83);
  v90 = v89;
  v91 = v180;
  sub_10000AB54(v82, v180, type metadata accessor for FeelsLikeComponentVarianceBarView);
  v92 = v91 + *(int *)(v177 + 36);
  *(double *)v92 = v87;
  *(_OWORD *)(v92 + 8) = xmmword_10098AC50;
  *(_QWORD *)(v92 + 24) = 0;
  *(double *)(v92 + 32) = v88;
  *(_QWORD *)(v92 + 40) = v90;
  *(_OWORD *)(v92 + 48) = xmmword_10098AC50;
  sub_1000215BC(v82, type metadata accessor for FeelsLikeComponentVarianceBarView);
  v93 = *(_QWORD *)v52;
  v94 = *(unsigned __int8 *)(v52 + 8);
  v95 = *(_BYTE *)(v52 + 9);
  sub_100082BE8(*(_QWORD *)v52, v94, v95);
  sub_1007A5DE0();
  v97 = v96;
  v99 = v98;
  sub_100082C5C(v93, v94, v95);
  v100 = v97;
  if ((v99 & 1) != 0)
    v100 = 0.0;
  v101 = sub_1003DDF38(v100);
  static Alignment.center.getter(v102);
  _FrameLayout.init(width:height:alignment:)(*(_QWORD *)&v101, 0, 0, 1);
  v103 = v185;
  sub_100037794(v91, v185, &qword_100BDEF20);
  v104 = (_OWORD *)(v103 + *(int *)(v179 + 36));
  v105 = v212[1];
  *v104 = v212[0];
  v104[1] = v105;
  v104[2] = v212[2];
  sub_100021A14(v91, &qword_100BDEF20);
  v106 = v187;
  v107 = v186;
  v108 = v188;
  v109 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v187 + 16))(v186, v38, v188);
  v110 = *(double *)(v38 + v203);
  v111 = *(double *)(v38 + v86);
  if (v111 >= v110)
  {
    v112 = static UnitPoint.trailing.getter(v109);
    v114 = v120;
    v116 = ((double (*)(void))static UnitPoint.leading.getter)();
    v118 = v121;
    v119 = v110;
    v110 = v111;
  }
  else
  {
    v112 = static UnitPoint.leading.getter(v109);
    v114 = v113;
    v116 = static UnitPoint.trailing.getter(v115);
    v118 = v117;
    v119 = v111;
  }
  v122 = type metadata accessor for UnitManager(0);
  v123 = static UnitManager.standard.getter(v122);
  v124 = UnitManager.temperature.getter();
  swift_release(v123);
  TemperatureScaleConfiguration.linearGradient(for:unit:startPoint:endPoint:)(&v213, v124, v119, v110, v112, v114, v116, v118);
  v125 = v213;
  v203 = v214;
  v126 = v215;
  v127 = v216;

  (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
  v128 = v184;
  sub_100037794(v103, v184, &qword_100BDEF28);
  v129 = v128 + *(int *)(v182 + 36);
  *(_QWORD *)v129 = v125;
  *(_OWORD *)(v129 + 8) = v203;
  *(_QWORD *)(v129 + 24) = v126;
  *(_QWORD *)(v129 + 32) = v127;
  sub_100021A14(v103, &qword_100BDEF28);
  v130 = v181;
  sub_100037794(v128, v181, &qword_100BDEF30);
  *(_BYTE *)(v130 + *(int *)(v183 + 36)) = 1;
  sub_100021A14(v128, &qword_100BDEF30);
  sub_1000F111C(v130, v205, &qword_100BDEF38);
  v131 = sub_1003DDBF4();
  v133 = v132;
  v135 = v134;
  v137 = v136 & 1;
  v138 = static Color.black.getter(v131);
  v139 = Color.opacity(_:)(0.25);
  swift_release(v138);
  v140 = Text.shadow(color:radius:x:y:)(v139, v131, v133, v137, v135, 3.0, 0.0, 2.0);
  v142 = v141;
  LOBYTE(v124) = v143;
  v145 = v144;
  swift_release(v139);
  LOBYTE(v139) = v124 & 1;
  sub_1000D31B4(v131, v133, v137);
  v146 = swift_bridgeObjectRelease();
  v147 = v194;
  v148 = v193;
  v149 = v195;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v194 + 104))(v193, enum case for Image.Scale.small(_:), v195, v146);
  KeyPath = swift_getKeyPath(&unk_10099C9F0);
  v151 = v196;
  (*(void (**)(char *, char *, uint64_t))(v147 + 16))((char *)v196 + *(int *)(v192 + 28), v148, v149);
  *v151 = KeyPath;
  v152 = (uint64_t)v199;
  sub_100037794((uint64_t)v151, (uint64_t)&v199[*(int *)(v190 + 36)], &qword_100BCF148);
  *(_QWORD *)v152 = v140;
  *(_QWORD *)(v152 + 8) = v142;
  *(_BYTE *)(v152 + 16) = v139;
  *(_QWORD *)(v152 + 24) = v145;
  swift_bridgeObjectRetain(v145);
  sub_1000D55D4(v140, v142, v139);
  sub_100021A14((uint64_t)v151, &qword_100BCF148);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v149);
  sub_1000D31B4(v140, v142, v139);
  swift_bridgeObjectRelease();
  v153 = *(_QWORD *)v206;
  v154 = *(unsigned __int8 *)(v206 + 8);
  LOBYTE(v140) = *(_BYTE *)(v206 + 9);
  sub_100082BE8(*(_QWORD *)v206, v154, v140);
  sub_1007A5DE0();
  v156 = v155;
  LOBYTE(v139) = v157;
  sub_100082C5C(v153, v154, v140);
  v158 = v156;
  if ((v139 & 1) != 0)
    v158 = 0.0;
  sub_1003DDFC0(v158);
  v160 = v159;
  v161 = v197;
  sub_100037794(v152, v197, &qword_100BD9840);
  v162 = (_QWORD *)(v161 + *(int *)(v198 + 36));
  *v162 = v160;
  v162[1] = 0;
  sub_100021A14(v152, &qword_100BD9840);
  v163 = v200;
  sub_1000F111C(v161, v200, &qword_100BDEF18);
  v164 = v204;
  v165 = v189;
  sub_100037794(v204, v189, &qword_100BDEF50);
  v166 = v205;
  v167 = v191;
  sub_100037794(v205, v191, &qword_100BDEF38);
  v168 = v201;
  sub_100037794(v163, v201, &qword_100BDEF18);
  v169 = v202;
  sub_100037794(v165, v202, &qword_100BDEF50);
  v170 = sub_1000BA294(&qword_100BDEF58);
  sub_100037794(v167, v169 + *(int *)(v170 + 48), &qword_100BDEF38);
  sub_100037794(v168, v169 + *(int *)(v170 + 64), &qword_100BDEF18);
  sub_100021A14(v163, &qword_100BDEF18);
  sub_100021A14(v166, &qword_100BDEF38);
  sub_100021A14(v164, &qword_100BDEF50);
  sub_100021A14(v168, &qword_100BDEF18);
  sub_100021A14(v167, &qword_100BDEF38);
  sub_100021A14(v165, &qword_100BDEF50);
}

unint64_t sub_1003DF084(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 9);
    v9 = *(_BYTE *)(a2 + 8);
    sub_100082BE8(*(_QWORD *)a2, v9, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 9) = v8;
    v10 = a3[5];
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_1000BA294(&qword_100BDACA8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = a3[6];
    v15 = a1 + v14;
    v16 = a2 + v14;
    v17 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(_QWORD *)(v15 + v18[5]) = *(_QWORD *)(v16 + v18[5]);
    *(_QWORD *)(v15 + v18[6]) = *(_QWORD *)(v16 + v18[6]);
    *(_QWORD *)(v15 + v18[7]) = *(_QWORD *)(v16 + v18[7]);
    v19 = v18[8];
    v20 = (_QWORD *)(v15 + v19);
    v21 = (_QWORD *)(v16 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *(_BYTE *)(v15 + v18[9]) = *(_BYTE *)(v16 + v18[9]);
    v23 = a3[7];
    v24 = a1 + v23;
    v25 = a2 + v23;
    v26 = type metadata accessor for Text.Measurements(0);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
    v28 = swift_bridgeObjectRetain(v22);
    v27(v24, v25, v26, v28);
  }
  return a1;
}

uint64_t sub_1003DF1F0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_100082C5C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  v4 = a1 + a2[5];
  v5 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[7];
  v9 = type metadata accessor for Text.Measurements(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_1003DF2AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v27;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_100082BE8(*(_QWORD *)a2, v8, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(v14 + v17[5]) = *(_QWORD *)(v15 + v17[5]);
  *(_QWORD *)(v14 + v17[6]) = *(_QWORD *)(v15 + v17[6]);
  *(_QWORD *)(v14 + v17[7]) = *(_QWORD *)(v15 + v17[7]);
  v18 = v17[8];
  v19 = (_QWORD *)(v14 + v18);
  v20 = (_QWORD *)(v15 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_BYTE *)(v14 + v17[9]) = *(_BYTE *)(v15 + v17[9]);
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for Text.Measurements(0);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
  v27 = swift_bridgeObjectRetain(v21);
  v26(v23, v24, v25, v27);
  return a1;
}

uint64_t sub_1003DF3EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_100082BE8(*(_QWORD *)a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v6;
  v11 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  sub_100082C5C(v9, v11, v10);
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(v17 + v20[5]) = *(_QWORD *)(v18 + v20[5]);
  *(_QWORD *)(v17 + v20[6]) = *(_QWORD *)(v18 + v20[6]);
  *(_QWORD *)(v17 + v20[7]) = *(_QWORD *)(v18 + v20[7]);
  v21 = v20[8];
  v22 = (_QWORD *)(v17 + v21);
  v23 = (_QWORD *)(v18 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + v20[9]) = *(_BYTE *)(v18 + v20[9]);
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t sub_1003DF554(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(v11 + v14[5]) = *(_QWORD *)(v12 + v14[5]);
  *(_QWORD *)(v11 + v14[6]) = *(_QWORD *)(v12 + v14[6]);
  *(_QWORD *)(v11 + v14[7]) = *(_QWORD *)(v12 + v14[7]);
  *(_OWORD *)(v11 + v14[8]) = *(_OWORD *)(v12 + v14[8]);
  *(_BYTE *)(v11 + v14[9]) = *(_BYTE *)(v12 + v14[9]);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t sub_1003DF668(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v10 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v7;
  sub_100082C5C(v8, v10, v9);
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1000BA294(&qword_100BDACA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for TemperatureScaleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(_QWORD *)(v16 + v19[5]) = *(_QWORD *)(v17 + v19[5]);
  *(_QWORD *)(v16 + v19[6]) = *(_QWORD *)(v17 + v19[6]);
  *(_QWORD *)(v16 + v19[7]) = *(_QWORD *)(v17 + v19[7]);
  v20 = v19[8];
  v21 = (_QWORD *)(v16 + v20);
  v22 = (uint64_t *)(v17 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + v19[9]) = *(_BYTE *)(v17 + v19[9]);
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t sub_1003DF7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DF7B4);
}

uint64_t sub_1003DF7B4(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    sub_1000BA294(&qword_100BDACA8);
    sub_100088FF0();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_1000C1494();
      sub_100088FF0();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        v9 = type metadata accessor for Text.Measurements(0);
        v10 = a3[7];
      }
    }
    return sub_1000B250C(a1 + v10, a2, v9);
  }
}

uint64_t sub_1003DF850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DF85C);
}

uint64_t sub_1003DF85C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = -(char)a2;
  }
  else
  {
    sub_1000BA294(&qword_100BDACA8);
    sub_10009D2E8();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_1000C1494();
      sub_10009D2E8();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        v8 = type metadata accessor for Text.Measurements(0);
        v9 = a4[7];
      }
    }
    return sub_1000987C4(v5 + v9, a2, a2, v8);
  }
  return result;
}

void sub_1003DF8F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = "\n";
  sub_1003688E4(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Text.Measurements(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_1003DF9A4()
{
  sub_10003D310(&qword_100BDEEF0, &qword_100BDEEF8, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_1003DF9D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB3714, 1);
}

unint64_t sub_1003DF9EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDEF60;
  if (!qword_100BDEF60)
  {
    v1 = sub_100075EB0(&qword_100BDEF08);
    sub_10003D310(&qword_100BDEF68, &qword_100BDEF00, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDEF60);
  }
  return result;
}

void sub_1003DFA70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for SubscriptionEntity(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A5D0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1003E1BF4(v6, (uint64_t (*)(_QWORD))&type metadata accessor for SubscriptionEntity, (uint64_t (*)(Swift::Int))sub_10087B714, (void (*)(uint64_t))&SubscriptionEntity.created.getter, (uint64_t (*)(_QWORD *, _QWORD *))&static Date.< infix(_:_:), (uint64_t)sub_1006005DC);
  *a1 = v3;
}

void sub_1003DFB18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for SevereNotificationEntity(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A5E0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1003E1BF4(v6, (uint64_t (*)(_QWORD))&type metadata accessor for SevereNotificationEntity, (uint64_t (*)(Swift::Int))sub_10087B6FC, (void (*)(uint64_t))&SevereNotificationEntity.date.getter, (uint64_t (*)(_QWORD *, _QWORD *))&static Date.> infix(_:_:), (uint64_t)sub_1006005E8);
  *a1 = v3;
}

void sub_1003DFBC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for IncomingMessageEntity(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A5F0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1003E1BF4(v6, (uint64_t (*)(_QWORD))&type metadata accessor for IncomingMessageEntity, (uint64_t (*)(Swift::Int))sub_10087B720, (void (*)(uint64_t))&IncomingMessageEntity.date.getter, (uint64_t (*)(_QWORD *, _QWORD *))&static Date.> infix(_:_:), (uint64_t)sub_1006005F4);
  *a1 = v3;
}

void sub_1003DFC68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for DeliveryScheduleEntity(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A600();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1003E1BF4(v6, (uint64_t (*)(_QWORD))&type metadata accessor for DeliveryScheduleEntity, (uint64_t (*)(Swift::Int))sub_10087B72C, (void (*)(uint64_t))&DeliveryScheduleEntity.created.getter, (uint64_t (*)(_QWORD *, _QWORD *))&static Date.> infix(_:_:), (uint64_t)sub_100600600);
  *a1 = v3;
}

void sub_1003DFD10(_QWORD *a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];

  v3 = *(_QWORD *)(type metadata accessor for FetchScheduleEntity(0, a2) - 8);
  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_10021A610();
    v4 = v5;
  }
  v6 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7[1] = v6;
  sub_1003E1BF4(v7, (uint64_t (*)(_QWORD))&type metadata accessor for FetchScheduleEntity, (uint64_t (*)(Swift::Int))sub_10087B738, (void (*)(uint64_t))&FetchScheduleEntity.created.getter, (uint64_t (*)(_QWORD *, _QWORD *))&static Date.> infix(_:_:), (uint64_t)sub_10060060C);
  *a1 = v4;
}

void sub_1003DFDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions);
  if (!v2)
  {
    v3 = sub_1003DFE14();
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  sub_100079F70();
}

uint64_t sub_1003DFE14()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v5;

  v0 = NotificationStore.subscriptions.getter();
  v1 = dispatch thunk of Table.query.getter(v0);
  v2 = swift_release(v0);
  v3 = dispatch thunk of Query.all()(v2);
  swift_release(v1);
  v5 = v3;
  swift_bridgeObjectRetain(v3);
  sub_1003DFA70(&v5);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1003DFED0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter);
  if (!v2)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    sub_1000BD398(v3, "setDateStyle:");
    objc_msgSend(v3, "setTimeStyle:", 2);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  sub_100079F70();
}

id sub_1003DFF5C(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  char *v3;
  id v7;
  objc_super v9;

  *(_QWORD *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter] = 0;
  sub_10003B59C((uint64_t)a1, (uint64_t)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationStore] = a2;
  sub_10003B59C((uint64_t)a3, (uint64_t)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationSubscriptionManager]);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithStyle:", 2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v7;
}

void sub_1003E000C()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x706F2D6F4ELL, 0xE500000000000000, "Weather/DebugNotificationSubscriptionsViewController.swift", 58, 2);
  __break(1u);
}

void sub_1003E0090()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100079FE8((uint64_t)v1, (unint64_t *)&qword_100BD35E0, UITableViewCell_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
    v5 = sub_1000B4550();
    objc_msgSend(v2, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v5);

    sub_1001207F8(0x6163696669746F4ELL, 0xED0000736E6F6974, v0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003E019C(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      sub_1003DFDB8();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_10004A298();
}

unint64_t sub_1003E024C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 0x7069726373627553;
  if (a2)
    v2 = 0;
  if (a2 == 3)
    return 0xD000000000000014;
  else
    return v2;
}

unint64_t sub_1003E02AC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  switch(a2)
  {
    case 0:
      result = 0xD00000000000004DLL;
      break;
    case 1:
      result = 0xD000000000000060;
      break;
    case 2:
      result = 0xD000000000000053;
      break;
    case 3:
      result = 0xD000000000000047;
      break;
    case 4:
      result = 0xD00000000000001BLL;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

id sub_1003E0368(void *a1)
{
  NSString v2;
  Class isa;
  id v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;

  v2 = sub_1000B4550();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v2, isa);

  if (IndexPath.section.getter(v5))
  {
    if (IndexPath.section.getter(v6) == 1)
    {
      if (IndexPath.row.getter(v7))
      {
        if (IndexPath.row.getter(v8) == 1)
          sub_1003E1870(v4);
      }
      else
      {
        sub_1003E13BC();
      }
    }
    else if (IndexPath.section.getter(v7) == 2)
    {
      if (IndexPath.row.getter(v10))
      {
        if (IndexPath.row.getter(v14) == 1)
          sub_1003E18A8(v4);
      }
      else
      {
        sub_1003E1888((uint64_t)v4, v11, v12, v13);
      }
    }
    else if (IndexPath.section.getter(v10) == 3)
    {
      if (IndexPath.row.getter(v15))
      {
        if (IndexPath.row.getter(v19) == 1)
        {
          sub_1003E18F4(v4);
        }
        else if (IndexPath.row.getter(v20) == 2)
        {
          sub_1003E190C(v4);
        }
      }
      else
      {
        sub_1003E19F4((uint64_t)v4, v16, v17, v18);
      }
    }
    else if (IndexPath.section.getter(v15) == 4)
    {
      sub_1003E18C0((uint64_t)v4);
    }
  }
  else
  {
    v9 = IndexPath.row.getter(v6);
    sub_1003E1148(v4, v9);
  }
  return v4;
}

void sub_1003E058C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  double v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  __n128 v30;
  __n128 v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  Class isa;
  id v51;
  uint64_t v52;
  char *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  _QWORD v77[2];

  v3 = v2;
  v76 = a1;
  v75 = (_QWORD *)sub_1000E7C2C();
  v5 = *(v75 - 1);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v75);
  v7 = type metadata accessor for SubscriptionEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v75 - v13;
  if (!IndexPath.section.getter(v12))
  {
    v22 = sub_1000D8F6C();
    sub_1003DFDB8();
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < *(_QWORD *)(v23 + 16))
    {
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v24(v14, v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v22, v7);
      v25 = sub_1000986C4();
      ((void (*)(char *, char *, uint64_t, double))v24)(v10, v14, v7, v25);
      objc_allocWithZone((Class)type metadata accessor for DebugNotificationSubscriptionViewController(0));
      swift_retain();
      v27 = sub_1004E2428(v26, (uint64_t)v10);
      v28 = sub_100098CB4((uint64_t)v27, "navigationController");
      if (v28)
      {
        v29 = v28;
        sub_1000D9DB4(v28, "pushViewController:animated:", (uint64_t)v27);

        sub_100099A5C();
      }
      else
      {
        sub_100099A5C();

      }
      goto LABEL_31;
    }
    __break(1u);
    v71 = sub_1000E7044();
    swift_unexpectedError(v71, v72, v73, v74, 150);
    __break(1u);
    return;
  }
  if (IndexPath.section.getter(v15) == 1)
  {
    if (IndexPath.row.getter(v16))
    {
      if (sub_1000D8F6C() == 1)
      {
        NotificationStore.fetchSchedules.getter(v17);
        sub_10009BF40();
        sub_10009880C();
        sub_1000C6A8C();
        sub_1000BD444();
        sub_1000C4900();
        sub_1003DFD10(v77, v18);
        sub_1000986C4();
        sub_1000E7748();
        v19 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationFetchSchedulesViewController());
        v20 = sub_1000994D4();
        v76 = sub_1008DEC4C(v20);
        v21 = sub_100098CB4((uint64_t)v76, "navigationController");
        goto LABEL_27;
      }
    }
    else
    {
      v39 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager
                         + 24];
      v40 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager
                         + 32];
      sub_1000DB418(&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager], v39);
      v41 = dispatch thunk of NotificationsManagerProxyType.schedule()(v39, v40);
      v42 = sub_100079FE8(v41, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
      v43 = (void *)static OS_dispatch_queue.main.getter(v42);
      v44 = v75;
      (*(void (**)(char *, uint64_t, _QWORD *))(v5 + 16))((char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v75);
      v45 = *(unsigned __int8 *)(v5 + 80);
      v46 = (v45 + 24) & ~v45;
      v47 = swift_allocObject(&unk_100B71CB0, v46 + v6, v45 | 7);
      v48 = v76;
      *(_QWORD *)(v47 + 16) = v76;
      (*(void (**)(uint64_t, char *, _QWORD *))(v5 + 32))(v47 + v46, (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v44);
      v49 = v48;
      Promise.always(on:closure:)(v43, sub_1003E3294, v47);
      swift_release(v47);
      sub_10009880C();
      swift_release(v41);

      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      sub_1000D9DB4(v49, "deselectRowAtIndexPath:animated:", (uint64_t)isa);

    }
LABEL_31:
    sub_100098640();
    return;
  }
  if (IndexPath.section.getter(v16) != 2)
  {
    if (IndexPath.section.getter(v30) == 3)
    {
      if (IndexPath.row.getter(v34))
      {
        if (sub_1000D8F6C() == 1)
        {
          NotificationStore.incomingMessages.getter();
          v35 = sub_10009BF40();
          sub_10009880C();
          v37 = dispatch thunk of Query.all()(v36);
          swift_release(v35);
          sub_1000C4900();
          sub_1003DFBC0(v77);
          sub_1000986C4();
          sub_1000E7748();
          objc_allocWithZone((Class)type metadata accessor for DebugIncomingMessagesViewController());
          swift_retain();
          v76 = sub_10048FB34(v38, v37);
          v21 = sub_100098CB4((uint64_t)v76, "navigationController");
        }
        else
        {
          if (sub_1000D8F6C() != 2)
            goto LABEL_31;
          NotificationStore.severeNotifications.getter(v66);
          sub_10009BF40();
          sub_10009880C();
          sub_1000C6A8C();
          sub_1000BD444();
          sub_1000C4900();
          sub_1003DFB18(v77);
          sub_1000986C4();
          sub_1000E7748();
          v67 = objc_allocWithZone((Class)type metadata accessor for DebugSevereNotificationsViewController());
          v68 = sub_1000994D4();
          v76 = sub_100748144(v68);
          v21 = sub_100098CB4((uint64_t)v76, "navigationController");
        }
        goto LABEL_27;
      }
      v64 = sub_1000DA964(OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager);
      v65 = dispatch thunk of NotificationsManagerProxyType.validate()(v64);
      swift_release(v65);
      v75 = sub_1000CF83C().super.isa;
      sub_1000D9DB4(v76, "deselectRowAtIndexPath:animated:", (uint64_t)v75);
    }
    else
    {
      if (IndexPath.section.getter(v34) != 4)
        goto LABEL_31;
      sub_100079FE8(4, &qword_100BCBB30, UIAlertController_ptr);
      v51 = sub_100551298(0xD000000000000013, 0x80000001009FF200, 0xD000000000000056, 0x80000001009FF220, 1);
      sub_100079FE8((uint64_t)v51, &qword_100BCBB38, UIAlertAction_ptr);
      v52 = sub_1000C2184((uint64_t)&unk_100B71C60);
      *(_QWORD *)(v52 + 16) = v3;
      v53 = v3;
      v54 = sub_10055134C(0x7465736552, 0xE500000000000000, 2, (uint64_t)sub_1003E3214, v52);
      v55 = sub_10055134C(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
      objc_msgSend(v51, "addAction:", v54);
      objc_msgSend(v51, "addAction:", v55);
      objc_msgSend(v53, "presentViewController:animated:completion:", v51, 1, 0);
      v75 = sub_1000CF83C().super.isa;
      sub_1000D9DB4(v76, "deselectRowAtIndexPath:animated:", (uint64_t)v75);

    }
    return;
  }
  if (IndexPath.row.getter(v30))
  {
    if (sub_1000D8F6C() != 1)
      goto LABEL_31;
    NotificationStore.deliverySchedules.getter(v31);
    sub_10009BF40();
    sub_10009880C();
    sub_1000C6A8C();
    sub_1000BD444();
    sub_1000C4900();
    sub_1003DFC68(v77);
    sub_1000986C4();
    sub_1000E7748();
    v32 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController());
    v33 = sub_1000994D4();
    v76 = sub_1006BF0DC(v33);
    v21 = sub_100098CB4((uint64_t)v76, "navigationController");
LABEL_27:
    v69 = v21;
    if (v69)
    {
      v70 = v69;
      sub_1000D9DB4(v69, "pushViewController:animated:", (uint64_t)v76);

    }
    goto LABEL_29;
  }
  v56 = sub_1000DA964(OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager);
  v57 = dispatch thunk of NotificationsManagerProxyType.evaluate()(v56);
  v58 = sub_100079FE8(v57, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  v59 = (void *)static OS_dispatch_queue.main.getter(v58);
  v60 = sub_1000C2184((uint64_t)&unk_100B71C88);
  v61 = v76;
  *(_QWORD *)(v60 + 16) = v76;
  v62 = v61;
  v63 = Promise.always(on:closure:)(v59, sub_1003E321C, v60);
  swift_release(v63);
  swift_release(v57);

  swift_release(v60);
  v76 = sub_1000CF83C().super.isa;
  sub_1000D9DB4(v62, "deselectRowAtIndexPath:animated:", (uint64_t)v76);
LABEL_29:

}

void sub_1003E0D6C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;

  v4 = sub_1000BA294(&qword_100BD23D8);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v4, v8 + *(_QWORD *)(v6 + 72), v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9 + v8, a2, v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_1003E0E3C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  Class isa;

  v2 = sub_1000BA294(&qword_100BD23D8);
  v3 = type metadata accessor for IndexPath(0);
  *(_OWORD *)(swift_allocObject(v2, ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) | 7)+ 16) = xmmword_10097CA50;
  IndexPath.init(row:section:)(0, 1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

}

void sub_1003E0EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v3 = NotificationStore.subscriptions.getter();
  v4 = dispatch thunk of Table.delete.getter();
  v5 = swift_release(v3);
  dispatch thunk of Delete.all()(v5);
  v6 = swift_release(v4);
  v7 = NotificationStore.deliverySchedules.getter(v6);
  v8 = dispatch thunk of Table.delete.getter();
  v9 = swift_release(v7);
  dispatch thunk of Delete.all()(v9);
  v10 = swift_release(v8);
  v11 = NotificationStore.fetchSchedules.getter(v10);
  v12 = dispatch thunk of Table.delete.getter();
  v13 = swift_release(v11);
  dispatch thunk of Delete.all()(v13);
  swift_release(v12);
  v14 = (_QWORD *)(a2 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager + 24);
  v16 = v14[4];
  sub_1000DB418(v14, v15);
  v17 = dispatch thunk of NotificationsManagerProxyType.schedule()(v15, v16);
  v19 = (id)zalgo.getter(v17);
  v18 = Promise.always(on:closure:)(v19, sub_1003E1088, 0);
  swift_release(v18);
  swift_release(v17);

}

void sub_1003E1088()
{
  exit(0);
}

void sub_1003E1148(void *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];

  v32 = a1;
  v3 = sub_1000B46F8();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BDEFC8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = (_QWORD *)(v9 - v8);
  v11 = type metadata accessor for Location(0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for SubscriptionEntity(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_100098728();
  v20 = v19 - v18;
  sub_1003DFDB8();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(v21 + 16) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(v20, v21+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * a2, v16);
  v22 = sub_1000986C4();
  SubscriptionEntity.location.getter(v22);
  dispatch thunk of Column.value.getter(v10);
  sub_10009880C();
  v23 = sub_1000BA294(&qword_100BDEFD0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v23) != 1)
  {
    JSON.value.getter(v23);
    v24 = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v10, v23);
    v25 = static UIListContentConfiguration.subtitleCell()(v24);
    Location.name.getter(v25);
    v26 = sub_1000BA734();
    v27 = Location.id.getter(v26);
    UIListContentConfiguration.secondaryText.setter(v27);
    UIListContentConfiguration.secondaryTextProperties.modify(v33);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(1);
    sub_1000EAF98();
    UIListContentConfiguration.secondaryTextProperties.modify(v33);
    UIListContentConfiguration.TextProperties.lineBreakMode.setter(4);
    sub_1000EAF98();
    v33[3] = v3;
    v33[4] = &protocol witness table for UIListContentConfiguration;
    v28 = sub_10005F164(v33);
    (*(void (**)(_QWORD *, char *, uint64_t))(v4 + 16))(v28, v6, v3);
    v29 = v32;
    UITableViewCell.contentConfiguration.setter(v33);
    sub_1000BD398(v29, "setAccessoryType:");
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v15, v31);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
    sub_100098640();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1003E13BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void (*v4)(_BYTE *, _QWORD);
  uint64_t v5;
  _QWORD *v6;
  _BYTE v7[40];

  sub_1000B46F8();
  sub_1000BEC2C();
  __chkstk_darwin(v1);
  sub_10009C8C4();
  static UIListContentConfiguration.subtitleCell()(v2);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "blueColor");
  v4 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v7);
  UIListContentConfiguration.TextProperties.color.setter(v3);
  v4(v7, 0);
  sub_1000BA734();
  v5 = sub_1003E1494(v0);
  UIListContentConfiguration.secondaryText.setter(v5);
  v6 = sub_1000D95E4((uint64_t)&protocol witness table for UIListContentConfiguration);
  sub_1000C5E3C((uint64_t)v6);
  sub_1000C1AA8();
  sub_10009D580();
  sub_10009D300();
}

uint64_t sub_1003E1494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  void *v31;
  void *v32;
  uint64_t Schedule;
  _QWORD *v34;
  uint64_t v35;
  Class isa;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t ScheduleEntity;
  _QWORD v46[6];

  v2 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1000BA294(&qword_100BD35B8);
  v6 = __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Expression(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v44 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BDEFC0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScheduleEntity = type metadata accessor for FetchScheduleEntity(0, v13);
  v16 = *(_QWORD *)(ScheduleEntity - 8);
  v17 = __chkstk_darwin(ScheduleEntity);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = NotificationStore.fetchSchedules.getter(v17);
  v42 = v10;
  v43 = v9;
  v38 = a1;
  v39 = v19;
  v40 = v16;
  v41 = v4;
  v21 = dispatch thunk of Table.query.getter(v20);
  swift_release(v20);
  v46[3] = &type metadata for Bool;
  v46[4] = &protocol witness table for Bool;
  LOBYTE(v46[0]) = 1;
  v22 = v44;
  == infix(_:_:)(0x64696C6176, 0xE500000000000000);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  *v8 = 1702125924;
  v8[1] = 0xE400000000000000;
  v23 = enum case for OrderBy.descending(_:);
  v24 = type metadata accessor for OrderBy(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v8, v23, v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v24);
  dispatch thunk of Query.first(_:orderBy:)(v22, v8);
  swift_release(v21);
  sub_100021AA4((uint64_t)v8, &qword_100BD35B8);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v43);
  v27 = ScheduleEntity;
  v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, ScheduleEntity);
  if (v28 == 1)
  {
    sub_100021AA4((uint64_t)v15, &qword_100BDEFC0);
    return 0x3F726576654ELL;
  }
  v30 = v39;
  v29 = v40;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v15, v27);
  sub_1003DFED0();
  v32 = v31;
  Schedule = FetchScheduleEntity.date.getter();
  v34 = v41;
  dispatch thunk of Column.value.getter(v41);
  swift_release(Schedule);
  v35 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if ((_DWORD)result != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
    v37 = objc_msgSend(v32, "stringFromDate:", isa);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v27);
    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E1870(void *a1)
{
  return sub_1000BABA8(a1, 20);
}

void sub_1003E1888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CCCBC(a1, (void (*)(void))&static UIListContentConfiguration.cell(), 0x61756C617645, a4, (SEL *)&selRef_blueColor);
}

uint64_t sub_1003E18A8(void *a1)
{
  return sub_1000BABA8(a1, 23);
}

void sub_1003E18C0(uint64_t a1)
{
  sub_1003E1A14(a1, (void (*)(void))&static UIListContentConfiguration.subtitleCell(), 0x6144207465736552, 0xEE00657361626174, (SEL *)&selRef_redColor);
}

uint64_t sub_1003E18F4(void *a1)
{
  return sub_1000BABA8(a1, 17);
}

uint64_t sub_1003E190C(void *a1)
{
  return sub_1000BABA8(a1, 20);
}

uint64_t sub_1003E1924(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[5];

  v4 = sub_1000B46F8();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  static UIListContentConfiguration.subtitleCell()(v9);
  UIListContentConfiguration.text.setter(a2);
  v12[3] = v4;
  v12[4] = &protocol witness table for UIListContentConfiguration;
  v10 = sub_10005F164(v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 16))(v10, v8, v4);
  UITableViewCell.contentConfiguration.setter(v12);
  sub_1000BD398(a1, "setAccessoryType:");
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
}

void sub_1003E19F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CCCBC(a1, (void (*)(void))&static UIListContentConfiguration.cell(), 0x6164696C6156, a4, (SEL *)&selRef_blueColor);
}

void sub_1003E1A14(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7;
  id v8;
  void (*v9)(_BYTE *, _QWORD);
  _QWORD *v10;
  _BYTE v11[40];

  sub_1000B46F8();
  sub_1000BEC2C();
  __chkstk_darwin(v7);
  sub_10009C8C4();
  a2();
  sub_1000BA734();
  v8 = objc_msgSend((id)objc_opt_self(UIColor), *a5);
  v9 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v11);
  UIListContentConfiguration.TextProperties.color.setter(v8);
  v9(v11, 0);
  v10 = sub_1000D95E4((uint64_t)&protocol witness table for UIListContentConfiguration);
  sub_1000C5E3C((uint64_t)v10);
  sub_1000C1AA8();
  sub_10009D580();
  sub_10009D300();
}

void sub_1003E1AD4()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugNotificationSubscriptionsViewController", 52, "init(style:)", 12, 0);
  __break(1u);
}

void sub_1003E1B0C()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugNotificationSubscriptionsViewController", 52, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1003E1B5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1003E1BF4(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(Swift::Int), void (*a4)(uint64_t), uint64_t (*a5)(_QWORD *, _QWORD *), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  Swift::Int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _QWORD *v61;
  _QWORD *v62;
  void (*v63)(_QWORD *, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  int v77;
  uint64_t v78;
  Swift::Int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(_QWORD);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t);
  uint64_t (*v102)(uint64_t (*)(_QWORD), uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  void (*v112)(uint64_t (*)(_QWORD), uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(uint64_t, char *, uint64_t);
  char *v118;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  char v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  unint64_t v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  Swift::Int v180;
  char *v181;
  _QWORD *v182;
  Swift::Int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t (*v196)(_QWORD);
  uint64_t (*v197)(_QWORD);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(uint64_t, uint64_t, uint64_t);
  char *v202;
  uint64_t (*v203)(_QWORD *, _QWORD *);
  void (*v204)(uint64_t);
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t (*v208)(_QWORD);
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  _QWORD *v212;

  v195 = a6;
  v203 = a5;
  v204 = a4;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_1000986FC();
  v199 = v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v209 = (uint64_t)&v177 - v13;
  sub_10009D2A4();
  __chkstk_darwin(v14);
  v16 = (char *)&v177 - v15;
  __chkstk_darwin(v17);
  sub_1000860D0();
  v193 = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  v21 = (_QWORD **)((char *)&v177 - v20);
  __chkstk_darwin(v22);
  sub_100079F7C();
  v182 = v23;
  v196 = a2;
  v205 = a2(0);
  v212 = *(_QWORD **)(v205 - 8);
  sub_10009D98C();
  __chkstk_darwin(v24);
  sub_1000986FC();
  v189 = v25;
  sub_10009D2A4();
  __chkstk_darwin(v26);
  sub_1000860D0();
  v206 = v27;
  sub_10009D2A4();
  __chkstk_darwin(v28);
  sub_1000D056C();
  __chkstk_darwin(v29);
  sub_1000860D0();
  v208 = v30;
  sub_10009D2A4();
  __chkstk_darwin(v31);
  v33 = (char *)&v177 - v32;
  __chkstk_darwin(v34);
  sub_1000860D0();
  v192 = v35;
  sub_10009D2A4();
  __chkstk_darwin(v36);
  v38 = (char *)&v177 - v37;
  __chkstk_darwin(v39);
  sub_100079F7C();
  v181 = v40;
  v211 = a1;
  v41 = a1[1];
  v183 = _minimumMergeRunLength(_:)(v41);
  if (v183 >= v41)
  {
    if ((v41 & 0x8000000000000000) == 0)
    {
      if (v41)
        sub_1003E28E8(0, v41, 1, v211, (uint64_t)v196, v204, v203);
      goto LABEL_125;
    }
    goto LABEL_147;
  }
  v179 = a3(v41 / 2);
  v194 = v42;
  if (v41 <= 0)
  {
LABEL_109:
    v44 = (char *)_swiftEmptyArrayStorage;
    v122 = _swiftEmptyArrayStorage[2];
LABEL_110:
    if (v122 < 2)
    {
LABEL_123:
      swift_bridgeObjectRelease();
      if (v41 >= -1)
        goto LABEL_124;
      goto LABEL_151;
    }
    v171 = *v211;
    while (1)
    {
      v172 = v122 - 2;
      if (v122 < 2)
        break;
      if (!v171)
        goto LABEL_159;
      v173 = *(_QWORD *)&v44[16 * v172 + 32];
      v174 = *(_QWORD *)&v44[16 * v122 + 24];
      sub_1000C157C(v171 + v212[9] * v173, v171 + v212[9] * *(_QWORD *)&v44[16 * v122 + 16], (char *)(v171 + v212[9] * v174));
      if (v6)
        goto LABEL_107;
      if (v174 < v173)
        goto LABEL_142;
      if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0)
        v44 = sub_10021A488();
      if (v172 >= *((_QWORD *)v44 + 2))
        goto LABEL_143;
      v175 = &v44[16 * v172 + 32];
      *(_QWORD *)v175 = v173;
      *((_QWORD *)v175 + 1) = v174;
      v176 = *((_QWORD *)v44 + 2);
      if (v122 > v176)
        goto LABEL_144;
      memmove(&v44[16 * v122 + 16], &v44[16 * v122 + 32], 16 * (v176 - v122));
      *((_QWORD *)v44 + 2) = v176 - 1;
      v122 = v176 - 1;
      if (v176 <= 2)
        goto LABEL_123;
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    return;
  }
  v178 = v38;
  v188 = v33;
  v197 = a2;
  v177 = v21;
  v187 = v16;
  v43 = 0;
  v44 = (char *)_swiftEmptyArrayStorage;
  v45 = v41;
  v180 = v41;
  v46 = v184;
  while (1)
  {
    v47 = (uint64_t)v43;
    v48 = v43 + 1;
    v191 = v44;
    v190 = v43;
    if ((uint64_t)(v43 + 1) >= v45)
    {
      v66 = (uint64_t)(v43 + 1);
      v56 = v204;
      v79 = v183;
    }
    else
    {
      v207 = v45;
      v49 = *v211;
      v50 = v212[9];
      v51 = (void (*)(uint64_t, uint64_t, uint64_t))v212[2];
      v52 = v205;
      v51((uint64_t)v181, *v211 + v50 * (_QWORD)v48, v205);
      v185 = v49;
      v210 = v50;
      v53 = v49 + v50 * v47;
      v54 = v178;
      v202 = (char *)v51;
      v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v178, v53, v52);
      v56 = v204;
      v204(v55);
      v57 = v182;
      dispatch thunk of Column.value.getter(v182);
      sub_10009880C();
      v58 = sub_100098778();
      v59 = sub_100088FC8((uint64_t)v57, 1, v58);
      if (v60)
        goto LABEL_160;
      v56(v59);
      v61 = v177;
      dispatch thunk of Column.value.getter(v177);
      sub_10009880C();
      sub_100088FC8((uint64_t)v61, 1, v58);
      if (v60)
        goto LABEL_161;
      v62 = v182;
      LODWORD(v201) = v203(v182, v61);
      v63 = *(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 8);
      v63(v61, v58);
      v200 = v58;
      v63(v62, v58);
      v64 = (void (*)(char *, uint64_t))v212[1];
      v65 = v205;
      v64(v54, v205);
      v64(v181, v65);
      v47 = (uint64_t)v190;
      v66 = (uint64_t)(v190 + 2);
      v45 = v207;
      if ((uint64_t)(v190 + 2) < v207)
      {
        v184 = v46;
        v198 = v210 * (_QWORD)v48;
        v67 = v185;
        v186 = v210 * v66;
        while (1)
        {
          v47 = v66;
          v68 = v205;
          v69 = v202;
          ((void (*)(char *, uint64_t, uint64_t))v202)(v192, v67 + v186, v205);
          v70 = v188;
          v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v188, v67 + v198, v68);
          v72 = v204;
          v204(v71);
          v73 = v193;
          dispatch thunk of Column.value.getter(v193);
          sub_10009880C();
          v74 = v200;
          v75 = sub_100088FC8((uint64_t)v73, 1, v200);
          if (v60)
            goto LABEL_156;
          v72(v75);
          v46 = (uint64_t)v187;
          sub_1000BEE60();
          sub_10009880C();
          sub_100088FC8(v46, 1, v74);
          if (v60)
            goto LABEL_157;
          v76 = v193;
          v77 = sub_1000CDC50((uint64_t)v193);
          v63((_QWORD *)v46, v74);
          v63(v76, v74);
          v78 = v205;
          v64(v70, v205);
          v64(v192, v78);
          v44 = v191;
          if (((v201 ^ v77) & 1) != 0)
            break;
          v66 = v47 + 1;
          v67 += v210;
          if (v47 + 1 >= v207)
          {
            v66 = v207;
            v56 = v204;
            sub_1000CDF30();
            goto LABEL_16;
          }
        }
        v56 = v204;
        v66 = v47;
        sub_1000CDF30();
        v45 = v207;
      }
LABEL_16:
      v79 = v183;
      if ((v201 & 1) != 0)
      {
        if (v66 < v47)
          goto LABEL_148;
        if (v47 < v66)
        {
          v80 = 0;
          v81 = v210 * (v66 - 1);
          v82 = v66 * v210;
          v83 = v47;
          v84 = v47 * v210;
          v202 = (char *)v66;
          do
          {
            if (v83 != v66 + v80 - 1)
            {
              v85 = v46;
              v86 = v185;
              if (!v185)
                goto LABEL_158;
              v87 = v185 + v84;
              v200 = v185 + v81;
              v88 = v205;
              v201 = (void (*)(uint64_t, uint64_t, uint64_t))v212[4];
              v201(v189, v185 + v84, v205);
              if (v84 < v81 || v87 >= v86 + v82)
              {
                v90 = v86 + v84;
                v91 = v200;
                swift_arrayInitWithTakeFrontToBack(v90, v200, 1, v88);
              }
              else
              {
                v91 = v200;
                if (v84 != v81)
                  swift_arrayInitWithTakeBackToFront(v87, v200, 1, v88);
              }
              v201(v91, v189, v88);
              v44 = v191;
              v46 = v85;
              v66 = (uint64_t)v202;
            }
            ++v83;
            --v80;
            v81 -= v210;
            v82 -= v210;
            v84 += v210;
          }
          while (v83 < v66 + v80);
          v56 = v204;
          v79 = v183;
          v47 = (uint64_t)v190;
          v45 = v207;
        }
      }
    }
    if (v66 < v45)
    {
      if (__OFSUB__(v66, v47))
        goto LABEL_146;
      if (v66 - v47 < v79)
      {
        if (__OFADD__(v47, v79))
          goto LABEL_149;
        if (v47 + v79 >= v45)
          v92 = v45;
        else
          v92 = v47 + v79;
        if (v92 < v47)
          goto LABEL_150;
        if (v66 != v92)
        {
          v184 = v46;
          v93 = v212[9];
          v198 = v212[2];
          v210 = v93 * (v66 - 1);
          v200 = v93;
          v94 = v66 * v93;
          v95 = v197;
          v186 = v92;
          do
          {
            v96 = 0;
            v97 = (char *)v47;
            v98 = v205;
            v201 = (void (*)(uint64_t, uint64_t, uint64_t))v94;
            v202 = (char *)v66;
            while (1)
            {
              v99 = *v211;
              v207 = v94 + v96;
              v100 = v94 + v96 + v99;
              v101 = v56;
              v102 = (uint64_t (*)(uint64_t (*)(_QWORD), uint64_t, uint64_t))v198;
              ((void (*)(uint64_t (*)(_QWORD), uint64_t, uint64_t))v198)(v208, v100, v98);
              v103 = v102(v95, v210 + v96 + v99, v98);
              v101(v103);
              v104 = v209;
              sub_1000BEE60();
              sub_10009880C();
              v105 = sub_100098778();
              v106 = sub_100088FC8(v104, 1, v105);
              if (v60)
                goto LABEL_152;
              v101(v106);
              v107 = v199;
              sub_1000BEE60();
              sub_10009880C();
              sub_100088FC8(v107, 1, v105);
              if (v60)
                goto LABEL_153;
              v108 = v209;
              v109 = sub_1000CDC50(v209);
              v110 = v107;
              v111 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8);
              v111(v110, v105);
              v111(v108, v105);
              v112 = (void (*)(uint64_t (*)(_QWORD), uint64_t))v212[1];
              v113 = v205;
              v112(v95, v205);
              v112(v208, v113);
              v94 = (uint64_t)v201;
              if ((v109 & 1) == 0)
                break;
              v114 = *v211;
              if (!*v211)
                goto LABEL_154;
              v115 = (char *)v201 + v114 + v96;
              v116 = v114 + v210 + v96;
              v117 = (void (*)(uint64_t, char *, uint64_t))v212[4];
              v117((uint64_t)v206, v115, v113);
              swift_arrayInitWithTakeFrontToBack(v115, v116, 1, v113);
              v117(v116, v206, v113);
              v96 -= v200;
              ++v97;
              v118 = v202;
              v98 = v113;
              v56 = v204;
              v95 = v197;
              if (v202 == v97)
                goto LABEL_51;
            }
            v56 = v204;
            v118 = v202;
LABEL_51:
            v66 = (uint64_t)(v118 + 1);
            v210 += v200;
            v94 += v200;
            v47 = (uint64_t)v190;
          }
          while (v66 != v186);
          v66 = v186;
          v46 = v184;
          v44 = v191;
        }
      }
    }
    if (v66 < v47)
      goto LABEL_145;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v44);
    v202 = (char *)v66;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v44 = sub_10009DAE8(0, *((_QWORD *)v44 + 2) + 1);
    v121 = *((_QWORD *)v44 + 2);
    v120 = *((_QWORD *)v44 + 3);
    v122 = v121 + 1;
    if (v121 >= v120 >> 1)
      v44 = sub_10009DAE8((char *)(v120 > 1), v121 + 1);
    *((_QWORD *)v44 + 2) = v122;
    v123 = v44 + 32;
    v124 = &v44[16 * v121 + 32];
    v125 = v202;
    *(_QWORD *)v124 = v47;
    *((_QWORD *)v124 + 1) = v125;
    if (v121)
      break;
    v122 = 1;
LABEL_101:
    v45 = v211[1];
    v43 = v202;
    v41 = v180;
    if ((uint64_t)v202 >= v45)
      goto LABEL_110;
  }
  while (1)
  {
    v126 = v122 - 1;
    if (v122 >= 4)
    {
      v131 = &v123[16 * v122];
      v132 = *((_QWORD *)v131 - 8);
      v133 = *((_QWORD *)v131 - 7);
      v137 = __OFSUB__(v133, v132);
      v134 = v133 - v132;
      if (v137)
        goto LABEL_130;
      v136 = *((_QWORD *)v131 - 6);
      v135 = *((_QWORD *)v131 - 5);
      v137 = __OFSUB__(v135, v136);
      v129 = v135 - v136;
      v130 = v137;
      if (v137)
        goto LABEL_131;
      v138 = v122 - 2;
      v139 = &v123[16 * v122 - 32];
      v141 = *(_QWORD *)v139;
      v140 = *((_QWORD *)v139 + 1);
      v137 = __OFSUB__(v140, v141);
      v142 = v140 - v141;
      if (v137)
        goto LABEL_132;
      v137 = __OFADD__(v129, v142);
      v143 = v129 + v142;
      if (v137)
        goto LABEL_134;
      if (v143 >= v134)
      {
        v161 = &v123[16 * v126];
        v163 = *(_QWORD *)v161;
        v162 = *((_QWORD *)v161 + 1);
        v137 = __OFSUB__(v162, v163);
        v164 = v162 - v163;
        if (v137)
          goto LABEL_140;
        v154 = v129 < v164;
        goto LABEL_90;
      }
    }
    else
    {
      if (v122 != 3)
      {
        v155 = *((_QWORD *)v44 + 4);
        v156 = *((_QWORD *)v44 + 5);
        v137 = __OFSUB__(v156, v155);
        v148 = v156 - v155;
        v149 = v137;
        goto LABEL_84;
      }
      v128 = *((_QWORD *)v44 + 4);
      v127 = *((_QWORD *)v44 + 5);
      v137 = __OFSUB__(v127, v128);
      v129 = v127 - v128;
      v130 = v137;
    }
    if ((v130 & 1) != 0)
      goto LABEL_133;
    v138 = v122 - 2;
    v144 = &v123[16 * v122 - 32];
    v146 = *(_QWORD *)v144;
    v145 = *((_QWORD *)v144 + 1);
    v147 = __OFSUB__(v145, v146);
    v148 = v145 - v146;
    v149 = v147;
    if (v147)
      goto LABEL_135;
    v150 = &v123[16 * v126];
    v152 = *(_QWORD *)v150;
    v151 = *((_QWORD *)v150 + 1);
    v137 = __OFSUB__(v151, v152);
    v153 = v151 - v152;
    if (v137)
      goto LABEL_137;
    if (__OFADD__(v148, v153))
      goto LABEL_139;
    if (v148 + v153 >= v129)
    {
      v154 = v129 < v153;
LABEL_90:
      if (v154)
        v126 = v138;
      goto LABEL_92;
    }
LABEL_84:
    if ((v149 & 1) != 0)
      goto LABEL_136;
    v157 = &v123[16 * v126];
    v159 = *(_QWORD *)v157;
    v158 = *((_QWORD *)v157 + 1);
    v137 = __OFSUB__(v158, v159);
    v160 = v158 - v159;
    if (v137)
      goto LABEL_138;
    if (v160 < v148)
      goto LABEL_101;
LABEL_92:
    v165 = v126 - 1;
    if (v126 - 1 >= v122)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    if (!*v211)
      goto LABEL_155;
    v166 = &v123[16 * v165];
    v167 = *(_QWORD *)v166;
    v168 = &v123[16 * v126];
    v169 = *((_QWORD *)v168 + 1);
    sub_1000C157C(*v211 + v212[9] * *(_QWORD *)v166, *v211 + v212[9] * *(_QWORD *)v168, (char *)(*v211 + v212[9] * v169));
    v46 = v6;
    if (v6)
      break;
    if (v169 < v167)
      goto LABEL_127;
    if (v126 > *((_QWORD *)v44 + 2))
      goto LABEL_128;
    *(_QWORD *)v166 = v167;
    *(_QWORD *)&v123[16 * v165 + 8] = v169;
    v170 = *((_QWORD *)v44 + 2);
    if (v126 >= v170)
      goto LABEL_129;
    v122 = v170 - 1;
    memmove(&v123[16 * v126], v168 + 16, 16 * (v170 - 1 - v126));
    *((_QWORD *)v44 + 2) = v170 - 1;
    if (v170 <= 2)
      goto LABEL_101;
  }
  v41 = v180;
LABEL_107:
  swift_bridgeObjectRelease();
  if (v41 < -1)
  {
    __break(1u);
    goto LABEL_109;
  }
LABEL_124:
  *(_QWORD *)(v179 + 16) = 0;
  swift_bridgeObjectRelease();
LABEL_125:
  sub_1000B44B0();
}

void sub_1003E28E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, void (*a6)(uint64_t), uint64_t (*a7)(_QWORD *, _QWORD *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;
  void (*v41)(uint64_t);
  void (*v42)(_QWORD *, uint64_t);
  _QWORD *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v53)(_QWORD *, _QWORD *);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;

  v53 = a7;
  v61 = a4;
  v51 = a1;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v11);
  v54 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009D2A4();
  __chkstk_darwin(v13);
  sub_100079F7C();
  v64 = v14;
  v15 = sub_1000C6DF4();
  v62 = *(_QWORD **)(v15 - 8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_1000986FC();
  v58 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  sub_1000D056C();
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v49 - v21;
  v57 = a3;
  v50 = a2;
  if (a3 != a2)
  {
    v23 = v62[9];
    v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v62[2];
    v65 = v23 * (v57 - 1);
    v55 = v23;
    v24 = v23 * v57;
    while (2)
    {
      v25 = 0;
      v63 = v51;
      v56 = v24;
      do
      {
        v26 = *v61;
        v60 = v24 + v25;
        v27 = v24 + v25 + v26;
        v28 = v52;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v52)(v22, v27, v15, v20);
        v59 = v65 + v25;
        v29 = v28(a5, v65 + v25 + v26, v15);
        a6(v29);
        v30 = v64;
        dispatch thunk of Column.value.getter(v64);
        sub_10009880C();
        v31 = sub_100098778();
        v32 = sub_100088FC8((uint64_t)v30, 1, v31);
        if (v33)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          return;
        }
        a6(v32);
        v34 = v54;
        dispatch thunk of Column.value.getter(v54);
        sub_10009880C();
        sub_100088FC8((uint64_t)v34, 1, v31);
        if (v33)
          goto LABEL_12;
        v35 = v22;
        v36 = a5;
        v37 = v15;
        v38 = v64;
        v39 = v53(v64, v34);
        v40 = v34;
        v41 = a6;
        v42 = *(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
        v42(v40, v31);
        v43 = v38;
        v15 = v37;
        a5 = v36;
        v22 = v35;
        v42(v43, v31);
        a6 = v41;
        v44 = (void (*)(uint64_t, uint64_t))v62[1];
        v44(a5, v15);
        v44((uint64_t)v35, v15);
        v24 = v56;
        if ((v39 & 1) == 0)
          break;
        v45 = *v61;
        if (!*v61)
          goto LABEL_13;
        v46 = v45 + v56 + v25;
        v47 = v45 + v65 + v25;
        v48 = (void (*)(uint64_t, uint64_t, uint64_t))v62[4];
        v48(v58, v46, v15);
        swift_arrayInitWithTakeFrontToBack(v46, v47, 1, v15);
        v48(v47, v58, v15);
        v25 -= v55;
        ++v63;
        a6 = v41;
      }
      while (v57 != v63);
      v65 += v55;
      v24 += v55;
      if (++v57 != v50)
        continue;
      break;
    }
  }
  sub_1000B44B0();
}

void sub_1003E2C10(unint64_t a1, unint64_t a2, char *a3, unint64_t a4, uint64_t a5, void (*a6)(unint64_t, int64_t, unint64_t), void (*a7)(_QWORD), uint64_t (*a8)(_QWORD *, uint64_t (*)(char *, uint64_t, uint64_t)))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  BOOL v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD *, unint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  char v50;
  void (*v51)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t);
  void (*v52)(_QWORD *, uint64_t);
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  _QWORD *v72;
  char v73;
  unint64_t v75;
  int64_t v78;
  uint64_t v80;
  void (*v81)(unint64_t, int64_t, unint64_t);
  unint64_t v82;
  unint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  void (*v88)(_QWORD);
  uint64_t (*v89)(_QWORD *, uint64_t (*)(char *, uint64_t, uint64_t));
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;

  v89 = a8;
  v81 = a6;
  v86 = a3;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  __chkstk_darwin(v12);
  v85 = (uint64_t *)((char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009D2A4();
  __chkstk_darwin(v14);
  sub_1000860D0();
  v93 = v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  sub_1000860D0();
  v84 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  sub_100079F7C();
  v91 = (uint64_t)v19;
  v96 = sub_1000C6DF4();
  __chkstk_darwin(v96);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v92 = (uint64_t *)((char *)&v80 - v23);
  sub_10009D2A4();
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  sub_100079F7C();
  v90 = (_QWORD *)v28;
  v94 = v26;
  v29 = *(_QWORD *)(v26 + 72);
  if (!v29)
  {
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v30 = a2 - a1;
  v31 = a2 - a1 == 0x8000000000000000 && v29 == -1;
  if (v31)
    goto LABEL_82;
  v32 = &v86[-a2];
  if (&v86[-a2] == (char *)0x8000000000000000 && v29 == -1)
    goto LABEL_83;
  v34 = v30 / v29;
  v35 = (uint64_t)v32 / v29;
  v87 = *(_QWORD *)(v26 + 72);
  v88 = a7;
  if (v30 / v29 >= (uint64_t)v32 / v29)
  {
    sub_1000DAC60(a2, (uint64_t)v32 / v29);
    v36 = a4 + v35 * v29;
    if (v35 * v29 >= 1 && a1 < a2)
    {
      v91 = -v29;
      v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 16);
      v83 = a4;
      v84 = v59;
      v60 = v86;
      v82 = a1;
      while (1)
      {
        v61 = v60;
        v95 = v36;
        v62 = (_QWORD *)v91;
        v90 = (_QWORD *)(v36 + v91);
        v63 = v96;
        v64 = v84;
        ((void (*)(_QWORD *))v84)(v92);
        v65 = (uint64_t)v62 + a2;
        v66 = v64(v21, v65, v63);
        a7(v66);
        v67 = v93;
        dispatch thunk of Column.value.getter(v93);
        sub_10009880C();
        v68 = sub_100098778();
        v69 = sub_100088FC8((uint64_t)v67, 1, v68);
        if (v31)
          goto LABEL_87;
        v70 = a2;
        a7(v69);
        v71 = (uint64_t (*)(char *, uint64_t, uint64_t))v85;
        dispatch thunk of Column.value.getter((uint64_t (*)(char *, uint64_t, uint64_t))v85);
        sub_10009880C();
        sub_100088FC8((uint64_t)v71, 1, v68);
        if (v31)
          goto LABEL_88;
        v60 = &v61[v91];
        v72 = v93;
        v73 = v89(v93, v71);
        sub_1000C1AA0((uint64_t)v71);
        sub_1000C1AA0((uint64_t)v72);
        sub_1000C1AA0((uint64_t)v21);
        sub_1000C1AA0((uint64_t)v92);
        if ((v73 & 1) != 0)
        {
          if ((unint64_t)v61 < v70 || (unint64_t)v60 >= v70)
          {
            sub_100099A50((uint64_t)v60, v65);
            a2 = v65;
            v75 = v82;
            a4 = v83;
            a7 = v88;
          }
          else
          {
            a7 = v88;
            v75 = v82;
            if (v61 != (char *)v70)
              sub_1000C549C((uint64_t)v60, v65);
            a2 = v65;
            a4 = v83;
          }
          v36 = v95;
        }
        else
        {
          if ((unint64_t)v61 < v95 || (unint64_t)v60 >= v95)
          {
            v36 = (unint64_t)v90;
            sub_100099A50((uint64_t)v60, (uint64_t)v90);
            a4 = v83;
            a7 = v88;
          }
          else
          {
            a7 = v88;
            v36 = (unint64_t)v90;
            if (v61 != (char *)v95)
              sub_1000C549C((uint64_t)v60, (uint64_t)v90);
            a4 = v83;
          }
          v75 = v82;
          a2 = v70;
        }
        if (v36 <= a4 || a2 <= v75)
        {
          v29 = v87;
          break;
        }
      }
    }
  }
  else
  {
    v93 = v27;
    sub_1000DAC60(a1, v30 / v29);
    v36 = a4 + v34 * v29;
    if (v34 * v29 >= 1 && a2 < (unint64_t)v86)
    {
      v38 = v93;
      v92 = *(_QWORD **)(v94 + 16);
      v95 = v36;
      do
      {
        v39 = v96;
        v40 = (uint64_t (*)(_QWORD *, unint64_t, uint64_t))v92;
        ((void (*)(_QWORD *, unint64_t, uint64_t))v92)(v90, a2, v96);
        v41 = v40(v38, a4, v39);
        a7(v41);
        v42 = (_QWORD *)v91;
        dispatch thunk of Column.value.getter((_QWORD *)v91);
        sub_10009880C();
        v43 = a7;
        v44 = sub_100098778();
        v45 = sub_100088FC8((uint64_t)v42, 1, v44);
        if (v31)
          goto LABEL_85;
        v46 = a2;
        v47 = a4;
        v43(v45);
        v48 = v84;
        dispatch thunk of Column.value.getter(v84);
        sub_10009880C();
        sub_100088FC8((uint64_t)v48, 1, v44);
        if (v31)
          goto LABEL_86;
        v49 = (uint64_t (*)(char *, uint64_t, uint64_t))v91;
        v50 = v89((_QWORD *)v91, v48);
        v51 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(*(_QWORD *)(v44 - 8)
                                                                                               + 8);
        v51(v48, v44);
        v51(v49, v44);
        v52 = *(void (**)(_QWORD *, uint64_t))(v94 + 8);
        v53 = v96;
        v52(v38, v96);
        v52(v90, v53);
        if ((v50 & 1) != 0)
        {
          a2 = v46 + v87;
          v54 = a1 < v46 || a1 >= a2;
          a4 = v47;
          if (v54)
          {
            sub_100099A50(a1, v46);
            a7 = v88;
          }
          else
          {
            a7 = v88;
            if (a1 != v46)
              sub_1000C549C(a1, v46);
          }
          v29 = v87;
        }
        else
        {
          v55 = v47;
          v29 = v87;
          a4 = v55 + v87;
          if (a1 < v55 || a1 >= a4)
          {
            sub_100099A50(a1, v55);
          }
          else if (a1 != v55)
          {
            sub_1000C549C(a1, v55);
          }
          a2 = v46;
          a7 = v88;
        }
        a1 += v29;
        v36 = v95;
      }
      while (a4 < v95 && a2 < (unint64_t)v86);
    }
    a2 = a1;
  }
  v78 = v36 - a4;
  if (v29 != -1 || v78 != 0x8000000000000000)
  {
    v81(a4, v78 / v29, a2);
    return;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
}

uint64_t sub_1003E31F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E3214(uint64_t a1)
{
  uint64_t v1;

  sub_1003E0EFC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1003E321C()
{
  uint64_t v0;

  sub_1003E0E3C(*(void **)(v0 + 16));
}

uint64_t sub_1003E3224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000E7C2C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003E3294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000E7C2C() - 8) + 80);
  sub_1003E0D6C(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1003E32C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  Swift::String *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  __n128 v54;
  void (*v55)(uint64_t *__return_ptr, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  id v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String *v80;
  void (*v81)(uint64_t *__return_ptr, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD v88[3];
  Swift::String v89;

  v84 = a1;
  v85 = a2;
  v83 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v80 = v4;
  type metadata accessor for EnvironmentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v82 = v6;
  v86 = (char *)type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v75 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v75 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v75 - v19;
  v21 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16);
  v22 = *(_QWORD *)(v2 + 24);
  sub_1000C292C();
  v23 = v88[0];
  v24 = *(_QWORD *)(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v77 = *(_QWORD *)(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v78 = v24;
  v25 = *(_QWORD *)(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v26 = *(_QWORD *)(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  swift_bridgeObjectRetain(v24);
  v76 = v25;
  v27 = v25;
  v28 = v26;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v26);
  swift_release(v23);
  sub_1000C292C();
  v29 = v88[0];
  sub_1000A6594(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v12, type metadata accessor for LocationsState);
  swift_release(v29);
  sub_10009C514((uint64_t)v12, (uint64_t)v20);
  v30 = sub_10006BD20((uint64_t)v12, type metadata accessor for LocationsState);
  v79 = v22;
  v81 = v21;
  v21(v88, v30);
  v31 = v88[0];
  sub_1000A6594(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, (uint64_t)v9, type metadata accessor for NotificationsOptInState);
  swift_release(v31);
  v32 = v9[*((int *)v86 + 14)];
  sub_10006BD20((uint64_t)v9, type metadata accessor for NotificationsOptInState);
  v86 = v20;
  sub_10009C514((uint64_t)v20, (uint64_t)v18);
  v33 = type metadata accessor for CurrentLocation(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v33) == 1)
  {
    sub_1003E3890((uint64_t)v18);
    v37 = 0;
    v38 = 0;
  }
  else
  {
    v37 = CurrentLocation.id.getter(v34);
    v38 = v39;
    sub_10006BD20((uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  v41 = v77;
  v40 = v78;
  v42 = v76;
  sub_10009AD1C(v37, v38, v77, v78, v76, v26, v35, v36, v75, v76, v77, v78, v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
    (uint64_t)v86);
  v44 = v43;
  swift_bridgeObjectRelease(v38);
  v45 = v75;
  sub_10009C514((uint64_t)v86, v75);
  if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v33) == 1)
  {
    sub_1003E3890(v45);
    v49 = 0;
    v50 = 0;
  }
  else
  {
    v49 = CurrentLocation.id.getter(v46);
    v50 = v51;
    sub_10006BD20(v45, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  sub_10066D12C(v49, v50, v41, v40, v42, v28, v47, v48, v75, v76, v77, v78, v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
    (uint64_t)v86);
  v53 = v52;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v40);
  v54 = swift_bridgeObjectRelease(v50);
  v55 = v81;
  ((void (*)(_QWORD *__return_ptr, __n128))v81)(v88, v54);
  v56 = v88[0];
  v57 = v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v88, 0, 0);
  v58 = v82;
  sub_1000A6594(v57, v82, type metadata accessor for EnvironmentState);
  swift_release(v56);
  LOBYTE(v57) = *(_BYTE *)(v58 + 1);
  v59 = sub_10006BD20(v58, type metadata accessor for EnvironmentState);
  v55(&v87, v59);
  v60 = *(_BYTE *)(v87 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  swift_release(v87);
  v61 = sub_10009AC0C(v32, v44 & 1, v53 & 1, v57, v60);
  v62 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v89._countAndFlagsBits = 0xD000000000000028;
  v89._object = (void *)0x80000001009FF450;
  v63._object = (void *)0x80000001009F4E40;
  v63._countAndFlagsBits = 0xD000000000000014;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v89);

  sub_1003E3890((uint64_t)v86);
  v66 = v80;
  *v80 = v65;
  strcpy((char *)&v66[1], "location.fill");
  HIWORD(v66[1]._object) = -4864;
  LOBYTE(v66[2]._countAndFlagsBits) = 0;
  v66[2]._object = 0;
  v66[3]._countAndFlagsBits = 0;
  swift_storeEnumTagMultiPayload(v66, v83, 4);
  v67 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v68 = v85;
  v69 = v85 + v67[5];
  v70 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v69, v84, v70);
  *(_BYTE *)(v69 + *(int *)(type metadata accessor for NotificationsOptInComponentViewModel(0) + 20)) = v61;
  v71 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v69, v71, 9);
  v72 = v68 + v67[7];
  v73 = type metadata accessor for LocationComponentAction(0);
  _s7Weather24LocationCompositionStateOwst_0(v72, 1, 1, v73);
  result = sub_100126800((uint64_t)v66, v68);
  *(_WORD *)(v68 + v67[6]) = 258;
  return result;
}

uint64_t sub_1003E3858()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1003E3890(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E38D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = a1[4];
      v17 = a1[5];
      v18 = a2[4];
      v19 = a2[5];
      if (v16 == v18 && v17 == v19)
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityComponentViewModel()
{
  return &type metadata for VisibilityComponentViewModel;
}

uint64_t *sub_1003E3980(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_1003E3A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1003E3A64(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_1003E3AE4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1003E3B68(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_1003E3BE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_1003E3C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E3C74);
}

uint64_t sub_1003E3C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1000D8F74();
  return _s7Weather24LocationCompositionStateOwet_0(v2, a2, v4);
}

uint64_t sub_1003E3CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E3CB0);
}

uint64_t sub_1003E3CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1000D8F74();
  return _s7Weather24LocationCompositionStateOwst_0(v2, a2, a2, v4);
}

uint64_t *sub_1003E3CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(_QWORD *)&v8[v11[5]] = *(_QWORD *)&v9[v11[5]];
    *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
    *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
    v12 = *(int *)(a3 + 24);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14);
    if (EnumCaseMultiPayload == 2)
    {
      v25 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v25;
      v26 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v27 = v26[5];
      v28 = &v13[v27];
      v29 = &v14[v27];
      v30 = type metadata accessor for AttributedString(0);
      v31 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v30 - 8) + 16);
      v32 = swift_bridgeObjectRetain(v25);
      v31(v28, v29, v30, v32);
      v33 = v26[6];
      v34 = &v13[v33];
      v35 = &v14[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = v26[7];
      v38 = &v13[v37];
      v39 = &v14[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = v26[8];
      v42 = &v13[v41];
      v43 = &v14[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = v26[9];
      v46 = &v13[v45];
      v47 = &v14[v45];
      v48 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      v49 = v26[10];
      v50 = &v13[v49];
      v51 = &v14[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v13[v26[11]] = v14[v26[11]];
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v52);
      v21 = v13;
      v22 = v15;
      v23 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v17 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v17;
      v18 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v18;
      v19 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v19;
      v20 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v20;
      v13[64] = v14[64];
      v13[65] = v14[65];
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
      v21 = v13;
      v22 = v15;
      v23 = 1;
    }
    else
    {
      v53 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v53;
      v54 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v54;
      v55 = *((_QWORD *)v14 + 4);
      v56 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = v55;
      *((_QWORD *)v13 + 5) = v56;
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v54);
      swift_bridgeObjectRetain(v56);
      v21 = v13;
      v22 = v15;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
  }
  return v4;
}

double sub_1003E3F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6);
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    v9 = v6 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    v10 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_1003E40C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v47;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13);
  v16 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v21 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v21;
    v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v23 = v22[5];
    v47 = &v12[v23];
    v24 = &v13[v23];
    v25 = type metadata accessor for AttributedString(0);
    v26 = v14;
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
    v28 = swift_bridgeObjectRetain(v21);
    v27(v47, v24, v25, v28);
    v14 = v26;
    v29 = v22[6];
    v30 = &v12[v29];
    v31 = &v13[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = v22[7];
    v34 = &v12[v33];
    v35 = &v13[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = v22[8];
    v38 = &v12[v37];
    v39 = &v13[v37];
    v18 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v18;
    v40 = v22[9];
    v41 = &v12[v40];
    v42 = &v13[v40];
    v19 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v19;
    v43 = v22[10];
    v44 = &v12[v43];
    v45 = &v13[v43];
    v20 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v20;
    v12[v22[11]] = v13[v22[11]];
    swift_bridgeObjectRetain(v32);
    v17 = v36;
  }
  else
  {
    if ((_DWORD)EnumCaseMultiPayload != 1)
    {
      v18 = *((_QWORD *)v13 + 1);
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v18;
      v19 = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_QWORD *)v12 + 3) = v19;
      v20 = *((_QWORD *)v13 + 5);
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 5) = v20;
      goto LABEL_7;
    }
    v17 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v17;
    v18 = *((_QWORD *)v13 + 3);
    *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 3) = v18;
    v19 = *((_QWORD *)v13 + 5);
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    *((_QWORD *)v12 + 5) = v19;
    v20 = *((_QWORD *)v13 + 7);
    *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
    *((_QWORD *)v12 + 7) = v20;
    v12[64] = v13[64];
    v12[65] = v13[65];
  }
  swift_bridgeObjectRetain(v17);
LABEL_7:
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

_QWORD *sub_1003E42F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v47;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_1000979AC((uint64_t)a1 + v11, type metadata accessor for LollipopDetailViewModel);
    v14 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13);
    v16 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v21 = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 1) = v21;
      v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v23 = v22[5];
      v47 = &v12[v23];
      v24 = &v13[v23];
      v25 = type metadata accessor for AttributedString(0);
      v26 = v14;
      v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v25 - 8) + 16);
      v28 = swift_bridgeObjectRetain(v21);
      v27(v47, v24, v25, v28);
      v14 = v26;
      v29 = v22[6];
      v30 = &v12[v29];
      v31 = &v13[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v32 = *((_QWORD *)v31 + 1);
      *((_QWORD *)v30 + 1) = v32;
      v33 = v22[7];
      v34 = &v12[v33];
      v35 = &v13[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v36 = *((_QWORD *)v35 + 1);
      *((_QWORD *)v34 + 1) = v36;
      v37 = v22[8];
      v38 = &v12[v37];
      v39 = &v13[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v18 = *((_QWORD *)v39 + 1);
      *((_QWORD *)v38 + 1) = v18;
      v40 = v22[9];
      v41 = &v12[v40];
      v42 = &v13[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v19 = *((_QWORD *)v42 + 1);
      *((_QWORD *)v41 + 1) = v19;
      v43 = v22[10];
      v44 = &v12[v43];
      v45 = &v13[v43];
      *(_QWORD *)v44 = *(_QWORD *)v45;
      v20 = *((_QWORD *)v45 + 1);
      *((_QWORD *)v44 + 1) = v20;
      v12[v22[11]] = v13[v22[11]];
      swift_bridgeObjectRetain(v32);
      v17 = v36;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        *(_QWORD *)v12 = *(_QWORD *)v13;
        v18 = *((_QWORD *)v13 + 1);
        *((_QWORD *)v12 + 1) = v18;
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        v19 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 3) = v19;
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        v20 = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 5) = v20;
        goto LABEL_8;
      }
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v17 = *((_QWORD *)v13 + 1);
      *((_QWORD *)v12 + 1) = v17;
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      v18 = *((_QWORD *)v13 + 3);
      *((_QWORD *)v12 + 3) = v18;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      v19 = *((_QWORD *)v13 + 5);
      *((_QWORD *)v12 + 5) = v19;
      *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
      v20 = *((_QWORD *)v13 + 7);
      *((_QWORD *)v12 + 7) = v20;
      v12[64] = v13[64];
      v12[65] = v13[65];
    }
    swift_bridgeObjectRetain(v17);
LABEL_8:
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  return a1;
}

_QWORD *sub_1003E45A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for LollipopDetailViewModel(0);
  if (swift_getEnumCaseMultiPayload(v13) == 2)
  {
    *v12 = *v13;
    v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v16 = v15[5];
    v17 = (char *)v12 + v16;
    v18 = (char *)v13 + v16;
    v19 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    *(_OWORD *)((char *)v12 + v15[6]) = *(_OWORD *)((char *)v13 + v15[6]);
    *(_OWORD *)((char *)v12 + v15[7]) = *(_OWORD *)((char *)v13 + v15[7]);
    *(_OWORD *)((char *)v12 + v15[8]) = *(_OWORD *)((char *)v13 + v15[8]);
    *(_OWORD *)((char *)v12 + v15[9]) = *(_OWORD *)((char *)v13 + v15[9]);
    *(_OWORD *)((char *)v12 + v15[10]) = *(_OWORD *)((char *)v13 + v15[10]);
    *((_BYTE *)v12 + v15[11]) = *((_BYTE *)v13 + v15[11]);
    swift_storeEnumTagMultiPayload(v12, v14, 2);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1003E4724(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (_OWORD *)((char *)a1 + v11);
    v13 = (_OWORD *)((char *)a2 + v11);
    sub_1000979AC((uint64_t)a1 + v11, type metadata accessor for LollipopDetailViewModel);
    v14 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v13) == 2)
    {
      *v12 = *v13;
      v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v16 = v15[5];
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v12 + v15[6]) = *(_OWORD *)((char *)v13 + v15[6]);
      *(_OWORD *)((char *)v12 + v15[7]) = *(_OWORD *)((char *)v13 + v15[7]);
      *(_OWORD *)((char *)v12 + v15[8]) = *(_OWORD *)((char *)v13 + v15[8]);
      *(_OWORD *)((char *)v12 + v15[9]) = *(_OWORD *)((char *)v13 + v15[9]);
      *(_OWORD *)((char *)v12 + v15[10]) = *(_OWORD *)((char *)v13 + v15[10]);
      *((_BYTE *)v12 + v15[11]) = *((_BYTE *)v13 + v15[11]);
      swift_storeEnumTagMultiPayload(v12, v14, 2);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003E48B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E48C4);
}

uint64_t sub_1003E48C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1000C490C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 20);
  }
  else
  {
    v7 = sub_1000BA944();
    v8 = *(int *)(a3 + 24);
  }
  return _s7Weather24LocationCompositionStateOwet_0(a1 + v8, a2, v7);
}

uint64_t sub_1003E4924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E4930);
}

uint64_t sub_1003E4930(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1000C490C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = *(int *)(a4 + 20);
  }
  else
  {
    v9 = sub_1000BA944();
    v10 = *(int *)(a4 + 24);
  }
  return _s7Weather24LocationCompositionStateOwst_0(a1 + v10, a2, a2, v9);
}

uint64_t type metadata accessor for DetailHeroChartActiveLollipopModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDF168, (uint64_t)&nominal type descriptor for DetailHeroChartActiveLollipopModel);
}

uint64_t sub_1003E49AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for LollipopMarkModel(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for LollipopDetailViewModel(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003E4A40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t active;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_QWORD *)a1 = *a2;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v8 = *(int *)(active + 20);
      v9 = a1 + v8;
      v10 = (uint64_t)a2 + v8;
      v11 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v9 + v12[5]) = *(_QWORD *)(v10 + v12[5]);
      *(_QWORD *)(v9 + v12[6]) = *(_QWORD *)(v10 + v12[6]);
      *(_QWORD *)(v9 + v12[7]) = *(_QWORD *)(v10 + v12[7]);
      v13 = *(int *)(active + 24);
      v14 = a1 + v13;
      v15 = (uint64_t)a2 + v13;
      v16 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15);
      v18 = EnumCaseMultiPayload;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v31 = *(_QWORD *)(v15 + 8);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *(_QWORD *)(v14 + 8) = v31;
        v32 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v33 = v32[5];
        v84 = v14 + v33;
        v34 = v15 + v33;
        v85 = v16;
        v35 = type metadata accessor for AttributedString(0);
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v35 - 8) + 16);
        v37 = swift_bridgeObjectRetain(v31);
        v36(v84, v34, v35, v37);
        v38 = v32[6];
        v39 = (_QWORD *)(v14 + v38);
        v40 = (_QWORD *)(v15 + v38);
        v41 = v40[1];
        *v39 = *v40;
        v39[1] = v41;
        v42 = v32[7];
        v43 = (_QWORD *)(v14 + v42);
        v44 = (_QWORD *)(v15 + v42);
        v45 = v44[1];
        *v43 = *v44;
        v43[1] = v45;
        v46 = v32[8];
        v47 = (_QWORD *)(v14 + v46);
        v48 = (_QWORD *)(v15 + v46);
        v20 = v48[1];
        *v47 = *v48;
        v47[1] = v20;
        v49 = v32[9];
        v50 = (_QWORD *)(v14 + v49);
        v51 = (_QWORD *)(v15 + v49);
        v21 = v51[1];
        *v50 = *v51;
        v50[1] = v21;
        v52 = v32[10];
        v53 = (_QWORD *)(v14 + v52);
        v54 = (_QWORD *)(v15 + v52);
        v22 = v54[1];
        *v53 = *v54;
        v53[1] = v22;
        *(_BYTE *)(v14 + v32[11]) = *(_BYTE *)(v15 + v32[11]);
        swift_bridgeObjectRetain(v41);
        v19 = v45;
        v16 = v85;
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          v20 = *(_QWORD *)(v15 + 8);
          *(_QWORD *)v14 = *(_QWORD *)v15;
          *(_QWORD *)(v14 + 8) = v20;
          v21 = *(_QWORD *)(v15 + 24);
          *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
          *(_QWORD *)(v14 + 24) = v21;
          v22 = *(_QWORD *)(v15 + 40);
          *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
          *(_QWORD *)(v14 + 40) = v22;
          goto LABEL_13;
        }
        v19 = *(_QWORD *)(v15 + 8);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        *(_QWORD *)(v14 + 8) = v19;
        v20 = *(_QWORD *)(v15 + 24);
        *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
        *(_QWORD *)(v14 + 24) = v20;
        v21 = *(_QWORD *)(v15 + 40);
        *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
        *(_QWORD *)(v14 + 40) = v21;
        v22 = *(_QWORD *)(v15 + 56);
        *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
        *(_QWORD *)(v14 + 56) = v22;
        *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
        *(_BYTE *)(v14 + 65) = *(_BYTE *)(v15 + 65);
      }
      swift_bridgeObjectRetain(v19);
LABEL_13:
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRetain(v22);
      swift_storeEnumTagMultiPayload(v14, v16, v18);
      v55 = a1;
      v56 = a3;
      v57 = 1;
LABEL_18:
      swift_storeEnumTagMultiPayload(v55, v56, v57);
      return a1;
    }
    v24 = type metadata accessor for LollipopDetailViewModel(0);
    v25 = swift_getEnumCaseMultiPayload(a2);
    v26 = v25;
    if ((_DWORD)v25 == 2)
    {
      v58 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v58;
      v59 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v60 = v59[5];
      v86 = a1 + v60;
      v61 = (uint64_t)a2 + v60;
      v62 = type metadata accessor for AttributedString(0);
      v63 = v24;
      v64 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v62 - 8) + 16);
      v65 = swift_bridgeObjectRetain(v58);
      v64(v86, v61, v62, v65);
      v24 = v63;
      v66 = v59[6];
      v67 = (_QWORD *)(a1 + v66);
      v68 = (uint64_t *)((char *)a2 + v66);
      v69 = v68[1];
      *v67 = *v68;
      v67[1] = v69;
      v70 = v59[7];
      v71 = (_QWORD *)(a1 + v70);
      v72 = (uint64_t *)((char *)a2 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = v59[8];
      v75 = (_QWORD *)(a1 + v74);
      v76 = (uint64_t *)((char *)a2 + v74);
      v28 = v76[1];
      *v75 = *v76;
      v75[1] = v28;
      v77 = v59[9];
      v78 = (_QWORD *)(a1 + v77);
      v79 = (uint64_t *)((char *)a2 + v77);
      v29 = v79[1];
      *v78 = *v79;
      v78[1] = v29;
      v80 = v59[10];
      v81 = (_QWORD *)(a1 + v80);
      v82 = (uint64_t *)((char *)a2 + v80);
      v30 = v82[1];
      *v81 = *v82;
      v81[1] = v30;
      *(_BYTE *)(a1 + v59[11]) = *((_BYTE *)a2 + v59[11]);
      swift_bridgeObjectRetain(v69);
      v27 = v73;
    }
    else
    {
      if ((_DWORD)v25 != 1)
      {
        v28 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v28;
        v29 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v29;
        v30 = a2[5];
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = v30;
        goto LABEL_17;
      }
      v27 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v27;
      v28 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v28;
      v29 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v29;
      v30 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v30;
      *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
    }
    swift_bridgeObjectRetain(v27);
LABEL_17:
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
    swift_storeEnumTagMultiPayload(a1, v24, v26);
    v55 = a1;
    v56 = a3;
    v57 = 0;
    goto LABEL_18;
  }
  v23 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

double sub_1003E4E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t active;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  double result;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (swift_getEnumCaseMultiPayload(a1) == 1)
  {
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v3 = v1 + *(int *)(active + 20);
    v4 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    v1 += *(int *)(active + 24);
    type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1);
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
          return result;
        goto LABEL_9;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    v8 = v1 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    v9 = type metadata accessor for AttributedString(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  type metadata accessor for LollipopDetailViewModel(0);
  v7 = swift_getEnumCaseMultiPayload(v1);
  switch(v7)
  {
    case 2:
      goto LABEL_10;
    case 1:
      goto LABEL_11;
    case 0:
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      break;
  }
  return result;
}

uint64_t sub_1003E4FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t active;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  if (swift_getEnumCaseMultiPayload(a2) != 1)
  {
    v22 = type metadata accessor for LollipopDetailViewModel(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    v24 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v55 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v55;
      v56 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v57 = v56[5];
      v84 = a1 + v57;
      v58 = a2 + v57;
      v59 = type metadata accessor for AttributedString(0);
      v60 = v22;
      v61 = a3;
      v62 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v59 - 8) + 16);
      v63 = swift_bridgeObjectRetain(v55);
      v62(v84, v58, v59, v63);
      a3 = v61;
      v22 = v60;
      v64 = v56[6];
      v65 = (_QWORD *)(a1 + v64);
      v66 = (_QWORD *)(a2 + v64);
      v67 = v66[1];
      *v65 = *v66;
      v65[1] = v67;
      v68 = v56[7];
      v69 = (_QWORD *)(a1 + v68);
      v70 = (_QWORD *)(a2 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      v72 = v56[8];
      v73 = (_QWORD *)(a1 + v72);
      v74 = (_QWORD *)(a2 + v72);
      v26 = v74[1];
      *v73 = *v74;
      v73[1] = v26;
      v75 = v56[9];
      v76 = (_QWORD *)(a1 + v75);
      v77 = (_QWORD *)(a2 + v75);
      v27 = v77[1];
      *v76 = *v77;
      v76[1] = v27;
      v78 = v56[10];
      v79 = (_QWORD *)(a1 + v78);
      v80 = (_QWORD *)(a2 + v78);
      v28 = v80[1];
      *v79 = *v80;
      v79[1] = v28;
      *(_BYTE *)(a1 + v56[11]) = *(_BYTE *)(a2 + v56[11]);
      swift_bridgeObjectRetain(v67);
      v25 = v71;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 1)
      {
        v26 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v26;
        v27 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v27;
        v28 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v28;
        goto LABEL_15;
      }
      v25 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v25;
      v26 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v26;
      v27 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v27;
      v28 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v28;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
    }
    swift_bridgeObjectRetain(v25);
LABEL_15:
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_storeEnumTagMultiPayload(a1, v22, v24);
    v54 = 0;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  v7 = *(int *)(active + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
  *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
  *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
  v12 = *(int *)(active + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for LollipopDetailViewModel(0);
  v16 = swift_getEnumCaseMultiPayload(v14);
  v17 = v16;
  if ((_DWORD)v16 == 2)
  {
    v29 = *(_QWORD *)(v14 + 8);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *(_QWORD *)(v13 + 8) = v29;
    v30 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v31 = v30[5];
    v82 = v13 + v31;
    v32 = v14 + v31;
    v83 = a3;
    v33 = type metadata accessor for AttributedString(0);
    v34 = v15;
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v33 - 8) + 16);
    v36 = swift_bridgeObjectRetain(v29);
    v35(v82, v32, v33, v36);
    v15 = v34;
    v37 = v30[6];
    v38 = (_QWORD *)(v13 + v37);
    v39 = (_QWORD *)(v14 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = v30[7];
    v42 = (_QWORD *)(v13 + v41);
    v43 = (_QWORD *)(v14 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v30[8];
    v46 = (_QWORD *)(v13 + v45);
    v47 = (_QWORD *)(v14 + v45);
    v19 = v47[1];
    *v46 = *v47;
    v46[1] = v19;
    v48 = v30[9];
    v49 = (_QWORD *)(v13 + v48);
    v50 = (_QWORD *)(v14 + v48);
    v20 = v50[1];
    *v49 = *v50;
    v49[1] = v20;
    v51 = v30[10];
    v52 = (_QWORD *)(v13 + v51);
    v53 = (_QWORD *)(v14 + v51);
    v21 = v53[1];
    *v52 = *v53;
    v52[1] = v21;
    *(_BYTE *)(v13 + v30[11]) = *(_BYTE *)(v14 + v30[11]);
    swift_bridgeObjectRetain(v40);
    v18 = v44;
    a3 = v83;
  }
  else
  {
    if ((_DWORD)v16 != 1)
    {
      v19 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_QWORD *)(v13 + 8) = v19;
      v20 = *(_QWORD *)(v14 + 24);
      *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v13 + 24) = v20;
      v21 = *(_QWORD *)(v14 + 40);
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
      *(_QWORD *)(v13 + 40) = v21;
      goto LABEL_11;
    }
    v18 = *(_QWORD *)(v14 + 8);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *(_QWORD *)(v13 + 8) = v18;
    v19 = *(_QWORD *)(v14 + 24);
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
    *(_QWORD *)(v13 + 24) = v19;
    v20 = *(_QWORD *)(v14 + 40);
    *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v13 + 40) = v20;
    v21 = *(_QWORD *)(v14 + 56);
    *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
    *(_QWORD *)(v13 + 56) = v21;
    *(_BYTE *)(v13 + 64) = *(_BYTE *)(v14 + 64);
    *(_BYTE *)(v13 + 65) = *(_BYTE *)(v14 + 65);
  }
  swift_bridgeObjectRetain(v18);
LABEL_11:
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v54 = 1;
LABEL_16:
  swift_storeEnumTagMultiPayload(a1, a3, v54);
  return a1;
}

uint64_t sub_1003E53D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t active;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  if (a1 != a2)
  {
    sub_1000979AC(a1, type metadata accessor for DetailHeroChartLollipopModel);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v7 = *(int *)(active + 20);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
      *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
      *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
      v12 = *(int *)(active + 24);
      v13 = a1 + v12;
      v14 = a2 + v12;
      v15 = type metadata accessor for LollipopDetailViewModel(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14);
      v17 = EnumCaseMultiPayload;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v29 = *(_QWORD *)(v14 + 8);
        *(_QWORD *)(v13 + 8) = v29;
        v30 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v31 = v30[5];
        v81 = v13 + v31;
        v32 = v14 + v31;
        v82 = v15;
        v33 = type metadata accessor for AttributedString(0);
        v34 = a3;
        v35 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v33 - 8) + 16);
        v36 = swift_bridgeObjectRetain(v29);
        v35(v81, v32, v33, v36);
        a3 = v34;
        v37 = v30[6];
        v38 = (_QWORD *)(v13 + v37);
        v39 = (_QWORD *)(v14 + v37);
        *v38 = *v39;
        v40 = v39[1];
        v38[1] = v40;
        v41 = v30[7];
        v42 = (_QWORD *)(v13 + v41);
        v43 = (_QWORD *)(v14 + v41);
        *v42 = *v43;
        v44 = v43[1];
        v42[1] = v44;
        v45 = v30[8];
        v46 = (_QWORD *)(v13 + v45);
        v47 = (_QWORD *)(v14 + v45);
        *v46 = *v47;
        v19 = v47[1];
        v46[1] = v19;
        v48 = v30[9];
        v49 = (_QWORD *)(v13 + v48);
        v50 = (_QWORD *)(v14 + v48);
        *v49 = *v50;
        v20 = v50[1];
        v49[1] = v20;
        v51 = v30[10];
        v52 = (_QWORD *)(v13 + v51);
        v53 = (_QWORD *)(v14 + v51);
        *v52 = *v53;
        v21 = v53[1];
        v52[1] = v21;
        *(_BYTE *)(v13 + v30[11]) = *(_BYTE *)(v14 + v30[11]);
        swift_bridgeObjectRetain(v40);
        v18 = v44;
        v15 = v82;
      }
      else
      {
        if ((_DWORD)EnumCaseMultiPayload != 1)
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v19 = *(_QWORD *)(v14 + 8);
          *(_QWORD *)(v13 + 8) = v19;
          *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
          v20 = *(_QWORD *)(v14 + 24);
          *(_QWORD *)(v13 + 24) = v20;
          *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
          v21 = *(_QWORD *)(v14 + 40);
          *(_QWORD *)(v13 + 40) = v21;
          goto LABEL_12;
        }
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v18 = *(_QWORD *)(v14 + 8);
        *(_QWORD *)(v13 + 8) = v18;
        *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
        v19 = *(_QWORD *)(v14 + 24);
        *(_QWORD *)(v13 + 24) = v19;
        *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
        v20 = *(_QWORD *)(v14 + 40);
        *(_QWORD *)(v13 + 40) = v20;
        *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
        v21 = *(_QWORD *)(v14 + 56);
        *(_QWORD *)(v13 + 56) = v21;
        *(_BYTE *)(v13 + 64) = *(_BYTE *)(v14 + 64);
        *(_BYTE *)(v13 + 65) = *(_BYTE *)(v14 + 65);
      }
      swift_bridgeObjectRetain(v18);
LABEL_12:
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      swift_storeEnumTagMultiPayload(v13, v15, v17);
      v54 = 1;
LABEL_17:
      swift_storeEnumTagMultiPayload(a1, a3, v54);
      return a1;
    }
    v22 = type metadata accessor for LollipopDetailViewModel(0);
    v23 = swift_getEnumCaseMultiPayload(a2);
    v24 = v23;
    if ((_DWORD)v23 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v55 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v55;
      v56 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v57 = v56[5];
      v83 = a1 + v57;
      v58 = a2 + v57;
      v59 = type metadata accessor for AttributedString(0);
      v60 = v22;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v59 - 8) + 16);
      v62 = swift_bridgeObjectRetain(v55);
      v61(v83, v58, v59, v62);
      v22 = v60;
      v63 = v56[6];
      v64 = (_QWORD *)(a1 + v63);
      v65 = (_QWORD *)(a2 + v63);
      *v64 = *v65;
      v66 = v65[1];
      v64[1] = v66;
      v67 = v56[7];
      v68 = (_QWORD *)(a1 + v67);
      v69 = (_QWORD *)(a2 + v67);
      *v68 = *v69;
      v70 = v69[1];
      v68[1] = v70;
      v71 = v56[8];
      v72 = (_QWORD *)(a1 + v71);
      v73 = (_QWORD *)(a2 + v71);
      *v72 = *v73;
      v26 = v73[1];
      v72[1] = v26;
      v74 = v56[9];
      v75 = (_QWORD *)(a1 + v74);
      v76 = (_QWORD *)(a2 + v74);
      *v75 = *v76;
      v27 = v76[1];
      v75[1] = v27;
      v77 = v56[10];
      v78 = (_QWORD *)(a1 + v77);
      v79 = (_QWORD *)(a2 + v77);
      *v78 = *v79;
      v28 = v79[1];
      v78[1] = v28;
      *(_BYTE *)(a1 + v56[11]) = *(_BYTE *)(a2 + v56[11]);
      swift_bridgeObjectRetain(v66);
      v25 = v70;
    }
    else
    {
      if ((_DWORD)v23 != 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v26 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 8) = v26;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v27 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v27;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v28 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v28;
        goto LABEL_16;
      }
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v25 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v25;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v26 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v26;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v27 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v27;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v28 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v28;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
    }
    swift_bridgeObjectRetain(v25);
LABEL_16:
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_storeEnumTagMultiPayload(a1, v22, v24);
    v54 = 0;
    goto LABEL_17;
  }
  return a1;
}

uint64_t type metadata accessor for DetailHeroChartLollipopModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDF218, (uint64_t)&nominal type descriptor for DetailHeroChartLollipopModel);
}

_QWORD *sub_1003E58BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t active;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if (swift_getEnumCaseMultiPayload(a2) == 1)
  {
    *a1 = *a2;
    active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v7 = *(int *)(active + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(_QWORD *)&v8[v11[5]] = *(_QWORD *)&v9[v11[5]];
    *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
    *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
    v12 = *(int *)(active + 24);
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(v14) == 2)
    {
      *v13 = *v14;
      v16 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v17 = v16[5];
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      *(_OWORD *)((char *)v13 + v16[6]) = *(_OWORD *)((char *)v14 + v16[6]);
      *(_OWORD *)((char *)v13 + v16[7]) = *(_OWORD *)((char *)v14 + v16[7]);
      *(_OWORD *)((char *)v13 + v16[8]) = *(_OWORD *)((char *)v14 + v16[8]);
      *(_OWORD *)((char *)v13 + v16[9]) = *(_OWORD *)((char *)v14 + v16[9]);
      *(_OWORD *)((char *)v13 + v16[10]) = *(_OWORD *)((char *)v14 + v16[10]);
      *((_BYTE *)v13 + v16[11]) = *((_BYTE *)v14 + v16[11]);
      swift_storeEnumTagMultiPayload(v13, v15, 2);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v27 = a1;
    v28 = a3;
    v29 = 1;
  }
  else
  {
    v21 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload(a2) == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      v23 = v22[5];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)((char *)a1 + v22[6]) = *(_OWORD *)((char *)a2 + v22[6]);
      *(_OWORD *)((char *)a1 + v22[7]) = *(_OWORD *)((char *)a2 + v22[7]);
      *(_OWORD *)((char *)a1 + v22[8]) = *(_OWORD *)((char *)a2 + v22[8]);
      *(_OWORD *)((char *)a1 + v22[9]) = *(_OWORD *)((char *)a2 + v22[9]);
      *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
      *((_BYTE *)a1 + v22[11]) = *((_BYTE *)a2 + v22[11]);
      swift_storeEnumTagMultiPayload(a1, v21, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v27 = a1;
    v28 = a3;
    v29 = 0;
  }
  swift_storeEnumTagMultiPayload(v27, v28, v29);
  return a1;
}

_QWORD *sub_1003E5B48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t active;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for DetailHeroChartLollipopModel);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      *a1 = *a2;
      active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      v7 = *(int *)(active + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(_QWORD *)&v8[v11[5]] = *(_QWORD *)&v9[v11[5]];
      *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
      *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
      v12 = *(int *)(active + 24);
      v13 = (_OWORD *)((char *)a1 + v12);
      v14 = (_OWORD *)((char *)a2 + v12);
      v15 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(v14) == 2)
      {
        *v13 = *v14;
        v16 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v17 = v16[5];
        v18 = (char *)v13 + v17;
        v19 = (char *)v14 + v17;
        v20 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        *(_OWORD *)((char *)v13 + v16[6]) = *(_OWORD *)((char *)v14 + v16[6]);
        *(_OWORD *)((char *)v13 + v16[7]) = *(_OWORD *)((char *)v14 + v16[7]);
        *(_OWORD *)((char *)v13 + v16[8]) = *(_OWORD *)((char *)v14 + v16[8]);
        *(_OWORD *)((char *)v13 + v16[9]) = *(_OWORD *)((char *)v14 + v16[9]);
        *(_OWORD *)((char *)v13 + v16[10]) = *(_OWORD *)((char *)v14 + v16[10]);
        *((_BYTE *)v13 + v16[11]) = *((_BYTE *)v14 + v16[11]);
        swift_storeEnumTagMultiPayload(v13, v15, 2);
      }
      else
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      v27 = a1;
      v28 = a3;
      v29 = 1;
    }
    else
    {
      v21 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload(a2) == 2)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        v23 = v22[5];
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        *(_OWORD *)((char *)a1 + v22[6]) = *(_OWORD *)((char *)a2 + v22[6]);
        *(_OWORD *)((char *)a1 + v22[7]) = *(_OWORD *)((char *)a2 + v22[7]);
        *(_OWORD *)((char *)a1 + v22[8]) = *(_OWORD *)((char *)a2 + v22[8]);
        *(_OWORD *)((char *)a1 + v22[9]) = *(_OWORD *)((char *)a2 + v22[9]);
        *(_OWORD *)((char *)a1 + v22[10]) = *(_OWORD *)((char *)a2 + v22[10]);
        *((_BYTE *)a1 + v22[11]) = *((_BYTE *)a2 + v22[11]);
        swift_storeEnumTagMultiPayload(a1, v21, 2);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      v27 = a1;
      v28 = a3;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return a1;
}

uint64_t sub_1003E5DEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for LollipopDetailViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for DetailHeroChartActiveLollipopModel(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003E5E6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  sub_1000C1590();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100079F58();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  sub_100080C0C(v1, v2, v5);
  if (swift_getEnumCaseMultiPayload(v2) == 1)
  {
    sub_10007802C(v2, (uint64_t)v0, type metadata accessor for DetailHeroChartActiveLollipopModel);
    v6 = *v0;
    sub_1000C490C();
    sub_1000979AC((uint64_t)v0, type metadata accessor for DetailHeroChartActiveLollipopModel);
  }
  else
  {
    sub_1000979AC(v2, type metadata accessor for DetailHeroChartLollipopModel);
    return 0;
  }
  return v6;
}

BOOL sub_1003E5F6C(double *a1, double *a2)
{
  int *v4;

  if (*a1 == *a2
    && (v4 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0),
        (static Date.== infix(_:_:)((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) != 0)
    && *(double *)((char *)a1 + v4[6]) == *(double *)((char *)a2 + v4[6]))
  {
    return *(double *)((char *)a1 + v4[7]) == *(double *)((char *)a2 + v4[7]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1003E5FF4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v8;
  unint64_t v10;
  char v12;

  if (a1 == 120 && a2 == 0xE100000000000000)
  {
    v5 = 0xE100000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(120, 0xE100000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    v8 = 0xE400000000000000;
    goto LABEL_16;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702125924, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (a1 == 0x597472617473 && a2 == 0xE600000000000000)
  {
    v10 = 0xE600000000000000;
    goto LABEL_24;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x597472617473, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2;
  }
  if (a1 == 1499754085 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 3;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(1499754085, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1003E615C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003E6184 + 4 * byte_10099CB30[a1]))(120, 0xE100000000000000);
}

uint64_t sub_1003E6184()
{
  return 1702125924;
}

uint64_t sub_1003E6194()
{
  return 0x597472617473;
}

uint64_t sub_1003E61A8()
{
  return 1499754085;
}

uint64_t sub_1003E61B8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BDF270);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1003E6A80();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for DetailHeroChartLollipopPosition.CodingKeys, &type metadata for DetailHeroChartLollipopPosition.CodingKeys, v10, v8, v9);
  v20 = *v4;
  v19 = 0;
  v11 = sub_1003E6AF8();
  sub_1000C26D4((uint64_t)&v20, (uint64_t)&v19, v6, (uint64_t)&type metadata for CGFloat, v11);
  if (!v2)
  {
    v12 = (uint64_t)v4 + *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
    v18 = 1;
    v13 = type metadata accessor for Date(0);
    sub_1000A84E0(&qword_100BC3578, (uint64_t)&protocol conformance descriptor for Date);
    sub_1000C26D4(v12, (uint64_t)&v18, v6, v13, v14);
    v17 = 2;
    sub_1000C536C((uint64_t)&v17);
    v16 = 3;
    sub_1000C536C((uint64_t)&v16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

void sub_1003E6340(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;

  v22 = type metadata accessor for Date(0);
  v20 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100098728();
  v6 = v5 - v4;
  v19 = sub_1000BA294(&qword_100BDF258);
  v7 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_100098728();
  v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = (char *)(v10 - v9);
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1003E6A80();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DetailHeroChartLollipopPosition.CodingKeys, &type metadata for DetailHeroChartLollipopPosition.CodingKeys, v14, v12, v13);
  if (v2)
  {
    sub_1000998EC();
  }
  else
  {
    v26 = 0;
    sub_1003E6ABC();
    sub_100098CBC((uint64_t)&type metadata for CGFloat, (uint64_t)&v26, v19, (uint64_t)&type metadata for CGFloat);
    *(_QWORD *)v11 = v27;
    v25 = 1;
    sub_1000A84E0(&qword_100BC3558, (uint64_t)&protocol conformance descriptor for Date);
    sub_100098CBC(v22, (uint64_t)&v25, v19, v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v11[v21[5]], v6, v22);
    v24 = 2;
    sub_1000B4734((uint64_t)&v24);
    *(_QWORD *)&v11[v21[6]] = v15;
    v23 = 3;
    sub_1000B4734((uint64_t)&v23);
    v17 = v16;
    sub_1000BABB0(v7);
    *(_QWORD *)&v11[v21[7]] = v17;
    sub_100080C0C((uint64_t)v11, a2, type metadata accessor for DetailHeroChartLollipopPosition);
    sub_1000998EC();
    sub_1000979AC((uint64_t)v11, type metadata accessor for DetailHeroChartLollipopPosition);
  }
}

uint64_t sub_1003E65F4()
{
  unsigned __int8 *v0;

  return sub_1003E615C(*v0);
}

uint64_t sub_1003E65FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003E5FF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003E6620(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003E6A80();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003E6648(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003E6A80();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003E6674(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003E6340(a1, a2);
}

uint64_t sub_1003E6688(_QWORD *a1)
{
  return sub_1003E61B8(a1);
}

void sub_1003E669C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1006952EC(a1, a2);
}

void sub_1003E66B0()
{
  sub_10069542C();
}

uint64_t sub_1003E66C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v34 = sub_1000C1590();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = (double *)(v7 - v6);
  sub_1000BA944();
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v16 = (double *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v18 = (char *)&v33 - v17;
  sub_1000BA294(&qword_100BDF250);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100079F58();
  v21 = v2 + *(int *)(v20 + 48);
  sub_100080C0C(a1, v2, type metadata accessor for DetailHeroChartLollipopModel);
  sub_100080C0C(a2, v21, type metadata accessor for DetailHeroChartLollipopModel);
  if (swift_getEnumCaseMultiPayload(v2) != 1)
  {
    sub_100080C0C(v2, (uint64_t)v18, type metadata accessor for DetailHeroChartLollipopModel);
    if (sub_1000D1798() != 1)
    {
      sub_10007802C(v21, v12, type metadata accessor for LollipopDetailViewModel);
      v27 = sub_10036B9EC((uint64_t)v18, v12);
      sub_1000C3A04(v12);
      sub_1000C3A04((uint64_t)v18);
      sub_10009C968(v30, type metadata accessor for DetailHeroChartLollipopModel);
      return v27 & 1;
    }
    v28 = type metadata accessor for LollipopDetailViewModel;
    v29 = (uint64_t)v18;
    goto LABEL_16;
  }
  sub_100080C0C(v2, (uint64_t)v16, type metadata accessor for DetailHeroChartLollipopModel);
  if (sub_1000D1798() != 1)
  {
    v28 = type metadata accessor for DetailHeroChartActiveLollipopModel;
    v29 = (uint64_t)v16;
LABEL_16:
    sub_1000979AC(v29, v28);
    sub_1003E6A40(v2);
LABEL_19:
    v27 = 0;
    return v27 & 1;
  }
  sub_10007802C(v21, (uint64_t)v8, type metadata accessor for DetailHeroChartActiveLollipopModel);
  if (*v16 != *v8
    || (static Date.== infix(_:_:)((char *)v16 + *(int *)(v34 + 20), (char *)v8 + *(int *)(v34 + 20)) & 1) == 0
    || (v22 = sub_1000C490C(), sub_1000CCCC8(*(int *)(v22 + 20)), !v24)
    || (sub_1000CCCC8(*(int *)(v23 + 24)), !v24)
    || (sub_1000CCCC8(*(int *)(v25 + 28)), !v24)
    || (sub_10036B9EC((uint64_t)v16 + *(int *)(v34 + 24), (uint64_t)v8 + *(int *)(v34 + 24)) & 1) == 0)
  {
    sub_1000C3A04((uint64_t)v8);
    sub_1000C3A04((uint64_t)v16);
    sub_10009C968(v31, type metadata accessor for DetailHeroChartLollipopModel);
    goto LABEL_19;
  }
  sub_1000C3A04((uint64_t)v8);
  sub_1000C3A04((uint64_t)v16);
  sub_10009C968(v26, type metadata accessor for DetailHeroChartLollipopModel);
  v27 = 1;
  return v27 & 1;
}

uint64_t sub_1003E698C(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  if (*a1 == *a2
    && (v4 = sub_1000C1590(),
        (static Date.== infix(_:_:)((char *)a1 + *(int *)(v4 + 20), (char *)a2 + *(int *)(v4 + 20)) & 1) != 0)
    && (v5 = sub_1000C490C(), sub_1000E7054(*(int *)(v5 + 20)), v7)
    && (sub_1000E7054(*(int *)(v6 + 24)), v7)
    && (sub_1000E7054(*(int *)(v8 + 28)), v7))
  {
    return sub_10036B9EC((uint64_t)a1 + *(int *)(v4 + 24), (uint64_t)a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1003E6A40(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BDF250);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003E6A80()
{
  unint64_t result;

  result = qword_100BDF260;
  if (!qword_100BDF260)
  {
    result = swift_getWitnessTable(&unk_10099CD8C, &type metadata for DetailHeroChartLollipopPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF260);
  }
  return result;
}

unint64_t sub_1003E6ABC()
{
  unint64_t result;

  result = qword_100BDF268;
  if (!qword_100BDF268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100BDF268);
  }
  return result;
}

unint64_t sub_1003E6AF8()
{
  unint64_t result;

  result = qword_100BDF278;
  if (!qword_100BDF278)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100BDF278);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DetailHeroChartLollipopPosition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003E6B80 + 4 * byte_10099CB39[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003E6BB4 + 4 * byte_10099CB34[v4]))();
}

uint64_t sub_1003E6BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E6BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003E6BC4);
  return result;
}

uint64_t sub_1003E6BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003E6BD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003E6BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E6BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetailHeroChartLollipopPosition.CodingKeys()
{
  return &type metadata for DetailHeroChartLollipopPosition.CodingKeys;
}

unint64_t sub_1003E6C04()
{
  unint64_t result;

  result = qword_100BDF280;
  if (!qword_100BDF280)
  {
    result = swift_getWitnessTable(&unk_10099CD64, &type metadata for DetailHeroChartLollipopPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF280);
  }
  return result;
}

unint64_t sub_1003E6C44()
{
  unint64_t result;

  result = qword_100BDF288;
  if (!qword_100BDF288)
  {
    result = swift_getWitnessTable(&unk_10099CCD4, &type metadata for DetailHeroChartLollipopPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF288);
  }
  return result;
}

unint64_t sub_1003E6C84()
{
  unint64_t result;

  result = qword_100BDF290;
  if (!qword_100BDF290)
  {
    result = swift_getWitnessTable(&unk_10099CCFC, &type metadata for DetailHeroChartLollipopPosition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF290);
  }
  return result;
}

uint64_t sub_1003E6CC0()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(&unk_100C070A0, v2, 1, 0);
  *(_QWORD *)(v0 + 16) = sub_1007B18E4();
  sub_100120350();
  *(_QWORD *)(v0 + 24) = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD00000000000001CLL, 0x800000010099CE00);
  return v0;
}

uint64_t sub_1003E6D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OSSignpostID.init(log:)(*(id *)(v2 + 24));
  v10 = static os_signpost_type_t.begin.getter(v9);
  sub_1000BABC0(v10);
  v11 = sub_1003E6E3C(a1, a2);
  v12 = static os_signpost_type_t.end.getter(v11);
  sub_1000BABC0(v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = type metadata accessor for MoonScrubberViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v13);
}

uint64_t sub_1003E6E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  void (*v87)(char *, uint64_t, uint64_t);
  void (*v88)(char *, char *, uint64_t);
  void (*v89)(char *, uint64_t);
  char *v90;
  char *v91;
  char v92;
  _QWORD *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  id v109;
  Swift::String v110;
  Swift::String v111;
  Swift::String v112;
  void (*object)(char *, uint64_t);
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  Swift::String v132;
  uint64_t v133;
  int *v134;
  void (**v135)(char *, uint64_t);
  unint64_t v136;
  void (*v137)(char *, uint64_t);
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  int *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(char *, char *, uint64_t);
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  __n128 v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  int *v161;
  void (*v162)(uint64_t, char *, uint64_t);
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int *v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  unint64_t v192;
  _QWORD *v193;
  void (*v194)(char *, uint64_t);
  _QWORD *v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(char *, uint64_t);
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  void *v222;
  void *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  int *v240;
  char *v241;
  char *v242;
  void (*countAndFlagsBits)(char *, uint64_t);
  int v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  _QWORD v259[2];
  Swift::String v260;

  v215 = a2;
  v3 = sub_1000BA294(&qword_100BC6430);
  __chkstk_darwin(v3);
  v214 = (uint64_t)&v198 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BDF348);
  __chkstk_darwin(v5);
  v205 = (uint64_t)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v7);
  v206 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDF350);
  __chkstk_darwin(v9);
  v216 = (uint64_t)&v198 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = (int *)type metadata accessor for ScrubberDay(0);
  v238 = *((_QWORD *)v240 - 1);
  v11 = __chkstk_darwin(v240);
  v200 = (uint64_t)&v198 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v199 = (uint64_t)&v198 - v14;
  v15 = __chkstk_darwin(v13);
  v207 = (uint64_t)&v198 - v16;
  __chkstk_darwin(v15);
  v245 = (uint64_t)&v198 - v17;
  v231 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0);
  v230 = *(_QWORD *)(v231 - 8);
  __chkstk_darwin(v231);
  v229 = (char *)&v198 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin(v19);
  v228 = (char *)&v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Locale(0);
  __chkstk_darwin(v21);
  v237 = (char *)&v198 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100BDF358);
  __chkstk_darwin(v23);
  v236 = (uint64_t)&v198 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BDF360);
  __chkstk_darwin(v25);
  v235 = (uint64_t)&v198 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for Date.FormatStyle(0);
  v226 = *(_QWORD *)(v227 - 8);
  v27 = __chkstk_darwin(v227);
  v225 = (char *)&v198 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v234 = (char *)&v198 - v29;
  v249 = type metadata accessor for ScrubberHour(0);
  v247 = *(_QWORD *)(v249 - 8);
  v30 = __chkstk_darwin(v249);
  v198 = (uint64_t)&v198 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v204 = (uint64_t)&v198 - v33;
  v34 = __chkstk_darwin(v32);
  v258 = (unint64_t)&v198 - v35;
  v36 = __chkstk_darwin(v34);
  v257 = (uint64_t)&v198 - v37;
  __chkstk_darwin(v36);
  v39 = (char *)&v198 - v38;
  v256 = sub_1000BA294(&qword_100BDF368);
  v40 = __chkstk_darwin(v256);
  v253 = (char *)&v198 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v219 = (uint64_t)&v198 - v42;
  v43 = type metadata accessor for Date(0);
  v254 = *(void (**)(char *, char *, uint64_t))(v43 - 8);
  v44 = __chkstk_darwin(v43);
  v213 = (char *)&v198 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __chkstk_darwin(v44);
  v218 = (char *)&v198 - v47;
  v48 = __chkstk_darwin(v46);
  v203 = (char *)&v198 - v49;
  v50 = __chkstk_darwin(v48);
  v202 = (char *)&v198 - v51;
  v52 = __chkstk_darwin(v50);
  v201 = (char *)&v198 - v53;
  v54 = __chkstk_darwin(v52);
  v252 = (char *)&v198 - v55;
  v56 = __chkstk_darwin(v54);
  v251 = (char *)&v198 - v57;
  v58 = __chkstk_darwin(v56);
  v60 = (char *)&v198 - v59;
  v61 = __chkstk_darwin(v58);
  v63 = (char *)&v198 - v62;
  v64 = __chkstk_darwin(v61);
  v241 = (char *)&v198 - v65;
  v66 = __chkstk_darwin(v64);
  v221 = (char *)&v198 - v67;
  __chkstk_darwin(v66);
  v242 = (char *)&v198 - v68;
  v69 = type metadata accessor for TimeZone(0);
  v70 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v72 = (char *)&v198 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for Calendar(0);
  v210 = *(_QWORD *)(v211 - 8);
  v73 = __chkstk_darwin(v211);
  v224 = (char *)&v198 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __chkstk_darwin(v73);
  v255 = (uint64_t)&v198 - v76;
  Location.timeZone.getter(v75);
  static Calendar.currentCalendar(with:)(v72);
  v212 = v70;
  v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  v78 = v63;
  v77(v72, v69);
  v208 = type metadata accessor for MoonScrubberInput(0);
  v79 = a1 + *(int *)(v208 + 24);
  v233 = a1;
  Location.timeZone.getter(v208);
  v80 = (uint64_t)v242;
  v209 = v79;
  Date.startOfDay(timeZone:)(v72);
  v239 = v72;
  v220 = v69;
  v217 = v77;
  v77(v72, v69);
  v81 = v256;
  v82 = v219;
  v250 = (char *)(v219 + *(int *)(v256 + 48));
  v83 = v250;
  sub_100227364(v219, v250, v80, v255);
  v85 = v253;
  v84 = v254;
  v86 = &v253[*(int *)(v81 + 48)];
  v87 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v254 + 2);
  v87(v253, v82, v43);
  v87(v86, (uint64_t)v83, v43);
  v88 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v84 + 4);
  v88(v221, v85, v43);
  v89 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
  v89(v86, v43);
  v90 = &v85[*(int *)(v256 + 48)];
  v87(v85, v82, v43);
  v87(v90, (uint64_t)v250, v43);
  v91 = v241;
  v254 = v88;
  v88(v241, v90, v43);
  v256 = (uint64_t)v89;
  v89(v85, v43);
  v87(v78, (uint64_t)v221, v43);
  v92 = static Date.< infix(_:_:)(v78, v91);
  v248 = v43;
  v250 = v78;
  v253 = (char *)v87;
  if ((v92 & 1) != 0)
  {
    v93 = _swiftEmptyArrayStorage;
    v223 = (void *)0x80000001009FF540;
    v222 = (void *)0x80000001009FF520;
    v94 = _swiftEmptyArrayStorage;
    v95 = v251;
    do
    {
      v246 = v93;
      v87(v60, (uint64_t)v78, v43);
      Date.wc_addDays(_:calendar:)(1, v255);
      if ((static Date.< infix(_:_:)(v60, v95) & 1) != 0)
      {
        v96 = *(_QWORD *)(v232 + 16);
        v97 = _swiftEmptyArrayStorage;
        do
        {
          v87(v39, (uint64_t)v60, v43);
          v98 = static Date.== infix(_:_:)(v60, v78);
          v39[*(int *)(v249 + 20)] = v98 & 1;
          sub_100080C0C((uint64_t)v39, v257, type metadata accessor for ScrubberHour);
          if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
          {
            sub_1005FF1FC();
            v94 = v105;
          }
          v99 = v94[2];
          if (v99 >= v94[3] >> 1)
          {
            sub_1005FF1FC();
            v94 = v106;
          }
          v94[2] = v99 + 1;
          v100 = (*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80);
          v101 = *(_QWORD *)(v247 + 72);
          sub_10007802C(v257, (uint64_t)v94 + v100 + v101 * v99, type metadata accessor for ScrubberHour);
          sub_100080C0C((uint64_t)v39, v258, type metadata accessor for ScrubberHour);
          if ((swift_isUniquelyReferenced_nonNull_native(v97) & 1) == 0)
          {
            sub_1005FF1FC();
            v97 = v107;
          }
          v102 = v97[2];
          if (v102 >= v97[3] >> 1)
          {
            sub_1005FF1FC();
            v97 = v108;
          }
          v97[2] = v102 + 1;
          sub_10007802C(v258, (uint64_t)v97 + v100 + v102 * v101, type metadata accessor for ScrubberHour);
          v103 = v252;
          Date.wc_addHours(_:calendar:)(v96, v255);
          sub_1000215BC((uint64_t)v39, type metadata accessor for ScrubberHour);
          v43 = v248;
          ((void (*)(char *, uint64_t))v256)(v60, v248);
          v254(v60, v103, v43);
          v104 = static Date.< infix(_:_:)(v60, v251);
          v78 = v250;
          v87 = (void (*)(char *, uint64_t, uint64_t))v253;
        }
        while ((v104 & 1) != 0);
      }
      else
      {
        v97 = _swiftEmptyArrayStorage;
      }
      v244 = static Date.== infix(_:_:)(v78, v242);
      if ((v244 & 1) != 0)
      {
        v109 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v260._countAndFlagsBits = 0xD000000000000082;
        v260._object = v223;
        v110._countAndFlagsBits = 0xD00000000000001DLL;
        v110._object = v222;
        v111._countAndFlagsBits = 0x5941444F54;
        v111._object = (void *)0xE500000000000000;
        v112 = NSLocalizedString(_:tableName:bundle:value:comment:)(v110, (Swift::String_optional)0, (NSBundle)v109, v111, v260);
        countAndFlagsBits = (void (*)(char *, uint64_t))v112._countAndFlagsBits;
        object = (void (*)(char *, uint64_t))v112._object;

      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v253)(v252, v78, v43);
        v115 = type metadata accessor for Date.FormatStyle.DateStyle(0);
        _s7Weather24LocationCompositionStateOwst_0(v235, 1, 1, v115);
        v116 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
        v117 = _s7Weather24LocationCompositionStateOwst_0(v236, 1, 1, v116);
        Location.timeZone.getter(v117);
        v119 = static Locale.autoupdatingCurrent.getter(v118);
        v120 = v224;
        v121 = static Calendar.autoupdatingCurrent.getter(v119);
        v122 = v228;
        static FormatStyleCapitalizationContext.unknown.getter(v121);
        v123 = v225;
        v124 = Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v235, v236, v237, v120, v239, v122);
        v125 = v229;
        static Date.FormatStyle.Symbol.Weekday.abbreviated.getter(v124);
        Date.FormatStyle.weekday(_:)(v125);
        (*(void (**)(char *, uint64_t))(v230 + 8))(v125, v231);
        countAndFlagsBits = *(void (**)(char *, uint64_t))(v226 + 8);
        v126 = v123;
        v127 = v227;
        countAndFlagsBits(v126, v227);
        v128 = sub_1003E8344();
        v129 = v234;
        v130 = v252;
        Date.formatted<A>(_:)(v259, v234, v127, v128);
        countAndFlagsBits(v129, v127);
        v87 = (void (*)(char *, uint64_t, uint64_t))v253;
        ((void (*)(char *, uint64_t))v256)(v130, v43);
        v131 = v259[1];
        v132 = String.uppercasedWithPreferredLocale()();
        countAndFlagsBits = (void (*)(char *, uint64_t))v132._countAndFlagsBits;
        object = (void (*)(char *, uint64_t))v132._object;
        v114 = swift_bridgeObjectRelease(v131);
      }
      v133 = v245;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v87)(v245, v78, v43, v114);
      v134 = v240;
      *(_QWORD *)(v133 + v240[5]) = v97;
      v135 = (void (**)(char *, uint64_t))(v133 + v134[6]);
      *v135 = countAndFlagsBits;
      v135[1] = object;
      *(_BYTE *)(v133 + v134[7]) = v244 & 1;
      v93 = v246;
      if ((swift_isUniquelyReferenced_nonNull_native(v246) & 1) == 0)
      {
        sub_1005FF210();
        v93 = v138;
      }
      v136 = v93[2];
      if (v136 >= v93[3] >> 1)
      {
        sub_1005FF210();
        v93 = v139;
      }
      v93[2] = v136 + 1;
      sub_10007802C(v245, (uint64_t)v93+ ((*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80))+ *(_QWORD *)(v238 + 72) * v136, type metadata accessor for ScrubberDay);
      v137 = (void (*)(char *, uint64_t))v256;
      ((void (*)(char *, uint64_t))v256)(v60, v43);
      v137(v78, v43);
      v95 = v251;
      v254(v78, v251, v43);
    }
    while ((static Date.< infix(_:_:)(v78, v241) & 1) != 0);
  }
  else
  {
    v94 = _swiftEmptyArrayStorage;
    v93 = _swiftEmptyArrayStorage;
  }
  v246 = v93;
  v140 = v216;
  sub_10020CC00((uint64_t)v93, v216);
  v141 = v240;
  if (_s7Weather24LocationCompositionStateOwet_0(v140, 1, (uint64_t)v240) != 1)
  {
    v144 = v140;
    v145 = v207;
    sub_10007802C(v144, v207, type metadata accessor for ScrubberDay);
    v146 = v141[5];
    v147 = v205;
    sub_10020CC0C(*(_QWORD *)(v145 + v146), v205);
    if (_s7Weather24LocationCompositionStateOwet_0(v147, 1, v249) == 1)
    {
      sub_100021A14(v147, &qword_100BDF348);
      v148 = (uint64_t)v206;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 1, 1, v43);
LABEL_31:
      sub_1000215BC(v145, type metadata accessor for ScrubberDay);
      v142 = (uint64_t *)&unk_100BD35A0;
      v143 = v148;
      goto LABEL_32;
    }
    v148 = (uint64_t)v206;
    v87(v206, v147, v43);
    sub_1000215BC(v147, type metadata accessor for ScrubberHour);
    _s7Weather24LocationCompositionStateOwst_0(v148, 0, 1, v43);
    if (_s7Weather24LocationCompositionStateOwet_0(v148, 1, v43) == 1)
      goto LABEL_31;
    v254(v201, (char *)v148, v43);
    v164 = v202;
    v165 = v255;
    v166 = Date.wc_addHours(_:calendar:)(*(_QWORD *)(v232 + 16), v255);
    v167 = v239;
    Location.timeZone.getter(v166);
    v168 = v203;
    Date.startOfDay(timeZone:)(v167);
    v217(v167, v220);
    v169 = v204;
    Date.addMinutes(_:calendar:)(-1, v165);
    v170 = static Date.== infix(_:_:)(v164, v168);
    *(_BYTE *)(v169 + *(int *)(v249 + 20)) = v170 & 1;
    v171 = v198;
    sub_100080C0C(v169, v198, type metadata accessor for ScrubberHour);
    if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
    {
      sub_1005FF1FC();
      v94 = v195;
    }
    v172 = v94[2];
    v173 = v172 + 1;
    if (v172 >= v94[3] >> 1)
    {
      sub_1005FF1FC();
      v94 = v196;
    }
    v94[2] = v173;
    v174 = *(unsigned __int8 *)(v247 + 80);
    v175 = (v174 + 32) & ~v174;
    v176 = *(_QWORD *)(v247 + 72);
    sub_10007802C(v171, (uint64_t)v94 + v175 + v176 * v172, type metadata accessor for ScrubberHour);
    if (v246[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v246) & 1) != 0)
        goto LABEL_40;
    }
    else
    {
      __break(1u);
    }
    sub_1008670B0();
    v246 = v197;
LABEL_40:
    v177 = v246;
    v178 = v246[2];
    if (v178)
    {
      v179 = v178 - 1;
      v258 = (*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80);
      v168 = *(char **)(v238 + 72);
      sub_1000215BC((uint64_t)v246 + v258 + (_QWORD)v168 * (v178 - 1), type metadata accessor for ScrubberDay);
      v177[2] = v179;
      v180 = v207;
      v181 = *(_QWORD *)(v207 + v146);
      v182 = sub_1000BA294(&qword_100BDF370);
      v183 = v174 | 7;
      v174 = v180;
      v184 = swift_allocObject(v182, v175 + v176, v183);
      *(_OWORD *)(v184 + 16) = xmmword_10097CA50;
      sub_100080C0C(v204, v184 + v175, type metadata accessor for ScrubberHour);
      v259[0] = v181;
      swift_bridgeObjectRetain(v181);
      sub_10025E2B0(v184);
      v185 = v259[0];
      v186 = v240;
      v187 = (uint64_t *)(v180 + v240[6]);
      v189 = *v187;
      v188 = v187[1];
      LOBYTE(v180) = *(_BYTE *)(v180 + v240[7]);
      v190 = v199;
      ((void (*)(uint64_t, uint64_t, uint64_t))v253)(v199, v174, v248);
      *(_QWORD *)(v190 + v186[5]) = v185;
      v191 = (_QWORD *)(v190 + v186[6]);
      *v191 = v189;
      v191[1] = v188;
      *(_BYTE *)(v190 + v186[7]) = v180;
      sub_100080C0C(v190, v200, type metadata accessor for ScrubberDay);
      v146 = v177[2];
      v192 = v177[3];
      v173 = v146 + 1;
      swift_bridgeObjectRetain(v188);
      if (v146 < v192 >> 1)
      {
        v193 = v246;
LABEL_43:
        v193[2] = v173;
        v246 = v193;
        sub_10007802C(v200, (uint64_t)v193 + v258 + v146 * (_QWORD)v168, type metadata accessor for ScrubberDay);
        sub_1000215BC(v199, type metadata accessor for ScrubberDay);
        sub_1000215BC(v204, type metadata accessor for ScrubberHour);
        v43 = v248;
        v194 = (void (*)(char *, uint64_t))v256;
        ((void (*)(char *, uint64_t))v256)(v203, v248);
        v194(v202, v43);
        v194(v201, v43);
        sub_1000215BC(v174, type metadata accessor for ScrubberDay);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    sub_1005FF210();
    goto LABEL_43;
  }
  v142 = &qword_100BDF350;
  v143 = v140;
LABEL_32:
  sub_100021A14(v143, v142);
LABEL_33:
  v149 = v214;
  sub_1001CA2FC(v233 + *(int *)(v208 + 20), v214);
  v151 = v252;
  v150 = (uint64_t (*)(char *, char *, uint64_t))v253;
  v152 = v221;
  ((void (*)(char *, char *, uint64_t))v253)(v252, v221, v43);
  v153 = v241;
  v154 = v150(v218, v241, v43);
  v155 = v239;
  Location.timeZone.getter(v154);
  v156 = v213;
  Date.zeroMinutes(timeZone:)(v155);
  v157 = ((uint64_t (*)(char *, uint64_t))v217)(v155, v220);
  v158 = Location.timeZone.getter(v157);
  v159 = (void (*)(char *, uint64_t))v256;
  ((void (*)(char *, uint64_t, __n128))v256)(v250, v43, v158);
  v159(v153, v43);
  v159(v152, v43);
  sub_100021A14(v219, &qword_100BDF368);
  v159(v242, v43);
  (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v255, v211);
  v160 = v215;
  sub_10034F3F0(v149, v215);
  v161 = (int *)type metadata accessor for MoonScrubberViewModel(0);
  v162 = (void (*)(uint64_t, char *, uint64_t))v254;
  v254((char *)(v160 + v161[5]), v151, v43);
  v162(v160 + v161[6], v218, v43);
  v162(v160 + v161[7], v156, v43);
  *(_QWORD *)(v160 + v161[8]) = v246;
  *(_QWORD *)(v160 + v161[9]) = v94;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v212 + 32))(v160 + v161[10], v155, v220);
}

uint64_t sub_1003E8300()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for MoonScrubberViewModelFactory()
{
  return objc_opt_self(_TtC7Weather28MoonScrubberViewModelFactory);
}

unint64_t sub_1003E8344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF378;
  if (!qword_100BDF378)
  {
    v1 = type metadata accessor for Date.FormatStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date.FormatStyle, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF378);
  }
  return result;
}

id sub_1003E8384(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setFrame:", *a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1003E839C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    swift_retain(result);
    asyncMain(block:)(sub_1003E8590, v5);
    return swift_release_n(v5, 2);
  }
  return result;
}

uint64_t sub_1003E8404()
{
  uint64_t v0;

  sub_1003E8454();
  swift_release(*(_QWORD *)(v0 + 24));

  sub_100021A3C(v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics, &qword_100BC5F70);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_window);
  return v0;
}

void sub_1003E8454()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = v0;
  v2 = *(void **)(v0 + 32);
  if (v2)
  {
    v3 = v2;
    dispatch thunk of NSKeyValueObservation.invalidate()();

  }
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v4, "removeObserver:name:object:", v1, UIContentSizeCategoryDidChangeNotification, 0);

}

uint64_t sub_1003E84D8()
{
  uint64_t v0;

  sub_1003E8404();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003E84FC()
{
  return type metadata accessor for DisplayMetricsMonitor(0);
}

id sub_1003E852C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*a1, "frame");
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_1003E8564()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E8588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003E839C(a1, a2, v2);
}

uint64_t sub_1003E8594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10004037C(v10, static OpenNotificationsConfigurationIntent.title);
  sub_1000AECD4(v10, (uint64_t)static OpenNotificationsConfigurationIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000001009FF6E0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "The title of the 'Open Notifications Configuration' intent", 58, 2);
}

uint64_t OpenNotificationsConfigurationIntent.title.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC2098, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenNotificationsConfigurationIntent.title, (uint64_t)sub_1003E8594);
}

uint64_t static OpenNotificationsConfigurationIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023CE84(&qword_100BC2098, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenNotificationsConfigurationIntent.title, (uint64_t)sub_1003E8594, a1);
}

uint64_t sub_1003E8750()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v0 = sub_1000BA294(&qword_100BC2918);
  __chkstk_darwin(v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = __chkstk_darwin(v13);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for IntentDescription(0, v14);
  sub_10004037C(v17, static OpenNotificationsConfigurationIntent.description);
  sub_1000AECD4(v17, (uint64_t)static OpenNotificationsConfigurationIntent.description);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006FLL, 0x80000001009FF620);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "The description of the 'Open Notifications Configuration' intent", 64, 2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v13);
  return IntentDescription.init(_:categoryName:searchKeywords:)(v16, v2, _swiftEmptyArrayStorage);
}

uint64_t OpenNotificationsConfigurationIntent.description.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC20A0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenNotificationsConfigurationIntent.description, (uint64_t)sub_1003E8750);
}

uint64_t static OpenNotificationsConfigurationIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023CE84(&qword_100BC20A0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenNotificationsConfigurationIntent.description, (uint64_t)sub_1003E8750, a1);
}

void *OpenNotificationsConfigurationIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenNotificationsConfigurationIntent.openAppWhenRun;
}

void *OpenNotificationsConfigurationIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenNotificationsConfigurationIntent.isDiscoverable;
}

uint64_t OpenNotificationsConfigurationIntent.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = a2;
  v3 = type metadata accessor for WeatherIntentType(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003E8A28, 0, 0);
}

uint64_t sub_1003E8A28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  AppDependency.wrappedValue.getter();
  v4 = v0[5];
  v5 = v0[6];
  sub_1000DB418(v0 + 2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for WeatherIntentType.openNotificationsConfiguration(_:), v3);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of WeatherIntentHandlerType.handleIntent(_:)[1]);
  v0[12] = v6;
  *v6 = v0;
  v6[1] = sub_10023D078;
  return dispatch thunk of WeatherIntentHandlerType.handleIntent(_:)(v0[11], v4, v5);
}

unint64_t sub_1003E8AE0()
{
  unint64_t result;

  result = qword_100BDF468;
  if (!qword_100BDF468)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNotificationsConfigurationIntent, &type metadata for OpenNotificationsConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF468);
  }
  return result;
}

unint64_t sub_1003E8B20()
{
  unint64_t result;

  result = qword_100BDF470;
  if (!qword_100BDF470)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNotificationsConfigurationIntent, &type metadata for OpenNotificationsConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF470);
  }
  return result;
}

uint64_t sub_1003E8B5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of OpenNotificationsConfigurationIntent.perform()>>, 1);
}

uint64_t sub_1003E8B6C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003E8BAC();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_1003E8BAC()
{
  unint64_t result;

  result = qword_100BDF478;
  if (!qword_100BDF478)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenNotificationsConfigurationIntent, &type metadata for OpenNotificationsConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF478);
  }
  return result;
}

uint64_t sub_1003E8BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OpenNotificationsConfigurationIntent.title.unsafeMutableAddressor();
  v3 = type metadata accessor for LocalizedStringResource(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_1003E8C2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100BDF464);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100223BE0;
  return OpenNotificationsConfigurationIntent.perform()(a1, v4);
}

uint64_t sub_1003E8C84(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003E8BAC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNotificationsConfigurationIntent()
{
  return &type metadata for OpenNotificationsConfigurationIntent;
}

id sub_1003E8CBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    objc_msgSend(v4, "setDateStyle:", 1);
    objc_msgSend(v4, "setTimeStyle:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1003E8D54(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t result;
  objc_super v17;
  uint64_t v18;
  unint64_t v19;

  v4 = type metadata accessor for SevereNotificationContent(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098694();
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter] = 0;
  v6 = &v1[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_notification];
  v7 = type metadata accessor for SevereNotificationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v9 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = v1;
  v11 = JSONDecoder.init()();
  SevereNotificationEntity.notification.getter();
  dispatch thunk of Column.value.getter(&v18);
  sub_10009880C();
  v12 = v19;
  if (v19 >> 60 == 15)
  {
    __break(1u);
    result = swift_unexpectedError(v4, "Weather/DebugSevereNotificationViewController.swift", 51, 1, 31);
    __break(1u);
  }
  else
  {
    v13 = v18;
    v14 = sub_1003E99B4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v4, v13, v12, v4, v14);
    swift_release(v11);
    sub_1002BD0D4(v13, v12);
    sub_1003E99F4(v2, (uint64_t)&v10[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content]);

    v17.receiver = v10;
    v17.super_class = (Class)sub_1000E7064();
    v15 = objc_msgSendSuper2(&v17, "initWithStyle:", 2);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    return (uint64_t)v15;
  }
  return result;
}

void sub_1003E8EFC()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001009F8EA0, "Weather/DebugSevereNotificationViewController.swift", 51, 2);
  __break(1u);
}

void sub_1003E8F7C()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  unint64_t v4;
  NSString v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)sub_1000E7064();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v2 = objc_msgSend(v0, "tableView");
  if (v2)
  {
    v3 = v2;
    v4 = sub_1003E9A38();
    swift_getObjCClassFromMetadata(v4);
    v5 = sub_1000C2938();
    objc_msgSend(v3, "registerClass:forCellReuseIdentifier:", v1, v5);

    sub_1001207F8(0xD000000000000013, 0x80000001009FF830, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003E9070(uint64_t a1, unint64_t a2)
{
  if (a2 > 2)
    return 0;
  else
    return qword_10099D048[a2];
}

uint64_t sub_1003E90A8(uint64_t a1, unint64_t a2)
{
  if (a2 > 2)
    return 0;
  else
    return *(_QWORD *)&aMetadatanotifi[8 * a2];
}

id sub_1003E911C()
{
  void *v0;
  NSString v1;
  Class isa;
  id v3;
  __n128 v4;
  __n128 v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v1 = sub_1000C2938();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v0, "dequeueReusableCellWithIdentifier:forIndexPath:", v1, isa);

  if (IndexPath.section.getter(v4))
  {
    if (IndexPath.section.getter(v5) == 1)
    {
      v7 = IndexPath.row.getter(v6);
      sub_1003E9514(v3, v7);
    }
    else if (IndexPath.section.getter(v6) == 2)
    {
      sub_1003E96D0(v9);
    }
  }
  else
  {
    v8 = IndexPath.row.getter(v5);
    sub_1003E92A0((uint64_t)v3, v8);
  }
  return v3;
}

void sub_1003E92A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000B46F8();
  sub_1000BEC2C();
  __chkstk_darwin(v6);
  sub_1000BBF38();
  switch(a2)
  {
    case 0:
      v7 = sub_1000BA734();
      SevereNotificationEntity.id.getter(v7);
      goto LABEL_7;
    case 1:
      v8 = sub_1000BA734();
      SevereNotificationEntity.alertIdentifier.getter(v8);
      sub_1000C3A0C();
      sub_10009880C();
      v9 = v20;
      goto LABEL_8;
    case 2:
      sub_1000BA734();
      v10 = sub_1003E8CBC();
      SevereNotificationEntity.date.getter();
      dispatch thunk of Column.value.getter(v5);
      sub_10009880C();
      v11 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v11) == 1)
      {
        __break(1u);
        JUMPOUT(0x1003E9504);
      }
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
      v13 = objc_msgSend(v10, "stringFromDate:", isa);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v9 = v14;
      goto LABEL_8;
    case 3:
      v15 = sub_1000BA734();
      SevereNotificationEntity.subscription.getter(v15);
LABEL_7:
      sub_1000C3A0C();
      sub_10009880C();
      v16 = sub_1004907AC(v20, v21);
      swift_bridgeObjectRelease();
      v9 = v16;
LABEL_8:
      UIListContentConfiguration.secondaryText.setter(v9);
      break;
    default:
      break;
  }
  v17 = sub_1000D95E4((uint64_t)&protocol witness table for UIListContentConfiguration);
  sub_1000C5E3C((uint64_t)v17);
  v18 = sub_1000C1AA8();
  sub_1000DB984(v18, "setSelectionStyle:");
  sub_10009D580();
  sub_10009D300();
}

uint64_t sub_1003E9514(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[5];

  v4 = v2;
  v7 = sub_1000B46F8();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_1000BBF38();
  switch(a2)
  {
    case 0:
      sub_1000BA734();
      v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content);
      v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 8);
      goto LABEL_5;
    case 1:
      sub_1000BA734();
      v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 16);
      v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 24);
      goto LABEL_5;
    case 2:
      sub_1000BA734();
      v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 32);
      v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 40);
LABEL_5:
      swift_bridgeObjectRetain(v10);
      v11 = v9;
      goto LABEL_9;
    case 3:
      sub_1000BA734();
      if (*(_BYTE *)(v4 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content + 72))
        v11 = 1702195796;
      else
        v11 = 0x65736C6146;
LABEL_9:
      UIListContentConfiguration.secondaryText.setter(v11);
      break;
    default:
      break;
  }
  v14[3] = v7;
  v14[4] = &protocol witness table for UIListContentConfiguration;
  v12 = sub_10005F164(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v12, v3, v7);
  UITableViewCell.contentConfiguration.setter(v14);
  objc_msgSend(a1, "setSelectionStyle:", 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
}

void sub_1003E96D0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  type metadata accessor for String.Encoding(0, a1);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100098694();
  sub_1000B46F8();
  sub_1000BEC2C();
  v3 = __chkstk_darwin(v2);
  v4 = static UIListContentConfiguration.cell()(v3);
  SevereNotificationEntity.alert.getter(v4);
  sub_1000C3A0C();
  sub_10009880C();
  if (v9 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    static String.Encoding.utf8.getter(v5);
    String.init(data:encoding:)(v8);
    sub_1002BD0D4(v8, v9);
    sub_1000BA734();
    v6 = sub_1000D95E4((uint64_t)&protocol witness table for UIListContentConfiguration);
    sub_1000C5E3C((uint64_t)v6);
    v7 = sub_1000C1AA8();
    sub_1000DB984(v7, "setSelectionStyle:");
    sub_10009D580();
    sub_10009D300();
  }
}

void sub_1003E97D4()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugSevereNotificationViewController", 45, "init(style:)", 12, 0);
  __break(1u);
}

void sub_1003E980C()
{
  _swift_stdlib_reportUnimplementedInitializer("Weather.DebugSevereNotificationViewController", 45, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_1003E985C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1000E7064();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugSevereNotificationViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDF4C8;
  if (!qword_100BDF4C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DebugSevereNotificationViewController);
  return result;
}

uint64_t sub_1003E9924(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for SevereNotificationEntity(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for SevereNotificationContent(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = "\b";
      result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_1003E99B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF4D8[0];
  if (!qword_100BDF4D8[0])
  {
    v1 = type metadata accessor for SevereNotificationContent(255);
    result = swift_getWitnessTable(&unk_10097DCA0, v1);
    atomic_store(result, qword_100BDF4D8);
  }
  return result;
}

uint64_t sub_1003E99F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SevereNotificationContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003E9A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BD35E0;
  if (!qword_100BD35E0)
  {
    v1 = objc_opt_self(UITableViewCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BD35E0);
  }
  return result;
}

uint64_t type metadata accessor for ElevatedAqiMinorAlertContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100108FF8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ElevatedAqiMinorAlertContentView);
}

uint64_t sub_1003E9A80(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100AB3AA0, 1);
}

uint64_t sub_1003E9AB4@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[4];
  _BYTE v66[488];
  _QWORD v67[62];

  v62 = a4;
  v55 = a3;
  v60 = a7;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = a5;
  v67[3] = a5;
  v10 = a2;
  v11 = a2 & 0x100;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v67[7] = a5;
  v12 = sub_1000BBB64(255, 8, (uint64_t)v67);
  v53 = sub_1000AE86C(v12);
  v13 = type metadata accessor for Group(0, v53);
  v14 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  v57 = v14;
  __chkstk_darwin(v13);
  sub_1000986FC();
  v59 = v15;
  __chkstk_darwin(v16);
  v58 = (char *)&v48 - v17;
  v67[0] = a5;
  v67[1] = a5;
  v67[2] = type metadata accessor for Optional(255, a5);
  v67[3] = a5;
  v67[4] = a5;
  v67[5] = a5;
  v67[6] = a5;
  v18 = sub_1000BBB64(255, 7, (uint64_t)v67);
  v51 = (uint64_t (*)(_QWORD, _QWORD))sub_1000AE86C(v18);
  v54 = type metadata accessor for Group(0, v51);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_1000986FC();
  v20 = v19;
  __chkstk_darwin(v21);
  v61 = (char *)&v48 - v22;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        v23 = &qword_100BE8058;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      v23 = &qword_100BE8428;
      goto LABEL_11;
    }
    v23 = &qword_100BE8240;
    goto LABEL_11;
  }
  if (v11)
    v23 = &qword_100BE7C88;
  else
    v23 = &qword_100BE7E70;
LABEL_11:
  memcpy(v67, v23, 0x1E8uLL);
  v24 = memcpy(v66, v67, sizeof(v66));
  v50 = &v48;
  __chkstk_darwin(v24);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  v48 = a1;
  *(&v48 - 6) = a1;
  *((_BYTE *)&v48 - 40) = v10;
  HIDWORD(v49) = v11 >> 8;
  *((_BYTE *)&v48 - 39) = BYTE1(v11);
  v25 = v62;
  *(&v48 - 4) = v55;
  *(&v48 - 3) = v25;
  *(&v48 - 2) = (uint64_t)v66;
  v26 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v51);
  Group<A>.init(content:)(sub_1003EA744, &v48 - 10, v26, WitnessTable);
  v65[3] = WitnessTable;
  v28 = v54;
  v50 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v54);
  sub_1000B2074(v20, v28, v50);
  v29 = v52;
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v52 + 8);
  v30 = v51(v20, v28);
  __chkstk_darwin(v30);
  *(&v48 - 8) = a5;
  *(&v48 - 7) = a6;
  *(&v48 - 6) = v48;
  *((_BYTE *)&v48 - 40) = v10;
  *((_BYTE *)&v48 - 39) = BYTE4(v49);
  v31 = v62;
  *(&v48 - 4) = v32;
  *(&v48 - 3) = v31;
  *(&v48 - 2) = (uint64_t)v66;
  v33 = v53;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v53);
  v35 = v59;
  Group<A>.init(content:)(sub_1001A1CC8, &v48 - 10, v33, v34);
  v65[2] = v34;
  v36 = v56;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v56);
  v38 = (uint64_t)v58;
  sub_1000B2074(v35, v36, v37);
  v39 = v57;
  sub_1000C3530(v35);
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
  v41 = v61;
  v40(v20, v61, v28);
  v65[0] = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v35, v38, v36);
  v65[1] = v35;
  v64[0] = v28;
  v64[1] = v36;
  v63[0] = v50;
  v63[1] = v37;
  sub_10052800C((uint64_t)v65, 2, (uint64_t)v64, (uint64_t)v63, v42, v43, v44, v45, v48, v49, (uint64_t)v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57);
  sub_1000C3530(v38);
  v46 = v51;
  v51(v41, v28);
  sub_1000C3530(v35);
  return v46(v20, v28);
}

uint64_t sub_1003E9ED8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, _QWORD, _QWORD, _QWORD)@<X2>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void (*v106)(char *, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[7];
  _QWORD v110[7];
  _QWORD v111[7];
  _BYTE v112[24];
  _BYTE v113[40];
  _QWORD v114[4];
  char v115;

  v103 = a5;
  v106 = a2;
  v90 = a6;
  v10 = sub_1000BA294(&qword_100BC4A98);
  __chkstk_darwin(v10);
  v85 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Optional(0, a4);
  v95 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v107 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v82 - v14;
  v86 = (void (*)(uint64_t, uint64_t))type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v86);
  v83 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v82 - v17;
  v19 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v20);
  v89 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v88 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  v99 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v97 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v98 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v96 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  v93 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v92 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v105 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v101 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v82 - v44;
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v18);
  a2(v18, *a3, a3[1], a3[2], a3[3]);
  sub_100080DF4((uint64_t)v18);
  v91 = v45;
  v46 = v103;
  sub_1000B2074(v42, a4, v103);
  v87 = v19;
  v47 = *(void (**)(char *, uint64_t))(v19 + 8);
  v48 = v85;
  v47(v42, a4);
  sub_100080E30(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, (uint64_t)v18);
  v106(v18, a3[41], a3[42], a3[43], a3[44]);
  v84 = v18;
  sub_100080DF4((uint64_t)v18);
  sub_1000B2074(v42, a4, v46);
  v104 = v42;
  v47(v42, a4);
  v94 = a1;
  v49 = a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, v112, 0, 0);
  sub_1001A1D04(v49, v48);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, (uint64_t)v86) == 1)
  {
    sub_1001A1D4C(v48);
    v50 = 1;
    v51 = a3;
  }
  else
  {
    v52 = v83;
    sub_1001A1D8C(v48, v83);
    sub_1001A1DD0((uint64_t)(a3 + 24), (uint64_t)v113);
    sub_1001A1DD0((uint64_t)v113, (uint64_t)v114);
    v51 = a3;
    if (v115 == 1)
    {
      sub_100080DF4(v52);
      v50 = 1;
    }
    else
    {
      v53 = v105;
      v106((char *)v52, v114[0], v114[1], v114[2], v114[3]);
      sub_100080DF4(v52);
      v54 = (uint64_t)v104;
      sub_1000B2074(v53, a4, v103);
      v47(v53, a4);
      sub_1000B1100(v54, a4, v107);
      v47((char *)v54, a4);
      v50 = 0;
    }
  }
  v55 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, v50, 1, a4);
  v56 = v103;
  sub_100158984(v55, a4, v102);
  v86 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v86(v55, v100);
  v57 = v94;
  v58 = (uint64_t)v84;
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v84);
  v59 = v105;
  v106((char *)v58, v51[16], v51[17], v51[18], v51[19]);
  sub_100080DF4(v58);
  sub_1000B2074(v59, a4, v56);
  v47(v59, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v58);
  v60 = v92;
  v61 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v106;
  v106((char *)v58, v51[8], v51[9], v51[10], v51[11]);
  sub_100080DF4(v58);
  v62 = v103;
  sub_1000B2074(v60, a4, v103);
  v47(v60, a4);
  sub_100080E30(*(_QWORD *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v58);
  v63 = v93;
  v61(v58, v51[49], v51[50], v51[51], v51[52]);
  sub_100080DF4(v58);
  sub_1000B2074(v63, a4, v62);
  v47(v63, a4);
  sub_100080E30(*(_QWORD *)(v94 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v58);
  v64 = v96;
  v61(v58, v51[45], v51[46], v51[47], v51[48]);
  sub_100080DF4(v58);
  v65 = v62;
  sub_1000B2074(v64, a4, v62);
  v47(v64, a4);
  v66 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v66(v64, v91, a4);
  v111[0] = v64;
  v67 = v98;
  v66(v98, v101, a4);
  v111[1] = v67;
  v68 = v107;
  v69 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v107, v102, v100);
  v111[2] = v68;
  v70 = v97;
  v66(v97, v104, a4);
  v111[3] = v70;
  v71 = v99;
  v66(v99, v105, a4);
  v111[4] = v71;
  v72 = (uint64_t)v88;
  v73 = v92;
  v66(v88, v92, a4);
  v111[5] = v72;
  v74 = (uint64_t)v89;
  v75 = v93;
  v66(v89, v93, a4);
  v111[6] = v74;
  v110[0] = a4;
  v110[1] = a4;
  v110[2] = v69;
  v110[3] = a4;
  v110[4] = a4;
  v110[5] = a4;
  v110[6] = a4;
  v109[0] = v65;
  v109[1] = v65;
  v108 = v65;
  v109[2] = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v69);
  v109[3] = v65;
  v109[4] = v65;
  v109[5] = v65;
  v109[6] = v65;
  sub_10052800C((uint64_t)v111, 7, (uint64_t)v110, (uint64_t)v109, v76, v77, v78, v79, v82, v83, (uint64_t)v84, v85, (uint64_t)v86, v87, (uint64_t)v88, (uint64_t)v89, v90, (uint64_t)v91);
  v47(v75, a4);
  v47(v73, a4);
  v47(v105, a4);
  v47(v104, a4);
  v80 = v86;
  v86(v102, v69);
  v47(v101, a4);
  v47(v91, a4);
  v47((char *)v74, a4);
  v47((char *)v72, a4);
  v47(v99, a4);
  v47(v97, a4);
  v80(v107, v69);
  v47(v98, a4);
  return ((uint64_t (*)(char *, uint64_t))v47)(v96, a4);
}

uint64_t sub_1003EA718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 9))
    v3 = 256;
  else
    v3 = 0;
  return sub_1003E9AB4(*(_QWORD *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1003EA744()
{
  return sub_1001A1CD4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003E9ED8);
}

uint64_t sub_1003EA750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for PresentedLocation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006F614(v2 + *(int *)(v4 + 20), (uint64_t)v9);
  sub_1003EA8B8(v2, (uint64_t)v6);
  v10 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v6, v10);
    sub_1003EA8FC((uint64_t)v6);
    return sub_1003EA938((uint64_t)v9);
  }
  else
  {
    sub_1003EA8FC((uint64_t)v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v9, v10);
  }
}

uint64_t type metadata accessor for PresentedLocation(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDF5B8;
  if (!qword_100BDF5B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PresentedLocation);
  return result;
}

uint64_t sub_1003EA8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PresentedLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003EA8FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PresentedLocation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003EA938(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1000BA294(&qword_100BCD680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1003EA978(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Location.Identifier(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v7))
    {
      v12 = sub_1000BA294(&qword_100BCD680);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_1003EAA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = type metadata accessor for Location.Identifier(0);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *sub_1003EAB0C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_1000BA294(&qword_100BCD680);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1003EABE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BCD680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1003EAD08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_1000BA294(&qword_100BCD680);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1003EADE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  uint64_t v14;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_1000BA294(&qword_100BCD680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1003EAF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003EAF10);
}

uint64_t sub_1003EAF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  unsigned int v12;

  v6 = sub_1000BABDC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  v9 = sub_1000BA294(&qword_100BCD680);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v8, v3, v7);
  }
  if (*(unsigned __int8 *)(v4 + *(int *)(a3 + 24)) <= 2u)
    v11 = 2;
  else
    v11 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
  v12 = v11 - 2;
  if (*(unsigned __int8 *)(v4 + *(int *)(a3 + 24)) >= 2u)
    return v12;
  else
    return 0;
}

uint64_t sub_1003EAFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003EAFBC);
}

uint64_t sub_1003EAFBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1000BABDC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
  }
  result = sub_1000BA294(&qword_100BCD680);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v10, v4, v4, v9);
  }
  *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 2;
  return result;
}

void sub_1003EB050(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for Location.Identifier(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015A1D4(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_10099D148;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_1003EB0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;

  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098694();
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for PreviewLocation(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_1003EB32C(a1, v14 - v13);
  LODWORD(v11) = swift_getEnumCaseMultiPayload(v15, v11);
  sub_10036D3E8(v15);
  if ((_DWORD)v11 == 1)
  {
    if (qword_100BC2410 != -1)
      swift_once(&qword_100BC2410, sub_10015961C);
    v16 = sub_100098720();
    v17 = sub_1000AECD4(v16, (uint64_t)qword_100CAF028);
    v18 = v17;
    v19 = Logger.logObject.getter(v17);
    v20 = static os_log_type_t.default.getter();
    if (!sub_1000B42F4(v20))
      goto LABEL_12;
    v21 = (uint8_t *)sub_100098710(2);
    *(_WORD *)v21 = 0;
    v22 = "Check AddLocationActAsLocationOfInterest flag for a location of interest";
    goto LABEL_11;
  }
  sub_10062F730(v2);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v6) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v2, v6);
    sub_1003EB370(v10, a2);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_14;
  }
  sub_100021A68(v2, &qword_100BC35F8);
  if (qword_100BC2410 != -1)
    swift_once(&qword_100BC2410, sub_10015961C);
  v23 = sub_100098720();
  v24 = sub_1000AECD4(v23, (uint64_t)qword_100CAF028);
  v18 = v24;
  v19 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter(v19, v25);
  if (sub_1000B42F4(v26))
  {
    v21 = (uint8_t *)sub_100098710(2);
    *(_WORD *)v21 = 0;
    v22 = "Check AddLocationActAsLocationOfInterest, but locationForPreview has no location";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v19, v18, v22, v21, 2u);
    sub_1000986F0((uint64_t)v21);
  }
LABEL_12:

LABEL_14:
  sub_100098640();
}

uint64_t sub_1003EB32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1003EB370(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t matched;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v2;
  v7 = type metadata accessor for Location(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098694();
  sub_1000BA294(&qword_100BC3118);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  matched = type metadata accessor for LocationOfInterestMatchResult(0);
  v32 = *(_QWORD *)(matched - 8);
  v33 = matched;
  __chkstk_darwin(matched);
  sub_100098728();
  v16 = v15 - v14;
  v18 = v4[3];
  v17 = v4[4];
  sub_1000DB418(v4, v18);
  v19 = dispatch thunk of WeatherLocationCoalescenceManagerType.matchLocationsOfInterest(for:locationsOfInterest:)(a1, a2, v18, v17);
  LocationOfInterestMatchResult.locationsOfInterest.getter(v19);
  v20 = type metadata accessor for LocationOfInterest(0);
  v21 = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v20);
  sub_100021A68(v12, &qword_100BC3118);
  if (qword_100BC2410 != -1)
    swift_once(&qword_100BC2410, sub_10015961C);
  v22 = sub_100098720();
  sub_1000AECD4(v22, (uint64_t)qword_100CAF028);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a1, v7);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v31 = v8;
    v26 = sub_100098710(28);
    v27 = sub_100098710(32);
    v35 = v27;
    *(_DWORD *)v26 = 67240707;
    LODWORD(v34) = v21 == 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 4);
    *(_WORD *)(v26 + 8) = 2160;
    v34 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v26 + 18) = 2081;
    sub_1002084DC();
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v7);
    v30 = v29;
    v34 = sub_1000CE1C8(v28, v29, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease(v30);
    sub_1000CCCD8(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "canAddLocationActAsLocationOfInterest is %{BOOL,public}d for location:%{private,mask.hash}s", (uint8_t *)v26, 0x1Cu);
    swift_arrayDestroy(v27, 1);
    sub_1000986F0(v27);
    sub_1000986F0(v26);

  }
  else
  {

    sub_1000CCCD8(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  }
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v16, v33);
  sub_100098640();
}

ValueMetadata *type metadata accessor for AddLocationContextHelper()
{
  return &type metadata for AddLocationContextHelper;
}

uint64_t sub_1003EB664()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  v1 = *v0;
  if (*v0)
  {
    v2 = *v0;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v5 = Color.init(uiColor:)(v3);
    v2 = AnyShapeStyle.init<A>(_:)(&v5, &type metadata for Color, &protocol witness table for Color);
    *v0 = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_1003EB6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for Material(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 8);
  }
  else
  {
    static Material.thick.getter();
    v5 = AnyShapeStyle.init<A>(_:)(v3, v1, &protocol witness table for Material);
    *(_QWORD *)(v0 + 8) = v5;
    swift_retain(v5);
    v4 = 0;
  }
  swift_retain(v4);
  return v5;
}

uint64_t sub_1003EB78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10004037C(v10, static OpenSunriseSunsetIntent.title);
  sub_1000AECD4(v10, (uint64_t)static OpenSunriseSunsetIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001009FF930);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "The title of the 'Open Sunrise and Sunset Details' intent", 57, 2);
}

uint64_t OpenSunriseSunsetIntent.title.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC20A8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title, (uint64_t)sub_1003EB78C);
}

void static OpenSunriseSunsetIntent.title.getter(uint64_t a1@<X8>)
{
  sub_1003EBC38(&qword_100BC20A8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title, (uint64_t)sub_1003EB78C, a1);
}

void static OpenSunriseSunsetIntent.title.setter(uint64_t a1)
{
  sub_1003CC444(a1, &qword_100BC20A8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title, (uint64_t)sub_1003EB78C);
}

void static OpenSunriseSunsetIntent.title.modify(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100BC20A8 != -1)
    swift_once(&qword_100BC20A8, sub_1003EB78C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenSunriseSunsetIntent.title);
  sub_1000BBC6C(v3, a1);
  sub_10004A298();
}

uint64_t sub_1003EB9D8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  v0 = sub_1000BA294(&qword_100BC2918);
  __chkstk_darwin(v0);
  v2 = &v20[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = __chkstk_darwin(v13);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for IntentDescription(0, v14);
  sub_10004037C(v17, static OpenSunriseSunsetIntent.description);
  sub_1000AECD4(v17, (uint64_t)static OpenSunriseSunsetIntent.description);
  v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000032, 0x80000001009FF8B0);
  static Locale.current.getter(v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "The description of the 'Open Sunrise and Sunset Details' intent", 63, 2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v13);
  return IntentDescription.init(_:categoryName:searchKeywords:)(v16, v2, _swiftEmptyArrayStorage);
}

uint64_t OpenSunriseSunsetIntent.description.unsafeMutableAddressor()
{
  return sub_10023CE1C(&qword_100BC20B0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description, (uint64_t)sub_1003EB9D8);
}

void static OpenSunriseSunsetIntent.description.getter(uint64_t a1@<X8>)
{
  sub_1003EBC38(&qword_100BC20B0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description, (uint64_t)sub_1003EB9D8, a1);
}

void sub_1003EBC38(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_1000AECD4(v8, a3);
  sub_1000C54A8(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
  sub_10003BCFC();
}

void static OpenSunriseSunsetIntent.description.setter(uint64_t a1)
{
  sub_1003CC444(a1, &qword_100BC20B0, (uint64_t (*)(_QWORD))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description, (uint64_t)sub_1003EB9D8);
}

void static OpenSunriseSunsetIntent.description.modify(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_100BC20B0 != -1)
    swift_once(&qword_100BC20B0, sub_1003EB9D8);
  v3 = type metadata accessor for IntentDescription(0, a2);
  v4 = sub_1000AECD4(v3, (uint64_t)static OpenSunriseSunsetIntent.description);
  sub_1000BBC6C(v4, a1);
  sub_10004A298();
}

void *OpenSunriseSunsetIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenSunriseSunsetIntent.isDiscoverable;
}

uint64_t static OpenSunriseSunsetIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;

  sub_1000BA294(&qword_100BDF5F8);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100099864();
  v2 = sub_1000BA294(&qword_100BDF600);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_1003EBE88();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for OpenSunriseSunsetIntent, v7);
  v8._object = (void *)0x80000001009FF850;
  v8._countAndFlagsBits = 0xD000000000000024;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_10099D1C8);
  v10 = sub_1000BA294(&qword_100BDF610);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v2, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for OpenSunriseSunsetIntent, v7);
  return IntentParameterSummary.init(_:table:)(v0, 0, 0, &type metadata for OpenSunriseSunsetIntent, v7);
}

unint64_t sub_1003EBE88()
{
  unint64_t result;

  result = qword_100BDF608;
  if (!qword_100BDF608)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenSunriseSunsetIntent, &type metadata for OpenSunriseSunsetIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF608);
  }
  return result;
}

uint64_t sub_1003EBEC4()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1003EBEE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1003EBEC4();
  *a1 = result;
  return result;
}

uint64_t sub_1003EBF0C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t KeyPath;
  uint64_t v7;
  Swift::String v8;
  uint64_t v10;

  v0 = sub_1000BA294(&qword_100BDF650);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BDF618);
  sub_10004037C(v3, static OpenSunriseSunsetIntent.urlRepresentation);
  sub_1000AECD4(v3, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  v4 = sub_1003EBE88();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 1, &type metadata for OpenSunriseSunsetIntent, v4);
  v5._object = (void *)0x80000001009FF880;
  v5._countAndFlagsBits = 0xD00000000000002FLL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  KeyPath = swift_getKeyPath(&unk_10099D1C8);
  v7 = sub_1000BA294(&qword_100BDF610);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v0, v7);
  swift_release(KeyPath);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v8);
  return IntentURLRepresentation.init(stringInterpolation:)(v2, &type metadata for OpenSunriseSunsetIntent, v4);
}

uint64_t OpenSunriseSunsetIntent.urlRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_100BC20B8 != -1)
    swift_once(&qword_100BC20B8, sub_1003EBF0C);
  v0 = sub_1000BA294(&qword_100BDF618);
  return sub_1000AECD4(v0, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
}

void static OpenSunriseSunsetIntent.urlRepresentation.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_100BC20B8 != -1)
    swift_once(&qword_100BC20B8, sub_1003EBF0C);
  v2 = sub_1000BA294(&qword_100BDF618);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  sub_1000C54A8(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_10003BCFC();
}

void static OpenSunriseSunsetIntent.urlRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v6[24];

  if (qword_100BC20B8 != -1)
    swift_once(&qword_100BC20B8, sub_1003EBF0C);
  v2 = sub_1000BA294(&qword_100BDF618);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  sub_1000BBC6C(v3, (uint64_t)v6);
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  v5 = swift_endAccess(v6);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v2, v5);
  sub_10003BCFC();
}

void static OpenSunriseSunsetIntent.urlRepresentation.modify(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100BC20B8 != -1)
    swift_once(&qword_100BC20B8, sub_1003EBF0C);
  v2 = sub_1000BA294(&qword_100BDF618);
  v3 = sub_1000AECD4(v2, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  sub_1000BBC6C(v3, a1);
  sub_10004A298();
}

uint64_t OpenSunriseSunsetIntent.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  char v43;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v40 = *(_QWORD *)(v0 - 8);
  v41 = v0;
  __chkstk_darwin(v0);
  sub_100098728();
  v39 = v2 - v1;
  sub_1000BA294(&qword_100BC2910);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  v38 = (uint64_t)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v37 - v6;
  sub_1000BA294(&qword_100BC2918);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  __chkstk_darwin(v12);
  sub_100098728();
  type metadata accessor for Locale(0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  type metadata accessor for String.LocalizationValue(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100099864();
  v15 = type metadata accessor for LocalizedStringResource(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  v37[1] = sub_1000BA294(&qword_100BC2920);
  v20 = String.LocalizationValue.init(stringLiteral:)(0x6E6F697461636F4CLL, 0xE800000000000000);
  static Locale.current.getter(v20);
  sub_1000DD660();
  v21 = sub_1000B4910();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, v22, v23, v24, v25, v26, 48, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x80000001009F0B70);
  static Locale.current.getter(v27);
  sub_1000DD660();
  v28 = sub_1000B4910();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v28, v29, v30, v31, v32, v33, 92, 2);
  _s7Weather24LocationCompositionStateOwst_0(v11, 0, 1, v15);
  type metadata accessor for IntentDialog(0);
  memset(v42, 0, sizeof(v42));
  v43 = 0;
  sub_1000C20AC((uint64_t)v7);
  v34 = v38;
  sub_1000C20AC(v38);
  v35 = v39;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v39, enum case for InputConnectionBehavior.default(_:), v41);
  sub_1000BA294(&qword_100BC2928);
  sub_10005F124(&qword_100BC2930, &qword_100BC2928, (uint64_t)&protocol conformance descriptor for ResolverSpecificationBuilder<A>.Specification<A1, Pack{repeat B1}>);
  sub_10015C43C();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)(v19, v11, v42, v7, v34, v35, sub_1003CB820, 0);
}

uint64_t sub_1003EC528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = OpenSunriseSunsetIntent.urlRepresentation.unsafeMutableAddressor();
  swift_beginAccess(v2, v5, 0, 0);
  v3 = sub_1000BA294(&qword_100BDF618);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

unint64_t sub_1003EC58C()
{
  unint64_t result;

  result = qword_100BDF620;
  if (!qword_100BDF620)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenSunriseSunsetIntent, &type metadata for OpenSunriseSunsetIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF620);
  }
  return result;
}

unint64_t sub_1003EC5CC()
{
  unint64_t result;

  result = qword_100BDF628;
  if (!qword_100BDF628)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenSunriseSunsetIntent, &type metadata for OpenSunriseSunsetIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF628);
  }
  return result;
}

uint64_t sub_1003EC608(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static OpenSunriseSunsetIntent.parameterSummary>>, 1);
}

uint64_t sub_1003EC618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = OpenSunriseSunsetIntent.title.unsafeMutableAddressor();
  swift_beginAccess(v2, v5, 0, 0);
  v3 = type metadata accessor for LocalizedStringResource(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_1003EC678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  v4 = (_QWORD *)swift_task_alloc(async function pointer to URLRepresentableIntent.perform()[1]);
  *(_QWORD *)(v2 + 16) = v4;
  v5 = sub_1003EC764();
  *v4 = v2;
  v4[1] = sub_1003CC1AC;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_1003EC6DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = OpenSunriseSunsetIntent.init()();
  *a1 = result;
  return result;
}

uint64_t sub_1003EC700(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003EBE88();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSunriseSunsetIntent()
{
  return &type metadata for OpenSunriseSunsetIntent;
}

uint64_t sub_1003EC738()
{
  return sub_10005F124(&qword_100BDF638, &qword_100BDF640, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_1003EC764()
{
  unint64_t result;

  result = qword_100BDF648;
  if (!qword_100BDF648)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenSunriseSunsetIntent, &type metadata for OpenSunriseSunsetIntent);
    atomic_store(result, (unint64_t *)&qword_100BDF648);
  }
  return result;
}

uint64_t sub_1003EC7A0@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[12];
  _QWORD v33[12];
  char v34[104];

  v2 = v1;
  sub_1003ECAB4(v1, v32);
  v25 = v32[1];
  v26 = v32[0];
  v4 = v32[4];
  v23 = v32[3];
  v24 = v32[2];
  v21 = v32[6];
  v22 = v32[5];
  v5 = v32[8];
  v20 = v32[7];
  v6 = v32[9];
  v7 = v32[10];
  v8 = v32[11];
  v9 = sub_1000BA294(&qword_100BDF660);
  v27 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003ECAB4(v2, v33);
  if ((~v33[0] & 0xF000000000000006) != 0)
  {
    sub_1001C4B3C(v33, v34);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_10019D33C(v26, v25, v24, v23, v4, v22, v21, v20, v5, v6, v7, v8);
    _StringGuts.grow(_:)(22);
    v30 = v28;
    v31 = v29;
    v13._countAndFlagsBits = 0xD000000000000014;
    v13._object = (void *)0x80000001009FF990;
    String.append(_:)(v13);
    sub_1002CDE40(&v28);
    v14 = sub_1000BA294(&qword_100BD0D88);
    _print_unlocked<A, B>(_:_:)(&v28, &v30, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v28);
    v15 = v30;
    v16 = v31;
    v17 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    ShortDescription.init(name:_:)(v15, v16, v17, &type metadata for ReportWeatherViewAction);
    sub_1003ECAC8((uint64_t *)v2);
  }
  else
  {
    v12 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    ShortDescription.init(name:_:)(0xD000000000000013, 0x80000001009FA080, v12, &type metadata for ReportWeatherViewAction);
  }
  a1[3] = v9;
  a1[4] = sub_1003ECB18();
  v18 = sub_10005F164(a1);
  return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v27 + 32))(v18, v11, v9);
}

uint64_t sub_1003ECA10@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v4;

  sub_1003ECAB4(v1, &v4);
  return sub_1003EC7A0(a1);
}

uint64_t sub_1003ECA4C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003ECB5C();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_1003ECA78()
{
  unint64_t result;

  result = qword_100BDF658;
  if (!qword_100BDF658)
  {
    result = swift_getWitnessTable(&unk_10099D310, &type metadata for ReportWeatherViewAction);
    atomic_store(result, (unint64_t *)&qword_100BDF658);
  }
  return result;
}

void *sub_1003ECAB4(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x60uLL);
}

uint64_t *sub_1003ECAC8(uint64_t *a1)
{
  sub_10019D398(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

unint64_t sub_1003ECB18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF668;
  if (!qword_100BDF668)
  {
    v1 = sub_100075EB0(&qword_100BDF660);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF668);
  }
  return result;
}

unint64_t sub_1003ECB5C()
{
  unint64_t result;

  result = qword_100BDF670;
  if (!qword_100BDF670)
  {
    result = swift_getWitnessTable(&unk_10099D338, &type metadata for ReportWeatherViewAction);
    atomic_store(result, (unint64_t *)&qword_100BDF670);
  }
  return result;
}

double destroy for ReportWeatherViewAction(uint64_t a1)
{
  unint64_t v2;
  double result;

  v2 = *(_QWORD *)a1;
  if (!((v2 >> 57) & 0x38 | v2 & 6))
    return sub_10019D2B8(v2, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  return result;
}

uint64_t *initializeWithCopy for ReportWeatherViewAction(uint64_t *__dst, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a2;
  if (((unint64_t)*a2 >> 57) & 0x38 | *(_DWORD *)a2 & 6)
  {
    memcpy(__dst, a2, 0x60uLL);
  }
  else
  {
    v4 = a2[1];
    v5 = a2[2];
    v6 = a2[3];
    v7 = a2[4];
    v8 = a2[5];
    v9 = a2[6];
    v10 = a2[7];
    v11 = a2[8];
    v13 = a2[9];
    v14 = a2[10];
    v15 = a2[11];
    sub_10019D33C(v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15);
    *__dst = v3;
    __dst[1] = v4;
    __dst[2] = v5;
    __dst[3] = v6;
    __dst[4] = v7;
    __dst[5] = v8;
    __dst[6] = v9;
    __dst[7] = v10;
    __dst[8] = v11;
    __dst[9] = v13;
    __dst[10] = v14;
    __dst[11] = v15;
  }
  return __dst;
}

uint64_t *assignWithCopy for ReportWeatherViewAction(uint64_t *__dst, uint64_t *__src)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = *__dst;
  v5 = *__src;
  v6 = ((unint64_t)*__src >> 57) & 0x38 | *(_DWORD *)__src & 6;
  if (!((v4 >> 57) & 0x38 | v4 & 6))
  {
    if (!v6)
    {
      v16 = __src[1];
      v17 = __src[2];
      v18 = __src[3];
      v19 = __src[4];
      v20 = __src[5];
      v21 = __src[6];
      v22 = __src[7];
      v36 = __src[8];
      v38 = __src[9];
      v40 = __src[10];
      v23 = __src[11];
      sub_10019D33C(v5, v16, v17, v18, v19, v20, v21, v22, v36, v38, v40, v23);
      v24 = *__dst;
      v25 = __dst[1];
      v26 = __dst[2];
      v27 = __dst[3];
      v28 = __dst[4];
      v29 = __dst[5];
      v30 = __dst[6];
      v31 = __dst[7];
      v32 = *((_OWORD *)__dst + 4);
      v33 = __dst[10];
      v34 = __dst[11];
      *__dst = v5;
      __dst[1] = v16;
      __dst[2] = v17;
      __dst[3] = v18;
      __dst[4] = v19;
      __dst[5] = v20;
      __dst[6] = v21;
      __dst[7] = v22;
      __dst[8] = v36;
      __dst[9] = v38;
      __dst[10] = v40;
      __dst[11] = v23;
      sub_10019D2B8(v24, v25, v26, v27, v28, v29, v30, v31, v32, *((uint64_t *)&v32 + 1), v33, v34);
      return __dst;
    }
    sub_10019D2B8(v4, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11]);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    memcpy(__dst, __src, 0x60uLL);
    return __dst;
  }
  v7 = __src[1];
  v8 = __src[2];
  v9 = __src[3];
  v10 = __src[4];
  v11 = __src[5];
  v12 = __src[6];
  v13 = __src[7];
  v35 = __src[8];
  v37 = __src[9];
  v39 = __src[10];
  v14 = __src[11];
  sub_10019D33C(v5, v7, v8, v9, v10, v11, v12, v13, v35, v37, v39, v14);
  *__dst = v5;
  __dst[1] = v7;
  __dst[2] = v8;
  __dst[3] = v9;
  __dst[4] = v10;
  __dst[5] = v11;
  __dst[6] = v12;
  __dst[7] = v13;
  __dst[8] = v35;
  __dst[9] = v37;
  __dst[10] = v39;
  __dst[11] = v14;
  return __dst;
}

_QWORD *assignWithTake for ReportWeatherViewAction(_QWORD *__dst, char *__src)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *__dst;
  if (!((v4 >> 57) & 0x38 | v4 & 6))
  {
    v5 = *(_QWORD *)__src;
    if (!((*(_QWORD *)__src >> 57) & 0x38 | *(_DWORD *)__src & 6))
    {
      v7 = *((_QWORD *)__src + 11);
      v8 = __dst[1];
      v9 = __dst[2];
      v10 = __dst[3];
      v11 = __dst[4];
      v12 = __dst[5];
      v13 = __dst[6];
      v14 = __dst[7];
      v15 = *((_OWORD *)__dst + 4);
      v16 = __dst[10];
      v17 = __dst[11];
      *__dst = v5;
      *(_OWORD *)(__dst + 1) = *(_OWORD *)(__src + 8);
      *(_OWORD *)(__dst + 3) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 7) = *(_OWORD *)(__src + 56);
      *(_OWORD *)(__dst + 9) = *(_OWORD *)(__src + 72);
      __dst[11] = v7;
      sub_10019D2B8(v4, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17);
      return __dst;
    }
    sub_10019D2B8(v4, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11]);
  }
  memcpy(__dst, __src, 0x60uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ReportWeatherViewAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_QWORD *)a1 & 6 | ((*(_QWORD *)a1 >> 58) >> 5) & 0xFFFFFFC7 | (8
                                                                                     * (((*(_QWORD *)a1 >> 58) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReportWeatherViewAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x3D)
  {
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      v3 = (32 * (a2 ^ 0x3F)) | ((a2 ^ 0x3F) >> 1);
      *(_QWORD *)result = ((v3 << 58) | (2 * v3)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_QWORD *)(result + 88) = 0;
    }
  }
  return result;
}

uint64_t sub_1003ED058(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  unsigned int v3;

  v1 = *a1 >> 58;
  v2 = *a1 & 6 | (8 * ((v1 >> 2) & 7));
  v3 = 64 - (v2 | (v1 >> 5));
  if (v2)
    return v3;
  else
    return 0;
}

double sub_1003ED084(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  double result;

  if (a2 > 0x3E)
  {
    *(_QWORD *)(a1 + 88) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 - 63;
  }
  else if (a2)
  {
    v2 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
    *(_QWORD *)a1 = ((v2 << 58) | (2 * v2)) & 0xF000000000000007;
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_QWORD *)(a1 + 88) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherViewAction()
{
  return &type metadata for ReportWeatherViewAction;
}

BOOL sub_1003ED104(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_1003ED114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a4)
    return a1 >= a3;
  else
    return a2 >= a4;
}

BOOL sub_1003ED12C(char a1, char a2)
{
  return dbl_10099D560[a1] >= dbl_10099D560[a2];
}

BOOL sub_1003ED150(char a1, char a2)
{
  double v2;
  double v3;

  v2 = 1024.0;
  if ((a1 & 1) != 0)
    v3 = 1024.0;
  else
    v3 = 0.0;
  if ((a2 & 1) == 0)
    v2 = 0.0;
  return v3 >= v2;
}

BOOL sub_1003ED178(char a1, char a2)
{
  return dbl_10099D580[a1] >= dbl_10099D580[a2];
}

BOOL sub_1003ED19C(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

BOOL sub_1003ED1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == a2)
    return a3 < a1;
  else
    return a4 < a2;
}

BOOL sub_1003ED1C4(char a1, char a2)
{
  return dbl_10099D560[a2] < dbl_10099D560[a1];
}

BOOL sub_1003ED1E8(char a1, char a2)
{
  double v2;
  double v3;

  v2 = 1024.0;
  if ((a2 & 1) != 0)
    v3 = 1024.0;
  else
    v3 = 0.0;
  if ((a1 & 1) == 0)
    v2 = 0.0;
  return v3 < v2;
}

BOOL sub_1003ED210(char a1, char a2)
{
  return dbl_10099D580[a2] < dbl_10099D580[a1];
}

BOOL sub_1003ED234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BOOL4 v9;

  v9 = a3 == a7 && a4 == a8;
  return a1 == a5 && a2 == a6 && v9;
}

BOOL sub_1003ED250(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED234(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1003ED26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v10 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v10, &v15);
  *(_OWORD *)(inited + 16) = xmmword_10097DA20;
  *(_QWORD *)(inited + 32) = 120;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v12 = sub_1000BA294(&qword_100BDF688);
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = 121;
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  *(_QWORD *)(inited + 96) = a3;
  *(_QWORD *)(inited + 104) = a4;
  v13 = Dictionary.init(dictionaryLiteral:)(inited);
  a5[3] = sub_1000BA294(&qword_100BDF690);
  a5[4] = sub_1003ED560();
  sub_10005F164(a5);
  return ShortDescription.init(name:_:)(0x6E656E6F706D6F43, 0xED00006E61705374, v13, &unk_100B72368);
}

uint64_t sub_1003ED388@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1003ED26C(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_1003ED394(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003ED5A4();
  return ShortDescribable.description.getter(a1, v2);
}

BOOL sub_1003ED3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_1003ED3CC(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED3BC(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1003ED3E4()
{
  unint64_t result;

  result = qword_100BDF678;
  if (!qword_100BDF678)
  {
    result = swift_getWitnessTable(&unk_10099D410, &unk_100B722E8);
    atomic_store(result, (unint64_t *)&qword_100BDF678);
  }
  return result;
}

BOOL sub_1003ED420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a4)
    return a1 < a3;
  else
    return a2 < a4;
}

BOOL sub_1003ED438(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED420(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1003ED44C(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED470(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1003ED460(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_1003ED470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == a2)
    return a3 >= a1;
  else
    return a4 >= a2;
}

BOOL sub_1003ED488(char a1, char a2)
{
  return dbl_10099D560[a2] >= dbl_10099D560[a1];
}

BOOL sub_1003ED4AC(char a1, char a2)
{
  double v2;
  double v3;

  v2 = 1024.0;
  if ((a2 & 1) != 0)
    v3 = 1024.0;
  else
    v3 = 0.0;
  if ((a1 & 1) == 0)
    v2 = 0.0;
  return v3 >= v2;
}

BOOL sub_1003ED4D4(char a1, char a2)
{
  return dbl_10099D580[a2] >= dbl_10099D580[a1];
}

BOOL sub_1003ED4F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED114(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1003ED50C(uint64_t *a1, uint64_t *a2)
{
  return sub_1003ED1AC(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1003ED524()
{
  unint64_t result;

  result = qword_100BDF680;
  if (!qword_100BDF680)
  {
    result = swift_getWitnessTable(&unk_10099D480, &unk_100B72368);
    atomic_store(result, (unint64_t *)&qword_100BDF680);
  }
  return result;
}

unint64_t sub_1003ED560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF698;
  if (!qword_100BDF698)
  {
    v1 = sub_100075EB0(&qword_100BDF690);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF698);
  }
  return result;
}

unint64_t sub_1003ED5A4()
{
  unint64_t result;

  result = qword_100BDF6A0;
  if (!qword_100BDF6A0)
  {
    result = swift_getWitnessTable(&unk_10099D4A8, &unk_100B72368);
    atomic_store(result, (unint64_t *)&qword_100BDF6A0);
  }
  return result;
}

void sub_1003ED5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1003ED624()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10009D4E0();
  v0 = sub_1000C4914();
  sub_1004B6260(v0, v1, v2);
  v4 = v3;
  sub_10009925C();
  return v4;
}

void sub_1003ED7D8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1003ED814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10009D4E0();
  sub_1004B6754(v0);
  v2 = v1;
  sub_10009925C();
  return v2;
}

void sub_1003ED960(uint64_t *a1)
{
  sub_100085A88(*a1);
}

void type metadata accessor for ComponentSpan()
{
  sub_100098884();
}

_QWORD *sub_1003ED978(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2 & 0xFFFFFFFFFFFFFFBLL;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t sub_1003ED9AC(_QWORD *a1)
{
  return swift_release(*a1 & 0xFFFFFFFFFFFFFFBLL);
}

uint64_t *sub_1003ED9BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2 & 0xFFFFFFFFFFFFFFBLL;
  v4 = *a1;
  *a1 = *a2;
  v5 = v4 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *sub_1003EDA04(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3 & 0xFFFFFFFFFFFFFFBLL);
  return a1;
}

uint64_t sub_1003EDA3C(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x67 && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 102;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x66)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1003EDA90(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x66)
  {
    *(_QWORD *)result = a2 - 103;
    if (a3 >= 0x67)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x67)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1003EDAE0(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x18)
    return v1;
  else
    return (*a1 >> 3) + 25;
}

_QWORD *sub_1003EDB04(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1003EDB18(unint64_t *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 0x19)
    v2 = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    v2 = (8 * (a2 - 25)) | 0xC000000000000004;
  *result = v2;
  return result;
}

void type metadata accessor for LocationContentViewModel()
{
  sub_100098884();
}

uint64_t sub_1003EDB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  id v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  uint64_t v28;
  uint64_t v29;
  uint64_t countAndFlagsBits;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;

  v59 = a3;
  v11 = sub_1000BA294(&qword_100BCB0A8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v58 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v58 - v16, a1, v11);
  v18(v15, a2, v11);
  if ((a5 & 1) != 0)
  {
    v19 = *(void (**)(char *, uint64_t))(v12 + 8);
    v19(v15, v11);
    v19(v17, v11);
LABEL_4:
    v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v60._object = (void *)0x8000000100A00350;
    v24._object = (void *)0x8000000100A00330;
    v24._countAndFlagsBits = 0xD000000000000019;
    v25._countAndFlagsBits = 0x206D6F7266204025;
    v25._object = (void *)0xEF65676172657661;
    v60._countAndFlagsBits = 0x10000000000000A6;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v60);
    object = v26._object;

    v28 = sub_1000BA294(&qword_100BC3C38);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_1000B2E24();
    *(_QWORD *)(v29 + 32) = v59;
    *(_QWORD *)(v29 + 40) = a4;
    swift_bridgeObjectRetain(a4);
    countAndFlagsBits = v26._countAndFlagsBits;
    v31 = v26._object;
    v32 = v29;
    goto LABEL_12;
  }
  v20 = sub_1000A0794(0, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
  v21 = static Measurement.== infix<A, B>(_:_:)(v17, v15, v20, v20, v20);
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  v22(v17, v11);
  if ((v21 & 1) != 0)
    goto LABEL_4;
  v33 = sub_1003F0038();
  v34 = dispatch thunk of static Comparable.< infix(_:_:)(a2, a1, v11, v33);
  v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v34 & 1) != 0)
  {
    v61._countAndFlagsBits = 0x10000000000000B6;
    v36._countAndFlagsBits = 0xD000000000000010;
    v61._object = (void *)0x8000000100A00270;
    v37._object = (void *)0x8000000100A00230;
    v36._object = (void *)0x8000000100A00250;
    v37._countAndFlagsBits = 0xD000000000000019;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v35, v36, v61);
    v39 = v38._countAndFlagsBits;
    object = v38._object;

    v40 = sub_1000BA294(&qword_100BC3C38);
    v41 = swift_allocObject(v40, 72, 7);
    *(_OWORD *)(v41 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v41 + 56) = &type metadata for String;
    *(_QWORD *)(v41 + 64) = sub_1000B2E24();
    *(_QWORD *)(v41 + 32) = v59;
    *(_QWORD *)(v41 + 40) = a4;
    swift_bridgeObjectRetain(a4);
  }
  else
  {
    if ((a6 & 1) != 0)
    {
      v62._countAndFlagsBits = 0x10000000000000D2;
      v42._countAndFlagsBits = 0xD000000000000010;
      v43._countAndFlagsBits = 0xD000000000000027;
      v62._object = (void *)0x8000000100A00150;
      v43._object = (void *)0x8000000100A00100;
      v42._object = (void *)0x8000000100A00130;
      v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v35, v42, v62);
      v39 = v44._countAndFlagsBits;
      object = v44._object;

      v45 = sub_1000BA294(&qword_100BC3C38);
      v41 = swift_allocObject(v45, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_10097CA50;
      v48 = String.trimmingHyphensAndMinusSigns()();
      v47 = v48._object;
      v46 = v48._countAndFlagsBits;
    }
    else
    {
      v63._countAndFlagsBits = 0x10000000000000B9;
      v63._object = (void *)0x8000000100A00040;
      v49._object = (void *)0x8000000100A00020;
      v49._countAndFlagsBits = 0xD000000000000019;
      v50._countAndFlagsBits = 0x206D6F7266204025;
      v50._object = (void *)0xEF65676172657661;
      v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v35, v50, v63);
      v39 = v51._countAndFlagsBits;
      object = v51._object;

      v52 = sub_1000BA294(&qword_100BC3C38);
      v41 = swift_allocObject(v52, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_10097CA50;
      v53 = String.replacingHyphensWithMinusSigns()();
      v47 = v53._object;
      v46 = v53._countAndFlagsBits;
    }
    v54 = v46;
    v55 = v47;
    *(_QWORD *)(v41 + 56) = &type metadata for String;
    *(_QWORD *)(v41 + 64) = sub_1000B2E24();
    *(_QWORD *)(v41 + 32) = v54;
    *(_QWORD *)(v41 + 40) = v55;
  }
  countAndFlagsBits = v39;
  v31 = object;
  v32 = v41;
LABEL_12:
  v56 = String.init(format:_:)(countAndFlagsBits, v31, v32);
  swift_bridgeObjectRelease(object);
  return v56;
}

uint64_t sub_1003EE038(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v19;
  Swift::String v20;

  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD000000000000014;
  v7._countAndFlagsBits = 0xD00000000000001ELL;
  v19._countAndFlagsBits = 0xD00000000000009ELL;
  v19._object = (void *)0x80000001009FFE70;
  v7._object = (void *)0x80000001009FFE30;
  v6._object = (void *)0x80000001009FFE50;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v5, v6, v19);

  v9 = sub_1000BA294(&qword_100BC3C38);
  v10 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v10 + 56) = &type metadata for Int;
  *(_QWORD *)(v10 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v10 + 32) = 30;
  *(_QWORD *)(v10 + 96) = &type metadata for String;
  v11 = sub_1000B2E24();
  *(_QWORD *)(v10 + 104) = v11;
  *(_QWORD *)(v10 + 72) = a1;
  *(_QWORD *)(v10 + 80) = a2;
  swift_bridgeObjectRetain(a2);
  v12 = static String.localizedStringWithFormat(_:_:)(v8._countAndFlagsBits, v8._object, v10);
  swift_bridgeObjectRelease(v8._object);
  v13 = objc_msgSend(v4, "mainBundle", swift_bridgeObjectRelease(v10).n128_f64[0]);
  v14._countAndFlagsBits = 0xD000000000000027;
  v20._countAndFlagsBits = 0xD0000000000000B0;
  v20._object = (void *)0x80000001009FFF60;
  v14._object = (void *)0x80000001009FFF10;
  v15._object = (void *)0x80000001009FFF40;
  v15._countAndFlagsBits = 0xD000000000000010;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v20);

  v17 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v17 + 56) = &type metadata for Int;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 32) = 30;
  *(_QWORD *)(v17 + 96) = &type metadata for String;
  *(_QWORD *)(v17 + 104) = v11;
  *(_QWORD *)(v17 + 72) = a1;
  *(_QWORD *)(v17 + 80) = a2;
  swift_bridgeObjectRetain(a2);
  static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v17);
  swift_bridgeObjectRelease(v16._object);
  swift_bridgeObjectRelease(v17);
  return v12;
}

uint64_t sub_1003EE2B4@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  id v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  void *object;
  uint64_t countAndFlagsBits;
  void (*v129)(uint64_t, uint64_t);
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, _QWORD, uint64_t);
  unsigned int v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  Swift::String v142;

  v139 = a2;
  v114 = a3;
  v123 = type metadata accessor for NumberFormatStyleConfiguration.SignDisplayStrategy(0);
  v122 = *(_QWORD *)(v123 - 8);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v140 = v6;
  v7 = sub_1000D1284();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000BA294(&qword_100BC3340);
  sub_10009D98C();
  __chkstk_darwin(v12);
  v13 = sub_1000BD1E4();
  v135 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(v13);
  v137 = *(_QWORD *)(v135 - 8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_1000986FC();
  v120 = v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  v18 = (char *)&v142._object - v17;
  v19 = sub_1000BA294(&qword_100BC4E68);
  v113 = *(_QWORD *)(v19 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_1000986FC();
  v136 = v21;
  sub_10009D2A4();
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v142._object - v24;
  v26 = __chkstk_darwin(v23);
  v141 = (uint64_t)&v142._object - v27;
  Measurement.rounded.getter(v26);
  Measurement.rounded.getter(v19);
  v118 = (id)objc_opt_self(NSBundle);
  v28 = objc_msgSend(v118, "mainBundle");
  sub_1000989C4();
  v29._countAndFlagsBits = sub_1000C6DAC();
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v142._countAndFlagsBits = 0x100000000000006ALL;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v142);
  object = v31._object;
  countAndFlagsBits = v31._countAndFlagsBits;

  v124 = sub_1000BA294(&qword_100BC3C38);
  v32 = sub_1000D0970(v124);
  v126 = xmmword_10097CA50;
  *(_OWORD *)(v32 + 16) = xmmword_10097CA50;
  v33 = sub_1000988FC();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  v121 = a1;
  v115 = v34;
  v34(v3, a1, v33);
  sub_100099444();
  v116 = v33;
  v38 = _s7Weather24LocationCompositionStateOwst_0(v35, v36, v37, v33);
  v39 = static Set<>.full.getter(v38);
  static WeatherFormatStyle<>.weather(_:locale:)(v39, v3);
  sub_1000986C4();
  v117 = v3;
  sub_1000AA25C(v3);
  v40 = v8;
  v41 = *(void (**)(_QWORD))(v8 + 104);
  v134 = enum case for WeatherFormatPlaceholder.none(_:);
  v42 = v7;
  v133 = (uint64_t (*)(uint64_t, _QWORD, uint64_t))v41;
  v41(v11);
  v132 = sub_1000BCF94();
  v43 = sub_1000B314C();
  v44 = sub_100051B90((unint64_t *)&qword_100BCB9D8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
  v138 = v19;
  v45 = v135;
  v131 = v44;
  v46 = Measurement.formatted<A>(_:placeholder:unitManager:)(v18, v11, v43, &protocol witness table for UnitManager, v19, v135, v44);
  v48 = v47;
  sub_100098834();
  v49 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v50 = v11;
  v51 = v11;
  v52 = v42;
  v130 = v49;
  v49(v51, v42);
  v53 = *(void (**)(char *, uint64_t))(v137 + 8);
  v54 = v45;
  v53(v18, v45);
  *(_QWORD *)(v32 + 56) = &type metadata for String;
  v119 = sub_1000B2E24();
  *(_QWORD *)(v32 + 64) = v119;
  *(_QWORD *)(v32 + 32) = v46;
  *(_QWORD *)(v32 + 40) = v48;
  v55 = object;
  v56 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v32);
  v58 = v57;
  v59 = v55;
  v60 = v136;
  swift_bridgeObjectRelease(v59);
  sub_10003BC58();
  v62 = sub_100079FE8(v61, (unint64_t *)&qword_100BC5658, NSUnitTemperature_ptr);
  countAndFlagsBits = (uint64_t)v25;
  v63 = static Measurement<>.- infix(_:_:)(v141, v25, v62);
  v125 = v56;
  v137 = v58;
  v129 = (void (*)(uint64_t, uint64_t))v53;
  if ((v139 & 1) != 0)
    static NumberFormatStyleConfiguration.SignDisplayStrategy.never.getter(v63);
  else
    sub_1000BF178();
  v64 = v52;
  v65 = v123;
  v66 = v122;
  v67 = v120;
  v68 = v117;
  v69 = v116;
  v115(v117, v121, v116);
  sub_100099444();
  v73 = _s7Weather24LocationCompositionStateOwst_0(v70, v71, v72, v69);
  static Set<>.full.getter(v73);
  v74 = v140;
  sub_1000DC918();
  static WeatherFormatStyle<>.weather(_:sign:locale:)(v75);
  sub_1000986C4();
  sub_1000AA25C(v68);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v74, v65);
  v76 = v133(v50, v134, v64);
  v77 = static UnitManager.standard.getter(v76);
  v78 = v138;
  Measurement.formatted<A>(_:placeholder:unitManager:)(v67, v50, v77, &protocol witness table for UnitManager, v138, v54, v131);
  sub_100089020();
  v130(v50, v64);
  v129(v67, v54);
  if (Measurement.value.getter(v78) > 0.0)
  {
    v80 = (uint64_t)v60;
    v81 = sub_1000DC3C4(v79, "mainBundle");
    sub_1000989C4();
    v82 = sub_1000C6DAC();
LABEL_10:
    sub_1000BABFC(v82, v83, v84, v85, v86, v87, v88, v89);
    sub_100110298();
    v101 = sub_1000D0970(v124);
    *(_OWORD *)(v101 + 16) = v126;
    v102 = v119;
    *(_QWORD *)(v101 + 56) = &type metadata for String;
    *(_QWORD *)(v101 + 64) = v102;
    v103 = sub_1000D0148(v101);
    v105 = v104;
    sub_1000DB294();
    goto LABEL_13;
  }
  v90 = Measurement.value.getter(v78);
  v92 = sub_1000DC3C4(v91, "mainBundle");
  v80 = (uint64_t)v60;
  if (v90 >= 0.0)
  {
    v82 = sub_1000CCCE4();
    goto LABEL_10;
  }
  sub_1000DB294();
  if ((v139 & 1) != 0)
  {
    sub_1000989C4();
    v93 = sub_1000C6DAC();
  }
  else
  {
    v93 = sub_1000CCCE4();
  }
  sub_1000BABFC(v93, v94, v95, v96, v97, v98, v99, v100);
  sub_100110298();
  v106 = sub_1000D0970(v124);
  *(_OWORD *)(v106 + 16) = v126;
  v107 = v119;
  *(_QWORD *)(v106 + 56) = &type metadata for String;
  *(_QWORD *)(v106 + 64) = v107;
  v103 = sub_1000D0148(v106);
  v105 = v108;
LABEL_13:
  v109 = countAndFlagsBits;
  v110 = v125;
  sub_1000986C4();
  sub_10003BC58();
  sub_1000BE7AC(v80);
  sub_1000BE7AC(v109);
  result = sub_1000BE7AC(v141);
  *v60 = v103;
  v60[1] = v105;
  v60[2] = 0;
  v60[3] = 0;
  v112 = v137;
  v60[4] = v110;
  v60[5] = v112;
  return result;
}

void sub_1003EE980(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, void (**a4)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t (*v47)(uint64_t, _QWORD, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, __n128);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  Swift::String v98;
  Swift::String v99;
  Swift::String_optional v100;
  Swift::String v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  char *v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  char *v117;
  uint64_t v118;
  int *v119;
  void (*v120)(char *, char *, uint64_t);
  void (*v121)(uint64_t, uint64_t, __n128);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (**v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t);
  char *v152;
  char *v153;
  uint64_t v154;
  Swift::String v155;

  LODWORD(v150) = a3;
  v153 = (char *)a1;
  v140 = a4;
  sub_1000BA294(&qword_100BD8A00);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_1000986FC();
  v139 = v6;
  sub_10009D2A4();
  v8 = __chkstk_darwin(v7);
  sub_1000F4430(v8, v9, v10, v11, v12, v13, v14, v15, (uint64_t)v155._object);
  v138 = sub_1000B4928();
  v135 = *(_QWORD *)(v138 - 8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_1000986FC();
  v136 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  v134 = (char *)&v155._object - v19;
  v133 = sub_1000D1284();
  v141 = *(_QWORD *)(v133 - 8);
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v132 = v21;
  sub_1000BA294(&qword_100BC3340);
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v128 = v23;
  v24 = sub_1000CDC5C();
  v145 = *(_QWORD *)(v24 - 8);
  v146 = v24;
  sub_10009D98C();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v144 = v26;
  v129 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle(0);
  v130 = *(_QWORD *)(v129 - 8);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_1000986FC();
  v131 = v28;
  sub_10009D2A4();
  __chkstk_darwin(v29);
  v127 = (char *)&v155._object - v30;
  v31 = type metadata accessor for WeatherFormatScaling(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  sub_1000986FC();
  v143 = v33;
  sub_10009D2A4();
  __chkstk_darwin(v34);
  v36 = (char *)&v155._object - v35;
  v154 = sub_1000BA294(&qword_100BCB0A8);
  v126 = *(_QWORD *)(v154 - 8);
  sub_10009D98C();
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v155._object - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v38);
  v43 = (char *)&v155._object - v42;
  __chkstk_darwin(v41);
  v45 = (char *)&v155._object - v44;
  v46 = enum case for WeatherFormatScaling.automatic(_:);
  v47 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v32 + 104);
  sub_1000EAFA4((uint64_t)v36);
  v48 = sub_1000DAC6C();
  Measurement<>.converted(usage:scaling:)(v48);
  v49 = *(void (**)(char *, uint64_t))(v32 + 8);
  v49(v36, v31);
  LODWORD(v149) = v46;
  sub_1000EAFA4((uint64_t)v36);
  v50 = sub_1000DAC6C();
  Measurement<>.converted(usage:scaling:)(v50);
  v124 = v36;
  v151 = (void (*)(uint64_t, uint64_t))v49;
  v51 = ((uint64_t (*)(char *, uint64_t))v49)(v36, v31);
  v52 = v143;
  sub_100079FE8(v51, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
  v125 = v40;
  v152 = v45;
  v153 = v43;
  v53 = sub_1000E7BB8();
  static Measurement<>.- infix(_:_:)(v53, v54, v55);
  v148 = (uint64_t)v47;
  v56 = v47(v52, enum case for WeatherFormatScaling.asProvided(_:), v31);
  v57 = v144;
  if ((v150 & 1) != 0)
    static NumberFormatStyleConfiguration.SignDisplayStrategy.automatic.getter(v56);
  else
    sub_1000BF178();
  v142 = sub_1000988FC();
  v58 = _s7Weather24LocationCompositionStateOwst_0(v128, 1, 1, v142);
  static Set<>.full.getter(v58);
  v59 = v127;
  v147 = a2;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:sign:locale:)();
  sub_1000986C4();
  sub_1000C21C4();
  (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v57, v146);
  v151(v52, v31);
  LODWORD(v146) = enum case for WeatherFormatPlaceholder.none(_:);
  v60 = v141;
  v145 = *(_QWORD *)(v141 + 104);
  v61 = v132;
  v62 = v133;
  ((void (*)(uint64_t))v145)(v132);
  v144 = sub_1000BCF94();
  v63 = sub_1000B314C();
  v143 = sub_100051B90((unint64_t *)&qword_100BCB0B8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitLength.BaseWeatherFormatStyle);
  v64 = v154;
  v65 = v129;
  v66 = v125;
  v122 = Measurement.formatted<A>(_:placeholder:unitManager:)(v59, v61, v63, &protocol witness table for UnitManager, v154, v129, v143);
  v123 = v67;
  swift_release(v63);
  v121 = *(void (**)(uint64_t, uint64_t, __n128))(v60 + 8);
  v68 = sub_1000DAC6C();
  v69(v68);
  v141 = *(_QWORD *)(v130 + 8);
  ((void (*)(char *, uint64_t))v141)(v59, v65);
  v130 = *(_QWORD *)(v126 + 8);
  ((void (*)(char *, uint64_t))v130)(v66, v64);
  sub_1000C0E2C();
  sub_1000D8F80();
  v70 = v131;
  sub_1000DB990();
  sub_1000986C4();
  sub_1000994E4();
  sub_1000C21C4();
  v71 = sub_1000D1E20();
  v72 = static UnitManager.standard.getter(v71);
  v126 = Measurement.formatted<A>(_:placeholder:unitManager:)(v70, v61, v72, &protocol witness table for UnitManager, v64, v65, v143);
  v127 = v73;
  sub_100089020();
  v74 = sub_1000DAC6C();
  v75 = v121;
  ((void (*)(uint64_t))v121)(v74);
  sub_1000CF844();
  sub_1000C0E2C();
  sub_1000D8F80();
  sub_1000DB990();
  sub_1000986C4();
  sub_1000994E4();
  sub_1000C21C4();
  v76 = sub_1000D1E20();
  v77 = static UnitManager.standard.getter(v76);
  sub_1000DC918();
  v81 = Measurement.formatted<A>(_:placeholder:unitManager:)(v78, v79, v80, &protocol witness table for UnitManager, v154, v65, v143);
  v83 = v82;
  v84 = swift_release(v77);
  v85 = v61;
  v86 = v126;
  v75(v85, v62, v84);
  v87 = (uint64_t)v127;
  sub_1000CF844();
  v88 = 1;
  if (v86 != v81 || v87 != v83)
    v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v81, v83, 0);
  v90 = sub_1003EDB60((uint64_t)v152, (uint64_t)v153, v122, v123, v88 & 1, v150 & 1);
  v150 = v91;
  v151 = (void (*)(uint64_t, uint64_t))v90;
  sub_1000986E8();
  v148 = sub_1003EE038(v86, v87);
  v149 = v92;
  v94 = v93;
  v96 = v95;
  sub_10003BC58();
  v97 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000B2FC4();
  sub_1000D0134();
  v98._countAndFlagsBits = 0xD000000000000016;
  v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, v100, (NSBundle)v97, v98, v155);

  v102 = sub_1000BA294(&qword_100BC3C38);
  v103 = sub_10009DAF4(v102);
  *(_OWORD *)(v103 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v103 + 56) = &type metadata for Int;
  *(_QWORD *)(v103 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v103 + 32) = 30;
  *(_QWORD *)(v103 + 96) = &type metadata for String;
  *(_QWORD *)(v103 + 104) = sub_1000B2E24();
  *(_QWORD *)(v103 + 72) = v81;
  *(_QWORD *)(v103 + 80) = v83;
  v104 = static String.localizedStringWithFormat(_:_:)(v101._countAndFlagsBits, v101._object, v103);
  v106 = v105;
  sub_1000986E8();
  swift_bridgeObjectRelease(v103);
  v107 = swift_bridgeObjectRetain(v106);
  v108 = v134;
  AttributedString.init(markdown:fallback:)(v104, v106, v104, v106, v107);
  v110 = v137;
  v109 = v138;
  sub_1000D1CFC(v137, 1);
  v111 = swift_bridgeObjectRetain(v94);
  v112 = v136;
  AttributedString.init(markdown:fallback:)(v148, v94, v148, v94, v111);
  v113 = swift_bridgeObjectRetain(v96);
  v114 = v139;
  AttributedString.init(markdown:fallback:)(v149, v96, v149, v96, v113);
  v115 = v154;
  v116 = (void (*)(char *, uint64_t))v130;
  ((void (*)(char *, uint64_t))v130)(v153, v154);
  v116(v152, v115);
  sub_1000D1CFC(v114, 0);
  v117 = (char *)v140;
  v118 = v150;
  *v140 = v151;
  *((_QWORD *)v117 + 1) = v118;
  v119 = (int *)type metadata accessor for AveragesComparisonStrings(0);
  v120 = *(void (**)(char *, char *, uint64_t))(v135 + 32);
  v120(&v117[v119[5]], v108, v109);
  sub_1003F00B4(v110, (uint64_t)&v117[v119[6]]);
  v120(&v117[v119[7]], v112, v109);
  sub_1003F00B4(v114, (uint64_t)&v117[v119[8]]);
  sub_100098640();
}

void sub_1003EF1D0(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  id v66;
  Swift::String v67;
  Swift::String v68;
  uint64_t v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  unsigned int v93;
  void (*v94)(uint64_t);
  uint64_t v95;

  v3 = a1;
  v4 = type metadata accessor for Locale.Language(0);
  v80 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v79 = v6;
  v7 = sub_1000D1284();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000BA294(&qword_100BC3340);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v86 = *(_QWORD *)(v16 - 8);
  sub_10009D98C();
  __chkstk_darwin(v17);
  v18 = sub_1000BD1E4();
  v19 = type metadata accessor for Locale(v18);
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v91(v15, v3, v19);
  v20 = sub_1000D1CFC(v15, 0);
  v21 = static Set<>.full.getter(v20);
  sub_1000CD748(v21);
  sub_1000986C4();
  sub_1000C668C();
  v93 = enum case for WeatherFormatPlaceholder.none(_:);
  v94 = *(void (**)(uint64_t))(v8 + 104);
  v94(v11);
  sub_1000BCF94();
  v22 = sub_1000B314C();
  v95 = sub_1000BA294(&qword_100BC4E68);
  v92 = sub_100051B90((unint64_t *)&qword_100BCB9D8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitTemperature.BaseWeatherFormatStyle);
  v23 = Measurement.formatted<A>(_:placeholder:unitManager:)(v2, v11, v22, &protocol witness table for UnitManager, v95, v16, v92);
  v88 = v24;
  v89 = v23;
  sub_100098834();
  v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v25(v11, v7);
  v26 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  v26(v2, v16);
  sub_10009D590(v15, a1);
  sub_100099444();
  v83 = v19;
  v30 = _s7Weather24LocationCompositionStateOwst_0(v27, v28, v29, v19);
  v31 = static Set<>.full.getter(v30);
  sub_1000CD748(v31);
  sub_1000986C4();
  sub_1000C668C();
  sub_1000CFCC4(v11, v93);
  v32 = sub_1000C1E48();
  v33 = Measurement.formatted<A>(_:placeholder:unitManager:)(v2, v11, v32, &protocol witness table for UnitManager, v95, v16, v92);
  v85 = v34;
  v87 = v33;
  v35 = swift_release(v32);
  ((void (*)(uint64_t, uint64_t, __n128))v25)(v11, v7, v35);
  v84 = (uint64_t (*)(uint64_t))v26;
  v36 = ((uint64_t (*)(uint64_t, uint64_t))v26)(v2, v16);
  v37 = Locale.language.getter(v36);
  LOBYTE(v3) = Locale.Language.prefersFullTemperatureScale.getter(v37);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
  if ((v3 & 1) != 0)
  {
    v39 = static Set<>.value.getter(v38);
    sub_10009D590(v15, a1);
    sub_1000D1CFC(v15, 0);
    sub_1000CD748(v39);
    sub_1000986C4();
    sub_1000C668C();
    sub_1000CFCC4(v11, v93);
    v40 = sub_1000C1E48();
    v82 = sub_1000C5E4C(v2, v11, v40, (uint64_t)&protocol witness table for UnitManager);
    v42 = v41;
    sub_100098834();
    sub_100109978();
    v43 = sub_1000E7BB8();
    v44 = v84(v43);
    v45 = static Set<>.unit.getter(v44);
    sub_10009D590(v15, a1);
    v46 = v42;
    _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v83);
    sub_1000CD748(v45);
    sub_1000986C4();
    sub_1000C668C();
    ((void (*)(uint64_t, _QWORD, uint64_t))v94)(v11, v93, v7);
    v47 = sub_1000C1E48();
    v48 = sub_1000C5E4C(v2, v11, v47, (uint64_t)&protocol witness table for UnitManager);
    v50 = v49;
    swift_release(v47);
    sub_100109978();
    v51 = v82;
    v52 = sub_1000E7BB8();
    v84(v52);
  }
  else
  {
    v91(v15, a1, v19);
    sub_100099444();
    v56 = _s7Weather24LocationCompositionStateOwst_0(v53, v54, v55, v19);
    v57 = static Set<>.full.getter(v56);
    sub_1000CD748(v57);
    sub_1000986E8();
    sub_1000C668C();
    sub_1000CFCC4(v11, v93);
    v58 = sub_1000C1E48();
    sub_1000DC918();
    v51 = sub_1000C5E4C(v59, v60, v61, v62);
    v46 = v63;
    v64 = swift_release(v58);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v11, v7, v64);
    v65 = sub_1000E7BB8();
    v84(v65);
    v48 = 0;
    v50 = 0;
  }
  v66 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000B2FC4();
  v67._countAndFlagsBits = 0xD000000000000016;
  v68._countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  v69 = 0x10000000000000A0;
  v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, *(Swift::String *)(&v77 - 1));

  v71 = sub_1000BA294(&qword_100BC3C38);
  v72 = sub_10009DAF4(v71);
  *(_OWORD *)(v72 + 16) = xmmword_10097DA20;
  *(_QWORD *)(v72 + 56) = &type metadata for String;
  v73 = sub_1000B2E24();
  *(_QWORD *)(v72 + 32) = v87;
  *(_QWORD *)(v72 + 40) = v85;
  *(_QWORD *)(v72 + 96) = &type metadata for String;
  *(_QWORD *)(v72 + 104) = v73;
  *(_QWORD *)(v72 + 64) = v73;
  *(_QWORD *)(v72 + 72) = v89;
  *(_QWORD *)(v72 + 80) = v88;
  v74 = static String.localizedStringWithFormat(_:_:)(v70._countAndFlagsBits, v70._object, v72);
  v76 = v75;
  swift_bridgeObjectRelease(v70._object);
  sub_10003BC58();
  *a2 = v51;
  a2[1] = v46;
  a2[2] = v48;
  a2[3] = v50;
  a2[4] = v74;
  a2[5] = v76;
  sub_100098640();
}

void sub_1003EF760(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t);
  uint64_t v48;
  uint64_t (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  void (**v52)(_QWORD, _QWORD *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  objc_class *v78;
  NSBundle v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  objc_class *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t countAndFlagsBits;
  void *object;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char v98;
  Swift::String v99;
  NSBundle v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  Swift::String v111;
  Swift::String v112;
  Swift::String v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  void *v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t);
  unsigned int v127;
  void (**v128)(_QWORD, _QWORD *);
  _QWORD *v129;
  void (*v130)(uint64_t, _QWORD, uint64_t);
  unsigned int v131;
  void (*v132)(uint64_t, _QWORD, uint64_t);
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  Swift::String v153;

  v146 = a4;
  v149 = a3;
  v150 = a2;
  v122 = a5;
  v144 = type metadata accessor for WeatherFormatPlaceholder(0);
  v142 = *(_QWORD *)(v144 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v143 = v7;
  sub_1000BA294(&qword_100BC3340);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v137 = v9;
  v129 = (_QWORD *)sub_1000CDC5C();
  v128 = (void (**)(_QWORD, _QWORD *))*(v129 - 1);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = type metadata accessor for WeatherFormatScaling(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_1000986FC();
  v140 = v16;
  sub_10009D2A4();
  __chkstk_darwin(v17);
  v19 = (char *)&v153._object - v18;
  v20 = type metadata accessor for NSUnitLength.WeatherFormatUsage(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  sub_1000986FC();
  v138 = v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  v25 = (char *)&v153._object - v24;
  v26 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle(0);
  v136 = *(_QWORD *)(v26 - 8);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_1000986FC();
  v139 = v28;
  sub_10009D2A4();
  v30 = __chkstk_darwin(v29);
  sub_1000F4430(v30, v31, v32, v33, v34, v35, v36, v37, (uint64_t)v153._object);
  v152 = sub_1000BA294(&qword_100BCB0A8);
  v123 = *(_QWORD *)(v152 - 8);
  sub_10009D98C();
  __chkstk_darwin(v38);
  sub_1000986FC();
  v118 = v39;
  sub_10009D2A4();
  __chkstk_darwin(v40);
  v119 = (char *)&v153._object - v41;
  sub_10009D2A4();
  v43 = __chkstk_darwin(v42);
  v45 = (char *)&v153._object - v44;
  v46 = sub_100079FE8(v43, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
  v151 = v45;
  v145 = a1;
  v117 = v46;
  static Measurement<>.- infix(_:_:)(a1, v150, v46);
  LODWORD(v45) = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
  v134 = v21;
  v47 = *(void (**)(char *, _QWORD, uint64_t))(v21 + 104);
  v148 = v20;
  v47(v25, enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:), v20);
  LODWORD(v20) = enum case for WeatherFormatScaling.asProvidedButRounded(_:);
  v48 = v15;
  v49 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v147 = v14;
  v50 = v49(v19, enum case for WeatherFormatScaling.asProvidedButRounded(_:), v14);
  v141 = v26;
  v133 = v45;
  v132 = (void (*)(uint64_t, _QWORD, uint64_t))v47;
  v131 = v20;
  v130 = (void (*)(uint64_t, _QWORD, uint64_t))v49;
  if ((v146 & 1) != 0)
    static NumberFormatStyleConfiguration.SignDisplayStrategy.automatic.getter(v50);
  else
    sub_1000BF178();
  v51 = v129;
  v52 = v128;
  v53 = sub_1000988FC();
  v129 = *(_QWORD **)(*(_QWORD *)(v53 - 8) + 16);
  v54 = v137;
  ((void (*)(uint64_t, uint64_t, uint64_t))v129)(v137, v149, v53);
  sub_100099A6C();
  v55 = v135;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:sign:locale:)();
  sub_1000986E8();
  sub_1000AA25C(v54);
  v52[1](v13, v51);
  v128 = *(void (***)(_QWORD, _QWORD *))(v48 + 8);
  ((void (*)(char *, uint64_t))v128)(v19, v147);
  v134 = *(_QWORD *)(v134 + 8);
  v56 = v148;
  ((void (*)(char *, uint64_t))v134)(v25, v148);
  v127 = enum case for WeatherFormatPlaceholder.none(_:);
  v57 = v142;
  v126 = *(void (**)(uint64_t))(v142 + 104);
  v58 = v143;
  v59 = v144;
  v126(v143);
  v125 = sub_1000BCF94();
  v60 = sub_1000B314C();
  v124 = sub_100051B90((unint64_t *)&qword_100BCB0B8, (uint64_t (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle, (uint64_t)&protocol conformance descriptor for NSUnitLength.BaseWeatherFormatStyle);
  v61 = v141;
  v121 = Measurement.formatted<A>(_:placeholder:unitManager:)(v55, v58, v60, &protocol witness table for UnitManager, v152, v141, v124);
  v120 = v62;
  v63 = swift_release(v60);
  v142 = *(_QWORD *)(v57 + 8);
  ((void (*)(uint64_t, uint64_t, __n128))v142)(v58, v59, v63);
  v136 = *(_QWORD *)(v136 + 8);
  ((void (*)(uint64_t, uint64_t))v136)(v55, v61);
  v64 = v138;
  v132(v138, v133, v56);
  v65 = v140;
  v66 = v147;
  v130(v140, v131, v147);
  ((void (*)(uint64_t, uint64_t, uint64_t))v129)(v54, v149, v53);
  v67 = sub_100099A6C();
  v68 = v139;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)(v67, v64, v65, 2, v54);
  sub_1000986C4();
  sub_1000AA25C(v54);
  ((void (*)(uint64_t, uint64_t))v128)(v65, v66);
  ((void (*)(uint64_t, uint64_t))v134)(v64, v148);
  v69 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v126)(v58, v127, v59);
  v70 = static UnitManager.standard.getter(v69);
  v71 = v150;
  v72 = Measurement.formatted<A>(_:placeholder:unitManager:)(v68, v58, v70, &protocol witness table for UnitManager, v152, v61, v124);
  v74 = v73;
  sub_100089020();
  ((void (*)(uint64_t, uint64_t))v142)(v58, v59);
  ((void (*)(uint64_t, uint64_t))v136)(v68, v61);
  v75 = v152;
  v76 = sub_1003F0038();
  v77 = v145;
  if ((dispatch thunk of static Comparable.< infix(_:_:)(v71, v145, v75, v76) & 1) == 0)
  {
    v70 = 0xD000000000000010;
    v95 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
    v96 = (uint64_t)v119;
    v95(v119, v77, v75);
    v97 = v118;
    v95((char *)v118, v71, v75);
    if ((v146 & 1) != 0)
    {
      v98 = static Measurement.< infix<A, B>(_:_:)(v96, v97, v117, v117, v117);
      sub_1000DA570(v97);
      sub_1000DA570(v96);
      sub_1000DAEF0();
      if ((v98 & 1) != 0)
      {
        v99 = String.trimmingHyphensAndMinusSigns()();
        countAndFlagsBits = v99._countAndFlagsBits;
        object = v99._object;
        sub_1000986C4();
        v87 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        sub_1000989C4();
        sub_1000B2FC4();
        sub_1000D0134();
        v100.super.isa = v87;
        sub_1000D09D0(v101, v102, v103, v104, v100, v105, v106, v107);
        sub_1000BD3AC();
        v108 = sub_1000BA294(&qword_100BC3C38);
        v109 = sub_1000D0970(v108);
        *(_OWORD *)(v109 + 16) = xmmword_10097CA50;
        v110 = sub_1000BDCE4(v109, (uint64_t)&type metadata for String);
        sub_100098CC8(v110);
        sub_1000C54B8();
        swift_bridgeObjectRelease(v109);
        goto LABEL_11;
      }
    }
    else
    {
      sub_1000DA570(v97);
      sub_1000DA570(v96);
      sub_1000DAEF0();
    }
    v111 = String.replacingHyphensWithMinusSigns()();
    countAndFlagsBits = v111._countAndFlagsBits;
    object = v111._object;
    sub_1000986C4();
    v87 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_1000989C4();
    sub_1000B2FC4();
    v112._countAndFlagsBits = 0x204025206D6F7266;
    v112._object = (void *)0xEF65676172657661;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v113, (Swift::String_optional)0, (NSBundle)v87, v112, v153);
    sub_1000BD3AC();
    v114 = sub_1000BA294(&qword_100BC3C38);
    v115 = sub_1000D0970(v114);
    *(_OWORD *)(v115 + 16) = xmmword_10097CA50;
    v116 = sub_1000BDCE4(v115, (uint64_t)&type metadata for String);
    sub_100098CC8(v116);
    sub_1000C54B8();
    swift_bridgeObjectRelease(v115);
    goto LABEL_11;
  }
  v78 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  sub_1000989C4();
  sub_1000B2FC4();
  sub_1000D0134();
  v79.super.isa = v78;
  v87 = (objc_class *)sub_1000D09D0(v80, v81, v82, v83, v79, v84, v85, v86);

  v88 = sub_1000BA294(&qword_100BC3C38);
  v89 = sub_1000D0970(v88);
  *(_OWORD *)(v89 + 16) = xmmword_10097CA50;
  *(_QWORD *)(v89 + 64) = sub_1000BDCE4(v89, (uint64_t)&type metadata for String);
  *(_QWORD *)(v89 + 32) = v72;
  *(_QWORD *)(v89 + 40) = v74;
  sub_1000DC918();
  static String.localizedStringWithFormat(_:_:)(v90, v91, v92);
  sub_1000C54B8();
  sub_1000986E8();
  v74 = v122;
  countAndFlagsBits = v121;
  object = v120;
LABEL_11:
  sub_1000DA570((uint64_t)v151);
  *v74 = countAndFlagsBits;
  v74[1] = (uint64_t)object;
  v74[2] = 0;
  v74[3] = 0;
  v74[4] = (uint64_t)v87;
  v74[5] = v70;
  sub_100098640();
}

unint64_t sub_1003F0038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF6A8;
  if (!qword_100BDF6A8)
  {
    v1 = sub_100075EB0(&qword_100BCB0A8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Measurement<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF6A8);
  }
  return result;
}

uint64_t type metadata accessor for AveragesComparisonStrings(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDF708;
  if (!qword_100BDF708)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AveragesComparisonStrings);
  return result;
}

uint64_t sub_1003F00B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD8A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003F00FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for AttributedString(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v14, 1, v11))
    {
      v17 = sub_1000BA294(&qword_100BD8A00);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v12)(v15, v16, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v11);
    }
    ((void (*)(char *, char *, uint64_t))v12)((char *)v4 + a3[7], (char *)a2 + a3[7], v11);
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v11))
    {
      v22 = sub_1000BA294(&qword_100BD8A00);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v12)(v20, v21, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1003F028C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for AttributedString(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + a2[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v5))
    v9(v6, v5);
  v9(a1 + a2[7], v5);
  v7 = a1 + a2[8];
  result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

_QWORD *sub_1003F036C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v13, 1, v10))
  {
    v16 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v11)(v14, v15, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
  }
  ((void (*)(char *, char *, uint64_t))v11)((char *)a1 + a3[7], (char *)a2 + a3[7], v10);
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v10))
  {
    v20 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v11)(v18, v19, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v10);
  }
  return a1;
}

char *sub_1003F04D0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v13], 1, v10);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v15, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v18 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v19], 1, v10);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v10);
  if (!v22)
  {
    if (!v23)
    {
      v12(v20, v21, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v10);
  return a1;
}

char *sub_1003F06D4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v11], 1, v9))
  {
    v14 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v9);
  }
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v9))
  {
    v18 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v10(v16, v17, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v9);
  }
  return a1;
}

char *sub_1003F0830(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v13], 1, v10);
  v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v18 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v19], 1, v10);
  v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v10);
  if (!v22)
  {
    if (!v23)
    {
      v12(v20, v21, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_1000BA294(&qword_100BD8A00);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v10);
  return a1;
}

uint64_t sub_1003F0A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F0A30);
}

uint64_t sub_1003F0A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1000B4928();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BD8A00);
      v10 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_1003F0AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F0AD4);
}

uint64_t sub_1003F0AD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1000B4928();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1000BA294(&qword_100BD8A00);
      v10 = *(int *)(a4 + 24);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_1003F0B68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[0] = &unk_10099D5E0;
  v2 = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v7[1] = v4;
    sub_10036A444(319);
    if (v6 <= 0x3F)
    {
      v8 = *(_QWORD *)(v5 - 8) + 64;
      v9 = v4;
      v10 = v8;
      swift_initStructMetadata(a1, 256, 5, v7, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for AveragesStringBuilder()
{
  return &type metadata for AveragesStringBuilder;
}

unint64_t sub_1003F0C0C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_10008D47C(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    v12 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v11) == 1)
    {
      v13 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = v10;
      v15 = v12;
      v16 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = v10;
      v15 = v12;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

double sub_1003F0D08(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003F0D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v10) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    *v9 = *v10;
    swift_retain();
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  return a1;
}

uint64_t sub_1003F0E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v15);
  }
  return a1;
}

uint64_t sub_1003F0F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v8 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1003F0FE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_100021A14(a1 + v10, &qword_100BC68C8);
    v13 = sub_1000BA294(&qword_100BC68C8);
    if (swift_getEnumCaseMultiPayload(v12) == 1)
    {
      v14 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003F10C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F10D0);
}

uint64_t sub_1003F10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_1000BA294(&qword_100BCD380);
    return _s7Weather24LocationCompositionStateOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1003F1140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F114C);
}

uint64_t sub_1003F114C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = sub_1000BA294(&qword_100BCD380);
    return _s7Weather24LocationCompositionStateOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PressureComponentGaugeView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BDF7A8;
  if (!qword_100BDF7A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PressureComponentGaugeView);
  return result;
}

void sub_1003F11F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\t";
  sub_100158B94(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1003F1264(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB3CA8, 1);
}

uint64_t sub_1003F1274@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  v63 = a1;
  v3 = type metadata accessor for BlendMode(0);
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v60 = v5;
  v6 = type metadata accessor for ColorSchemeContrast(0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (char *)&v50 - v10;
  v57 = sub_1000BA294(&qword_100BDF7E0);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v58 = v12;
  v56 = sub_1000BA294(&qword_100BDF7E8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v59 = v14;
  v51 = type metadata accessor for ColorRenderingMode(0);
  v15 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000C4924();
  v18 = *(_QWORD *)(v50 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v50);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1000BA294(&qword_100BDF7F0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v50 - v26;
  sub_1003F1A0C(v2, (uint64_t)v20);
  v28 = *(unsigned __int8 *)(v18 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_100B724E0, v29 + v19, v28 | 7);
  sub_1003F1AF0((uint64_t)v20, v30 + v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for ColorRenderingMode.nonLinear(_:), v51);
  Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)(0, v17, 0, sub_1003F1B34, v30);
  Canvas.rendersAsynchronously.setter(1, v21);
  Canvas.rendersFirstFrameAsynchronously.setter(1, v21);
  v51 = v22;
  v31 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v31(v24, v27, v21);
  v32 = v52;
  sub_100114A94();
  v34 = v53;
  v33 = v54;
  v35 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for ColorSchemeContrast.increased(_:), v55);
  v36 = v34;
  LOBYTE(v34) = static ColorSchemeContrast.== infix(_:_:)(v32, v34);
  v37 = *(void (**)(char *, uint64_t))(v33 + 8);
  v37(v36, v35);
  v38 = ((uint64_t (*)(char *, uint64_t))v37)(v32, v35);
  if ((v34 & 1) != 0)
    v39 = static HierarchicalShapeStyle.primary.getter(v38);
  else
    v39 = static HierarchicalShapeStyle.tertiary.getter(v38);
  v40 = v39;
  v41 = v58;
  v31((char *)v58, v24, v21);
  *(_DWORD *)(v41 + *(int *)(v57 + 36)) = v40;
  v42 = *(void (**)(char *, uint64_t))(v51 + 8);
  v42(v24, v21);
  v44 = v60;
  v43 = v61;
  v45 = v62;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v60, enum case for BlendMode.plusLighter(_:), v62);
  v46 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v59 + *(int *)(v56 + 36), v44, v45);
  sub_10007EBC8(v41, v46, &qword_100BDF7E0);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
  sub_100021A14(v41, &qword_100BDF7E0);
  v47 = v63;
  sub_10007EBC8(v46, v63, &qword_100BDF7E8);
  v48 = v47 + *(int *)(sub_1000BA294(&qword_100BDF7F8) + 36);
  *(_QWORD *)v48 = 0x3FF0000000000000;
  *(_WORD *)(v48 + 8) = 0;
  sub_100021A14(v46, &qword_100BDF7E8);
  return ((uint64_t (*)(char *, uint64_t))v42)(v27, v21);
}

uint64_t sub_1003F1690(uint64_t *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  __n128 v42;
  _QWORD v43[2];
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49[3];
  _QWORD v50[6];

  v8 = type metadata accessor for GraphicsContext.Shading(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EnvironmentValues(0);
  v48 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v47 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4 >= a3)
    a4 = a3;
  v15 = GraphicsContext.translateBy(x:y:)(a4 * 0.5, a4 * 0.5);
  v17 = 0;
  v18 = -(a4 * 0.5);
  v15.n128_u64[0] = 136315138;
  v44 = v15;
  v43[1] = (char *)&type metadata for Any + 8;
  v45 = v9;
  v46 = a2;
  do
  {
    v19 = (double)v17 * 360.0 / 60.0;
    if (v19 <= 130.0 || v19 > 230.0)
    {
      v20 = *(_QWORD *)a2;
      if (*(_BYTE *)(a2 + 8) == 1)
      {
        v21 = v20 & 1;
      }
      else
      {
        sub_10008D47C(*(_QWORD *)a2, 0);
        swift_retain();
        v30 = static os_log_type_t.fault.getter(v22, v23, v24, v25, v26, v27, v28, v29);
        v31 = static Log.runtimeIssuesLog.getter();
        if (os_log_type_enabled(v31, v30))
        {
          v32 = swift_slowAlloc(12, -1);
          v33 = v12;
          v34 = v8;
          v35 = swift_slowAlloc(32, -1);
          v49[0] = v35;
          *(_DWORD *)v32 = v44.n128_u32[0];
          *(_QWORD *)(v32 + 4) = sub_1000CE1C8(1819242306, 0xE400000000000000, v49);
          _os_log_impl((void *)&_mh_execute_header, v31, v30, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v32, 0xCu);
          swift_arrayDestroy(v35, 1);
          v36 = v35;
          v8 = v34;
          v12 = v33;
          swift_slowDealloc(v36, -1, -1);
          v37 = v32;
          v9 = v45;
          a2 = v46;
          swift_slowDealloc(v37, -1, -1);
        }

        v38 = v47;
        EnvironmentValues.init()();
        swift_getAtKeyPath(v38, v20);
        sub_1000B15F8(v20, 0);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v12);
        sub_1000B15F8(v20, 0);
        v21 = LOBYTE(v49[0]);
      }
      if (v21)
        v16.n128_f64[0] = 8.0;
      else
        v16.n128_f64[0] = 11.0;
      v39 = *a1;
      Path.init(_:)(v50, -1.0, v18, 2.0, v16);
      swift_beginAccess(&unk_100CAED20, v49, 33, 0);
      v40 = sub_100560E80();
      v41 = swift_endAccess(v49);
      static GraphicsContext.Shading.color(_:)(v40, v41);
      v42 = swift_release(v40);
      GraphicsContext.fill(_:with:style:)(v50, v11, 256, v39, v42);
      sub_100154604((uint64_t)v50);
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    ++v17;
    result = GraphicsContext.rotate(by:)(result, 0.104719755);
  }
  while (v17 != 60);
  return result;
}

uint64_t sub_1003F1A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PressureComponentGaugeView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F1A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = sub_1000C4924();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_1000B15F8(*(_QWORD *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v6) == 1)
  {
    v7 = type metadata accessor for ColorSchemeContrast(0);
    sub_10003BC44(v7);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003F1AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PressureComponentGaugeView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F1B34(uint64_t *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000C4924() - 8) + 80);
  return sub_1003F1690(a1, v3 + ((v7 + 16) & ~v7), a2, a3);
}

uint64_t sub_1003F1B84()
{
  return sub_100372A3C(&qword_100BDF800, &qword_100BDF7F8, (void (*)(void))sub_1003F1BB8);
}

uint64_t sub_1003F1BB8()
{
  return sub_100372A3C(&qword_100BDF808, &qword_100BDF7E8, (void (*)(void))sub_1003F1BDC);
}

unint64_t sub_1003F1BDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF810;
  if (!qword_100BDF810)
  {
    v1 = sub_100075EB0(&qword_100BDF7E0);
    sub_10003D310((unint64_t *)&qword_100BDF818, &qword_100BDF7F0, (uint64_t)&protocol conformance descriptor for Canvas<A>);
    sub_10003D310(&qword_100BC3AE0, &qword_100BC3AE8, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF810);
  }
  return result;
}

uint64_t *sub_1003F1C78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 3)
    {
      v12 = *a2;
      if ((~*a2 & 0xF000000000000006) != 0)
      {
        v16 = a2[1];
        v17 = a2[2];
        v18 = a2[3];
        v19 = a2[4];
        v20 = a2[5];
        v21 = a2[6];
        v24 = a2[8];
        v25 = a2[9];
        v26 = a2[10];
        v27 = a2[11];
        v22 = a2[7];
        sub_10019D33C(v12, v16, v17, v18, v19, v20, v21, v22, v24, v25, v26, v27);
        *a1 = v12;
        a1[1] = v16;
        a1[2] = v17;
        a1[3] = v18;
        a1[4] = v19;
        a1[5] = v20;
        a1[6] = v21;
        a1[7] = v22;
        a1[8] = v24;
        a1[9] = v25;
        a1[10] = v26;
        a1[11] = v27;
      }
      else
      {
        memcpy(a1, a2, 0x60uLL);
      }
      v13 = a1;
      v14 = a3;
      v15 = 3;
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for LocationPreviewViewAction(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        v10 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload(a1, v9, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      v13 = a1;
      v14 = a3;
      v15 = 0;
LABEL_14:
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

double sub_1003F1E4C(uint64_t *a1)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1);
  if (EnumCaseMultiPayload == 3)
  {
    if ((~*a1 & 0xF000000000000006) != 0)
      return sub_10019D2B8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for LocationPreviewViewAction(0);
    if (swift_getEnumCaseMultiPayload(a1) == 1)
    {
      v4 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    }
  }
  return result;
}

uint64_t *sub_1003F1EFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
  if (EnumCaseMultiPayload == 3)
  {
    v9 = *a2;
    if ((~*a2 & 0xF000000000000006) != 0)
    {
      v13 = a2[1];
      v14 = a2[2];
      v15 = a2[3];
      v16 = a2[4];
      v17 = a2[5];
      v18 = a2[6];
      v21 = a2[8];
      v22 = a2[9];
      v23 = a2[10];
      v24 = a2[11];
      v19 = a2[7];
      sub_10019D33C(v9, v13, v14, v15, v16, v17, v18, v19, v21, v22, v23, v24);
      *a1 = v9;
      a1[1] = v13;
      a1[2] = v14;
      a1[3] = v15;
      a1[4] = v16;
      a1[5] = v17;
      a1[6] = v18;
      a1[7] = v19;
      a1[8] = v21;
      a1[9] = v22;
      a1[10] = v23;
      a1[11] = v24;
    }
    else
    {
      memcpy(a1, a2, 0x60uLL);
    }
    v10 = a1;
    v11 = a3;
    v12 = 3;
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for LocationPreviewViewAction(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v8 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, v7, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = a1;
    v11 = a3;
    v12 = 0;
LABEL_12:
    swift_storeEnumTagMultiPayload(v10, v11, v12);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t *sub_1003F20A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ModalViewAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2);
    if (EnumCaseMultiPayload == 3)
    {
      v9 = *a2;
      if ((~*a2 & 0xF000000000000006) != 0)
      {
        v13 = a2[1];
        v14 = a2[2];
        v15 = a2[3];
        v16 = a2[4];
        v17 = a2[5];
        v18 = a2[6];
        v21 = a2[8];
        v22 = a2[9];
        v23 = a2[10];
        v24 = a2[11];
        v19 = a2[7];
        sub_10019D33C(v9, v13, v14, v15, v16, v17, v18, v19, v21, v22, v23, v24);
        *a1 = v9;
        a1[1] = v13;
        a1[2] = v14;
        a1[3] = v15;
        a1[4] = v16;
        a1[5] = v17;
        a1[6] = v18;
        a1[7] = v19;
        a1[8] = v21;
        a1[9] = v22;
        a1[10] = v23;
        a1[11] = v24;
      }
      else
      {
        memcpy(a1, a2, 0x60uLL);
      }
      v10 = a1;
      v11 = a3;
      v12 = 3;
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for LocationPreviewViewAction(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        v8 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload(a1, v7, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      v10 = a1;
      v11 = a3;
      v12 = 0;
LABEL_13:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1003F226C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for LocationPreviewViewAction(0);
    if (swift_getEnumCaseMultiPayload(a2) == 1)
    {
      v7 = type metadata accessor for Location(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_1003F233C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1000979AC((uint64_t)a1, type metadata accessor for ModalViewAction);
    if (swift_getEnumCaseMultiPayload(a2))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for LocationPreviewViewAction(0);
      if (swift_getEnumCaseMultiPayload(a2) == 1)
      {
        v7 = type metadata accessor for Location(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload(a1, v6, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1003F2424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = type metadata accessor for LocationPreviewViewAction(0);
  __chkstk_darwin(v1);
  sub_100098728();
  v2 = type metadata accessor for ModalViewAction(0);
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000BA294(&qword_100BDF8D0);
  __chkstk_darwin(v6);
  sub_100098728();
  sub_100084050(v0, v5, type metadata accessor for ModalViewAction);
  v7 = (char *)sub_1003F2528 + 4 * byte_10099D6D8[swift_getEnumCaseMultiPayload(v5)];
  __asm { BR              X10 }
}

uint64_t sub_1003F2528()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  sub_1003F2A94(v5, v3);
  v6 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v6, v0 + 72);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = v4;
  sub_100077A84((_QWORD *)(inited + 48));
  sub_100084050(v3, v8, type metadata accessor for LocationPreviewViewAction);
  v9 = Dictionary.init(dictionaryLiteral:)(inited);
  sub_1000C3A28(0x6E6F697461636F6CLL, 0xEF77656976657250, v9);
  sub_1000979AC(v3, type metadata accessor for LocationPreviewViewAction);
  v1[3] = v2;
  v1[4] = sub_1003F29F4();
  sub_100077A84(v1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 64) + 32))();
}

uint64_t sub_1003F2998(uint64_t a1)
{
  uint64_t v2;

  sub_1003F2AD8(&qword_100BDF8E0, (uint64_t)&unk_10099D760);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_1003F29D0()
{
  sub_1003F2AD8(&qword_100BDF8C8, (uint64_t)&unk_10099D738);
}

unint64_t sub_1003F29F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDF8D8;
  if (!qword_100BDF8D8)
  {
    v1 = sub_100075EB0(&qword_100BDF8D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDF8D8);
  }
  return result;
}

uint64_t sub_1003F2A38()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  if ((~v1 & 0xF000000000000006) != 0)
    sub_10019D2B8(v1, v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1003F2A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationPreviewViewAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003F2AD8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ModalViewAction(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t *sub_1003F2B14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v7))
    {
      v13 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1003F2C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *sub_1003F2CE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_1003F2DF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *sub_1003F2FA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_1003F30B0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t sub_1003F3258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1003F3290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_1003F32CC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x657461446E6F6F6DLL && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657461446E6F6F6DLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x8000000100A00990)
  {
    swift_bridgeObjectRelease(0x8000000100A00990);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x8000000100A00990, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1003F33B8(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0x657461446E6F6F6DLL;
}

uint64_t sub_1003F33F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  char v14;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100BDF988);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100079FBC();
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1003F37E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WeatherDataOverrides.CodingKeys, &type metadata for WeatherDataOverrides.CodingKeys, v10, v8, v9);
  v14 = 0;
  type metadata accessor for Date(0);
  sub_1001196A4(&qword_100BC3578, (uint64_t)&protocol conformance descriptor for Date);
  sub_1000BAC14(v4, (uint64_t)&v14);
  if (!v2)
  {
    v11 = v4 + *(int *)(type metadata accessor for WeatherDataOverrides(0) + 20);
    v13 = 1;
    sub_1000BAC14(v11, (uint64_t)&v13);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
}

uint64_t sub_1003F3510@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;

  v29 = a2;
  v5 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v5);
  v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v31 = (char *)&v25 - v8;
  v32 = sub_1000BA294(&qword_100BDF978);
  __chkstk_darwin(v32);
  v9 = type metadata accessor for WeatherDataOverrides(0);
  __chkstk_darwin(v9);
  sub_100079FBC();
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1003F37E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WeatherDataOverrides.CodingKeys, &type metadata for WeatherDataOverrides.CodingKeys, v12, v10, v11);
  if (v2)
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v27 = v3;
  v28 = a1;
  v26 = v9;
  type metadata accessor for Date(0);
  v34 = 0;
  sub_1001196A4(&qword_100BC3558, (uint64_t)&protocol conformance descriptor for Date);
  v13 = (uint64_t)v31;
  v14 = sub_1000C3A30();
  sub_1000C492C(v14, v15, v16, v17);
  v18 = v27;
  sub_10016C5F4(v13, v27);
  v33 = 1;
  v19 = (uint64_t)v30;
  v20 = sub_1000C3A30();
  sub_1000C492C(v20, v21, v22, v23);
  sub_1000BAC2C();
  sub_10016C5F4(v19, v18 + *(int *)(v26 + 20));
  sub_1003F3824(v18, v29);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  return sub_1003F3868(v18);
}

uint64_t sub_1003F3744()
{
  char *v0;

  return sub_1003F33B8(*v0);
}

uint64_t sub_1003F374C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003F32CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003F3770(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003F37E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003F3798(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003F37E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003F37C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003F3510(a1, a2);
}

uint64_t sub_1003F37D4(_QWORD *a1)
{
  return sub_1003F33F4(a1);
}

unint64_t sub_1003F37E8()
{
  unint64_t result;

  result = qword_100BDF980;
  if (!qword_100BDF980)
  {
    result = swift_getWitnessTable(&unk_10099D8CC, &type metadata for WeatherDataOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF980);
  }
  return result;
}

uint64_t sub_1003F3824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherDataOverrides(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F3868(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherDataOverrides(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for WeatherDataOverrides.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003F38F0 + 4 * byte_10099D795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003F3924 + 4 * byte_10099D790[v4]))();
}

uint64_t sub_1003F3924(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F392C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003F3934);
  return result;
}

uint64_t sub_1003F3940(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003F3948);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003F394C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003F3954(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataOverrides.CodingKeys()
{
  return &type metadata for WeatherDataOverrides.CodingKeys;
}

unint64_t sub_1003F3974()
{
  unint64_t result;

  result = qword_100BDF990;
  if (!qword_100BDF990)
  {
    result = swift_getWitnessTable(&unk_10099D8A4, &type metadata for WeatherDataOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF990);
  }
  return result;
}

unint64_t sub_1003F39B4()
{
  unint64_t result;

  result = qword_100BDF998;
  if (!qword_100BDF998)
  {
    result = swift_getWitnessTable(&unk_10099D814, &type metadata for WeatherDataOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF998);
  }
  return result;
}

unint64_t sub_1003F39F4()
{
  unint64_t result;

  result = qword_100BDF9A0;
  if (!qword_100BDF9A0)
  {
    result = swift_getWitnessTable(&unk_10099D83C, &type metadata for WeatherDataOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100BDF9A0);
  }
  return result;
}

_QWORD *sub_1003F3A30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for MoonPhase.Hemisphere(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v14 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v14);
    v15 = *(int *)(a3 + 24);
    *((_BYTE *)v4 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t sub_1003F3B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v5 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return result;
}

uint64_t sub_1003F3C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for MoonPhase.Hemisphere(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v13 = swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11, v13);
  v14 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1003F3D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  LODWORD(v10) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!(_DWORD)v10)
  {
    v17 = *(_QWORD *)(v15 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1003F3F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v7 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for Date(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1003F400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  LODWORD(v10) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!(_DWORD)v10)
  {
    v17 = *(_QWORD *)(v15 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1003F417C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F4188);
}

void sub_1003F4188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for CalendarDayViewModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 254)
    {
      sub_100079F70();
      return;
    }
    v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    v8 = a1 + *(int *)(a3 + 24);
  }
  sub_1000B250C(v8, a2, v7);
}

uint64_t sub_1003F4224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F4230);
}

void sub_1003F4230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1000CCD14();
  v5 = type metadata accessor for CalendarDayViewModel(v4);
  if (*(_DWORD *)(*(_QWORD *)(v5 - 8) + 84) == v3)
  {
    v6 = v5;
    v7 = v1;
  }
  else
  {
    if (v3 == 254)
    {
      *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
      sub_100079F70();
      return;
    }
    v6 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    v7 = v1 + *(int *)(v2 + 24);
  }
  sub_1000987C4(v7, v0, v0, v6);
}

uint64_t type metadata accessor for CalendarDayCellViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDFA00, (uint64_t)&nominal type descriptor for CalendarDayCellViewModel);
}

void sub_1003F42BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for CalendarDayViewModel(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10099D950;
    sub_10015BB24(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t *sub_1003F4348(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for CalendarDayCellViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
      v11 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for MoonPhase.Hemisphere(0);
      v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain(v9);
      v16 = swift_bridgeObjectRetain(v10);
      v15(v12, v13, v14, v16);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      v17 = *(int *)(v7 + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1003F44F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for CalendarDayCellViewModel(0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v5 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + *(int *)(v2 + 24);
    v7 = type metadata accessor for Date(0);
    result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

_QWORD *sub_1003F45B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for MoonPhase.Hemisphere(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v14 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v14);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v15 = *(int *)(v6 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      v19 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1003F473C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      v10 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 32) = a2[32];
      *(_BYTE *)(a1 + 33) = a2[33];
      *(_BYTE *)(a1 + 34) = a2[34];
      v11 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v12 = a1 + v11;
      v13 = &a2[v11];
      v14 = type metadata accessor for MoonPhase.Hemisphere(0);
      v15 = *(void (**)(uint64_t, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain(v9);
      v16 = swift_bridgeObjectRetain(v10);
      v15(v12, v13, v14, v16);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
      v17 = *(int *)(v6 + 24);
      v18 = (void *)(a1 + v17);
      v19 = &a2[v17];
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v34 = a1;
      v35 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v23 = (void *)a1;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v24 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  v25 = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = a2[32];
  *(_BYTE *)(a1 + 33) = a2[33];
  *(_BYTE *)(a1 + 34) = a2[34];
  v26 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v27 = a1 + v26;
  v28 = &a2[v26];
  v29 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  *(_BYTE *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
  v30 = *(int *)(v6 + 24);
  v31 = a1 + v30;
  a2 += v30;
  v32 = type metadata accessor for Date(0);
  LODWORD(v28) = _s7Weather24LocationCompositionStateOwet_0(v31, 1, v32);
  v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v32);
  if ((_DWORD)v28)
  {
    if (!v33)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, a2, v32);
      v34 = v31;
      v35 = v32;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
      return a1;
    }
  }
  else
  {
    v37 = *(_QWORD *)(v32 - 8);
    if (!v33)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 24))(v31, a2, v32);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v31, v32);
  }
  v22 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v23 = (void *)v31;
LABEL_8:
  memcpy(v23, a2, v22);
  return a1;
}

_OWORD *sub_1003F4A58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v12 = *(int *)(v6 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1003F4BB0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 32) = a2[32];
      *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
      v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v11 = a1 + v10;
      v12 = &a2[v10];
      v13 = type metadata accessor for MoonPhase.Hemisphere(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
      v14 = *(int *)(v6 + 24);
      v15 = (void *)(a1 + v14);
      v16 = &a2[v14];
      v17 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v31 = a1;
      v32 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v20 = (void *)a1;
    goto LABEL_8;
  }
  v21 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = a2[32];
  *(_BYTE *)(a1 + 33) = a2[33];
  *(_BYTE *)(a1 + 34) = a2[34];
  v23 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v24 = a1 + v23;
  v25 = &a2[v23];
  v26 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  *(_BYTE *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
  v27 = *(int *)(v6 + 24);
  v28 = a1 + v27;
  a2 += v27;
  v29 = type metadata accessor for Date(0);
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v29);
  v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v29);
  if ((_DWORD)v25)
  {
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a2, v29);
      v31 = v28;
      v32 = v29;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v32);
      return a1;
    }
  }
  else
  {
    v34 = *(_QWORD *)(v29 - 8);
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 40))(v28, a2, v29);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v28, v29);
  }
  v19 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v20 = (void *)v28;
LABEL_8:
  memcpy(v20, a2, v19);
  return a1;
}

uint64_t sub_1003F4E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F4E74);
}

uint64_t sub_1003F4E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1000C54C8();
  v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1003F4EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F4EC0);
}

uint64_t sub_1003F4EC0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1000C54C8();
  return sub_1000987C4(a1, v5, a3, v6);
}

uint64_t sub_1003F4EFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CalendarDayCellViewModel(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1003F4F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CalendarDayCellViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for CalendarGridCellViewModel(uint64_t a1)
{
  return sub_100098190(a1, (uint64_t *)&unk_100BDFAB0, (uint64_t)&nominal type descriptor for CalendarGridCellViewModel);
}

uint64_t sub_1003F4F78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for CalendarDayCellViewModel(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

uint64_t *sub_1003F4FCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for CalendarDayCellViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = type metadata accessor for CalendarGridCellViewModel(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
      v12 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for MoonPhase.Hemisphere(0);
      v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain(v10);
      v17 = swift_bridgeObjectRetain(v11);
      v16(v13, v14, v15, v17);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      v18 = *(int *)(v7 + 24);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        v22 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v23 = *(int *)(a3 + 20);
    v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)((char *)a1 + v23 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
  }
  return a1;
}

uint64_t sub_1003F51A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for CalendarDayCellViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v6 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + *(int *)(v4 + 24);
    v8 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 20)));
}

_QWORD *sub_1003F5270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = type metadata accessor for CalendarGridCellViewModel(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for MoonPhase.Hemisphere(0);
    v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v8);
    v15 = swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13, v15);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v16 = *(int *)(v6 + 24);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 20);
  v22 = *(_OWORD *)((char *)a2 + v21 + 24);
  *(_OWORD *)((char *)a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  return a1;
}

uint64_t sub_1003F5420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v10 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
      *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
      v11 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v12 = a1 + v11;
      v13 = a2 + v11;
      v14 = type metadata accessor for MoonPhase.Hemisphere(0);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain(v9);
      v16 = swift_bridgeObjectRetain(v10);
      v15(v12, v13, v14, v16);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
      v17 = *(int *)(v6 + 24);
      v18 = (void *)(a1 + v17);
      v19 = (const void *)(a2 + v17);
      v20 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v37 = a1;
      v38 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    v22 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CalendarGridCellViewModel(0) - 8) + 64);
    v23 = (void *)a1;
    v24 = (const void *)a2;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v26 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v27 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
  v31 = *(int *)(v6 + 24);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = type metadata accessor for Date(0);
  v35 = _s7Weather24LocationCompositionStateOwet_0(v32, 1, v34);
  v36 = _s7Weather24LocationCompositionStateOwet_0(v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v37 = v32;
      v38 = v34;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v37, 0, 1, v38);
      goto LABEL_15;
    }
  }
  else
  {
    v40 = *(_QWORD *)(v34 - 8);
    if (!v36)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 24))(v32, v33, v34);
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v32, v34);
  }
  v22 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v23 = (void *)v32;
  v24 = (const void *)v33;
LABEL_8:
  memcpy(v23, v24, v22);
LABEL_15:
  sub_100094D04((_QWORD *)(a1 + *(int *)(a3 + 20)), (_QWORD *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

_OWORD *sub_1003F5758(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = type metadata accessor for CalendarGridCellViewModel(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for MoonPhase.Hemisphere(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  return a1;
}

uint64_t sub_1003F58DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v41;

  v6 = type metadata accessor for CalendarDayCellViewModel(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
      v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = type metadata accessor for MoonPhase.Hemisphere(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
      v14 = *(int *)(v6 + 24);
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      v17 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v34 = a1;
      v35 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000215BC(a1, type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CalendarGridCellViewModel(0) - 8) + 64);
    v20 = (void *)a1;
    v21 = (const void *)a2;
    goto LABEL_8;
  }
  v22 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v24 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for MoonPhase.Hemisphere(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
  v28 = *(int *)(v6 + 24);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for Date(0);
  v32 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v31);
  v33 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v34 = v29;
      v35 = v31;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
      goto LABEL_15;
    }
  }
  else
  {
    v41 = *(_QWORD *)(v31 - 8);
    if (!v33)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40))(v29, v30, v31);
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v29, v31);
  }
  v19 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
  v20 = (void *)v29;
  v21 = (const void *)v30;
LABEL_8:
  memcpy(v20, v21, v19);
LABEL_15:
  v36 = *(int *)(a3 + 20);
  v37 = a1 + v36;
  v38 = a2 + v36;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + v36));
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  return a1;
}

uint64_t sub_1003F5BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F5BD8);
}

void sub_1003F5BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CalendarGridCellViewModel(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1000B250C(a1, a2, v4);
  else
    sub_100079F70();
}

uint64_t sub_1003F5C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F5C50);
}

void sub_1003F5C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1000CCD14();
  v5 = type metadata accessor for CalendarGridCellViewModel(v4);
  if (*(_DWORD *)(*(_QWORD *)(v5 - 8) + 84) == v3)
  {
    sub_1000987C4(v1, v0, v0, v5);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20) + 24) = (v0 - 1);
    sub_100079F70();
  }
}

uint64_t type metadata accessor for CalendarGridCell(uint64_t a1)
{
  return sub_100098190(a1, qword_100BDFB18, (uint64_t)&nominal type descriptor for CalendarGridCell);
}

uint64_t sub_1003F5CBC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CalendarGridCellViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

BOOL sub_1003F5D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;

  v5 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  type metadata accessor for CalendarGridCellViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BDFBD0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100079F58();
  v16 = v2 + *(int *)(v15 + 48);
  sub_100095B78(a1, v2, type metadata accessor for CalendarGridCellViewModel);
  sub_100095B78(a2, v16, type metadata accessor for CalendarGridCellViewModel);
  sub_100088FC8(v2, 1, v5);
  if (!v19)
  {
    sub_100095B78(v2, v13, type metadata accessor for CalendarGridCellViewModel);
    sub_100088FC8(v16, 1, v5);
    if (!v19)
    {
      sub_10007C77C(v16, v9, type metadata accessor for CalendarDayCellViewModel);
      v18 = sub_1003F5EE4(v13, v9);
      sub_1000215BC(v9, type metadata accessor for CalendarDayCellViewModel);
      sub_1000215BC(v13, type metadata accessor for CalendarDayCellViewModel);
      sub_1000215BC(v2, type metadata accessor for CalendarGridCellViewModel);
      return v18;
    }
    sub_1000215BC(v13, type metadata accessor for CalendarDayCellViewModel);
LABEL_9:
    sub_1000B3B00(v17, &qword_100BDFBD0);
    return 0;
  }
  v17 = sub_100088FC8(v16, 1, v5);
  if (!v19)
    goto LABEL_9;
  sub_1000215BC(v2, type metadata accessor for CalendarGridCellViewModel);
  return 1;
}

BOOL sub_1003F5EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v5 = sub_100098778();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_1000BA294(&qword_100BC4978);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100079F58();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v31 - v19;
  if ((sub_100405EF4(a1, a2) & 1) == 0)
    return 0;
  v32 = v6;
  v21 = sub_1000C54C8();
  if (*(unsigned __int8 *)(a1 + *(int *)(v21 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v21 + 20)))
    return 0;
  v22 = v21;
  sub_1000CD58C(a1 + *(int *)(v21 + 24), (uint64_t)v20);
  sub_1000CD58C(a2 + *(int *)(v22 + 24), (uint64_t)v17);
  v23 = v2 + *(int *)(v10 + 48);
  sub_1000CD58C((uint64_t)v20, v2);
  sub_1000CD58C((uint64_t)v17, v23);
  sub_100088FC8(v2, 1, v5);
  if (v25)
  {
    sub_10009E47C((uint64_t)v17);
    sub_10009E47C((uint64_t)v20);
    v24 = sub_100088FC8(v23, 1, v5);
    if (v25)
    {
      sub_1000B3B00(v24, (uint64_t *)&unk_100BD35A0);
      return 1;
    }
    goto LABEL_11;
  }
  sub_10003773C(v2, (uint64_t)v14, (uint64_t *)&unk_100BD35A0);
  sub_100088FC8(v23, 1, v5);
  if (v25)
  {
    sub_10009E47C((uint64_t)v17);
    sub_10009E47C((uint64_t)v20);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v5);
LABEL_11:
    sub_1000B3B00(v24, &qword_100BC4978);
    return 0;
  }
  v26 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v9, v23, v5);
  sub_10000F1C8((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  v28 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v9, v5, v27);
  v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v29(v9, v5);
  sub_10009E47C((uint64_t)v17);
  sub_10009E47C((uint64_t)v20);
  v29((uint64_t)v14, v5);
  sub_10009E47C(v2);
  return (v28 & 1) != 0;
}

uint64_t sub_1003F61B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB3DE0, 1);
}

void sub_1003F61C0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;

  v123 = a1;
  v2 = type metadata accessor for AccessibilityTraits(0);
  v117 = *(_QWORD *)(v2 - 8);
  v118 = (char *)v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v115 = v4;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v111 = v6;
  v7 = type metadata accessor for CalendarGridCell(0);
  v102 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v102 + 64);
  __chkstk_darwin(v7);
  v105 = sub_1000BA294(&qword_100BDFB50);
  v104 = *(_QWORD *)(v105 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100088FDC();
  v103 = v10;
  v11 = sub_1000BA294(&qword_100BDFB58);
  v109 = *(_QWORD *)(v11 - 8);
  v110 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v108 = v13;
  v107 = sub_1000BA294(&qword_100BDFB60);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v106 = v15;
  v121 = sub_1000BA294(&qword_100BDFB68);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v113 = v17;
  v122 = sub_1000BA294(&qword_100BDFB70);
  v116 = *(_QWORD *)(v122 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  v112 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v114 = (char *)&v101 - v21;
  v22 = sub_1000C54C8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v25 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v101 - v27;
  v119 = sub_1000BA294(&qword_100BDFB78);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v120 = v30;
  type metadata accessor for CalendarGridCellViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100098728();
  v34 = v33 - v32;
  sub_100095B78(v1, v33 - v32, v35);
  v36 = sub_100088FC8(v34, 1, v22);
  if (v70)
  {
    v37 = static Color.clear.getter(v36);
    v39 = static Axis.Set.horizontal.getter(v38);
    v40 = v39;
    v41 = static Axis.Set.vertical.getter(v39);
    v42 = Axis.Set.init(rawValue:)(0);
    v43 = Axis.Set.init(rawValue:)(v42);
    if (Axis.Set.init(rawValue:)(v43 & v40) != v40)
      v42 = Axis.Set.init(rawValue:)(v42 | v40);
    v44 = Axis.Set.init(rawValue:)(v42);
    if (Axis.Set.init(rawValue:)(v44 & v41) != v41)
      LOBYTE(v42) = Axis.Set.init(rawValue:)(v42 | v41);
    v45 = v119;
    v46 = v120;
    *v120 = v37;
    *((_BYTE *)v46 + 8) = v42;
    swift_storeEnumTagMultiPayload(v46, v45, 0);
    v47 = sub_1000BA294(&qword_100BDFBB8);
    v48 = sub_1003F7554();
    v49 = sub_100075EB0(&qword_100BDFBA0);
    v50 = sub_1003F74D0();
    sub_10003D2DC(&qword_100BDFBB0, &qword_100BDFBA0);
    v124 = (_QWORD *)v121;
    v125 = v49;
    v126 = v50;
    v127 = v51;
    v52 = sub_1000C6674(v51, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>);
    _ConditionalContent<>.init(storage:)(v46, v47, v122, v48, v52);
  }
  else
  {
    sub_10007C77C(v34, (uint64_t)v28, type metadata accessor for CalendarDayCellViewModel);
    sub_100095B78((uint64_t)v28, (uint64_t)v25, type metadata accessor for CalendarDayCellViewModel);
    sub_100095B78(v1, (uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CalendarGridCell);
    v53 = *(unsigned __int8 *)(v23 + 80);
    v54 = (v53 + 16) & ~v53;
    v55 = *(unsigned __int8 *)(v102 + 80);
    v56 = (v24 + v55 + v54) & ~v55;
    v57 = swift_allocObject(&unk_100B726F0, v56 + v8, v53 | v55 | 7);
    sub_10007C77C((uint64_t)v25, v57 + v54, type metadata accessor for CalendarDayCellViewModel);
    sub_10007C77C((uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v57 + v56, type metadata accessor for CalendarGridCell);
    __chkstk_darwin(v58);
    *(&v101 - 2) = (uint64_t)v28;
    v59 = type metadata accessor for CalendarDayView(0);
    sub_10000F1C8(&qword_100BDFB80, type metadata accessor for CalendarDayView);
    v60 = v103;
    Button.init(action:label:)(sub_1003F6E48, v57, sub_1003F6EA4, &v101 - 4, v59, v61);
    v62 = *(int *)(v22 + 20);
    v63 = v28[32];
    LOBYTE(v124) = v28[v62];
    BYTE1(v124) = v63;
    sub_10003D2DC(&qword_100BDFB88, &qword_100BDFB50);
    v65 = v64;
    v66 = sub_1003F6EC8();
    v67 = v108;
    View.buttonStyle<A>(_:)(&v124, v105, &type metadata for CalendarDayCellButtonStyle, v65, v66);
    sub_100098748(v60, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
    v68 = v111;
    sub_10003773C((uint64_t)&v28[*(int *)(v22 + 24)], v111, (uint64_t *)&unk_100BD35A0);
    v69 = sub_100098778();
    sub_100088FC8(v68, 1, v69);
    if (v70)
      v71 = 1;
    else
      v71 = 0;
    sub_100021A14(v68, (uint64_t *)&unk_100BD35A0);
    KeyPath = swift_getKeyPath(&unk_10099DA60);
    v73 = swift_allocObject(&unk_100B72718, 17, 7);
    *(_BYTE *)(v73 + 16) = v71;
    v74 = v109;
    v75 = v106;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v106, v67, v110);
    v76 = v107;
    v77 = (uint64_t *)(v75 + *(int *)(v107 + 36));
    *v77 = KeyPath;
    v77[1] = (uint64_t)sub_1001545E8;
    v77[2] = v73;
    sub_100098748(v67, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
    if (v28[v62] == 1)
    {
      v78 = sub_1000BA294(&qword_100BD3BF8);
      v79 = v117;
      v80 = swift_allocObject(v78, ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(_QWORD *)(v117 + 72), *(unsigned __int8 *)(v117 + 80) | 7);
      *(_OWORD *)(v80 + 16) = xmmword_10097CA50;
      static AccessibilityTraits.isSelected.getter();
      v124 = (_QWORD *)v80;
      sub_10000F1C8((unint64_t *)&unk_100C0A5F0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
      v81 = sub_1000BA294(&qword_100BD3C00);
      sub_10003D2DC(&qword_100C0A600, &qword_100BD3C00);
      sub_1000C4938(v82);
    }
    else
    {
      v124 = _swiftEmptyArrayStorage;
      sub_10000F1C8((unint64_t *)&unk_100C0A5F0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
      v81 = sub_1000BA294(&qword_100BD3C00);
      sub_10003D2DC(&qword_100C0A600, &qword_100BD3C00);
      sub_1000C4938(v83);
      v79 = v117;
    }
    v84 = sub_1003F73E8();
    v85 = v113;
    View.accessibilityAddTraits(_:)(v74, v76, v84);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v74, v81);
    sub_100021A14(v75, &qword_100BDFB60);
    __chkstk_darwin(v86);
    *(&v101 - 2) = (uint64_t)v28;
    v87 = sub_1000BA294(&qword_100BDFBA0);
    v88 = sub_1003F74D0();
    sub_10003D2DC(&qword_100BDFBB0, &qword_100BDFBA0);
    v90 = v89;
    v91 = v112;
    v92 = (_QWORD *)v121;
    View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1003F74C8, &v101 - 4, v121, v87, v88);
    sub_100021A14(v85, &qword_100BDFB68);
    v118 = v28;
    v93 = v116;
    v94 = v114;
    v95 = v91;
    v96 = v122;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v114, v95, v122);
    v97 = v120;
    (*(void (**)(uint64_t *, char *, uint64_t))(v93 + 16))(v120, v94, v96);
    swift_storeEnumTagMultiPayload(v97, v119, 1);
    v98 = sub_1000BA294(&qword_100BDFBB8);
    v99 = sub_1003F7554();
    v124 = v92;
    v125 = v87;
    v126 = v88;
    v127 = v90;
    v100 = sub_1000C6674(v99, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>);
    _ConditionalContent<>.init(storage:)(v97, v98, v96, v99, v100);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v96);
    sub_1000215BC((uint64_t)v118, type metadata accessor for CalendarDayCellViewModel);
  }
}

void sub_1003F6A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_10003773C(a1 + *(int *)(v11 + 24), (uint64_t)v6, (uint64_t *)&unk_100BD35A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_100021A14((uint64_t)v6, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = type metadata accessor for CalendarGridCell(0);
    sub_1000DB418((_QWORD *)(a2 + *(int *)(v12 + 20)), *(_QWORD *)(a2 + *(int *)(v12 + 20) + 24));
    sub_10082F18C((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

double sub_1003F6BCC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  double result;
  _QWORD v20[2];

  v4 = *((unsigned __int8 *)a1 + 34);
  if ((_DWORD)v4 == 8)
  {
    v5 = 0;
  }
  else
  {
    v6 = type metadata accessor for CalendarDayViewModel(0);
    v7 = MoonPhase.symbolName(for:)((char *)a1 + *(int *)(v6 + 36), v4);
    v5 = Image.init(systemName:)(v7, v8);
  }
  v9 = *a1;
  v10 = a1[1];
  v20[0] = v9;
  v20[1] = v10;
  v11 = sub_100114EF8();
  swift_bridgeObjectRetain(v10);
  v12 = Text.init<A>(_:)(v20, &type metadata for String, v11);
  v14 = v13;
  v16 = v15;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v12;
  v18 = v17 & 1;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v17 & 1;
  *(_QWORD *)(a2 + 32) = v15;
  swift_retain();
  sub_1000D55D4(v12, v14, v18);
  swift_bridgeObjectRetain(v16);
  sub_1000D31B4(v12, v14, v18);
  swift_release(v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1003F6CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for CalendarDayCellViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for CalendarGridCell(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v21 = *(_QWORD *)(v7 + 64);
  v22 = v6;
  v10 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for CalendarDayViewModel(0);
  v12 = v0 + v4 + *(int *)(v11 + 36);
  v13 = type metadata accessor for MoonPhase.Hemisphere(0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = v10 + *(int *)(v1 + 24);
  v16 = sub_100098778();
  if (!sub_1000B4560(v15))
    sub_100098748(v15, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8));
  v17 = v0 + v9;
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v9, 1, v1))
  {
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v14)(v17 + *(int *)(v11 + 36), v13, v18);
    v19 = v17 + *(int *)(v1 + 24);
    if (!sub_1000B4560(v19))
      sub_100098748(v19, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8));
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v17 + *(int *)(v22 + 20)));
  return swift_deallocObject(v0, v9 + v21, v3 | v8 | 7);
}

void sub_1003F6E48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_1000C54C8() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CalendarGridCell(0) - 8) + 80);
  sub_1003F6A8C(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

void sub_1003F6EA4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100095B78(*(_QWORD *)(v1 + 16), a1, type metadata accessor for CalendarDayViewModel);
}

unint64_t sub_1003F6EC8()
{
  unint64_t result;

  result = qword_100BDFB90;
  if (!qword_100BDFB90)
  {
    result = swift_getWitnessTable(&unk_10099DAAC, &type metadata for CalendarDayCellButtonStyle);
    atomic_store(result, (unint64_t *)&qword_100BDFB90);
  }
  return result;
}

uint64_t sub_1003F6F04@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  _OWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;

  v57 = a1;
  v65 = a2;
  v64 = a1 & 1;
  v56 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v56);
  v55 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1000BA294(&qword_100BDFBE8);
  __chkstk_darwin(v63);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BDFBF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1000BA294(&qword_100BDFBF8);
  __chkstk_darwin(v58);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BDFC00);
  __chkstk_darwin(v59);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1000BA294(&qword_100BDFC08);
  __chkstk_darwin(v60);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1000BA294(&qword_100BDFC10);
  __chkstk_darwin(v62);
  v61 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = ButtonStyleConfiguration.label.getter(v19);
  if ((ButtonStyleConfiguration.isPressed.getter(v20) & 1) != 0)
    v21 = 0.4;
  else
    v21 = 1.0;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  *(double *)&v11[*(int *)(v9 + 36)] = v21;
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23 = v55;
  v22(v8, v5);
  v24 = (char *)v23 + *(int *)(v56 + 20);
  v25 = enum case for RoundedCornerStyle.continuous(_:);
  v26 = type metadata accessor for RoundedCornerStyle(0);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  v28 = v57;
  __asm { FMOV            V0.2D, #6.0 }
  *v23 = _Q0;
  if ((v28 & 1) != 0)
  {
    if ((v28 & 0x100) != 0)
    {
      v37 = static Color.cyan.getter(v27);
      v36 = Color.opacity(_:)(0.25);
      swift_release(v37);
      goto LABEL_10;
    }
    v35 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    v34 = Color.init(_:)(v35);
  }
  else
  {
    v34 = static Color.clear.getter(v27);
  }
  v36 = v34;
LABEL_10:
  sub_100095B78((uint64_t)v23, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v38 = v63;
  *(_QWORD *)&v4[*(int *)(v63 + 52)] = v36;
  *(_WORD *)&v4[*(int *)(v38 + 56)] = 256;
  sub_1000215BC((uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = static Alignment.center.getter(v39);
  v42 = v41;
  v43 = (uint64_t)&v13[*(int *)(v58 + 36)];
  sub_10003773C((uint64_t)v4, v43, &qword_100BDFBE8);
  v44 = (uint64_t *)(v43 + *(int *)(sub_1000BA294(&qword_100BDFC18) + 36));
  *v44 = v40;
  v44[1] = v42;
  sub_10003773C((uint64_t)v11, (uint64_t)v13, &qword_100BDFBF0);
  sub_100021A14((uint64_t)v4, &qword_100BDFBE8);
  sub_100021A14((uint64_t)v11, &qword_100BDFBF0);
  sub_10003773C((uint64_t)v13, (uint64_t)v15, &qword_100BDFBF8);
  v15[*(int *)(v59 + 36)] = 0;
  sub_100021A14((uint64_t)v13, &qword_100BDFBF8);
  v46 = static Animation.default.getter(v45);
  v47 = ButtonStyleConfiguration.isPressed.getter(v46);
  sub_10003773C((uint64_t)v15, (uint64_t)v17, &qword_100BDFC00);
  v48 = &v17[*(int *)(v60 + 36)];
  *(_QWORD *)v48 = v46;
  v48[8] = v47 & 1;
  sub_100021A14((uint64_t)v15, &qword_100BDFC00);
  v50 = static Animation.default.getter(v49);
  v51 = v61;
  sub_10003773C((uint64_t)v17, v61, &qword_100BDFC08);
  v52 = v51 + *(int *)(v62 + 36);
  *(_QWORD *)v52 = v50;
  *(_BYTE *)(v52 + 8) = v64;
  sub_100021A14((uint64_t)v17, &qword_100BDFC08);
  return sub_1003F7850(v51, v65);
}

uint64_t sub_1003F73B4@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  int v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return sub_1003F6F04(v2 | *v1, a1);
}

uint64_t sub_1003F73D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1003F73E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_100BDFB98;
  if (!qword_100BDFB98)
  {
    v1 = sub_100075EB0(&qword_100BDFB60);
    v2 = sub_100075EB0(&qword_100BDFB50);
    sub_10003D2DC(&qword_100BDFB88, &qword_100BDFB50);
    v4[0] = v2;
    v4[1] = &type metadata for CalendarDayCellButtonStyle;
    v4[2] = v3;
    v4[3] = sub_1003F6EC8();
    swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10003D2DC(&qword_100BC6718, &qword_100BC6720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFB98);
  }
  return result;
}

double sub_1003F74C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003F6BCC(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_1003F74D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFBA8;
  if (!qword_100BDFBA8)
  {
    v1 = sub_100075EB0(&qword_100BDFB68);
    sub_1003F73E8();
    sub_10000F1C8((unint64_t *)&qword_100BC4E48, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFBA8);
  }
  return result;
}

unint64_t sub_1003F7554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFBC0;
  if (!qword_100BDFBC0)
  {
    v1 = sub_100075EB0(&qword_100BDFBB8);
    sub_1003F75C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFBC0);
  }
  return result;
}

unint64_t sub_1003F75C0()
{
  unint64_t result;

  result = qword_100BDFBC8;
  if (!qword_100BDFBC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _GridUnsizedAxesModifier, &type metadata for _GridUnsizedAxesModifier);
    atomic_store(result, (unint64_t *)&qword_100BDFBC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsViewState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CalendarDayCellButtonStyle(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003F76E4 + 4 * byte_10099D925[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1003F7718 + 4 * byte_10099D920[v4]))();
}

uint64_t sub_1003F7718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1003F7720(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1003F7728);
  return result;
}

uint64_t sub_1003F7734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1003F773CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003F7740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1003F7748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalendarDayCellButtonStyle()
{
  return &type metadata for CalendarDayCellButtonStyle;
}

unint64_t sub_1003F7768()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  result = qword_100BDFBD8;
  if (!qword_100BDFBD8)
  {
    v1 = sub_100075EB0(&qword_100BDFBE0);
    sub_1003F7554();
    v2 = sub_100075EB0(&qword_100BDFB68);
    v3 = sub_100075EB0(&qword_100BDFBA0);
    v4 = sub_1003F74D0();
    sub_10003D2DC(&qword_100BDFBB0, &qword_100BDFBA0);
    v6[0] = v2;
    v6[1] = v3;
    v6[2] = v4;
    v6[3] = v5;
    swift_getOpaqueTypeConformance2(v6, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFBD8);
  }
  return result;
}

uint64_t sub_1003F7840(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100AB3E08, 1);
}

uint64_t sub_1003F7850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDFC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003F789C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFC20;
  if (!qword_100BDFC20)
  {
    v1 = sub_100075EB0(&qword_100BDFC10);
    sub_1003F7920();
    sub_10003D2DC(&qword_100BDFC68, &qword_100BDFC70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFC20);
  }
  return result;
}

unint64_t sub_1003F7920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFC28;
  if (!qword_100BDFC28)
  {
    v1 = sub_100075EB0(&qword_100BDFC08);
    sub_1003F79A4();
    sub_10003D2DC(&qword_100BDFC68, &qword_100BDFC70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFC28);
  }
  return result;
}

unint64_t sub_1003F79A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFC30;
  if (!qword_100BDFC30)
  {
    v1 = sub_100075EB0(&qword_100BDFC00);
    sub_1003F7A28();
    sub_10003D2DC(&qword_100BDFC58, &qword_100BDFC60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFC30);
  }
  return result;
}

unint64_t sub_1003F7A28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFC38;
  if (!qword_100BDFC38)
  {
    v1 = sub_100075EB0(&qword_100BDFBF8);
    sub_1003F7AAC();
    sub_10003D2DC(&qword_100BDFC50, &qword_100BDFC18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFC38);
  }
  return result;
}

unint64_t sub_1003F7AAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDFC40;
  if (!qword_100BDFC40)
  {
    v1 = sub_100075EB0(&qword_100BDFBF0);
    sub_10000F1C8(&qword_100BDFC48, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDFC40);
  }
  return result;
}

uint64_t sub_1003F7B30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_QWORD);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, _QWORD *);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (**v129)();
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  void (*v151)(char *, _QWORD, uint64_t);
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  void (*v170)(char *, _QWORD, uint64_t);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(char *, _QWORD, uint64_t);
  char *v190;
  uint64_t v191;
  void (*v192)(char *, _QWORD, uint64_t);
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(char *, _QWORD, uint64_t);
  char *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(char *, uint64_t, uint64_t);
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  char *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  void (*v291)(char *, uint64_t, uint64_t);
  char *v292;
  void (*v293)(char *, _QWORD, uint64_t);
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  _QWORD *v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  void (*v317)(char *, uint64_t, uint64_t);
  uint64_t v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  void (*v326)(char *, _QWORD, uint64_t);
  char *v327;
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t active;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  _QWORD *v339;
  _QWORD *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  void (*v376)(char *, uint64_t, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  void (*v388)(char *, _QWORD, uint64_t);
  uint64_t v389;
  char *v390;
  uint64_t v391;
  _QWORD *v392;
  uint64_t v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  _QWORD *v403;
  uint64_t v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  void (*v409)(char *, _QWORD, uint64_t);
  char *v410;
  void (*v411)(char *, _QWORD, uint64_t);
  char *v412;
  char *v413;
  char *v414;
  uint64_t v415;
  _QWORD *v416;
  uint64_t v417;
  _QWORD *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  char *v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  _QWORD *v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  void (*v441)(char *, _QWORD, uint64_t);
  uint64_t v442;
  char *v443;
  _QWORD *v444;
  uint64_t v445;
  void (*v446)(char *, _QWORD, uint64_t);
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  __n128 v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  _QWORD *v457;
  uint64_t v458;
  uint64_t v459;
  __n128 v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  void (*v464)(char *, _QWORD, uint64_t);
  char *v465;
  char *v466;
  _QWORD *v467;
  uint64_t v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  __n128 v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  uint64_t v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  __n128 v481;
  uint64_t v482;
  uint64_t v483;
  void (*v484)(char *, _QWORD, uint64_t);
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  _QWORD *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  __n128 v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  _QWORD *v503;
  uint64_t v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  void (*v508)(char *, _QWORD, uint64_t);
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  __n128 v512;
  uint64_t v513;
  uint64_t v514;
  char *v515;
  uint64_t v516;
  _QWORD *v517;
  uint64_t v518;
  char *v519;
  _QWORD *v520;
  _QWORD *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  uint64_t v528;
  void (*v529)(char *, uint64_t, uint64_t);
  char *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  char *v534;
  _QWORD *v535;
  uint64_t v536;
  char *v537;
  uint64_t v538;
  void (*v539)(char *, _QWORD, uint64_t);
  uint64_t v540;
  char *v541;
  _QWORD *v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  void (*v548)(char *, uint64_t, uint64_t);
  char *v549;
  char *v550;
  uint64_t v551;
  uint64_t v552;
  _QWORD *v553;
  uint64_t v554;
  _QWORD *v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  _QWORD *v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  __n128 v569;
  uint64_t v570;
  uint64_t v571;
  char *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  _QWORD *v577;
  uint64_t v578;
  char *v579;
  uint64_t v580;
  __n128 v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  _QWORD *v587;
  uint64_t v588;
  char *v589;
  _QWORD *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  __n128 v598;
  uint64_t v599;
  uint64_t v600;
  char *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  _QWORD *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  __n128 v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  uint64_t v614;
  uint64_t v615;
  void (*v616)(char *, uint64_t, uint64_t);
  char *v617;
  uint64_t v618;
  uint64_t v619;
  _QWORD *v620;
  uint64_t v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  __n128 v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char *v629;
  uint64_t v630;
  void (*v631)(char *, uint64_t, uint64_t);
  char *v632;
  char *v633;
  uint64_t v634;
  _QWORD *v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  __n128 v639;
  uint64_t v640;
  uint64_t v641;
  void (*v642)(_QWORD, _QWORD, _QWORD);
  uint64_t v643;
  _QWORD *v644;
  uint64_t v645;
  _QWORD *v646;
  uint64_t v647;
  void (*v648)(char *, _QWORD, uint64_t);
  _QWORD *v649;
  uint64_t v650;
  uint64_t v651;
  char *v652;
  uint64_t v653;
  uint64_t v654;
  __n128 v655;
  uint64_t v656;
  uint64_t v657;
  char *v658;
  void (*v659)(char *, _QWORD, uint64_t);
  char *v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  void (*v666)(char *, _QWORD, uint64_t);
  uint64_t v667;
  __n128 v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  __n128 v677;
  uint64_t v678;
  uint64_t v679;
  char *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  __n128 v685;
  uint64_t v686;
  uint64_t v687;
  char *v688;
  uint64_t v689;
  char *v690;
  uint64_t v691;
  _QWORD *v692;
  uint64_t v693;
  char *v694;
  _QWORD *v695;
  uint64_t v696;
  char *v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  __n128 v703;
  uint64_t v704;
  uint64_t v705;
  char *v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  _QWORD *v710;
  uint64_t v711;
  uint64_t v712;
  __n128 v713;
  uint64_t v714;
  uint64_t v715;
  void (*v716)(char *, _QWORD, uint64_t);
  char *v717;
  void (*v718)(char *, uint64_t, uint64_t);
  _QWORD *v719;
  uint64_t v720;
  char *v721;
  uint64_t v722;
  uint64_t v723;
  __n128 v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  char *v728;
  uint64_t v729;
  uint64_t v730;
  __n128 v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  char *v735;
  uint64_t v736;
  uint64_t v737;
  __n128 v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  char *v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  __n128 v746;
  uint64_t v747;
  uint64_t v748;
  char *v749;
  char *v750;
  uint64_t v751;
  uint64_t v752;
  char *v753;
  uint64_t v754;
  __n128 v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  __n128 v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  char *v767;
  uint64_t v768;
  char *v769;
  uint64_t v770;
  uint64_t v771;
  __n128 v772;
  uint64_t v773;
  uint64_t v774;
  void (*v775)(char *, _QWORD, uint64_t);
  uint64_t v776;
  char *v777;
  uint64_t v778;
  uint64_t v779;
  __n128 v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  __n128 v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  char *v790;
  char *v791;
  uint64_t v792;
  uint64_t v793;
  __n128 v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  __n128 v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  char *v805;
  uint64_t v806;
  uint64_t v807;
  __n128 v808;
  uint64_t v809;
  uint64_t v810;
  char *v811;
  void (*v812)(char *);
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  __n128 v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  _QWORD *v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  __n128 v827;
  uint64_t v828;
  uint64_t v829;
  char *v830;
  uint64_t v831;
  void (*v832)(char *, uint64_t, uint64_t);
  uint64_t v833;
  char *v834;
  uint64_t v835;
  uint64_t v836;
  __n128 v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  _QWORD *v841;
  void (*v842)(char *, uint64_t, uint64_t);
  uint64_t v843;
  uint64_t v844;
  __n128 v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  char *v849;
  uint64_t v850;
  uint64_t v851;
  __n128 v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  void (*v857)(char *, uint64_t, uint64_t);
  uint64_t v858;
  uint64_t v859;
  __n128 v860;
  uint64_t v861;
  uint64_t v862;
  char *v863;
  char *v864;
  uint64_t v865;
  _QWORD *v866;
  uint64_t v867;
  _QWORD *v868;
  _QWORD *v869;
  uint64_t v870;
  uint64_t v871;
  char *v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  __n128 v877;
  uint64_t v878;
  uint64_t v879;
  char *v880;
  uint64_t v881;
  uint64_t v882;
  _QWORD *v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  __n128 v889;
  uint64_t v890;
  uint64_t v891;
  char *v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  __n128 v898;
  uint64_t v899;
  uint64_t v900;
  char *v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  __n128 v907;
  uint64_t v908;
  uint64_t v909;
  char *v910;
  uint64_t v911;
  uint64_t v912;
  void (*v913)(char *, uint64_t, uint64_t);
  char *v914;
  uint64_t v915;
  char *v916;
  uint64_t v917;
  _QWORD *v918;
  uint64_t v919;
  char *v920;
  uint64_t v921;
  __n128 v922;
  uint64_t v923;
  uint64_t v924;
  char *v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  void (*v929)(char *, uint64_t, uint64_t);
  uint64_t v930;
  _QWORD *v931;
  uint64_t v932;
  uint64_t refreshed;
  uint64_t v934;
  uint64_t v935;
  _QWORD *v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  __n128 v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  char *v948;
  uint64_t v949;
  _QWORD *v950;
  uint64_t v951;
  char *v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  __n128 v961;
  uint64_t v962;
  uint64_t v963;
  char *v964;
  char *v965;
  uint64_t v966;
  _QWORD *v967;
  uint64_t v968;
  char *v969;
  uint64_t v970;
  uint64_t v971;
  __n128 v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  char *v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  __n128 v984;
  uint64_t v985;
  uint64_t v986;
  char *v987;
  uint64_t v988;
  uint64_t v989;
  char *v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  __n128 v994;
  uint64_t v995;
  uint64_t v996;
  char *v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  _QWORD *v1001;
  uint64_t v1002;
  uint64_t v1003;
  _QWORD *v1004;
  uint64_t v1005;
  uint64_t v1006;
  char *v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  void (*v1013)(_QWORD *, _QWORD, uint64_t);
  uint64_t v1014;
  uint64_t v1015;
  void (*v1016)(_QWORD *, _QWORD, uint64_t);
  uint64_t v1017;
  uint64_t v1018;
  char *v1019;
  uint64_t v1020;
  uint64_t HourZoom;
  void (*v1022)(_QWORD *, _QWORD, uint64_t);
  uint64_t v1023;
  _QWORD *v1024;
  uint64_t v1025;
  char *v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  void (*v1030)(_QWORD *, _QWORD, uint64_t);
  uint64_t v1031;
  char *v1032;
  uint64_t v1033;
  uint64_t IsRainingZoom;
  uint64_t v1035;
  uint64_t v1036;
  void (*v1037)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1038;
  uint64_t v1039;
  char *v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  _QWORD *v1046;
  uint64_t v1047;
  char *v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  void (*v1053)(_QWORD *, _QWORD, uint64_t);
  uint64_t v1054;
  void (*v1055)(_QWORD *, uint64_t, uint64_t);
  char *v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  __n128 v1067;
  uint64_t v1068;
  uint64_t v1069;
  char *v1070;
  uint64_t v1071;
  char *v1072;
  uint64_t v1073;
  void (*v1074)(char *, uint64_t, uint64_t);
  uint64_t v1075;
  uint64_t v1076;
  _QWORD *v1077;
  uint64_t v1078;
  char *v1079;
  uint64_t v1080;
  __n128 v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  void (*v1085)(char *, uint64_t, uint64_t);
  uint64_t v1086;
  _QWORD *v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  __n128 v1093;
  uint64_t v1094;
  uint64_t v1095;
  char *v1096;
  uint64_t v1097;
  _QWORD *v1098;
  uint64_t v1099;
  char *v1100;
  uint64_t v1101;
  uint64_t v1102;
  __n128 v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  char *v1112;
  _QWORD *v1113;
  uint64_t v1114;
  uint64_t v1115;
  char *v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  char *v1126;
  _QWORD *v1127;
  uint64_t v1128;
  char *v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  char *v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  char *v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  char *v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  char *v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  char *v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  char *v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  uint64_t v1163;
  char *v1164;
  uint64_t v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  char *v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  char *v1174;
  uint64_t v1175;
  uint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  char *v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  char *v1184;
  uint64_t v1185;
  uint64_t v1186;
  _QWORD *v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  _QWORD *v1200;
  _QWORD *v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  char *v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  _QWORD *v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  __n128 v1221;
  uint64_t v1222;
  uint64_t v1223;
  char *v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  _QWORD *v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  char *v1234;
  unint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t Hour;
  char *v1239;
  char *v1240;
  uint64_t v1241;
  _QWORD *v1242;
  uint64_t v1243;
  char *v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  __n128 v1249;
  uint64_t v1250;
  uint64_t v1251;
  char *v1252;
  uint64_t v1253;
  uint64_t v1254;
  _QWORD *v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  __n128 v1259;
  uint64_t v1260;
  uint64_t v1261;
  uint64_t v1262;
  uint64_t v1263;
  _QWORD *v1264;
  _QWORD *v1265;
  uint64_t v1266;
  uint64_t v1267;
  __n128 v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  _QWORD *v1272;
  uint64_t v1273;
  uint64_t v1274;
  __n128 v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  _QWORD *v1279;
  uint64_t v1280;
  uint64_t v1281;
  __n128 v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  _QWORD *v1287;
  _QWORD *v1288;
  uint64_t v1289;
  _QWORD *v1290;
  uint64_t v1291;
  uint64_t v1292;
  _QWORD *v1293;
  uint64_t v1294;
  __n128 v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  _QWORD *v1299;
  uint64_t v1300;
  uint64_t v1301;
  __n128 v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  _QWORD *v1309;
  _QWORD *v1310;
  _QWORD *v1311;
  uint64_t v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  char *v1317;
  char *v1318;
  uint64_t v1319;
  _QWORD *v1320;
  uint64_t v1321;
  char *v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  char *v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  void (*v1332)(char *, uint64_t, uint64_t);
  char *v1333;
  uint64_t v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  uint64_t v1339;
  uint64_t v1340;
  uint64_t v1341;
  char *v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  char *v1347;
  uint64_t v1348;
  uint64_t v1349;
  _QWORD *v1350;
  _QWORD *v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  char *v1355;
  uint64_t v1356;
  uint64_t v1357;
  void (*v1358)(char *, uint64_t, uint64_t);
  char *v1359;
  char *v1360;
  char *v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  char *v1365;
  _QWORD *v1366;
  uint64_t v1367;
  uint64_t v1368;
  char *v1369;
  _QWORD *v1370;
  _QWORD *v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  void (*v1375)(char *, uint64_t, uint64_t);
  uint64_t v1376;
  uint64_t v1377;
  void (*v1378)(char *, uint64_t, uint64_t);
  uint64_t v1379;
  uint64_t v1380;
  _QWORD *v1381;
  uint64_t v1382;
  char *v1383;
  uint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  char *v1387;
  _QWORD *v1388;
  uint64_t v1389;
  uint64_t v1390;
  __n128 v1391;
  uint64_t v1392;
  uint64_t v1393;
  char *v1394;
  uint64_t v1395;
  void (*v1396)(char *, uint64_t, uint64_t);
  uint64_t v1397;
  uint64_t v1398;
  void (*v1399)(char *, uint64_t, uint64_t);
  uint64_t v1400;
  char *v1401;
  uint64_t v1402;
  uint64_t v1403;
  _QWORD *v1404;
  _QWORD *v1405;
  _QWORD *v1406;
  uint64_t v1407;
  uint64_t v1408;
  char *v1409;
  void (*v1410)(char *, _QWORD, uint64_t);
  _QWORD *v1411;
  uint64_t v1412;
  uint64_t v1413;
  char *v1414;
  uint64_t v1415;
  void (*v1416)(char *, _QWORD, uint64_t);
  uint64_t v1417;
  uint64_t v1418;
  uint64_t v1419;
  __n128 v1420;
  uint64_t v1421;
  uint64_t v1422;
  char *v1423;
  uint64_t v1424;
  _QWORD *v1425;
  uint64_t v1426;
  char *v1427;
  uint64_t v1428;
  uint64_t v1429;
  __n128 v1430;
  uint64_t v1431;
  uint64_t v1432;
  void (*v1433)(char *, _QWORD, uint64_t);
  char *v1434;
  uint64_t v1435;
  _QWORD *v1436;
  uint64_t v1437;
  char *v1438;
  uint64_t v1439;
  uint64_t v1440;
  __n128 v1441;
  uint64_t v1442;
  uint64_t v1443;
  char *v1444;
  uint64_t v1445;
  _QWORD *v1446;
  uint64_t v1447;
  char *v1448;
  uint64_t v1449;
  uint64_t v1450;
  __n128 v1451;
  uint64_t v1452;
  uint64_t v1453;
  uint64_t v1454;
  uint64_t v1455;
  char *v1456;
  uint64_t v1457;
  uint64_t v1458;
  _QWORD *v1459;
  uint64_t v1460;
  char *v1461;
  uint64_t v1462;
  uint64_t v1463;
  _QWORD *v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  __n128 v1469;
  uint64_t v1470;
  uint64_t v1471;
  char *v1472;
  char *v1473;
  void (*v1474)(char *, _QWORD, uint64_t);
  _QWORD *v1475;
  uint64_t v1476;
  char *v1477;
  uint64_t v1478;
  uint64_t v1479;
  __n128 v1480;
  uint64_t v1481;
  uint64_t v1482;
  uint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  __n128 v1486;
  uint64_t v1487;
  uint64_t v1488;
  uint64_t v1489;
  _QWORD *v1490;
  uint64_t v1491;
  uint64_t v1492;
  uint64_t v1493;
  __n128 v1494;
  uint64_t v1495;
  uint64_t v1496;
  uint64_t v1497;
  uint64_t v1498;
  uint64_t v1499;
  __n128 v1500;
  uint64_t v1501;
  uint64_t v1502;
  uint64_t v1503;
  uint64_t v1504;
  char *v1505;
  uint64_t v1506;
  uint64_t v1507;
  __n128 v1508;
  uint64_t v1509;
  uint64_t v1510;
  uint64_t v1511;
  char *v1512;
  uint64_t v1513;
  _QWORD *v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t v1517;
  uint64_t v1518;
  __n128 v1519;
  uint64_t v1520;
  uint64_t v1521;
  char *v1522;
  uint64_t v1523;
  void (*v1524)(char *, _QWORD, uint64_t);
  char *v1525;
  _QWORD *v1526;
  uint64_t v1527;
  char *v1528;
  uint64_t v1529;
  uint64_t v1530;
  __n128 v1531;
  uint64_t v1532;
  uint64_t v1533;
  char *v1534;
  char *v1535;
  uint64_t v1536;
  char *v1537;
  uint64_t v1538;
  uint64_t v1539;
  __n128 v1540;
  uint64_t v1541;
  uint64_t v1542;
  char *v1543;
  char *v1544;
  uint64_t v1545;
  char *v1546;
  uint64_t v1547;
  uint64_t v1548;
  uint64_t v1549;
  uint64_t v1550;
  __n128 v1551;
  uint64_t v1552;
  uint64_t v1553;
  char *v1554;
  char *v1555;
  uint64_t v1556;
  _QWORD *v1557;
  uint64_t v1558;
  char *v1559;
  uint64_t v1560;
  uint64_t v1561;
  __n128 v1562;
  uint64_t v1563;
  uint64_t v1564;
  char *v1565;
  char *v1566;
  uint64_t v1567;
  _QWORD *v1568;
  uint64_t v1569;
  char *v1570;
  void (*v1571)(char *, _QWORD, uint64_t);
  uint64_t v1572;
  uint64_t v1573;
  __n128 v1574;
  uint64_t v1575;
  uint64_t v1576;
  char *v1577;
  char *v1578;
  _QWORD *v1579;
  uint64_t v1580;
  char *v1581;
  _QWORD *v1582;
  uint64_t v1583;
  uint64_t v1584;
  uint64_t v1585;
  uint64_t v1586;
  __n128 v1587;
  uint64_t v1588;
  uint64_t v1589;
  char *v1590;
  uint64_t v1591;
  char *v1592;
  uint64_t v1593;
  char *v1594;
  uint64_t v1595;
  uint64_t v1596;
  uint64_t v1597;
  uint64_t v1598;
  uint64_t v1599;
  __n128 v1600;
  uint64_t v1601;
  uint64_t v1602;
  char *v1603;
  uint64_t v1604;
  uint64_t v1605;
  char *v1606;
  uint64_t v1607;
  uint64_t v1608;
  _QWORD *v1609;
  uint64_t v1610;
  char *v1611;
  uint64_t v1612;
  __n128 v1613;
  uint64_t v1614;
  uint64_t v1615;
  void (*v1616)(char *, _QWORD, uint64_t);
  char *v1617;
  uint64_t v1618;
  void (*v1619)(char *, _QWORD, uint64_t);
  char *v1620;
  char *v1621;
  char *v1622;
  uint64_t v1623;
  _QWORD *v1624;
  uint64_t v1625;
  uint64_t v1626;
  uint64_t v1627;
  __n128 v1628;
  uint64_t v1629;
  uint64_t v1630;
  char *v1631;
  char *v1632;
  uint64_t v1633;
  uint64_t v1634;
  uint64_t v1635;
  _QWORD *v1636;
  uint64_t v1637;
  char *v1638;
  uint64_t v1639;
  uint64_t v1640;
  __n128 v1641;
  uint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  void (*v1645)(char *, _QWORD, uint64_t);
  char *v1646;
  char *v1647;
  uint64_t v1648;
  uint64_t v1649;
  void (*v1650)(char *, _QWORD, uint64_t);
  char *v1651;
  _QWORD *v1652;
  uint64_t v1653;
  char *v1654;
  uint64_t v1655;
  __n128 v1656;
  uint64_t v1657;
  uint64_t v1658;
  char *v1659;
  uint64_t v1660;
  char *v1661;
  uint64_t v1662;
  char *v1663;
  uint64_t v1664;
  _QWORD *v1665;
  uint64_t v1666;
  _QWORD *v1667;
  uint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  __n128 v1671;
  uint64_t v1672;
  uint64_t v1673;
  char *v1674;
  uint64_t v1675;
  uint64_t v1676;
  void (*v1677)(char *, _QWORD, uint64_t);
  char *v1678;
  uint64_t v1679;
  uint64_t v1680;
  _QWORD *v1681;
  uint64_t v1682;
  char *v1683;
  uint64_t v1684;
  __n128 v1685;
  uint64_t v1686;
  uint64_t v1687;
  char *v1688;
  uint64_t v1689;
  void (*v1690)(char *, _QWORD, uint64_t);
  char *v1691;
  char *v1692;
  char *v1693;
  uint64_t v1694;
  _QWORD *v1695;
  uint64_t v1696;
  char *v1697;
  uint64_t v1698;
  uint64_t v1699;
  __n128 v1700;
  uint64_t v1701;
  uint64_t v1702;
  char *v1703;
  char *v1704;
  uint64_t v1705;
  uint64_t v1706;
  uint64_t v1707;
  _QWORD *v1708;
  uint64_t v1709;
  uint64_t v1710;
  __n128 v1711;
  uint64_t v1712;
  uint64_t v1713;
  char *v1714;
  uint64_t v1715;
  void (*v1716)(char *, uint64_t, uint64_t);
  char *v1717;
  void (*v1718)(char *, _QWORD, uint64_t);
  uint64_t v1719;
  _QWORD *v1720;
  uint64_t v1721;
  uint64_t v1722;
  __n128 v1723;
  uint64_t v1724;
  uint64_t v1725;
  uint64_t v1726;
  uint64_t v1727;
  _QWORD *v1728;
  uint64_t v1729;
  uint64_t v1730;
  uint64_t v1731;
  uint64_t v1732;
  uint64_t v1733;
  __n128 v1734;
  uint64_t v1735;
  uint64_t v1736;
  char *v1737;
  uint64_t v1738;
  uint64_t v1739;
  uint64_t v1740;
  uint64_t v1741;
  uint64_t v1742;
  __n128 v1743;
  uint64_t v1744;
  uint64_t v1745;
  char *v1746;
  uint64_t v1747;
  uint64_t v1748;
  uint64_t v1749;
  void (*v1750)(char *, _QWORD, uint64_t);
  uint64_t v1751;
  uint64_t v1752;
  _QWORD *v1753;
  uint64_t v1754;
  char *v1755;
  uint64_t v1756;
  uint64_t v1757;
  __n128 v1758;
  uint64_t v1759;
  uint64_t v1760;
  char *v1761;
  uint64_t v1762;
  uint64_t v1763;
  void (*v1764)(char *, uint64_t, uint64_t);
  char *v1765;
  void (*v1766)(char *, _QWORD, uint64_t);
  char *v1767;
  uint64_t v1768;
  _QWORD *v1769;
  uint64_t v1770;
  uint64_t v1771;
  __n128 v1772;
  uint64_t v1773;
  uint64_t v1774;
  char *v1775;
  char *v1776;
  uint64_t v1777;
  char *v1778;
  uint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  _QWORD *v1782;
  uint64_t v1783;
  uint64_t v1784;
  uint64_t v1785;
  __n128 v1786;
  uint64_t v1787;
  uint64_t v1788;
  char *v1789;
  char *v1790;
  void (*v1791)(char *, _QWORD, uint64_t);
  char *v1792;
  uint64_t v1793;
  void (*v1794)(char *, _QWORD, uint64_t);
  uint64_t v1795;
  _QWORD *v1796;
  uint64_t v1797;
  char *v1798;
  uint64_t v1799;
  __n128 v1800;
  uint64_t v1801;
  uint64_t v1802;
  char *v1803;
  uint64_t v1804;
  char *v1805;
  _QWORD *v1806;
  uint64_t v1807;
  char *v1808;
  uint64_t v1809;
  uint64_t v1810;
  __n128 v1811;
  uint64_t v1812;
  uint64_t v1813;
  uint64_t v1814;
  uint64_t v1815;
  _QWORD *v1816;
  uint64_t v1817;
  uint64_t v1818;
  char *v1819;
  uint64_t v1820;
  void (*v1821)(char *, uint64_t, uint64_t);
  _QWORD *v1822;
  uint64_t v1823;
  uint64_t v1824;
  char *v1825;
  uint64_t v1826;
  uint64_t v1827;
  char *v1828;
  _QWORD *v1829;
  char *v1830;
  char *v1831;
  uint64_t v1832;
  uint64_t v1833;
  uint64_t v1834;
  __n128 v1835;
  uint64_t v1836;
  char *v1837;
  uint64_t v1838;
  _QWORD *v1839;
  unint64_t v1840;
  char *v1841;
  __int128 v1842;
  uint64_t v1843;
  uint64_t v1844;
  uint64_t v1845;
  uint64_t v1846;
  char *v1847;
  char *v1848;
  uint64_t v1849;
  uint64_t v1850;
  _QWORD *v1851;
  _QWORD *v1852;
  char *v1853;
  unint64_t v1854;
  uint64_t v1855;
  unint64_t v1856;
  _QWORD *v1857;
  char *v1858;
  _QWORD *v1859;
  __int128 v1860;
  uint64_t v1861;
  uint64_t v1862;
  char *v1863;
  uint64_t v1864;
  uint64_t v1865;
  unint64_t v1866;
  uint64_t v1867;
  _QWORD *v1868;
  uint64_t v1869;
  uint64_t v1870;
  char *v1871;
  uint64_t v1872;
  uint64_t v1873;
  char *v1874;
  uint64_t v1875;
  char *v1876;
  uint64_t v1877;
  uint64_t v1878;
  uint64_t v1879;
  char *v1880;
  uint64_t v1881;
  uint64_t v1882;
  char *v1883;
  uint64_t *v1884;
  uint64_t v1885;
  uint64_t v1886;
  uint64_t v1887;
  uint64_t v1888;
  uint64_t v1889;
  uint64_t v1890;
  uint64_t v1891;
  char *v1892;
  uint64_t v1893;
  char *v1894;
  uint64_t *v1895;
  uint64_t v1896;
  uint64_t v1897;
  void (*v1898)(char *, uint64_t, uint64_t);
  char *v1899;
  char *v1900;
  _QWORD *v1901;
  uint64_t v1902;
  uint64_t v1903;
  _QWORD *v1904;
  char *v1905;
  char *v1906;
  uint64_t v1907;
  __int128 v1908;
  uint64_t v1909;
  _QWORD *v1910;
  uint64_t v1911;
  _QWORD *v1912;
  uint64_t v1913;
  __int128 v1914;
  char *v1915;
  uint64_t v1916;
  char *v1917;
  uint64_t v1918;
  uint64_t v1919;
  __int128 v1920;
  uint64_t v1921;
  __int128 v1922;
  _QWORD *v1923;
  _QWORD *v1924;
  char *v1925;
  _QWORD *v1926;
  _QWORD *v1927;
  __int128 v1928;
  uint64_t v1929;
  uint64_t v1930;
  uint64_t v1931;
  _QWORD *v1932;
  char *v1933;
  uint64_t v1934;
  __int128 v1935;
  char *v1936;
  uint64_t v1937;
  char *v1938;
  _QWORD *v1939;
  uint64_t v1940;
  uint64_t v1941;
  uint64_t v1942;
  unsigned int v1943;
  void (*v1944)(_QWORD);
  char *v1945;
  uint64_t v1946;
  uint64_t v1947;
  uint64_t v1948;
  __int128 v1949;
  uint64_t v1950;
  uint64_t v1951;
  uint64_t v1952;

  v1884 = a2;
  v1882 = sub_1000BA294(&qword_100BDFD30);
  v1881 = *(_QWORD *)(v1882 - 8);
  __chkstk_darwin(v1882);
  v1883 = (char *)&v1836 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1879 = sub_1000BA294(&qword_100BDFD38);
  v1878 = *(_QWORD *)(v1879 - 8);
  __chkstk_darwin(v1879);
  v1880 = (char *)&v1836 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1877 = sub_1000BA294(&qword_100BDFD40);
  v1875 = *(_QWORD *)(v1877 - 8);
  __chkstk_darwin(v1877);
  v1876 = (char *)&v1836 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1873 = sub_1000BA294(&qword_100BDFD48);
  v1872 = *(_QWORD *)(v1873 - 8);
  __chkstk_darwin(v1873);
  v1874 = (char *)&v1836 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1870 = sub_1000BA294(&qword_100BDFD50);
  v1869 = *(_QWORD *)(v1870 - 8);
  __chkstk_darwin(v1870);
  v1871 = (char *)&v1836 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1916 = sub_1000BA294(&qword_100BDFD58);
  v1907 = *(_QWORD *)(v1916 - 8);
  __chkstk_darwin(v1916);
  v9 = (char *)&v1836 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1909 = sub_1000BA294(&qword_100BDFD60);
  v1893 = *(_QWORD *)(v1909 - 8);
  __chkstk_darwin(v1909);
  v1868 = (uint64_t *)((char *)&v1836 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1901 = (_QWORD *)sub_1000BA294(&qword_100BDFD68);
  v1885 = *(v1901 - 1);
  __chkstk_darwin(v1901);
  v1905 = (char *)&v1836 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1867 = sub_1000BA294(&qword_100BDFD70);
  v1866 = *(_QWORD *)(v1867 - 8);
  __chkstk_darwin(v1867);
  v1904 = (uint64_t *)((char *)&v1836 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1865 = sub_1000BA294(&qword_100BDFD78);
  v1864 = *(_QWORD *)(v1865 - 8);
  __chkstk_darwin(v1865);
  v1906 = (char *)&v1836 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1862 = sub_1000BA294(&qword_100BDFD80);
  v1861 = *(_QWORD *)(v1862 - 8);
  __chkstk_darwin(v1862);
  v1863 = (char *)&v1836 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1860 = sub_1000BA294(&qword_100BDFD88);
  v1859 = *(_QWORD **)(v1860 - 8);
  __chkstk_darwin(v1860);
  v1894 = (char *)&v1836 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1857 = (_QWORD *)sub_1000BA294(&qword_100BDFD90);
  v1856 = *(v1857 - 1);
  __chkstk_darwin(v1857);
  v1858 = (char *)&v1836 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1886 = sub_1000BA294(&qword_100BDFD98);
  v1855 = *(_QWORD *)(v1886 - 8);
  __chkstk_darwin(v1886);
  v18 = (char *)&v1836 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1927 = (_QWORD *)sub_1000BA294(&qword_100BDFDA0);
  v1910 = (_QWORD *)*(v1927 - 1);
  __chkstk_darwin(v1927);
  v1915 = (char *)&v1836 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1853 = (char *)sub_1000BA294(&qword_100BDFDA8);
  v1852 = (_QWORD *)*((_QWORD *)v1853 - 1);
  __chkstk_darwin(v1853);
  v1854 = (unint64_t)&v1836 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1850 = type metadata accessor for PrivacyConfiguration(0);
  v1849 = *(_QWORD *)(v1850 - 8);
  __chkstk_darwin(v1850);
  v1848 = (char *)&v1836 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1924 = (_QWORD *)type metadata accessor for DebugModel(0);
  v1851 = (_QWORD *)*(v1924 - 1);
  __chkstk_darwin(v1924);
  v1895 = (uint64_t *)((char *)&v1836 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1923 = (_QWORD *)sub_1000BA294(&qword_100BDFDB0);
  v1846 = *(v1923 - 1);
  __chkstk_darwin(v1923);
  v1847 = (char *)&v1836 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100BDFDB8);
  v1946 = *(_QWORD *)(v24 - 8);
  v1947 = v24;
  __chkstk_darwin(v24);
  v1938 = (char *)&v1836 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1939 = (_QWORD *)sub_1000BA294(&qword_100BDFDC0);
  *(_QWORD *)&v1935 = *(v1939 - 1);
  __chkstk_darwin(v1939);
  v1945 = (char *)&v1836 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1932 = (_QWORD *)sub_1000BA294(&qword_100BDFDC8);
  *(_QWORD *)&v1928 = *(v1932 - 1);
  __chkstk_darwin(v1932);
  v1933 = (char *)&v1836 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1921 = sub_1000BA294(&qword_100BDFDD0);
  v1926 = *(_QWORD **)(v1921 - 8);
  __chkstk_darwin(v1921);
  *(_QWORD *)&v1922 = (char *)&v1836 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1941 = type metadata accessor for ChangeBehavior(0);
  v1944 = *(void (**)(_QWORD))(v1941 - 8);
  __chkstk_darwin(v1941);
  v1936 = (char *)&v1836 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1903 = sub_1000BA294(&qword_100BDFDD8);
  v1948 = *(_QWORD *)(v1903 - 8);
  __chkstk_darwin(v1903);
  v31 = (char *)&v1836 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1919 = sub_1000BA294(&qword_100BDFDE0);
  v1918 = *(_QWORD *)(v1919 - 8);
  __chkstk_darwin(v1919);
  v1925 = (char *)&v1836 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for AppConfiguration(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v1836 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1[3];
  v38 = a1[4];
  sub_1000DB418(a1, v37);
  v39 = sub_1000BA294(&qword_100BCF678);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v39, v39, v37, v38);
  v41 = v1951;
  if (!v1951)
  {
    __break(1u);
    goto LABEL_175;
  }
  v42 = v1952;
  sub_1000DB418(&v1950, v1951);
  v1892 = v36;
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v41, v42);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v1950);
  v43 = a1[3];
  v44 = a1[4];
  sub_1000DB418(a1, v43);
  v45 = type metadata accessor for AppSessionManager(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v45, v45, v43, v44);
  v1891 = result;
  if (!result)
  {
LABEL_175:
    __break(1u);
    return result;
  }
  v46 = sub_1000BA294(&qword_100BCB640);
  v47 = swift_allocObject(v46, 72, 7);
  *(_OWORD *)(v47 + 16) = xmmword_10099DAF0;
  if (qword_100BC22C8 != -1)
    swift_once(&qword_100BC22C8, sub_1005E691C);
  v1899 = v31;
  v1844 = v34;
  v48 = type metadata accessor for FeatureFlag(0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = swift_retain();
  *(_QWORD *)(v47 + 32) = FeatureFlag.init(_:label:)(v49);
  static Settings.Features.homeAndWork.getter();
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  *(_QWORD *)(v47 + 40) = FeatureFlag.init(_:label:)(v50);
  if (qword_100BC22D0 != -1)
    swift_once(&qword_100BC22D0, sub_1005E6944);
  v1841 = v18;
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v51 = swift_retain();
  *(_QWORD *)(v47 + 48) = FeatureFlag.init(_:label:)(v51);
  v52 = static Settings.Daemon.enableFlatbuffers.getter();
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  *(_QWORD *)(v47 + 56) = FeatureFlag.init(_:label:invertValue:)(v52, 0xD000000000000013, 0x8000000100A009F0, 1);
  v53 = static Settings.Daemon.enableStatisticsFlatbuffers.getter();
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v54 = FeatureFlag.init(_:label:invertValue:)(v53, 0xD00000000000001ELL, 0x8000000100A00A10, 0);
  *(_QWORD *)(v47 + 64) = v54;
  v1950 = v47;
  specialized Array._endMutation()(v54);
  v55 = v1950;
  v56 = type metadata accessor for FeatureFlags(0);
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v1890 = FeatureFlags.init(_:)(v55);
  v57 = swift_allocObject(v46, 40, 7);
  v1949 = xmmword_1009898A0;
  *(_OWORD *)(v57 + 16) = xmmword_1009898A0;
  if (qword_100BC22E0 != -1)
    swift_once(&qword_100BC22E0, sub_10015A528);
  v1845 = v33;
  v1900 = v9;
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v58 = swift_retain();
  v59 = FeatureFlag.init(_:label:)(v58);
  *(_QWORD *)(v57 + 32) = v59;
  v1950 = v57;
  specialized Array._endMutation()(v59);
  v60 = v1950;
  swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  v1889 = FeatureFlags.init(_:)(v60);
  v61 = sub_1000BA294(&qword_100BDFD20);
  v1930 = v61;
  v62 = *(_QWORD *)(type metadata accessor for Group(0) - 8);
  v1929 = *(_QWORD *)(v62 + 72);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v1896 = 3 * v1929;
  v64 = (v63 + 32) & ~v63;
  v1931 = v64;
  v1934 = v63 | 7;
  v1902 = v64 + 3 * v1929;
  v65 = swift_allocObject(v61, v1902, v63 | 7);
  v1920 = xmmword_10098B610;
  *(_OWORD *)(v65 + 16) = xmmword_10098B610;
  v1843 = v65;
  v1888 = v65 + v64;
  v1937 = sub_1000BA294(&qword_100BDFD28);
  v66 = swift_allocObject(v1937, 232, 7);
  v1908 = xmmword_1009891E0;
  *(_OWORD *)(v66 + 16) = xmmword_1009891E0;
  v67 = sub_1000BA294(&qword_100BDFDE8);
  v68 = static Settings.WeatherEnvironment.contentEnvironment.getter();
  v69 = swift_allocObject(v46, 40, 7);
  v1942 = v46;
  v70 = v69;
  *(_OWORD *)(v69 + 16) = v1949;
  v71 = type metadata accessor for SettingAction(0);
  v72 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v70 + 32) = v72;
  v1950 = v70;
  specialized Array._endMutation()(v72);
  v73 = v1950;
  v74 = enum case for Item.ResetBehavior.reset<A>(_:);
  v75 = v1925;
  (*(void (**)(char *, _QWORD, uint64_t))(v1918 + 104))(v1925, enum case for Item.ResetBehavior.reset<A>(_:), v1919);
  v76 = sub_1004039B4();
  v77 = Item<>.init(_:label:resetBehavior:actions:)(v68, 0xD000000000000013, 0x8000000100A00A50, v75, v73, v76);
  *(_QWORD *)(v66 + 56) = v67;
  *(_QWORD *)(v66 + 64) = sub_100403A2C(&qword_100BDFDF8, &qword_100BDFDE8);
  *(_QWORD *)(v66 + 32) = v77;
  v78 = sub_1000BA294(&qword_100BDFE00);
  v79 = static Settings.WeatherEnvironment.localServerURL.getter();
  v80 = v1899;
  v1898 = *(void (**)(char *, uint64_t, uint64_t))(v1948 + 104);
  v1898(v1899, v74, v1903);
  v1917 = (char *)0xD000000000000011;
  v81 = Item<>.init(_:label:resetBehavior:actions:)(v79, 0xD000000000000011, 0x8000000100A00A70, v80, _swiftEmptyArrayStorage);
  v1887 = v78;
  *(_QWORD *)(v66 + 96) = v78;
  v1897 = sub_100403A2C(&qword_100BDFE08, &qword_100BDFE00);
  *(_QWORD *)(v66 + 104) = v1897;
  *(_QWORD *)(v66 + 72) = v81;
  v82 = sub_1000BA294(&qword_100BDFE10);
  v83 = static Settings.WeatherEnvironment.localServerPort.getter();
  v84 = (void (*)(_QWORD))*((_QWORD *)v1944 + 13);
  v85 = v1936;
  LODWORD(v1948) = enum case for ChangeBehavior.default(_:);
  v1944 = v84;
  v84(v1936);
  v86 = v1922;
  v1912 = (_QWORD *)v1926[13];
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v74, v1921);
  v87 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v83, 0xD000000000000011, 0x8000000100A00A90, v85, v86, _swiftEmptyArrayStorage);
  v1913 = v82;
  *(_QWORD *)(v66 + 136) = v82;
  v1911 = sub_100403A2C(&qword_100BDFE18, &qword_100BDFE10);
  *(_QWORD *)(v66 + 144) = v1911;
  *(_QWORD *)(v66 + 112) = v87;
  v88 = sub_1000BA294(&qword_100BDFE20);
  v89 = static Settings.WeatherEnvironment.apsEnvironment.getter();
  v90 = v1933;
  (*(void (**)(char *, uint64_t, _QWORD *))(v1928 + 104))(v1933, v74, v1932);
  v91 = sub_100051B90(&qword_100BDFE28, (uint64_t (*)(uint64_t))&type metadata accessor for APSEnvironment, (uint64_t)&protocol conformance descriptor for APSEnvironment);
  v92 = Item<>.init(_:label:resetBehavior:actions:)(v89, 0xD000000000000010, 0x8000000100A00AB0, v90, _swiftEmptyArrayStorage, v91);
  *(_QWORD *)(v66 + 176) = v88;
  *(_QWORD *)(v66 + 184) = sub_100403A2C(&qword_100BDFE30, &qword_100BDFE20);
  *(_QWORD *)(v66 + 152) = v92;
  v93 = sub_1000BA294(&qword_100BDFE38);
  v94 = static Settings.Container.testSuite.getter();
  v95 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v95 + 16) = v1949;
  v1940 = v71;
  v96 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v95 + 32) = v96;
  v1950 = v95;
  specialized Array._endMutation()(v96);
  v97 = v1950;
  v98 = *(void (**)(char *, uint64_t, _QWORD *))(v1935 + 104);
  v99 = v1945;
  v1943 = v74;
  v98(v1945, v74, v1939);
  v100 = sub_100051B90(&qword_100BDFE40, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Container.TestSuite, (uint64_t)&protocol conformance descriptor for Settings.Container.TestSuite);
  v101 = Item<>.init(_:label:resetBehavior:actions:)(v94, 0xD000000000000015, 0x8000000100A00AD0, v99, v97, v100);
  *(_QWORD *)(v66 + 216) = v93;
  *(_QWORD *)(v66 + 224) = sub_100403A2C(&qword_100BDFE48, &qword_100BDFE38);
  *(_QWORD *)(v66 + 192) = v101;
  v102 = v1888;
  Group.init(title:footer:_:)(0x6D6E6F7269766E45, 0xEC00000073746E65, 0, 0, v66);
  v103 = v1929;
  v1945 = (char *)(v102 + v1929);
  v104 = swift_allocObject(v1937, 192, 7);
  v1914 = xmmword_1009891D0;
  *(_OWORD *)(v104 + 16) = xmmword_1009891D0;
  v1918 = 0xD00000000000001CLL;
  FeatureFlags.enableAllItem(title:)();
  v105 = (char *)(v1931 + v103);
  v106 = v1930;
  v107 = v1934;
  v108 = swift_allocObject(v1930, v1931 + v103, v1934);
  v1935 = xmmword_10097CA50;
  *(_OWORD *)(v108 + 16) = xmmword_10097CA50;
  v109 = FeatureFlags.items.getter();
  Group.init(title:footer:_:)(0x676E696D6F637055, 0xE800000000000000, 0, 0, v109);
  v110 = type metadata accessor for Page(0);
  *(_QWORD *)(v104 + 96) = v110;
  *(_QWORD *)(v104 + 104) = &protocol witness table for Page;
  sub_10005F164((_QWORD *)(v104 + 72));
  Page.init(title:_:)(v1917, 0x8000000100A00B10, v108);
  v111 = swift_allocObject(v106, v105, v107);
  *(_OWORD *)(v111 + 16) = v1935;
  v112 = FeatureFlags.items.getter();
  Group.init(title:footer:_:)(0x7365727574616546, 0xE800000000000000, 0, 0, v112);
  v1933 = (char *)v110;
  *(_QWORD *)(v104 + 136) = v110;
  *(_QWORD *)(v104 + 144) = &protocol witness table for Page;
  sub_10005F164((_QWORD *)(v104 + 112));
  Page.init(title:_:)(0x6165462074736150, 0xED00007365727574, v111);
  v1939 = (_QWORD *)(v104 + 152);
  v1925 = v105;
  v113 = swift_allocObject(v106, v105, v107);
  *(_OWORD *)(v113 + 16) = v1935;
  v114 = swift_allocObject(v1937, 112, 7);
  v1928 = xmmword_10097DA20;
  *(_OWORD *)(v114 + 16) = xmmword_10097DA20;
  if (qword_100BC2218 != -1)
    swift_once(&qword_100BC2218, sub_10001075C);
  v115 = qword_100CAED98;
  v116 = swift_allocObject(v1942, 48, 7);
  *(_OWORD *)(v116 + 16) = xmmword_1009890E0;
  swift_allocObject(v1940, *(unsigned int *)(v1940 + 48), *(unsigned __int16 *)(v1940 + 52));
  swift_retain();
  *(_QWORD *)(v116 + 32) = SettingAction.init(_:_:)(0xD000000000000010, 0x8000000100A00B30, sub_1004036E0, 0);
  v117 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v116 + 40) = v117;
  v1950 = v116;
  specialized Array._endMutation()(v117);
  v118 = v1950;
  v119 = v1899;
  v1898(v1899, v1943, v1903);
  v120 = v118;
  v121 = v1887;
  v122 = Item<>.init(_:label:resetBehavior:actions:)(v115, 0x20746E6572727543, 0xEE00746573657250, v119, v120);
  v123 = v1897;
  *(_QWORD *)(v114 + 56) = v121;
  *(_QWORD *)(v114 + 64) = v123;
  *(_QWORD *)(v114 + 32) = v122;
  v124 = type metadata accessor for DemoPresetSaveWeatherMainStateButton(0);
  *(_QWORD *)(v114 + 96) = v124;
  *(_QWORD *)(v114 + 104) = sub_100051B90(&qword_100BDFE50, type metadata accessor for DemoPresetSaveWeatherMainStateButton, (uint64_t)&unk_10099ED08);
  v125 = sub_10005F164((_QWORD *)(v114 + 72));
  v1840 = 0xD000000000000027;
  *v125 = 0xD000000000000027;
  v125[1] = 0x8000000100A00B50;
  *((_BYTE *)v125 + 16) = 1;
  v126 = (char *)v125 + *(int *)(v124 + 24);
  v127 = sub_1000BA294(&qword_100BDFE58);
  v128 = *(int *)(v127 + 48);
  v129 = (void (**)())&v126[*(int *)(v127 + 64)];
  v130 = enum case for SettingCellStyle.ButtonStyle.default(_:);
  v131 = type metadata accessor for SettingCellStyle.ButtonStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 104))(v126, v130, v131);
  *(_QWORD *)&v126[v128] = _swiftEmptyArrayStorage;
  *v129 = sub_1004174F4;
  v129[1] = 0;
  v132 = enum case for SettingCellStyle.button(_:);
  v133 = type metadata accessor for SettingCellStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 104))(v126, v132, v133);
  Group.init(title:footer:_:)(0, 0, 0, 0, v114);
  *(_QWORD *)(v104 + 176) = v1933;
  *(_QWORD *)(v104 + 184) = &protocol witness table for Page;
  sub_10005F164(v1939);
  Page.init(title:_:)(0x657250206F6D6544, 0xEC00000073746573, v113);
  Group.init(title:footer:_:)(0x7365727574616546, 0xE800000000000000, 0, 0, v104);
  v134 = v1929;
  v1919 = 2 * v1929;
  v135 = v1937;
  v136 = swift_allocObject(v1937, 912, 7);
  *(_OWORD *)(v136 + 16) = xmmword_10099DB00;
  v1932 = (_QWORD *)v136;
  v1839 = (_QWORD *)(v136 + 32);
  v137 = v1931;
  v138 = swift_allocObject(v1930, v1931 + 8 * v134, v1934);
  v1842 = xmmword_10098BCC0;
  *(_OWORD *)(v138 + 16) = xmmword_10098BCC0;
  v1838 = v138;
  v1926 = (_QWORD *)(v138 + v137);
  v139 = swift_allocObject(v135, 392, 7);
  *(_OWORD *)(v139 + 16) = xmmword_10098E040;
  v140 = static Settings.WeatherAnalytics.Debugging.sessionName.getter(v139);
  v141 = v1943;
  v1898(v119, v1943, v1903);
  v142 = Item<>.init(_:label:resetBehavior:actions:)(v140, 0x206E6F6973736553, 0xEC000000656D614ELL, v119, _swiftEmptyArrayStorage);
  v143 = v1897;
  *(_QWORD *)(v139 + 56) = v121;
  *(_QWORD *)(v139 + 64) = v143;
  *(_QWORD *)(v139 + 32) = v142;
  v144 = (_QWORD *)sub_1000BA294(&qword_100BDFE60);
  v145 = static Settings.WeatherAnalytics.Debugging.batchDebugging.getter();
  v146 = v1942;
  v147 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v147 + 16) = v1949;
  v148 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v147 + 32) = v148;
  v1950 = v147;
  specialized Array._endMutation()(v148);
  v149 = v1950;
  v150 = v1936;
  v151 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v1946 = *(_QWORD *)(v1946 + 104);
  v152 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v141, v1947);
  v1939 = v144;
  v153 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v145, 0x6544206863746142, 0xEF676E6967677562, v150, v152, v149);
  *(_QWORD *)(v139 + 96) = v144;
  v1945 = (char *)sub_100403A2C(&qword_100BDFE68, &qword_100BDFE60);
  *(_QWORD *)(v139 + 104) = v1945;
  *(_QWORD *)(v139 + 72) = v153;
  v1837 = (char *)static Settings.WeatherAnalytics.Debugging.batchSize.getter();
  v154 = swift_allocObject(v146, 40, 7);
  *(_OWORD *)(v154 + 16) = v1949;
  v155 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v154 + 32) = v155;
  v1950 = v154;
  specialized Array._endMutation()(v155);
  v156 = v1950;
  v157 = v1948;
  v151(v150, v1948, v1941);
  v158 = v1922;
  v159 = v141;
  v160 = v1921;
  v161 = v1912;
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v159, v1921);
  v162 = v1913;
  v163 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1837, 0x6953206863746142, 0xEA0000000000657ALL, v150, v158, v156);
  v164 = v1911;
  *(_QWORD *)(v139 + 136) = v162;
  *(_QWORD *)(v139 + 144) = v164;
  *(_QWORD *)(v139 + 112) = v163;
  v1837 = (char *)static Settings.WeatherAnalytics.Debugging.maxUploadRetryCount.getter();
  v165 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v165 + 16) = v1949;
  v166 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v165 + 32) = v166;
  v1950 = v165;
  specialized Array._endMutation()(v166);
  v167 = v1950;
  v168 = v150;
  v169 = v150;
  v170 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v169, v157, v1941);
  ((void (*)(uint64_t, _QWORD, uint64_t))v161)(v158, v1943, v160);
  v171 = v168;
  v172 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1837, 0xD000000000000016, 0x8000000100A00B80, v168, v158, v167);
  *(_QWORD *)(v139 + 176) = v162;
  *(_QWORD *)(v139 + 184) = v164;
  *(_QWORD *)(v139 + 152) = v172;
  v1837 = (char *)static Settings.WeatherAnalytics.Debugging.disableAnalytics.getter();
  v173 = v1942;
  v174 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v174 + 16) = v1949;
  v175 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v174 + 32) = v175;
  v1950 = v174;
  specialized Array._endMutation()(v175);
  v176 = v1950;
  v177 = v1948;
  v178 = v1941;
  v170(v171, v1948, v1941);
  v179 = v1938;
  v180 = v1943;
  v181 = v1947;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v182 = v176;
  v183 = v1939;
  v184 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1837, v1917, 0x8000000100A00BA0, v171, v179, v182);
  v185 = v1945;
  *(_QWORD *)(v139 + 216) = v183;
  *(_QWORD *)(v139 + 224) = v185;
  *(_QWORD *)(v139 + 192) = v184;
  v1917 = (char *)static Settings.WeatherAnalytics.Debugging.disableWidgetAnalytics.getter();
  v186 = swift_allocObject(v173, 40, 7);
  *(_OWORD *)(v186 + 16) = v1949;
  v187 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v186 + 32) = v187;
  v1950 = v186;
  specialized Array._endMutation()(v187);
  v188 = v1950;
  v189 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v171, v177, v178);
  v190 = v1938;
  v191 = v181;
  v192 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v180, v181);
  v193 = v188;
  v194 = v1939;
  v195 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1917, 0xD000000000000018, 0x8000000100A00BC0, v171, v190, v193);
  v196 = v1945;
  *(_QWORD *)(v139 + 256) = v194;
  *(_QWORD *)(v139 + 264) = v196;
  *(_QWORD *)(v139 + 232) = v195;
  v1917 = (char *)static Settings.AppConfig.disableNetworkTelemetry.getter();
  v197 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v197 + 16) = v1949;
  v198 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v197 + 32) = v198;
  v1950 = v197;
  specialized Array._endMutation()(v198);
  v199 = v1950;
  v200 = v1941;
  v189(v171, v1948, v1941);
  v192(v190, v1943, v191);
  v201 = v171;
  v202 = v171;
  v203 = v190;
  v204 = v199;
  v205 = v1939;
  v206 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1917, v1918, 0x8000000100A00BE0, v201, v190, v204);
  *(_QWORD *)(v139 + 296) = v205;
  *(_QWORD *)(v139 + 304) = v196;
  *(_QWORD *)(v139 + 272) = v206;
  v1917 = (char *)static Settings.WeatherAnalytics.Debugging.sendAppSessionStartAndEventsForNonDnuUsers.getter();
  v207 = v1942;
  v208 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v208 + 16) = v1949;
  v209 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v208 + 32) = v209;
  v1950 = v208;
  specialized Array._endMutation()(v209);
  v210 = v1950;
  v211 = v200;
  v212 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v202, v1948, v200);
  v213 = v203;
  v214 = v203;
  v215 = v1943;
  v216 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v214, v1943, v1947);
  v217 = v210;
  v218 = v1939;
  v219 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1917, 0xD000000000000032, 0x8000000100A00C00, v202, v213, v217);
  v220 = v1945;
  *(_QWORD *)(v139 + 336) = v218;
  *(_QWORD *)(v139 + 344) = v220;
  *(_QWORD *)(v139 + 312) = v219;
  v1837 = (char *)static Settings.WeatherAnalytics.Debugging.forceSendCDNServer.getter();
  v221 = swift_allocObject(v207, 40, 7);
  *(_OWORD *)(v221 + 16) = v1949;
  v222 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v221 + 32) = v222;
  v1950 = v221;
  specialized Array._endMutation()(v222);
  v223 = v1950;
  v212(v202, v1948, v211);
  v224 = v1938;
  v216(v1938, v215, v1947);
  v1917 = (char *)0xD000000000000014;
  v225 = v223;
  v226 = v1939;
  v227 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1837, 0xD000000000000014, 0x8000000100A00C40, v202, v224, v225);
  v228 = v1945;
  *(_QWORD *)(v139 + 376) = v226;
  *(_QWORD *)(v139 + 384) = v228;
  *(_QWORD *)(v139 + 352) = v227;
  v229 = v1926;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0, 0, v139);
  v230 = v1929;
  v1837 = (char *)v229 + v1929;
  v231 = v1937;
  v232 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v232 + 16) = v1935;
  v233 = sub_1000BA294(&qword_100BDFE70);
  v234 = static Settings.WeatherAnalytics.Location.samplingRate.getter();
  v235 = v1942;
  v236 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v236 + 16) = v1949;
  v237 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v236 + 32) = v237;
  v1950 = v236;
  specialized Array._endMutation()(v237);
  v238 = v1950;
  v1846 = *(_QWORD *)(v1846 + 104);
  v239 = v1847;
  ((void (*)(char *, _QWORD, _QWORD *))v1846)(v1847, v1943, v1923);
  v1836 = sub_100051B90(&qword_100BDFE78, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.WeatherAnalytics.SamplingRate, (uint64_t)&protocol conformance descriptor for Settings.WeatherAnalytics.SamplingRate);
  v240 = Item<>.init(_:label:resetBehavior:actions:)(v234, 0x676E696C706D6153, 0xED00006574615220, v239, v238, v1836);
  *(_QWORD *)(v232 + 56) = v233;
  v241 = sub_100403A2C(&qword_100BDFE80, &qword_100BDFE70);
  *(_QWORD *)(v232 + 64) = v241;
  *(_QWORD *)(v232 + 32) = v240;
  Group.init(title:footer:_:)(0x6E6F697461636F4CLL, 0xE800000000000000, 0xD00000000000006ELL, 0x8000000100A00C60, v232);
  v1837 = (char *)v1926 + 2 * v230;
  v242 = swift_allocObject(v231, 72, 7);
  *(_OWORD *)(v242 + 16) = v1935;
  v243 = static Settings.WeatherAnalytics.Geocode.samplingRate.getter();
  v244 = swift_allocObject(v235, 40, 7);
  *(_OWORD *)(v244 + 16) = v1949;
  v245 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v244 + 32) = v245;
  v1950 = v244;
  specialized Array._endMutation()(v245);
  v246 = v1950;
  ((void (*)(char *, _QWORD, _QWORD *))v1846)(v239, v1943, v1923);
  v247 = v239;
  v248 = v1938;
  v249 = v1939;
  v250 = Item<>.init(_:label:resetBehavior:actions:)(v243, 0x676E696C706D6153, 0xED00006574615220, v247, v246, v1836);
  *(_QWORD *)(v242 + 56) = v233;
  *(_QWORD *)(v242 + 64) = v241;
  *(_QWORD *)(v242 + 32) = v250;
  Group.init(title:footer:_:)(0x65646F636F6547, 0xE700000000000000, 0xD000000000000064, 0x8000000100A00CD0, v242);
  v251 = v231;
  v252 = swift_allocObject(v231, 72, 7);
  *(_OWORD *)(v252 + 16) = v1935;
  v253 = static Settings.WeatherAnalytics.Telemetry.bypassSampling.getter();
  v254 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v254 + 16) = v1949;
  v255 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v254 + 32) = v255;
  v1950 = v254;
  specialized Array._endMutation()(v255);
  v256 = v1950;
  v257 = v1936;
  v258 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v248, v1943, v1947);
  v259 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v253, 0x5320737361707942, 0xEF676E696C706D61, v257, v248, v256);
  v260 = v1945;
  *(_QWORD *)(v252 + 56) = v249;
  *(_QWORD *)(v252 + 64) = v260;
  *(_QWORD *)(v252 + 32) = v259;
  Group.init(title:footer:_:)(0x7274656D656C6554, 0xE900000000000079, 0xD000000000000071, 0x8000000100A00D40, v252);
  v261 = swift_allocObject(v251, 112, 7);
  *(_OWORD *)(v261 + 16) = v1928;
  v262 = v1848;
  v263 = AppConfiguration.privacy.getter(v261);
  v264 = PrivacyConfiguration.reportWeatherEventSubmissionDrivenIdentifierResetCount.getter(v263);
  (*(void (**)(char *, uint64_t))(v1849 + 8))(v262, v1850);
  v1950 = v264;
  v265 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
  v266 = v1895;
  *v1895 = v265;
  v266[1] = v267;
  v1923 = (_QWORD *)v1851[13];
  ((void (*)(uint64_t *, _QWORD, _QWORD *))v1923)(v266, enum case for DebugModel.label(_:), v1924);
  v1851 = (_QWORD *)type metadata accessor for DebugItem(0);
  *(_QWORD *)(v261 + 56) = v1851;
  v268 = sub_100051B90(&qword_100BDFE88, (uint64_t (*)(uint64_t))&type metadata accessor for DebugItem, (uint64_t)&protocol conformance descriptor for DebugItem);
  *(_QWORD *)(v261 + 64) = v268;
  v269 = v266;
  sub_10005F164((_QWORD *)(v261 + 32));
  DebugItem.init(title:model:)(v1918, 0x8000000100A00EA0, v266);
  v270 = v258;
  v271 = v1943;
  if (qword_100BC2700 != -1)
    swift_once(&qword_100BC2700, sub_100824C30);
  v272 = v1936;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v270);
  v273 = v1922;
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v271, v1921);
  swift_retain();
  v274 = v1913;
  v276 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v275, 0xD000000000000010, 0x8000000100A00EC0, v272, v273, _swiftEmptyArrayStorage);
  v277 = v1911;
  *(_QWORD *)(v261 + 96) = v274;
  *(_QWORD *)(v261 + 104) = v277;
  *(_QWORD *)(v261 + 72) = v276;
  Group.init(title:footer:_:)(v1917, 0x8000000100A00DC0, 0xD0000000000000BALL, 0x8000000100A00DE0, v261);
  v278 = v1929;
  v279 = v1926;
  v280 = v1937;
  v281 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v281 + 16) = v1935;
  v282 = v271;
  *(_BYTE *)v269 = AppSessionManager.wasPriorSessionCrashDetected.getter() & 1;
  ((void (*)(uint64_t *, _QWORD, _QWORD *))v1923)(v269, enum case for DebugModel.BOOL(_:), v1924);
  *(_QWORD *)(v281 + 56) = v1851;
  *(_QWORD *)(v281 + 64) = v268;
  sub_10005F164((_QWORD *)(v281 + 32));
  DebugItem.init(title:model:)(0x6544206873617243, 0xEE00646574636574, v269);
  Group.init(title:footer:_:)(0x6544206873617243, 0xEF6E6F6974636574, 0, 0, v281);
  v1924 = (_QWORD *)((char *)v279 + 6 * v278);
  v283 = swift_allocObject(v280, 192, 7);
  *(_OWORD *)(v283 + 16) = v1914;
  v284 = static Settings.Identity.resetAllOnNextLaunch.getter();
  v285 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v285 + 16) = v1949;
  v286 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v285 + 32) = v286;
  v1950 = v285;
  specialized Array._endMutation()(v286);
  v287 = v1950;
  v288 = v1936;
  v289 = v1948;
  v290 = v1941;
  v291 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v292 = v1938;
  v293 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v282, v1947);
  v294 = v287;
  v295 = v1939;
  v296 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v284, 0xD000000000000024, 0x8000000100A00F00, v288, v292, v294);
  v297 = v1945;
  *(_QWORD *)(v283 + 56) = v295;
  *(_QWORD *)(v283 + 64) = v297;
  *(_QWORD *)(v283 + 32) = v296;
  v1923 = (_QWORD *)static Settings.Identity.resetUserIdentifierOnNextLaunch.getter();
  v298 = v1942;
  v299 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v299 + 16) = v1949;
  v300 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v299 + 32) = v300;
  v1950 = v299;
  specialized Array._endMutation()(v300);
  v301 = v1950;
  v302 = v1936;
  v291(v1936, v289, v290);
  v303 = v1943;
  v304 = v1947;
  v293(v292, v1943, v1947);
  v305 = v302;
  v306 = v292;
  v307 = v1939;
  v308 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1923, 0xD000000000000025, 0x8000000100A00F30, v302, v306, v301);
  v309 = v1945;
  *(_QWORD *)(v283 + 96) = v307;
  *(_QWORD *)(v283 + 104) = v309;
  *(_QWORD *)(v283 + 72) = v308;
  v1923 = (_QWORD *)static Settings.Identity.resetPrivateUserIdentifierOnNextLaunch.getter();
  v310 = swift_allocObject(v298, 40, 7);
  *(_OWORD *)(v310 + 16) = v1949;
  v311 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v310 + 32) = v311;
  v1950 = v310;
  specialized Array._endMutation()(v311);
  v312 = v1950;
  v313 = v1948;
  v314 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v305, v1948, v1941);
  v315 = v1938;
  v316 = v304;
  v317 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v303, v316);
  v318 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1923, 0xD00000000000002DLL, 0x8000000100A00F60, v305, v315, v312);
  v319 = v1945;
  *(_QWORD *)(v283 + 136) = v307;
  *(_QWORD *)(v283 + 144) = v319;
  *(_QWORD *)(v283 + 112) = v318;
  v1923 = (_QWORD *)static Settings.Identity.resetReportWeatherUserIdentifierOnNextLaunch.getter();
  v320 = v1942;
  v321 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v321 + 16) = v1949;
  v322 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v321 + 32) = v322;
  v1950 = v321;
  specialized Array._endMutation()(v322);
  v323 = v1950;
  v324 = v1936;
  v325 = v314;
  v326 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1936, v313, v325);
  v327 = v1938;
  v328 = v303;
  v329 = v1947;
  v317(v1938, v328, v1947);
  v330 = v1939;
  v331 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1923, 0xD000000000000033, 0x8000000100A00F90, v324, v327, v323);
  *(_QWORD *)(v283 + 176) = v330;
  *(_QWORD *)(v283 + 184) = v319;
  *(_QWORD *)(v283 + 152) = v331;
  Group.init(title:footer:_:)(0xD000000000000010, 0x8000000100A00EE0, 0, 0, v283);
  v1926 = (_QWORD *)((char *)&v1926[v1929] - v1929);
  v332 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v332 + 16) = v1935;
  active = static Settings.ActiveUser.resetActiveUserStatusOnNextLaunch.getter();
  v334 = swift_allocObject(v320, 40, 7);
  *(_OWORD *)(v334 + 16) = v1949;
  v335 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v334 + 32) = v335;
  v1950 = v334;
  specialized Array._endMutation()(v335);
  v336 = v1950;
  v337 = v1936;
  v326(v1936, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v327, v1943, v329);
  v338 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(active, v1840, 0x8000000100A00FD0, v337, v327, v336);
  *(_QWORD *)(v332 + 56) = v330;
  *(_QWORD *)(v332 + 64) = v319;
  *(_QWORD *)(v332 + 32) = v338;
  Group.init(title:footer:_:)(0x5520657669746341, 0xEB00000000726573, 0, 0, v332);
  v339 = v1932;
  v1932[7] = v1933;
  v339[8] = &protocol witness table for Page;
  v340 = v339;
  sub_10005F164(v1839);
  Page.init(title:_:)(0x636974796C616E41, 0xE900000000000073, v1838);
  v1851 = v340 + 9;
  v341 = v1931;
  v1895 = (uint64_t *)(v1931 + v1919);
  v342 = swift_allocObject(v1930, v1931 + v1919, v1934);
  v1850 = v342;
  *(_OWORD *)(v342 + 16) = v1928;
  v1924 = (_QWORD *)(v342 + v341);
  v1926 = (_QWORD *)static Settings.VFX.animatedBackgrounds.getter();
  v343 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v343 + 16) = v1928;
  v344 = sub_1000BA294(&qword_100BDFE90);
  v345 = static Settings.VFX.animatedBackgrounds.getter();
  v346 = Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release(v345);
  v347 = v1942;
  v348 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v348 + 16) = v1949;
  v349 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v348 + 32) = v349;
  v1950 = v348;
  specialized Array._endMutation()(v349);
  v350 = v1950;
  v1923 = (_QWORD *)v1852[13];
  v351 = v1854;
  v352 = v1943;
  v353 = v1853;
  ((void (*)(unint64_t, _QWORD, char *))v1923)(v1854, v1943, v1853);
  v1918 = sub_100051B90(&qword_100BDFE98, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind, (uint64_t)&protocol conformance descriptor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
  v354 = Item<>.init(_:label:resetBehavior:actions:)(v346, 0xD000000000000017, 0x8000000100A01020, v351, v350, v1918);
  *(_QWORD *)(v343 + 56) = v344;
  v355 = sub_100403A2C(&qword_100BDFEA0, &qword_100BDFE90);
  *(_QWORD *)(v343 + 64) = v355;
  *(_QWORD *)(v343 + 32) = v354;
  v356 = static Settings.VFX.animatedBackgrounds.getter();
  v357 = Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release(v356);
  v358 = swift_allocObject(v347, 40, 7);
  *(_OWORD *)(v358 + 16) = v1949;
  v359 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v358 + 32) = v359;
  v1950 = v358;
  specialized Array._endMutation()(v359);
  v360 = v1950;
  ((void (*)(unint64_t, uint64_t, char *))v1923)(v351, v352, v353);
  v361 = Item<>.init(_:label:resetBehavior:actions:)(v357, 0xD000000000000013, 0x8000000100A01040, v351, v360, v1918);
  *(_QWORD *)(v343 + 96) = v344;
  *(_QWORD *)(v343 + 104) = v355;
  *(_QWORD *)(v343 + 72) = v361;
  v1854 = 0x8000000100A01000;
  v362 = v1924;
  Group.init(title:footer:group:_:)(v1917);
  v1853 = (char *)v362 + v1929;
  v363 = swift_allocObject(v1937, 232, 7);
  *(_OWORD *)(v363 + 16) = v1908;
  v364 = sub_1000BA294(&qword_100BDFEA8);
  v365 = static Settings.VFX.moonEnabled.getter();
  v366 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v366 + 16) = v1949;
  v367 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v366 + 32) = v367;
  v1950 = v366;
  specialized Array._endMutation()(v367);
  v368 = v1950;
  v369 = v1915;
  v370 = v1943;
  v1924 = (_QWORD *)v1910[13];
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1915, v1943, v1927);
  v1923 = (_QWORD *)sub_100051B90(&qword_100BDFEB0, (uint64_t (*)(uint64_t))&type metadata accessor for FeatureState, (uint64_t)&protocol conformance descriptor for FeatureState);
  v371 = Item<>.init(_:label:resetBehavior:actions:)(v365, 0xD00000000000001BLL, 0x8000000100A01060, v369, v368, v1923);
  v1918 = v364;
  *(_QWORD *)(v363 + 56) = v364;
  v1926 = (_QWORD *)sub_100403A2C(&qword_100BDFEB8, &qword_100BDFEA8);
  *(_QWORD *)(v363 + 64) = v1926;
  *(_QWORD *)(v363 + 32) = v371;
  v372 = static Settings.VFX.listVfxCellsEnabled.getter();
  v373 = v1936;
  v374 = v1948;
  v375 = v1941;
  v376 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v377 = v1922;
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v370, v1921);
  v1910 = (_QWORD *)0xD000000000000019;
  v378 = v372;
  v379 = v1913;
  v380 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v378, 0xD000000000000019, 0x8000000100A01080, v373, v377, _swiftEmptyArrayStorage);
  v381 = v1911;
  *(_QWORD *)(v363 + 96) = v379;
  *(_QWORD *)(v363 + 104) = v381;
  *(_QWORD *)(v363 + 72) = v380;
  v382 = static Settings.VFX.allListVfxBackgroundsEnabled.getter();
  v383 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v383 + 16) = v1949;
  v384 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v383 + 32) = v384;
  v1950 = v383;
  specialized Array._endMutation()(v384);
  v385 = v1950;
  v376(v373, v374, v375);
  v386 = v1938;
  v387 = v370;
  v388 = (void (*)(char *, _QWORD, uint64_t))v1946;
  v389 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v387, v1947);
  v390 = v373;
  v391 = v385;
  v392 = v1939;
  v393 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v382, 0xD00000000000001CLL, 0x8000000100A010A0, v373, v386, v391);
  v394 = v1945;
  *(_QWORD *)(v363 + 136) = v392;
  *(_QWORD *)(v363 + 144) = v394;
  *(_QWORD *)(v363 + 112) = v393;
  v1852 = (_QWORD *)static Settings.VFX.vfxCollisionEnabled.getter();
  v395 = v1942;
  v396 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v396 + 16) = v1949;
  v397 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v396 + 32) = v397;
  v1950 = v396;
  specialized Array._endMutation()(v397);
  v398 = v1950;
  v399 = v1948;
  v400 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v390, v1948, v1941);
  v401 = v1938;
  v388(v1938, v1943, v389);
  v402 = v398;
  v403 = v1939;
  v404 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1852, v1917, 0x8000000100A010C0, v390, v401, v402);
  *(_QWORD *)(v363 + 176) = v403;
  *(_QWORD *)(v363 + 184) = v394;
  v405 = v394;
  *(_QWORD *)(v363 + 152) = v404;
  v1852 = (_QWORD *)static Settings.VFX.overrideConditionBackground.getter();
  v406 = swift_allocObject(v395, 40, 7);
  *(_OWORD *)(v406 + 16) = v1949;
  v407 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v406 + 32) = v407;
  v1950 = v406;
  specialized Array._endMutation()(v407);
  v408 = v1950;
  v409 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v390, v399, v400);
  v410 = v1938;
  v411 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v389);
  v412 = v390;
  v413 = v390;
  v414 = v410;
  v415 = v408;
  v416 = v1939;
  v417 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1852, 0xD000000000000021, 0x8000000100A010E0, v412, v410, v415);
  *(_QWORD *)(v363 + 216) = v416;
  *(_QWORD *)(v363 + 224) = v405;
  *(_QWORD *)(v363 + 192) = v417;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0, 0, v363);
  v418 = v1932;
  v1932[12] = v1933;
  v418[13] = &protocol witness table for Page;
  sub_10005F164(v1851);
  Page.init(title:_:)(v1917, v1854, v1850);
  v1854 = (unint64_t)(v418 + 14);
  v419 = swift_allocObject(v1930, v1925, v1934);
  v1917 = (char *)v419;
  *(_OWORD *)(v419 + 16) = v1935;
  v1853 = (char *)(v419 + v1931);
  v420 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v420 + 16) = v1928;
  v421 = static Settings.AppConfig.forceDefault.getter();
  v422 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v422 + 16) = v1949;
  v423 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v422 + 32) = v423;
  v1950 = v422;
  specialized Array._endMutation()(v423);
  v424 = v1950;
  v425 = v413;
  v426 = v413;
  v427 = v1941;
  v409(v426, v1948, v1941);
  v428 = v414;
  v429 = v414;
  v430 = v1943;
  v431 = v1947;
  v411(v429, v1943, v1947);
  v432 = v421;
  v433 = v425;
  v434 = v1939;
  v435 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v432, v1910, 0x8000000100A01110, v425, v428, v424);
  v436 = v1945;
  *(_QWORD *)(v420 + 56) = v434;
  *(_QWORD *)(v420 + 64) = v436;
  *(_QWORD *)(v420 + 32) = v435;
  v1910 = (_QWORD *)static Settings.AppConfig.clearConfigCacheOnNextLaunch.getter();
  v437 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v437 + 16) = v1949;
  v438 = ((uint64_t (*)(void))static SettingActions.restart.getter)();
  *(_QWORD *)(v437 + 32) = v438;
  v1950 = v437;
  v439 = v430;
  specialized Array._endMutation()(v438);
  v440 = v1950;
  v441 = (void (*)(_QWORD, _QWORD, _QWORD))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v433, v1948, v427);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v428, v430, v431);
  v442 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1910, 0xD00000000000001ELL, 0x8000000100A01130, v433, v428, v440);
  v443 = v1945;
  *(_QWORD *)(v420 + 96) = v434;
  *(_QWORD *)(v420 + 104) = v443;
  *(_QWORD *)(v420 + 72) = v442;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0, 0, v420);
  v444 = v1932;
  v1932[17] = v1933;
  v444[18] = &protocol witness table for Page;
  sub_10005F164((_QWORD *)v1854);
  Page.init(title:_:)(0x666E6F4320707041, 0xEA00000000006769, v1917);
  v1910 = (_QWORD *)swift_allocObject(v1930, v1925, v1934);
  *((_OWORD *)v1910 + 1) = v1935;
  v445 = swift_allocObject(v1937, 192, 7);
  *(_OWORD *)(v445 + 16) = v1914;
  v446 = (void (*)(char *, _QWORD, uint64_t))v441;
  if (qword_100BC2628 != -1)
    swift_once(&qword_100BC2628, sub_100818F98);
  v447 = qword_100CAF488;
  v448 = v1942;
  v449 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v449 + 16) = v1949;
  v450 = swift_retain();
  v451 = static SettingActions.restart.getter(v450);
  *(_QWORD *)(v449 + 32) = v451;
  v1950 = v449;
  specialized Array._endMutation()(v451);
  v452 = v1950;
  v453 = v1915;
  ((void (*)(char *, uint64_t, _QWORD *))v1924)(v1915, v439, v1927);
  v454 = v452;
  v455 = v1918;
  v456 = Item<>.init(_:label:resetBehavior:actions:)(v447, 0xD000000000000018, 0x8000000100A01170, v453, v454, v1923);
  v457 = v1926;
  *(_QWORD *)(v445 + 56) = v455;
  *(_QWORD *)(v445 + 64) = v457;
  *(_QWORD *)(v445 + 32) = v456;
  if (qword_100BC2638 != -1)
    swift_once(&qword_100BC2638, sub_100819098);
  v1854 = (unint64_t)(v444 + 19);
  v1853 = (char *)v1910 + v1931;
  v458 = qword_100CAF498;
  v459 = swift_allocObject(v448, 40, 7);
  *(_OWORD *)(v459 + 16) = v1949;
  v460 = swift_retain();
  v461 = static SettingActions.restart.getter(v460);
  *(_QWORD *)(v459 + 32) = v461;
  v1950 = v459;
  specialized Array._endMutation()(v461);
  v462 = v1950;
  v463 = v1936;
  v464 = v446;
  v446(v1936, v1948, v1941);
  v465 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v466 = v465;
  v467 = v1939;
  v468 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v458, 0xD00000000000001DLL, 0x8000000100A01190, v463, v466, v462);
  v469 = v1945;
  *(_QWORD *)(v445 + 96) = v467;
  *(_QWORD *)(v445 + 104) = v469;
  *(_QWORD *)(v445 + 72) = v468;
  v470 = v448;
  if (qword_100BC2640 != -1)
    swift_once(&qword_100BC2640, sub_1008190B8);
  v471 = qword_100CAF4A0;
  v472 = swift_allocObject(v448, 40, 7);
  *(_OWORD *)(v472 + 16) = v1949;
  v473 = swift_retain();
  v474 = static SettingActions.restart.getter(v473);
  *(_QWORD *)(v472 + 32) = v474;
  v1950 = v472;
  specialized Array._endMutation()(v474);
  v475 = v1950;
  v464(v463, v1948, v1941);
  v476 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v477 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v471, 0xD000000000000022, 0x8000000100A011B0, v463, v476, v475);
  v478 = v1945;
  *(_QWORD *)(v445 + 136) = v467;
  *(_QWORD *)(v445 + 144) = v478;
  *(_QWORD *)(v445 + 112) = v477;
  if (qword_100BC2648 != -1)
    swift_once(&qword_100BC2648, sub_1008191C0);
  v479 = qword_100CAF4A8;
  v480 = swift_allocObject(v448, 40, 7);
  *(_OWORD *)(v480 + 16) = v1949;
  v481 = swift_retain();
  v482 = static SettingActions.restart.getter(v481);
  *(_QWORD *)(v480 + 32) = v482;
  v1950 = v480;
  specialized Array._endMutation()(v482);
  v483 = v1950;
  v484 = v464;
  v464(v463, v1948, v1941);
  v485 = v1922;
  ((void (*)(_QWORD, _QWORD, uint64_t))v1912)(v1922, v1943, v1921);
  v1917 = (char *)0xD000000000000019;
  v486 = v483;
  v487 = v1913;
  v488 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v479, 0xD000000000000019, 0x8000000100A011E0, v463, v485, v486);
  v489 = v1911;
  *(_QWORD *)(v445 + 176) = v487;
  *(_QWORD *)(v445 + 184) = v489;
  *(_QWORD *)(v445 + 152) = v488;
  Group.init(title:footer:_:)(0x73626F6E4BLL, 0xE500000000000000, 0, 0, v445);
  v490 = v1932;
  v1932[22] = v1933;
  v490[23] = &protocol witness table for Page;
  sub_10005F164((_QWORD *)v1854);
  Page.init(title:_:)(0xD000000000000010, 0x8000000100A01150, v1910);
  v1910 = v490 + 24;
  v491 = v1930;
  v492 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v492 + 16) = v1935;
  v1853 = (char *)(v492 + v1931);
  v493 = v1937;
  v494 = v470;
  v495 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v495 + 16) = v1935;
  v496 = static Settings.Daemon.useDemoWeatherData.getter();
  v497 = swift_allocObject(v494, 40, 7);
  v498 = (__n128)v1949;
  *(_OWORD *)(v497 + 16) = v1949;
  v499 = static SettingActions.restart.getter(v498);
  *(_QWORD *)(v497 + 32) = v499;
  v1950 = v497;
  specialized Array._endMutation()(v499);
  v500 = v1950;
  v484(v463, v1948, v1941);
  v501 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v502 = v500;
  v503 = v1939;
  v504 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v496, 0xD000000000000015, 0x8000000100A01270, v463, v501, v502);
  v505 = v1945;
  *(_QWORD *)(v495 + 56) = v503;
  *(_QWORD *)(v495 + 64) = v505;
  *(_QWORD *)(v495 + 32) = v504;
  v1854 = (unint64_t)"Saved locations threshold";
  Group.init(title:footer:_:)(0x736E6F6974704FLL, 0xE700000000000000, 0xD000000000000066, 0x8000000100A01200, v495);
  v490[27] = v1933;
  v490[28] = &protocol witness table for Page;
  sub_10005F164(v1910);
  Page.init(title:_:)(1869440324, 0xE400000000000000, v492);
  v1910 = v490 + 29;
  v506 = swift_allocObject(v491, v1925, v1934);
  *(_OWORD *)(v506 + 16) = v1935;
  v1853 = (char *)(v506 + v1931);
  v507 = swift_allocObject(v493, 72, 7);
  *(_OWORD *)(v507 + 16) = v1935;
  v508 = (void (*)(char *, _QWORD, uint64_t))v1946;
  v509 = v1947;
  if (qword_100BC20E0 != -1)
    swift_once(&qword_100BC20E0, sub_10042C040);
  v510 = qword_100CAEB70;
  v511 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v511 + 16) = v1949;
  v512 = swift_retain();
  v513 = static SettingActions.restart.getter(v512);
  *(_QWORD *)(v511 + 32) = v513;
  v1950 = v511;
  specialized Array._endMutation()(v513);
  v514 = v1950;
  v515 = v1936;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v508(v501, v1943, v509);
  v516 = v514;
  v517 = v1939;
  v518 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v510, 0xD00000000000001DLL, 0x8000000100A01320, v515, v501, v516);
  v519 = v1945;
  *(_QWORD *)(v507 + 56) = v517;
  *(_QWORD *)(v507 + 64) = v519;
  *(_QWORD *)(v507 + 32) = v518;
  Group.init(title:footer:_:)(0, 0, 0xD000000000000088, 0x8000000100A01290, v507);
  v520 = v1932;
  v1932[32] = v1933;
  v520[33] = &protocol witness table for Page;
  v521 = v520;
  sub_10005F164(v1910);
  Page.init(title:_:)(0x74736F6E67616944, 0xEB00000000736369, v506);
  v1852 = v521 + 34;
  v522 = swift_allocObject(v1930, v1895, v1934);
  v1910 = (_QWORD *)v522;
  *(_OWORD *)(v522 + 16) = v1928;
  v1851 = (_QWORD *)(v522 + v1931);
  v523 = swift_allocObject(v1937, 232, 7);
  *(_OWORD *)(v523 + 16) = v1908;
  v524 = static Settings.Geocoding.bypassGeocodingCache.getter();
  v525 = v515;
  v526 = v515;
  v527 = v1948;
  v528 = v1941;
  v529 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v526, v1948, v1941);
  v530 = v1938;
  v531 = v1943;
  v532 = v509;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v509);
  v533 = v524;
  v1853 = (char *)0xD00000000000001CLL;
  v534 = v530;
  v535 = v1939;
  v536 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v533, 0xD00000000000001CLL, 0x8000000100A01340, v525, v530, _swiftEmptyArrayStorage);
  v537 = v1945;
  *(_QWORD *)(v523 + 56) = v535;
  *(_QWORD *)(v523 + 64) = v537;
  *(_QWORD *)(v523 + 32) = v536;
  v538 = static Settings.Geocoding.bypassReverseGeocodingCache.getter();
  v529(v525, v527, v528);
  v539 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v534, v531, v532);
  v540 = v538;
  v541 = v525;
  v542 = v1939;
  v543 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v540, 0xD000000000000024, 0x8000000100A01360, v525, v534, _swiftEmptyArrayStorage);
  *(_QWORD *)(v523 + 96) = v542;
  *(_QWORD *)(v523 + 104) = v537;
  v544 = v537;
  *(_QWORD *)(v523 + 72) = v543;
  v545 = static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
  v546 = v527;
  v547 = v1941;
  v548 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v541, v527, v1941);
  v549 = v534;
  v550 = v534;
  v551 = v1947;
  v539(v550, v1943, v1947);
  v552 = v545;
  v553 = v1939;
  v554 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v552, 0xD00000000000001ELL, 0x8000000100A01390, v541, v549, _swiftEmptyArrayStorage);
  *(_QWORD *)(v523 + 136) = v553;
  *(_QWORD *)(v523 + 144) = v544;
  v555 = v553;
  *(_QWORD *)(v523 + 112) = v554;
  v556 = static Settings.Geocoding.clearReverseGeocodingCacheOnNextLaunch.getter();
  v548(v541, v546, v547);
  v557 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v549, v1943, v551);
  v558 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v556, 0xD000000000000021, 0x8000000100A013B0, v541, v549, _swiftEmptyArrayStorage);
  *(_QWORD *)(v523 + 176) = v555;
  *(_QWORD *)(v523 + 184) = v544;
  *(_QWORD *)(v523 + 152) = v558;
  v559 = sub_1000BA294(&qword_100BDFEC0);
  v560 = static Settings.Geocoding.clientServerSideRevGeo.getter();
  v561 = v1841;
  v562 = v557;
  (*(void (**)(char *, uint64_t, uint64_t))(v1855 + 104))(v1841, v557, v1886);
  v563 = sub_100051B90(&qword_100BDFEC8, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Geocoding.ClientServerSideRevGeocode, (uint64_t)&protocol conformance descriptor for Settings.Geocoding.ClientServerSideRevGeocode);
  v564 = Item<>.init(_:label:resetBehavior:actions:)(v560, v1917, 0x8000000100A013E0, v561, _swiftEmptyArrayStorage, v563);
  *(_QWORD *)(v523 + 216) = v559;
  *(_QWORD *)(v523 + 224) = sub_100403A2C(&qword_100BDFED0, &qword_100BDFEC0);
  *(_QWORD *)(v523 + 192) = v564;
  v565 = v1851;
  Group.init(title:footer:_:)(0x676E6968636143, 0xE700000000000000, 0, 0, v523);
  v1886 = (uint64_t)v565 + v1929;
  v566 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v566 + 16) = v1928;
  v1855 = static Settings.Geocoding.useBackgroundReverseGeocodingPriority.getter();
  v567 = v1942;
  v568 = swift_allocObject(v1942, 40, 7);
  v569 = (__n128)v1949;
  *(_OWORD *)(v568 + 16) = v1949;
  v570 = static SettingActions.restart.getter(v569);
  *(_QWORD *)(v568 + 32) = v570;
  v1950 = v568;
  specialized Array._endMutation()(v570);
  v571 = v1950;
  v572 = v1936;
  v573 = v1948;
  v574 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v575 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v549, v562, v1947);
  v576 = v571;
  v577 = v1939;
  v578 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1855, 0xD000000000000017, 0x8000000100A01400, v572, v549, v576);
  v579 = v1945;
  *(_QWORD *)(v566 + 56) = v577;
  *(_QWORD *)(v566 + 64) = v579;
  *(_QWORD *)(v566 + 32) = v578;
  v1855 = static Settings.Geocoding.bypassGreenTea.getter();
  v580 = swift_allocObject(v567, 40, 7);
  v581 = (__n128)v1949;
  *(_OWORD *)(v580 + 16) = v1949;
  v582 = static SettingActions.restart.getter(v581);
  *(_QWORD *)(v580 + 32) = v582;
  v1950 = v580;
  specialized Array._endMutation()(v582);
  v583 = v1950;
  v584 = v1936;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1936, v573, v574);
  v585 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v562, v575);
  v586 = v583;
  v587 = v1939;
  v588 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1855, 0x4720737361707942, 0xEF6165546E656572, v584, v585, v586);
  v589 = v1945;
  *(_QWORD *)(v566 + 96) = v587;
  *(_QWORD *)(v566 + 104) = v589;
  *(_QWORD *)(v566 + 72) = v588;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0, 0, v566);
  v590 = v1932;
  v1932[37] = v1933;
  v590[38] = &protocol witness table for Page;
  sub_10005F164(v1852);
  v1886 = 0xE900000000000067;
  Page.init(title:_:)(0x6E69646F636F6547, 0xE900000000000067, v1910);
  v1910 = v590 + 39;
  v591 = v1930;
  v592 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v592 + 16) = v1935;
  v593 = v1931;
  v1855 = v592 + v1931;
  v594 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v594 + 16) = v1935;
  v595 = static Settings.InternationalAuthenticity.verticalHeroForceInAllLocales.getter();
  v596 = v567;
  v597 = swift_allocObject(v567, 40, 7);
  v598 = (__n128)v1949;
  *(_OWORD *)(v597 + 16) = v1949;
  v599 = static SettingActions.restart.getter(v598);
  *(_QWORD *)(v597 + 32) = v599;
  v1950 = v597;
  specialized Array._endMutation()(v599);
  v600 = v1950;
  v601 = v1915;
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1915, v1943, v1927);
  v602 = v600;
  v603 = v1918;
  v604 = Item<>.init(_:label:resetBehavior:actions:)(v595, 0xD000000000000022, 0x8000000100A01440, v601, v602, v1923);
  v605 = v1926;
  *(_QWORD *)(v594 + 56) = v603;
  *(_QWORD *)(v594 + 64) = v605;
  *(_QWORD *)(v594 + 32) = v604;
  Group.init(title:footer:_:)(0x656469727265764FLL, 0xE900000000000073, 0, 0, v594);
  v590[42] = v1933;
  v590[43] = &protocol witness table for Page;
  sub_10005F164(v1910);
  Page.init(title:_:)(0xD00000000000001ALL, 0x8000000100A01420, v592);
  v1852 = v590 + 44;
  v606 = swift_allocObject(v591, v1902, v1934);
  *(_OWORD *)(v606 + 16) = v1920;
  v1855 = v606;
  v1910 = (_QWORD *)(v606 + v593);
  v607 = swift_allocObject(v1937, 152, 7);
  *(_OWORD *)(v607 + 16) = v1920;
  v608 = static Settings.SavedLocations.useCoherence.getter();
  v609 = swift_allocObject(v596, 40, 7);
  v610 = (__n128)v1949;
  *(_OWORD *)(v609 + 16) = v1949;
  v611 = static SettingActions.restart.getter(v610);
  *(_QWORD *)(v609 + 32) = v611;
  v1950 = v609;
  specialized Array._endMutation()(v611);
  v612 = v1950;
  v613 = v1936;
  v614 = v1948;
  v615 = v1941;
  v616 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v617 = v1938;
  v618 = v1947;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v619 = v612;
  v620 = v1939;
  v621 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v608, v1917, 0x8000000100A01470, v613, v617, v619);
  v622 = v1945;
  *(_QWORD *)(v607 + 56) = v620;
  *(_QWORD *)(v607 + 64) = v622;
  *(_QWORD *)(v607 + 32) = v621;
  v1851 = (_QWORD *)static Settings.SavedLocations.forceMigrateToCoherence.getter();
  v623 = v1942;
  v624 = swift_allocObject(v1942, 40, 7);
  v625 = (__n128)v1949;
  *(_OWORD *)(v624 + 16) = v1949;
  v626 = static SettingActions.restart.getter(v625);
  *(_QWORD *)(v624 + 32) = v626;
  v1950 = v624;
  specialized Array._endMutation()(v626);
  v627 = v1950;
  v628 = v1936;
  v616(v1936, v614, v615);
  v629 = v1938;
  v630 = v1943;
  v631 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v618);
  v632 = v628;
  v633 = v629;
  v634 = v627;
  v635 = v1939;
  v636 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1851, v1917, 0x8000000100A01490, v628, v629, v634);
  *(_QWORD *)(v607 + 96) = v635;
  *(_QWORD *)(v607 + 104) = v622;
  *(_QWORD *)(v607 + 72) = v636;
  v637 = static Settings.SavedLocations.removeCoherenceContainer.getter();
  v638 = swift_allocObject(v623, 40, 7);
  v639 = (__n128)v1949;
  *(_OWORD *)(v638 + 16) = v1949;
  v640 = static SettingActions.restart.getter(v639);
  *(_QWORD *)(v638 + 32) = v640;
  v1950 = v638;
  specialized Array._endMutation()(v640);
  v641 = v1950;
  v642 = (void (*)(_QWORD, _QWORD, _QWORD))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v632, v1948, v1941);
  v631(v633, v630, v1947);
  v643 = v641;
  v644 = v1939;
  v645 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v637, 0xD000000000000020, 0x8000000100A014B0, v632, v633, v643);
  *(_QWORD *)(v607 + 136) = v644;
  *(_QWORD *)(v607 + 144) = v622;
  *(_QWORD *)(v607 + 112) = v645;
  v646 = v1910;
  Group.init(title:footer:_:)(0x20676E69636E7953, 0xEF736E6F6974704FLL, 0, 0, v607);
  v1917 = (char *)v646 + v1929;
  v647 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v647 + 16) = v1935;
  v648 = v642;
  v649 = v644;
  v650 = v630;
  v651 = v1942;
  v652 = v632;
  if (qword_100BC2308 != -1)
    swift_once(&qword_100BC2308, sub_10068204C);
  v653 = qword_100CAEEC8;
  v654 = swift_allocObject(v651, 40, 7);
  *(_OWORD *)(v654 + 16) = v1949;
  v655 = swift_retain();
  v656 = static SettingActions.restart.getter(v655);
  *(_QWORD *)(v654 + 32) = v656;
  v1950 = v654;
  specialized Array._endMutation()(v656);
  v657 = v1950;
  v658 = v632;
  v659 = (void (*)(char *, _QWORD, uint64_t))v648;
  v648(v658, v1948, v1941);
  v660 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v650, v1947);
  v661 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v653, v1853, 0x8000000100A01500, v652, v660, v657);
  v662 = v1945;
  *(_QWORD *)(v647 + 56) = v649;
  *(_QWORD *)(v647 + 64) = v662;
  *(_QWORD *)(v647 + 32) = v661;
  Group.init(title:footer:_:)(0xD000000000000016, 0x8000000100A014E0, 0, 0, v647);
  v1917 = (char *)v1910 + v1919;
  v663 = swift_allocObject(v1937, 152, 7);
  *(_OWORD *)(v663 + 16) = v1920;
  v664 = sub_1000BA294(&qword_100BDFED8);
  v665 = static Settings.Location.mockedCurrentLocation.getter();
  v666 = v659;
  v667 = swift_allocObject(v651, 40, 7);
  v668 = (__n128)v1949;
  *(_OWORD *)(v667 + 16) = v1949;
  v669 = static SettingActions.restart.getter(v668);
  *(_QWORD *)(v667 + 32) = v669;
  v1950 = v667;
  specialized Array._endMutation()(v669);
  v670 = v1950;
  v671 = v1858;
  (*(void (**)(char *, uint64_t, _QWORD *))(v1856 + 104))(v1858, v650, v1857);
  v672 = sub_100051B90(&qword_100BDFEE0, (uint64_t (*)(uint64_t))&type metadata accessor for MockLocation, (uint64_t)&protocol conformance descriptor for MockLocation);
  v673 = Item<>.init(_:label:resetBehavior:actions:)(v665, 0xD000000000000015, 0x8000000100A01520, v671, v670, v672);
  *(_QWORD *)(v663 + 56) = v664;
  *(_QWORD *)(v663 + 64) = sub_100403A2C(&qword_100BDFEE8, &qword_100BDFED8);
  *(_QWORD *)(v663 + 32) = v673;
  v674 = sub_1000BA294(&qword_100BDFEF0);
  v675 = static Settings.LocationsOfInterest.mockedHomeAndWorkLocation.getter();
  v676 = swift_allocObject(v651, 40, 7);
  v677 = (__n128)v1949;
  *(_OWORD *)(v676 + 16) = v1949;
  v678 = static SettingActions.restart.getter(v677);
  *(_QWORD *)(v676 + 32) = v678;
  v1950 = v676;
  specialized Array._endMutation()(v678);
  v679 = v1950;
  v680 = v1894;
  ((void (*)(char *, uint64_t, _QWORD))v1859[13])(v1894, v650, v1860);
  v681 = sub_100051B90(&qword_100BDFEF8, (uint64_t (*)(uint64_t))&type metadata accessor for MockHomeAndWorkLocation, (uint64_t)&protocol conformance descriptor for MockHomeAndWorkLocation);
  v682 = Item<>.init(_:label:resetBehavior:actions:)(v675, 0xD00000000000001BLL, 0x8000000100A01540, v680, v679, v681);
  *(_QWORD *)(v663 + 96) = v674;
  *(_QWORD *)(v663 + 104) = sub_100403A2C(&qword_100BDFF00, &qword_100BDFEF0);
  *(_QWORD *)(v663 + 72) = v682;
  if (qword_100BC26C8 != -1)
    swift_once(&qword_100BC26C8, sub_100824B60);
  v683 = qword_100CAF530;
  v684 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v684 + 16) = v1949;
  v685 = swift_retain();
  v686 = static SettingActions.restart.getter(v685);
  *(_QWORD *)(v684 + 32) = v686;
  v1950 = v684;
  specialized Array._endMutation()(v686);
  v687 = v1950;
  v688 = v1936;
  v689 = v1948;
  v666(v1936, v1948, v1941);
  v690 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v650, v1947);
  v691 = v687;
  v692 = v1939;
  v693 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v683, 0xD00000000000001ELL, 0x8000000100A01560, v688, v690, v691);
  v694 = v1945;
  *(_QWORD *)(v663 + 136) = v692;
  *(_QWORD *)(v663 + 144) = v694;
  *(_QWORD *)(v663 + 112) = v693;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0, 0, v663);
  v695 = v1932;
  v1932[47] = v1933;
  v695[48] = &protocol witness table for Page;
  sub_10005F164(v1852);
  Page.init(title:_:)(0x6E6F697461636F4CLL, 0xE900000000000073, v1855);
  v1910 = (_QWORD *)swift_allocObject(v1930, v1902, v1934);
  *((_OWORD *)v1910 + 1) = v1920;
  v696 = swift_allocObject(v1937, 632, 7);
  v1860 = xmmword_10099DB10;
  *(_OWORD *)(v696 + 16) = xmmword_10099DB10;
  v697 = v688;
  v698 = v689;
  v699 = v650;
  if (qword_100BC2660 != -1)
    swift_once(&qword_100BC2660, sub_10015A684);
  v700 = qword_100CAF4C8;
  v701 = v1942;
  v702 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v702 + 16) = v1949;
  v703 = swift_retain();
  v704 = static SettingActions.restart.getter(v703);
  *(_QWORD *)(v702 + 32) = v704;
  v1950 = v702;
  specialized Array._endMutation()(v704);
  v705 = v1950;
  v706 = v1915;
  ((void (*)(char *, uint64_t, _QWORD *))v1924)(v1915, v650, v1927);
  v707 = v705;
  v708 = v1918;
  v709 = Item<>.init(_:label:resetBehavior:actions:)(v700, 0xD000000000000016, 0x8000000100A01580, v706, v707, v1923);
  v710 = v1926;
  *(_QWORD *)(v696 + 56) = v708;
  *(_QWORD *)(v696 + 64) = v710;
  *(_QWORD *)(v696 + 32) = v709;
  if (qword_100BC2668 != -1)
    swift_once(&qword_100BC2668, sub_100824A24);
  v711 = qword_100CAF4D0;
  v712 = swift_allocObject(v701, 40, 7);
  *(_OWORD *)(v712 + 16) = v1949;
  v713 = swift_retain();
  v714 = static SettingActions.restart.getter(v713);
  *(_QWORD *)(v712 + 32) = v714;
  v1950 = v712;
  specialized Array._endMutation()(v714);
  v715 = v1950;
  v716 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v697, v698, v1941);
  v717 = v1938;
  v718 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v650, v1947);
  v719 = v1939;
  v720 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v711, 0xD000000000000021, 0x8000000100A015A0, v697, v717, v715);
  v721 = v1945;
  *(_QWORD *)(v696 + 96) = v719;
  *(_QWORD *)(v696 + 104) = v721;
  *(_QWORD *)(v696 + 72) = v720;
  if (qword_100BC2670 != -1)
    swift_once(&qword_100BC2670, sub_10015A7B0);
  v722 = qword_100CAF4D8;
  v723 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v723 + 16) = v1949;
  v724 = swift_retain();
  v725 = static SettingActions.restart.getter(v724);
  *(_QWORD *)(v723 + 32) = v725;
  v1950 = v723;
  specialized Array._endMutation()(v725);
  v726 = v1950;
  v716(v697, v1948, v1941);
  v718(v717, v699, v1947);
  v727 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v722, 0xD00000000000001ALL, 0x8000000100A015D0, v697, v717, v726);
  v728 = v1945;
  *(_QWORD *)(v696 + 136) = v719;
  *(_QWORD *)(v696 + 144) = v728;
  *(_QWORD *)(v696 + 112) = v727;
  if (qword_100BC2678 != -1)
    swift_once(&qword_100BC2678, sub_100824AE8);
  v729 = qword_100CAF4E0;
  v730 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v730 + 16) = v1949;
  v731 = swift_retain();
  v732 = static SettingActions.restart.getter(v731);
  *(_QWORD *)(v730 + 32) = v732;
  v1950 = v730;
  specialized Array._endMutation()(v732);
  v733 = v1950;
  v716(v697, v1948, v1941);
  v718(v717, v699, v1947);
  v734 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v729, 0xD000000000000028, 0x8000000100A015F0, v697, v717, v733);
  v735 = v1945;
  *(_QWORD *)(v696 + 176) = v719;
  *(_QWORD *)(v696 + 184) = v735;
  *(_QWORD *)(v696 + 152) = v734;
  if (qword_100BC2680 != -1)
    swift_once(&qword_100BC2680, sub_10015A900);
  v736 = qword_100CAF4E8;
  v737 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v737 + 16) = v1949;
  v738 = swift_retain();
  v739 = static SettingActions.restart.getter(v738);
  *(_QWORD *)(v737 + 32) = v739;
  v1950 = v737;
  specialized Array._endMutation()(v739);
  v740 = v1950;
  v716(v697, v1948, v1941);
  v718(v717, v699, v1947);
  v741 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v736, 0xD000000000000011, 0x8000000100A01620, v697, v717, v740);
  v742 = v1945;
  *(_QWORD *)(v696 + 216) = v719;
  *(_QWORD *)(v696 + 224) = v742;
  *(_QWORD *)(v696 + 192) = v741;
  if (qword_100BC2688 != -1)
    swift_once(&qword_100BC2688, sub_10015A950);
  v743 = qword_100CAF4F0;
  v744 = v1942;
  v745 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v745 + 16) = v1949;
  v746 = swift_retain();
  v747 = static SettingActions.restart.getter(v746);
  *(_QWORD *)(v745 + 32) = v747;
  v1950 = v745;
  specialized Array._endMutation()(v747);
  v748 = v1950;
  v749 = v697;
  v750 = v697;
  v751 = v1948;
  v1944(v749);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v717, v699, v1947);
  v752 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v743, 0xD000000000000010, 0x8000000100A01640, v750, v717, v748);
  v753 = v1945;
  *(_QWORD *)(v696 + 256) = v719;
  *(_QWORD *)(v696 + 264) = v753;
  *(_QWORD *)(v696 + 232) = v752;
  v1917 = (char *)static Settings.WeatherAlert.forceAlertToHighProminence.getter();
  v754 = swift_allocObject(v744, 40, 7);
  v755 = (__n128)v1949;
  *(_OWORD *)(v754 + 16) = v1949;
  v756 = static SettingActions.restart.getter(v755);
  *(_QWORD *)(v754 + 32) = v756;
  v1950 = v754;
  specialized Array._endMutation()(v756);
  v757 = v1950;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v750, v751, v1941);
  v758 = v699;
  v759 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v717, v758, v1947);
  v760 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1917, 0xD00000000000001FLL, 0x8000000100A01660, v750, v717, v757);
  *(_QWORD *)(v696 + 296) = v719;
  *(_QWORD *)(v696 + 304) = v753;
  *(_QWORD *)(v696 + 272) = v760;
  v761 = static Settings.WeatherAlert.forceAlertToLowProminence.getter();
  v762 = swift_allocObject(v1942, 40, 7);
  v763 = (__n128)v1949;
  *(_OWORD *)(v762 + 16) = v1949;
  v764 = static SettingActions.restart.getter(v763);
  *(_QWORD *)(v762 + 32) = v764;
  v1950 = v762;
  specialized Array._endMutation()(v764);
  v765 = v1950;
  v766 = v751;
  v767 = v750;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v750, v766, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v717, v1943, v759);
  v768 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v761, 0xD00000000000001ELL, 0x8000000100A01680, v750, v717, v765);
  v769 = v1945;
  *(_QWORD *)(v696 + 336) = v719;
  *(_QWORD *)(v696 + 344) = v769;
  *(_QWORD *)(v696 + 312) = v768;
  if (qword_100BC2690 != -1)
    swift_once(&qword_100BC2690, sub_10015A928);
  v770 = qword_100CAF4F8;
  v771 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v771 + 16) = v1949;
  v772 = swift_retain();
  v773 = static SettingActions.restart.getter(v772);
  *(_QWORD *)(v771 + 32) = v773;
  v1950 = v771;
  specialized Array._endMutation()(v773);
  v774 = v1950;
  v775 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v750, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v717, v1943, v759);
  v776 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v770, 0xD000000000000011, 0x8000000100A016A0, v750, v717, v774);
  v777 = v1945;
  *(_QWORD *)(v696 + 376) = v719;
  *(_QWORD *)(v696 + 384) = v777;
  *(_QWORD *)(v696 + 352) = v776;
  if (qword_100BC2698 != -1)
    swift_once(&qword_100BC2698, sub_10015A5C0);
  v778 = qword_100CAF500;
  v779 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v779 + 16) = v1949;
  v780 = swift_retain();
  v781 = static SettingActions.restart.getter(v780);
  *(_QWORD *)(v779 + 32) = v781;
  v1950 = v779;
  specialized Array._endMutation()(v781);
  v782 = v1950;
  v775(v767, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v717, v1943, v1947);
  v783 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v778, 0xD000000000000023, 0x8000000100A016C0, v767, v717, v782);
  *(_QWORD *)(v696 + 416) = v719;
  *(_QWORD *)(v696 + 424) = v777;
  *(_QWORD *)(v696 + 392) = v783;
  if (qword_100BC26A0 != -1)
    swift_once(&qword_100BC26A0, sub_10015A598);
  v784 = qword_100CAF508;
  v785 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v785 + 16) = v1949;
  v786 = swift_retain();
  v787 = static SettingActions.restart.getter(v786);
  *(_QWORD *)(v785 + 32) = v787;
  v1950 = v785;
  specialized Array._endMutation()(v787);
  v788 = v1950;
  v775(v767, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v717, v1943, v1947);
  v789 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v784, 0x4951412065646948, 0xE800000000000000, v767, v717, v788);
  *(_QWORD *)(v696 + 456) = v719;
  *(_QWORD *)(v696 + 464) = v777;
  *(_QWORD *)(v696 + 432) = v789;
  v790 = v717;
  v791 = v767;
  if (qword_100BC26A8 != -1)
    swift_once(&qword_100BC26A8, sub_10015A570);
  v792 = qword_100CAF510;
  v793 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v793 + 16) = v1949;
  v794 = swift_retain();
  v795 = static SettingActions.restart.getter(v794);
  *(_QWORD *)(v793 + 32) = v795;
  v1950 = v793;
  specialized Array._endMutation()(v795);
  v796 = v1950;
  v775(v767, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v790, v1943, v1947);
  v797 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v792, 0x50484E20776F6853, 0xE800000000000000, v767, v790, v796);
  *(_QWORD *)(v696 + 496) = v719;
  *(_QWORD *)(v696 + 504) = v777;
  *(_QWORD *)(v696 + 472) = v797;
  if (qword_100BC26B0 != -1)
    swift_once(&qword_100BC26B0, sub_10015A5E8);
  v1917 = (char *)v1910 + v1931;
  v798 = qword_100CAF518;
  v799 = v1942;
  v800 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v800 + 16) = v1949;
  v801 = swift_retain();
  v802 = static SettingActions.restart.getter(v801);
  *(_QWORD *)(v800 + 32) = v802;
  v1950 = v800;
  specialized Array._endMutation()(v802);
  v803 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v767, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v790, v1943, v1947);
  v804 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v798, 0xD00000000000001DLL, 0x8000000100A016F0, v767, v790, v803);
  *(_QWORD *)(v696 + 536) = v719;
  *(_QWORD *)(v696 + 544) = v1945;
  *(_QWORD *)(v696 + 512) = v804;
  v805 = v790;
  if (qword_100BC26B8 != -1)
    swift_once(&qword_100BC26B8, sub_100824B10);
  v806 = qword_100CAF520;
  v807 = swift_allocObject(v799, 40, 7);
  *(_OWORD *)(v807 + 16) = v1949;
  v808 = swift_retain();
  v809 = static SettingActions.restart.getter(v808);
  *(_QWORD *)(v807 + 32) = v809;
  v1950 = v807;
  specialized Array._endMutation()(v809);
  v810 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v791, v1948, v1941);
  v811 = v790;
  v812 = (void (*)(char *))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v811, v1943, v1947);
  v813 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v806, 0xD000000000000026, 0x8000000100A01710, v791, v805, v810);
  *(_QWORD *)(v696 + 576) = v719;
  *(_QWORD *)(v696 + 584) = v1945;
  *(_QWORD *)(v696 + 552) = v813;
  if (qword_100BC26C0 != -1)
    swift_once(&qword_100BC26C0, sub_100824B38);
  v814 = qword_100CAF528;
  v815 = swift_allocObject(v799, 40, 7);
  *(_OWORD *)(v815 + 16) = v1949;
  v816 = swift_retain();
  v817 = static SettingActions.restart.getter(v816);
  *(_QWORD *)(v815 + 32) = v817;
  v1950 = v815;
  specialized Array._endMutation()(v817);
  v818 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v791, v1948, v1941);
  v819 = v1943;
  v812(v805);
  v820 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v814, 0xD00000000000001ALL, 0x8000000100A01740, v791, v805, v818);
  *(_QWORD *)(v696 + 616) = v719;
  *(_QWORD *)(v696 + 624) = v1945;
  *(_QWORD *)(v696 + 592) = v820;
  Group.init(title:footer:_:)(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v696);
  v821 = v719;
  if (qword_100BC26F8 != -1)
    swift_once(&qword_100BC26F8, sub_10015A610);
  v822 = qword_100CAF560;
  v823 = swift_allocObject(v1937, 192, 7);
  *(_OWORD *)(v823 + 16) = v1914;
  v824 = qword_100BC26D8;
  v1894 = (char *)v822;
  swift_retain();
  if (v824 != -1)
    swift_once(&qword_100BC26D8, sub_100824B88);
  v825 = qword_100CAF540;
  v826 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v826 + 16) = v1949;
  v827 = swift_retain();
  v828 = static SettingActions.restart.getter(v827);
  *(_QWORD *)(v826 + 32) = v828;
  v1950 = v826;
  specialized Array._endMutation()(v828);
  v829 = v1950;
  v830 = v1936;
  v831 = v1948;
  v832 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v805, v819, v1947);
  v833 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v825, 0x6C61755120726941, 0xEB00000000797469, v830, v805, v829);
  v834 = v1945;
  *(_QWORD *)(v823 + 56) = v821;
  *(_QWORD *)(v823 + 64) = v834;
  *(_QWORD *)(v823 + 32) = v833;
  if (qword_100BC26E0 != -1)
    swift_once(&qword_100BC26E0, sub_100824BB0);
  v1858 = &v1917[v1929];
  v835 = qword_100CAF548;
  v836 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v836 + 16) = v1949;
  v837 = swift_retain();
  v838 = static SettingActions.restart.getter(v837);
  *(_QWORD *)(v836 + 32) = v838;
  v1950 = v836;
  specialized Array._endMutation()(v838);
  v839 = v1950;
  v832(v830, v831, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v805, v1943, v1947);
  v840 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v835, 0x7469706963657250, 0xED00006E6F697461, v830, v805, v839);
  *(_QWORD *)(v823 + 96) = v821;
  *(_QWORD *)(v823 + 104) = v834;
  *(_QWORD *)(v823 + 72) = v840;
  v841 = v821;
  v842 = v832;
  if (qword_100BC26E8 != -1)
    swift_once(&qword_100BC26E8, sub_100824BD8);
  v1859 = v1932 + 49;
  v843 = qword_100CAF550;
  v844 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v844 + 16) = v1949;
  v845 = swift_retain();
  v846 = static SettingActions.restart.getter(v845);
  *(_QWORD *)(v844 + 32) = v846;
  v1950 = v844;
  specialized Array._endMutation()(v846);
  v847 = v1950;
  v842(v830, v831, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v805, v1943, v1947);
  v848 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v843, 0x74617265706D6554, 0xEB00000000657275, v830, v805, v847);
  *(_QWORD *)(v823 + 136) = v841;
  *(_QWORD *)(v823 + 144) = v834;
  *(_QWORD *)(v823 + 112) = v848;
  v849 = v830;
  if (qword_100BC26F0 != -1)
    swift_once(&qword_100BC26F0, sub_100824C00);
  v1855 = 4 * v1929;
  v850 = qword_100CAF558;
  v851 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v851 + 16) = v1949;
  v852 = swift_retain();
  v853 = static SettingActions.restart.getter(v852);
  *(_QWORD *)(v851 + 32) = v853;
  v1950 = v851;
  specialized Array._endMutation()(v853);
  v854 = v1950;
  v842(v830, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v805, v1943, v1947);
  v855 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v850, 1684957527, 0xE400000000000000, v830, v805, v854);
  *(_QWORD *)(v823 + 176) = v841;
  *(_QWORD *)(v823 + 184) = v834;
  *(_QWORD *)(v823 + 152) = v855;
  v1856 = 0xD000000000000012;
  Group.init(title:footer:group:_:)(0xD000000000000012);
  v856 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v856 + 16) = v1935;
  v857 = v842;
  if (qword_100BC26D0 != -1)
    swift_once(&qword_100BC26D0, sub_10015A978);
  v858 = qword_100CAF538;
  v859 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v859 + 16) = v1949;
  v860 = swift_retain();
  v861 = static SettingActions.restart.getter(v860);
  *(_QWORD *)(v859 + 32) = v861;
  v1950 = v859;
  specialized Array._endMutation()(v861);
  v862 = v1950;
  v863 = v849;
  v857(v849, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v805, v1943, v1947);
  v864 = v805;
  v865 = v862;
  v866 = v1939;
  v867 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v858, 0xD000000000000022, 0x8000000100A01780, v849, v805, v865);
  *(_QWORD *)(v856 + 56) = v866;
  *(_QWORD *)(v856 + 64) = v834;
  *(_QWORD *)(v856 + 32) = v867;
  Group.init(title:footer:_:)(0x4620796C72756F48, 0xEF7473616365726FLL, 0, 0, v856);
  v868 = v1932;
  v1932[52] = v1933;
  v868[53] = &protocol witness table for Page;
  v869 = v868;
  sub_10005F164(v1859);
  Page.init(title:_:)(0x6E6F697461636F4CLL, 0xED00007765695620, v1910);
  v1857 = v869 + 54;
  v870 = v1931;
  v1859 = (_QWORD *)(v1931 + v1855);
  v871 = swift_allocObject(v1930, v1931 + v1855, v1934);
  v1858 = (char *)v871;
  *(_OWORD *)(v871 + 16) = v1914;
  v1894 = (char *)(v871 + v870);
  v872 = v834;
  v873 = swift_allocObject(v1937, 352, 7);
  *(_OWORD *)(v873 + 16) = v1842;
  v874 = static Settings.Maps.disableMetadataCaching.getter();
  v875 = v1942;
  v876 = swift_allocObject(v1942, 40, 7);
  v877 = (__n128)v1949;
  *(_OWORD *)(v876 + 16) = v1949;
  v878 = static SettingActions.restart.getter(v877);
  *(_QWORD *)(v876 + 32) = v878;
  v1950 = v876;
  specialized Array._endMutation()(v878);
  v879 = v1950;
  v880 = v863;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v863, v1948, v1941);
  v881 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v864, v1943, v1947);
  v882 = v879;
  v883 = v1939;
  v884 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v874, 0xD000000000000018, 0x8000000100A017B0, v880, v864, v882);
  *(_QWORD *)(v873 + 56) = v883;
  *(_QWORD *)(v873 + 64) = v872;
  *(_QWORD *)(v873 + 32) = v884;
  v885 = sub_1000BA294(&qword_100BDFF08);
  v886 = static Settings.Maps.source.getter();
  v887 = v875;
  v888 = swift_allocObject(v875, 40, 7);
  v889 = (__n128)v1949;
  *(_OWORD *)(v888 + 16) = v1949;
  v890 = static SettingActions.restart.getter(v889);
  *(_QWORD *)(v888 + 32) = v890;
  v1950 = v888;
  specialized Array._endMutation()(v890);
  v891 = v1950;
  v892 = v1863;
  (*(void (**)(char *, uint64_t, uint64_t))(v1861 + 104))(v1863, v881, v1862);
  v893 = sub_100051B90(&qword_100BDFF10, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayServiceSource, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayServiceSource);
  v894 = Item<>.init(_:label:resetBehavior:actions:)(v886, 0xD000000000000019, 0x8000000100A017D0, v892, v891, v893);
  *(_QWORD *)(v873 + 96) = v885;
  *(_QWORD *)(v873 + 104) = sub_100403A2C(&qword_100BDFF18, &qword_100BDFF08);
  *(_QWORD *)(v873 + 72) = v894;
  v895 = sub_1000BA294(&qword_100BDFF20);
  v896 = static Settings.Maps.cdn.getter();
  v897 = swift_allocObject(v887, 40, 7);
  v898 = (__n128)v1949;
  *(_OWORD *)(v897 + 16) = v1949;
  v899 = static SettingActions.restart.getter(v898);
  *(_QWORD *)(v897 + 32) = v899;
  v1950 = v897;
  specialized Array._endMutation()(v899);
  v900 = v1950;
  v901 = v1906;
  v902 = v881;
  (*(void (**)(char *, uint64_t, uint64_t))(v1864 + 104))(v1906, v881, v1865);
  v903 = sub_100051B90(&qword_100BDFF28, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherMapOverlayServiceCDN, (uint64_t)&protocol conformance descriptor for WeatherMapOverlayServiceCDN);
  v1865 = 0xD00000000000001BLL;
  v904 = Item<>.init(_:label:resetBehavior:actions:)(v896, 0xD00000000000001BLL, 0x8000000100A017F0, v901, v900, v903);
  *(_QWORD *)(v873 + 136) = v895;
  *(_QWORD *)(v873 + 144) = sub_100403A2C(&qword_100BDFF30, &qword_100BDFF20);
  *(_QWORD *)(v873 + 112) = v904;
  v1910 = (_QWORD *)static Settings.Maps.useMergedPrecipitation.getter();
  v905 = v887;
  v906 = swift_allocObject(v887, 40, 7);
  v907 = (__n128)v1949;
  *(_OWORD *)(v906 + 16) = v1949;
  v908 = static SettingActions.restart.getter(v907);
  *(_QWORD *)(v906 + 32) = v908;
  v1950 = v906;
  specialized Array._endMutation()(v908);
  v909 = v1950;
  v910 = v1936;
  v911 = v1948;
  v912 = v1941;
  v913 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v914 = v1938;
  v915 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v902, v1947);
  v1917 = (char *)0xD000000000000014;
  v916 = v910;
  v917 = v909;
  v918 = v1939;
  v919 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1910, 0xD000000000000014, 0x8000000100A01810, v910, v914, v917);
  v920 = v1945;
  *(_QWORD *)(v873 + 176) = v918;
  *(_QWORD *)(v873 + 184) = v920;
  *(_QWORD *)(v873 + 152) = v919;
  v1910 = (_QWORD *)static Settings.Maps.forceSeparateRadarEndpoints.getter();
  v921 = swift_allocObject(v905, 40, 7);
  v922 = (__n128)v1949;
  *(_OWORD *)(v921 + 16) = v1949;
  v923 = static SettingActions.restart.getter(v922);
  *(_QWORD *)(v921 + 32) = v923;
  v1950 = v921;
  specialized Array._endMutation()(v923);
  v924 = v1950;
  v913(v916, v911, v912);
  v925 = v1938;
  v926 = v1943;
  v927 = v915;
  v928 = v915;
  v929 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v927);
  v930 = v924;
  v931 = v1939;
  v932 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1910, 0xD00000000000001DLL, 0x8000000100A01830, v916, v925, v930);
  *(_QWORD *)(v873 + 216) = v931;
  *(_QWORD *)(v873 + 224) = v920;
  *(_QWORD *)(v873 + 192) = v932;
  refreshed = static Settings.Maps.interactiveMapRefreshIntervalMinutes.getter();
  v934 = enum case for Item.RangeControlType.Precision.integer<A>(_:);
  v935 = sub_1000BA294(&qword_100BDFF38);
  v936 = v1904;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v935 - 8) + 104))(v1904, v934, v935);
  LODWORD(v1906) = enum case for Item.RangeControlType.slider<A>(_:);
  (*(void (**)(_QWORD *))(v1866 + 104))(v936);
  v937 = v1922;
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v926, v1921);
  v938 = v937;
  v939 = v1913;
  v940 = Item<>.init(_:label:resetBehavior:type:)(refreshed, 0xD00000000000002ALL, 0x8000000100A01850, v938, v936, &protocol witness table for Int);
  v941 = v1911;
  *(_QWORD *)(v873 + 256) = v939;
  *(_QWORD *)(v873 + 264) = v941;
  *(_QWORD *)(v873 + 232) = v940;
  v942 = static Settings.Maps.showDebugConsole.getter();
  v943 = swift_allocObject(v1942, 40, 7);
  v944 = (__n128)v1949;
  *(_OWORD *)(v943 + 16) = v1949;
  v945 = static SettingActions.restart.getter(v944);
  *(_QWORD *)(v943 + 32) = v945;
  v1950 = v943;
  specialized Array._endMutation()(v945);
  v946 = v1950;
  v947 = v1948;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v916, v1948, v1941);
  v948 = v1938;
  v929(v1938, v926, v928);
  v949 = v946;
  v950 = v1939;
  v951 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v942, v1856, 0x8000000100A01880, v916, v948, v949);
  v952 = v1945;
  *(_QWORD *)(v873 + 296) = v950;
  *(_QWORD *)(v873 + 304) = v952;
  *(_QWORD *)(v873 + 272) = v951;
  v953 = static Settings.Maps.resetLocalStoragePreset.getter();
  v954 = type metadata accessor for PresetItem(0);
  swift_allocObject(v954, *(unsigned int *)(v954 + 48), *(unsigned __int16 *)(v954 + 52));
  v1866 = 0xD000000000000015;
  v955 = PresetItem.init(_:label:actions:)(v953);
  *(_QWORD *)(v873 + 336) = v954;
  *(_QWORD *)(v873 + 344) = &protocol witness table for PresetItem;
  *(_QWORD *)(v873 + 312) = v955;
  Group.init(title:footer:_:)(0x6C6172656E6547, 0xE700000000000000, 0, 0, v873);
  v956 = v1937;
  v957 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v957 + 16) = v1928;
  v958 = static Settings.Maps.disableBlending.getter();
  v959 = v1942;
  v960 = swift_allocObject(v1942, 40, 7);
  v961 = (__n128)v1949;
  *(_OWORD *)(v960 + 16) = v1949;
  v962 = static SettingActions.restart.getter(v961);
  *(_QWORD *)(v960 + 32) = v962;
  v1950 = v960;
  specialized Array._endMutation()(v962);
  v963 = v1950;
  v964 = v1936;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1936, v947, v1941);
  v965 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v966 = v963;
  v967 = v1939;
  v968 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v958, 0xD000000000000013, 0x8000000100A019B0, v964, v965, v966);
  v969 = v1945;
  *(_QWORD *)(v957 + 56) = v967;
  *(_QWORD *)(v957 + 64) = v969;
  *(_QWORD *)(v957 + 32) = v968;
  v970 = static Settings.Maps.resetTransparentOverlaysPreset.getter();
  v971 = swift_allocObject(v959, 40, 7);
  v972 = (__n128)v1949;
  *(_OWORD *)(v971 + 16) = v1949;
  v973 = static SettingActions.restart.getter(v972);
  *(_QWORD *)(v971 + 32) = v973;
  v1950 = v971;
  specialized Array._endMutation()(v973);
  v974 = *(unsigned int *)(v954 + 48);
  v975 = *(unsigned __int16 *)(v954 + 52);
  v1862 = v954;
  swift_allocObject(v954, v974, v975);
  v1867 = 0xD000000000000017;
  v976 = PresetItem.init(_:label:actions:)(v970);
  *(_QWORD *)(v957 + 96) = v954;
  *(_QWORD *)(v957 + 104) = &protocol witness table for PresetItem;
  *(_QWORD *)(v957 + 72) = v976;
  v977 = v1917;
  v978 = Group.init(title:footer:_:)(v1917, 0x8000000100A018C0, 0xD0000000000000C9, 0x8000000100A018E0, v957);
  v1863 = &v1894[v1919];
  v1864 = static Settings.Maps.overrides.getter(v978);
  v979 = swift_allocObject(v956, 472, 7);
  *(_OWORD *)(v979 + 16) = xmmword_100989890;
  v980 = sub_1000BA294(&qword_100BDFF40);
  v1904 = (_QWORD *)type metadata accessor for Settings.Maps.Overrides(0);
  v981 = static Settings.Maps.Overrides.defaultOverlayKind.getter();
  v982 = v959;
  v983 = swift_allocObject(v959, 40, 7);
  v984 = (__n128)v1949;
  *(_OWORD *)(v983 + 16) = v1949;
  v985 = static SettingActions.restart.getter(v984);
  *(_QWORD *)(v983 + 32) = v985;
  v1950 = v983;
  specialized Array._endMutation()(v985);
  v986 = v1950;
  v987 = v1905;
  v988 = v1943;
  (*(void (**)(char *, _QWORD, _QWORD *))(v1885 + 104))(v1905, v1943, v1901);
  v989 = sub_100051B90(&qword_100BDFF48, (uint64_t (*)(uint64_t))&type metadata accessor for MapsConfiguration.OverlayKind, (uint64_t)&protocol conformance descriptor for MapsConfiguration.OverlayKind);
  v990 = v977;
  v991 = Item<>.init(_:label:resetBehavior:actions:)(v981, v977, 0x8000000100A019F0, v987, v986, v989);
  *(_QWORD *)(v979 + 56) = v980;
  *(_QWORD *)(v979 + 64) = sub_100403A2C(&qword_100BDFF50, &qword_100BDFF40);
  *(_QWORD *)(v979 + 32) = v991;
  v992 = static Settings.Maps.Overrides.disableWindOverlay.getter();
  v993 = swift_allocObject(v982, 40, 7);
  v994 = (__n128)v1949;
  *(_OWORD *)(v993 + 16) = v1949;
  v995 = static SettingActions.restart.getter(v994);
  *(_QWORD *)(v993 + 32) = v995;
  v1950 = v993;
  specialized Array._endMutation()(v995);
  v996 = v1950;
  v997 = v1915;
  ((void (*)(char *, uint64_t, _QWORD *))v1924)(v1915, v988, v1927);
  v998 = v996;
  v999 = v1918;
  v1000 = Item<>.init(_:label:resetBehavior:actions:)(v992, v990, 0x8000000100A01A10, v997, v998, v1923);
  v1001 = v1926;
  *(_QWORD *)(v979 + 96) = v999;
  *(_QWORD *)(v979 + 104) = v1001;
  *(_QWORD *)(v979 + 72) = v1000;
  v1002 = sub_1000BA294(&qword_100BDFF58);
  v1003 = static Settings.Maps.Overrides.airQualityZoomLevel.getter();
  v1004 = v1868;
  *v1868 = 1;
  v1005 = enum case for Item.RangeControlType.Precision.fraction<A>(_:);
  v1885 = sub_1000BA294(&qword_100BDFF60);
  v1901 = *(_QWORD **)(*(_QWORD *)(v1885 - 8) + 104);
  LODWORD(v1905) = v1005;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v1901)(v1004, v1005, v1885);
  v1893 = *(_QWORD *)(v1893 + 104);
  v1006 = v1906;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v1893)(v1004, v1906, v1909);
  v1910 = *(_QWORD **)(v1907 + 104);
  v1007 = v1900;
  ((void (*)(char *, _QWORD, uint64_t))v1910)(v1900, v1943, v1916);
  v1917 = (char *)v1002;
  v1008 = Item<>.init(_:label:resetBehavior:type:)(v1003, 0x6D6F6F5A20495141, 0xED00006C6576654CLL, v1007, v1004, &protocol witness table for Double);
  *(_QWORD *)(v979 + 136) = v1002;
  v1009 = sub_100403A2C(&qword_100BDFF68, &qword_100BDFF58);
  *(_QWORD *)(v979 + 144) = v1009;
  v1907 = v1009;
  *(_QWORD *)(v979 + 112) = v1008;
  v1010 = static Settings.Maps.Overrides.precipitationForecastZoomLevel.getter();
  *v1004 = 1;
  v1011 = v1005;
  v1012 = v1885;
  v1013 = (void (*)(_QWORD *, _QWORD, uint64_t))v1901;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v1901)(v1004, v1011, v1885);
  v1014 = v1006;
  v1015 = v1909;
  v1016 = (void (*)(_QWORD *, _QWORD, uint64_t))v1893;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v1893)(v1004, v1014, v1909);
  v1017 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1910)(v1007, v1943, v1916);
  v1018 = v1010;
  v1019 = v1917;
  v1020 = Item<>.init(_:label:resetBehavior:type:)(v1018, 0xD00000000000001ELL, 0x8000000100A01A30, v1007, v1004, &protocol witness table for Double);
  *(_QWORD *)(v979 + 176) = v1019;
  *(_QWORD *)(v979 + 184) = v1009;
  *(_QWORD *)(v979 + 152) = v1020;
  HourZoom = static Settings.Maps.Overrides.precipitationForecastRainsInNextHourZoomLevel.getter();
  *v1004 = 1;
  v1013(v1004, v1905, v1012);
  v1022 = v1016;
  v1016(v1004, v1906, v1015);
  v1023 = v1916;
  v1024 = v1910;
  ((void (*)(char *, uint64_t, uint64_t))v1910)(v1007, v1017, v1916);
  v1025 = HourZoom;
  v1026 = v1917;
  v1027 = Item<>.init(_:label:resetBehavior:type:)(v1025, 0xD00000000000001CLL, 0x8000000100A01A50, v1007, v1004, &protocol witness table for Double);
  v1028 = v1907;
  *(_QWORD *)(v979 + 216) = v1026;
  *(_QWORD *)(v979 + 224) = v1028;
  *(_QWORD *)(v979 + 192) = v1027;
  v1029 = static Settings.Maps.Overrides.precipitationRadarZoomLevel.getter();
  *v1004 = 1;
  v1030 = (void (*)(_QWORD *, _QWORD, uint64_t))v1901;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v1901)(v1004, v1905, v1012);
  v1022(v1004, v1906, v1909);
  ((void (*)(char *, _QWORD, uint64_t))v1024)(v1007, v1943, v1023);
  v1031 = v1029;
  v1032 = v1917;
  v1033 = Item<>.init(_:label:resetBehavior:type:)(v1031, 0xD000000000000010, 0x8000000100A01A70, v1007, v1004, &protocol witness table for Double);
  *(_QWORD *)(v979 + 256) = v1032;
  *(_QWORD *)(v979 + 264) = v1028;
  *(_QWORD *)(v979 + 232) = v1033;
  IsRainingZoom = static Settings.Maps.Overrides.precipitationRadarIsRainingZoomLevel.getter();
  *v1004 = 1;
  v1030(v1004, v1905, v1012);
  v1035 = v1906;
  v1036 = v1909;
  v1037 = (void (*)(_QWORD *, uint64_t, uint64_t))v1893;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v1893)(v1004, v1906, v1909);
  v1038 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1910)(v1007, v1943, v1916);
  v1039 = IsRainingZoom;
  v1040 = v1917;
  v1041 = Item<>.init(_:label:resetBehavior:type:)(v1039, v1865, 0x8000000100A01A90, v1007, v1004, &protocol witness table for Double);
  v1042 = v1907;
  *(_QWORD *)(v979 + 296) = v1040;
  *(_QWORD *)(v979 + 304) = v1042;
  *(_QWORD *)(v979 + 272) = v1041;
  v1043 = static Settings.Maps.Overrides.radarZoomLevelThreshold.getter();
  *v1004 = 1;
  v1044 = v1905;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v1901)(v1004, v1905, v1012);
  v1037(v1004, v1035, v1036);
  v1045 = v1916;
  v1046 = v1910;
  ((void (*)(char *, uint64_t, uint64_t))v1910)(v1007, v1038, v1916);
  v1047 = v1043;
  v1048 = v1917;
  v1049 = Item<>.init(_:label:resetBehavior:type:)(v1047, 0xD00000000000001FLL, 0x8000000100A01AB0, v1007, v1004, &protocol witness table for Double);
  v1050 = v1907;
  *(_QWORD *)(v979 + 336) = v1048;
  *(_QWORD *)(v979 + 344) = v1050;
  *(_QWORD *)(v979 + 312) = v1049;
  v1051 = static Settings.Maps.Overrides.temperatureZoomLevel.getter();
  *v1004 = 1;
  v1052 = v1012;
  v1053 = (void (*)(_QWORD *, _QWORD, uint64_t))v1901;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v1901)(v1004, v1044, v1052);
  v1054 = v1906;
  v1055 = (void (*)(_QWORD *, uint64_t, uint64_t))v1893;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v1893)(v1004, v1906, v1909);
  ((void (*)(char *, _QWORD, uint64_t))v1046)(v1007, v1943, v1045);
  v1056 = v1917;
  v1057 = Item<>.init(_:label:resetBehavior:type:)(v1051, v1866, 0x8000000100A01AD0, v1007, v1004, &protocol witness table for Double);
  *(_QWORD *)(v979 + 376) = v1056;
  *(_QWORD *)(v979 + 384) = v1050;
  *(_QWORD *)(v979 + 352) = v1057;
  v1058 = static Settings.Maps.Overrides.windZoomLevel.getter();
  *v1004 = 1;
  v1053(v1004, v1905, v1885);
  v1055(v1004, v1054, v1909);
  v1059 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1910)(v1007, v1943, v1045);
  v1060 = Item<>.init(_:label:resetBehavior:type:)(v1058, 0x6F6F5A20646E6957, 0xEE006C6576654C6DLL, v1007, v1004, &protocol witness table for Double);
  *(_QWORD *)(v979 + 416) = v1056;
  *(_QWORD *)(v979 + 424) = v1050;
  *(_QWORD *)(v979 + 392) = v1060;
  v1061 = static Settings.Maps.resetZoomLevelsPreset.getter();
  v1062 = v1862;
  swift_allocObject(v1862, *(unsigned int *)(v1862 + 48), *(unsigned __int16 *)(v1862 + 52));
  v1063 = PresetItem.init(_:label:actions:)(v1061);
  *(_QWORD *)(v979 + 456) = v1062;
  *(_QWORD *)(v979 + 464) = &protocol witness table for PresetItem;
  *(_QWORD *)(v979 + 432) = v1063;
  Group.init(title:footer:group:_:)(0x656469727265764FLL);
  v1909 = (uint64_t)&v1894[v1896];
  v1064 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v1064 + 16) = v1928;
  v1065 = static Settings.Maps.disableMapLocationAccessibilityModels.getter();
  v1066 = swift_allocObject(v1942, 40, 7);
  v1067 = (__n128)v1949;
  *(_OWORD *)(v1066 + 16) = v1949;
  v1068 = static SettingActions.restart.getter(v1067);
  *(_QWORD *)(v1066 + 32) = v1068;
  v1950 = v1066;
  specialized Array._endMutation()(v1068);
  v1069 = v1950;
  v1070 = v1936;
  v1071 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v1072 = v1938;
  v1073 = v1059;
  v1074 = (void (*)(char *, uint64_t, uint64_t))v1946;
  v1075 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1073, v1947);
  v1076 = v1065;
  v1077 = v1939;
  v1078 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1076, 0xD000000000000024, 0x8000000100A01B10, v1070, v1072, v1069);
  v1079 = v1945;
  *(_QWORD *)(v1064 + 56) = v1077;
  *(_QWORD *)(v1064 + 64) = v1079;
  *(_QWORD *)(v1064 + 32) = v1078;
  v1906 = (char *)static Settings.Maps.disableMapOverlaySonification.getter();
  v1080 = swift_allocObject(v1942, 40, 7);
  v1081 = (__n128)v1949;
  *(_OWORD *)(v1080 + 16) = v1949;
  v1082 = static SettingActions.restart.getter(v1081);
  *(_QWORD *)(v1080 + 32) = v1082;
  v1950 = v1080;
  specialized Array._endMutation()(v1082);
  v1083 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1071);
  v1084 = v1943;
  v1074(v1072, v1943, v1075);
  v1085 = v1074;
  v1086 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1906, 0xD000000000000020, 0x8000000100A01B40, v1070, v1072, v1083);
  *(_QWORD *)(v1064 + 96) = v1077;
  *(_QWORD *)(v1064 + 104) = v1079;
  *(_QWORD *)(v1064 + 72) = v1086;
  Group.init(title:footer:_:)(0x6269737365636341, 0xED00007974696C69, 0, 0, v1064);
  v1087 = v1932;
  v1932[57] = v1933;
  v1087[58] = &protocol witness table for Page;
  sub_10005F164(v1857);
  Page.init(title:_:)(1936744781, 0xE400000000000000, v1858);
  v1088 = swift_allocObject(v1930, v1895, v1934);
  *(_OWORD *)(v1088 + 16) = v1928;
  v1089 = swift_allocObject(v1937, 152, 7);
  *(_OWORD *)(v1089 + 16) = v1920;
  v1090 = v1941;
  if (qword_100BC2390 != -1)
    swift_once(&qword_100BC2390, sub_100683DA4);
  v1906 = (char *)v1088;
  v1909 = v1088 + v1931;
  v1091 = qword_100CAEF50;
  v1092 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1092 + 16) = v1949;
  v1093 = swift_retain();
  v1094 = static SettingActions.restart.getter(v1093);
  *(_QWORD *)(v1092 + 32) = v1094;
  v1950 = v1092;
  specialized Array._endMutation()(v1094);
  v1095 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  v1096 = v1938;
  v1085(v1938, v1084, v1075);
  v1097 = v1095;
  v1098 = v1939;
  v1099 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1091, v1867, 0x8000000100A01B70, v1070, v1096, v1097);
  v1100 = v1945;
  *(_QWORD *)(v1089 + 56) = v1098;
  *(_QWORD *)(v1089 + 64) = v1100;
  *(_QWORD *)(v1089 + 32) = v1099;
  if (qword_100BC2398 != -1)
    swift_once(&qword_100BC2398, sub_100683DC4);
  v1101 = qword_100CAEF58;
  v1102 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1102 + 16) = v1949;
  v1103 = swift_retain();
  v1104 = static SettingActions.restart.getter(v1103);
  *(_QWORD *)(v1102 + 32) = v1104;
  v1950 = v1102;
  specialized Array._endMutation()(v1104);
  v1105 = v1950;
  v1106 = v1948;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  v1107 = v1922;
  ((void (*)(_QWORD, uint64_t, uint64_t))v1912)(v1922, v1084, v1921);
  v1108 = v1105;
  v1109 = v1913;
  v1110 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1101, 0xD000000000000015, 0x8000000100A01B90, v1070, v1107, v1108);
  v1111 = v1911;
  *(_QWORD *)(v1089 + 96) = v1109;
  *(_QWORD *)(v1089 + 104) = v1111;
  *(_QWORD *)(v1089 + 72) = v1110;
  if (qword_100BC23A0 != -1)
    swift_once(&qword_100BC23A0, sub_100683E68);
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1070, v1106, v1090);
  v1112 = v1938;
  v1085(v1938, v1084, v1947);
  swift_retain();
  v1113 = v1939;
  v1115 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1114, 0xD00000000000001ALL, 0x8000000100A01BB0, v1070, v1112, _swiftEmptyArrayStorage);
  v1116 = v1945;
  *(_QWORD *)(v1089 + 136) = v1113;
  *(_QWORD *)(v1089 + 144) = v1116;
  *(_QWORD *)(v1089 + 112) = v1115;
  Group.init(title:footer:_:)(0x656469727265764FLL, 0xE900000000000073, 0, 0, v1089);
  if (qword_100BC2388 != -1)
    swift_once(&qword_100BC2388, sub_10015ACC8);
  v1117 = qword_100CAEF48;
  v1118 = swift_allocObject(v1937, 632, 7);
  *(_OWORD *)(v1118 + 16) = v1860;
  v1119 = qword_100BC2310;
  v1905 = (char *)v1117;
  swift_retain();
  v1120 = v1942;
  if (v1119 != -1)
    swift_once(&qword_100BC2310, sub_100683BBC);
  v1121 = qword_100CAEED0;
  v1122 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1122 + 16) = v1949;
  v1123 = qword_100BC27E0;
  swift_retain();
  if (v1123 != -1)
    v1124 = swift_once(&qword_100BC27E0, sub_1008E73BC);
  *(_QWORD *)(v1122 + 32) = qword_100CAF648;
  v1950 = v1122;
  specialized Array._endMutation()(v1124);
  v1125 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  v1126 = v1938;
  v1085(v1938, v1084, v1947);
  swift_retain();
  v1127 = v1939;
  v1128 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1121, 0xD000000000000022, 0x8000000100A01C40, v1070, v1126, v1125);
  v1129 = v1945;
  *(_QWORD *)(v1118 + 56) = v1127;
  *(_QWORD *)(v1118 + 64) = v1129;
  *(_QWORD *)(v1118 + 32) = v1128;
  if (qword_100BC2318 != -1)
    swift_once(&qword_100BC2318, sub_100683BDC);
  v1130 = qword_100CAEED8;
  v1131 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1131 + 16) = v1949;
  *(_QWORD *)(v1131 + 32) = qword_100CAF648;
  v1950 = v1131;
  specialized Array._endMutation()(v1131);
  v1132 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1133 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1130, 0xD000000000000021, 0x8000000100A01C70, v1070, v1126, v1132);
  v1134 = v1945;
  *(_QWORD *)(v1118 + 96) = v1127;
  *(_QWORD *)(v1118 + 104) = v1134;
  *(_QWORD *)(v1118 + 72) = v1133;
  if (qword_100BC2320 != -1)
    swift_once(&qword_100BC2320, sub_100683BFC);
  v1135 = qword_100CAEEE0;
  v1136 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1136 + 16) = v1949;
  *(_QWORD *)(v1136 + 32) = qword_100CAF648;
  v1950 = v1136;
  specialized Array._endMutation()(v1136);
  v1137 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1138 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1135, 0xD00000000000001FLL, 0x8000000100A01CA0, v1070, v1126, v1137);
  v1139 = v1945;
  *(_QWORD *)(v1118 + 136) = v1127;
  *(_QWORD *)(v1118 + 144) = v1139;
  *(_QWORD *)(v1118 + 112) = v1138;
  if (qword_100BC2328 != -1)
    swift_once(&qword_100BC2328, sub_100683C1C);
  v1140 = qword_100CAEEE8;
  v1141 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1141 + 16) = v1949;
  *(_QWORD *)(v1141 + 32) = qword_100CAF648;
  v1950 = v1141;
  specialized Array._endMutation()(v1141);
  v1142 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1143 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1140, 0xD00000000000001BLL, 0x8000000100A01CC0, v1070, v1126, v1142);
  v1144 = v1945;
  *(_QWORD *)(v1118 + 176) = v1127;
  *(_QWORD *)(v1118 + 184) = v1144;
  *(_QWORD *)(v1118 + 152) = v1143;
  if (qword_100BC2330 != -1)
    swift_once(&qword_100BC2330, sub_100683C3C);
  v1145 = qword_100CAEEF0;
  v1146 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1146 + 16) = v1949;
  *(_QWORD *)(v1146 + 32) = qword_100CAF648;
  v1950 = v1146;
  specialized Array._endMutation()(v1146);
  v1147 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1148 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1145, 0xD000000000000024, 0x8000000100A01CE0, v1070, v1126, v1147);
  v1149 = v1945;
  *(_QWORD *)(v1118 + 216) = v1127;
  *(_QWORD *)(v1118 + 224) = v1149;
  *(_QWORD *)(v1118 + 192) = v1148;
  if (qword_100BC2338 != -1)
    swift_once(&qword_100BC2338, sub_100683C5C);
  v1150 = qword_100CAEEF8;
  v1151 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1151 + 16) = v1949;
  *(_QWORD *)(v1151 + 32) = qword_100CAF648;
  v1950 = v1151;
  specialized Array._endMutation()(v1151);
  v1152 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1153 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1150, 0xD00000000000002DLL, 0x8000000100A01D10, v1070, v1126, v1152);
  v1154 = v1945;
  *(_QWORD *)(v1118 + 256) = v1127;
  *(_QWORD *)(v1118 + 264) = v1154;
  *(_QWORD *)(v1118 + 232) = v1153;
  if (qword_100BC2340 != -1)
    swift_once(&qword_100BC2340, sub_100683C7C);
  v1155 = qword_100CAEF00;
  v1156 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1156 + 16) = v1949;
  *(_QWORD *)(v1156 + 32) = qword_100CAF648;
  v1950 = v1156;
  specialized Array._endMutation()(v1156);
  v1157 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1158 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1155, 0xD00000000000001FLL, 0x8000000100A01D40, v1070, v1126, v1157);
  v1159 = v1945;
  *(_QWORD *)(v1118 + 296) = v1127;
  *(_QWORD *)(v1118 + 304) = v1159;
  *(_QWORD *)(v1118 + 272) = v1158;
  if (qword_100BC2348 != -1)
    swift_once(&qword_100BC2348, sub_100683C9C);
  v1160 = qword_100CAEF08;
  v1161 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1161 + 16) = v1949;
  *(_QWORD *)(v1161 + 32) = qword_100CAF648;
  v1950 = v1161;
  specialized Array._endMutation()(v1161);
  v1162 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1163 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1160, 0xD000000000000016, 0x8000000100A01D60, v1070, v1126, v1162);
  v1164 = v1945;
  *(_QWORD *)(v1118 + 336) = v1127;
  *(_QWORD *)(v1118 + 344) = v1164;
  *(_QWORD *)(v1118 + 312) = v1163;
  if (qword_100BC2358 != -1)
    swift_once(&qword_100BC2358, sub_100683CDC);
  v1165 = qword_100CAEF18;
  v1166 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1166 + 16) = v1949;
  *(_QWORD *)(v1166 + 32) = qword_100CAF648;
  v1950 = v1166;
  specialized Array._endMutation()(v1166);
  v1167 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1168 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1165, 0xD000000000000022, 0x8000000100A01D80, v1070, v1126, v1167);
  v1169 = v1945;
  *(_QWORD *)(v1118 + 376) = v1127;
  *(_QWORD *)(v1118 + 384) = v1169;
  *(_QWORD *)(v1118 + 352) = v1168;
  if (qword_100BC2350 != -1)
    swift_once(&qword_100BC2350, sub_100683CBC);
  v1170 = qword_100CAEF10;
  v1171 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1171 + 16) = v1949;
  *(_QWORD *)(v1171 + 32) = qword_100CAF648;
  v1950 = v1171;
  specialized Array._endMutation()(v1171);
  v1172 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1173 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1170, 0xD000000000000027, 0x8000000100A01DB0, v1070, v1126, v1172);
  v1174 = v1945;
  *(_QWORD *)(v1118 + 416) = v1127;
  *(_QWORD *)(v1118 + 424) = v1174;
  *(_QWORD *)(v1118 + 392) = v1173;
  if (qword_100BC2360 != -1)
    swift_once(&qword_100BC2360, sub_100683CFC);
  v1175 = qword_100CAEF20;
  v1176 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1176 + 16) = v1949;
  *(_QWORD *)(v1176 + 32) = qword_100CAF648;
  v1950 = v1176;
  specialized Array._endMutation()(v1176);
  v1177 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1178 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1175, 0xD00000000000002BLL, 0x8000000100A01DE0, v1070, v1126, v1177);
  v1179 = v1945;
  *(_QWORD *)(v1118 + 456) = v1127;
  *(_QWORD *)(v1118 + 464) = v1179;
  *(_QWORD *)(v1118 + 432) = v1178;
  if (qword_100BC2368 != -1)
    swift_once(&qword_100BC2368, sub_100683D1C);
  v1180 = qword_100CAEF28;
  v1181 = swift_allocObject(v1120, 40, 7);
  *(_OWORD *)(v1181 + 16) = v1949;
  *(_QWORD *)(v1181 + 32) = qword_100CAF648;
  v1950 = v1181;
  specialized Array._endMutation()(v1181);
  v1182 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1126, v1084, v1947);
  swift_retain();
  swift_retain();
  v1183 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1180, 0xD000000000000015, 0x8000000100A01E10, v1070, v1126, v1182);
  v1184 = v1945;
  *(_QWORD *)(v1118 + 496) = v1127;
  *(_QWORD *)(v1118 + 504) = v1184;
  *(_QWORD *)(v1118 + 472) = v1183;
  v1185 = v1090;
  v1186 = v1120;
  v1187 = v1127;
  if (qword_100BC2370 != -1)
    swift_once(&qword_100BC2370, sub_100683D3C);
  v1904 = v1932 + 59;
  v1909 += v1929;
  v1188 = qword_100CAEF30;
  v1189 = swift_allocObject(v1186, 40, 7);
  *(_OWORD *)(v1189 + 16) = v1949;
  *(_QWORD *)(v1189 + 32) = qword_100CAF648;
  v1950 = v1189;
  specialized Array._endMutation()(v1189);
  v1190 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1126, v1943, v1947);
  swift_retain();
  swift_retain();
  v1191 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1188, 0xD000000000000018, 0x8000000100A01E30, v1070, v1126, v1190);
  *(_QWORD *)(v1118 + 536) = v1127;
  *(_QWORD *)(v1118 + 544) = v1945;
  *(_QWORD *)(v1118 + 512) = v1191;
  if (qword_100BC2378 != -1)
    swift_once(&qword_100BC2378, sub_100683D5C);
  v1192 = qword_100CAEF38;
  v1193 = swift_allocObject(v1186, 40, 7);
  *(_OWORD *)(v1193 + 16) = v1949;
  *(_QWORD *)(v1193 + 32) = qword_100CAF648;
  v1950 = v1193;
  specialized Array._endMutation()(v1193);
  v1194 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1126, v1943, v1947);
  swift_retain();
  swift_retain();
  v1195 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1192, 0xD000000000000021, 0x8000000100A01E50, v1070, v1126, v1194);
  *(_QWORD *)(v1118 + 576) = v1127;
  *(_QWORD *)(v1118 + 584) = v1945;
  *(_QWORD *)(v1118 + 552) = v1195;
  if (qword_100BC2380 != -1)
    swift_once(&qword_100BC2380, sub_100683D7C);
  v1196 = qword_100CAEF40;
  v1197 = swift_allocObject(v1186, 40, 7);
  *(_OWORD *)(v1197 + 16) = v1949;
  *(_QWORD *)(v1197 + 32) = qword_100CAF648;
  v1950 = v1197;
  specialized Array._endMutation()(v1197);
  v1198 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1090);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1126, v1943, v1947);
  swift_retain();
  swift_retain();
  v1199 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1196, 0xD00000000000001BLL, 0x8000000100A01E80, v1070, v1126, v1198);
  *(_QWORD *)(v1118 + 616) = v1127;
  *(_QWORD *)(v1118 + 624) = v1945;
  *(_QWORD *)(v1118 + 592) = v1199;
  Group.init(title:footer:group:_:)(0xD000000000000013);
  v1200 = v1932;
  v1932[62] = v1933;
  v1200[63] = &protocol witness table for Page;
  sub_10005F164(v1904);
  Page.init(title:_:)(1937204558, 0xE400000000000000, v1906);
  v1201 = v1200 + 64;
  v1202 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v1202 + 16) = v1935;
  v1203 = v1931;
  v1204 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v1204 + 16) = v1928;
  if (qword_100BC1F10 != -1)
    swift_once(&qword_100BC1F10, sub_10015B0AC);
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1185);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1126, v1943, v1947);
  swift_retain();
  v1206 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1205, 0x656C776F6E6B6341, 0xEC00000064656764, v1070, v1126, _swiftEmptyArrayStorage);
  v1207 = v1945;
  *(_QWORD *)(v1204 + 56) = v1187;
  *(_QWORD *)(v1204 + 64) = v1207;
  *(_QWORD *)(v1204 + 32) = v1206;
  if (qword_100BC1F18 != -1)
    swift_once(&qword_100BC1F18, sub_100267098);
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1070, v1948, v1185);
  v1208 = v1922;
  v1209 = v1943;
  ((void (*)(_QWORD, _QWORD, uint64_t))v1912)(v1922, v1943, v1921);
  swift_retain();
  v1210 = v1913;
  v1212 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1211, 0xD000000000000019, 0x8000000100A01F40, v1070, v1208, _swiftEmptyArrayStorage);
  v1213 = v1911;
  *(_QWORD *)(v1204 + 96) = v1210;
  *(_QWORD *)(v1204 + 104) = v1213;
  *(_QWORD *)(v1204 + 72) = v1212;
  Group.init(title:footer:_:)(0xD000000000000023, 0x8000000100A01EC0, 0xD000000000000041, 0x8000000100A01EF0, v1204);
  v1214 = v1932;
  v1932[67] = v1933;
  v1214[68] = &protocol witness table for Page;
  sub_10005F164(v1201);
  Page.init(title:_:)(0xD000000000000014, 0x8000000100A01EA0, v1202);
  v1215 = swift_allocObject(v1930, v1859, v1934);
  *(_OWORD *)(v1215 + 16) = v1914;
  v1921 = v1215;
  v1216 = v1215 + v1203;
  v1217 = v1937;
  v1218 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v1218 + 16) = v1935;
  if (qword_100BC2148 != -1)
    swift_once(&qword_100BC2148, sub_1004EBB18);
  v1219 = qword_100CAEC68;
  v1220 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1220 + 16) = v1949;
  v1221 = swift_retain();
  v1222 = static SettingActions.restart.getter(v1221);
  *(_QWORD *)(v1220 + 32) = v1222;
  v1950 = v1220;
  specialized Array._endMutation()(v1222);
  v1223 = v1950;
  v1224 = v1915;
  ((void (*)(char *, uint64_t, _QWORD *))v1924)(v1915, v1209, v1927);
  v1225 = v1223;
  v1226 = v1918;
  v1227 = Item<>.init(_:label:resetBehavior:actions:)(v1219, 0xD00000000000001DLL, 0x8000000100A01F80, v1224, v1225, v1923);
  v1228 = v1926;
  *(_QWORD *)(v1218 + 56) = v1226;
  *(_QWORD *)(v1218 + 64) = v1228;
  *(_QWORD *)(v1218 + 32) = v1227;
  Group.init(title:footer:_:)(0x6974616D6F747541, 0xEA00000000006E6FLL, 0, 0, v1218);
  v1913 = v1216 + v1929;
  v1229 = v1216;
  v1230 = swift_allocObject(v1217, 112, 7);
  *(_OWORD *)(v1230 + 16) = v1928;
  v1231 = sub_1000BA294(&qword_100BDFF70);
  v1232 = v1209;
  v1233 = v1947;
  if (qword_100BC2138 != -1)
    swift_once(&qword_100BC2138, sub_1004EB7A4);
  v1234 = v1871;
  (*(void (**)(char *, uint64_t, uint64_t))(v1869 + 104))(v1871, v1232, v1870);
  v1235 = sub_1004039F0();
  swift_retain();
  *(_QWORD *)&v1922 = 0xD000000000000011;
  v1237 = Item<>.init(_:label:resetBehavior:actions:)(v1236, 0xD000000000000011, 0x8000000100A01FA0, v1234, _swiftEmptyArrayStorage, v1235);
  *(_QWORD *)(v1230 + 56) = v1231;
  *(_QWORD *)(v1230 + 64) = sub_100403A2C(&qword_100BDFF80, &qword_100BDFF70);
  *(_QWORD *)(v1230 + 32) = v1237;
  Hour = static Settings.StubData.includeNextHourPrecipitation.getter();
  v1239 = v1936;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v1240 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1232, v1233);
  v1241 = Hour;
  v1242 = v1939;
  v1243 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1241, 0xD00000000000001FLL, 0x8000000100A01FC0, v1239, v1240, _swiftEmptyArrayStorage);
  v1244 = v1945;
  *(_QWORD *)(v1230 + 96) = v1242;
  *(_QWORD *)(v1230 + 104) = v1244;
  *(_QWORD *)(v1230 + 72) = v1243;
  Group.init(title:footer:_:)(0x7461442062757453, 0xE900000000000061, 0, 0, v1230);
  v1913 = v1229;
  v1245 = swift_allocObject(v1217, 72, 7);
  *(_OWORD *)(v1245 + 16) = v1935;
  if (qword_100BC2150 != -1)
    swift_once(&qword_100BC2150, sub_1004EBB40);
  v1246 = qword_100CAEC70;
  v1247 = v1942;
  v1248 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1248 + 16) = v1949;
  v1249 = swift_retain();
  v1250 = static SettingActions.restart.getter(v1249);
  *(_QWORD *)(v1248 + 32) = v1250;
  v1950 = v1248;
  specialized Array._endMutation()(v1250);
  v1251 = v1950;
  v1252 = v1915;
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1915, v1943, v1927);
  v1253 = v1918;
  v1254 = Item<>.init(_:label:resetBehavior:actions:)(v1246, 0xD000000000000017, 0x8000000100A02000, v1252, v1251, v1923);
  v1255 = v1926;
  *(_QWORD *)(v1245 + 56) = v1253;
  *(_QWORD *)(v1245 + 64) = v1255;
  *(_QWORD *)(v1245 + 32) = v1254;
  Group.init(title:footer:_:)(v1922, 0x8000000100A01FE0, 0, 0, v1245);
  v1256 = swift_allocObject(v1217, 272, 7);
  v1922 = xmmword_10098C1A0;
  *(_OWORD *)(v1256 + 16) = xmmword_10098C1A0;
  if (qword_100BC2158 != -1)
    swift_once(&qword_100BC2158, sub_10015B1A4);
  v1257 = qword_100CAEC78;
  v1258 = swift_allocObject(v1247, 40, 7);
  *(_OWORD *)(v1258 + 16) = v1949;
  v1259 = swift_retain();
  v1260 = static SettingActions.restart.getter(v1259);
  *(_QWORD *)(v1258 + 32) = v1260;
  v1950 = v1258;
  specialized Array._endMutation()(v1260);
  v1261 = v1950;
  v1262 = v1943;
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1252, v1943, v1927);
  v1263 = Item<>.init(_:label:resetBehavior:actions:)(v1257, 0x4820796B63697453, 0xEE00737265646165, v1252, v1261, v1923);
  v1264 = v1926;
  *(_QWORD *)(v1256 + 56) = v1253;
  *(_QWORD *)(v1256 + 64) = v1264;
  *(_QWORD *)(v1256 + 32) = v1263;
  v1265 = v1932;
  if (qword_100BC2160 != -1)
    swift_once(&qword_100BC2160, sub_10015B1CC);
  v1266 = qword_100CAEC80;
  v1267 = swift_allocObject(v1247, 40, 7);
  *(_OWORD *)(v1267 + 16) = v1949;
  v1268 = swift_retain();
  v1269 = static SettingActions.restart.getter(v1268);
  *(_QWORD *)(v1267 + 32) = v1269;
  v1950 = v1267;
  specialized Array._endMutation()(v1269);
  v1270 = v1950;
  ((void (*)(char *, uint64_t, _QWORD *))v1924)(v1252, v1262, v1927);
  v1271 = Item<>.init(_:label:resetBehavior:actions:)(v1266, 0x74614D2072756C42, 0xEE00736C61697265, v1252, v1270, v1923);
  v1272 = v1926;
  *(_QWORD *)(v1256 + 96) = v1253;
  *(_QWORD *)(v1256 + 104) = v1272;
  *(_QWORD *)(v1256 + 72) = v1271;
  if (qword_100BC2168 != -1)
    swift_once(&qword_100BC2168, sub_10015B17C);
  v1912 = v1265 + 69;
  v1913 += v1896;
  v1273 = qword_100CAEC88;
  v1274 = swift_allocObject(v1247, 40, 7);
  *(_OWORD *)(v1274 + 16) = v1949;
  v1275 = swift_retain();
  v1276 = static SettingActions.restart.getter(v1275);
  *(_QWORD *)(v1274 + 32) = v1276;
  v1950 = v1274;
  specialized Array._endMutation()(v1276);
  v1277 = v1950;
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1252, v1943, v1927);
  v1278 = Item<>.init(_:label:resetBehavior:actions:)(v1273, 0x737472616843, 0xE600000000000000, v1252, v1277, v1923);
  v1279 = v1926;
  *(_QWORD *)(v1256 + 136) = v1253;
  *(_QWORD *)(v1256 + 144) = v1279;
  *(_QWORD *)(v1256 + 112) = v1278;
  if (qword_100BC2170 != -1)
    swift_once(&qword_100BC2170, sub_10015B154);
  v1280 = qword_100CAEC90;
  v1281 = swift_allocObject(v1247, 40, 7);
  *(_OWORD *)(v1281 + 16) = v1949;
  v1282 = swift_retain();
  v1283 = static SettingActions.restart.getter(v1282);
  *(_QWORD *)(v1281 + 32) = v1283;
  v1950 = v1281;
  specialized Array._endMutation()(v1283);
  v1284 = v1950;
  v1285 = v1247;
  v1286 = v1943;
  v1287 = v1927;
  v1288 = v1924;
  ((void (*)(char *, _QWORD, _QWORD *))v1924)(v1252, v1943, v1927);
  v1289 = v1280;
  v1290 = v1923;
  v1291 = v1918;
  v1292 = Item<>.init(_:label:resetBehavior:actions:)(v1289, 0x65626D452070614DLL, 0xE900000000000064, v1252, v1284, v1923);
  v1293 = v1926;
  *(_QWORD *)(v1256 + 176) = v1291;
  *(_QWORD *)(v1256 + 184) = v1293;
  *(_QWORD *)(v1256 + 152) = v1292;
  v1911 = static Settings.VFX.foregroundEffects.getter();
  v1294 = swift_allocObject(v1285, 40, 7);
  v1295 = (__n128)v1949;
  *(_OWORD *)(v1294 + 16) = v1949;
  v1296 = static SettingActions.restart.getter(v1295);
  *(_QWORD *)(v1294 + 32) = v1296;
  v1950 = v1294;
  specialized Array._endMutation()(v1296);
  v1297 = v1950;
  ((void (*)(char *, uint64_t, _QWORD *))v1288)(v1252, v1286, v1287);
  v1298 = Item<>.init(_:label:resetBehavior:actions:)(v1911, 0xD000000000000012, 0x8000000100A02020, v1252, v1297, v1290);
  v1299 = v1926;
  *(_QWORD *)(v1256 + 216) = v1291;
  *(_QWORD *)(v1256 + 224) = v1299;
  *(_QWORD *)(v1256 + 192) = v1298;
  if (qword_100BC2178 != -1)
    swift_once(&qword_100BC2178, sub_1004EBBA4);
  v1300 = qword_100CAEC98;
  v1301 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1301 + 16) = v1949;
  v1302 = swift_retain();
  v1303 = static SettingActions.restart.getter(v1302);
  *(_QWORD *)(v1301 + 32) = v1303;
  v1950 = v1301;
  specialized Array._endMutation()(v1303);
  v1304 = v1950;
  v1305 = v1943;
  ((void (*)(char *, _QWORD, _QWORD *))v1288)(v1252, v1943, v1927);
  v1306 = v1304;
  v1307 = v1918;
  v1308 = Item<>.init(_:label:resetBehavior:actions:)(v1300, 0xD000000000000016, 0x8000000100A02040, v1252, v1306, v1290);
  v1309 = v1926;
  *(_QWORD *)(v1256 + 256) = v1307;
  *(_QWORD *)(v1256 + 264) = v1309;
  *(_QWORD *)(v1256 + 232) = v1308;
  Group.init(title:footer:_:)(0x7365727574616546, 0xE800000000000000, 0, 0, v1256);
  v1310 = v1932;
  v1932[72] = v1933;
  v1310[73] = &protocol witness table for Page;
  v1311 = v1310;
  sub_10005F164(v1912);
  Page.init(title:_:)(0xD000000000000010, 0x8000000100A01F60, v1921);
  v1926 = v1311 + 74;
  v1312 = swift_allocObject(v1930, v1895, v1934);
  v1927 = (_QWORD *)v1312;
  *(_OWORD *)(v1312 + 16) = v1928;
  v1313 = v1312 + v1931;
  v1314 = v1937;
  v1315 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v1315 + 16) = v1935;
  v1316 = static Settings.Notifications.Precipitation.evaluate.getter();
  v1317 = v1936;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v1318 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1305, v1947);
  v1319 = v1316;
  v1320 = v1939;
  v1321 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1319, 0xD00000000000001DLL, 0x8000000100A02080, v1317, v1318, _swiftEmptyArrayStorage);
  v1322 = v1945;
  *(_QWORD *)(v1315 + 56) = v1320;
  *(_QWORD *)(v1315 + 64) = v1322;
  *(_QWORD *)(v1315 + 32) = v1321;
  v1323 = Group.init(title:footer:_:)(0x6E69676775626544, v1886, 0, 0, v1315);
  v1923 = (_QWORD *)(v1313 + v1929);
  v1924 = (_QWORD *)static Settings.Notifications.Precipitation.overrides.getter(v1323);
  v1324 = swift_allocObject(v1314, 232, 7);
  *(_OWORD *)(v1324 + 16) = v1908;
  v1325 = sub_1000BA294(&qword_100BDFF88);
  type metadata accessor for Settings.Notifications.Precipitation.Overrides(0);
  v1326 = static Settings.Notifications.Precipitation.Overrides.location.getter();
  v1327 = v1874;
  (*(void (**)(char *, uint64_t, uint64_t))(v1872 + 104))(v1874, v1305, v1873);
  v1328 = sub_100051B90(&qword_100BDFF90, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Location, (uint64_t)&protocol conformance descriptor for Settings.Notifications.Precipitation.Overrides.Location);
  v1329 = Item<>.init(_:label:resetBehavior:actions:)(v1326, 0x6E6F697461636F4CLL, 0xE800000000000000, v1327, _swiftEmptyArrayStorage, v1328);
  *(_QWORD *)(v1324 + 56) = v1325;
  *(_QWORD *)(v1324 + 64) = sub_100403A2C(&qword_100BDFF98, &qword_100BDFF88);
  *(_QWORD *)(v1324 + 32) = v1329;
  v1330 = sub_1000BA294(&qword_100BDFFA0);
  v1331 = static Settings.Notifications.Precipitation.Overrides.currentCondition.getter();
  v1332 = *(void (**)(char *, uint64_t, uint64_t))(v1875 + 104);
  v1333 = v1876;
  v1334 = v1877;
  v1332(v1876, v1305, v1877);
  v1335 = sub_100051B90(&qword_100BDFFA8, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Conditions, (uint64_t)&protocol conformance descriptor for Settings.Notifications.Precipitation.Overrides.Conditions);
  v1336 = Item<>.init(_:label:resetBehavior:actions:)(v1331, 0xD000000000000011, 0x8000000100A020D0, v1333, _swiftEmptyArrayStorage, v1335);
  *(_QWORD *)(v1324 + 96) = v1330;
  v1337 = sub_100403A2C(&qword_100BDFFB0, &qword_100BDFFA0);
  *(_QWORD *)(v1324 + 104) = v1337;
  *(_QWORD *)(v1324 + 72) = v1336;
  v1338 = static Settings.Notifications.Precipitation.Overrides.nextCondition.getter();
  v1332(v1333, v1305, v1334);
  v1339 = Item<>.init(_:label:resetBehavior:actions:)(v1338, 0x6E6F43207478654ELL, 0xEE006E6F69746964, v1333, _swiftEmptyArrayStorage, v1335);
  *(_QWORD *)(v1324 + 136) = v1330;
  *(_QWORD *)(v1324 + 144) = v1337;
  *(_QWORD *)(v1324 + 112) = v1339;
  v1340 = sub_1000BA294(&qword_100BDFFB8);
  v1341 = static Settings.Notifications.Precipitation.Overrides.intensity.getter();
  v1342 = v1880;
  (*(void (**)(char *, uint64_t, uint64_t))(v1878 + 104))(v1880, v1305, v1879);
  v1343 = sub_100051B90(&qword_100BDFFC0, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Intensity, (uint64_t)&protocol conformance descriptor for Settings.Notifications.Precipitation.Overrides.Intensity);
  v1344 = Item<>.init(_:label:resetBehavior:actions:)(v1341, 0x7469736E65746E49, 0xE900000000000079, v1342, _swiftEmptyArrayStorage, v1343);
  *(_QWORD *)(v1324 + 176) = v1340;
  *(_QWORD *)(v1324 + 184) = sub_100403A2C(&qword_100BDFFC8, &qword_100BDFFB8);
  *(_QWORD *)(v1324 + 152) = v1344;
  v1345 = sub_1000BA294(&qword_100BDFFD0);
  v1346 = static Settings.Notifications.Precipitation.Overrides.date.getter();
  v1347 = v1883;
  (*(void (**)(char *, uint64_t, uint64_t))(v1881 + 104))(v1883, v1305, v1882);
  v1348 = sub_100051B90(&qword_100BDFFD8, (uint64_t (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.EventDate, (uint64_t)&protocol conformance descriptor for Settings.Notifications.Precipitation.Overrides.EventDate);
  v1349 = Item<>.init(_:label:resetBehavior:actions:)(v1346, 1702125892, 0xE400000000000000, v1347, _swiftEmptyArrayStorage, v1348);
  *(_QWORD *)(v1324 + 216) = v1345;
  *(_QWORD *)(v1324 + 224) = sub_100403A2C(&qword_100BDFFE0, &qword_100BDFFD0);
  *(_QWORD *)(v1324 + 192) = v1349;
  Group.init(title:footer:group:_:)(0xD000000000000024);
  v1350 = v1932;
  v1932[77] = v1933;
  v1350[78] = &protocol witness table for Page;
  v1351 = v1350;
  sub_10005F164(v1926);
  Page.init(title:_:)(0xD00000000000001BLL, 0x8000000100A02060, v1927);
  v1927 = v1351 + 79;
  v1352 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v1352 + 16) = v1935;
  v1926 = (_QWORD *)(v1352 + v1931);
  v1353 = swift_allocObject(v1937, 112, 7);
  *(_OWORD *)(v1353 + 16) = v1928;
  v1354 = v1305;
  if (qword_100BC2088 != -1)
    swift_once(&qword_100BC2088, sub_10015B3B4);
  v1355 = v1936;
  v1356 = v1948;
  v1357 = v1941;
  v1358 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1941);
  v1359 = v1900;
  ((void (*)(char *, uint64_t, uint64_t))v1910)(v1900, v1354, v1916);
  swift_retain();
  v1360 = v1359;
  v1361 = v1917;
  v1363 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1362, 0xD000000000000013, 0x8000000100A020F0, v1355, v1360, _swiftEmptyArrayStorage);
  v1364 = v1907;
  *(_QWORD *)(v1353 + 56) = v1361;
  *(_QWORD *)(v1353 + 64) = v1364;
  *(_QWORD *)(v1353 + 32) = v1363;
  if (qword_100BC2090 != -1)
    swift_once(&qword_100BC2090, sub_10015B308);
  v1358(v1355, v1356, v1357);
  v1365 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1354, v1947);
  swift_retain();
  v1366 = v1939;
  v1368 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1367, 0xD000000000000014, 0x8000000100A02110, v1355, v1365, _swiftEmptyArrayStorage);
  v1369 = v1945;
  *(_QWORD *)(v1353 + 96) = v1366;
  *(_QWORD *)(v1353 + 104) = v1369;
  *(_QWORD *)(v1353 + 72) = v1368;
  Group.init(title:footer:_:)(0x5420656C62627542, 0xEA00000000007069, 0, 0, v1353);
  v1370 = v1932;
  v1932[82] = v1933;
  v1370[83] = &protocol witness table for Page;
  v1371 = v1370;
  sub_10005F164(v1927);
  Page.init(title:_:)(0x572074726F706552, 0xEE00726568746165, v1352);
  v1927 = v1371 + 84;
  v1372 = swift_allocObject(v1930, v1925, v1934);
  *(_QWORD *)&v1928 = v1372;
  *(_OWORD *)(v1372 + 16) = v1935;
  v1926 = (_QWORD *)(v1372 + v1931);
  v1373 = swift_allocObject(v1937, 192, 7);
  *(_OWORD *)(v1373 + 16) = v1914;
  v1374 = static Settings.Notifications.Severe.debugNotifications.getter();
  v1375 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1355, v1356, v1357);
  v1376 = v1354;
  v1377 = v1354;
  v1378 = (void (*)(char *, uint64_t, uint64_t))v1946;
  v1379 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1365, v1377, v1947);
  v1924 = (_QWORD *)0xD00000000000001BLL;
  v1380 = v1374;
  v1381 = v1939;
  v1382 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1380, 0xD00000000000001BLL, 0x8000000100A02150, v1355, v1365, _swiftEmptyArrayStorage);
  v1383 = v1945;
  *(_QWORD *)(v1373 + 56) = v1381;
  *(_QWORD *)(v1373 + 64) = v1383;
  *(_QWORD *)(v1373 + 32) = v1382;
  v1384 = static Settings.Notifications.Severe.useGlobalChannelMap.getter();
  v1375(v1355, v1356, v1941);
  v1385 = v1376;
  v1386 = v1379;
  v1378(v1365, v1385, v1379);
  v1387 = v1355;
  v1388 = v1939;
  v1389 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1384, v1924, 0x8000000100A02170, v1355, v1365, _swiftEmptyArrayStorage);
  *(_QWORD *)(v1373 + 96) = v1388;
  *(_QWORD *)(v1373 + 104) = v1383;
  *(_QWORD *)(v1373 + 72) = v1389;
  v1924 = (_QWORD *)static Settings.Notifications.Severe.filterIncomingEvents.getter();
  v1390 = swift_allocObject(v1942, 40, 7);
  v1391 = (__n128)v1949;
  *(_OWORD *)(v1390 + 16) = v1949;
  v1392 = static SettingActions.restart.getter(v1391);
  *(_QWORD *)(v1390 + 32) = v1392;
  v1950 = v1390;
  specialized Array._endMutation()(v1392);
  v1393 = v1950;
  v1394 = v1355;
  v1395 = v1948;
  v1396 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1394, v1948, v1941);
  v1397 = v1943;
  v1398 = v1386;
  v1399 = (void (*)(char *, uint64_t, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1365, v1943, v1398);
  v1923 = (_QWORD *)0xD000000000000016;
  v1400 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1924, 0xD000000000000016, 0x8000000100A02190, v1387, v1365, v1393);
  v1401 = v1945;
  *(_QWORD *)(v1373 + 136) = v1388;
  *(_QWORD *)(v1373 + 144) = v1401;
  *(_QWORD *)(v1373 + 112) = v1400;
  v1402 = static Settings.Notifications.Severe.simulateAlertUpdates.getter();
  v1396(v1387, v1395, v1941);
  v1399(v1365, v1397, v1947);
  v1403 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1402, v1923, 0x8000000100A021B0, v1387, v1365, _swiftEmptyArrayStorage);
  *(_QWORD *)(v1373 + 176) = v1388;
  *(_QWORD *)(v1373 + 184) = v1401;
  *(_QWORD *)(v1373 + 152) = v1403;
  Group.init(title:footer:_:)(0x6E69676775626544, v1886, 0, 0, v1373);
  v1404 = v1932;
  v1932[87] = v1933;
  v1404[88] = &protocol witness table for Page;
  sub_10005F164(v1927);
  Page.init(title:_:)(0xD00000000000001CLL, 0x8000000100A02130, v1928);
  v1405 = v1404;
  v1406 = v1404 + 89;
  v1407 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v1407 + 16) = v1935;
  v1408 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v1408 + 16) = v1935;
  if (qword_100BC2780 != -1)
    swift_once(&qword_100BC2780, sub_10015AA8C);
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1387, v1948, v1941);
  v1409 = v1938;
  v1410 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  swift_retain();
  v1411 = v1939;
  v1413 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1412, 0xD000000000000019, 0x8000000100A021D0, v1387, v1409, _swiftEmptyArrayStorage);
  v1414 = v1945;
  *(_QWORD *)(v1408 + 56) = v1411;
  *(_QWORD *)(v1408 + 64) = v1414;
  *(_QWORD *)(v1408 + 32) = v1413;
  Group.init(title:footer:_:)(0x7461726F74736552, 0xEB000000006E6F69, 0, 0, v1408);
  v1405[92] = v1933;
  v1405[93] = &protocol witness table for Page;
  sub_10005F164(v1406);
  Page.init(title:_:)(0x6574617453, 0xE500000000000000, v1407);
  v1927 = (_QWORD *)swift_allocObject(v1930, v1902, v1934);
  *((_OWORD *)v1927 + 1) = v1920;
  v1415 = swift_allocObject(v1937, 192, 7);
  *(_OWORD *)(v1415 + 16) = v1914;
  v1416 = v1410;
  if (qword_100BC2288 != -1)
    swift_once(&qword_100BC2288, sub_10015AE90);
  v1417 = qword_100CAEE08;
  v1418 = v1942;
  v1419 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1419 + 16) = v1949;
  v1420 = swift_retain();
  v1421 = static SettingActions.restart.getter(v1420);
  *(_QWORD *)(v1419 + 32) = v1421;
  v1950 = v1419;
  specialized Array._endMutation()(v1421);
  v1422 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1387, v1948, v1941);
  v1423 = v1938;
  v1416(v1938, v1943, v1947);
  v1424 = v1422;
  v1425 = v1939;
  v1426 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1417, 0xD00000000000001FLL, 0x8000000100A02210, v1387, v1423, v1424);
  v1427 = v1945;
  *(_QWORD *)(v1415 + 56) = v1425;
  *(_QWORD *)(v1415 + 64) = v1427;
  *(_QWORD *)(v1415 + 32) = v1426;
  if (qword_100BC2290 != -1)
    swift_once(&qword_100BC2290, sub_10015AE70);
  *(_QWORD *)&v1928 = (char *)v1927 + v1931;
  v1428 = qword_100CAEE10;
  v1429 = swift_allocObject(v1418, 40, 7);
  *(_OWORD *)(v1429 + 16) = v1949;
  v1430 = swift_retain();
  v1431 = static SettingActions.restart.getter(v1430);
  *(_QWORD *)(v1429 + 32) = v1431;
  v1950 = v1429;
  specialized Array._endMutation()(v1431);
  v1432 = v1950;
  v1433 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1387, v1948, v1941);
  v1434 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v1435 = v1432;
  v1436 = v1939;
  v1437 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1428, 0xD00000000000001ELL, 0x8000000100A02230, v1387, v1434, v1435);
  v1438 = v1945;
  *(_QWORD *)(v1415 + 96) = v1436;
  *(_QWORD *)(v1415 + 104) = v1438;
  *(_QWORD *)(v1415 + 72) = v1437;
  if (qword_100BC2298 != -1)
    swift_once(&qword_100BC2298, sub_10015AEB0);
  v1439 = qword_100CAEE18;
  v1440 = swift_allocObject(v1418, 40, 7);
  *(_OWORD *)(v1440 + 16) = v1949;
  v1441 = swift_retain();
  v1442 = static SettingActions.restart.getter(v1441);
  *(_QWORD *)(v1440 + 32) = v1442;
  v1950 = v1440;
  specialized Array._endMutation()(v1442);
  v1443 = v1950;
  v1433(v1387, v1948, v1941);
  v1444 = v1938;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v1445 = v1443;
  v1446 = v1939;
  v1447 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1439, 0xD000000000000015, 0x8000000100A02250, v1387, v1444, v1445);
  v1448 = v1945;
  *(_QWORD *)(v1415 + 136) = v1446;
  *(_QWORD *)(v1415 + 144) = v1448;
  *(_QWORD *)(v1415 + 112) = v1447;
  if (qword_100BC22A0 != -1)
    swift_once(&qword_100BC22A0, sub_1005C6284);
  v1449 = qword_100CAEE20;
  v1450 = swift_allocObject(v1418, 40, 7);
  *(_OWORD *)(v1450 + 16) = v1949;
  v1451 = swift_retain();
  v1452 = static SettingActions.restart.getter(v1451);
  *(_QWORD *)(v1450 + 32) = v1452;
  v1950 = v1450;
  specialized Array._endMutation()(v1452);
  v1453 = v1950;
  v1454 = v1948;
  v1455 = v1941;
  v1433(v1387, v1948, v1941);
  v1456 = v1938;
  v1457 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v1458 = v1453;
  v1459 = v1939;
  v1460 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1449, 0xD00000000000003DLL, 0x8000000100A02270, v1387, v1456, v1458);
  v1461 = v1945;
  *(_QWORD *)(v1415 + 176) = v1459;
  *(_QWORD *)(v1415 + 184) = v1461;
  *(_QWORD *)(v1415 + 152) = v1460;
  Group.init(title:footer:_:)(0x7474655320706954, 0xEC00000073676E69, 0, 0, v1415);
  v1462 = v1457;
  if (qword_100BC22A8 != -1)
    swift_once(&qword_100BC22A8, sub_10015AF74);
  v1463 = v1455;
  v1464 = (_QWORD *)qword_100CAEE28;
  v1465 = swift_allocObject(v1937, 272, 7);
  *(_OWORD *)(v1465 + 16) = v1922;
  v1466 = qword_100BC2228;
  v1926 = v1464;
  swift_retain();
  if (v1466 != -1)
    swift_once(&qword_100BC2228, sub_1005C6178);
  v1467 = qword_100CAEDA8;
  v1468 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1468 + 16) = v1949;
  v1469 = swift_retain();
  v1470 = static SettingActions.restart.getter(v1469);
  *(_QWORD *)(v1468 + 32) = v1470;
  v1950 = v1468;
  specialized Array._endMutation()(v1470);
  v1471 = v1950;
  v1472 = v1936;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1936, v1454, v1463);
  v1473 = v1938;
  v1474 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1462, v1947);
  v1475 = v1939;
  v1476 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1467, 0xD00000000000001ALL, 0x8000000100A022B0, v1472, v1473, v1471);
  v1477 = v1945;
  *(_QWORD *)(v1465 + 56) = v1475;
  *(_QWORD *)(v1465 + 64) = v1477;
  *(_QWORD *)(v1465 + 32) = v1476;
  if (qword_100BC2230 != -1)
    swift_once(&qword_100BC2230, sub_1005C6198);
  v1478 = qword_100CAEDB0;
  v1479 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1479 + 16) = v1949;
  v1480 = swift_retain();
  v1481 = static SettingActions.restart.getter(v1480);
  *(_QWORD *)(v1479 + 32) = v1481;
  v1950 = v1479;
  specialized Array._endMutation()(v1481);
  v1482 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1472, v1948, v1463);
  v1474(v1473, v1943, v1947);
  v1483 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1478, 0xD00000000000001DLL, 0x8000000100A022D0, v1472, v1473, v1482);
  *(_QWORD *)(v1465 + 96) = v1475;
  *(_QWORD *)(v1465 + 104) = v1477;
  *(_QWORD *)(v1465 + 72) = v1483;
  if (qword_100BC2238 != -1)
    swift_once(&qword_100BC2238, sub_1005C61B8);
  v1484 = qword_100CAEDB8;
  v1485 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1485 + 16) = v1949;
  v1486 = swift_retain();
  v1487 = static SettingActions.restart.getter(v1486);
  *(_QWORD *)(v1485 + 32) = v1487;
  v1950 = v1485;
  specialized Array._endMutation()(v1487);
  v1488 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1472, v1948, v1463);
  v1474(v1473, v1943, v1947);
  v1489 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1484, 0xD000000000000012, 0x8000000100A022F0, v1472, v1473, v1488);
  *(_QWORD *)(v1465 + 136) = v1475;
  *(_QWORD *)(v1465 + 144) = v1477;
  *(_QWORD *)(v1465 + 112) = v1489;
  v1490 = v1475;
  v1491 = v1463;
  if (qword_100BC2240 != -1)
    swift_once(&qword_100BC2240, sub_1005C61D8);
  v1924 = (_QWORD *)(v1928 + v1929);
  v1492 = qword_100CAEDC0;
  v1493 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1493 + 16) = v1949;
  v1494 = swift_retain();
  v1495 = static SettingActions.restart.getter(v1494);
  *(_QWORD *)(v1493 + 32) = v1495;
  v1950 = v1493;
  specialized Array._endMutation()(v1495);
  v1496 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1472, v1948, v1491);
  v1474(v1473, v1943, v1947);
  v1497 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1492, 0xD000000000000017, 0x8000000100A02310, v1472, v1473, v1496);
  *(_QWORD *)(v1465 + 176) = v1490;
  *(_QWORD *)(v1465 + 184) = v1477;
  *(_QWORD *)(v1465 + 152) = v1497;
  if (qword_100BC2248 != -1)
    swift_once(&qword_100BC2248, sub_1005C61F8);
  v1498 = qword_100CAEDC8;
  v1499 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1499 + 16) = v1949;
  v1500 = swift_retain();
  v1501 = static SettingActions.restart.getter(v1500);
  *(_QWORD *)(v1499 + 32) = v1501;
  v1950 = v1499;
  specialized Array._endMutation()(v1501);
  v1502 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1472, v1948, v1491);
  v1503 = v1943;
  v1474(v1473, v1943, v1947);
  v1504 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1498, 0xD000000000000017, 0x8000000100A02330, v1472, v1473, v1502);
  v1505 = v1945;
  *(_QWORD *)(v1465 + 216) = v1490;
  *(_QWORD *)(v1465 + 224) = v1505;
  *(_QWORD *)(v1465 + 192) = v1504;
  if (qword_100BC2250 != -1)
    swift_once(&qword_100BC2250, sub_1005C6218);
  v1506 = qword_100CAEDD0;
  v1507 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1507 + 16) = v1949;
  v1508 = swift_retain();
  v1509 = static SettingActions.restart.getter(v1508);
  *(_QWORD *)(v1507 + 32) = v1509;
  v1950 = v1507;
  specialized Array._endMutation()(v1509);
  v1510 = v1950;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1472, v1948, v1491);
  v1474(v1473, v1503, v1947);
  v1511 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1506, 0xD000000000000013, 0x8000000100A02350, v1472, v1473, v1510);
  v1512 = v1945;
  *(_QWORD *)(v1465 + 256) = v1490;
  *(_QWORD *)(v1465 + 264) = v1512;
  *(_QWORD *)(v1465 + 232) = v1511;
  Group.init(title:footer:group:_:)(0x7265764F20706954);
  v1513 = v1491;
  if (qword_100BC22B0 != -1)
    swift_once(&qword_100BC22B0, sub_1005C62A4);
  v1514 = (_QWORD *)qword_100CAEE30;
  v1515 = swift_allocObject(v1937, 272, 7);
  *(_OWORD *)(v1515 + 16) = v1922;
  v1516 = qword_100BC2258;
  v1926 = v1514;
  swift_retain();
  if (v1516 != -1)
    swift_once(&qword_100BC2258, sub_10015B00C);
  v1517 = qword_100CAEDD8;
  v1518 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1518 + 16) = v1949;
  v1519 = swift_retain();
  v1520 = static SettingActions.restart.getter(v1519);
  *(_QWORD *)(v1518 + 32) = v1520;
  v1950 = v1518;
  specialized Array._endMutation()(v1520);
  v1521 = v1950;
  v1522 = v1936;
  v1523 = v1491;
  v1524 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1936, v1948, v1523);
  v1525 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1503, v1947);
  v1526 = v1939;
  v1527 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1517, 0xD000000000000019, 0x8000000100A02370, v1522, v1525, v1521);
  v1528 = v1945;
  *(_QWORD *)(v1515 + 56) = v1526;
  *(_QWORD *)(v1515 + 64) = v1528;
  *(_QWORD *)(v1515 + 32) = v1527;
  if (qword_100BC2260 != -1)
    swift_once(&qword_100BC2260, sub_10015AFEC);
  v1529 = qword_100CAEDE0;
  v1530 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1530 + 16) = v1949;
  v1531 = swift_retain();
  v1532 = static SettingActions.restart.getter(v1531);
  *(_QWORD *)(v1530 + 32) = v1532;
  v1950 = v1530;
  specialized Array._endMutation()(v1532);
  v1533 = v1950;
  v1534 = v1936;
  v1524(v1936, v1948, v1513);
  v1535 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1503, v1947);
  v1536 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1529, 0xD00000000000001CLL, 0x8000000100A02390, v1534, v1535, v1533);
  v1537 = v1945;
  *(_QWORD *)(v1515 + 96) = v1526;
  *(_QWORD *)(v1515 + 104) = v1537;
  *(_QWORD *)(v1515 + 72) = v1536;
  if (qword_100BC2268 != -1)
    swift_once(&qword_100BC2268, sub_10015B08C);
  v1538 = qword_100CAEDE8;
  v1539 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1539 + 16) = v1949;
  v1540 = swift_retain();
  v1541 = static SettingActions.restart.getter(v1540);
  *(_QWORD *)(v1539 + 32) = v1541;
  v1950 = v1539;
  specialized Array._endMutation()(v1541);
  v1542 = v1950;
  v1543 = v1936;
  v1524(v1936, v1948, v1513);
  v1544 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1503, v1947);
  v1545 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1538, 0xD000000000000011, 0x8000000100A023B0, v1543, v1544, v1542);
  v1546 = v1945;
  *(_QWORD *)(v1515 + 136) = v1526;
  *(_QWORD *)(v1515 + 144) = v1546;
  *(_QWORD *)(v1515 + 112) = v1545;
  v1547 = v1513;
  v1548 = v1503;
  if (qword_100BC2270 != -1)
    swift_once(&qword_100BC2270, sub_10015B02C);
  v1924 = v1932 + 94;
  v1923 = (_QWORD *)(v1928 + v1919);
  v1549 = qword_100CAEDF0;
  v1550 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1550 + 16) = v1949;
  v1551 = swift_retain();
  v1552 = static SettingActions.restart.getter(v1551);
  *(_QWORD *)(v1550 + 32) = v1552;
  v1950 = v1550;
  specialized Array._endMutation()(v1552);
  v1553 = v1950;
  v1554 = v1936;
  v1524(v1936, v1948, v1547);
  v1555 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1548, v1947);
  v1556 = v1553;
  v1557 = v1939;
  v1558 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1549, 0xD000000000000016, 0x8000000100A023D0, v1554, v1555, v1556);
  v1559 = v1945;
  *(_QWORD *)(v1515 + 176) = v1557;
  *(_QWORD *)(v1515 + 184) = v1559;
  *(_QWORD *)(v1515 + 152) = v1558;
  if (qword_100BC2278 != -1)
    swift_once(&qword_100BC2278, sub_10015B04C);
  v1560 = qword_100CAEDF8;
  v1561 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1561 + 16) = v1949;
  v1562 = swift_retain();
  v1563 = static SettingActions.restart.getter(v1562);
  *(_QWORD *)(v1561 + 32) = v1563;
  v1950 = v1561;
  specialized Array._endMutation()(v1563);
  v1564 = v1950;
  v1565 = v1936;
  v1524(v1936, v1948, v1547);
  v1566 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1548, v1947);
  v1567 = v1564;
  v1568 = v1939;
  v1569 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1560, 0xD000000000000016, 0x8000000100A023F0, v1565, v1566, v1567);
  v1570 = v1945;
  *(_QWORD *)(v1515 + 216) = v1568;
  *(_QWORD *)(v1515 + 224) = v1570;
  *(_QWORD *)(v1515 + 192) = v1569;
  v1571 = v1524;
  if (qword_100BC2280 != -1)
    swift_once(&qword_100BC2280, sub_10015B06C);
  v1572 = qword_100CAEE00;
  v1573 = swift_allocObject(v1942, 40, 7);
  *(_OWORD *)(v1573 + 16) = v1949;
  v1574 = swift_retain();
  v1575 = static SettingActions.restart.getter(v1574);
  *(_QWORD *)(v1573 + 32) = v1575;
  v1950 = v1573;
  specialized Array._endMutation()(v1575);
  v1576 = v1950;
  v1577 = v1936;
  v1524(v1936, v1948, v1547);
  v1578 = v1938;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1548, v1947);
  *(_QWORD *)&v1928 = 0xD000000000000012;
  v1579 = v1939;
  v1580 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1572, 0xD000000000000012, 0x8000000100A02410, v1577, v1578, v1576);
  v1581 = v1945;
  *(_QWORD *)(v1515 + 256) = v1579;
  *(_QWORD *)(v1515 + 264) = v1581;
  *(_QWORD *)(v1515 + 232) = v1580;
  Group.init(title:footer:group:_:)(0x746C694620706954);
  v1582 = v1932;
  v1932[97] = v1933;
  v1582[98] = &protocol witness table for Page;
  sub_10005F164(v1924);
  Page.init(title:_:)(0xD000000000000015, 0x8000000100A021F0, v1927);
  v1927 = v1582 + 99;
  v1583 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v1583 + 16) = v1935;
  v1926 = (_QWORD *)(v1583 + v1931);
  v1584 = swift_allocObject(v1937, 72, 7);
  *(_OWORD *)(v1584 + 16) = v1935;
  v1585 = static Settings.Beaufort.forceEnabled.getter();
  v1586 = swift_allocObject(v1942, 40, 7);
  v1587 = (__n128)v1949;
  *(_OWORD *)(v1586 + 16) = v1949;
  v1588 = static SettingActions.restart.getter(v1587);
  *(_QWORD *)(v1586 + 32) = v1588;
  v1950 = v1586;
  specialized Array._endMutation()(v1588);
  v1589 = v1950;
  v1590 = v1936;
  v1571(v1936, v1948, v1941);
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1578, v1943, v1947);
  v1591 = v1585;
  v1592 = v1590;
  v1593 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1591, 0xD000000000000013, 0x8000000100A02430, v1590, v1578, v1589);
  v1594 = v1945;
  *(_QWORD *)(v1584 + 56) = v1579;
  *(_QWORD *)(v1584 + 64) = v1594;
  *(_QWORD *)(v1584 + 32) = v1593;
  Group.init(title:footer:_:)(0x65705320646E6957, 0xEA00000000006465, 0, 0, v1584);
  v1582[102] = v1933;
  v1582[103] = &protocol witness table for Page;
  sub_10005F164(v1927);
  Page.init(title:_:)(0x7374696E55, 0xE500000000000000, v1583);
  v1924 = v1582 + 104;
  v1595 = swift_allocObject(v1930, v1902, v1934);
  v1926 = (_QWORD *)v1595;
  *(_OWORD *)(v1595 + 16) = v1920;
  v1927 = (_QWORD *)(v1595 + v1931);
  v1596 = swift_allocObject(v1937, 232, 7);
  *(_OWORD *)(v1596 + 16) = v1908;
  v1597 = static Settings.Daemon.clearAQIScalesCacheOnNextLaunch.getter();
  v1598 = v1942;
  v1599 = swift_allocObject(v1942, 40, 7);
  v1600 = (__n128)v1949;
  *(_OWORD *)(v1599 + 16) = v1949;
  v1601 = static SettingActions.restart.getter(v1600);
  *(_QWORD *)(v1599 + 32) = v1601;
  v1950 = v1599;
  specialized Array._endMutation()(v1601);
  v1602 = v1950;
  v1603 = v1592;
  v1604 = v1948;
  v1605 = v1941;
  v1571(v1592, v1948, v1941);
  v1606 = v1938;
  v1607 = v1943;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1947);
  v1923 = (_QWORD *)0xD00000000000001FLL;
  v1608 = v1602;
  v1609 = v1939;
  v1610 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1597, 0xD00000000000001FLL, 0x8000000100A02450, v1603, v1606, v1608);
  v1611 = v1945;
  *(_QWORD *)(v1596 + 56) = v1609;
  *(_QWORD *)(v1596 + 64) = v1611;
  *(_QWORD *)(v1596 + 32) = v1610;
  *(_QWORD *)&v1922 = static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter();
  v1612 = swift_allocObject(v1598, 40, 7);
  v1613 = (__n128)v1949;
  *(_OWORD *)(v1612 + 16) = v1949;
  v1614 = static SettingActions.restart.getter(v1613);
  *(_QWORD *)(v1612 + 32) = v1614;
  v1950 = v1612;
  specialized Array._endMutation()(v1614);
  v1615 = v1950;
  v1571(v1603, v1604, v1605);
  v1616 = v1571;
  v1617 = v1938;
  v1618 = v1607;
  v1619 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1618, v1947);
  v1620 = v1603;
  v1621 = v1603;
  v1622 = v1617;
  v1623 = v1615;
  v1624 = v1939;
  v1625 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, 0xD000000000000028, 0x8000000100A02470, v1620, v1617, v1623);
  *(_QWORD *)(v1596 + 96) = v1624;
  *(_QWORD *)(v1596 + 104) = v1611;
  *(_QWORD *)(v1596 + 72) = v1625;
  v1626 = static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter();
  v1627 = swift_allocObject(v1942, 40, 7);
  v1628 = (__n128)v1949;
  *(_OWORD *)(v1627 + 16) = v1949;
  v1629 = static SettingActions.restart.getter(v1628);
  *(_QWORD *)(v1627 + 32) = v1629;
  v1950 = v1627;
  specialized Array._endMutation()(v1629);
  v1630 = v1950;
  v1631 = v1621;
  v1632 = v1621;
  v1633 = v1948;
  v1616(v1632, v1948, v1941);
  v1634 = v1943;
  v1619(v1622, v1943, v1947);
  v1635 = v1630;
  v1636 = v1939;
  v1637 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1626, 0xD000000000000037, 0x8000000100A024A0, v1631, v1622, v1635);
  v1638 = v1945;
  *(_QWORD *)(v1596 + 136) = v1636;
  *(_QWORD *)(v1596 + 144) = v1638;
  *(_QWORD *)(v1596 + 112) = v1637;
  *(_QWORD *)&v1922 = static Settings.Daemon.disableCaching.getter();
  v1639 = v1942;
  v1640 = swift_allocObject(v1942, 40, 7);
  v1641 = (__n128)v1949;
  *(_OWORD *)(v1640 + 16) = v1949;
  v1642 = static SettingActions.restart.getter(v1641);
  *(_QWORD *)(v1640 + 32) = v1642;
  v1950 = v1640;
  specialized Array._endMutation()(v1642);
  v1921 = v1950;
  v1643 = v1633;
  v1644 = v1941;
  v1645 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1631, v1643, v1941);
  v1646 = v1622;
  v1647 = v1622;
  v1648 = v1634;
  v1650 = (void (*)(char *, _QWORD, uint64_t))v1946;
  v1649 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1647, v1648, v1947);
  v1651 = v1646;
  v1652 = v1939;
  v1653 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, v1923, 0x8000000100A024E0, v1631, v1651, v1921);
  *(_QWORD *)(v1596 + 176) = v1652;
  *(_QWORD *)(v1596 + 184) = v1638;
  v1654 = v1638;
  *(_QWORD *)(v1596 + 152) = v1653;
  v1923 = (_QWORD *)static Settings.Daemon.disableAvailableDataSetsCaching.getter();
  v1655 = swift_allocObject(v1639, 40, 7);
  v1656 = (__n128)v1949;
  *(_OWORD *)(v1655 + 16) = v1949;
  v1657 = static SettingActions.restart.getter(v1656);
  *(_QWORD *)(v1655 + 32) = v1657;
  v1950 = v1655;
  specialized Array._endMutation()(v1657);
  v1658 = v1950;
  v1659 = v1936;
  v1660 = v1948;
  v1645(v1936, v1948, v1644);
  v1661 = v1938;
  v1662 = v1943;
  v1650(v1938, v1943, v1649);
  v1663 = v1659;
  v1664 = v1658;
  v1665 = v1939;
  v1666 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1923, 0xD00000000000002ELL, 0x8000000100A02500, v1659, v1661, v1664);
  *(_QWORD *)(v1596 + 216) = v1665;
  *(_QWORD *)(v1596 + 224) = v1654;
  *(_QWORD *)(v1596 + 192) = v1666;
  v1667 = v1927;
  Group.init(title:footer:_:)(0x2072656874616557, 0xEF676E6968636143, 0, 0, v1596);
  v1923 = (_QWORD *)((char *)v1667 + v1929);
  v1668 = swift_allocObject(v1937, 232, 7);
  *(_OWORD *)(v1668 + 16) = v1908;
  *(_QWORD *)&v1922 = static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter();
  v1669 = v1942;
  v1670 = swift_allocObject(v1942, 40, 7);
  v1671 = (__n128)v1949;
  *(_OWORD *)(v1670 + 16) = v1949;
  v1672 = static SettingActions.restart.getter(v1671);
  *(_QWORD *)(v1670 + 32) = v1672;
  v1950 = v1670;
  specialized Array._endMutation()(v1672);
  v1673 = v1950;
  v1674 = v1663;
  v1675 = v1660;
  v1676 = v1941;
  v1677 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1663, v1675, v1941);
  v1678 = v1938;
  v1679 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1662, v1947);
  v1929 = 0xD000000000000025;
  v1680 = v1673;
  v1681 = v1939;
  v1682 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, 0xD000000000000025, 0x8000000100A02550, v1674, v1678, v1680);
  v1683 = v1945;
  *(_QWORD *)(v1668 + 56) = v1681;
  *(_QWORD *)(v1668 + 64) = v1683;
  *(_QWORD *)(v1668 + 32) = v1682;
  *(_QWORD *)&v1922 = static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter();
  v1684 = swift_allocObject(v1669, 40, 7);
  v1685 = (__n128)v1949;
  *(_OWORD *)(v1684 + 16) = v1949;
  v1686 = static SettingActions.restart.getter(v1685);
  *(_QWORD *)(v1684 + 32) = v1686;
  v1950 = v1684;
  specialized Array._endMutation()(v1686);
  v1687 = v1950;
  v1688 = v1936;
  v1677(v1936, v1948, v1676);
  v1689 = v1662;
  v1690 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1678, v1689, v1679);
  v1691 = v1688;
  v1692 = v1688;
  v1693 = v1678;
  v1694 = v1687;
  v1695 = v1939;
  v1696 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, 0xD000000000000024, 0x8000000100A02580, v1691, v1678, v1694);
  v1697 = v1945;
  *(_QWORD *)(v1668 + 96) = v1695;
  *(_QWORD *)(v1668 + 104) = v1697;
  *(_QWORD *)(v1668 + 72) = v1696;
  v1921 = static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter();
  v1698 = v1942;
  v1699 = swift_allocObject(v1942, 40, 7);
  v1700 = (__n128)v1949;
  *(_OWORD *)(v1699 + 16) = v1949;
  v1701 = static SettingActions.restart.getter(v1700);
  *(_QWORD *)(v1699 + 32) = v1701;
  v1950 = v1699;
  specialized Array._endMutation()(v1701);
  v1702 = v1950;
  v1703 = v1692;
  v1704 = v1692;
  v1705 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1703, v1948, v1941);
  v1706 = v1947;
  v1690(v1693, v1943, v1947);
  *(_QWORD *)&v1922 = 0xD000000000000026;
  v1707 = v1702;
  v1708 = v1939;
  v1709 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1921, 0xD000000000000026, 0x8000000100A025B0, v1704, v1693, v1707);
  *(_QWORD *)(v1668 + 136) = v1708;
  *(_QWORD *)(v1668 + 144) = v1697;
  *(_QWORD *)(v1668 + 112) = v1709;
  v1921 = static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter();
  v1710 = swift_allocObject(v1698, 40, 7);
  v1711 = (__n128)v1949;
  *(_OWORD *)(v1710 + 16) = v1949;
  v1712 = static SettingActions.restart.getter(v1711);
  *(_QWORD *)(v1710 + 32) = v1712;
  v1950 = v1710;
  specialized Array._endMutation()(v1712);
  v1713 = v1950;
  v1714 = v1704;
  v1715 = v1948;
  v1716 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1704, v1948, v1705);
  v1717 = v1938;
  v1718 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, _QWORD, uint64_t))v1946)(v1938, v1943, v1706);
  v1719 = v1713;
  v1720 = v1939;
  v1721 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1921, 0xD000000000000027, 0x8000000100A025E0, v1714, v1717, v1719);
  *(_QWORD *)(v1668 + 176) = v1720;
  *(_QWORD *)(v1668 + 184) = v1697;
  *(_QWORD *)(v1668 + 152) = v1721;
  v1921 = static Settings.Daemon.disableStatisticsCaching.getter();
  v1722 = swift_allocObject(v1942, 40, 7);
  v1723 = (__n128)v1949;
  *(_OWORD *)(v1722 + 16) = v1949;
  v1724 = static SettingActions.restart.getter(v1723);
  *(_QWORD *)(v1722 + 32) = v1724;
  v1950 = v1722;
  specialized Array._endMutation()(v1724);
  v1725 = v1950;
  v1716(v1714, v1715, v1941);
  v1726 = v1943;
  v1718(v1717, v1943, v1947);
  v1727 = v1725;
  v1728 = v1939;
  v1729 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1921, v1929, 0x8000000100A02610, v1714, v1717, v1727);
  *(_QWORD *)(v1668 + 216) = v1728;
  *(_QWORD *)(v1668 + 224) = v1697;
  *(_QWORD *)(v1668 + 192) = v1729;
  Group.init(title:footer:_:)(v1928, 0x8000000100A02530, 0, 0, v1668);
  v1927 = (_QWORD *)((char *)v1927 + v1919);
  v1730 = swift_allocObject(v1937, 312, 7);
  *(_OWORD *)(v1730 + 16) = xmmword_10098C750;
  v1731 = static Settings.Daemon.treatmentIdentifierOverrides.getter();
  v1732 = v1942;
  v1733 = swift_allocObject(v1942, 40, 7);
  v1734 = (__n128)v1949;
  *(_OWORD *)(v1733 + 16) = v1949;
  v1735 = static SettingActions.restart.getter(v1734);
  *(_QWORD *)(v1733 + 32) = v1735;
  v1950 = v1733;
  specialized Array._endMutation()(v1735);
  v1736 = v1950;
  v1737 = v1899;
  v1898(v1899, v1726, v1903);
  v1923 = (_QWORD *)0xD00000000000001ELL;
  v1738 = v1736;
  v1739 = v1887;
  v1740 = Item<>.init(_:label:resetBehavior:actions:)(v1731, 0xD00000000000001ELL, 0x8000000100A02640, v1737, v1738);
  v1741 = v1897;
  *(_QWORD *)(v1730 + 56) = v1739;
  *(_QWORD *)(v1730 + 64) = v1741;
  *(_QWORD *)(v1730 + 32) = v1740;
  v1921 = static Settings.Daemon.clearCachedJWTTokenOnNextLaunch.getter();
  v1742 = swift_allocObject(v1732, 40, 7);
  v1743 = (__n128)v1949;
  *(_OWORD *)(v1742 + 16) = v1949;
  v1744 = static SettingActions.restart.getter(v1743);
  *(_QWORD *)(v1742 + 32) = v1744;
  v1950 = v1742;
  specialized Array._endMutation()(v1744);
  v1745 = v1950;
  v1746 = v1714;
  v1747 = v1948;
  v1748 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1714, v1948, v1941);
  v1749 = v1726;
  v1750 = (void (*)(char *, _QWORD, uint64_t))v1946;
  v1751 = v1947;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1717, v1749, v1947);
  v1752 = v1745;
  v1753 = v1939;
  v1754 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1921, v1929, 0x8000000100A02660, v1746, v1717, v1752);
  v1755 = v1945;
  *(_QWORD *)(v1730 + 96) = v1753;
  *(_QWORD *)(v1730 + 104) = v1755;
  *(_QWORD *)(v1730 + 72) = v1754;
  v1921 = static Settings.Daemon.mangleCachedJWTTokenOnNextLaunch.getter();
  v1756 = v1942;
  v1757 = swift_allocObject(v1942, 40, 7);
  v1758 = (__n128)v1949;
  *(_OWORD *)(v1757 + 16) = v1949;
  v1759 = static SettingActions.restart.getter(v1758);
  *(_QWORD *)(v1757 + 32) = v1759;
  v1950 = v1757;
  specialized Array._endMutation()(v1759);
  v1760 = v1950;
  v1761 = v1936;
  v1762 = v1747;
  v1763 = v1748;
  v1764 = (void (*)(char *, uint64_t, uint64_t))v1944;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1936, v1747, v1763);
  v1765 = v1938;
  v1750(v1938, v1943, v1751);
  v1766 = v1750;
  v1767 = v1761;
  v1768 = v1760;
  v1769 = v1939;
  v1770 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1921, v1922, 0x8000000100A02690, v1761, v1765, v1768);
  *(_QWORD *)(v1730 + 136) = v1769;
  *(_QWORD *)(v1730 + 144) = v1755;
  *(_QWORD *)(v1730 + 112) = v1770;
  *(_QWORD *)&v1922 = static Settings.Daemon.forceQAAndNoAuthOnSimulator.getter();
  v1771 = swift_allocObject(v1756, 40, 7);
  v1772 = (__n128)v1949;
  *(_OWORD *)(v1771 + 16) = v1949;
  v1773 = static SettingActions.restart.getter(v1772);
  *(_QWORD *)(v1771 + 32) = v1773;
  v1950 = v1771;
  specialized Array._endMutation()(v1773);
  v1774 = v1950;
  v1775 = v1767;
  v1776 = v1767;
  v1777 = v1941;
  v1764(v1776, v1762, v1941);
  v1778 = v1938;
  v1779 = v1943;
  v1780 = v1947;
  v1766(v1938, v1943, v1947);
  v1781 = v1774;
  v1782 = v1939;
  v1783 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, 0xD00000000000001BLL, 0x8000000100A026C0, v1775, v1778, v1781);
  *(_QWORD *)(v1730 + 176) = v1782;
  *(_QWORD *)(v1730 + 184) = v1755;
  *(_QWORD *)(v1730 + 152) = v1783;
  *(_QWORD *)&v1922 = static Settings.Daemon.fetchesWeatherData.getter();
  v1784 = v1942;
  v1785 = swift_allocObject(v1942, 40, 7);
  v1786 = (__n128)v1949;
  *(_OWORD *)(v1785 + 16) = v1949;
  v1787 = static SettingActions.restart.getter(v1786);
  *(_QWORD *)(v1785 + 32) = v1787;
  v1950 = v1785;
  specialized Array._endMutation()(v1787);
  v1788 = v1950;
  v1789 = v1775;
  v1790 = v1775;
  v1791 = (void (*)(char *, _QWORD, uint64_t))v1944;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1790, v1948, v1777);
  v1792 = v1938;
  v1793 = v1779;
  v1794 = (void (*)(char *, _QWORD, uint64_t))v1946;
  ((void (*)(char *, uint64_t, uint64_t))v1946)(v1938, v1793, v1780);
  v1795 = v1788;
  v1796 = v1939;
  v1797 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1922, v1929, 0x8000000100A026E0, v1789, v1792, v1795);
  v1798 = v1945;
  *(_QWORD *)(v1730 + 216) = v1796;
  *(_QWORD *)(v1730 + 224) = v1798;
  *(_QWORD *)(v1730 + 192) = v1797;
  v1929 = static Settings.Daemon.enableFlatbuffers.getter();
  v1799 = swift_allocObject(v1784, 40, 7);
  v1800 = (__n128)v1949;
  *(_OWORD *)(v1799 + 16) = v1949;
  v1801 = static SettingActions.restart.getter(v1800);
  *(_QWORD *)(v1799 + 32) = v1801;
  v1950 = v1799;
  specialized Array._endMutation()(v1801);
  v1802 = v1950;
  v1791(v1789, v1948, v1941);
  v1803 = v1938;
  v1804 = v1943;
  v1794(v1938, v1943, v1780);
  v1805 = v1789;
  v1806 = v1939;
  v1807 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1929, v1928, 0x8000000100A02710, v1789, v1803, v1802);
  *(_QWORD *)(v1730 + 256) = v1806;
  *(_QWORD *)(v1730 + 264) = v1798;
  v1808 = v1798;
  *(_QWORD *)(v1730 + 232) = v1807;
  v1809 = static Settings.Daemon.enableSendFlatbufferSchemaVersion.getter();
  v1810 = swift_allocObject(v1942, 40, 7);
  v1811 = (__n128)v1949;
  *(_OWORD *)(v1810 + 16) = v1949;
  v1812 = static SettingActions.restart.getter(v1811);
  *(_QWORD *)(v1810 + 32) = v1812;
  v1950 = v1810;
  specialized Array._endMutation()(v1812);
  v1813 = v1950;
  v1814 = v1941;
  ((void (*)(char *, _QWORD, uint64_t))v1944)(v1805, v1948, v1941);
  v1794(v1803, v1804, v1947);
  v1815 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1809, v1923, 0x8000000100A02730, v1805, v1803, v1813);
  *(_QWORD *)(v1730 + 296) = v1806;
  *(_QWORD *)(v1730 + 304) = v1808;
  *(_QWORD *)(v1730 + 272) = v1815;
  Group.init(title:footer:_:)(0x6775626544, 0xE500000000000000, 0xD000000000000066, v1854 | 0x8000000000000000, v1730);
  v1816 = v1932;
  v1932[107] = v1933;
  v1816[108] = &protocol witness table for Page;
  sub_10005F164(v1924);
  Page.init(title:_:)(0x4B72656874616557, 0xEA00000000007469, v1926);
  v1817 = swift_allocObject(v1930, v1925, v1934);
  *(_OWORD *)(v1817 + 16) = v1935;
  v1818 = swift_allocObject(v1937, 152, 7);
  *(_OWORD *)(v1818 + 16) = v1920;
  v1819 = v1805;
  v1820 = v1948;
  v1821 = (void (*)(char *, uint64_t, uint64_t))v1946;
  if (qword_100BC23C8 != -1)
    swift_once(&qword_100BC23C8, sub_1006D0668);
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1819, v1820, v1814);
  v1821(v1803, v1804, v1947);
  swift_retain();
  v1822 = v1939;
  v1824 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1823, 0xD000000000000010, 0x8000000100A02750, v1819, v1803, _swiftEmptyArrayStorage);
  v1825 = v1945;
  *(_QWORD *)(v1818 + 56) = v1822;
  *(_QWORD *)(v1818 + 64) = v1825;
  *(_QWORD *)(v1818 + 32) = v1824;
  if (qword_100BC23D0 != -1)
    swift_once(&qword_100BC23D0, sub_1006D0688);
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1819, v1820, v1814);
  v1821(v1803, v1804, v1947);
  swift_retain();
  v1827 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1826, 0x746E6520706D7544, 0xEC00000073656972, v1819, v1803, _swiftEmptyArrayStorage);
  v1828 = v1945;
  *(_QWORD *)(v1818 + 96) = v1822;
  *(_QWORD *)(v1818 + 104) = v1828;
  *(_QWORD *)(v1818 + 72) = v1827;
  if (qword_100BC23D8 != -1)
    swift_once(&qword_100BC23D8, sub_1006D07A4);
  v1829 = v1932;
  *(_QWORD *)&v1949 = v1888 + v1919;
  ((void (*)(char *, uint64_t, uint64_t))v1944)(v1819, v1820, v1814);
  v1830 = v1900;
  ((void (*)(char *, uint64_t, uint64_t))v1910)(v1900, v1804, v1916);
  swift_retain();
  v1831 = v1917;
  v1833 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)(v1832, 0xD000000000000020, 0x8000000100A02770, v1819, v1830, _swiftEmptyArrayStorage);
  v1834 = v1907;
  *(_QWORD *)(v1818 + 136) = v1831;
  *(_QWORD *)(v1818 + 144) = v1834;
  *(_QWORD *)(v1818 + 112) = v1833;
  Group.init(title:footer:_:)(1869440324, 0xE400000000000000, 0, 0, v1818);
  v1829[112] = v1933;
  v1829[113] = &protocol witness table for Page;
  sub_10005F164(v1829 + 109);
  Page.init(title:_:)(0x2072656874616557, 0xEE00746567646957, v1817);
  Group.init(title:footer:_:)(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v1829);
  swift_release(v1891);
  swift_release(v1890);
  v1835 = swift_release(v1889);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1844 + 8))(v1892, v1845, v1835);
  *v1884 = v1843;
  return result;
}

