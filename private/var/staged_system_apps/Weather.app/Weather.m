_OWORD *sub_100006840(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  Swift::Int v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_100006964(a2);
  v11 = v8[2];
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v9;
  v15 = v10;
  sub_1000BA294(&qword_100BC3698);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13))
    goto LABEL_5;
  v16 = sub_100006964(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return result;
  }
  v14 = v16;
LABEL_5:
  v18 = *v4;
  if ((v15 & 1) != 0)
  {
    v19 = (_QWORD *)(v18[7] + 32 * v14);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v19);
    return sub_10011E834(a1, v19);
  }
  else
  {
    sub_10011F3C8(a2, (uint64_t)v21);
    return sub_10011EB5C(v14, (uint64_t)v21, a1, v18);
  }
}

unint64_t sub_100006964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100006994(a1, v4);
}

unint64_t sub_100006994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10011F3C8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10011F394((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_100006A58(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = type metadata accessor for FeelsLikeComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = (_QWORD *)(v11 - v10);
  v13 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = (uint64_t *)(v16 - v15);
  sub_100080C0C(a1, v16 - v15, v18);
  v19 = v17[2];
  v20 = v17[3];
  v21 = v17[4];
  v22 = v17[5];
  sub_1002E8B2C((uint64_t)v17 + *(int *)(v13 + 28), (uint64_t)v12 + *(int *)(v8 + 24));
  v23 = (uint64_t *)((char *)v17 + *(int *)(v13 + 32));
  v24 = *v23;
  v25 = v23[1];
  *v12 = v19;
  v12[1] = v20;
  v12[2] = v21;
  v12[3] = v22;
  v26 = (_QWORD *)((char *)v12 + *(int *)(v8 + 28));
  *v26 = v24;
  v26[1] = v25;
  v27 = *v17;
  v28 = v17[1];
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v20);
  sub_10082C1E4((uint64_t)v17);
  *(_QWORD *)v7 = v27;
  *(_QWORD *)(v7 + 8) = v28;
  *(_QWORD *)(v7 + 16) = 0x656D6F6D72656874;
  *(_QWORD *)(v7 + 24) = 0xEB00000000726574;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  swift_storeEnumTagMultiPayload(v7, v3, 0);
  v29 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v30 = a2 + v29[5];
  sub_10007802C((uint64_t)v12, v30, type metadata accessor for FeelsLikeComponentViewModel);
  v31 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v30, v31, 2);
  v32 = a2 + v29[7];
  v33 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v34 = type metadata accessor for TemperatureChartKind(0);
  sub_1000C32A0(v34);
  v35 = type metadata accessor for DetailCondition(0);
  sub_1000C32A0(v35);
  *(_BYTE *)(v32 + v33) = 0;
  v36 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v32, v36, 2);
  _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v36);
  sub_10007802C(v7, a2, type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v29[6]) = 256;
  sub_100098640();
}

double sub_100006CA0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BC4380);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_10017A470);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BC4388);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_10017A648);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_10017A68C, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_100006D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1000986AC();
  v28 = v1;
  v29 = v2;
  v31 = sub_1000D2074();
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v30 = v4;
  sub_1000BA294(&qword_100BE4BF0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_1000986FC();
  v27 = v6;
  sub_10009D2A4();
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = sub_1000C591C();
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_100098728();
  v14 = v13 - v12;
  v15 = sub_1000D14DC();
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100098728();
  v19 = v18 - v17;
  v26 = sub_1000E74F4();
  v20 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  sub_1000BCED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v19, enum case for WeatherNetworkActivity.Domain.weather(_:), v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_label, v10);
  sub_1000D91D0();
  sub_1000BEA20((uint64_t)v9);
  v21 = v27;
  sub_1000BEA20(v27);
  v22 = WeatherNetworkActivity.init(domain:label:token:parentToken:)(v19, v14, v9, v21);
  v23 = WeatherNetworkActivity.createNWActivity()(v22);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0, v26);
  v37 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_lock);
  v33 = v0;
  v34 = v23;
  v35 = v28;
  v36 = v29;
  v24 = sub_1000CD6E8();
  swift_retain();
  v25 = v30;
  Lock.sync<A>(_:)(v30, sub_10012D198, &v32, v24, v31, &protocol witness table for UnfairLock);
  swift_release(v37);
  sub_1000166C0();
  swift_release(v23);
  sub_10013053C((uint64_t)v25);
  sub_100098640();
}

double sub_100006F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  double result;

  v0 = ((uint64_t (*)(void))ProxyContainer.public.getter)();
  v1 = sub_1000BA294(&qword_100BD0970);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_1004D7588);
  swift_release(v4);
  v5 = swift_release(v0);
  v6 = ProxyContainer.public.getter(v5);
  v7 = sub_1000BA294(&qword_100BE8748);
  v10 = sub_1000BA3CC(v7, v8, v9, (uint64_t)sub_1004D7798);
  swift_release(v10);
  v11 = swift_release(v6);
  v12 = ProxyContainer.private.getter(v11);
  RegistrationContainer.lazy(block:)(sub_1004D77AC, 0);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_100006FE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LocationViewCollisionOptionsUpdatingView(0) + 36));
  v6 = *v5;
  v7 = v5[1];
  v15 = *v5;
  v16 = v7;
  v8 = sub_1000BA294(&qword_100BEF028);
  State.wrappedValue.getter(&v17, v8);
  v9 = v17;
  v10 = sub_100152E40();
  swift_release(v9);
  if ((v10 & 1) == 0)
  {
    v15 = v6;
    v16 = v7;
    State.wrappedValue.getter(&v17, v8);
    v11 = v17;
    sub_100152DE0(1);
    swift_release(v11);
    v12 = *(_QWORD *)(a1 + 80);
    v13 = type metadata accessor for Location.Identifier(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v13);
    sub_1000318C0(v12, (uint64_t)v4);
    sub_100021A68((uint64_t)v4, &qword_100BCD680);
  }
}

uint64_t sub_100007108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v43 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v40 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v38 - v10;
  v12 = *(_QWORD *)(v9 + 24);
  v14 = type metadata accessor for SlowDeviceGridView(0, v5, v12, v13);
  v39 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v38 - v18;
  v20 = type metadata accessor for _ConditionalContent(0, v14, v5);
  v41 = *(_QWORD *)(v20 - 8);
  v42 = v20;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v38 - v22;
  if (DeviceIsVerySlow(v21))
  {
    v24 = *(_QWORD *)v3;
    v38 = *((_QWORD *)v3 + 1);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v11, &v3[*(int *)(a1 + 36)], v5);
    v25 = swift_unknownObjectRetain(v24);
    sub_1005BA7BC(v25, v38, (uint64_t)v11, v5, v12, v17);
    v26 = sub_100099A04((uint64_t)&unk_1009B1A68);
    sub_1000B2074(v17, v14, v26);
    v27 = *(void (**)(char *, uint64_t))(v39 + 8);
    sub_1000BC60C();
    sub_1000B1100((uint64_t)v19, v14, (uint64_t)v17);
    sub_1001589C0((uint64_t)v17, v14, v5, v26, v12, v28, v29, v30, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47);
    sub_1000BC60C();
    v27(v19, v14);
  }
  else
  {
    sub_1000B2074(&v3[*(int *)(a1 + 36)], v5, v12);
    sub_1000B1100((uint64_t)v11, v5, (uint64_t)v8);
    v31 = sub_100099A04((uint64_t)&unk_1009B1A68);
    sub_1000B20B0((uint64_t)v8, v14, v5, v31, v12, v32, v33, v34, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47);
    v35 = *(void (**)(char *, uint64_t))(v40 + 8);
    v35(v8, v5);
    v35(v11, v5);
  }
  v44 = sub_100099A04((uint64_t)&unk_1009B1A68);
  v45 = v12;
  v36 = v42;
  sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  sub_1000B1100((uint64_t)v23, v36, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v23, v36);
}

double sub_1000073C4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  type metadata accessor for PerformanceTestManager();
  sub_1000BAE5C();
  v8 = RegistrationContainer.register<A>(_:name:factory:)(v2, v3, v4, v5, v6, v7);
  swift_release(v8);
  v9 = swift_release(v1);
  v10 = ProxyContainer.public.getter(v9);
  sub_1000BA294(&qword_100BE7B18);
  sub_1000BAE5C();
  v17 = RegistrationContainer.register<A>(_:name:factory:)(v11, v12, v13, v14, v15, v16);
  swift_release(v17);
  v18 = swift_release(v10);
  v19 = ProxyContainer.private.getter(v18);
  RegistrationContainer.lazy(block:)(sub_1004D0FAC, 0);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

id sub_100007464(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v9;
  id v10;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v10 = objc_msgSend(a5, "URLForCoordinate:label:", v9, a1, a2);

  return v10;
}

double sub_1000074DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  double result;

  v4 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v7[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v7[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + v7[7] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v5 + v7[9] + 8)).n128_u64[0];
  return result;
}

void sub_100007584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v0;
  v3 = type metadata accessor for ViewType(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  sub_100098728();
  v37 = v5 - v4;
  v6 = sub_10009876C();
  v7 = type metadata accessor for UUID(v6);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v38 = sub_1000C4A10();
  v11 = *(_QWORD *)(v38 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v38);
  v36 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v14 = sub_1000D0190();
  v15 = type metadata accessor for ViewAction(v14);
  v16 = *(_QWORD *)(v15 - 8);
  v33 = v15;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v32 - v20;
  v22 = sub_100145BEC(v2, (uint64_t)&v32 - v20);
  v23 = UUID.init()(v22);
  v24 = UUID.uuidString.getter(v23);
  v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v10, v35);
  v27 = v37;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v37, enum case for ViewType.location(_:), v40);
  sub_1000C5B18((uint64_t)v19, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16));
  ViewData.init(viewSessionID:viewType:viewAction:)(v24, v26, v27, v19);
  v28 = v36;
  sub_1000C5B18(v36, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v29 = *(unsigned __int8 *)(v11 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = swift_allocObject(&unk_100B75F90, v30 + v12, v29 | 7);
  sub_1000C5B18(v31 + v30, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  Tracker.diagnosticTransaction(block:)(sub_100145AF4, v31);
  swift_release(v31);
  sub_100098B40(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v33);
  sub_100098640();
}

_QWORD *sub_1000077B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v14;
  __n128 v15;

  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  sub_100043CA8((uint64_t)a7, (uint64_t)(v8 + 8));
  v8[13] = a8;
  sub_1000DB418(a7, a7[3]);
  sub_10005329C(&qword_100BF7BE0, v14, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSubscriptionMonitor, (uint64_t)&protocol conformance descriptor for NotificationSubscriptionMonitor);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = swift_retain();
  dispatch thunk of NotificationSubscriptionManagerType.addObserver(_:)(v15);
  swift_release(v8);
  swift_release(a2);
  swift_release(a6);
  swift_release(a4);
  swift_release(a8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a7);
  return v8;
}

uint64_t type metadata accessor for LocationViewComponentFactory()
{
  return objc_opt_self(_TtC7Weather28LocationViewComponentFactory);
}

void sub_1000078E4(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[112];
  _BYTE __dst[112];

  v94 = a3;
  v96 = a2;
  v97 = a4;
  v5 = sub_1000BA294(&qword_100C17CC0);
  v6 = __chkstk_darwin(v5);
  v98 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v93 = (uint64_t)&v86 - v8;
  v9 = sub_1000BA294(&qword_100C17CC8);
  v10 = __chkstk_darwin(v9);
  v95 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v91 = (uint64_t)&v86 - v12;
  v90 = sub_1000BA294(&qword_100C17CD0);
  v13 = __chkstk_darwin(v90);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v87 = (uint64_t)&v86 - v16;
  v88 = sub_1000BA294(&qword_100C17CD8);
  __chkstk_darwin(v88);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1000BA294(&qword_100C17CE0);
  v19 = __chkstk_darwin(v89);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v86 - v22;
  v24 = type metadata accessor for AirQualityComponentView(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000BA294(&qword_100C17CE8);
  v28 = __chkstk_darwin(v27);
  v92 = (uint64_t)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v31 = (char *)&v86 - v30;
  memcpy(__dst, (const void *)a1, sizeof(__dst));
  v32 = *(_QWORD *)(a1 + 144);
  v33 = *(_BYTE *)(a1 + 152);
  sub_10008D47C(v32, v33);
  sub_100109B54();
  v35 = v34;
  sub_1000B15F8(v32, v33);
  sub_10012C008(v35 & 1);
  v100 = v36;
  v99 = v37;
  v38 = *(_QWORD *)(a1 + 112);
  v39 = *(_BYTE *)(a1 + 120);
  sub_10008D47C(v38, v39);
  sub_100109B54();
  v41 = v40;
  sub_1000B15F8(v38, v39);
  sub_10000AB54(a1, (uint64_t)v26, type metadata accessor for AirQualityComponentView);
  if ((v41 & 1) != 0)
  {
    sub_1000215BC((uint64_t)v26, type metadata accessor for AirQualityComponentView);
LABEL_4:
    v46 = *(_QWORD *)(a1 + 112);
    v47 = *(_BYTE *)(a1 + 120);
    sub_10008D47C(v46, v47);
    sub_100109B54();
    v49 = v48;
    sub_1000B15F8(v46, v47);
    if ((v49 & 1) != 0)
      v50 = v99;
    else
      v50 = v100;
    swift_retain();
    sub_10008D47C(v46, v47);
    sub_100109B54();
    v52 = v51;
    sub_1000B15F8(v46, v47);
    memcpy(v101, (const void *)a1, sizeof(v101));
    sub_10012BEC0();
    if ((v52 & 1) != 0)
    {
      v55 = v54;
    }
    else
    {
      v55 = v53;
      v53 = v54;
    }
    v56 = swift_release(v53);
    *(_QWORD *)v21 = static HorizontalAlignment.leading.getter(v56);
    *((_QWORD *)v21 + 1) = 0;
    v21[16] = 1;
    v57 = sub_1000BA294(&qword_100C17D10);
    sub_10095C020(a1, v50, v55, &v21[*(int *)(v57 + 44)]);
    swift_release(v50);
    swift_release(v55);
    sub_1000F111C((uint64_t)v21, (uint64_t)v23, &qword_100C17CE0);
    sub_100037794((uint64_t)v23, (uint64_t)v18, &qword_100C17CE0);
    swift_storeEnumTagMultiPayload(v18, v88, 0);
    sub_10003D2DC(&qword_100C17CF8, &qword_100C17CE0);
    v59 = v58;
    sub_10003D2DC(&qword_100C17D00, &qword_100C17CD0);
    v60 = (uint64_t)v31;
    _ConditionalContent<>.init(storage:)(v18, v89, v90, v59, v61);
    v62 = (uint64_t)v23;
    v63 = &qword_100C17CE0;
    goto LABEL_16;
  }
  v42 = *((_QWORD *)v26 + 18);
  v43 = v26[152];
  sub_10008D47C(v42, v43);
  sub_100109B54();
  v45 = v44;
  sub_1000B15F8(v42, v43);
  sub_1000215BC((uint64_t)v26, type metadata accessor for AirQualityComponentView);
  if ((v45 & 1) != 0)
    goto LABEL_4;
  v64 = static Axis.Set.horizontal.getter();
  v65 = static Axis.Set.vertical.getter();
  v66 = Axis.Set.init(rawValue:)(0);
  v67 = Axis.Set.init(rawValue:)(v66);
  if (Axis.Set.init(rawValue:)(v67 & v64) != v64)
    v66 = Axis.Set.init(rawValue:)(v66 | v64);
  v68 = Axis.Set.init(rawValue:)(v66);
  if (Axis.Set.init(rawValue:)(v68 & v65) != v65)
    LOBYTE(v66) = Axis.Set.init(rawValue:)(v66 | v65);
  v60 = (uint64_t)v31;
  *v15 = v66;
  v69 = sub_1000BA294(&qword_100C17CF0);
  sub_10095BE20((const void *)a1, v100, v99, (uint64_t)&v15[*(int *)(v69 + 44)]);
  v70 = v87;
  sub_1000F111C((uint64_t)v15, v87, &qword_100C17CD0);
  sub_100037794(v70, (uint64_t)v18, &qword_100C17CD0);
  swift_storeEnumTagMultiPayload(v18, v88, 1);
  sub_10003D2DC(&qword_100C17CF8, &qword_100C17CE0);
  v72 = v71;
  sub_10003D2DC(&qword_100C17D00, &qword_100C17CD0);
  _ConditionalContent<>.init(storage:)(v18, v89, v90, v72, v73);
  v62 = v70;
  v63 = &qword_100C17CD0;
LABEL_16:
  sub_100021A14(v62, v63);
  v74 = v91;
  sub_100133EB8(v91);
  v75 = v93;
  sub_10001F9F0(v93);
  v76 = v92;
  sub_100037794(v60, v92, &qword_100C17CE8);
  v77 = v95;
  sub_100037794(v74, v95, &qword_100C17CC8);
  v78 = v98;
  sub_100037794(v75, v98, &qword_100C17CC0);
  v79 = v97;
  sub_100037794(v76, v97, &qword_100C17CE8);
  v80 = (int *)sub_1000BA294(&qword_100C17D08);
  v81 = v79 + v80[12];
  v82 = v96;
  *(_QWORD *)v81 = v96;
  v83 = v60;
  v84 = v94 & 1;
  *(_BYTE *)(v81 + 8) = v94 & 1;
  sub_100037794(v77, v79 + v80[16], &qword_100C17CC8);
  v85 = v79 + v80[20];
  *(_QWORD *)v85 = v82;
  *(_BYTE *)(v85 + 8) = v84;
  sub_100037794(v78, v79 + v80[24], &qword_100C17CC0);
  swift_release(v99);
  swift_release(v100);
  sub_100021A14(v75, &qword_100C17CC0);
  sub_100021A14(v74, &qword_100C17CC8);
  sub_100021A14(v83, &qword_100C17CE8);
  sub_100021A14(v78, &qword_100C17CC0);
  sub_100021A14(v77, &qword_100C17CC8);
  sub_100021A14(v76, &qword_100C17CE8);
}

uint64_t sub_100008100(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v6 = a4;
  if (a4)
  {
    type metadata accessor for LaunchOptionsKey(0);
    v10 = v9;
    sub_1000C0CC8((unint64_t *)&unk_100BCEF40, v11, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10097D070);
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, v10, (char *)&type metadata for Any + 8, v12);
  }
  v13 = a3;
  v14 = a1;
  a5(v13, v6);

  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1000081B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v30[1] = a4;
  v11 = type metadata accessor for TimeZone(0);
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v14);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[5];
  v21 = a1[6];
  sub_1000DB418(a1 + 2, v22);
  dispatch thunk of MoonDataProviderType.nextFullMoonDate(for:timeZone:coordinate:)(a2, a3, v22, v21, a5, a6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17) == 1)
  {
    sub_100021A14((uint64_t)v16, (uint64_t *)&unk_100BD35A0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v24 = a1 + 7;
    v25 = a1[10];
    v26 = a1[11];
    v27 = sub_1000DB418(v24, v25);
    v28 = Location.timeZone.getter(v27);
    v23 = dispatch thunk of MoonStringBuilderType.nextFullMoonDurationString(fullMoonDate:now:timeZone:)(v20, a2, v13, v25, v26, v28);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  return v23;
}

_QWORD *sub_1000083B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2[4] = 0;
  v5 = (uint64_t)v2 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics;
  v6 = type metadata accessor for DisplayMetrics(0);
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  swift_unknownObjectWeakInit((char *)v2 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_window, 0);
  v2[2] = a1;
  v2[3] = a2;
  v7 = (void *)objc_opt_self(NSNotificationCenter);
  v8 = objc_msgSend(v7, "defaultCenter", swift_retain().n128_f64[0]);
  objc_msgSend(v8, "addObserver:selector:name:object:", v2, "updateDisplayMetricsIfChanged", UIContentSizeCategoryDidChangeNotification, 0, swift_retain().n128_f64[0]);

  swift_release(v2);
  swift_release(a2);
  return v2;
}

double sub_1000084B0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100C0A5D0);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_1005C425C);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BF3DC8);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_100146C40);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_1005C4394, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10000854C(uint64_t a1)
{
  int IsSlow;
  double v2;
  unint64_t v3;
  __int128 v5;
  _QWORD v6[2];

  IsSlow = DeviceIsSlow(a1);
  v2 = 20.0;
  if (IsSlow)
    v2 = 0.0;
  *(double *)v6 = v2;
  v6[1] = 0;
  v5 = xmmword_10098AC50;
  v3 = sub_100128C84();
  return static AnyTransition.modifier<A>(active:identity:)(v6, &v5, &type metadata for LocationListTransitionModifier, v3);
}

Swift::Void __swiftcall NotificationSubscriptionMonitor.applicationWillEnterForeground()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v15 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009FFE0();
  v8 = (void *)static OS_dispatch_queue.notifications.getter();
  aBlock[4] = sub_100127ECC;
  v18 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B84E70;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain();
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  sub_10005329C((unint64_t *)&qword_100BFFA20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = v11;
  v13 = sub_1000BA294(&qword_100BD4F10);
  v14 = sub_100121014();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v18);
}

double sub_100008780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v0 = type metadata accessor for CallbackScope(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.callback.getter(v17, v2);
  v5 = v18;
  v6 = v19;
  sub_1000DB418(v17, v18);
  v7 = sub_1000BA294(&qword_100BDFD10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for CallbackScope.any(_:), v0);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v7, v4, LocationSearchEntityFromStringResolver.init(), 0, v7, v5, v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v17);
  v9 = ProxyContainer.public.getter(v8);
  v10 = sub_1000BA294(&qword_100BDFD18);
  v11 = RegistrationContainer.register<A>(_:name:factory:)(v10, 0, 0, sub_1003F7B30, 0, v10);
  swift_release(v11);
  v12 = swift_release(v9);
  v13 = ProxyContainer.public.getter(v12);
  v14 = RegistrationContainer.register<A>(_:name:factory:)(v10, 0x6D6574737973, 0xE600000000000000, sub_100403864, 0, v10);
  swift_release(v14);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100008900@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = type metadata accessor for Tracker(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v6, 0x6E6F697461636F4CLL, 0xEE00656C75646F4DLL, v6, v4, v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = result;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BC43F8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (v16)
  {
    a2[3] = (uint64_t)&type metadata for LocationTracker;
    a2[4] = (uint64_t)&off_100B76058;
    v15 = swift_allocObject(&unk_100B7DEE0, 96, 7);
    *a2 = v15;
    *(_QWORD *)(v15 + 16) = v8;
    result = sub_10003C800(&v19, v15 + 24);
    *(_QWORD *)(v15 + 64) = v16;
    *(_OWORD *)(v15 + 72) = v17;
    *(_QWORD *)(v15 + 88) = v18;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void **sub_100008A68(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *__dst;
  uint64_t v66;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for ListViewAction(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
      if (EnumCaseMultiPayload == 2)
      {
        v36 = type metadata accessor for Location.Identifier(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
        v10 = a1;
        v11 = v6;
        v12 = 2;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_18;
        }
        v8 = type metadata accessor for LocationModel(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = sub_1000BA294(&qword_100BDDB50);
        *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
        v10 = a1;
        v11 = v6;
        v12 = 0;
      }
      swift_storeEnumTagMultiPayload(v10, v11, v12);
LABEL_18:
      v33 = a1;
      v34 = a3;
      v35 = 0;
      goto LABEL_43;
    case 1u:
      v13 = type metadata accessor for LocationViewerViewAction(0);
      v14 = swift_getEnumCaseMultiPayload(a2, v13);
      switch(v14)
      {
        case 2:
          v37 = type metadata accessor for Location.Identifier(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          v16 = a1;
          v17 = v13;
          v18 = 2;
          goto LABEL_21;
        case 1:
          v38 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          v16 = a1;
          v17 = v13;
          v18 = 1;
          goto LABEL_21;
        case 0:
          v15 = type metadata accessor for LocationModel(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
          v16 = a1;
          v17 = v13;
          v18 = 0;
LABEL_21:
          swift_storeEnumTagMultiPayload(v16, v17, v18);
          goto LABEL_23;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_23:
      v33 = a1;
      v34 = a3;
      v35 = 1;
LABEL_43:
      swift_storeEnumTagMultiPayload(v33, v34, v35);
      return a1;
    case 3u:
      v19 = type metadata accessor for SearchViewAction(0);
      switch(swift_getEnumCaseMultiPayload(a2, v19))
      {
        case 0u:
          v20 = type metadata accessor for CodableError(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
          v21 = a1;
          v22 = v19;
          v23 = 0;
          goto LABEL_41;
        case 1u:
          v43 = *a2;
          *a1 = *a2;
          swift_bridgeObjectRetain(v43);
          v21 = a1;
          v22 = v19;
          v23 = 1;
          goto LABEL_41;
        case 2u:
          v44 = a2[1];
          *a1 = *a2;
          a1[1] = v44;
          swift_bridgeObjectRetain(v44);
          v21 = a1;
          v22 = v19;
          v23 = 2;
          goto LABEL_41;
        case 3u:
          v45 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
          v21 = a1;
          v22 = v19;
          v23 = 3;
          goto LABEL_41;
        case 4u:
          v46 = type metadata accessor for LocationOfInterest(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(a1, a2, v46);
          v21 = a1;
          v22 = v19;
          v23 = 4;
          goto LABEL_41;
        case 5u:
          v48 = *a2;
          v47 = a2[1];
          *a1 = *a2;
          a1[1] = v47;
          v50 = a2[2];
          v49 = a2[3];
          a1[2] = v50;
          a1[3] = v49;
          v52 = a2[4];
          v51 = a2[5];
          a1[4] = v52;
          a1[5] = v51;
          v53 = a2[6];
          a1[6] = v53;
          v54 = type metadata accessor for SearchLocation(0);
          v55 = *(int *)(v54 + 32);
          __dst = (char *)a1 + v55;
          v66 = v54;
          v56 = (char *)a2 + v55;
          v57 = type metadata accessor for Location(0);
          v58 = v48;
          swift_bridgeObjectRetain(v50);
          swift_bridgeObjectRetain(v52);
          swift_bridgeObjectRetain(v53);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
          {
            v59 = sub_1000BA294(&qword_100BC35F8);
            memcpy(__dst, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(__dst, v56, v57);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v57);
          }
          v61 = *(int *)(v66 + 36);
          v62 = (char *)a1 + v61;
          v63 = (char *)a2 + v61;
          *(_OWORD *)v62 = *(_OWORD *)v63;
          v62[16] = v63[16];
          v21 = a1;
          v22 = v19;
          v23 = 5;
          goto LABEL_41;
        case 6u:
          v60 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(a1, a2, v60);
          v21 = a1;
          v22 = v19;
          v23 = 6;
LABEL_41:
          swift_storeEnumTagMultiPayload(v21, v22, v23);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          break;
      }
      v33 = a1;
      v34 = a3;
      v35 = 3;
      goto LABEL_43;
    case 4u:
      v24 = type metadata accessor for InteractiveMapViewAction(0);
      switch(swift_getEnumCaseMultiPayload(a2, v24))
      {
        case 0u:
          v25 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
          v26 = a1;
          v27 = v24;
          v28 = 0;
          goto LABEL_29;
        case 1u:
          v39 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          v26 = a1;
          v27 = v24;
          v28 = 1;
          goto LABEL_29;
        case 2u:
          v40 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
          v26 = a1;
          v27 = v24;
          v28 = 2;
          goto LABEL_29;
        case 3u:
          v41 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
          v26 = a1;
          v27 = v24;
          v28 = 3;
          goto LABEL_29;
        case 4u:
          v42 = type metadata accessor for Location(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
          v26 = a1;
          v27 = v24;
          v28 = 4;
LABEL_29:
          swift_storeEnumTagMultiPayload(v26, v27, v28);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          break;
      }
      v33 = a1;
      v34 = a3;
      v35 = 4;
      goto LABEL_43;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
      *((_BYTE *)a1 + 18) = *((_BYTE *)a2 + 18);
      v29 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      v33 = a1;
      v34 = a3;
      v35 = 5;
      goto LABEL_43;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

BOOL sub_1000090B4(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && v5 == v6;
  if (v8 || (v9 = sub_100099264(v7, v5, *(_QWORD *)a2, v6), result = 0, (v9 & 1) != 0))
  {
LABEL_10:
    v11 = *(unsigned __int8 *)(a2 + 32);
    if (*(unsigned __int8 *)(a1 + 32) == 255)
    {
      if (v11 != 255)
        return 0;
    }
    else
    {
      if (v11 == 255)
        return 0;
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_100121E1C(v12, v13, *(_BYTE *)(a2 + 32));
      v14 = sub_1000BA73C();
      sub_100121E1C(v14, v15, v16);
      v17 = sub_1000BA73C();
      v18 = static TemporalString.== infix(_:_:)(v17);
      sub_100121E30(v12, v13, v11);
      v19 = sub_1000BA73C();
      a3.n128_f64[0] = sub_100121E30(v19, v20, v21);
      if ((v18 & 1) == 0)
        return 0;
    }
    if ((sub_1000240AC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40), a3) & 1) != 0)
    {
      v22 = (int *)type metadata accessor for MoonComponentViewModel(0);
      if ((static Date.== infix(_:_:)(a1 + v22[7], a2 + v22[7]) & 1) != 0)
      {
        v23 = v22[8];
        v24 = *(unsigned __int8 *)(a2 + v23);
        if (*(_BYTE *)(a1 + v23) == 8)
        {
          if ((_DWORD)v24 == 8)
            return *(double *)(a1 + v22[9]) == *(double *)(a2 + v22[9]);
        }
        else if ((_DWORD)v24 != 8)
        {
          v25 = ((uint64_t (*)(void))MoonPhase.rawValue.getter)();
          v27 = v26;
          v28 = MoonPhase.rawValue.getter(v24);
          if (v25 == v28 && v27 == v29)
          {
            swift_bridgeObjectRelease_n(v27, 2);
          }
          else
          {
            v31 = v29;
            v32 = sub_100099264(v25, v27, v28, v29);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v31);
            result = 0;
            if ((v32 & 1) == 0)
              return result;
          }
          return *(double *)(a1 + v22[9]) == *(double *)(a2 + v22[9]);
        }
      }
    }
    return 0;
  }
  return result;
}

void SessionEventsAndDataCoordinator.appConfigurationDidRefresh(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1000C2184((uint64_t)&unk_100B6CAF0);
  sub_1000D1700(v1);
  sub_10009D4E0();
  asyncMain(block:)(sub_1002F92A4, v0);
  sub_1000C6650();
  sub_10004A298();
}

double sub_1000092BC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BD4CF0);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_1002D92EC);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BD4CF8);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_100144D94);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_1002D954C, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_100009358(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BD0960);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_100615FDC);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BF7670);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_1001360A8);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_1006161B4, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000093F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v10;
  v11 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = type metadata accessor for WeatherDescription(0);
  swift_bridgeObjectRetain(v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294(&qword_100BC3368);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[8];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  v27 = type metadata accessor for WeatherChanges(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = sub_1000BA294(&qword_100BCCC48);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  v29 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  return a1;
}

void sub_1000095E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];

  v1 = v0;
  v49 = type metadata accessor for AutomationInfo(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v48 = v4 - v3;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  sub_1000BA294(&qword_100C17C90);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = sub_1000BA294(&qword_100C17C98);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v44 = sub_1000BA294(&qword_100C17CA0);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  sub_100098728();
  v20 = v19 - v18;
  sub_1000BA294(&qword_100BD9AC8);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100098728();
  v24 = v23 - v22;
  v25 = *(_QWORD *)(v1 + 144);
  v26 = *(_BYTE *)(v1 + 152);
  sub_10008D47C(v25, v26);
  sub_100109B54();
  v28 = v27;
  v29 = sub_1000B15F8(v25, v26);
  if ((v28 & 1) != 0)
    v30 = 0x4030000000000000;
  else
    v30 = 0;
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v29);
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 1;
  v31 = sub_1000BA294(&qword_100C17CA8);
  sub_1000078E4(v1, v30, (v28 & 1) == 0, v12 + *(int *)(v31 + 44));
  v32 = static Edge.Set.top.getter();
  v33 = EdgeInsets.init(_all:)(1.0);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_100037794(v12, v17, &qword_100C17C90);
  v40 = v17 + *(int *)(v13 + 36);
  *(_BYTE *)v40 = v32;
  *(double *)(v40 + 8) = v33;
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = v37;
  *(_QWORD *)(v40 + 32) = v39;
  *(_BYTE *)(v40 + 40) = 0;
  sub_100021A14(v12, &qword_100C17C90);
  static AccessibilityChildBehavior.combine.getter();
  v41 = sub_10095D47C();
  View.accessibilityElement(children:)(v8, v13, v41);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v8, v47);
  sub_100021A14(v17, &qword_100C17C98);
  v50[0] = v13;
  v50[1] = v41;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v50, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityRespondsToUserInteraction(_:)(1, v44, OpaqueTypeConformance2);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v20, v44);
  v43 = type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload(v48, v43, 17);
  swift_storeEnumTagMultiPayload(v48, v49, 1);
  sub_100335658();
  sub_1000215BC(v48, type metadata accessor for AutomationInfo);
  sub_100021A14(v24, &qword_100BD9AC8);
}

uint64_t sub_1000098FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v4 = type metadata accessor for MainAction(0);
  result = __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v9 = *(uint64_t (**)(uint64_t))(a2 + 136);
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 144);
      *v7 = v8;
      v11 = type metadata accessor for LocationsAction(0);
      swift_storeEnumTagMultiPayload(v7, v11, 5);
      swift_storeEnumTagMultiPayload(v7, v4, 3);
      v13 = 0;
      memset(v12, 0, sizeof(v12));
      sub_1000FDC6C((uint64_t)v9, v10);
      swift_bridgeObjectRetain(v8);
      sub_1000A5EBC((uint64_t)v7, (uint64_t)v12, v9);
      sub_100021A14((uint64_t)v12, (uint64_t *)&unk_100BFFA10);
      sub_1000215BC((uint64_t)v7, type metadata accessor for MainAction);
      return sub_1000BF8D0((uint64_t)v9, v10);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100009A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100033A6C();
  v6 = v5[2];
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for LocationContentView(0) + 80));
    v8 = *v7;
    if (*v7)
    {
      v9 = type metadata accessor for TipCoordinator(0);
      swift_retain();
      ObservableResolver.resolve<A>(_:)(v9, v9);
      swift_release(v8);
      v10 = v19;
      if (v19)
      {
        v11 = *(_QWORD *)(v1 + 8);
        swift_retain();
        sub_10008D488();
        swift_release(v11);
        v12 = *(_QWORD *)&v4[*(int *)(v2 + 28)];
        swift_bridgeObjectRetain(v12);
        sub_1000215BC((uint64_t)v4, type metadata accessor for LocationViewModel);
        sub_100095568(v12);
        v14 = v13;
        sub_100034B14(v13);
        swift_release(v10);
        swift_bridgeObjectRelease(v14);
        return;
      }
      __break(1u);
    }
    v15 = v7[1];
    v16 = type metadata accessor for ObservableResolver(0);
    sub_10007A100((uint64_t)&qword_100BD0930);
    EnvironmentObject.error()(0, v15, v16, v17);
    __break(1u);
  }
}

uint64_t *sub_100009B8C(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = type metadata accessor for CurrentLocation(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v8);
        if (EnumCaseMultiPayload == 2)
        {
          v26 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
          v11 = a1;
          v12 = v8;
          v13 = 2;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          v27 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
          v11 = a1;
          v12 = v8;
          v13 = 1;
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            goto LABEL_17;
          }
          v10 = type metadata accessor for Location(0);
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
          v11 = a1;
          v12 = v8;
          v13 = 0;
        }
        swift_storeEnumTagMultiPayload(v11, v12, v13);
LABEL_17:
        v17 = a1;
        v18 = a3;
        v19 = 0;
        goto LABEL_18;
      case 1u:
        v15 = type metadata accessor for Location(0);
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = sub_1000BA294(&qword_100BDEBF8);
        *((_BYTE *)a1 + *(int *)(v16 + 48)) = a2[*(int *)(v16 + 48)];
        v17 = a1;
        v18 = a3;
        v19 = 1;
        goto LABEL_18;
      case 2u:
        v20 = *(_QWORD *)a2;
        v21 = *((_QWORD *)a2 + 1);
        *a1 = v20;
        a1[1] = v21;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        v17 = a1;
        v18 = a3;
        v19 = 2;
        goto LABEL_18;
      case 5u:
        v22 = *(_QWORD *)a2;
        *a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain(v22);
        v17 = a1;
        v18 = a3;
        v19 = 5;
        goto LABEL_18;
      case 6u:
        v23 = *(_QWORD *)a2;
        v24 = *((_QWORD *)a2 + 1);
        v25 = a2[16];
        sub_100163980(v23, v24, v25);
        *a1 = v23;
        a1[1] = v24;
        *((_BYTE *)a1 + 16) = v25;
        v17 = a1;
        v18 = a3;
        v19 = 6;
LABEL_18:
        swift_storeEnumTagMultiPayload(v17, v18, v19);
        return a1;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  v14 = *(_QWORD *)a2;
  *a1 = *(_QWORD *)a2;
  a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
  swift_retain();
  return a1;
}

void sub_100009DD0(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(double *);
  uint64_t (*v14)@<X0>(_QWORD *@<X8>);

  if (*a1 == 1)
  {
    v11 = static Color.clear.getter(a1);
    v12 = (_QWORD *)swift_allocObject(&unk_100B6FBE8, 48, 7);
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a4;
    v12[5] = a5;
    swift_retain();
    swift_retain();
    swift_retain();
    v13 = sub_10013DD44;
    v14 = sub_10013DDD4;
  }
  else
  {
    v11 = 0;
    v14 = 0;
    v13 = 0;
    v12 = 0;
  }
  *a6 = v11;
  a6[1] = (uint64_t)v14;
  a6[2] = 0;
  a6[3] = (uint64_t)v13;
  a6[4] = (uint64_t)v12;
}

double sub_100009E90(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BD22A8);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_100295AB8);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BD22B0);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_10012E31C);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_100295C90, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100009F2C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100009F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WeatherComponentButton(0, v11, v12, v13);
  sub_1000B2074(a1 + *(int *)(v14 + 40), a2, a3);
  sub_1000B1100((uint64_t)v10, a2, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a2);
}

uint64_t sub_10000A000@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  char v18;
  double v19;
  double v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v10 = *(_QWORD *)(a3 - 8);
  v11 = __chkstk_darwin(a1);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v24 - v15;
  v18 = v17 & 1;
  sub_10008D47C(v14, v17 & 1);
  sub_10006A9A8();
  v20 = v19;
  v21 = sub_1000B15F8(a1, v18);
  a2(v21, v20);
  sub_1000B2074(v13, a3, a4);
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, a3);
  sub_1000B1100((uint64_t)v16, a3, a5);
  return ((uint64_t (*)(char *, uint64_t))v22)(v16, a3);
}

void sub_10000A11C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t active;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[9];
  _BYTE v69[32];

  v2 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v2);
  v59 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v4);
  v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocationWeatherDataState(0);
  v6 = __chkstk_darwin(v63);
  v61 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v59 - v8;
  v9 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  v13 = __chkstk_darwin(active);
  v66 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v59 - v16;
  __chkstk_darwin(v15);
  v67 = (uint64_t)&v59 - v18;
  v19 = (int *)type metadata accessor for ViewState(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v24 = (char *)&v59 - v23;
  v65 = a1;
  v25 = *(_QWORD *)(a1 + 64);
  sub_100080C0C(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)&v59 - v23, type metadata accessor for ViewState);
  v26 = *(_QWORD *)&v24[v19[9] + 8];
  sub_1000215BC((uint64_t)v24, type metadata accessor for ViewState);
  if (v26 != 1)
  {
    v27 = v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
    if (!*(_BYTE *)(v27 + *(int *)(type metadata accessor for NotificationsOptInState(0) + 48)))
    {
      sub_100080C0C(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v22, type metadata accessor for ViewState);
      sub_100080C0C((uint64_t)&v22[v19[5]], (uint64_t)v11, type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
      {
        sub_1000215BC((uint64_t)v11, type metadata accessor for ViewState.SecondaryViewState);
      }
      else
      {
        v30 = *v11;
        if (*(_QWORD *)&v22[v19[9] + 8] != 1
          || (v31 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
              objc_msgSend(v31, "userInterfaceIdiom"),
              v31,
              (v22[v19[7]] & 1) != 0))
        {
          sub_1000215BC((uint64_t)v22, type metadata accessor for ViewState);
          sub_100080C0C(v30 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v17, type metadata accessor for LocationViewerActiveLocationState);
          swift_release(v30);
          v32 = v67;
          sub_10007802C((uint64_t)v17, v67, type metadata accessor for LocationViewerActiveLocationState);
          v33 = type metadata accessor for Location.Identifier(0);
          v34 = v66;
          _s7Weather24LocationCompositionStateOwst_0(v66, 1, 1, v33);
          v35 = sub_1000F0BB4(v32, v34);
          sub_1000215BC(v34, type metadata accessor for LocationViewerActiveLocationState);
          if ((v35 & 1) == 0)
          {
            v36 = v65;
            v37 = *(_QWORD *)(*(_QWORD *)(v65 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
            swift_bridgeObjectRetain(v37);
            sub_10008B21C();
            v39 = v38;
            v40 = (uint64_t)v64;
            sub_1000EED10(v41, v38, v37);
            swift_bridgeObjectRelease(v39);
            swift_bridgeObjectRelease(v37);
            v42 = v63;
            if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v63) == 1)
            {
              sub_1000215BC(v32, type metadata accessor for LocationViewerActiveLocationState);
              sub_100021A14(v40, &qword_100BC3380);
              return;
            }
            v43 = v40;
            v44 = v62;
            sub_10007802C(v43, v62, type metadata accessor for LocationWeatherDataState);
            v45 = v61;
            sub_100080C0C(v44, v61, type metadata accessor for LocationWeatherDataState);
            if (swift_getEnumCaseMultiPayload(v45, v42) != 1)
            {
              sub_1000215BC(v44, type metadata accessor for LocationWeatherDataState);
              sub_1000215BC(v32, type metadata accessor for LocationViewerActiveLocationState);
              v29 = v45;
              v28 = type metadata accessor for LocationWeatherDataState;
              goto LABEL_22;
            }
            v46 = sub_1000BA294(&qword_100BC3358);
            v47 = v45 + *(int *)(v46 + 48);
            v48 = v45 + *(int *)(v46 + 64);
            v49 = v59;
            sub_10007802C(v45, v59, type metadata accessor for WeatherData);
            sub_1000215BC(v48, type metadata accessor for NewsDataModel);
            sub_1000215BC(v47, type metadata accessor for PreprocessedWeatherData);
            v50 = *(_QWORD *)(v36 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
            swift_beginAccess(v50, v69, 0, 0);
            LOBYTE(v50) = *(_BYTE *)(v50 + 2) == 4;
            v51 = v60;
            sub_1000DB418((_QWORD *)(v60 + 32), *(_QWORD *)(v60 + 56));
            v52 = sub_100023644(v49, v50);
            v54 = v52;
            v55 = v53;
            if (*(_QWORD *)(v53 + 16))
            {
              swift_bridgeObjectRelease(v53);
              swift_bridgeObjectRelease(v54);
              v56 = 2;
            }
            else
            {
              if (v52[2])
              {
                Hasher.init(_seed:)(v68);
                String.hash(into:)(v68, 0x7469706963657270, 0xED00006E6F697461);
                v57 = Hasher._finalize()() & ~(-1 << *((_BYTE *)v54 + 32));
                if (((*(_QWORD *)((char *)v54 + ((v57 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v57) & 1) != 0)
                  __asm { BR              X9 }
              }
              swift_bridgeObjectRelease(v55);
              swift_bridgeObjectRelease(v54);
              v56 = 1;
            }
            v58 = swift_allocObject(&unk_100B64B98, 25, 7);
            *(_QWORD *)(v58 + 16) = v51;
            *(_BYTE *)(v58 + 24) = v56;
            swift_retain();
            asyncMain(block:)(sub_10020CA68, v58);
            swift_release(v58);
            sub_1000215BC(v49, type metadata accessor for WeatherData);
            sub_1000215BC(v44, type metadata accessor for LocationWeatherDataState);
          }
          v28 = type metadata accessor for LocationViewerActiveLocationState;
          v29 = v32;
          goto LABEL_22;
        }
        swift_release(v30);
      }
      v28 = type metadata accessor for ViewState;
      v29 = (uint64_t)v22;
LABEL_22:
      sub_1000215BC(v29, v28);
    }
  }
}

uint64_t sub_10000A8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DisplayMetrics(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10000A918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  _OWORD v6[2];
  char v7;
  _BYTE v8[40];

  v1 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!sub_10003BE20())
  {
    type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
    v4 = sub_1000BA294(&qword_100BEE5E8);
    State.wrappedValue.getter(v3, v4);
    sub_1000BF3B4();
    v5 = *(_OWORD *)(v0 + 16);
    v6[0] = *(_OWORD *)v0;
    v6[1] = v5;
    v7 = *(_BYTE *)(v0 + 32);
    sub_1000787D4((uint64_t)v6, (uint64_t)v8, &qword_100BC3BB0);
    sub_1001171F4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55E4);
    sub_10011740C();
    sub_1001171F4((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31C4);
  }
}

double sub_10000AA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _OWORD v10[2];
  char v11;
  _BYTE v12[40];

  v1 = type metadata accessor for DisplayMetrics(0);
  __chkstk_darwin(v1);
  v2 = v0 + *(int *)(type metadata accessor for LocationViewBannerContainer(0) + 24);
  v11 = *(_BYTE *)(v2 + 32);
  v3 = *(_OWORD *)(v2 + 16);
  v10[0] = *(_OWORD *)v2;
  v10[1] = v3;
  sub_1000787D4((uint64_t)v10, (uint64_t)v12, &qword_100BC3BB0);
  sub_1001171F4((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55E4);
  sub_10011740C();
  v5 = v4;
  sub_1001171F4((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31C4);
  sub_100117228(v6);
  v7 = sub_100015810();
  sub_1000BF3B4();
  sub_100117228(v8);
  sub_100016BF8();
  sub_1000BF3B4();
  return v5 + v7;
}

void sub_10000AB54(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_10009D2C8(v3);
  sub_10004A298();
}

uint64_t sub_10000AB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  __int128 v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;

  v1 = sub_1000BA294(&qword_100BC5F60);
  __chkstk_darwin(v1);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5F88);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5F90);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = sub_1000BA294(&qword_100BC5F98);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BC5FA0);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BC5FA8);
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100BC5FB0);
  __chkstk_darwin(v22);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DB418((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  sub_10083D478((uint64_t)&v58);
  if (v59)
  {
    sub_10003C800(&v58, (uint64_t)v60);
    v54 = sub_10005B5D0();
    v25 = type metadata accessor for AppConfigurationState(0);
    v57 = v24;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 1, 1, v25);
    v26 = type metadata accessor for EnvironmentState(0);
    v55 = v21;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 1, 1, v26);
    v27 = v18;
    v28 = v61;
    v29 = v62;
    sub_1000DB418(v60, v61);
    v30 = (uint64_t)v27;
    (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    v31 = type metadata accessor for NotificationsOptInState(0);
    v56 = v15;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v31);
    v32 = v61;
    v33 = v62;
    sub_1000DB418(v60, v61);
    (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
    v34 = type metadata accessor for TimeState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v34) == 1)
    {
      v35 = sub_10005B5D0();
      sub_100078058(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v12, type metadata accessor for TimeState);
      swift_release(v35);
      sub_100021AA4((uint64_t)v9, &qword_100BC5F90);
    }
    else
    {
      sub_10007C75C((uint64_t)v9, (uint64_t)v12, type metadata accessor for TimeState);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v34);
    v37 = type metadata accessor for ViewState(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v37);
    v38 = type metadata accessor for ModalViewState(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v38);
    v39 = v61;
    v40 = v62;
    v52 = v12;
    sub_1000DB418(v60, v61);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v48 = v54;
    v51 = (uint64_t)v12;
    v49 = (uint64_t)v56;
    v50 = (uint64_t)v55;
    v53 = sub_1000DEBAC(0, 3, (uint64_t)v57, (uint64_t)v55, v30, 0, 0, 0, (uint64_t)v56, v51, (uint64_t)v6, (uint64_t)v3, v41, v42, v44, v46, 0, 0, 0,
            v54);
    sub_1005C6044(v41, v43, v45, v47);
    swift_release(v48);
    sub_100021AA4((uint64_t)v3, &qword_100BC5F60);
    sub_100021AA4((uint64_t)v6, &qword_100BC5F88);
    sub_100021AA4((uint64_t)v52, &qword_100BC5F90);
    sub_100021AA4(v49, &qword_100BC5F98);
    sub_100021AA4(v30, &qword_100BC5FA0);
    sub_100021AA4(v50, &qword_100BC5FA8);
    sub_100021AA4((uint64_t)v57, &qword_100BC5FB0);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v60);
    return v53;
  }
  else
  {
    sub_100021AA4((uint64_t)&v58, (uint64_t *)&unk_100C09BC0);
    return 0;
  }
}

void sub_10000B068(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v4 = type metadata accessor for TranslationModifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC40F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC40F8);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 1.0;
  if (*(_BYTE *)(v2 + *(int *)(v4 + 24)) == 1)
  {
    sub_100175BDC();
    v14 = v15;
  }
  v16 = sub_1000BA294(&qword_100BC4100);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, a1, v16);
  v17 = (double *)&v10[*(int *)(v8 + 36)];
  *v17 = 0.0;
  v17[1] = v14;
  sub_100080C0C(v2, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranslationModifier);
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = v19 + v6;
  v21 = v18 | 7;
  v22 = swift_allocObject(&unk_100B5CEA8, v20, v18 | 7);
  sub_10007802C((uint64_t)v7, v22 + v19, type metadata accessor for TranslationModifier);
  sub_100080C0C(v2, (uint64_t)v7, type metadata accessor for TranslationModifier);
  v23 = swift_allocObject(&unk_100B5CED0, v20, v21);
  sub_10007802C((uint64_t)v7, v23 + v19, type metadata accessor for TranslationModifier);
  sub_100037768((uint64_t)v10, (uint64_t)v13, &qword_100BC40F0);
  v24 = (uint64_t (**)(uint64_t))&v13[*(int *)(v11 + 36)];
  *v24 = sub_100179A2C;
  v24[1] = (uint64_t (*)(uint64_t))v22;
  v24[2] = (uint64_t (*)(uint64_t))sub_100179B1C;
  v24[3] = (uint64_t (*)(uint64_t))v23;
  sub_100021A14((uint64_t)v10, &qword_100BC40F0);
  sub_1000787D4((uint64_t)v13, v26, &qword_100BC40F8);
}

uint64_t sub_10000B29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];

  v2 = type metadata accessor for WeatherMapOverlayKind(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100098728();
  v6 = v5 - v4;
  v7 = type metadata accessor for MapComponentViewModel(0);
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v11 = type metadata accessor for LocationComponentViewModel(0);
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = (_QWORD *)(v13 - v12);
  sub_100018A98(a1, v13 - v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v11);
  if ((_DWORD)EnumCaseMultiPayload)
  {
    switch((_DWORD)EnumCaseMultiPayload)
    {
      case 0x12:
        sub_1000E7530(a1);
        sub_1000E7530((uint64_t)v14);
        return 5;
      case 5:
        sub_10068EEC8((uint64_t)v14, v10);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v10, v2);
        v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
        if ((_DWORD)v21 == enum case for WeatherMapOverlayKind.wind(_:))
        {
          if (qword_100BC2030 != -1)
            swift_once(&qword_100BC2030, sub_10014CE48);
          v22 = sub_1000BA294(&qword_100BC3130);
          v23 = sub_1000AECD4(v22, (uint64_t)&unk_100CAE7C8);
          sub_10009922C(v23, (uint64_t)v25 + 1, 32);
          Tips.Parameter.wrappedValue.getter(v25, v22);
          LODWORD(v22) = LOBYTE(v25[0]);
          v24 = swift_endAccess((char *)v25 + 1);
          sub_1000C3570(v24, type metadata accessor for LocationComponentViewModel);
          sub_10006BD20(v10, type metadata accessor for MapComponentViewModel);
          if ((_DWORD)v22)
            return 2;
          else
            return 3;
        }
        else
        {
          sub_1000C3570(v21, type metadata accessor for LocationComponentViewModel);
          sub_10006BD20(v10, type metadata accessor for MapComponentViewModel);
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
          return 2;
        }
      case 0x10:
        sub_1000E7530(a1);
        sub_1000E7530((uint64_t)v14);
        return 4;
      case 1:
        sub_1000E7530(a1);
        sub_1000E7530((uint64_t)v14);
        return 0;
      default:
        sub_1000E7530(a1);
        sub_1000E7530((uint64_t)v14);
        return 6;
    }
  }
  else
  {
    sub_1000C3570(EnumCaseMultiPayload, type metadata accessor for LocationComponentViewModel);
    v17 = v14[5];
    v18 = v14[7];
    v19 = v14[9];
    v20 = v14[11];
    swift_bridgeObjectRelease(v14[13]);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
    return 1;
  }
}

uint64_t sub_10000B56C(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t result;
  unint64_t v5;
  _OWORD v6[2];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  v7 = v2;
  result = type metadata accessor for Selector.ModelState(319, (uint64_t)v6);
  if (v5 <= 0x3F)
  {
    *(_QWORD *)&v6[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, v6, a1 + 120);
    if (!result)
      return 0;
  }
  return result;
}

double sub_10000B5EC(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  KeyPath = swift_getKeyPath(a2);
  sub_1000ED048(KeyPath, v3, v4, v5, v6, v7, v8, v9, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_10000B63C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for AirQualityScaleCategory(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AirQualityScale(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = AirQuality.scale.getter(v8);
  v26 = AirQualityScale.displayLabel.getter(v11);
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v15 = AirQuality.currentScaleCategory.getter(v14);
  v16 = AirQualityScaleCategory.glyph.getter(v15);
  v18 = v17;
  v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v18)
    v20 = v16;
  else
    v20 = 0x776F6C2E697161;
  if (v18)
    v21 = v18;
  else
    v21 = 0xE700000000000000;
  v22 = AirQuality.isSignificant.getter(v19);
  *(_QWORD *)a1 = v26;
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(a1 + 24) = v21;
  *(_BYTE *)(a1 + 32) = v22 & 1;
  v23 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a1, v23, 0).n128_u64[0];
  return result;
}

void sub_10000B7A4(uint64_t a1, uint64_t *a2, _BYTE *a3, _BYTE *a4, uint64_t *a5, _BYTE *a6, _BYTE *a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BYTE *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char v51;
  _BYTE *v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE *v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  char v84;
  _BYTE *v85;
  char v86;
  _QWORD v87[2];
  _BYTE *v88;
  _BYTE *v89;
  uint64_t *v90;
  char *v91;
  char *v92;
  _BYTE *v93;
  _BYTE *v94;

  v94 = a7;
  v93 = a6;
  v89 = a4;
  v90 = a5;
  v88 = a3;
  v9 = type metadata accessor for NotificationSubscription.Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v92 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v91 = (char *)v87 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v87 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)v87 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)v87 - v21;
  v24 = NotificationSubscription.precipitationEnabled.getter(v23);
  if ((v24 & 1) != 0)
  {
    v87[1] = v7;
    NotificationSubscription.location.getter(v24);
    sub_10048BDCC();
    v25 = *(_QWORD *)(*a2 + 16);
    sub_1001ADDAC(v25);
    v26 = *a2;
    *(_QWORD *)(v26 + 16) = v25 + 1;
    v27 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v25, v22, v9);
    v28 = NotificationSubscription.location.getter(v27);
    v29 = NotificationSubscription.Location.kind.getter(v28) & 1;
    v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v30(v20, v9);
    v31 = Location.Identifier.Kind.rawValue.getter(v29);
    v33 = v32;
    v34 = Location.Identifier.Kind.rawValue.getter(1);
    if (v31 == v34 && v33 == v35)
    {
      v39 = swift_bridgeObjectRelease_n(v33, 2);
      v41 = 1;
      v40 = v88;
    }
    else
    {
      v37 = v35;
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v34, v35, 0);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v37);
      v40 = v88;
      v41 = v38 | *v88;
    }
    *v40 = v41 & 1;
    v42 = NotificationSubscription.location.getter(v39);
    v43 = NotificationSubscription.Location.kind.getter(v42) & 1;
    v30(v17, v9);
    v44 = Location.Identifier.Kind.rawValue.getter(v43);
    v46 = v45;
    v47 = Location.Identifier.Kind.rawValue.getter(0);
    if (v44 == v47 && v46 == v48)
    {
      v24 = swift_bridgeObjectRelease_n(v46, 2);
      v53 = 1;
      v52 = v89;
    }
    else
    {
      v50 = v48;
      v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v47, v48, 0);
      swift_bridgeObjectRelease(v46);
      swift_bridgeObjectRelease(v50);
      v52 = v89;
      v53 = v51 | *v89;
    }
    *v52 = v53 & 1;
  }
  v54 = NotificationSubscription.severeEnabled.getter(v24);
  if ((v54 & 1) != 0)
  {
    NotificationSubscription.location.getter(v54);
    v55 = v90;
    sub_10048BDCC();
    v56 = *(_QWORD *)(*v55 + 16);
    sub_1001ADDAC(v56);
    v57 = *v55;
    *(_QWORD *)(v57 + 16) = v56 + 1;
    v58 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v57+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v56, v22, v9);
    v59 = v91;
    v60 = NotificationSubscription.location.getter(v58);
    v61 = NotificationSubscription.Location.kind.getter(v60) & 1;
    v62 = *(void (**)(char *, uint64_t))(v10 + 8);
    v62(v59, v9);
    v63 = Location.Identifier.Kind.rawValue.getter(v61);
    v65 = v64;
    v66 = Location.Identifier.Kind.rawValue.getter(1);
    if (v63 == v66 && v65 == v67)
    {
      v71 = swift_bridgeObjectRelease_n(v65, 2);
      v73 = 1;
      v72 = v93;
    }
    else
    {
      v69 = v67;
      v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v66, v67, 0);
      swift_bridgeObjectRelease(v65);
      swift_bridgeObjectRelease(v69);
      v72 = v93;
      v73 = v70 | *v93;
    }
    *v72 = v73 & 1;
    v74 = v92;
    v75 = NotificationSubscription.location.getter(v71);
    v76 = NotificationSubscription.Location.kind.getter(v75) & 1;
    v62(v74, v9);
    v77 = Location.Identifier.Kind.rawValue.getter(v76);
    v79 = v78;
    v80 = Location.Identifier.Kind.rawValue.getter(0);
    if (v77 == v80 && v79 == v81)
    {
      swift_bridgeObjectRelease_n(v79, 2);
      v86 = 1;
      v85 = v94;
    }
    else
    {
      v83 = v81;
      v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v80, v81, 0);
      swift_bridgeObjectRelease(v79);
      swift_bridgeObjectRelease(v83);
      v85 = v94;
      v86 = v84 | *v94;
    }
    *v85 = v86 & 1;
  }
}

double sub_10000BC28(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100BD0968);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_10078F7F8);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BF7668);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_10012C6D4);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v11 = sub_1000BA294(&qword_100C05A10);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_10078F9D0);
  swift_release(v14);
  sub_10009880C();
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_10078F9DC, 0);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_10000BCE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __CFString *v20;
  __CFString *v21;
  SCPreferencesRef v22;
  uint64_t v24;
  _QWORD *v25;

  v3 = v0;
  v24 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v5 = sub_1000BA8E0();
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(v5);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098694();
  type metadata accessor for DispatchQoS(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock.Options(0);
  sub_1000B42B0();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UnfairLock.Options.dataSynchronization.getter(v12);
  v15 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)(v3 + 24) = UnfairLock.init(options:)(v14);
  sub_10009FFE0();
  static DispatchQoS.unspecified.getter(v16);
  v25 = _swiftEmptyArrayStorage;
  v17 = sub_100051B90((unint64_t *)&qword_100BC29A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_1000BA294(&qword_100BC29B0);
  v19 = sub_1000A60D4((unint64_t *)&qword_100BC29B8, &qword_100BC29B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v18, v19, v6, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v24);
  *(_QWORD *)(v3 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x8000000100A11720, v10, v2, v1, 0);
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  v20 = (__CFString *)String._bridgeToObjectiveC()();
  v21 = (__CFString *)String._bridgeToObjectiveC()();
  v22 = SCPreferencesCreate(0, v20, v21);

  *(_QWORD *)(v3 + 16) = v22;
  return v3;
}

uint64_t sub_10000BF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for Material(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingReader(0);
  v4 = static SettingReader.shared.getter();
  if (qword_100BC2160 != -1)
    swift_once(&qword_100BC2160, sub_10015B1CC);
  v5 = qword_100CAEC80;
  v6 = DeviceSupportsMaterialBackgrounds();
  LOBYTE(v5) = SettingReader.isEnabled(_:with:)(v5, v6);
  swift_release(v4);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = swift_allocObject(&unk_100B80D98, 17, 7);
  *(_BYTE *)(v8 + 16) = v5 & 1;
  static Material.coreMaterial(bundle:provider:)(v7, sub_1001542EC, v8);

  swift_release(v8);
  Material.applyingFiltersInPlace(_:)((v5 & 1) == 0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10000C09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v24;

  v0 = type metadata accessor for Container.TestSuite(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C2974();
  v4 = sub_1000BA294(&qword_100BF5990);
  v7 = sub_1000BA3CC(v4, v5, v6, (uint64_t)sub_1005EB5E0);
  swift_release(v7);
  sub_10009880C();
  sub_1000C2974();
  v8 = sub_1000BA294(&qword_100BF5998);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_10012EB1C);
  swift_release(v11);
  sub_10009880C();
  sub_1000C2974();
  v12 = sub_1000BA294(&qword_100BED538);
  v15 = sub_1000BA3CC(v12, v13, v14, (uint64_t)sub_10012EB30);
  swift_release(v15);
  sub_10009880C();
  sub_1000C2974();
  v16 = sub_1000BA294(&qword_100BED528);
  v19 = sub_1000BA3CC(v16, v17, v18, (uint64_t)sub_1005EB7B8);
  sub_10009880C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Container.TestSuite.performance(_:), v0);
  v20 = Definition.whenTesting(_:_:)(v3, sub_1005EB7CC, 0);
  swift_release(v20);
  v21 = swift_release(v19);
  v22.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v1 + 8))(v3, v0, v21);
  ProxyContainer.private.getter(v22);
  RegistrationContainer.lazy(block:)(sub_1005EB810, 0);
  return sub_10009880C();
}

uint64_t sub_10000C214(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&a3[*(int *)(type metadata accessor for LocationInput(0) + 64) + 16];
  swift_bridgeObjectRetain(a2);
  sub_1000EED10(a1, a2, v9);
  swift_bridgeObjectRelease(a2);
  LOBYTE(a2) = sub_100131A90((uint64_t)v8);
  sub_100021A14((uint64_t)v8, &qword_100BC3380);
  return *a3 & ~(_BYTE)a2 & 1;
}

uint64_t sub_10000C2E4(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  double *v34;
  uint64_t v35;

  v4 = type metadata accessor for ScenePhase(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v32 - v9;
  v11 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v14);
  v16 = (double *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = 0;
  v34 = a1;
  v17 = *a1;
  v18 = a2 + *(int *)(v11 + 24);
  v19 = sub_1000BA294(&qword_100BEE5E8);
  v32[1] = v18;
  State.wrappedValue.getter(v16, v19);
  v20 = *v16;
  sub_1000BF3B4();
  v33 = a2;
  sub_100080C0C(a2, (uint64_t)v13, type metadata accessor for ContentStatusBannerPresentationViewModifier);
  if (v17 == v20)
  {
    sub_10015922C();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for ScenePhase.background(_:), v4);
    sub_10007A100((uint64_t)&unk_100C0A050);
    v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v21);
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v8, v4);
    v23(v10, v4);
    sub_1000BF3B4();
    v26 = v33;
    v25 = v34;
    if ((v22 & 1) == 0)
    {
      State.wrappedValue.getter(v16, v19);
      sub_1000BF684();
      v28 = v27;
      sub_1000BF3B4();
      v24 = Transaction.animation.setter(v28);
    }
  }
  else
  {
    sub_1000BF3B4();
    v26 = v33;
    v25 = v34;
  }
  v29 = v35;
  __chkstk_darwin(v24);
  v32[-2] = v26;
  v32[-1] = v25;
  swift_retain();
  withTransaction<A>(_:_:)(v30, sub_1001242AC, &v32[-4], (char *)&type metadata for () + 8);
  swift_release(v29);
  return swift_release(v29);
}

double sub_10000C5A4@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  sub_100079FBC();
  v8 = type metadata accessor for CurrentWeather(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Array<A>.alerts(prominence:)(a2, a1, v10);
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = *(_QWORD *)(Array<A>.originalAlerts(prominence:)(a2, a1) + 16);
    swift_bridgeObjectRelease();
    v15 = sub_1000C2148();
    v16 = WeatherDataModel.currentWeather.getter(v15);
    CurrentWeather.date.getter(v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    *a3 = v13;
    a3[1] = v14;
    v17 = type metadata accessor for SevereAlertComponent(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))((char *)a3 + *(int *)(v17 + 24), v3, v29);
    v18 = sub_1000C3270();
    swift_storeEnumTagMultiPayload(a3, v18, 13);
    v19 = sub_1000BCB24();
    _s7Weather24LocationCompositionStateOwst_0(v19, v20, v21, v22);
    sub_100098640();
  }
  else
  {
    sub_1000C3270();
    v24 = sub_1000C34B8();
    _s7Weather24LocationCompositionStateOwst_0(v24, v25, v26, v27);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

id sub_10000C710()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v12;
  Swift::String v13;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIPageControl), "init");
  v2 = v1;
  if (*(_BYTE *)(v0 + 8) == 1)
    objc_msgSend(v1, "setBackgroundStyle:", 1);
  v3 = sub_1000BA294(&qword_100BED048);
  UIViewRepresentableContext.coordinator.getter(&v12, v3);
  v4 = v12;
  objc_msgSend(v2, "addTarget:action:forControlEvents:", v12, "pageDidChange:", 4096);
  swift_release(v4);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = v2;
  v7 = objc_msgSend(v5, "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000039;
  v13._object = (void *)0x8000000100A09410;
  v8._object = (void *)0x8000000100A093F0;
  v8._countAndFlagsBits = 0xD000000000000010;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v13);

  sub_100026EC4(v10._countAndFlagsBits, (uint64_t)v10._object, v6, (SEL *)&selRef_setAccessibilityLabel_);
  return v6;
}

void sub_10000C870()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *oslog;
  _QWORD aBlock[5];
  uint64_t v14;

  if (objc_msgSend((id)objc_opt_self(TFCapabilities), "isInternalBuild"))
  {
    v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v1 = (void *)UIApplication.maybeWindow.getter();

    if (v1)
    {
      v2 = swift_allocObject(&unk_100B792B8, 24, 7);
      swift_weakInit(v2 + 16);
      v3 = swift_allocObject(&unk_100B792E0, 32, 7);
      *(_QWORD *)(v3 + 16) = v2;
      *(_QWORD *)(v3 + 24) = v1;
      aBlock[4] = sub_1004EB548;
      v14 = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100121D84;
      aBlock[3] = &unk_100B792F8;
      v4 = _Block_copy(aBlock);
      v5 = v14;
      v6 = v1;
      objc_msgSend(v6, "ts_installDebugMenuHandler:", v4, swift_release(v5).n128_f64[0]);
      _Block_release(v4);

    }
    else
    {
      if (qword_100BC24C8 != -1)
        swift_once(&qword_100BC24C8, sub_1006F3984);
      v7 = type metadata accessor for Logger(0);
      v8 = sub_1000AECD4(v7, (uint64_t)qword_100CAF240);
      oslog = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter(oslog, v9);
      if (os_log_type_enabled(oslog, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v10, "unable to present debug menu because we have no window", v11, 2u);
        swift_slowDealloc(v11, -1, -1);
      }

    }
  }
}

id sub_10000CA64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  objc_super v23;
  _BYTE v24[24];

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  v13 = (uint64_t)&v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  v14 = type metadata accessor for URL(0);
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v14);
  *(_QWORD *)&v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController] = 0;
  swift_beginAccess(v13, v24, 33, 0);
  v15 = v6;
  sub_10015BB78(a1, v13);
  swift_endAccess(v24);
  v16 = &v15[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v16[16] = a4;
  v17 = &v15[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
  v18 = type metadata accessor for ColorScheme(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a5, v18);
  swift_retain();
  swift_retain();

  v23.receiver = v15;
  v23.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v23, "initWithNibName:bundle:", 0, 0);
  swift_release(a3);
  v21 = swift_release(a2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(a5, v18, v21);
  sub_100021AA4(a1, &qword_100BD4280);
  return v20;
}

Swift::String *sub_10000CBD8()
{
  Swift::String *v0;
  id v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v6;

  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6._object = (void *)0x80000001009F6570;
  v2._countAndFlagsBits = 1937204558;
  v2._object = (void *)0xE400000000000000;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0xD000000000000021;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v6);

  v0[1] = v4;
  return v0;
}

uint64_t sub_10000CC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Location.Identifier(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 2, v4);
}

uint64_t sub_10000CCB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v2 = sub_1000BA294(&qword_100BD1420);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SessionManager.Options(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for SessionManagerConfiguration(0);
  v9 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD1428);
  v13 = swift_allocObject(v12, ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 2 * *(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_10097DA20;
  v14 = static SessionManager.Options.gracefulNoSessionEventSubmission.getter();
  static SessionManager.Options.gracefulEventCreation.getter(v14);
  v37[0] = v13;
  v15 = sub_100051B90((unint64_t *)&qword_100BD1430, (uint64_t (*)(uint64_t))&type metadata accessor for SessionManager.Options, (uint64_t)&protocol conformance descriptor for SessionManager.Options);
  v16 = sub_1000BA294(&qword_100BD1438);
  v17 = sub_100121144();
  dispatch thunk of SetAlgebra.init<A>(_:)(v37, v16, v17, v5, v15);
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = type metadata accessor for FlushProcessor(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v22 = result;
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = type metadata accessor for TimestampJitter(0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v25);
  if ((_DWORD)result == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BD1448);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v37[0])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)(v8, v22, v4, v37[0], v37[1]);
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = type metadata accessor for AppSessionManager(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (result)
  {
    v32 = result;
    v33 = AppSessionManager.createSessionManager(with:)(v11);
    v34 = swift_release(v32);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v36, v34);
    return v33;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LocationViewDescriptor()
{
  return objc_opt_self(_TtC7Weather22LocationViewDescriptor);
}

void sub_10000CFA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  _BYTE __src[97];
  _BYTE __dst[97];

  v48 = a3;
  v47 = type metadata accessor for TaskPriority(0);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WeatherApp(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v41 = sub_1000BA294(&qword_100BFB960);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1000BA294(&qword_100BFB968);
  __chkstk_darwin(v39);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100BFB970);
  __chkstk_darwin(v42);
  v43 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043CA8(a1, (uint64_t)__dst);
  v44 = a2;
  sub_10000AB54(a2, (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WeatherApp);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v14 + 56) & ~v14;
  v38 = v14 | 7;
  v16 = swift_allocObject(&unk_100B88028, v15 + v8, v14 | 7);
  sub_10003C800((__int128 *)__dst, v16 + 16);
  sub_10014E65C((uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  v17 = sub_1000BA294(&qword_100BF74C0);
  *(_QWORD *)&__src[80] = sub_10014D2E8;
  *(_QWORD *)&__src[88] = 0;
  __src[96] = 0;
  *(_QWORD *)__src = v17;
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  swift_beginAccess(&xmmword_100CAE588, v49, 0, 0);
  sub_100037794((uint64_t)&xmmword_100CAE588, (uint64_t)__dst, &qword_100BCED50);
  if (*(_QWORD *)&__dst[24])
  {
    v37 = ~v14;
    sub_10003C800((__int128 *)__dst, (uint64_t)&__src[24]);
    *(_QWORD *)&__src[8] = sub_10014EA4C;
    *(_QWORD *)&__src[16] = v16;
    v18 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    *(_QWORD *)&__src[64] = _swiftEmptyArrayStorage;
    *(_QWORD *)&__src[72] = v18;
    memcpy(__dst, __src, sizeof(__dst));
    sub_100043CA8(a1, (uint64_t)__src);
    v19 = swift_allocObject(&unk_100B88050, 56, 7);
    sub_10003C800((__int128 *)__src, v19 + 16);
    v20 = sub_1000BA294(&qword_100BFB978);
    sub_10003D2DC(&qword_100BFB980, &qword_100BFB978);
    View.onOpenURL(perform:)(sub_100679C64, v19, v20, v21);
    swift_release(v19);
    sub_100021AA4((uint64_t)__dst, &qword_100BFB978);
    __src[0] = UIAccessibilityIsInvertColorsEnabled();
    State.init(wrappedValue:)(__src, &type metadata for Bool);
    v22 = __dst[0];
    v23 = *(_QWORD *)&__dst[8];
    v24 = v40;
    v25 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v12, v10, v41);
    v26 = &v12[*(int *)(v39 + 36)];
    *v26 = v22;
    *((_QWORD *)v26 + 1) = v23;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
    sub_10000AB54(v44, (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WeatherApp);
    sub_100043CA8(a1, (uint64_t)__dst);
    v27 = (v14 + 16) & v37;
    v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject(&unk_100B88078, v28 + 40, v38);
    sub_10014E65C((uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v27);
    v30 = sub_10003C800((__int128 *)__dst, v29 + v28);
    v31 = v45;
    static TaskPriority.userInitiated.getter(v30);
    v32 = (uint64_t)v43;
    v33 = &v43[*(int *)(v42 + 36)];
    v34 = type metadata accessor for _TaskModifier(0);
    v35 = v46;
    v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v33[*(int *)(v34 + 20)], v31, v47);
    *(_QWORD *)v33 = &unk_100BFB990;
    *((_QWORD *)v33 + 1) = v29;
    sub_100037794((uint64_t)v12, v32, &qword_100BFB968);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v36);
    sub_100021AA4((uint64_t)v12, &qword_100BFB968);
    sub_1000F111C(v32, v48, &qword_100BFB970);
  }
  else
  {
    __break(1u);
  }
}

double sub_10000D4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v0 = sub_1000BA294(&qword_100BEFE80);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_100135160, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BEFE88);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_100134F88, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BEFE90);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_100134F44, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BC46D0);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_1001349AC, 0, v6);
  swift_release(v7);
  v8 = sub_1000BA294(&qword_100BC46A0);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_100134C60, 0, v8);
  swift_release(v9);
  v10 = sub_1000BA294(&qword_100BEFE98);
  v11 = RegistrationContainer.register<A>(_:name:factory:)(v10, 0, 0, sub_1001351CC, 0, v10);
  swift_release(v11);
  v12 = type metadata accessor for WeatherConditionBackgroundModelInputFactory(0);
  v13 = RegistrationContainer.register<A>(_:name:factory:)(v12, 0, 0, sub_1001351D8, 0, v12);
  swift_release(v13);
  v14 = sub_1000BA294(&qword_100BEFEA0);
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0, 0, sub_100134EA8, 0, v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t SessionEventsAndDataCoordinator.updateTypes.getter()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_1000BA294(&qword_100BD64E8);
  updated = type metadata accessor for LocationManagerUpdateType(0);
  v2 = *(_QWORD *)(updated - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject(v0, v4 + *(_QWORD *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5 + v4, enum case for LocationManagerUpdateType.authorization(_:), updated);
  return v5;
}

unint64_t sub_10000D6D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v37[6];
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  type metadata accessor for LocationViewComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BC4A98);
  sub_1000B42B0();
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v37 - v11;
  v13 = (int *)type metadata accessor for LocationContentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  if (v18)
    goto LABEL_5;
  if (qword_100BC27D8 != -1)
    swift_once(&qword_100BC27D8, sub_100127F14);
  if (byte_100C11930 == 1)
  {
LABEL_5:
    v37[3] = v6;
    v37[4] = v12;
    v37[5] = v10;
    v20 = v2[5];
    v19 = v2[6];
    sub_1000DB418(v2 + 2, v20);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 16))(a1, a1 + v13[5], a1 + v13[6], a1 + v13[7], *(unsigned __int8 *)(a1 + v13[8]), 2, *(unsigned __int8 *)(a1 + v13[9]), v20, v19);
    if (qword_100BC2410 != -1)
      swift_once(&qword_100BC2410, sub_10015961C);
    v22 = type metadata accessor for Logger(0);
    sub_1000AECD4(v22, (uint64_t)qword_100CAF028);
    sub_100084050(a1, (uint64_t)v16, type metadata accessor for LocationContentState);
    v23 = swift_retain_n(v21 & 0xFFFFFFFFFFFFFFBLL, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(32, -1);
      v37[1] = v2;
      v27 = v26;
      v28 = swift_slowAlloc(64, -1);
      *(_DWORD *)v27 = 141558531;
      v38 = 1752392040;
      v39 = v28;
      v37[2] = v21 & 0xFFFFFFFFFFFFFFBLL;
      v29 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
      *(_WORD *)(v27 + 12) = 2081;
      Location.name.getter(v29);
      v31 = v30;
      v38 = sub_1000CE1C8(v32, v30, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
      swift_bridgeObjectRelease(v31);
      sub_1000215BC((uint64_t)v16, type metadata accessor for LocationContentState);
      *(_WORD *)(v27 + 22) = 2082;
      v33 = sub_10092A044(v21);
      v35 = v34;
      v38 = sub_1000CE1C8(v33, v34, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
      sub_1000C3360();
      swift_bridgeObjectRelease(v35);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Location configuration for %{private,mask.hash}s chosen: %{public}s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy(v28, 2);
      sub_1000986F0(v28);
      sub_1000986F0(v27);

    }
    else
    {
      sub_1000215BC((uint64_t)v16, type metadata accessor for LocationContentState);

      sub_1000C3360();
    }
    __asm { BR              X10 }
  }
  return 0xC000000000000004;
}

_QWORD *sub_10000E0CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10000E140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1000B15F8(v6, v7);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain();
  swift_release(v10);
  return a1;
}

void sub_10000E1AC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CurrentLocation(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + 56);
  v16 = *(_QWORD *)(v1 + 64);
  sub_1000DB418((_QWORD *)(v1 + 32), v15);
  dispatch thunk of LocationManagerType.currentLocation.getter(v15, v16);
  v17 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v17) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, v14, v17);
    v19 = a1;
    v20 = 0;
    goto LABEL_5;
  }
  sub_100021A14((uint64_t)v14, &qword_100BC35F8);
  (*(void (**)(uint64_t *__return_ptr))(v1 + 72))(&v23);
  v18 = v23;
  sub_100084050(v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v8, type metadata accessor for LocationsState);
  swift_release(v18);
  sub_10009C514((uint64_t)v8, (uint64_t)v5);
  sub_1000215BC((uint64_t)v8, type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v9) == 1)
  {
    sub_100021A14((uint64_t)v5, (uint64_t *)&unk_100C0D170);
    v19 = a1;
    v20 = 1;
LABEL_5:
    _s7Weather24LocationCompositionStateOwst_0(v19, v20, 1, v17);
    return;
  }
  v21 = sub_10009EDE8((uint64_t)v5, (uint64_t)v11);
  CurrentLocation.location.getter(v21);
  sub_1000215BC((uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
}

uint64_t sub_10000E408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  type metadata accessor for LocationViewModel(0);
  sub_1000B42B0();
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v13 - v8;
  v10 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_10008D488();
  swift_release(v10);
  v11 = *(_QWORD *)(a2 + 8);
  swift_retain();
  sub_10008D488();
  swift_release(v11);
  LOBYTE(a2) = sub_100084CEC((uint64_t)v9, (uint64_t)v7);
  sub_1001401E4((uint64_t)v7);
  sub_1001401E4((uint64_t)v9);
  return a2 & 1;
}

uint64_t sub_10000E4D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 96));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1009A4610;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10000E550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
  v6 = (int *)type metadata accessor for WeatherData(0);
  v7 = v5 + v6[5];
  v8 = type metadata accessor for Locale(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v6[7];
  v12 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    v13 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  v14 = v5 + v6[8];
  v15 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
  if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v14, v17);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + 8));
  }
  v18 = v5 + v6[9];
  v19 = type metadata accessor for WeatherDataOverrides(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v18, 1, v19);
  if (!(_DWORD)result)
  {
    v21 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v18, v21);
    v22 = v18 + *(int *)(v19 + 20);
    result = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v21);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
  }
  return result;
}

uint64_t type metadata accessor for AveragesComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather33AveragesComponentViewModelFactory);
}

void sub_10000E75C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  char v17;

  sub_1000BA294(&qword_100BE7C80);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100099864();
  v5 = type metadata accessor for AirQuality(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_10004A2E8();
  if (qword_100BC26A0 != -1)
    swift_once(&qword_100BC26A0, sub_10015A598);
  v8 = qword_100CAF508;
  sub_10005329C(&qword_100C0B990, v7, (uint64_t (*)(uint64_t))type metadata accessor for LocationViewComponentFactory, (uint64_t)&unk_1009D0EA0);
  sub_1000C592C(v8);
  if (v17 == 1)
    goto LABEL_10;
  if (qword_100BC2690 != -1)
    swift_once(&qword_100BC2690, sub_10015A928);
  sub_1000C592C(qword_100CAF4F8);
  if (v16 != 1)
  {
    sub_1000C2148();
    WeatherDataModel.airQuality.getter(v9);
    if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v5) != 1)
    {
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
      v14(v2, v1, v5);
      v14(a1, v2, v5);
      v15 = sub_1000C3270();
      swift_storeEnumTagMultiPayload(a1, v15, 0);
      v10 = sub_1000BCB24();
      goto LABEL_11;
    }
    sub_100021A14(v1, &qword_100BE7C80);
LABEL_10:
    sub_1000C3270();
    v10 = sub_1000C34B8();
LABEL_11:
    _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, v13);
    goto LABEL_12;
  }
  sub_10081E734(a1);
LABEL_12:
  sub_100098640();
}

double sub_10000E934()
{
  double v1;

  sub_10000E968();
  sub_1000C2448((uint64_t)&type metadata for CompressedLocationHeaderHeightKey);
  return v1;
}

unint64_t sub_10000E968()
{
  unint64_t result;

  result = qword_100BC5B48;
  if (!qword_100BC5B48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CompressedLocationHeaderHeightKey, &type metadata for CompressedLocationHeaderHeightKey);
    atomic_store(result, (unint64_t *)&qword_100BC5B48);
  }
  return result;
}

void sub_10000E9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v1);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v2);
  sub_100079FBC();
  if (qword_100BC2028 != -1)
    swift_once(&qword_100BC2028, sub_10014CE34);
  v3 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE7B0);
  sub_1000992EC(v3, (uint64_t)v8);
  v4 = sub_1000C5E1C();
  sub_1000C28F8(v4, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_1000CCC80();
  if (qword_100BC2030 != -1)
    swift_once(&qword_100BC2030, sub_10014CE48);
  v5 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE7C8);
  sub_1000992EC(v5, (uint64_t)v7);
  v6 = sub_1000DF5DC();
  sub_1000C28F8(v6, (uint64_t)sub_10012394C);
  sub_1000E7028();
  sub_1000CCC80();
  sub_1000CFCBC();
  sub_1000D177C();
  sub_100098CA0();
  sub_1000C2464();
  sub_1000986C4();
  sub_1000D0CF0();
  sub_10009D300();
}

uint64_t type metadata accessor for DailyForecastComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather38DailyForecastComponentViewModelFactory);
}

_BYTE *sub_10000EB28(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_BYTE *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    switch(EnumCaseMultiPayload)
    {
      case 4:
        v15 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v11 = a1;
        v12 = a3;
        v13 = 4;
        break;
      case 3:
        v16 = *(_QWORD *)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain(v16);
        v11 = a1;
        v12 = a3;
        v13 = 3;
        break;
      case 2:
        v9 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = sub_1000BA294(&qword_100BCB648);
        a1[*(int *)(v10 + 48)] = a2[*(int *)(v10 + 48)];
        v11 = a1;
        v12 = a3;
        v13 = 2;
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_10000EC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for Location(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BackgroundAnimationData.Model(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BackgroundAnimationData(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin();
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherConditionBackgroundModel.animationData.getter(v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == enum case for BackgroundAnimationData.none(_:) || v13 != enum case for BackgroundAnimationData.loaded(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
    v15 = BackgroundAnimationData.Model.location.getter(v14);
    v16 = Location.id.getter(v15);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v16;
}

double sub_10000EE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10000EE3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Location.Identifier(0);
  return _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
}

_QWORD *sub_10000EE6C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for WeatherData(0);
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Locale(0);
  swift_bridgeObjectRetain(v4);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1000BA294(&qword_100BC3340);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = v5[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v5[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1000BA294(&qword_100BC3348);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v21 = v5[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v24);
  if (EnumCaseMultiPayload == 1)
  {
    v30 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v22, v23, v30);
    v27 = v22;
    v28 = v24;
    v29 = 1;
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    v26 = v23[1];
    *v22 = *v23;
    v22[1] = v26;
    swift_bridgeObjectRetain(v26);
    v27 = v22;
    v28 = v24;
    v29 = 0;
LABEL_11:
    swift_storeEnumTagMultiPayload(v27, v28, v29);
    goto LABEL_13;
  }
  memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_13:
  v31 = v5[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    v35 = sub_1000BA294(&qword_100BC3350);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v36 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      v37 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    v38 = *(int *)(v34 + 20);
    v39 = &v32[v38];
    v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      v41 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  return a1;
}

void sub_10000F1C8(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = a2(255);
    atomic_store(sub_10003BC38(v3), a1);
  }
  sub_10004A298();
}

uint64_t sub_10000F1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v10 = type metadata accessor for NWActivity.CompletionReason(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8);
  if ((!v15
     || a3
     && (*v14 == a2 ? (v16 = v15 == a3) : (v16 = 0),
         v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, *v14, v15, 0) & 1) != 0))
    && (v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity)) != 0
    && ((v18 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity,
         (v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity)) == 0)
     || (a4 & 1) != 0))
  {
    HIDWORD(v45) = a4;
    v22 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity;
    v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity) = 0;
    v24 = *(_QWORD *)(a1 + v18);
    *(_QWORD *)(a1 + v18) = 0;
    swift_retain();
    swift_retain();
    swift_release(v24);
    v25 = *(_QWORD *)(a1 + v22);
    *(_QWORD *)(a1 + v22) = 0;
    swift_release(v25);
    v46 = (unint64_t)_swiftEmptyArrayStorage;
    swift_retain_n(v17, 2);
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
    v27 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v28 >> 1)
    {
      v42 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1);
      v27 = v42;
    }
    v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v17);
    specialized Array._endMutation()(v29);
    v30 = BYTE4(v45);
    if (v19)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v32 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v33 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v32 >= v33 >> 1)
      {
        v43 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1);
        v32 = v43;
      }
      v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v19);
      specialized Array._endMutation()(v34);
    }
    if (v23)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
      v36 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v36 >= v37 >> 1)
      {
        v44 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1);
        v36 = v44;
      }
      v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v23);
      specialized Array._endMutation()(v38);
    }
    v39 = v46;
    swift_release(v17);
    swift_release(v23);
    swift_release(v19);
    v40 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
    if ((v30 & 1) == 0)
      v40 = (unsigned int *)&enum case for NWActivity.CompletionReason.cancelled(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *v40, v10);
    v41 = (uint64_t)a5 + *(int *)(type metadata accessor for NetworkActivityCompletion(0) + 24);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v41, v13, v10);
    _s7Weather24LocationCompositionStateOwst_0(v41, 0, 1, v10);
    swift_release(v17);
    swift_release(v19);
    swift_release(v23);
    *a5 = _swiftEmptyArrayStorage;
    a5[1] = v39;
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v20 = type metadata accessor for NetworkActivityCompletion(0);
    result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)a5 + *(int *)(v20 + 24), 1, 1, v10);
    *a5 = _swiftEmptyArrayStorage;
    a5[1] = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t *sub_10000F52C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

void sub_10000F58C(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t *v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  id v60;
  id v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t KeyPath;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v12 = type metadata accessor for Divider(0);
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  __chkstk_darwin(v12);
  v74 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1000BA294(&qword_100BC5DD8);
  v14 = __chkstk_darwin(v72);
  v82 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v73 = (char *)&v72 - v17;
  __chkstk_darwin(v16);
  v86 = (uint64_t)&v72 - v18;
  v19 = type metadata accessor for LocationComponentHeaderView(0);
  v20 = a5 + *(int *)(v19 + 48);
  v21 = *(_QWORD *)v20;
  v22 = *(unsigned __int8 *)(v20 + 8);
  v23 = *(_BYTE *)(v20 + 9);
  sub_100082BE8(*(_QWORD *)v20, v22, v23);
  sub_100159030();
  v79 = v24;
  v78 = v25;
  sub_1000D31DC(v21, v22, v23);
  KeyPath = swift_getKeyPath(&unk_1009DD7B0);
  v81 = a3;
  v83 = a1;
  v84 = a2;
  sub_1000D55D4(a1, a2, a3 & 1);
  v85 = a4;
  swift_bridgeObjectRetain(a4);
  v77 = static Edge.Set.horizontal.getter(v26);
  v27 = a5 + *(int *)(v19 + 20);
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_10008D47C(*(_QWORD *)v27, v29);
  sub_100109B54();
  LOBYTE(v22) = v30;
  sub_1000B15F8(v28, v29);
  if ((v22 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v31 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v31 = &qword_100CAE538;
  }
  v32 = v86;
  v33 = v74;
  v34 = EdgeInsets.init(_all:)(*(double *)v31);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = Divider.init()(v41);
  v43 = static Edge.Set.leading.getter(v42);
  sub_10008D47C(v28, v29);
  sub_100109B54();
  v45 = v44;
  sub_1000B15F8(v28, v29);
  if ((v45 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v46 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v46 = &qword_100CAE538;
  }
  v47 = EdgeInsets.init(_all:)(*(double *)v46);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v75;
  v54 = v76;
  v56 = (uint64_t)v73;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v73, v33, v76);
  v57 = v56 + *(int *)(v72 + 36);
  *(_BYTE *)v57 = v43;
  *(double *)(v57 + 8) = v47;
  *(_QWORD *)(v57 + 16) = v49;
  *(_QWORD *)(v57 + 24) = v51;
  *(_QWORD *)(v57 + 32) = v53;
  *(_BYTE *)(v57 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v54);
  sub_1000F111C(v56, v32, &qword_100BC5DD8);
  v58 = *(_QWORD *)v27;
  LOBYTE(v55) = *(_BYTE *)(v27 + 8);
  sub_10008D47C(*(_QWORD *)v27, v55);
  sub_100109B54();
  LOBYTE(v56) = v59;
  sub_1000B15F8(v58, v55);
  v62 = 1;
  if ((v56 & 1) != 0)
  {
    v60 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v61 = objc_msgSend(v60, "userInterfaceIdiom");

    if (v61 == (id)1)
      v62 = 0;
  }
  v63 = v82;
  sub_100037794(v32, v82, &qword_100BC5DD8);
  v65 = v83;
  v64 = v84;
  *(_QWORD *)a6 = v83;
  *(_QWORD *)(a6 + 8) = v64;
  v66 = v81 & 1;
  *(_BYTE *)(a6 + 16) = v81 & 1;
  v67 = v85;
  v68 = v79;
  v69 = KeyPath;
  *(_QWORD *)(a6 + 24) = v85;
  *(_QWORD *)(a6 + 32) = v69;
  *(_QWORD *)(a6 + 40) = v68;
  *(_BYTE *)(a6 + 48) = v78 & 1;
  *(_WORD *)(a6 + 49) = 256;
  *(_BYTE *)(a6 + 56) = v77;
  *(double *)(a6 + 64) = v34;
  *(_QWORD *)(a6 + 72) = v36;
  *(_QWORD *)(a6 + 80) = v38;
  *(_QWORD *)(a6 + 88) = v40;
  *(_BYTE *)(a6 + 96) = 0;
  *(_QWORD *)(a6 + 104) = 0x402C000000000000;
  *(_BYTE *)(a6 + 112) = 0;
  v70 = sub_1000BA294(&qword_100C17720);
  sub_100037794(v63, a6 + *(int *)(v70 + 64), &qword_100BC5DD8);
  v71 = a6 + *(int *)(v70 + 80);
  *(_QWORD *)v71 = 0;
  *(_BYTE *)(v71 + 8) = v62;
  sub_1000D55D4(v65, v64, v66);
  swift_bridgeObjectRetain(v67);
  swift_retain();
  sub_100021A14(v86, &qword_100BC5DD8);
  sub_100021A14(v63, &qword_100BC5DD8);
  sub_1000D31B4(v65, v64, v66);
  swift_release(v69);
  swift_bridgeObjectRelease(v67);
}

_QWORD *sub_10000FAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v23 = a2;
  v24 = a3;
  v22 = a1;
  v21 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  v3[4] = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0x65726F7453, 0xE500000000000000);
  v3[5] = _swiftEmptyArrayStorage;
  sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v13);
  v26[0] = _swiftEmptyArrayStorage;
  sub_1000A1C54((unint64_t *)&qword_100BC29A8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v15 = v14;
  v16 = sub_1000BA294(&qword_100BC29B0);
  sub_10003D2DC((unint64_t *)&qword_100BC29B8, &qword_100BC29B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v26, v16, v17, v7, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  v3[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x8000000100A0E290, v12, v9, v6, 0);
  swift_beginAccess((char *)v3 + *(_QWORD *)(*v3 + 136), v26, 33, 0);
  v18 = v22;
  v25 = v22;
  swift_retain();
  Published.init(initialValue:)(&v25, &unk_100B61740);
  swift_endAccess(v26);
  swift_release(v18);
  v19 = v24;
  v3[2] = v23;
  v3[3] = v19;
  return v3;
}

void sub_10000FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[2];

  v10[1] = a2;
  v10[0] = type metadata accessor for NotificationSubscription.Kind(0);
  __chkstk_darwin(v10[0]);
  v3 = type metadata accessor for Location.Identifier(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SavedLocation(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for LocationsAction(0);
  __chkstk_darwin(v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a1, (uint64_t)v7, v8);
  v9 = (char *)&loc_10000FE74 + dword_10050129C[swift_getEnumCaseMultiPayload(v7, v5)];
  __asm { BR              X10 }
}

void sub_10000FE84()
{
  uint64_t v0;
  uint64_t v1;

  sub_10001AB7C(*(_QWORD *)(*(_QWORD *)(v1 - 104) + 64));
  sub_1000215BC(v0, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
}

double sub_100010094(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  double result;

  ProxyContainer.public.getter(a2);
  v3 = sub_1000BA294(&qword_100BD13A0);
  v6 = sub_1000BA3CC(v3, v4, v5, (uint64_t)sub_100289E88);
  swift_release(v6);
  sub_10009880C();
  ProxyContainer.public.getter(v7);
  v8 = sub_1000BA294(&qword_100BD13A8);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_100152AB8);
  swift_release(v11);
  sub_10009880C();
  ProxyContainer.public.getter(v12);
  v13 = sub_1000BA294(&qword_100BD13B0);
  v16 = sub_1000BA3CC(v13, v14, v15, (uint64_t)sub_100152ACC);
  swift_release(v16);
  sub_10009880C();
  ProxyContainer.private.getter(v17);
  swift_retain();
  RegistrationContainer.lazy(block:)(sub_10028B514, a1);
  sub_10009880C();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_100010160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  _BYTE v27[16];

  sub_1000986AC();
  v4 = v3;
  v6 = v5;
  v7 = sub_1000D8E50();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100094EC4();
  sub_1000BA294(&qword_100BC5F40);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_10009E540();
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_10003BC68();
  __chkstk_darwin(v11);
  v13 = &v27[-v12];
  v14 = sub_1000C13D4();
  sub_100037794(v4 + *(int *)(v14 + 20), v2, &qword_100BC5F40);
  sub_100088FC8(v2, 1, v7);
  if (v19)
  {
    sub_100021A14(v2, &qword_100BC5F40);
    v15 = sub_100098AA0();
    v16 = (uint64_t)v13;
    v17 = 1;
  }
  else
  {
    sub_10000AB54(v2, v1, type metadata accessor for LocationViewerActiveLocationState);
    v18 = sub_100098AA0();
    v20 = sub_100088FC8(v1, 1, v18);
    if (v19)
      static CurrentLocation.placeholderIdentifier.getter(v20);
    else
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v13, v1, v18);
    sub_1000215BC(v2, type metadata accessor for LocationViewerActiveLocationState);
    v16 = (uint64_t)v13;
    v17 = 0;
    v15 = v18;
  }
  _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
  sub_100037794((uint64_t)v13, v0, &qword_100BCD680);
  v21 = *(_QWORD *)(v4 + *(int *)(v14 + 24));
  __chkstk_darwin(v22);
  *(_QWORD *)&v27[-16] = v13;
  swift_bridgeObjectRetain(v21);
  v23 = sub_100120A00(sub_1000622F0, (uint64_t)&v27[-32], v21);
  v25 = v24;
  swift_bridgeObjectRelease(v21);
  sub_1000F111C(v0, v6, &qword_100BCD680);
  v26 = v6 + *(int *)(type metadata accessor for ActiveLocationModel(0) + 20);
  *(_QWORD *)v26 = v23;
  *(_BYTE *)(v26 + 8) = v25 & 1;
  sub_100021A14((uint64_t)v13, &qword_100BCD680);
  sub_100098640();
}

uint64_t sub_100010384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(_QWORD *__return_ptr);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[2];
  _QWORD v19[3];

  v2 = type metadata accessor for EnvironmentState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocationsState(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(_QWORD *__return_ptr))(a1 + 16);
  ((void (*)(_QWORD *__return_ptr, uint64_t))v9)(v19, v6);
  v10 = v19[0];
  sub_100080C0C(v19[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v8, type metadata accessor for LocationsState);
  swift_release(v10);
  v11 = *(_QWORD *)&v8[*(int *)(v5 + 20)];
  swift_bridgeObjectRetain(v11);
  sub_1000215BC((uint64_t)v8, type metadata accessor for LocationsState);
  v9(v19);
  v12 = v19[0];
  v13 = v19[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v19[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v19, 0, 0);
  sub_100080C0C(v13, (uint64_t)v4, type metadata accessor for EnvironmentState);
  swift_release(v12);
  v14 = *(_QWORD *)&v4[*(int *)(v2 + 52)];
  sub_1000215BC((uint64_t)v4, type metadata accessor for EnvironmentState);
  v18[0] = v11;
  v18[1] = v14;
  v15 = sub_1000BA294(&qword_100C156D8);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  return Promise.init(value:)(v18);
}

void sub_100010524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v1);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v2);
  sub_100079FBC();
  if (qword_100BC2008 != -1)
    swift_once(&qword_100BC2008, sub_1001493A8);
  v3 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE750);
  sub_1000992EC(v3, (uint64_t)v8);
  v4 = sub_1000C5E1C();
  sub_1000C28F8(v4, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_1000CCC80();
  if (qword_100BC2010 != -1)
    swift_once(&qword_100BC2010, sub_1001493BC);
  v5 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE768);
  sub_1000992EC(v5, (uint64_t)v7);
  v6 = sub_1000DF5DC();
  sub_1000C28F8(v6, (uint64_t)sub_10012394C);
  sub_1000E7028();
  sub_1000CCC80();
  sub_1000CFCBC();
  sub_1000D177C();
  sub_100098CA0();
  sub_1000C2464();
  sub_1000986C4();
  sub_1000D0CF0();
  sub_10009D300();
}

void sub_100010688(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v5 = v3;
  v8 = sub_1000D1D64();
  v26 = v8;
  if (v8)
  {
    v15 = sub_1000D950C(v8, v9, (uint64_t)&protocol witness table for String, v10, v11, v12, v13, v14, a3);
    if (a2)
      sub_1000D9C84(v15, v16, v17, v18, v19, v20, v21, v22, a1, (uint64_t)a2, v24, (uint64_t)&type metadata for String, v25);
    else
      sub_1000D9C84(v15, v16, v17, v18, v19, v20, v21, v22, 0, 0, 0, 0, v25);
    if (v26)
    {
      sub_1000CFC14();
      sub_1000DB8A0();
    }
    else
    {
      a2 = 0;
    }
    sub_100098A10(v23, "setUserInfo:");

    sub_1000C5CA8();
  }
  else
  {
    sub_1000986C4();
    sub_1000C273C(v5, "setUserInfo:");
  }
}

uint64_t sub_10001075C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD v55[2];

  v0 = type metadata accessor for Domain(0);
  v47 = *(_QWORD *)(v0 - 8);
  v48 = v0;
  __chkstk_darwin(v0);
  v49 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1000BA294(&qword_100BCF2D0);
  v2 = *(_QWORD *)(v51 - 8);
  v3 = __chkstk_darwin(v51);
  v45 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v43 - v5;
  v7 = type metadata accessor for Access(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[0] = 0;
  v55[1] = 0xE000000000000000;
  v11 = *(void (**)(void))(v10 + 104);
  v46 = v9;
  v11();
  v12 = sub_1000BA294(&qword_100BF2BD8);
  v13 = *(_QWORD *)(v2 + 72);
  v50 = v2;
  v14 = *(unsigned __int8 *)(v2 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v12, v15 + v13, v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_10097CA50;
  v17 = v16;
  v53 = 0;
  v54 = 0xE000000000000000;
  Option.init(label:value:description:)(1701736270, 0xE400000000000000, &v53, 0, 0, &type metadata for String);
  v18 = Array.sorting<A>(on:)(sub_1005B44FC, 0, &off_100B59A80, &type metadata for DemoPreset, &type metadata for String, &protocol witness table for String);
  v19 = *(_QWORD *)(v18 + 16);
  v20 = (char *)_swiftEmptyArrayStorage;
  if (v19)
  {
    v44 = v18;
    v52 = (char *)_swiftEmptyArrayStorage;
    sub_10011EDA4();
    v21 = _s5DemosO8Fall2024CMa(0);
    do
    {
      swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      sub_1005C5F14();
      v23 = v22;
      v24 = sub_1005C4BD0();
      v53 = 0x343230326C6C6166;
      v54 = 0xE800000000000000;
      Option.init(label:value:description:)(v24, v25, &v53, 0, 0, &type metadata for String);
      swift_release(v23);
      v26 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      {
        sub_10011EDA4();
        v26 = v52;
      }
      v27 = *((_QWORD *)v26 + 2);
      if (v27 >= *((_QWORD *)v26 + 3) >> 1)
      {
        sub_1000BB168();
        v26 = v52;
      }
      *((_QWORD *)v26 + 2) = v27 + 1;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v26[v15 + v27 * v13], v6, v51);
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease(v44);
    v20 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease(v18);
    v26 = (char *)_swiftEmptyArrayStorage;
  }
  v53 = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v26);
  sub_1001212B0();
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v26);
  v28 = v53;
  type metadata accessor for LocalPreset(0);
  sub_1005DD858();
  v30 = v29;
  v31 = Array.sorting<A>(on:)(sub_1005B4558, 0, v29, &type metadata for String, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease(v30);
  v32 = *(_QWORD *)(v31 + 16);
  v33 = v45;
  if (v32)
  {
    v44 = v28;
    v52 = (char *)_swiftEmptyArrayStorage;
    sub_10011EDA4();
    v20 = v52;
    v43 = v31;
    v34 = (unint64_t *)(v31 + 40);
    do
    {
      v36 = *v34;
      v53 = *(v34 - 1);
      v35 = v53;
      v54 = v36;
      swift_bridgeObjectRetain_n(v36, 3);
      Option.init(label:value:description:)(v35, v36, &v53, 0, 0, &type metadata for String);
      swift_bridgeObjectRelease(v36);
      v52 = v20;
      v37 = v33;
      v38 = *((_QWORD *)v20 + 2);
      if (v38 >= *((_QWORD *)v20 + 3) >> 1)
      {
        sub_1000BB168();
        v20 = v52;
      }
      v34 += 2;
      *((_QWORD *)v20 + 2) = v38 + 1;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v20[v15 + v38 * v13], v37, v51);
      --v32;
      v33 = v37;
    }
    while (v32);
    swift_bridgeObjectRelease(v43);
    v28 = v44;
  }
  else
  {
    swift_bridgeObjectRelease(v31);
  }
  sub_1000BA294(&qword_100BF2BE0);
  v53 = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v20);
  sub_1001212B0();
  swift_bridgeObjectRelease(v28);
  v39 = swift_bridgeObjectRelease(v20);
  v40 = v53;
  v41 = v49;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v47 + 104))(v49, enum case for Domain.standard(_:), v48, v39);
  result = Setting<>.init(_:defaultValue:domain:access:options:)(0xD000000000000013, 0x8000000100A0C3D0, v55, v41, v46, v40, &protocol witness table for String);
  qword_100CAED98 = result;
  return result;
}

id sub_100010C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithActivityType:", v5, swift_bridgeObjectRelease(a2).n128_f64[0]);

  return v6;
}

uint64_t *sub_100010CC8(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_retain();
  swift_release(v5);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain();
  swift_release(v8);
  return a1;
}

void sub_100010D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v1);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v2);
  sub_100079FBC();
  if (qword_100BC1FF0 != -1)
    swift_once(&qword_100BC1FF0, sub_100144608);
  v3 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE708);
  sub_1000992EC(v3, (uint64_t)v8);
  v4 = sub_1000C5E1C();
  sub_1000C28F8(v4, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_1000CCC80();
  if (qword_100BC1FF8 != -1)
    swift_once(&qword_100BC1FF8, sub_1001446A4);
  v5 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE720);
  sub_1000992EC(v5, (uint64_t)v7);
  v6 = sub_1000DF5DC();
  sub_1000C28F8(v6, (uint64_t)sub_10012394C);
  sub_1000E7028();
  sub_1000CCC80();
  sub_1000CFCBC();
  sub_1000D177C();
  sub_100098CA0();
  sub_1000C2464();
  sub_1000986C4();
  sub_1000D0CF0();
  sub_10009D300();
}

uint64_t sub_100010E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v15;
  char v16;

  v1 = v0;
  v2 = sub_1000BA294(&qword_100BD6158);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1
     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor__animatedBackgroundsEnabled;
  v16 = 1;
  Published.init(initialValue:)(&v16, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer) = 0;
  v7 = OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_defaults;
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  *(_QWORD *)(v1 + v7) = v8;
  v15 = v8;
  KeyPath = swift_getKeyPath(&unk_1009D8E00);
  v10 = swift_allocObject(&unk_100B9AC00, 24, 7);
  swift_weakInit(v10 + 16, v1);
  v11 = v8;
  v12 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_1008FE754, v10, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v10);

  v13 = *(void **)(v1
                 + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer) = v12;

  return v1;
}

uint64_t sub_100011010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  _QWORD *v38;

  v7 = v6;
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  v13 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  v17 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v17);
  sub_100098728();
  v20 = v19 - v18;
  *(_QWORD *)(v7 + 64) = 0;
  *(_BYTE *)(v7 + 72) = 1;
  v31 = (void *)sub_10009FFE0();
  static DispatchQoS.unspecified.getter(v21);
  v38 = _swiftEmptyArrayStorage;
  sub_10005329C((unint64_t *)&qword_100BC29A8, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = v22;
  v24 = sub_1000BA294(&qword_100BC29B0);
  sub_100081288((unint64_t *)&qword_100BC29B8, &qword_100BC29B0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v24, v25, v13, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v8);
  *(_QWORD *)(v7 + 80) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x80000001009F83B0, v20, v16, v12, 0);
  if (qword_100BC2458 != -1)
    swift_once(&qword_100BC2458, sub_100159808);
  v26 = sub_100098720();
  sub_1000AECD4(v26, (uint64_t)qword_100CAF100);
  sub_1000999A8();
  v27 = sub_10009C0A4();
  if (sub_1000C23F4(v27))
  {
    *(_WORD *)sub_10009D340() = 0;
    sub_1000BA6F4((void *)&_mh_execute_header, v28, v29, "Creating time monitor");
    sub_1000BBED0();
  }

  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  return v7;
}

uint64_t sub_100011268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v40 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v3 = &v37[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_QWORD *)(v0 + *(int *)(type metadata accessor for DailyForecastComponentViewModel(0) + 32));
  v9 = v8[1];
  v41[0] = *v8;
  v41[1] = v9;
  v10 = sub_100114EF8();
  swift_bridgeObjectRetain(v9);
  v11 = Text.init<A>(_:)(v41, &type metadata for String, v10);
  v13 = v12;
  v38 = v14;
  v39 = v15;
  v16 = v0 + *(int *)(type metadata accessor for DailyComponentView(0) + 36);
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_10008D47C(*(_QWORD *)v16, v18);
  sub_100109B54();
  v20 = v19;
  sub_1000B15F8(v17, v18);
  v21 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v20 & 1) == 0)
    v21 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  v22 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *v21, v4);
  static Font.Weight.medium.getter(v22);
  v23 = static Font.system(_:weight:)(v7);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v24 = v40;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v40);
  v25 = Font.leading(_:)(v3, v23);
  swift_release(v23);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v24);
  LOBYTE(v24) = v38 & 1;
  v26 = v39;
  v27 = Text.font(_:)(v25, v11, v13, v38 & 1, v39);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v25);
  sub_1000D31B4(v11, v13, v24);
  v34 = swift_bridgeObjectRelease(v26);
  v35 = Text.monospacedDigit()(v27, v29, v31 & 1, v33, v34);
  sub_1000D31B4(v27, v29, v31 & 1);
  swift_bridgeObjectRelease(v33);
  return v35;
}

uint64_t sub_1000114DC(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + a2[5]);
  swift_bridgeObjectRelease(*v5);
  v6 = (uint64_t)v5 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
  v7 = type metadata accessor for WeatherDescription(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[6];
  v9 = sub_1000BA294(&qword_100BCB9F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[7];
  v11 = sub_1000BA294(&qword_100BCB130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[8];
  v13 = type metadata accessor for WeatherChanges(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return result;
}

double sub_10001160C@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _QWORD v17[12];

  memcpy(v17, a1, sizeof(v17));
  v4 = a1[12];
  v5 = a1[13];
  v6 = v17[11];
  *(_QWORD *)a2 = v17[10];
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = 0;
  v7 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload(a2, v7, 0);
  v8 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v9 = (void *)(a2 + v8[5]);
  memcpy(v9, v17, 0x60uLL);
  v10 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v9, v10, 10);
  v11 = a2 + v8[7];
  v12 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v13 = enum case for DetailCondition.precipitationTotal(_:);
  v14 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v11, v13, v14);
  *(_BYTE *)(v11 + v12) = 0;
  v15 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v11, v15, 2);
  _s7Weather24LocationCompositionStateOwst_0(v11, 0, 1, v15);
  *(_WORD *)(a2 + v8[6]) = 256;
  sub_100016458(v17);
  swift_bridgeObjectRetain(v6);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v5).n128_u64[0];
  return result;
}

uint64_t sub_100011760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v0 = type metadata accessor for CallbackScope(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Scope(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ProxyContainer.public.getter(v8);
  v10 = type metadata accessor for DisplayMetricsMonitor(0);
  v11 = RegistrationContainer.register<A>(_:name:factory:)(v10, 0, 0, sub_1001431F4, 0, v10);
  v12 = swift_release(v9);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for Scope.containerSingleton(_:), v4, v12);
  v13 = Definition.inScope(_:)(v7);
  swift_release(v13);
  v14 = swift_release(v11);
  v15.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_10004B784, 0);
  swift_release(v16);
  ProxyContainer.callback.getter(v23, v17);
  v18 = v24;
  v19 = v25;
  sub_1000DB418(v23, v24);
  v20 = sub_1000BA294(&qword_100BCEF18);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for CallbackScope.any(_:), v0);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v20, v3, sub_100051114, 0, v20, v18, v19);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
}

uint64_t type metadata accessor for FeelsLikeComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather34FeelsLikeComponentViewModelFactory);
}

uint64_t sub_100011960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD v86[14];

  v83 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  v80 = *(_QWORD *)(a1 - 8);
  v81 = v3;
  __chkstk_darwin(a1);
  v79 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1000CFF30();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_1000BA294(&qword_100C05F48);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v77 = (uint64_t *)((char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = *(_QWORD *)(a1 + 16);
  v10 = v78;
  v75 = a1;
  sub_100075EB0(&qword_100C05F50);
  v11 = sub_100098C88();
  v13 = type metadata accessor for ModifiedContent(v11, v10, v12);
  v14 = sub_100075EB0(&qword_100BD0668);
  sub_1000DDF38(v14);
  v15 = sub_100075EB0(&qword_100BD0658);
  v16 = sub_1000DD3B8(v15);
  sub_100075EB0(&qword_100C05F58);
  v17 = sub_100098C88();
  v19 = type metadata accessor for ModifiedContent(v17, v16, v18);
  v20 = sub_100075EB0(&qword_100BEE748);
  v21 = sub_1000CD258(v20);
  v22 = sub_100796510();
  v70 = v22;
  v76 = *(_QWORD *)(a1 + 24);
  v23 = v76;
  sub_1000DBD70(&qword_100C05F68, &qword_100C05F50);
  v86[12] = v23;
  v86[13] = v24;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  sub_1000DBD70(&qword_100BD0660, &qword_100BD0668);
  v86[10] = WitnessTable;
  v86[11] = v26;
  v27 = sub_1000D0348((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  sub_1000DBD70((unint64_t *)&unk_100C0A590, &qword_100BD0658);
  v86[8] = v27;
  v86[9] = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  sub_1000DBD70((unint64_t *)&unk_100C0A090, &qword_100C05F58);
  v86[6] = v29;
  v86[7] = v30;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  sub_10003D2DC(&qword_100BEE740, &qword_100BEE748);
  v86[4] = v31;
  v86[5] = v32;
  v71 = v21;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  v86[0] = &type metadata for ComputedGridGeometryPreferenceKey;
  v86[1] = v21;
  v86[2] = v22;
  v86[3] = v69;
  v72 = type metadata accessor for _OverlayPreferenceModifier(255, v86);
  v33 = v68;
  v34 = type metadata accessor for ModifiedContent(0, v68, v72);
  v73 = *(_QWORD *)(v34 - 8);
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v67 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v35);
  v40 = (char *)&v67 - v39;
  v41 = static Color.clear.getter(v38);
  *v7 = swift_getKeyPath(&unk_1009C9ED0);
  v42 = sub_1000BA294(&qword_100BC37E0);
  swift_storeEnumTagMultiPayload(v7, v42, 0);
  v43 = (int *)v74;
  v44 = (_QWORD *)((char *)v7 + *(int *)(v74 + 20));
  *v44 = swift_getKeyPath(&unk_1009C9EF8);
  sub_1000BA294((uint64_t *)&unk_100C09CD0);
  sub_1000D98F0();
  v45 = (char *)v7 + v43[6];
  *(_QWORD *)v45 = swift_getKeyPath(&unk_1009C9F28);
  v45[8] = 0;
  v46 = (char *)v7 + v43[7];
  *(_QWORD *)v46 = swift_getKeyPath(&unk_1009C9F50);
  v46[8] = 0;
  v47 = (_QWORD *)((char *)v7 + v43[8]);
  *v47 = swift_getKeyPath(&unk_1009C9F78);
  v48 = sub_1000BA294(&qword_100BC37D8);
  swift_storeEnumTagMultiPayload(v47, v48, 0);
  v49 = (_QWORD *)((char *)v7 + v43[9]);
  *v49 = swift_getKeyPath(&unk_1009C9FA8);
  sub_1000D98F0();
  v50 = (char *)v7 + v43[10];
  *(_QWORD *)v50 = sub_10079684C;
  *((_QWORD *)v50 + 1) = 0;
  v50[16] = 0;
  v51 = v77;
  sub_1000C3608((uint64_t)v7, (uint64_t)v77 + *(int *)(v33 + 36));
  *v51 = v41;
  sub_1000215BC((uint64_t)v7, type metadata accessor for GridGeometryComputerModifier);
  v53 = v79;
  v52 = v80;
  v54 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v82, v75);
  v55 = *(unsigned __int8 *)(v52 + 80);
  v56 = v52;
  v57 = (v55 + 32) & ~v55;
  v58 = swift_allocObject(&unk_100B90760, v57 + v81, v55 | 7);
  v59 = v76;
  *(_QWORD *)(v58 + 16) = v78;
  *(_QWORD *)(v58 + 24) = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v58 + v57, v53, v54);
  v60 = sub_100796950();
  v61 = static Alignment.center.getter(v60);
  View.overlayPreferenceValue<A, B>(_:alignment:_:)(&type metadata for ComputedGridGeometryPreferenceKey, v61, v62, sub_1007968F4, v58, v33, &type metadata for ComputedGridGeometryPreferenceKey, v71, v60, v70, v69);
  swift_release(v58);
  sub_100021A14((uint64_t)v51, &qword_100C05F48);
  v63 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayPreferenceModifier<A, B>, v72);
  v84 = v60;
  v85 = v63;
  v64 = sub_1000D0348((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  sub_1000B2074(v37, v34, v64);
  v65 = *(void (**)(char *, uint64_t))(v73 + 8);
  v65(v37, v34);
  sub_1000B1100((uint64_t)v40, v34, v83);
  return ((uint64_t (*)(char *, uint64_t))v65)(v40, v34);
}

uint64_t sub_100011F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[7];
  uint64_t v29;
  uint64_t v30;

  v26 = a7;
  v25 = a6;
  v18 = type metadata accessor for WeatherConditionBackgroundModel(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a1);
  sub_100043CA8(a4, (uint64_t)v28);
  sub_1000BA294(&qword_100BE5040);
  swift_bridgeObjectRetain(a8);
  swift_retain();
  swift_unknownObjectRetain(a2);
  swift_retain();
  LOBYTE(v24) = a10;
  sub_1000550B8((uint64_t)v20, a2, a3, (uint64_t)v28, a5, v25, v26, a8, v24, a11, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4], v28[5],
    v28[6],
    v29,
    v30);
  v22 = sub_1000BA294(&qword_100BE5048);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a9, v27, v22);
}

double sub_100012074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for WeatherCondition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

void sub_1000120E8(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1000BE9A8(a1, a2);
  v7 = swift_allocObject(v6, 16, 7);
  a4[3] = v6;
  a4[4] = a3;
  *a4 = v7;
  sub_100079F70();
}

void sub_100012124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  sub_1000D93C4();
  v16 = v0;
  v17 = v1;
  v15[1] = v2;
  sub_1000FC5C4();
  v4 = v3;
  sub_1000BA294(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_100094EF4();
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v15 - v12;
  sub_100088FC8(v4, 1, v10);
  if (v14)
  {
    sub_1000987A0(v4);
    sub_10016D35C();
    sub_1000986E8();
    sub_1000987A0(v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v4, v10);
    sub_1000172B4();
    sub_1000986E8();
  }
  sub_100098640();
}

uint64_t sub_100012220()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for Scope(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = ProxyContainer.public.getter(v3);
  v5 = sub_1000BA294(&qword_100BED540);
  v8 = sub_1000BA3CC(v5, v6, v7, (uint64_t)sub_10013FC90);
  swift_release(v4);
  sub_1000BCD1C();
  v9 = Definition.inScope(_:)(v2);
  swift_release(v9);
  swift_release(v8);
  sub_1000C28B4();
  v11 = ProxyContainer.public.getter(v10);
  v12 = sub_1000BA294(&qword_100BF7660);
  v15 = sub_1000BA3CC(v12, v13, v14, (uint64_t)sub_10013FDB0);
  swift_release(v11);
  sub_1000BCD1C();
  v16 = Definition.inScope(_:)(v2);
  swift_release(v16);
  swift_release(v15);
  return sub_1000C28B4();
}

void sub_100012344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *Strong;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  _BYTE v35[24];

  v1 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v1);
  v32 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BDF458);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC5F70);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v29 - v10);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v15 = type metadata accessor for DisplayMetrics(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_window);
  if (Strong)
  {
    v30 = v1;
    v31 = Strong;
    sub_10003C818(v31, (uint64_t)v20);
    sub_10000A8D4((uint64_t)v20, (uint64_t)v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
    v29 = v0;
    v22 = v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics;
    swift_beginAccess(v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics, v35, 0, 0);
    v23 = (uint64_t)&v5[*(int *)(v3 + 48)];
    sub_100147BAC((uint64_t)v14, (uint64_t)v5);
    sub_100147BAC(v22, v23);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v15) == 1)
    {
      sub_100021A3C((uint64_t)v14, &qword_100BC5F70);
      if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v15) == 1)
      {
        sub_100021A3C((uint64_t)v5, &qword_100BC5F70);
LABEL_9:
        sub_1000B56C0((uint64_t)v20, type metadata accessor for DisplayMetrics);

        return;
      }
    }
    else
    {
      sub_100147BAC((uint64_t)v5, (uint64_t)v11);
      if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v15) != 1)
      {
        sub_100147B20(v23, (uint64_t)v17);
        v24 = sub_1000FF540(v11, v17);
        sub_1000B56C0((uint64_t)v17, type metadata accessor for DisplayMetrics);
        sub_100021A3C((uint64_t)v14, &qword_100BC5F70);
        sub_1000B56C0((uint64_t)v11, type metadata accessor for DisplayMetrics);
        sub_100021A3C((uint64_t)v5, &qword_100BC5F70);
        if ((v24 & 1) != 0)
          goto LABEL_9;
        goto LABEL_10;
      }
      sub_100021A3C((uint64_t)v14, &qword_100BC5F70);
      sub_1000B56C0((uint64_t)v11, type metadata accessor for DisplayMetrics);
    }
    sub_100021A3C((uint64_t)v5, &qword_100BDF458);
LABEL_10:
    sub_10000A8D4((uint64_t)v20, (uint64_t)v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v15);
    swift_beginAccess(v22, v33, 33, 0);
    sub_100147B64((uint64_t)v8, v22);
    swift_endAccess(v33);
    v25 = *(uint64_t (**)(uint64_t))(v29 + 16);
    v26 = *(_QWORD *)(v29 + 24);
    v27 = v32;
    sub_10000A8D4((uint64_t)v20, v32);
    v28 = type metadata accessor for ViewAction(0);
    swift_storeEnumTagMultiPayload(v27, v28, 5);
    swift_storeEnumTagMultiPayload(v27, v30, 6);
    v34 = 0;
    memset(v33, 0, sizeof(v33));
    swift_retain();
    sub_1000A5EBC(v27, (uint64_t)v33, v25);

    sub_100021A3C((uint64_t)v33, (uint64_t *)&unk_100BFFA10);
    sub_1000B56C0(v27, type metadata accessor for MainAction);
    swift_release(v26);
    sub_1000B56C0((uint64_t)v20, type metadata accessor for DisplayMetrics);
  }
}

uint64_t sub_100012764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio(0);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BDD818);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a2);
  v11 = Image.init(systemName:)(a1, a2);
  static Image.TemplateRenderingMode.macSafeOriginal.getter();
  v12 = type metadata accessor for Image.TemplateRenderingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  v13 = Image.renderingMode(_:)(v10, v11);
  swift_release(v11);
  sub_100021A14((uint64_t)v10, &qword_100BDD818);
  v14 = Text.init(_:)(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = *(_QWORD *)(v2 + 8);
  v22 = *(_BYTE *)(v2 + 16);
  sub_10008D47C(v21, v22);
  sub_100109B54();
  v24 = v23;
  v25 = sub_1000B15F8(v21, v22);
  if ((v24 & 1) != 0)
    v26 = static Font.body.getter(v25);
  else
    v26 = static Font.title3.getter(v25);
  v27 = v26;
  v28 = v18 & 1;
  v29 = Text.font(_:)(v26, v14, v16, v28, v20);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  swift_release(v27);
  sub_1000D31B4(v14, v16, v28);
  v36 = swift_bridgeObjectRelease(v20);
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v36);
  v37 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v7, 1, v29, v31, v33 & 1, v35);
  sub_1000D31B4(v29, v31, v33 & 1);
  v38 = swift_bridgeObjectRelease(v35);
  (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v7, v42, v38);
  return v37;
}

double sub_100012994@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v5 = a2 & 1;
  sub_10008D47C(a1, a2 & 1);
  sub_100109B54();
  v7 = v6;
  sub_1000B15F8(a1, v5);
  v8 = sub_1000BA294(&qword_100BC42C8);
  if ((v7 & 1) != 0)
  {
    v9 = swift_allocObject(v8, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_10097DA20;
    v10 = static Color.black.getter(v9);
    v11 = Color.opacity(_:)(0.2);
    swift_release(v10);
    *(_QWORD *)(v9 + 32) = v11;
    v13 = static Color.clear.getter(v12);
    *(_QWORD *)(v9 + 40) = v13;
  }
  else
  {
    v9 = swift_allocObject(v8, 40, 7);
    *(_OWORD *)(v9 + 16) = xmmword_10097CA50;
    v13 = static Color.clear.getter(v9);
    *(_QWORD *)(v9 + 32) = v13;
  }
  v16 = v9;
  v14 = specialized Array._endMutation()(v13);
  static UnitPoint.center.getter(v14);
  EllipticalGradient.init(colors:center:startRadiusFraction:endRadiusFraction:)(&v16, v9);
  *(_QWORD *)a3 = v16;
  *(_OWORD *)(a3 + 8) = v17;
  result = *(double *)&v18;
  *(_OWORD *)(a3 + 24) = v18;
  *(_WORD *)(a3 + 40) = 256;
  return result;
}

uint64_t sub_100012AB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = dispatch thunk of LocationMetadataManagerType.availableCountryCode(for:)(v1, v2, v3);
  v6 = v4;
  if (!v5)
  {
    sub_1000EE98C(v4, 0);
    return 0;
  }
  v7 = v5;
  if (v5 == 1)
    return 0;
  if (v4 == 20035 && v5 == 0xE200000000000000)
  {
    sub_1000EE98C(20035, 0xE200000000000000);
    return 1;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 20035, 0xE200000000000000, 0);
    sub_1000EE98C(v6, v7);
    return v9 & 1;
  }
}

uint64_t sub_100012B74(double *a1, double *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return static EdgeInsets.== infix(_:_:)(a1[2], a1[3], a1[4], a1[5], a2[2], a2[3], a2[4], a2[5]);
  else
    return 0;
}

uint64_t type metadata accessor for VisibilityComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather35VisibilityComponentViewModelFactory);
}

uint64_t sub_100012BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  size_t v27;
  void *v28;
  const void *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  void (*v35)(unint64_t, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  void (*v41)(uint64_t, uint64_t);
  void (*v42)(unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  int v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  void (*v56)(unint64_t, unint64_t);
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v55(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + *(_DWORD *)(v8 + 80);
  v63 = ~(unint64_t)*(_DWORD *)(v8 + 80);
  v64 = *(_QWORD *)(a3 + 24);
  v56 = *(void (**)(unint64_t, unint64_t))(v8 + 24);
  v56((v10 + a1) & v63, (v10 + a2) & v63);
  v11 = (v10 & v63) + *(_QWORD *)(v8 + 64);
  v12 = v11 + 7;
  v62 = a1;
  v13 = (uint64_t *)((v11 + 7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v14 = (uint64_t *)((v11 + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v13;
  *v13 = *v14;
  swift_retain();
  swift_release(v15);
  v13[1] = v14[1];
  v16 = *(unsigned __int8 *)(v7 + 80) | v9;
  v17 = (*(_BYTE *)(v7 + 80) | v9) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v13 + v16 + 16) & v17;
  v19 = ((unint64_t)v14 + v16 + 16) & v17;
  v20 = *(unsigned int *)(v7 + 84);
  v21 = *(unsigned int *)(v8 + 84);
  v61 = (v11 + 7 + ((v11 + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  v22 = v61 + 8;
  v60 = v21 | v20;
  v58 = v11 + v16;
  v59 = ~v16;
  if (v21 | v20)
  {
    if (v20 >= v21)
    {
      v32 = _s7Weather24LocationCompositionStateOwet_0(v18, v20, v6);
      v23 = _s7Weather24LocationCompositionStateOwet_0(v19, v20, v6);
      if (v32)
      {
LABEL_4:
        if (v23)
        {
LABEL_5:
          v24 = v61;
          v25 = v60;
          v26 = v61 + 8;
          if (v60)
            v27 = v61 + 8;
          else
            v27 = v61 + 9;
          v28 = (void *)v18;
          v29 = (const void *)v19;
LABEL_31:
          memcpy(v28, v29, v27);
          v38 = v62;
          goto LABEL_33;
        }
        goto LABEL_21;
      }
    }
    else
    {
      v54 = _s7Weather24LocationCompositionStateOwet_0((v10 + v18) & v63, v21, v64);
      v23 = _s7Weather24LocationCompositionStateOwet_0((v10 + v19) & v63, v21, v64);
      if (v54)
        goto LABEL_4;
    }
    if (!v23)
    {
LABEL_32:
      v55(v18, v19, v6);
      ((void (*)(unint64_t, unint64_t, uint64_t))v56)((v10 + v18) & v63, (v10 + v19) & v63, v64);
      v43 = (v58 + v18) & v59;
      v44 = (v58 + v19) & v59;
      v55(v43, v44, v6);
      ((void (*)(unint64_t, unint64_t, uint64_t))v56)((v10 + v43) & v63, (v10 + v44) & v63, v64);
      *(_QWORD *)((v12 + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + v44) & 0xFFFFFFFFFFFFF8);
      v24 = v61;
      v38 = v62;
      v26 = v61 + 8;
      v25 = v60;
      goto LABEL_33;
    }
LABEL_27:
    v41 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v41(v18, v6);
    v42 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
    v42((v10 + v18) & v63, v64);
    v41((v58 + v18) & v59, v6);
    v42((v10 + ((v58 + v18) & v59)) & v63, v64);
    v24 = v61;
    v25 = v60;
    v26 = v61 + 8;
    if (v60)
      v27 = v61 + 8;
    else
      v27 = v61 + 9;
    v28 = (void *)v18;
    v29 = (const void *)v19;
    goto LABEL_31;
  }
  if (!*(_BYTE *)(v18 + v22)
    || ((v30 = *(unsigned __int8 *)(v18 + v22) - 1, (_DWORD)v61 == -8) ? (v31 = 0) : (v30 = 0, v31 = *(_DWORD *)v18),
        (v31 | v30) == 0xFFFFFFFF))
  {
    if (!*(_BYTE *)(v19 + v22))
      goto LABEL_32;
    v39 = *(unsigned __int8 *)(v19 + v22) - 1;
    v40 = v61 + 8;
    if ((_DWORD)v61 != -8)
    {
      v39 = 0;
      v40 = *(_DWORD *)v19;
    }
    if ((v40 | v39) == 0xFFFFFFFF)
      goto LABEL_32;
    goto LABEL_27;
  }
  if (*(_BYTE *)(v19 + v22))
  {
    v33 = *(unsigned __int8 *)(v19 + v22) - 1;
    v34 = v61 + 8;
    if ((_DWORD)v61 != -8)
    {
      v33 = 0;
      v34 = *(_DWORD *)v19;
    }
    if ((v34 | v33) != 0xFFFFFFFF)
      goto LABEL_5;
  }
LABEL_21:
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v57(v18, v19, v6);
  v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
  v35((v10 + v18) & v63, (v10 + v19) & v63, v64);
  v36 = (v58 + v18) & v59;
  v37 = (v58 + v19) & v59;
  v57(v36, v37, v6);
  v35((v10 + v36) & v63, (v10 + v37) & v63, v64);
  *(_QWORD *)((v12 + v36) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + v37) & 0xFFFFFFFFFFFFF8);
  v24 = v61;
  v38 = v62;
  v26 = v61 + 8;
  v25 = v60;
  if (!v60)
    *(_BYTE *)(v18 + v61 + 8) = 0;
LABEL_33:
  v45 = v24 + 9;
  if (v25)
    v45 = v26;
  v46 = ((v18 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((v19 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v46 = *(_BYTE *)v47;
  v48 = *(_QWORD *)(v46 + 8);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_retain();
  swift_release(v48);
  v49 = (uint64_t *)((v46 + 23) & 0xFFFFFFFFFFFFFFF8);
  v50 = (uint64_t *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  v51 = *v49;
  *v49 = *v50;
  swift_retain();
  swift_release(v51);
  v52 = v49[1];
  v49[1] = v50[1];
  swift_retain();
  swift_release(v52);
  return v38;
}

uint64_t sub_1000130A4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v8 = type metadata accessor for LazyOptions(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_100B995A0, 48, 7);
  *(double *)(v11 + 16) = a3;
  *(double *)(v11 + 24) = a4;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  v18 = _swiftEmptyArrayStorage;
  v12 = sub_100159CD4();
  swift_bridgeObjectRetain(a2);
  v13 = sub_1000BA294(&qword_100BE5580);
  v14 = sub_1001210BC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v13, v14, v8, v12);
  v15 = sub_1000BA294(&qword_100BE5590);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  return Lazy.init(options:loadBlock:)(v10, sub_1008D4034, v11);
}

uint64_t type metadata accessor for AirQualityComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather35AirQualityComponentViewModelFactory);
}

void sub_1000131E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;
  _BYTE v48[24];
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = type metadata accessor for SessionManager(0);
  v5 = dispatch thunk of ResolverType.resolve<A>(_:name:)(v4, 0xD000000000000011, 0x80000001009F7050, v4, v2, v3);
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v6 = v5;
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = type metadata accessor for Client(0);
  v10 = dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  if (!v10)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v11 = v10;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD13E8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!v51)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BD13E0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!v49)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1000BA294(&qword_100BD13F0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!v47)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = a1[3];
  v22 = a1[4];
  sub_1000DB418(a1, v21);
  v23 = sub_1000BA294(&qword_100BD13F8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v23, v23, v21, v22);
  if (!v45)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = a1[3];
  v25 = a1[4];
  sub_1000DB418(a1, v24);
  v26 = sub_1000BA294(&qword_100BD1400);
  dispatch thunk of ResolverType.resolve<A>(_:)(v26, v26, v24, v25);
  if (!v43)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v27 = a1[3];
  v28 = a1[4];
  sub_1000DB418(a1, v27);
  v29 = sub_1000BA294(&qword_100BCF678);
  dispatch thunk of ResolverType.resolve<A>(_:)(v29, v29, v27, v28);
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = a1[3];
  v31 = a1[4];
  sub_1000DB418(a1, v30);
  v32 = sub_1000BA294(&qword_100BD1408);
  dispatch thunk of ResolverType.resolve<A>(_:)(v32, v32, v30, v31);
  if (v36)
  {
    v33 = type metadata accessor for SessionEventsAndDataCoordinator(0);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    LOBYTE(v34) = 1;
    sub_10003B214(1, v6, v11, (uint64_t)v50, (uint64_t)v48, (uint64_t)v46, (uint64_t)v44, (uint64_t)&v41, (uint64_t)v38, (uint64_t)v35, v34, v35[0], v35[1], v35[2], v36, v37, v38[0], v38[1], v38[2],
      v39,
      v40,
      v41,
      v42);
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_1000134B4(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;

  sub_1000BA294(&qword_100BC5A68);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = a1[1];
  *a2 = *a1;
  a2[1] = v8;
  v9 = a1[3];
  a2[2] = a1[2];
  a2[3] = v9;
  v10 = sub_1000C4D6C();
  v11 = (_QWORD *)((char *)a2 + *(int *)(v10 + 20));
  *v11 = swift_getKeyPath(&unk_1009BD370);
  v12 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v11, v12, 0);
  v13 = (char *)a2 + *(int *)(v10 + 24);
  v14 = type metadata accessor for UserInterfaceSizeClass(0);
  _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v14);
  sub_100033D48(0, 0, v7, (uint64_t)v18);
  State.init(wrappedValue:)(v18, &type metadata for ContentStatusBannerViewStyle);
  v15 = v21;
  v16 = v22;
  v17 = v20;
  *(_OWORD *)v13 = v19;
  *((_OWORD *)v13 + 1) = v17;
  v13[32] = v15;
  *((_QWORD *)v13 + 5) = v16;
  sub_100079F70();
}

void sub_1000135B4(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1000BA294(&qword_100BC3660);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Location.Identifier.id.getter(v5);
  v10 = v9;
  if ((sub_100128ABC() & 1) != 0)
  {
    v11 = type metadata accessor for LocationViewerInput(0);
    v12 = *(_QWORD *)(a1 + *(int *)(v11 + 40) + 8);
    v13 = Location.Identifier.id.getter(v11);
    v15 = v14;
    sub_1000F3CAC(v13, v14, v12);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v16 = type metadata accessor for WeatherCondition(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v16);
  }
  sub_1000804B4(v8, v10, (uint64_t)v7, a2);
}

void sub_1000136B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v1);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v2);
  sub_100079FBC();
  if (qword_100BC2018 != -1)
    swift_once(&qword_100BC2018, sub_100123AD8);
  v3 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE780);
  sub_1000992EC(v3, (uint64_t)v8);
  v4 = sub_1000C5E1C();
  sub_1000C28F8(v4, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_1000CCC80();
  if (qword_100BC2020 != -1)
    swift_once(&qword_100BC2020, sub_100123AEC);
  v5 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE798);
  sub_1000992EC(v5, (uint64_t)v7);
  v6 = sub_1000DF5DC();
  sub_1000C28F8(v6, (uint64_t)sub_10012394C);
  sub_1000E7028();
  sub_1000CCC80();
  sub_1000CFCBC();
  sub_1000D177C();
  sub_100098CA0();
  sub_1000C2464();
  sub_1000986C4();
  sub_1000D0CF0();
  sub_10009D300();
}

uint64_t sub_100013818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  sub_1000BA294(&qword_100BD6160);
  sub_1000B42B0();
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v26[-1] - v6;
  v8 = sub_1000BA294(&qword_100BD6158);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  v13 = v1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__isLoaded;
  LOBYTE(v26[0]) = 1;
  Published.init(initialValue:)(v26, &type metadata for Bool);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v13, v12, v8);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) = 1;
  v14 = OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel;
  v15 = sub_1000DB8D4();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v15);
  sub_100121DB0((uint64_t)v7, (uint64_t)v5, &qword_100BD6160);
  v16 = sub_1000BA294(&qword_100BD6168);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = Atomic.init(wrappedValue:)(v5);
  sub_100021A14((uint64_t)v7, &qword_100BD6160);
  *(_QWORD *)(v1 + v14) = v17;
  v18 = type metadata accessor for MicaBackgroundAnimation(0);
  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  UIApplication.expectedWindow.getter(v26);

  v20 = v27;
  v21 = v28;
  sub_1000DB418(v26, v27);
  v22 = dispatch thunk of WindowType.bounds.getter(v20, v21);
  v23 = MicaBackgroundAnimation.__allocating_init(windowBounds:)(v22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__animation, v26, 33, 0);
  v25 = v23;
  Published.init(initialValue:)(&v25, v18);
  swift_endAccess(v26);
  return v1;
}

uint64_t sub_100013A44@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  id v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  int *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::String v15;

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._countAndFlagsBits = 0xD000000000000038;
  v15._object = (void *)0x8000000100A10B00;
  v5._object = (void *)0x8000000100A10AE0;
  v5._countAndFlagsBits = 0xD000000000000019;
  v6._countAndFlagsBits = 0x612074726F706552;
  v6._object = (void *)0xEF6575737349206ELL;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v15);

  *(Swift::String *)a2 = v7;
  *(_QWORD *)(a2 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(a2 + 24) = 0x80000001009F0F50;
  *(_BYTE *)(a2 + 32) = 0;
  v8 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload(a2, v8, 4);
  v9 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v10 = (_BYTE *)(a2 + v9[5]);
  *v10 = a1;
  v11 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v10, v11, 12);
  v12 = a2 + v9[7];
  v13 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v12, v13, 6);
  result = _s7Weather24LocationCompositionStateOwst_0(v12, 0, 1, v13);
  *(_WORD *)(a2 + v9[6]) = 258;
  return result;
}

uint64_t type metadata accessor for LocationComponentActionState()
{
  return objc_opt_self(_TtC7WeatherP33_0F505A2E2771982AAF5E223448F46F1D28LocationComponentActionState);
}

void sub_100013BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  _BYTE v8[24];

  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v1);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v2);
  sub_100079FBC();
  if (qword_100BC2050 != -1)
    swift_once(&qword_100BC2050, sub_100123938);
  v3 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE828);
  sub_1000992EC(v3, (uint64_t)v8);
  v4 = sub_1000C5E1C();
  sub_1000C28F8(v4, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_1000CCC80();
  if (qword_100BC2058 != -1)
    swift_once(&qword_100BC2058, sub_10012395C);
  v5 = sub_1000AECD4(v0, (uint64_t)&unk_100CAE840);
  sub_1000992EC(v5, (uint64_t)v7);
  v6 = sub_1000DF5DC();
  sub_1000C28F8(v6, (uint64_t)sub_10012394C);
  sub_1000E7028();
  sub_1000CCC80();
  sub_1000CFCBC();
  sub_1000D177C();
  sub_100098CA0();
  sub_1000C2464();
  sub_1000986C4();
  sub_1000D0CF0();
  sub_10009D300();
}

uint64_t sub_100013D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = type metadata accessor for Scope(0);
  __chkstk_darwin(v0);
  sub_1000C2974();
  v1 = sub_1000BA294(&qword_100BF76E0);
  v2 = sub_1000C4114(v1, 0, 0, (uint64_t)sub_10014B128);
  sub_10009880C();
  sub_1000BB65C();
  v3 = sub_1000C2AAC();
  swift_release(v3);
  swift_release(v2);
  sub_1000BCB64();
  sub_1000C2974();
  v4 = type metadata accessor for DemoPresetMiddleware();
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0, 0, sub_1007EE4F8, 0, v4);
  sub_10009880C();
  sub_1000BB65C();
  v6 = sub_1000C2AAC();
  swift_release(v6);
  swift_release(v5);
  sub_1000BCB64();
  sub_1000C2974();
  v7 = sub_1000C4114((uint64_t)&type metadata for Bool, 0xD000000000000012, 0x80000001009F5CF0, (uint64_t)sub_10014B08C);
  swift_release(v7);
  return sub_10009880C();
}

uint64_t *sub_100013E9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 2u:
        v8 = type metadata accessor for Locale(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = a1;
        v10 = a3;
        v11 = 2;
        goto LABEL_30;
      case 3u:
        v14 = type metadata accessor for ActivityAction(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v14);
        if (EnumCaseMultiPayload == 1)
        {
          v26 = type metadata accessor for PreviewLocation(0);
          v27 = (char *)&loc_100014098 + 4 * byte_1009A79A9[swift_getEnumCaseMultiPayload(a2, v26)];
          __asm { BR              X10 }
        }
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v16 = type metadata accessor for SavedLocation(0);
          if (swift_getEnumCaseMultiPayload(a2, v16) == 1)
          {
            v17 = type metadata accessor for SavedLocation.Placeholder(0);
            v18 = 1;
          }
          else
          {
            v17 = type metadata accessor for Location(0);
            v18 = 0;
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v17 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload(a1, v16, v18);
          swift_storeEnumTagMultiPayload(a1, v14, 0);
        }
        v9 = a1;
        v10 = a3;
        v11 = 3;
        goto LABEL_30;
      case 4u:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain(v13);
        v9 = a1;
        v10 = a3;
        v11 = 4;
        goto LABEL_30;
      case 8u:
        v19 = a2[1];
        if (v19 >= 2)
        {
          *a1 = *a2;
          a1[1] = v19;
          swift_bridgeObjectRetain(v19);
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        v9 = a1;
        v10 = a3;
        v11 = 8;
        goto LABEL_30;
      case 0xAu:
        v20 = type metadata accessor for ConfiguredUnitsAction(0);
        v21 = swift_getEnumCaseMultiPayload(a2, v20);
        if (v21 == 1)
        {
          v28 = type metadata accessor for UnitConfiguration.Temperature(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v28))
          {
            v29 = sub_1000BA294(&qword_100BD7148);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v28);
          }
          v23 = a1;
          v24 = v20;
          v25 = 1;
        }
        else
        {
          if (v21)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
            goto LABEL_28;
          }
          v22 = type metadata accessor for ConfiguredUnit(0);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
          v23 = a1;
          v24 = v20;
          v25 = 0;
        }
        swift_storeEnumTagMultiPayload(v23, v24, v25);
LABEL_28:
        v9 = a1;
        v10 = a3;
        v11 = 10;
LABEL_30:
        swift_storeEnumTagMultiPayload(v9, v10, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

void sub_100014364(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v18 = a5;
  v8 = type metadata accessor for Access(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeatureState(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BE94D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *a2, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Access.protected(_:), v8);
  v16 = Setting<>.init(_:defaultValue:access:)(a3, a4, v15, v11);
  *v18 = v16;
  sub_100098640();
}

_QWORD *sub_100014470(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[11];
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t assignWithCopy for FullscreenMapPresentationSourceViewModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2[1];
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_10008D47C(v6, (char)v2);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_1000B15F8(v7, v8);
  return a1;
}

uint64_t sub_10001456C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD *, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v10 = v5 + *a1;
  sub_1000992EC(v10, (uint64_t)v20);
  sub_100037768(v10, (uint64_t)v17, a2);
  if (v18)
    return a3(v17, a5);
  sub_100021AA4((uint64_t)v17, a2);
  sub_100037674((uint64_t)v17);
  v12 = v18;
  v13 = v19;
  sub_1000DB418(v17, v18);
  v14 = sub_1000BA294(a4);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (v16)
  {
    a3(v15, a5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v17);
    sub_10003B59C(a5, (uint64_t)v17);
    sub_1000BBC6C(v10, (uint64_t)v15);
    sub_1000A3908((uint64_t)v17, v10, a2);
    return swift_endAccess(v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_100014684(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = type metadata accessor for LocationModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = type metadata accessor for NotificationLocation(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
      v23 = *(int *)(sub_1000BA294((uint64_t *)&unk_100C0B810) + 48);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
      {
        v27 = sub_1000BA294(&qword_100BD4280);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      }
      v13 = a1;
      v14 = a3;
      v15 = 1;
      goto LABEL_14;
    case 2u:
      v8 = type metadata accessor for NotificationSubscription.Location(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(sub_1000BA294(&qword_100BD2378) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = a1;
      v14 = a3;
      v15 = 2;
      goto LABEL_14;
    case 3u:
      v16 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v16);
      v13 = a1;
      v14 = a3;
      v15 = 3;
      goto LABEL_14;
    case 4u:
      v17 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v17);
      v13 = a1;
      v14 = a3;
      v15 = 4;
      goto LABEL_14;
    case 5u:
      v18 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v19 = *(int *)(sub_1000BA294(&qword_100BD2370) + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for NotificationSubscription.Kind(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      v13 = a1;
      v14 = a3;
      v15 = 5;
LABEL_14:
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

Swift::Void __swiftcall SessionEventsAndDataCoordinator.sceneDidBecomeActive()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = v0;
  v3 = sub_100098BC4();
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100079FBC();
  sub_1000DB418((_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 272));
  sub_1000C5D04(&qword_100BD64B8);
  v5 = sub_1000C09E4();
  dispatch thunk of AppConfigurationManagerType.addObserver(_:)(v5);
  sub_1000DB418((_QWORD *)(v2 + 288), *(_QWORD *)(v2 + 312));
  sub_1000C5D04(&qword_100BD64C0);
  v6 = sub_1000C09E4();
  dispatch thunk of LocationManagerType.addObserver(_:)(v6);
  UnfairLock.lock()();
  if ((*(_BYTE *)(v0 + 336) & 1) == 0)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, enum case for StartMethod.homeScreenIconTap(_:), v3);
    v7 = v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
    sub_10009922C(v2 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod, (uint64_t)v8, 33);
    sub_1000999F8(v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40));
    swift_endAccess(v8);
    sub_10006ADEC();
  }
  *(_BYTE *)(v2 + 336) = 0;
  UnfairLock.unlock()();
  sub_10009D300();
}

void sub_100014A48(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(uint64_t);
  void (*v30)(char *, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a3;
  v33 = a1;
  v36 = a4;
  v6 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorScheme(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BFB9C8);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BFB9D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v19 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(&v39, v19);
  if ((_BYTE)v39)
    v20 = (unsigned int *)&enum case for ColorScheme.light(_:);
  else
    v20 = (unsigned int *)&enum case for ColorScheme.dark(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *v20, v9);
  KeyPath = swift_getKeyPath(&unk_1009BD230);
  v22 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  v23 = sub_1000BA294(&qword_100BE21D8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v22 + *(int *)(v23 + 28), v12, v9);
  *v22 = KeyPath;
  v24 = sub_1000BA294(&qword_100BFB9D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v15, v33, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v25 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIAccessibilityInvertColorsStatusDidChangeNotification, 0);

  v26 = swift_allocObject(&unk_100B88120, 32, 7);
  *(_BYTE *)(v26 + 16) = a2;
  *(_QWORD *)(v26 + 24) = v32;
  sub_100037794((uint64_t)v15, (uint64_t)v18, &qword_100BFB9C8);
  v27 = v34;
  v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v18[*(int *)(v16 + 52)], v8, v35);
  v29 = (uint64_t (**)(uint64_t))&v18[*(int *)(v16 + 56)];
  *v29 = sub_100679EF4;
  v29[1] = (uint64_t (*)(uint64_t))v26;
  v30 = *(void (**)(char *, uint64_t, __n128))(v27 + 8);
  v31 = swift_retain();
  v30(v8, v28, v31);
  sub_100021AA4((uint64_t)v15, &qword_100BFB9C8);
  sub_1000F111C((uint64_t)v18, v36, &qword_100BFB9D0);
}

char *sub_100014D28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  id v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  objc_super v18;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v5);
  v11 = &v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_dispatcher];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_userNotificationCenter] = a3;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_store] = a4;
  v18.receiver = v5;
  v18.super_class = ObjectType;
  swift_retain(a2);
  v12 = a3;
  swift_retain(a4);
  v13 = (char *)objc_msgSendSuper2(&v18, "init");
  v14 = *(void **)&v13[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_userNotificationCenter];
  v15 = v13;
  v16 = v14;
  objc_msgSend(v16, "setDelegate:", v15);

  swift_release(a2);
  swift_release(a4);
  return v15;
}

Swift::Void __swiftcall AppLaunchCountMonitor.applicationDidFinishLaunching(withOptions:)(Swift::OpaquePointer_optional withOptions)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v31 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  sub_100098728();
  v3 = v2 - v1;
  v4 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = (_QWORD *)(v11 - v10);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)v30 - v18;
  sub_10009FFE0();
  v30[0] = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *v12 = 500;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v12, enum case for DispatchTimeInterval.milliseconds(_:), v8);
  + infix(_:_:)(v17, v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21 = v13;
  v20(v17, v13);
  v22 = swift_allocObject(&unk_100B6A838, 24, 7);
  swift_weakInit(v22 + 16, v30[1]);
  aBlock[4] = sub_100137A90;
  v36 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100121D84;
  aBlock[3] = &unk_100B6A850;
  v23 = _Block_copy(aBlock);
  swift_release(v36);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_1001221E0();
  v26 = sub_1000BA294(&qword_100BD4F10);
  v27 = sub_100121014();
  v28 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v31, v25);
  v29 = (void *)v30[0];
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v7, v3, v23);
  _Block_release(v23);

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v3, v28);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v7, v33);
  v20(v19, v21);
}

void sub_1000150CC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v16[3];

  v5 = sub_1000BA294(&qword_100BF0220);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098694();
  v7 = sub_1000BA294(&qword_100BF0228);
  v8 = type metadata accessor for WireframeContentManager(0);
  sub_10003D2DC(&qword_100BF0230, &qword_100BF0228);
  v10 = v9;
  sub_10000F1C8(&qword_100BE3238, type metadata accessor for WireframeContentManager);
  View.environment<A>(_:)(a1, v7, v8, v10, v11);
  v12 = type metadata accessor for VisibilityState(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain_n(a1, 2);
  v16[0] = sub_100144B04();
  State.init(wrappedValue:)(v16, v12);
  v13 = v16[1];
  v14 = v16[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, v2, v5);
  swift_release(a1);
  v15 = (_QWORD *)(a2 + *(int *)(sub_1000BA294(&qword_100BF0238) + 36));
  *v15 = v13;
  v15[1] = v14;
  v15[2] = sub_100131330;
  v15[3] = a1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  sub_100098640();
}

uint64_t initializeBufferWithCopyOfBuffer for InvertedColorSchemeStatusBarCorrectionModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_100015270()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;

  v0 = type metadata accessor for Scope(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ProxyContainer.private.getter(v2);
  v6 = type metadata accessor for ToolbarTemplate(0);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_1008706A4);
  swift_release(v9);
  v10 = swift_release(v5);
  v11 = ProxyContainer.public.getter(v10);
  v12 = sub_1000BA294(&qword_100C0E728);
  v15 = sub_1000BA3CC(v12, v13, v14, (uint64_t)sub_1008706B4);
  v16 = swift_release(v11);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, enum case for Scope.singleton(_:), v0, v16);
  v17 = Definition.inScope(_:)(v4);
  swift_release(v17);
  v18 = swift_release(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v18);
}

uint64_t type metadata accessor for LocationComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather33LocationComponentViewModelFactory);
}

uint64_t sub_100015398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v0 = sub_1000BA294(&qword_100BC35F8);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v1);
  v6 = (char *)&v33 - v5;
  v7 = LocationModel.kind.getter(v4);
  v8 = Location.Identifier.Kind.rawValue.getter(v7 & 1);
  v10 = v9;
  v11 = Location.Identifier.Kind.rawValue.getter(1);
  if (v8 == v11 && v10 == v12)
  {
    v16 = swift_bridgeObjectRelease_n(v10, 2);
    return LocationModel.name.getter(v16);
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
    return LocationModel.name.getter(v16);
  LocationModel.location.getter(v16);
  v17 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v17) == 1)
  {
    sub_100021A14((uint64_t)v6, &qword_100BC35F8);
  }
  else
  {
    v18 = Location.secondaryName.getter();
    v21 = v20;
    v22 = *(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
    v23 = v22(v6, v17);
    if (!v21)
      return 0;
    LocationModel.location.getter(v23);
    v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v3, 1, v17);
    if ((_DWORD)v24 == 1)
    {
      sub_100021A14((uint64_t)v3, &qword_100BC35F8);
      return v18;
    }
    v25 = Location.name.getter(v24);
    v27 = v26;
    v29 = v28;
    ((void (*)(char *, uint64_t, __n128))v22)(v3, v17, v25);
    if (v18 == v27 && v21 == v29)
    {
      swift_bridgeObjectRelease(v21);
      v32 = v29;
    }
    else
    {
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v21, v27, v29, 0);
      swift_bridgeObjectRelease(v29);
      if ((v31 & 1) == 0)
        return v18;
      v32 = v21;
    }
    swift_bridgeObjectRelease(v32);
  }
  return 0;
}

uint64_t sub_1000155C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[3];
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BDBAA8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v33)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BED438);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BDBAB0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (v29)
  {
    v14 = sub_100068EB4((uint64_t)v32, v33);
    __chkstk_darwin(v14);
    v16 = (_QWORD *)((char *)&v28[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = sub_100068EB4((uint64_t)v30, v31);
    __chkstk_darwin(v18);
    v20 = (_QWORD *)((char *)&v28[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v21 + 16))(v20);
    v22 = sub_100068EB4((uint64_t)v28, v29);
    __chkstk_darwin(v22);
    v24 = (char *)&v28[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    v26 = sub_1000192A0(*v16, *v20, v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v32);
    result = type metadata accessor for StandardLocationViewConfigurationFactory();
    a2[3] = result;
    a2[4] = &off_100B99F70;
    *a2 = v26;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_100015810()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  result = 2.0;
  if (v1 == (id)1)
    return 0.0;
  return result;
}

uint64_t sub_100015870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[96];

  v2 = type metadata accessor for Locale.Language(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1000BA294(&qword_100BC39D8);
  __chkstk_darwin(v6);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = static Locale.languageIdentifier.getter(v11);
  Locale.init(identifier:)(v14, v15);
  v16 = sub_1000BA294(&qword_100BC39A8);
  inited = (_OWORD *)swift_initStackObject(v16, v32);
  inited[1] = xmmword_1009891D0;
  inited[2] = xmmword_1009DDF40;
  inited[3] = xmmword_1009DDF50;
  inited[4] = xmmword_1009DDF60;
  inited[5] = xmmword_1009DDF70;
  v18 = Locale.language.getter(inited);
  Locale.Language.languageCode.getter(v18);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v19 = type metadata accessor for Locale.LanguageCode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v19) == 1)
  {
    sub_100021A14((uint64_t)v8, &qword_100BC39D8);
    v20 = 0;
    v21 = 0;
  }
  else
  {
    v20 = Locale.LanguageCode.identifier.getter();
    v21 = v22;
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v8, v19);
  }
  v23 = *((_QWORD *)inited + 2);
  if (!v23)
  {
LABEL_16:
    swift_bridgeObjectRelease(v21);
    swift_setDeallocating(inited);
    sub_10011EA28();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    v28 = (unsigned int *)&enum case for Font.Leading.tight(_:);
    goto LABEL_19;
  }
  v24 = (uint64_t *)inited + 5;
  while (1)
  {
    v25 = *v24;
    if (*v24)
      break;
    if (!v21)
      goto LABEL_18;
LABEL_15:
    v24 += 2;
    if (!--v23)
      goto LABEL_16;
  }
  if (!v21)
    goto LABEL_15;
  v26 = *(v24 - 1);
  v27 = v26 == v20 && v25 == v21;
  if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)(v26, v25, v20, v21, 0) & 1) == 0)
    goto LABEL_15;
  swift_bridgeObjectRelease(v21);
LABEL_18:
  swift_setDeallocating(inited);
  sub_10011EA28();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  v28 = (unsigned int *)&enum case for Font.Leading.standard(_:);
LABEL_19:
  v29 = *v28;
  v30 = type metadata accessor for Font.Leading(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(a1, v29, v30);
}

uint64_t type metadata accessor for LocationViewObserverViewState()
{
  return objc_opt_self(_TtC7WeatherP33_46F25C31A167180F85420843A49088BF29LocationViewObserverViewState);
}

double sub_100015B38(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100BDC558);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_100385C34);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BDC560);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_100385E50);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v11 = sub_1000BA294(&qword_100BDC568);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_100133400);
  swift_release(v14);
  sub_10009880C();
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_100386128, 0);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

double sub_100015BF8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100BDC7F8);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_1001355F8);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BEFE70);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_1001353B0);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v11 = sub_1000BA294(&qword_100BEFE78);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_1001359C4);
  swift_release(v14);
  sub_10009880C();
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_10000D4D0, 0);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_100015CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v2 = type metadata accessor for EnvironmentValues(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100099864();
  v5 = EnvironmentValues.accessibilityVoiceOverEnabled.getter(v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0, v2);
  if ((v5 & 1) != 0)
    v7 = 1;
  else
    v7 = EnvironmentValues.accessibilitySwitchControlEnabled.getter(v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return v7 & 1;
}

double sub_100015D54(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100C0CE90);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_10093025C);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BF7658);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_10012A8DC);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v11 = sub_1000BA294(&qword_100BF0330);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_10012A8F0);
  swift_release(v14);
  sub_10009880C();
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_100930434, 0);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_100015E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v27 = type metadata accessor for NewsArticlePlacement(0);
  v32 = *(_QWORD *)(v27 - 8);
  v5 = __chkstk_darwin(v27);
  v28 = (uint64_t)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)v24 - v7;
  v33 = _swiftEmptyArrayStorage;
  v31 = *(_QWORD *)(a1 + 16);
  if (v31)
  {
    v24[1] = v2;
    v9 = 0;
    v25 = (char *)v24 - v7;
    v26 = a1;
    while (v9 < *(_QWORD *)(a1 + 16))
    {
      v10 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v11 = *(_QWORD *)(v32 + 72);
      sub_100080C0C(a1 + v10 + v11 * v9, (uint64_t)v8, type metadata accessor for NewsArticlePlacement);
      v12 = *(_QWORD *)(a2 + 16);
      if (v12)
      {
        v29 = v11;
        v30 = v10;
        v13 = &v8[*(int *)(v27 + 20)];
        v14 = type metadata accessor for ArticlePlacementLocation(0);
        v15 = *(_QWORD *)(v14 - 8);
        v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v17 = a2;
        v18 = *(_QWORD *)(v15 + 72);
        sub_100086DA4(&qword_100C16328, (uint64_t (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation, (uint64_t)&protocol conformance descriptor for ArticlePlacementLocation);
        v20 = v19;
        swift_bridgeObjectRetain(v17);
        while ((dispatch thunk of static Equatable.== infix(_:_:)(v16, v13, v14, v20) & 1) == 0)
        {
          v16 += v18;
          if (!--v12)
          {
            a2 = v17;
            swift_bridgeObjectRelease(v17);
            v8 = v25;
            a1 = v26;
            goto LABEL_9;
          }
        }
        a2 = v17;
        swift_bridgeObjectRelease(v17);
        v8 = v25;
        sub_10007802C((uint64_t)v25, v28, type metadata accessor for NewsArticlePlacement);
        v21 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
        {
          sub_100605BC4();
          v21 = v33;
        }
        v22 = v29;
        v23 = v21[2];
        if (v23 >= v21[3] >> 1)
        {
          sub_100605BC4();
          v21 = v33;
        }
        v21[2] = v23 + 1;
        sub_10007802C(v28, (uint64_t)v21 + v30 + v23 * v22, type metadata accessor for NewsArticlePlacement);
        a1 = v26;
      }
      else
      {
LABEL_9:
        sub_10006BD5C((uint64_t)v8, type metadata accessor for NewsArticlePlacement);
      }
      if (++v9 == v31)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_1000160B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v40 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v3 = &v37[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Font.TextStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_QWORD *)(v0 + *(int *)(type metadata accessor for DailyForecastComponentViewModel(0) + 36));
  v9 = v8[1];
  v41[0] = *v8;
  v41[1] = v9;
  v10 = sub_100114EF8();
  swift_bridgeObjectRetain(v9);
  v11 = Text.init<A>(_:)(v41, &type metadata for String, v10);
  v13 = v12;
  v38 = v14;
  v39 = v15;
  v16 = v0 + *(int *)(type metadata accessor for DailyComponentView(0) + 36);
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_10008D47C(*(_QWORD *)v16, v18);
  sub_100109B54();
  v20 = v19;
  sub_1000B15F8(v17, v18);
  v21 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v20 & 1) == 0)
    v21 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  v22 = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *v21, v4);
  static Font.Weight.medium.getter(v22);
  v23 = static Font.system(_:weight:)(v7);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v24 = v40;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v40);
  v25 = Font.leading(_:)(v3, v23);
  swift_release(v23);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v24);
  LOBYTE(v24) = v38 & 1;
  v26 = v39;
  v27 = Text.font(_:)(v25, v11, v13, v38 & 1, v39);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release(v25);
  sub_1000D31B4(v11, v13, v24);
  v34 = swift_bridgeObjectRelease(v26);
  v35 = Text.monospacedDigit()(v27, v29, v31 & 1, v33, v34);
  sub_1000D31B4(v27, v29, v31 & 1);
  swift_bridgeObjectRelease(v33);
  return v35;
}

void sub_100016328()
{
  uint64_t v0;
  id v1;
  id updated;

  sub_1000353D4();
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  updated = (id)static UnitManager.Notification.didUpdateUnits.getter();
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "pushTemperatureScaleData", updated, 0);

}

_QWORD *sub_1000163B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[13];
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t type metadata accessor for UVIndexComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather32UVIndexComponentViewModelFactory);
}

_QWORD *sub_100016458(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = a1[11];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t initializeWithCopy for CollisionModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain(v4);
  sub_10008D47C(v6, v7);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  return a1;
}

_QWORD *sub_100016544@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BED3A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(&v18, v6, 0x647261646E617473, 0xE800000000000000, v6, v4, v5);
  if (!v19)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(&v16, v6, 0x74616E7265746C61, 0xEB00000000657669, v6, v8, v9);
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BED520);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (v15)
  {
    v13 = type metadata accessor for LocationViewConfigurationFactory();
    swift_allocObject(v13, 136, 7);
    result = (_QWORD *)sub_100126770(&v18, &v16, &v14);
    a2[3] = v13;
    a2[4] = &off_100B71810;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MoonComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather29MoonComponentViewModelFactory);
}

void sub_1000166C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_100086124();
    if (v2)
      goto LABEL_3;
LABEL_14:
    v6 = swift_bridgeObjectRelease_n(v1, 2);
    v7 = v0[1];
    __chkstk_darwin(v6);
    v8[2] = v0;
    swift_bridgeObjectRetain(v7);
    sub_100121604((void (*)(uint64_t *, __n128))sub_100130628, (uint64_t)v8, v7);
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v1 < 0)
    v5 = *v0;
  else
    v5 = v1 & 0xFFFFFFFFFFFFFF8;
  sub_100086124();
  v2 = _CocoaArrayWrapper.endIndex.getter(v5);
  if (!v2)
    goto LABEL_14;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      ++v3;
      v9 = v4;
      sub_100028E18(&v9);
      swift_release(v4);
    }
    while (v2 != v3);
    goto LABEL_14;
  }
  __break(1u);
}

void *sub_1000167F0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_100016884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  result = Text.init<A>(_:)(v10, &type metadata for String, v5);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v8 & 1;
  *(_QWORD *)(a3 + 24) = v9;
  return result;
}

void sub_1000168EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t active;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t *__return_ptr, __n128);
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for Location.Identifier(0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  __chkstk_darwin(v2);
  v24 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  __chkstk_darwin(active);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (int *)type metadata accessor for ViewState(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void (*)(uint64_t *__return_ptr, __n128))a1[2];
  v14 = a1[3];
  v15 = a1[5];
  swift_retain();
  v16 = swift_retain();
  v13(&v27, v16);
  swift_release(v15);
  swift_release(v14);
  v17 = v27;
  sub_100084050(v27 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v12, type metadata accessor for ViewState);
  swift_release(v17);
  sub_100084050((uint64_t)&v12[v10[5]], (uint64_t)v9, type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
  {
    sub_1000215BC((uint64_t)v9, type metadata accessor for ViewState.SecondaryViewState);
LABEL_9:
    sub_1000215BC((uint64_t)v12, type metadata accessor for ViewState);
    return;
  }
  v18 = *v9;
  if (*(_QWORD *)&v12[v10[9] + 8] == 1)
  {
    v19 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v19, "userInterfaceIdiom");

    if ((v12[v10[7]] & 1) == 0)
    {
      swift_release(v18);
      goto LABEL_9;
    }
  }
  sub_1000215BC((uint64_t)v12, type metadata accessor for ViewState);
  sub_100084050(v18 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v6, type metadata accessor for LocationViewerActiveLocationState);
  v20 = v26;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v26) == 1)
  {
    swift_release(v18);
  }
  else
  {
    v22 = v24;
    v21 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v24, v6, v20);
    sub_1004DFE98();
    v23 = swift_release(v18);
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v22, v20, v23);
  }
}

uint64_t type metadata accessor for PressureComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather33PressureComponentViewModelFactory);
}

uint64_t type metadata accessor for PrecipitationTotalComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather43PrecipitationTotalComponentViewModelFactory);
}

double sub_100016BF8()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  result = 10.0;
  if (v1 == (id)1)
    return 14.0;
  return result;
}

uint64_t _s7Weather26NetworkConnectivityMonitorC30applicationWillEnterForegroundyyF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v0 + 32))
  {
    v20 = *(_QWORD *)(v0 + 48);
    v10 = swift_allocObject(&unk_100B9E618, 24, 7);
    swift_weakInit(v10 + 16, v0);
    aBlock[4] = sub_10012ECAC;
    v23 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100088F7C;
    aBlock[3] = &unk_100B9E630;
    v19 = _Block_copy(aBlock);
    v11 = swift_retain();
    static DispatchQoS.unspecified.getter(v11);
    v21 = _swiftEmptyArrayStorage;
    sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v13 = v12;
    v14 = sub_1000BA294(&qword_100BD4F10);
    sub_100081288((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v14, v15, v1, v13);
    v16 = v19;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v19);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v17 = v23;
    swift_release(v10);
    return swift_release(v17);
  }
  return result;
}

double sub_100016E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _QWORD v17[2];
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v0 + 80);
  v8 = swift_allocObject(&unk_100B69AC8, 24, 7);
  swift_weakInit(v8 + 16);
  aBlock[4] = sub_10014B6AC;
  v21 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B69AE0;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain();
  static DispatchQoS.unspecified.getter(v10);
  v19 = _swiftEmptyArrayStorage;
  sub_10005329C((unint64_t *)&qword_100BFFA20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = v11;
  v13 = sub_1000BA294(&qword_100BD4F10);
  sub_100081288((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = v21;
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

double *sub_10001705C(void (*a1)(uint64_t *__return_ptr, __n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double *v6;
  double *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double refreshed;
  __n128 v36;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = v6;
  v10 = type metadata accessor for WeatherDataConfiguration(0);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = type metadata accessor for AppConfigurationState(0);
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = type metadata accessor for UnfairLock.Options(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_100098728();
  v22 = v21 - v20;
  v23 = sub_1000BA294(&qword_100BC28E8);
  v24 = swift_allocObject(v23, ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72), *(unsigned __int8 *)(v19 + 80) | 7);
  *(_OWORD *)(v24 + 16) = xmmword_10097CA50;
  static UnfairLock.Options.dataSynchronization.getter(v24);
  v43 = v24;
  v25 = sub_100051B90((unint64_t *)&qword_100BC28F0, (uint64_t (*)(uint64_t))&type metadata accessor for UnfairLock.Options, (uint64_t)&protocol conformance descriptor for UnfairLock.Options);
  v26 = sub_1000BA294(&qword_100BC28F8);
  v27 = sub_100121100();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v26, v27, v18, v25);
  v28 = type metadata accessor for UnfairLock(0);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v29 = UnfairLock.init(options:)(v22);
  *((_QWORD *)v7 + 6) = &_swiftEmptyDictionarySingleton;
  *((_QWORD *)v7 + 2) = v29;
  *((_QWORD *)v7 + 3) = a5;
  *((_QWORD *)v7 + 4) = a6;
  v30 = swift_retain();
  a1(&v43, v30);
  v31 = v43;
  sub_100137A9C(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v17);
  swift_release(v31);
  AppConfiguration.weatherData.getter(v32);
  v33 = type metadata accessor for AppConfiguration(0);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v17, v33);
  refreshed = WeatherDataConfiguration.extendedRefreshHintInterval.getter(v34);
  swift_release(a4);
  swift_release(a2);
  v36 = swift_release(a6);
  (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v13, v42, v36);
  v7[5] = refreshed;
  return v7;
}

double sub_1000172B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1000D93C4();
  sub_1000BD214();
  sub_1000D1574();
  v0 = sub_10002A018();
  v8 = sub_10009D998(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  return sub_1000C34F8(v8);
}

uint64_t sub_1000172FC()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);

  v0 = sub_1000BA294(&qword_100BD64E8);
  updated = type metadata accessor for LocationManagerUpdateType(0);
  v2 = *(_QWORD *)(updated - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 2 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_10097DA20;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for LocationManagerUpdateType.currentLocation(_:), updated);
  v8(v7 + v3, enum case for LocationManagerUpdateType.currentCLLocation(_:), updated);
  return v6;
}

uint64_t sub_1000173B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory + 24);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory + 32);
  sub_1000DB418((_QWORD *)(v3 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory), v7);
  v9 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v10 = a3 + v9[5];
  v11 = dispatch thunk of SunriseSunsetViewModelFactoryType.makeViewModel(for:component:)(a1, a2, v7, v8);
  v12 = SunriseSunsetViewModel.headerTitle.getter(v11);
  v14 = v13;
  v15 = SunriseSunsetViewModel.headerIcon.getter();
  *(_QWORD *)a3 = v12;
  *(_QWORD *)(a3 + 8) = v14;
  *(_QWORD *)(a3 + 16) = v15;
  *(_QWORD *)(a3 + 24) = v16;
  *(_BYTE *)(a3 + 32) = 0;
  v17 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  swift_storeEnumTagMultiPayload(a3, v17, 0);
  v18 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v10, v18, 14);
  v19 = a3 + v9[7];
  v20 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v19, v20, 7);
  result = _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v20);
  *(_WORD *)(a3 + v9[6]) = 259;
  return result;
}

uint64_t sub_1000174CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  char v19[24];

  v2 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v6 = (_QWORD *)result;
    v7 = (_QWORD *)(result + 32);
    swift_beginAccess(result + 32, v17, 32, 0);
    v8 = v6[7];
    v9 = v6[8];
    sub_1000DB418(v7, v8);
    v10 = dispatch thunk of AppLaunchCountManagerType.appLaunchCount.getter(v8, v9);
    result = swift_endAccess(v17);
    v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess(v7, v17, 33, 0);
      v12 = v6[7];
      v13 = v6[8];
      sub_100068EB4((uint64_t)v7, v12);
      dispatch thunk of AppLaunchCountManagerType.appLaunchCount.setter(v11, v12, v13);
      swift_endAccess(v17);
      v14 = (uint64_t (*)(uint64_t))v6[2];
      v15 = v6[3];
      *v4 = v11;
      v16 = type metadata accessor for EnvironmentAction(0);
      swift_storeEnumTagMultiPayload(v4, v16, 9);
      swift_storeEnumTagMultiPayload(v4, v2, 2);
      v18 = 0;
      memset(v17, 0, sizeof(v17));
      swift_retain();
      sub_1000A5EBC((uint64_t)v4, (uint64_t)v17, v14);
      swift_release(v6);
      sub_100159C94((uint64_t)v17);
      sub_1000A0AA4((uint64_t)v4);
      return swift_release(v15);
    }
  }
  return result;
}

void sub_100017670(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_1000BA294(&qword_100BCB0A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = sub_10008909C();
  v8 = (uint64_t *)(a1 + *(int *)(type metadata accessor for VisibilityComponent(v7) + 20));
  v9 = *v8;
  v10 = v8[1];
  v25 = v8[3];
  v11 = v8[5];
  v26 = v8[4];
  v27 = v8[2];
  v12 = CurrentWeather.visibility.getter();
  v13 = Measurement<>.formattedAndClampedVisibilityWithUnit.getter(v12);
  v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = 0x6C6C69662E657965;
  *(_QWORD *)(a2 + 24) = 0xE800000000000000;
  *(_BYTE *)(a2 + 32) = 0;
  v16 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload(a2, v16, 0);
  v17 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v18 = (uint64_t *)(a2 + v17[5]);
  *v18 = v13;
  v18[1] = v15;
  v18[2] = v27;
  v18[3] = v25;
  v18[4] = v26;
  v18[5] = v11;
  v19 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v18, v19, 17);
  v20 = a2 + v17[7];
  v21 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v22 = enum case for DetailCondition.visibility(_:);
  v23 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v20, v22, v23);
  *(_BYTE *)(v20 + v21) = 0;
  v24 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v20, v24, 2);
  _s7Weather24LocationCompositionStateOwst_0(v20, 0, 1, v24);
  *(_WORD *)(a2 + v17[6]) = 256;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v10);
  sub_100098640();
}

_QWORD *sub_100017838(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[11];
  swift_bridgeObjectRetain(a1[13]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_1000178C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t active;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = type metadata accessor for ScenePhase(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  v3 = __chkstk_darwin(v2);
  v56 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v55 = (char *)&v53 - v5;
  v6 = type metadata accessor for LocationViewObserverView(0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Location.Identifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BCD780);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BCD680);
  v18 = __chkstk_darwin(v17);
  v59 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v53 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v53 - v23;
  v25 = (void (*)(char *, uint64_t))(a1 + *(int *)(v6 + 24));
  v60 = v9;
  v61 = v25;
  (*(void (**)(char *))(v9 + 16))((char *)&v53 - v23);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v8);
  v63 = v6;
  v64 = a1;
  v26 = *(_QWORD *)(a1 + *(int *)(v6 + 32) + 8);
  swift_retain();
  sub_10006BDA4();
  swift_release(v26);
  sub_100019258((uint64_t)v16, (uint64_t)v22);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10003773C((uint64_t)v24, (uint64_t)v13, &qword_100BCD680);
  sub_10003773C((uint64_t)v22, v27, &qword_100BCD680);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v8) != 1)
  {
    v30 = v59;
    sub_10003773C((uint64_t)v13, v59, &qword_100BCD680);
    if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v8) != 1)
    {
      v31 = v60;
      v32 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v54, v27, v8);
      sub_10000F1C8((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v32, v8, v33);
      v35 = *(void (**)(char *, uint64_t))(v31 + 8);
      v35(v32, v8);
      sub_100021A14((uint64_t)v22, &qword_100BCD680);
      sub_100021A14((uint64_t)v24, &qword_100BCD680);
      v35((char *)v30, v8);
      sub_100021A14((uint64_t)v13, &qword_100BCD680);
      v28 = v64;
      v29 = v62;
      sub_10000AB54(v64, v62, type metadata accessor for LocationViewObserverView);
      if ((v34 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      sub_1000215BC(v29, type metadata accessor for LocationViewObserverView);
      v43 = 0;
      goto LABEL_10;
    }
    sub_100021A14((uint64_t)v22, &qword_100BCD680);
    sub_100021A14((uint64_t)v24, &qword_100BCD680);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v30, v8);
LABEL_6:
    sub_100021A14((uint64_t)v13, &qword_100BCD780);
    v28 = v64;
    v29 = v62;
    sub_10000AB54(v64, v62, type metadata accessor for LocationViewObserverView);
    goto LABEL_9;
  }
  sub_100021A14((uint64_t)v22, &qword_100BCD680);
  sub_100021A14((uint64_t)v24, &qword_100BCD680);
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v8) != 1)
    goto LABEL_6;
  sub_100021A14((uint64_t)v13, &qword_100BCD680);
  v28 = v64;
  v29 = v62;
  sub_10000AB54(v64, v62, type metadata accessor for LocationViewObserverView);
LABEL_8:
  v36 = v55;
  sub_10015922C();
  v38 = v56;
  v37 = v57;
  v39 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for ScenePhase.background(_:), v58);
  sub_10000F1C8(&qword_100C0A050, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase);
  v41 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v38, v39, v40);
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v38, v39);
  v42(v36, v39);
  sub_1000215BC(v29, type metadata accessor for LocationViewObserverView);
  v43 = v41 ^ 1;
LABEL_10:
  v44 = v63;
  v45 = v28 + *(int *)(v63 + 20);
  v46 = *(_QWORD *)v45;
  v47 = *(_QWORD *)(v45 + 8);
  v48 = *(unsigned __int8 *)(v45 + 16);
  v49 = type metadata accessor for LocationViewObserverViewState();
  sub_10000F1C8(&qword_100BCD788, (uint64_t (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  v51 = StateObject.wrappedValue.getter(v46, v47, v48, v49, v50);
  sub_100022DA0(v43 & 1, v61, *(_QWORD *)(v28 + *(int *)(v44 + 28)), *(_QWORD *)(v28 + *(int *)(v44 + 28) + 8), *(_QWORD *)(v28 + *(int *)(v44 + 36)));
  return swift_release(v51);
}

uint64_t type metadata accessor for HourlyForecastComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather39HourlyForecastComponentViewModelFactory);
}

uint64_t sub_100017E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];

  v4 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.Leading(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Font.TextStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[0] = a1;
  v42[1] = a2;
  v14 = sub_100114EF8();
  swift_bridgeObjectRetain(a2);
  v15 = Text.init<A>(_:)(v42, &type metadata for String, v14);
  v17 = v16;
  v38 = v18;
  v20 = v19 & 1;
  v21 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Font.TextStyle.caption(_:), v10);
  static Font.Weight.bold.getter(v21);
  v22 = static Font.system(_:weight:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Font.Leading.tight(_:), v6);
  v23 = Font.leading(_:)(v9, v22);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v38;
  v25 = Text.font(_:)(v23, v15, v17, v20, v38);
  v27 = v26;
  LOBYTE(v9) = v28;
  v30 = v29;
  swift_release(v23);
  v31 = v9 & 1;
  sub_1000D31B4(v15, v17, v20);
  v32 = swift_bridgeObjectRelease(v24);
  v33 = v39;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v32);
  v34 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v33, 1, v25, v27, v31, v30);
  sub_1000D31B4(v25, v27, v31);
  v35 = swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v33, v41, v35);
  return v34;
}

void sub_1000180DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;
  _BYTE v48[24];
  uint64_t v49;
  _BYTE v50[24];
  uint64_t v51;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = type metadata accessor for SessionManager(0);
  v5 = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v6 = v5;
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = type metadata accessor for Client(0);
  v10 = dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  if (!v10)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v11 = v10;
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BD13E8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!v51)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BD13E0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!v49)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1000BA294(&qword_100BD13F0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!v47)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = a1[3];
  v22 = a1[4];
  sub_1000DB418(a1, v21);
  v23 = sub_1000BA294(&qword_100BD13F8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v23, v23, v21, v22);
  if (!v45)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = a1[3];
  v25 = a1[4];
  sub_1000DB418(a1, v24);
  v26 = sub_1000BA294(&qword_100BD1400);
  dispatch thunk of ResolverType.resolve<A>(_:)(v26, v26, v24, v25);
  if (!v43)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v27 = a1[3];
  v28 = a1[4];
  sub_1000DB418(a1, v27);
  v29 = sub_1000BA294(&qword_100BCF678);
  dispatch thunk of ResolverType.resolve<A>(_:)(v29, v29, v27, v28);
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = a1[3];
  v31 = a1[4];
  sub_1000DB418(a1, v30);
  v32 = sub_1000BA294(&qword_100BD1408);
  dispatch thunk of ResolverType.resolve<A>(_:)(v32, v32, v30, v31);
  if (v36)
  {
    v33 = type metadata accessor for SessionEventsAndDataCoordinator(0);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    LOBYTE(v34) = 2;
    sub_10003B214(0, v6, v11, (uint64_t)v50, (uint64_t)v48, (uint64_t)v46, (uint64_t)v44, (uint64_t)&v41, (uint64_t)v38, (uint64_t)v35, v34, v35[0], v35[1], v35[2], v36, v37, v38[0], v38[1], v38[2],
      v39,
      v40,
      v41,
      v42);
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_100018394(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _QWORD v40[3];
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  v3 = v2;
  v36 = a1;
  v37 = a2;
  v35 = sub_1000BA294(&qword_100BC40D0);
  __chkstk_darwin(v35);
  v5 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = static Alignment.top.getter(v6);
  v33 = v7;
  KeyPath = swift_getKeyPath(&unk_10097E8B0);
  v8 = v2[3];
  v45 = v2[2];
  v46 = v8;
  v9 = v2[3];
  v41 = v2[2];
  v42 = v9;
  v10 = sub_1000BA294(&qword_100BC40D8);
  v11 = State.wrappedValue.getter(&v38, v10);
  v12 = v38;
  static Alignment.center.getter(v11);
  _FrameLayout.init(width:height:alignment:)(0, 1, v12, 0);
  v13 = v41;
  v14 = BYTE8(v41);
  v15 = v42;
  v16 = BYTE8(v42);
  v18 = v43;
  v17 = v44;
  v38 = v45;
  v39 = v46;
  State.wrappedValue.getter(v40, v10);
  v19 = v40[1];
  v38 = v45;
  v39 = v46;
  State.wrappedValue.getter(v40, v10);
  v20 = v40[2];
  v21 = sub_1000BA294(&qword_100BC40E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v36, v21);
  v22 = &v5[*(int *)(v35 + 36)];
  *(_QWORD *)v22 = KeyPath;
  v22[8] = 0;
  *((_QWORD *)v22 + 2) = v13;
  v22[24] = v14;
  *((_QWORD *)v22 + 4) = v15;
  v22[40] = v16;
  *((_QWORD *)v22 + 6) = v18;
  *((_QWORD *)v22 + 7) = v17;
  *((_QWORD *)v22 + 8) = 0;
  *((_QWORD *)v22 + 9) = v19;
  *((_QWORD *)v22 + 10) = v20;
  v23 = v33;
  *((_QWORD *)v22 + 11) = v34;
  *((_QWORD *)v22 + 12) = v23;
  v24 = (_OWORD *)swift_allocObject(&unk_100B5CE58, 80, 7);
  v25 = v3[1];
  v24[1] = *v3;
  v24[2] = v25;
  v26 = v3[3];
  v24[3] = v3[2];
  v24[4] = v26;
  v27 = (_OWORD *)swift_allocObject(&unk_100B5CE80, 80, 7);
  v28 = v3[1];
  v27[1] = *v3;
  v27[2] = v28;
  v29 = v3[3];
  v27[3] = v3[2];
  v27[4] = v29;
  v30 = v37;
  sub_100037768((uint64_t)v5, v37, &qword_100BC40D0);
  v31 = (_QWORD *)(v30 + *(int *)(sub_1000BA294(&qword_100BC40E8) + 36));
  *v31 = sub_1001799F0;
  v31[1] = v24;
  v31[2] = sub_1001799F8;
  v31[3] = v27;
  sub_100179A00((uint64_t)v3);
  sub_100179A00((uint64_t)v3);
  sub_100021A14((uint64_t)v5, &qword_100BC40D0);
}

uint64_t type metadata accessor for WindComponentViewModelFactory()
{
  return objc_opt_self(_TtC7Weather29WindComponentViewModelFactory);
}

uint64_t sub_100018644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v25 = sub_10001D160(a2);
  v7 = v6;
  v8 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v9 = a3 + v8[5];
  type metadata accessor for WeatherMapOverlayKind(0);
  sub_1000BAE70();
  v10 = (int *)type metadata accessor for MapComponentViewModel(0);
  v11 = v9 + v10[5];
  v12 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
  v13 = v9 + v10[6];
  v14 = type metadata accessor for MapComponent(0);
  sub_10014DE7C(a2 + *(int *)(v14 + 20), v13);
  v15 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v13, 0, 1, v15);
  v16 = (uint64_t *)(v9 + v10[7]);
  *v16 = v25;
  v16[1] = v7;
  *(_QWORD *)a3 = sub_10002018C(a2);
  *(_QWORD *)(a3 + 8) = v17;
  *(_QWORD *)(a3 + 16) = v18;
  *(_QWORD *)(a3 + 24) = v19;
  *(_BYTE *)(a3 + 32) = 0;
  v20 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  swift_storeEnumTagMultiPayload(a3, v20, 0);
  v21 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v9, v21, 5);
  v22 = a3 + v8[7];
  sub_1000BAE70();
  v23 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v22, v23, 1);
  result = _s7Weather24LocationCompositionStateOwst_0(v22, 0, 1, v23);
  *(_WORD *)(a3 + v8[6]) = 259;
  return result;
}

uint64_t sub_1000187DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v44 = a2;
  v40 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v40 + 64);
  v4 = *(_QWORD *)(__chkstk_darwin(a1) + 16);
  v41 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v4;
  v5 = sub_100075EB0(&qword_100BDC9A0);
  v6 = sub_1000C396C(v5);
  sub_100075EB0(&qword_100BDC9A8);
  v7 = sub_100098C88();
  v9 = type metadata accessor for ModifiedContent(v7, v6, v8);
  sub_100075EB0(&qword_100BDC9B0);
  v10 = sub_100098C88();
  type metadata accessor for ModifiedContent(v10, v9, v11);
  v39 = *(_QWORD *)(a1 + 24);
  v12 = v39;
  v13 = sub_10005F124(&qword_100BDC9B8, &qword_100BDC9A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v49 = v12;
  v50 = v13;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v15 = sub_10005F124(&qword_100BDC9C0, &qword_100BDC9A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  v47 = WitnessTable;
  v48 = v15;
  v16 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v17 = sub_10005F124(&qword_100BDC9C8, &qword_100BDC9B0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
  v45 = v16;
  v46 = v17;
  v18 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v19 = sub_1000C28D0(v18);
  v38 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v19);
  v20 = type metadata accessor for WindowGroup(0, v19, v38);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v26 = (char *)&v37 - v25;
  v28 = v40;
  v27 = v41;
  v29 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v41, v43, a1);
  v30 = *(unsigned __int8 *)(v28 + 80);
  v31 = (v30 + 32) & ~v30;
  v32 = swift_allocObject(&unk_100B70500, v31 + v3, v30 | 7);
  v33 = v39;
  *(_QWORD *)(v32 + 16) = v42;
  *(_QWORD *)(v32 + 24) = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v32 + v31, v27, v29);
  sub_10038DF88((uint64_t)sub_10038DFCC, v32, v19, v38);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for WindowGroup<A>, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v24, v20);
  v35 = *(void (**)(char *, uint64_t))(v21 + 8);
  v35(v24, v20);
  static SceneBuilder.buildBlock<A>(_:)(v26, v20, v34);
  return ((uint64_t (*)(char *, uint64_t))v35)(v26, v20);
}

uint64_t sub_100018A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_100018ADC()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  char v5;
  char v7;
  char v8;

  sub_100030C6C();
  v2 = v1;
  v3 = sub_100076A98();
  sub_100076A50((_BYTE *)(v0 + 49), &v7);
  sub_100076A50(&v7, &v8);
  v4 = sub_1000C4120();
  if (!v5)
    v4 = 0.0;
  return v2 + v3 + *(double *)(v0 + 56) + *(double *)(v0 + 56) + v4;
}

_QWORD *sub_100018B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11, _QWORD *a12, uint64_t **a13)
{
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t *v81;
  _UNKNOWN **v82;
  _QWORD v83[3];
  uint64_t v84;
  _UNKNOWN **v85;
  _QWORD v86[3];
  uint64_t v87;
  _UNKNOWN **v88;
  _QWORD v89[3];
  uint64_t v90;
  _UNKNOWN **v91;
  _QWORD v92[3];
  uint64_t v93;
  _UNKNOWN **v94;
  _QWORD v95[3];
  uint64_t v96;
  _UNKNOWN **v97;
  _QWORD v98[3];
  uint64_t v99;
  _UNKNOWN **v100;
  _QWORD v101[3];
  uint64_t v102;
  _UNKNOWN **v103;
  _QWORD v104[3];
  uint64_t v105;
  _UNKNOWN **v106;
  _QWORD v107[3];
  uint64_t v108;
  _UNKNOWN **v109;
  _QWORD v110[3];
  uint64_t v111;
  _UNKNOWN **v112;

  v78 = a1;
  v79 = a2;
  v77 = a12;
  v75 = a11;
  v74 = a10;
  v76 = *a13;
  v111 = type metadata accessor for DailyForecastComponentViewModelFactory();
  v112 = &off_100B6CE30;
  v110[0] = a3;
  v108 = type metadata accessor for FeelsLikeComponentViewModelFactory();
  v109 = &off_100B95C58;
  v107[0] = a4;
  v105 = type metadata accessor for HourlyForecastComponentViewModelFactory();
  v106 = &off_100B750B0;
  v104[0] = a5;
  v102 = type metadata accessor for ListViewModelFactory(0);
  v103 = &off_100B75ED8;
  v101[0] = a6;
  v99 = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  v100 = &off_100B86328;
  v98[0] = a7;
  v96 = type metadata accessor for UVIndexComponentViewModelFactory();
  v97 = &off_100B8B688;
  v95[0] = a8;
  v93 = type metadata accessor for VisibilityComponentViewModelFactory();
  v94 = &off_100B884A0;
  v92[0] = a9;
  v90 = type metadata accessor for PressureComponentViewModelFactory();
  v91 = &off_100B9B118;
  v89[0] = a10;
  v87 = type metadata accessor for WindComponentViewModelFactory();
  v88 = &off_100B82B48;
  v86[0] = a11;
  v84 = type metadata accessor for WeatherConditionBackgroundModelInputFactory(0);
  v85 = &off_100B95398;
  v83[0] = a12;
  v81 = v76;
  v82 = &off_100B91A08;
  v80[0] = a13;
  v19 = type metadata accessor for WeatherDataPreprocessor();
  v77 = (_QWORD *)swift_allocObject(v19, 472, 7);
  v20 = sub_100068EB4((uint64_t)v110, v111);
  v21 = __chkstk_darwin(v20);
  v76 = (uint64_t *)((char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v23 + 16))(v21);
  v24 = sub_100068EB4((uint64_t)v107, v108);
  v25 = __chkstk_darwin(v24);
  v75 = (uint64_t *)((char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v27 + 16))(v25);
  v28 = sub_100068EB4((uint64_t)v104, v105);
  v29 = __chkstk_darwin(v28);
  v74 = (uint64_t *)((char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v31 + 16))(v29);
  v32 = sub_100068EB4((uint64_t)v101, v102);
  v33 = __chkstk_darwin(v32);
  v35 = (uint64_t *)((char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v36 + 16))(v35, v33);
  v37 = sub_100068EB4((uint64_t)v98, v99);
  v38 = __chkstk_darwin(v37);
  v40 = (uint64_t *)((char *)&v74 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v41 + 16))(v40, v38);
  v42 = sub_100068EB4((uint64_t)v95, v96);
  v43 = __chkstk_darwin(v42);
  v45 = (uint64_t *)((char *)&v74 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v46 + 16))(v45, v43);
  v47 = sub_100068EB4((uint64_t)v92, v93);
  v48 = __chkstk_darwin(v47);
  v50 = (uint64_t *)((char *)&v74 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v51 + 16))(v50, v48);
  v52 = sub_100068EB4((uint64_t)v89, v90);
  v53 = __chkstk_darwin(v52);
  v55 = (uint64_t *)((char *)&v74 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v56 + 16))(v55, v53);
  v57 = sub_100068EB4((uint64_t)v86, v87);
  v58 = __chkstk_darwin(v57);
  v60 = (uint64_t *)((char *)&v74 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v61 + 16))(v60, v58);
  v62 = sub_100068EB4((uint64_t)v83, v84);
  v63 = __chkstk_darwin(v62);
  v65 = (uint64_t *)((char *)&v74 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v66 + 16))(v65, v63);
  v67 = sub_100068EB4((uint64_t)v80, (uint64_t)v81);
  v68 = __chkstk_darwin(v67);
  v70 = (uint64_t *)((char *)&v74 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v71 + 16))(v70, v68);
  v72 = sub_100152280(v78, v79, *v76, *v75, *v74, *v35, *v40, *v45, *v50, *v55, *v60, *v65, *v70, v77);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v83);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v86);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v89);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v92);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v95);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v98);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v101);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v104);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v107);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v110);
  return v72;
}

void sub_10001911C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v8.n128_f64[0] = sub_1000C4874(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  sub_1000CCC38(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v8);
  sub_1000BBCDC();
}

double sub_10001913C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  sub_10001918C();
  EnvironmentValues.subscript.getter(&type metadata for SceneMetricsEnvironmentKey, &type metadata for SceneMetricsEnvironmentKey);
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

unint64_t sub_10001918C()
{
  unint64_t result;

  result = qword_100BD31E8;
  if (!qword_100BD31E8)
  {
    result = swift_getWitnessTable(&unk_100990DFC, &type metadata for SceneMetricsEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_100BD31E8);
  }
  return result;
}

void sub_1000191C8()
{
  uint64_t v0;

  v0 = sub_1001173E4();
  sub_1000C0E60(v0);
  sub_10004A298();
}

uint64_t sub_1000191E4()
{
  unsigned __int8 v1;

  sub_10001921C();
  EnvironmentValues.subscript.getter(&type metadata for VerticalSizingBehaviorKey, &type metadata for VerticalSizingBehaviorKey);
  return v1;
}

unint64_t sub_10001921C()
{
  unint64_t result;

  result = qword_100BD86B8;
  if (!qword_100BD86B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VerticalSizingBehaviorKey, &type metadata for VerticalSizingBehaviorKey);
    atomic_store(result, (unint64_t *)&qword_100BD86B8);
  }
  return result;
}

uint64_t sub_100019258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCD680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1000192A0(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v27[3];
  ValueMetadata *v28;
  _UNKNOWN **v29;
  _QWORD v30[3];
  uint64_t v31;
  _UNKNOWN **v32;
  _QWORD v33[5];

  v6 = type metadata accessor for LocationViewDescriptor();
  v33[3] = v6;
  v33[4] = &off_100B978D8;
  v33[0] = a1;
  v7 = type metadata accessor for LocationViewComponentFactory();
  v31 = v7;
  v32 = &off_100B95518;
  v30[0] = a2;
  v28 = &type metadata for MapOverlayKindProvider;
  v29 = &off_100B75C88;
  v27[0] = swift_allocObject(&unk_100B7DEB8, 96, 7);
  memcpy((void *)(v27[0] + 16), a3, 0x50uLL);
  v8 = type metadata accessor for StandardLocationViewConfigurationFactory();
  v9 = (_QWORD *)swift_allocObject(v8, 136, 7);
  v10 = sub_100068EB4((uint64_t)v33, v6);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v27[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  v14 = sub_100068EB4((uint64_t)v30, v31);
  __chkstk_darwin(v14);
  v16 = (_QWORD *)((char *)&v27[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  v18 = sub_100068EB4((uint64_t)v27, (uint64_t)v28);
  __chkstk_darwin(v18);
  v20 = (char *)&v27[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  v22 = *v12;
  v23 = *v16;
  v9[5] = v6;
  v9[6] = &off_100B978D8;
  v9[2] = v22;
  v9[10] = v7;
  v9[11] = &off_100B95518;
  v9[7] = v23;
  v9[15] = &type metadata for MapOverlayKindProvider;
  v9[16] = &off_100B75C88;
  v24 = swift_allocObject(&unk_100B7DEB8, 96, 7);
  v9[12] = v24;
  memcpy((void *)(v24 + 16), v20, 0x50uLL);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
  return v9;
}

void sub_1000194E4()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  objc_msgSend(v1, "beginGeneratingDeviceOrientationNotifications");

  sub_100054BD0();
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "pushOrientationData", UIDeviceOrientationDidChangeNotification, 0);

}

double sub_10001958C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v2 = v1;
  v28 = a1;
  v3 = sub_1000BA294(&qword_100BC3068);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BF76A0);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BE1380);
  sub_10003D2DC(&qword_100BF76A8, &qword_100BE1380);
  v31 = ObservableObject<>.objectWillChange.getter(v13);
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)(*(double *)(v1 + 56));
  v30 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v14 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v14);
  v15 = type metadata accessor for ObservableObjectPublisher(0);
  v16 = sub_1000A0794(0, (unint64_t *)&qword_100BC3088, NSRunLoop_ptr);
  v17 = sub_1001203C8();
  Publisher.debounce<A>(for:scheduler:options:)(v9, &v30, v5, v15, v16, &protocol witness table for ObservableObjectPublisher, v17, v18);
  sub_100021A14((uint64_t)v5, &qword_100BC3068);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v31);
  v19 = swift_allocObject(&unk_100B84760, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = swift_allocObject(&unk_100B84788, 32, 7);
  *(_QWORD *)(v20 + 16) = v28;
  *(_QWORD *)(v20 + 24) = v19;
  sub_10003D2DC(&qword_100BF76B0, &qword_100BF76A0);
  v22 = v21;
  swift_retain();
  v23 = swift_retain();
  v24 = Publisher<>.sink(receiveValue:)(sub_100614AF4, v20, v10, v22, v23);
  v25 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v12, v10, v25);
  swift_release(v19);
  v26 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v24;
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

double sub_100019860(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;

  v1 = ProxyContainer.public.getter(a1);
  v2 = sub_1000BA294(&qword_100BD0978);
  v5 = sub_1000BA3CC(v2, v3, v4, (uint64_t)sub_100292C60);
  swift_release(v5);
  v6 = swift_release(v1);
  v7 = ProxyContainer.public.getter(v6);
  v8 = sub_1000BA294(&qword_100BD2140);
  v11 = sub_1000BA3CC(v8, v9, v10, (uint64_t)sub_100133BE0);
  swift_release(v11);
  v12 = swift_release(v7);
  v13 = ProxyContainer.private.getter(v12);
  RegistrationContainer.lazy(block:)(sub_100292E70, 0);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1000198FC(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1000E775C();
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100099864();
  v6 = type metadata accessor for MapsConfiguration(0);
  v23 = *(_QWORD *)(v6 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100094EC4();
  v8 = type metadata accessor for AppConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Settings.Maps.overrides.getter(v10);
  v13 = sub_1000C2224();
  swift_release(v1);
  if ((v13 & 1) != 0)
  {
    sub_1000EAFD4();
    v14 = sub_1000C1AD8();
    type metadata accessor for Settings.Maps.Overrides(0);
    v15 = sub_1000D0A00();
    SettingReader.read<A>(_:)(v2);
    swift_release(v14);
    swift_release(v15);
  }
  else
  {
    v22 = v6;
    v16 = a1;
    v17 = v1[3];
    v18 = v1[4];
    sub_1000DB418(v1, v17);
    v19 = v18;
    a1 = v16;
    v20 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v17, v19);
    AppConfiguration.maps.getter(v20);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    MapsConfiguration.defaultOverlayKind.getter(v21);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v3, v22);
  }
  sub_100159EF4((uint64_t)v2, a1);
  sub_100098640();
}

uint64_t initializeWithCopy for WeatherConditionBackgroundBindingModifierWithVFXBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v11;
  v5 = a2 + 32;
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain(v4);
  swift_unknownObjectRetain(v11);
  v8(a1 + 32, v5, v7);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t type metadata accessor for WireframeLevelInterestManager()
{
  return objc_opt_self(_TtC7Weather29WireframeLevelInterestManager);
}

uint64_t sub_100019B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t *v17;

  v9 = a4 & 1;
  v10 = type metadata accessor for WeatherVFXConditionBackground(0);
  sub_10007A100((uint64_t)&qword_100BD0870);
  v12 = v11;
  v13 = StateObject.wrappedValue.getter(a2, a3, v9, v10, v11);
  v14 = static ObservableObject.environmentStore.getter(v10, v12);
  v15 = sub_1000BA294(&qword_100BEE278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  result = sub_1000BA294(&qword_100BEE280);
  v17 = (uint64_t *)(a5 + *(int *)(result + 36));
  *v17 = v14;
  v17[1] = v13;
  return result;
}

_QWORD *sub_100019C08@<X0>(_QWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  int *v13;
  void *v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v21;

  v7 = a2 & 1;
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v21._countAndFlagsBits = 0xD00000000000003ALL;
  v21._object = (void *)0x80000001009FE770;
  v9._countAndFlagsBits = 0x7365676172657641;
  v9._object = (void *)0xE800000000000000;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v21);

  *(Swift::String *)a4 = v11;
  *(_QWORD *)(a4 + 16) = 0xD000000000000019;
  *(_QWORD *)(a4 + 24) = 0x80000001009FE7B0;
  *(_BYTE *)(a4 + 32) = 0;
  v12 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  swift_storeEnumTagMultiPayload(a4, v12, 0);
  v13 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = (void *)(a4 + v13[5]);
  memcpy(v14, a1, 0xD0uLL);
  v15 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v14, v15, 15);
  v16 = (_BYTE *)(a4 + v13[7]);
  v17 = &v16[*(int *)(sub_1000BA294(&qword_100BC5FF0) + 48)];
  *v16 = v7;
  v18 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a3, v18);
  v19 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v16, v19, 4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
  *(_WORD *)(a4 + v13[6]) = 256;
  return sub_100025C0C(a1);
}

uint64_t sub_100019DC0(void (*a1)(double *__return_ptr), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  double v29;
  uint64_t v30;

  v6 = v4;
  v10 = type metadata accessor for WidgetConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppConfigurationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100099234();
  a1(&v29);
  v15 = v29;
  sub_100080C0C(*(_QWORD *)&v29 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v5, type metadata accessor for AppConfigurationState);
  v16 = swift_release(*(_QWORD *)&v15);
  AppConfiguration.widget.getter(v16);
  type metadata accessor for AppConfiguration(0);
  sub_1000C092C();
  v18 = v17(v5);
  v19 = WidgetConfiguration.timelineReloadDebouncingInterval.getter(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_100BC2488 != -1)
    swift_once(&qword_100BC2488, sub_1001597A0);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_1000AECD4(v20, (uint64_t)qword_100CAF180);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v24 = 134217984;
    v29 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Debounced widget timeline reload requests will debounce in intervals of %fs", v24, 0xCu);
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = sub_1000BA294(&qword_100BDED68);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = Debounce.init(delay:block:)(sub_1003DC300, 0, v19);
  swift_release(a4);
  swift_release(a2);
  *(_QWORD *)(v6 + 16) = v26;
  return v6;
}

double sub_10001A004@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void (*a5)(__n128)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 v18;
  double result;

  v15 = a3 & 1;
  v16 = (uint64_t *)(a9 + *(int *)(type metadata accessor for WireframeScrollInterestView(0, a7, a8, a4) + 48));
  *v16 = sub_10012C590(0);
  v16[1] = v17;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v15;
  *(_QWORD *)(a9 + 24) = a4;
  v18 = swift_retain();
  a5(v18);
  swift_release(a4);
  *(_QWORD *)&result = swift_release(a6).n128_u64[0];
  return result;
}

double sub_10001A0B0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100BCC978);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_1002240B0);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BCC980);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_10013DFA4);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v13 = sub_1000BA3CC((uint64_t)&type metadata for MoonDetailDayRangeProvider, v11, v12, (uint64_t)LocationSearchEntityFromStringResolver.init());
  swift_release(v13);
  sub_10009880C();
  v15 = ProxyContainer.private.getter(v14);
  RegistrationContainer.lazy(block:)(sub_100224288, 0);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_10001A16C()
{
  sub_100012124();
}

void sub_10001A188(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD v26[2];

  v4 = sub_1000BA294(&qword_100BFBCE8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v26 - v8;
  v10 = a1[3];
  if (v10)
  {
    v11 = a1[2];
    swift_bridgeObjectRetain(a1[3]);
    v12 = Image.init(systemName:)(v11, v10);
    v26[0] = v12;
    View.accessibilityHidden(_:)(1, &type metadata for Image, &protocol witness table for Image);
    swift_release(v12);
    v13 = sub_1000BA294(&qword_100BFBCF0);
    v14 = (uint64_t)v9;
    v15 = 0;
  }
  else
  {
    v13 = sub_1000BA294(&qword_100BFBCF0);
    v14 = (uint64_t)v9;
    v15 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v14, v15, 1, v13);
  v16 = a1[1];
  v26[0] = *a1;
  v26[1] = v16;
  v17 = sub_100114EF8();
  swift_bridgeObjectRetain(v16);
  v18 = Text.init<A>(_:)(v26, &type metadata for String, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  sub_100037794((uint64_t)v9, (uint64_t)v7, &qword_100BFBCE8);
  sub_100037794((uint64_t)v7, a2, &qword_100BFBCE8);
  v25 = a2 + *(int *)(sub_1000BA294(&qword_100BFBCF8) + 48);
  *(_QWORD *)v25 = v18;
  *(_QWORD *)(v25 + 8) = v20;
  *(_BYTE *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = v22;
  sub_1000D55D4(v18, v20, v24);
  swift_bridgeObjectRetain(v22);
  sub_100021AA4((uint64_t)v9, &qword_100BFBCE8);
  sub_1000D31B4(v18, v20, v24);
  swift_bridgeObjectRelease(v22);
  sub_100021AA4((uint64_t)v7, &qword_100BFBCE8);
}

uint64_t sub_10001A374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v23);
  return a1;
}

uint64_t assignWithCopy for LocationViewCollisionOptions.PublishedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_10001A47C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for LocationViewerViewModel(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1000BF64C();
  LODWORD(v0) = v2[*(int *)(v0 + 52)];
  sub_1000BF3B4();
  if ((_DWORD)v0 != 1)
    return static Color.clear.getter(v3);
  v4 = static Color.black.getter(v3);
  v5 = Color.opacity(_:)(0.07);
  swift_release(v4);
  return v5;
}

uint64_t sub_10001A548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v1 = a1 + 16;
  if (qword_100BC2480 != -1)
    swift_once(&qword_100BC2480, sub_1001597E8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000AECD4(v2, (uint64_t)qword_100CAF168);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Fetching weather data for non-priority locations", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v14, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(Strong + 16);
    swift_retain();
    swift_release(v8);
    sub_100119A40();
    swift_release(v9);
  }
  swift_beginAccess(v1, v13, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v11 = result;
    v12 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release(v11);
    sub_100025AF4();
    return swift_release(v12);
  }
  return result;
}

void sub_10001A720(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[16];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  v59 = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v56 = v5;
  v53 = type metadata accessor for ScrollIndicatorVisibility(0);
  v51 = *(_QWORD *)(v53 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = sub_1000BA294(&qword_100C05830);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v50 - v15;
  v17 = sub_1000BA294(&qword_100C05838);
  v52 = *(_QWORD *)(v17 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  v22 = sub_1000BA294(&qword_100C05840);
  v54 = *(_QWORD *)(v22 - 8);
  v55 = v22;
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_100098728();
  v26 = v25 - v24;
  sub_1000BA294(&qword_100C05848);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v50 = v28;
  v29 = static Axis.Set.horizontal.getter();
  v61 = v2;
  v30 = sub_1000BA294(&qword_100C05850);
  v31 = sub_10078F344();
  ScrollView.init(_:showsIndicators:content:)(v29, 1, sub_10012D970, v60, v30, v31);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v14, v10);
  ScrollView.scrollsContentToBeginningInRightToLeft.setter(1, v10);
  v32 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v33 = v32(v14, v10);
  v34 = static ScrollIndicatorVisibility.never.getter(v33);
  v35 = static Axis.Set.vertical.getter(v34);
  v36 = static Axis.Set.horizontal.getter();
  v37 = Axis.Set.init(rawValue:)(0);
  v38 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v38 & v35) != v35)
    v37 = Axis.Set.init(rawValue:)(v37 | v35);
  v39 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v39 & v36) != v36)
    v37 = Axis.Set.init(rawValue:)(v37 | v36);
  sub_10003D2DC(&qword_100C05870, &qword_100C05830);
  v41 = v40;
  View.scrollIndicators(_:axes:)(v9, v37, v10, v40);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v9, v53);
  v42 = v32(v16, v10);
  v43 = v56;
  v44 = static AccessibilityChildBehavior.contain.getter(v42);
  v62 = v10;
  v63 = v41;
  v45 = sub_1000C5E30(v44, (uint64_t)&opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>);
  View.accessibilityElement(children:)(v43, v17, v45);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v43, v58);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v21, v17);
  v62 = v17;
  v63 = v45;
  v47 = sub_1000C5E30(v46, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v48 = v50;
  v49 = v55;
  View.accessibilityRespondsToUserInteraction(_:)(1, v55, v47);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v26, v49);
  sub_1000F111C(v48, v59, &qword_100C05848);
}

void sub_10001AA9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  sub_1000986AC();
  v2 = v1;
  v3 = v0;
  if ((v0 & 0xC000000000000001) != 0)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = __CocoaSet.startIndex.getter(v0);
    v6 = v5;
    v7 = 1;
  }
  else
  {
    v4 = sub_1002F9444(v0);
    v6 = v8;
    v7 = v9 & 1;
  }
  v10 = sub_100120CC4(v3);
  v12 = v11;
  v14 = v13 & 1;
  v15 = sub_100120EF0(v4, v6, v7, v10, v11, v13 & 1);
  sub_10016396C(v10, v12, v14);
  if ((v15 & 1) == 0)
    sub_100120A38(v4, v6, v7, v3, v2);
  sub_1000D8F18();
  sub_100098640();
}

void sub_10001AB7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  int v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char v87[32];

  v74 = *v1;
  v3 = type metadata accessor for NotificationSubscription.Kind(0);
  v78 = *(_QWORD *)(v3 - 8);
  v79 = v3;
  __chkstk_darwin(v3);
  v77 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v5);
  v73 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NotificationSubscription.Location(0);
  v76 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v75 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BEB958);
  __chkstk_darwin(v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for NotificationSubscription(0);
  v71 = *(_QWORD *)(v80 - 8);
  v12 = __chkstk_darwin(v80);
  v70 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v69 - v14;
  v82 = type metadata accessor for Location(0);
  v84 = *(_QWORD *)(v82 - 8);
  v16 = __chkstk_darwin(v82);
  v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v85 = (char *)&v69 - v18;
  v19 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v19);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CurrentLocation(0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications) == 1)
  {
    v81 = (char *)&v69 - v29;
    v30 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v87, 0, 0);
    v31 = LocationAuthorizationState.rawValue.getter(*(_BYTE *)(v30 + 1));
    v33 = v32;
    if (v31 == 0xD000000000000010 && v32 == 0x80000001009EFAB0)
    {
      swift_bridgeObjectRelease(0x80000001009EFAB0);
      v34 = (uint64_t)v81;
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, 0xD000000000000010, 0x80000001009EFAB0, 0);
      swift_bridgeObjectRelease(v33);
      v34 = (uint64_t)v81;
      if ((v35 & 1) == 0)
        return;
    }
    v69 = v7;
    sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v24, type metadata accessor for LocationsState);
    sub_10003773C((uint64_t)v24, (uint64_t)v21, (uint64_t *)&unk_100C0D170);
    sub_1000215BC((uint64_t)v24, type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v25) == 1)
    {
      sub_100021A14((uint64_t)v21, (uint64_t *)&unk_100C0D170);
      return;
    }
    sub_10007C77C((uint64_t)v21, v34, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    sub_100095B78(v34, (uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    if (swift_getEnumCaseMultiPayload(v28, v25))
    {
      sub_1000215BC(v34, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v36 = (uint64_t)v28;
LABEL_24:
      sub_1000215BC(v36, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      return;
    }
    v37 = v84;
    v38 = v82;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v85, v28, v82);
    v39 = (_QWORD *)(v83 + 16);
    v40 = sub_1000DB418((_QWORD *)(v83 + 16), *(_QWORD *)(v83 + 40));
    v41 = Location.id.getter(v40);
    v43 = v42;
    dispatch thunk of NotificationSubscriptionManagerType.subscription(with:)(v41);
    swift_bridgeObjectRelease(v43);
    v44 = v80;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v80) == 1)
    {
      sub_100021A14((uint64_t)v11, &qword_100BEB958);
      v45 = v81;
LABEL_12:
      v46 = v72;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v72, v85, v38);
      v47 = v73;
      _s7Weather24LocationCompositionStateOwst_0(v73, 1, 1, v38);
      v48 = (uint64_t)v75;
      NotificationSubscription.Location.init(location:locationOverride:)(v46, v47);
      if (qword_100BC1F20 != -1)
        swift_once(&qword_100BC1F20, sub_100267140);
      v50 = qword_100CAE5D0;
      sub_10005329C(&qword_100BEB960, v49, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsStoreObserver, (uint64_t)&unk_1009A9ECC);
      v51 = v83;
      v53 = Configurable.setting<A>(_:)(v50, v74, v52);
      if (v86 == 1
        && (v54 = *(_QWORD *)(v51 + 40),
            v55 = *(_QWORD *)(v51 + 48),
            sub_1000DB418(v39, v54),
            v53 = dispatch thunk of NotificationSubscriptionManagerType.resubscribedAfterDeviceRestoreOnce()(v54, v55),
            (v53 & 1) == 0))
      {
        v66 = *(_QWORD *)(v51 + 40);
        v67 = *(_QWORD *)(v51 + 48);
        sub_1000DB418(v39, v66);
        v68 = dispatch thunk of NotificationSubscriptionManagerType.setResubscribedAfterDeviceRestoreOnce()(v66, v67);
        v56 = (uint64_t)v77;
        static NotificationSubscription.Kind.all.getter(v68);
      }
      else
      {
        v56 = (uint64_t)v77;
        static NotificationSubscription.Kind.precipitation.getter(v53);
      }
      sub_100502230(v48, v56, (uint64_t (*)(_QWORD))&type metadata accessor for NotificationSubscription.Location, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.subscribe(to:for:), (uint64_t)&NotificationSubscription.Location.id.getter, (uint64_t)"Failed to subscribe to notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v56, v79);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v48, v69);
      goto LABEL_23;
    }
    v57 = v39;
    v58 = v71;
    v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v71 + 32))(v15, v11, v44);
    v60 = NotificationSubscription.precipitation.getter(v59);
    v61 = v70;
    v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v58 + 16))(v70, v15, v44);
    v45 = v81;
    if (v60 == 2)
    {
      v63 = NotificationSubscription.severe.getter(v62);
      v64 = *(void (**)(char *, uint64_t))(v58 + 8);
      v64(v61, v44);
      v64(v15, v44);
      v39 = v57;
      if (v63 == 2)
        goto LABEL_12;
    }
    else
    {
      v65 = *(void (**)(char *, uint64_t))(v58 + 8);
      v65(v61, v44);
      v65(v15, v44);
    }
LABEL_23:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v85, v38);
    v36 = (uint64_t)v45;
    goto LABEL_24;
  }
}

double sub_10001B504()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  double result;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *v0;
  v2 = sub_1000BA294(&qword_100BD6670);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  __chkstk_darwin(v2);
  v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DebugData(0);
  v37 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for CharacterSet(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Settings.WeatherAnalytics.Debugging.sessionName.getter(v12);
  sub_10000F1C8(&qword_100BD6678, type metadata accessor for SessionEventsAndDataCoordinator);
  Configurable.setting<A>(_:)(v15, v1, v16);
  v17 = swift_release(v15);
  v18 = v41;
  static CharacterSet.whitespacesAndNewlines.getter(v17);
  v19 = sub_100114EF8();
  v20 = StringProtocol.trimmingCharacters(in:)(v14, &type metadata for String, v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v23 = swift_bridgeObjectRelease(v18);
  v24 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v24 = v20 & 0xFFFFFFFFFFFFLL;
  if (v24)
  {
    DebugData.init(name:)(v20, v22, v23);
    v25 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v7, v9, v4);
    sub_10000F1C8(&qword_100BD6680, (uint64_t (*)(uint64_t))&type metadata accessor for DebugData);
    v27 = v26;
    v28 = v38;
    SessionData.init(key:data:)(0x7461446775626564, 0xE900000000000061, v7, v4, v26);
    v29 = sub_1000BA294(&qword_100BCDC68);
    v30 = type metadata accessor for DataEventTrait(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned __int8 *)(v31 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = swift_allocObject(v29, v33 + *(_QWORD *)(v31 + 72), v32 | 7);
    *(_OWORD *)(v34 + 16) = xmmword_10097CA50;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v34 + v33, enum case for DataEventTrait.unique(_:), v30);
    SessionManager.push<A>(_:traits:file:line:)(v28, v34, 0xD000000000000065, 0x80000001009FA420, 389, v4, v27);
    v35 = swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v28, v40, v35);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v4);
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  return result;
}

void sub_10001B80C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  const void *v14;
  size_t v15;
  uint64_t v16;

  sub_1000D1950();
  if ((v5 & 1) != 0)
  {
    sub_1000DD15C();
    if (v6 != v7)
    {
      sub_1000C572C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  sub_1000C179C();
  if (v4)
  {
    v13 = sub_1000DBBEC(v8, v9, v10, v11, v12);
    v14 = (const void *)sub_100098740(v13, 24 * v4 + 32);
    v15 = j__malloc_size(v14);
    sub_1000C22C4((uint64_t)(v15 - 32) / 24);
  }
  v16 = sub_1000FC4F8();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  sub_10009925C();
  sub_10009D300();
}

void sub_10001B8B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  void (*v49)(_OWORD *, _QWORD);
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD v59[2];
  _QWORD v60[2];

  v56 = sub_1000BA294(&qword_100BDAE28);
  sub_1000B42B0();
  v8 = __chkstk_darwin(v7);
  v55 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v54 = (uint64_t)&v51 - v10;
  sub_1000BA294(&qword_100BC3340);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100098728();
  v19 = v18 - v17;
  sub_1000BA294(&qword_100BDAE20);
  sub_1000B42B0();
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v58 = (uint64_t)&v51 - v24;
  type metadata accessor for AttributeContainer(0);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100098728();
  v28 = v27 - v26;
  v29 = swift_bridgeObjectRetain(a2);
  AttributeContainer.init()(v29);
  v57 = a3;
  AttributedString.init(_:attributes:)(a1, a2, v28);
  v59[0] = *(_OWORD *)(v3 + 80);
  v60[0] = 32;
  v60[1] = 0xE100000000000000;
  v30 = sub_100114EF8();
  v31 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v60, &type metadata for String, &type metadata for String, v30, v30);
  v32 = v31;
  if (v31[2])
  {
    v34 = v31[4];
    v33 = v31[5];
    swift_bridgeObjectRetain(v33);
    v35 = swift_bridgeObjectRelease(v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 16))(v19, v57, v15, v35);
    v53 = v34;
    *(_QWORD *)&v59[0] = v34;
    *((_QWORD *)&v59[0] + 1) = v33;
    v36 = type metadata accessor for Locale(0);
    _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v36);
    v37 = sub_10015BD00();
    v38 = v58;
    v52 = v37;
    AttributedStringProtocol.range<A>(of:options:locale:)(v59, 0, v14, v15, &type metadata for String);
    sub_100021A68(v14, &qword_100BC3340);
    sub_1000CCF68();
    sub_100120968(v38, (uint64_t)v23, &qword_100BDAE20);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v56) == 1)
    {
      sub_1000C26A8(v58);
      swift_bridgeObjectRelease(v33);
      v39 = (uint64_t)v23;
    }
    else
    {
      v40 = v54;
      sub_1001208DC((uint64_t)v23, v54);
      String.lowercased()();
      swift_bridgeObjectRelease(v33);
      AttributeContainer.init()(v41);
      v42 = sub_1000BCF4C();
      AttributedString.init(_:attributes:)(v42, v43, v28);
      v44 = sub_100120924();
      v45 = v56;
      AttributedString.replaceSubrange<A, B>(_:with:)(v40, v19, v56, v15, v44, v52);
      sub_1000CCF68();
      v46 = v55;
      sub_100120968(v40, v55, &qword_100BDAE28);
      KeyPath = swift_getKeyPath(&unk_1009B21C8);
      *(&v51 - 2) = __chkstk_darwin(KeyPath);
      v48 = swift_getKeyPath(&unk_1009B21F8);
      LOBYTE(v60[0]) = 1;
      v49 = (void (*)(_OWORD *, _QWORD))AttributedString.subscript.modify(v59, v46, v45, v44);
      v50 = sub_10015BD40();
      AttributedSubstring.subscript.setter(v60, v48, v50);
      v49(v59, 0);
      sub_1000C26A8(v46);
      sub_1000C26A8(v40);
      v39 = v58;
    }
    sub_100021A68(v39, &qword_100BDAE20);
  }
  else
  {
    swift_bridgeObjectRelease(v31);
  }
}

double sub_10001BCBC@<D0>(char *a1@<X2>, char *a2@<X3>, uint64_t a3@<X4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  int *v36;
  uint64_t v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;

  v48 = a4;
  v41 = a3;
  v42 = a2;
  v44 = a1;
  v6 = type metadata accessor for WeatherAlert.Prominence(0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BCCC48);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BCB130);
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1000BA294(&qword_100BCB9F8);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CurrentWeather(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter(v24);
  v25 = type metadata accessor for PreprocessedWeatherData(0);
  sub_1000F9DDC((uint64_t)&v44[*(int *)(v25 + 28)], (uint64_t)v19, type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  v27 = WeatherDataModel.hourlyForecast.getter(v26);
  v44 = v14;
  v28 = WeatherDataModel.dailyForecast.getter(v27);
  WeatherDataModel.weatherChanges.getter(v28);
  if (*((_QWORD *)v42 + 2))
  {
    v29 = 0;
  }
  else
  {
    v42 = v11;
    v30 = v39;
    v31 = v40;
    v32.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v39 + 104))(v8, enum case for WeatherAlert.Prominence.high(_:), v40);
    v33 = Array<A>.alerts(prominence:)(v8, v41, v32);
    v34 = *(void (**)(char *, uint64_t))(v30 + 8);
    v11 = v42;
    v34(v8, v31);
    v35 = *(_QWORD *)(v33 + 16);
    swift_bridgeObjectRelease();
    v29 = v35 == 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a5, v23, v20);
  v36 = (int *)type metadata accessor for HourlyForecastComponent(0);
  sub_10007C75C((uint64_t)v19, a5 + v36[5], type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(a5 + v36[6], v16, v45);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(a5 + v36[7], v44, v47);
  sub_10009E8CC((uint64_t)v11, a5 + v36[8], &qword_100BCCC48);
  *(_BYTE *)(a5 + v36[9]) = v29;
  *(_BYTE *)(a5 + v36[10]) = v48 & 1;
  v37 = type metadata accessor for LocationViewComponent(0);
  *(_QWORD *)&result = swift_storeEnumTagMultiPayload(a5, v37, 3).n128_u64[0];
  return result;
}

void sub_10001BFE8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  double MinX;
  double MinY;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  __n128 v20;
  _BYTE v21[16];
  CGRect v22;
  CGRect v23;

  v8 = sub_1000BA294(&qword_100BC42D0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for LayoutSubview(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002F9C8((uint64_t)v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100021A14((uint64_t)v10, &qword_100BC42D0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    MinX = CGRectGetMinX(v22);
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    MinY = CGRectGetMinY(v23);
    v18.n128_u64[0] = static UnitPoint.topLeading.getter(v17);
    v20.n128_u64[0] = v19;
    v21[8] = 0;
    v21[0] = 0;
    LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&a3, 0, *(_QWORD *)&a4, 0, MinX, MinY, v18, v20);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_10001C170()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath(&unk_1009BE110);
  sub_1000D91EC();
  sub_100086DA4(&qword_100BFC628, type metadata accessor for TipCoordinator, (uint64_t)&unk_1009BE0A0);
  sub_1000DDE00(v0, v1);
  sub_100089020();
  sub_100099960();
}

uint64_t initializeWithCopy for LocationTracker(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  uint64_t v9;
  __int128 v10;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  v8(a1 + 8, v5, v7);
  *(_QWORD *)(a1 + 48) = a2[6];
  v9 = a2[9];
  v10 = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 72) = v9;
  swift_retain(v10);
  swift_retain(v9);
  return a1;
}

uint64_t sub_10001C268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = sub_1000992C4();
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_10009E540();
  v16 = Location.kind.getter(v15);
  if ((v16 & 1) != 0)
  {
    v29 = Location.coordinate.getter(v16);
    v31 = v30;
    Location.preciseName.getter();
    sub_1000DB938();
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v1, v13);
    if (!v6)
    {
      Location.name.getter(v32);
      sub_1000DB938();
    }
    v33 = (void *)objc_opt_self(_MKURLBuilder);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v13);
    v34 = sub_100007464(v29, v31, (uint64_t)v9, (uint64_t)v6, v33);
    if (v34)
    {
      v35 = v34;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

      v36 = 0;
    }
    else
    {
      v36 = 1;
    }
    v47 = sub_10009896C();
    sub_10009926C((uint64_t)v12, v36, v48, v47);
  }
  else
  {
    v17 = Location.searchTitle.getter();
    if (v18)
    {
      v19 = v18;
      v20 = sub_1003796BC(v1, v17, v18);
      swift_bridgeObjectRelease(v19);
      v21 = objc_opt_self(_MKURLBuilder);
      v22 = Location.coordinate.getter(v21);
      v24 = sub_1000DCE24(v20, v22, v23, 0.01);
      if (v24)
      {
        v25 = v24;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

        v27 = sub_10009896C();
        v28 = 0;
      }
      else
      {
        v27 = type metadata accessor for URL(0);
        v28 = 1;
      }
      sub_10009926C((uint64_t)v9, v28, v26, v27);
      v12 = v9;
    }
    else
    {
      v37 = objc_opt_self(_MKURLBuilder);
      Location.name.getter(v37);
      v39 = v38;
      v40 = Location.coordinate.getter(v38);
      v42 = sub_1000DCE24(v39, v40, v41, 0.01);
      if (v42)
      {
        v43 = v42;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v42);

        v45 = sub_10009896C();
        v46 = 0;
      }
      else
      {
        v45 = type metadata accessor for URL(0);
        v46 = 1;
      }
      sub_10009926C((uint64_t)v6, v46, v44, v45);
      v12 = v6;
    }
  }
  return sub_10015BBC0((uint64_t)v12, a1);
}

void sub_10001C4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1000986AC();
  sub_1000BA294(&qword_100BC3130);
  sub_1000DB964();
  __chkstk_darwin(v3);
  sub_1000DCE64();
  sub_1000B25F0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  if (qword_100BC2038 != -1)
    swift_once(&qword_100BC2038, sub_10014D1E8);
  v5 = sub_1000AECD4(v1, (uint64_t)&unk_100CAE7E0);
  sub_1000992EC(v5, (uint64_t)&v15);
  v6 = sub_10010995C(v2, v5);
  sub_1000C28F8(v6, (uint64_t)sub_100123954);
  sub_1000E7028();
  sub_10011028C();
  if (qword_100BC2040 != -1)
    swift_once(&qword_100BC2040, sub_10014D1B4);
  v7 = sub_1000AECD4(v1, (uint64_t)&unk_100CAE7F8);
  sub_1000992EC(v7, (uint64_t)&v14);
  v8 = sub_10010995C(v2, v7);
  sub_1000C28F8(v8, (uint64_t)sub_100123954);
  v9 = sub_1000E7028();
  sub_10011028C();
  if (qword_100BC2048 != -1)
    swift_once(&qword_100BC2048, sub_10014D1C8);
  v10 = sub_1000AECD4(v1, (uint64_t)&unk_100CAE810);
  sub_1000992EC(v10, (uint64_t)&v13);
  v11 = sub_10010995C(v2, v10);
  sub_1000C28F8(v11, (uint64_t)sub_10012394C);
  v12 = sub_1000E7028();
  sub_10011028C();
  sub_1000CFCBC();
  sub_1000D177C();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v0, v9);
  sub_1000C2464();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v2, v12);
  swift_bridgeObjectRelease();
  sub_1000986C4();
  sub_100098640();
}

uint64_t sub_10001C710@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t active;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t, __n128);
  __n128 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;

  v113 = a2;
  v115 = a3;
  v4 = sub_1000BA294(&qword_100C137E8);
  __chkstk_darwin(v4);
  v104 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for CachedCurrentLocation.EmbeddedLocation(0);
  __chkstk_darwin(v98);
  v99 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v7);
  v108 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v9);
  v102 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Location(0);
  v100 = *(_QWORD *)(v114 - 8);
  v11 = __chkstk_darwin(v114);
  v96 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v97 = (char *)&v94 - v13;
  v105 = type metadata accessor for LocationModel(0);
  v116 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for LocationsState(0);
  v16 = __chkstk_darwin(v101);
  v107 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v109 = (uint64_t)&v94 - v18;
  v19 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v19);
  v103 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for OSSignpostID(0);
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for Location.Identifier(0);
  v106 = *(_QWORD *)(v118 - 8);
  v24 = __chkstk_darwin(v118);
  v26 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v117 = (char *)&v94 - v27;
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  __chkstk_darwin(active);
  v30 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v31);
  v33 = (uint64_t *)((char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = (int *)type metadata accessor for ViewState(0);
  __chkstk_darwin(v34);
  v36 = (char *)&v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = a1;
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v36, v37);
  sub_100095B78((uint64_t)&v36[v34[5]], (uint64_t)v33, type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload(v33, v31) == 1)
  {
    sub_1000215BC((uint64_t)v33, type metadata accessor for ViewState.SecondaryViewState);
LABEL_11:
    v65 = v114;
    v64 = v115;
    sub_1000215BC((uint64_t)v36, type metadata accessor for ViewState);
    v66 = v64;
    v67 = 1;
    v68 = v65;
    return _s7Weather24LocationCompositionStateOwst_0(v66, v67, 1, v68);
  }
  v38 = *v33;
  if (*(_QWORD *)&v36[v34[9] + 8] == 1)
  {
    v39 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v39, "userInterfaceIdiom");

    if ((v36[v34[7]] & 1) == 0)
    {
      swift_release(v38);
      goto LABEL_11;
    }
  }
  sub_1000215BC((uint64_t)v36, type metadata accessor for ViewState);
  sub_100095B78(v38 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v30, type metadata accessor for LocationViewerActiveLocationState);
  v40 = v118;
  v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v118);
  if ((_DWORD)v41 == 1)
  {
    v42 = static os_signpost_type_t.event.getter(v41);
    v43 = v113;
    v44 = v113[13];
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)(v42, &_mh_execute_header, v44, "Weather:locationViewState.activeLocationState.initial", 53, 2, v23);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v23, v111);
    v45 = v107;
    sub_100095B78(v112 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v107, type metadata accessor for LocationsState);
    v46 = v108;
    sub_10003773C(v45, v108, (uint64_t *)&unk_100C0D170);
    sub_1000215BC(v45, type metadata accessor for LocationsState);
    v47 = type metadata accessor for CurrentLocation(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47) == 1)
    {
      sub_100021A14(v46, (uint64_t *)&unk_100C0D170);
      v48 = v102;
      v49 = v114;
      _s7Weather24LocationCompositionStateOwst_0(v102, 1, 1, v114);
      v50 = (uint64_t)v104;
    }
    else
    {
      v48 = v102;
      CurrentLocation.location.getter();
      sub_1000215BC(v46, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v49 = v114;
      v69 = _s7Weather24LocationCompositionStateOwet_0(v48, 1, v114);
      v50 = (uint64_t)v104;
      if (v69 != 1)
      {
        swift_release(v38);
        v83 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 32);
        v88 = v97;
        v83(v97, v48, v49);
        v85 = v115;
        v86 = v115;
        v87 = v88;
        goto LABEL_23;
      }
    }
    sub_100021A14(v48, &qword_100BC35F8);
    v70 = v43 + 8;
    v71 = v43[11];
    v72 = v43[12];
    sub_1000DB418(v70, v71);
    dispatch thunk of CurrentLocationCacheManagerType.readCachedLocation()(v71, v72);
    v73 = type metadata accessor for CachedCurrentLocation(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v50, 1, v73) == 1)
    {
      swift_release(v38);
      sub_100021A14(v50, &qword_100C137E8);
LABEL_27:
      v66 = v115;
      v67 = 1;
      goto LABEL_28;
    }
    v82 = (uint64_t)v99;
    CachedCurrentLocation.embeddedLocation.getter();
    swift_release(v38);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v50, v73);
    if (swift_getEnumCaseMultiPayload(v82, v98) != 1)
    {
      sub_1000215BC(v82, (uint64_t (*)(_QWORD))&type metadata accessor for CachedCurrentLocation.EmbeddedLocation);
      goto LABEL_27;
    }
    v83 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 32);
    v84 = v96;
    v83(v96, v82, v49);
    v85 = v115;
    v86 = v115;
    v87 = v84;
LABEL_23:
    v83((char *)v86, (uint64_t)v87, v49);
    v66 = v85;
    v67 = 0;
LABEL_28:
    v68 = v49;
    return _s7Weather24LocationCompositionStateOwst_0(v66, v67, 1, v68);
  }
  v51 = v106;
  v52 = v117;
  v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v117, v30, v40);
  v54 = static os_signpost_type_t.event.getter(v53);
  v55 = v113[13];
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)(v54, &_mh_execute_header, v55, "Weather:locationViewState.activeLocationState.location", 54, 2, v23);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v23, v111);
  v56 = v109;
  sub_100095B78(v112 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v109, type metadata accessor for LocationsState);
  static CurrentLocation.placeholderIdentifier.getter();
  LOBYTE(v54) = static Location.Identifier.== infix(_:_:)(v52, v26);
  v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v26, v40);
  if ((v54 & 1) != 0)
  {
    v58 = sub_1000BA294(&qword_100BC3488);
    v59 = (uint64_t)v103;
    v60 = (uint64_t)&v103[*(int *)(v58 + 48)];
    v61 = type metadata accessor for CurrentLocation(0);
    swift_storeEnumTagMultiPayload(v59, v61, 3);
    v62 = type metadata accessor for LocationOfInterest(0);
    _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, v62);
    v63 = v105;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v116 + 104))(v59, enum case for LocationModel.current(_:), v105);
    _s7Weather24LocationCompositionStateOwst_0(v59, 0, 1, v63);
  }
  else
  {
    v74 = *(_QWORD *)(v56 + *(int *)(v101 + 24));
    v75 = *(_QWORD *)(v74 + 16);
    v63 = v105;
    v95 = v38;
    if (v75)
    {
      v76 = v74 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
      v77 = *(_QWORD *)(v116 + 72);
      v78 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v116 + 16);
      v79 = swift_bridgeObjectRetain(v74);
      while (1)
      {
        v80 = v78(v15, v76, v63, v79);
        LocationModel.identifier.getter(v80);
        v81 = static Location.Identifier.== infix(_:_:)(v26, v117);
        v57(v26, v118);
        if ((v81 & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v116 + 8))(v15, v63);
        v76 += v77;
        if (!--v75)
          goto LABEL_25;
      }
      v59 = (uint64_t)v103;
      (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v103, v15, v63);
      v89 = v59;
      v90 = 0;
    }
    else
    {
      swift_bridgeObjectRetain(v74);
LABEL_25:
      v59 = (uint64_t)v103;
      v89 = (uint64_t)v103;
      v90 = 1;
    }
    _s7Weather24LocationCompositionStateOwst_0(v89, v90, 1, v63);
    swift_bridgeObjectRelease(v74);
    v38 = v95;
    v56 = v109;
    v40 = v118;
  }
  sub_1000215BC(v56, type metadata accessor for LocationsState);
  v91 = _s7Weather24LocationCompositionStateOwet_0(v59, 1, v63);
  v92 = v115;
  if ((_DWORD)v91 == 1)
  {
    v57(v117, v40);
    swift_release(v38);
    sub_100021A14(v59, &qword_100C0B8D0);
    v66 = v92;
    v67 = 1;
    v68 = v114;
    return _s7Weather24LocationCompositionStateOwst_0(v66, v67, 1, v68);
  }
  LocationModel.location.getter(v91);
  swift_release(v38);
  v57(v117, v40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v59, v63);
}

uint64_t sub_10001D160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = type metadata accessor for WeatherFormatPlaceholder(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BC4E68);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  __chkstk_darwin(v6);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for WeatherCondition(0);
  v8 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CurrentWeather(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BE7C80);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for WeatherMapOverlayKind(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v22 != enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    if (v22 == enum case for WeatherMapOverlayKind.airQuality(_:))
    {
      type metadata accessor for MapComponent(0);
      type metadata accessor for WeatherData(0);
      WeatherDataModel.airQuality.getter(v27);
      v28 = type metadata accessor for AirQuality(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v28) != 1)
      {
        v26 = AirQuality.displayDescription.getter();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v17, v28);
        return v26;
      }
      sub_1004D54FC((uint64_t)v17);
    }
    else
    {
      if (v22 == enum case for WeatherMapOverlayKind.temperature(_:))
      {
        v29 = v12;
        type metadata accessor for MapComponent(0);
        v30 = type metadata accessor for WeatherData(0);
        v31 = WeatherDataModel.currentWeather.getter(v30);
        v32 = v45;
        CurrentWeather.temperature.getter(v31);
        v33 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v11);
        v34 = v48;
        static WeatherFormatStyle<>.weather.getter(v33);
        v36 = v51;
        v35 = v52;
        v37 = v53;
        (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for WeatherFormatPlaceholder.none(_:), v53);
        v38 = type metadata accessor for UnitManager(0);
        v39 = static UnitManager.standard.getter(v38);
        v40 = sub_1000A9A78();
        v41 = v47;
        v42 = v50;
        v26 = Measurement.formatted<A>(_:placeholder:unitManager:)(v34, v36, v39, &protocol witness table for UnitManager, v47, v50, v40);
        v43 = swift_release(v39);
        (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v36, v37, v43);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v42);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v41);
        return v26;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    return 0;
  }
  type metadata accessor for MapComponent(0);
  v23 = type metadata accessor for WeatherData(0);
  v24 = WeatherDataModel.currentWeather.getter(v23);
  CurrentWeather.condition.getter(v24);
  v25.n128_f64[0] = (*(double (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v26 = WeatherCondition.description.getter(v25);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v54);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  return v26;
}

uint64_t sub_10001D5BC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)(v3, 0.3);
  v6 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v7 = sub_1000BA294(&qword_100BE1FE0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  return sub_100047BB4(a1, (uint64_t)v5, v6);
}

void sub_10001D67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1000986AC();
  sub_1000BA294(&qword_100BC4FF0);
  sub_1000AE848();
  __chkstk_darwin(v2);
  v3 = sub_1000D1DE8();
  sub_100098B6C();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  sub_1000BA294(&qword_100BC5000);
  sub_1000CF828();
  __chkstk_darwin(v8);
  sub_100079FBC();
  Tips.MaxDisplayCount.init(_:)(1);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v7, v3, &protocol witness table for Tips.MaxDisplayCount);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v7, v3);
  v10 = sub_1000C5E30(v9, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  v11 = sub_10009D568(v10);
  v12 = sub_1000C5E30(v11, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>);
  sub_1000C1E24(v12);
  sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1000CCC8C();
  sub_100098640();
}

_QWORD *sub_10001D774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t WitnessTable;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  os_log_type_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  os_log_type_t v73;
  BOOL v74;
  uint64_t v75;
  uint8_t *v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void (*v87)(_QWORD *, uint64_t);
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  char v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t);
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v148 = a2;
  v134 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v132 = v12;
  v133 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = v13;
  v156 = v14;
  v157 = v15;
  v158 = v16;
  v17 = type metadata accessor for AnimatableTabView(0, (uint64_t)&v155);
  v131 = *(_QWORD *)(v17 - 8);
  v129 = *(_QWORD *)(v131 + 64);
  __chkstk_darwin(v17);
  v130 = (char *)&v119 - v18;
  v155 = a4;
  v156 = a5;
  v157 = a6;
  v158 = a7;
  v140 = type metadata accessor for TransitionContext(255, (uint64_t)&v155);
  v141 = type metadata accessor for Optional(0, v140);
  v139 = *(_QWORD *)(v141 - 8);
  v19 = __chkstk_darwin(v141);
  v128 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v127 = (uint64_t)&v119 - v22;
  __chkstk_darwin(v21);
  v137 = (uint64_t *)((char *)&v119 - v23);
  v155 = a4;
  v156 = a5;
  v157 = a6;
  v158 = a7;
  v149 = a7;
  v24 = type metadata accessor for Page(255, (uint64_t)&v155);
  v25 = type metadata accessor for Optional(0, v24);
  v144 = *(_QWORD *)(v25 - 8);
  v145 = v25;
  v26 = __chkstk_darwin(v25);
  v142 = (uint64_t)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v119 - v29;
  v146 = *(void (**)(char *, uint64_t))(v24 - 8);
  v31 = __chkstk_darwin(v28);
  v126 = (char *)&v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v125 = (char *)&v119 - v34;
  v35 = __chkstk_darwin(v33);
  v135 = (char *)&v119 - v36;
  v37 = __chkstk_darwin(v35);
  v136 = (char *)&v119 - v38;
  v39 = __chkstk_darwin(v37);
  v143 = (char *)&v119 - v40;
  __chkstk_darwin(v39);
  v147 = (char *)&v119 - v41;
  v42 = *(int *)(v17 + 72);
  v150 = a3;
  v43 = (char *)(a3 + v42);
  v44 = *v43;
  v45 = *((_QWORD *)v43 + 1);
  LOBYTE(v155) = *v43;
  v156 = v45;
  v46 = sub_1000BA294(&qword_100BC5608);
  v47 = State.wrappedValue.getter(&v154, v46);
  if ((v154 & 1) != 0)
  {
    LOBYTE(v155) = v44;
    v156 = v45;
    LOBYTE(v154) = 0;
    return (_QWORD *)State.wrappedValue.setter(&v154, v46);
  }
  v138 = v17;
  v124 = *(int *)(v17 + 56);
  v154 = *(_QWORD *)(v150 + v124);
  v49 = v154;
  __chkstk_darwin(v47);
  *(&v119 - 6) = a4;
  *(&v119 - 5) = a5;
  v50 = v149;
  *(&v119 - 4) = a6;
  *(&v119 - 3) = v50;
  *(&v119 - 2) = v51;
  v52 = type metadata accessor for Array(0, v24);
  swift_bridgeObjectRetain(v49);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v52);
  Sequence.first(where:)(sub_10005E558, &v119 - 8, v52, WitnessTable);
  swift_bridgeObjectRelease(v154);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v30, v145);
    if (qword_100BC2410 != -1)
      swift_once(&qword_100BC2410, sub_10015961C);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_1000AECD4(v54, (uint64_t)qword_100CAF028);
    v56 = Logger.logObject.getter(v55);
    v58 = static os_log_type_t.error.getter(v56, v57);
    v59 = os_log_type_enabled(v56, v58);
    v60 = v138;
    v61 = v148;
    if (v59)
    {
      v62 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v58, "The internal tab view selection does not correspond to a known page", v62, 2u);
      swift_slowDealloc(v62, -1, -1);
    }

    return (_QWORD *)sub_10061BCF0(v61, v60);
  }
  else
  {
    v120 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v146 + 4);
    v120(v147, v30, v24);
    v123 = &v119;
    v63 = v150;
    v153 = *(_QWORD *)(v150 + v124);
    v64 = __chkstk_darwin(v153);
    v122 = a4;
    *(&v119 - 6) = a4;
    *(&v119 - 5) = a5;
    v121 = a5;
    v124 = a6;
    v65 = v148;
    v66 = v149;
    *(&v119 - 4) = a6;
    *(&v119 - 3) = v66;
    *(&v119 - 2) = v65;
    swift_bridgeObjectRetain(v64);
    v67 = v142;
    Sequence.first(where:)(sub_10061E964, &v119 - 8, v52, WitnessTable);
    swift_bridgeObjectRelease(v153);
    if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v24) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v67, v145);
      v68 = v138;
      if (qword_100BC2410 != -1)
        swift_once(&qword_100BC2410, sub_10015961C);
      v69 = type metadata accessor for Logger(0);
      v70 = sub_1000AECD4(v69, (uint64_t)qword_100CAF028);
      v71 = Logger.logObject.getter(v70);
      v73 = static os_log_type_t.error.getter(v71, v72);
      v74 = os_log_type_enabled(v71, v73);
      v75 = v148;
      if (v74)
      {
        v76 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v76 = 0;
        _os_log_impl((void *)&_mh_execute_header, v71, v73, "The tab view destination does not correspond to a known page", v76, 2u);
        swift_slowDealloc(v76, -1, -1);
      }

      sub_10061BCF0(v75, v68);
      return (_QWORD *)(*((uint64_t (**)(char *, uint64_t))v146 + 1))(v147, v24);
    }
    else
    {
      v77 = v143;
      v120(v143, (char *)v67, v24);
      v78 = v138;
      v79 = (uint64_t *)(v63 + *(int *)(v138 + 80));
      v81 = *v79;
      v80 = v79[1];
      v155 = *v79;
      v156 = v80;
      swift_retain();
      v82 = sub_1000BA294(qword_100BF7E38);
      result = State.wrappedValue.getter(&v152, v82);
      if (__OFADD__(v152, 1))
      {
        __break(1u);
      }
      else
      {
        v155 = v81;
        v156 = v80;
        v151 = v152 + 1;
        State.wrappedValue.setter(&v151, v82);
        swift_release(v80);
        v155 = v81;
        v156 = v80;
        State.wrappedValue.getter(&v152, v82);
        v145 = v152;
        v83 = v63 + *(int *)(v78 + 76);
        v84 = v141;
        v85 = type metadata accessor for State(0, v141);
        v86 = v137;
        v142 = v85;
        v144 = v83;
        State.wrappedValue.getter(v137, v85);
        LODWORD(v83) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v140);
        v87 = *(void (**)(_QWORD *, uint64_t))(v139 + 8);
        v87(v86, v84);
        v88 = v146;
        v89 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v146 + 2);
        v90 = v136;
        v89(v136, v147, v24);
        v91 = v135;
        v89(v135, v77, v24);
        if ((_DWORD)v83 == 1)
        {
          v92 = v66;
          v93 = (void (*)(char *, uint64_t))*((_QWORD *)v88 + 1);
          v93(v91, v24);
          v146 = v93;
          v93(v90, v24);
        }
        else
        {
          v92 = v66;
          v94 = dispatch thunk of static Equatable.== infix(_:_:)(&v90[*(int *)(v24 + 52)], &v91[*(int *)(v24 + 52)], v121, *(_QWORD *)(v66 + 8));
          v95 = (void (*)(char *, uint64_t))*((_QWORD *)v88 + 1);
          v95(v91, v24);
          v95(v90, v24);
          if ((v94 & 1) != 0)
          {
            sub_10061BCF0(v148, v138);
            v95(v143, v24);
            return (_QWORD *)((uint64_t (*)(char *, uint64_t))v95)(v147, v24);
          }
          v146 = v95;
        }
        v96 = v121;
        v119 = v24;
        v97 = (uint64_t)v125;
        v89(v125, v147, v24);
        v98 = (uint64_t)v126;
        v89(v126, v143, v24);
        v99 = v127;
        sub_10061BEEC(v97, v98, v145, v122, v96, v124, v92, v127);
        _s7Weather24LocationCompositionStateOwst_0(v99, 0, 1, v140);
        v100 = v128;
        v101 = v141;
        (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v128, v99, v141);
        State.wrappedValue.setter(v100, v142);
        v87((_QWORD *)v99, v101);
        v102 = v138;
        v103 = (uint64_t *)(v63 + *(int *)(v138 + 60));
        v105 = *v103;
        v104 = v103[1];
        v144 = v105;
        v142 = v104;
        v106 = v131;
        v107 = v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v63, v138);
        v108 = v134;
        v109 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v148, v96);
        v110 = *(unsigned __int8 *)(v106 + 80);
        v111 = (v110 + 48) & ~v110;
        v112 = (v129 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
        v113 = *(unsigned __int8 *)(v108 + 80);
        v114 = (v113 + v112 + 8) & ~v113;
        v115 = (char *)swift_allocObject(&unk_100B850B0, v114 + v132, v110 | v113 | 7);
        *((_QWORD *)v115 + 2) = v122;
        *((_QWORD *)v115 + 3) = v96;
        v116 = v149;
        *((_QWORD *)v115 + 4) = v124;
        *((_QWORD *)v115 + 5) = v116;
        (*(void (**)(char *, char *, uint64_t))(v106 + 32))(&v115[v111], v107, v102);
        *(_QWORD *)&v115[v112] = v145;
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v115[v114], v109, v96);
        sub_10061AC60((uint64_t)sub_10061EB84, (uint64_t)v115, v144, v142);
        swift_release(v115);
        v117 = v119;
        v118 = (uint64_t (*)(char *, uint64_t))v146;
        v146(v143, v119);
        return (_QWORD *)v118(v147, v117);
      }
    }
  }
  return result;
}

BOOL sub_10001E210(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100B5AEB8, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t sub_10001E254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  _QWORD v27[3];

  v2 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 8);
  swift_retain();
  sub_10008D488();
  swift_release(v8);
  v9 = &v7[*(int *)(v5 + 24)];
  v10 = *((_QWORD *)v9 + 2);
  v11 = *((_QWORD *)v9 + 3);
  v13 = *((_QWORD *)v9 + 4);
  v12 = (void *)*((_QWORD *)v9 + 5);
  v14 = v9[48];
  sub_100176D88(v10, v11, v13, (uint64_t)v12, v9[48]);
  sub_1000215BC((uint64_t)v7, type metadata accessor for LocationViewModel);
  if (v14)
  {
    if (v14 == 1)
    {
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 2);
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v15);
      v16 = Image.init(systemName:)(v10, v11);
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
      swift_release(v16);
      v17._countAndFlagsBits = 32;
      v17._object = (void *)0xE100000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
      v18._countAndFlagsBits = v13;
      v18._object = v12;
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v18);
      swift_bridgeObjectRelease(v12);
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
      v20 = LocalizedStringKey.init(stringInterpolation:)(v4);
      return Text.init(_:tableName:bundle:comment:)(v20, v22, v21 & 1, v23, 0, 0, 0, 0);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    v27[0] = v10;
    v27[1] = v11;
    v25 = sub_100114EF8();
    return Text.init<A>(_:)(v27, &type metadata for String, v25);
  }
}

void sub_10001E438(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const __SCPreferences *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const __SCPreferences *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  _QWORD *v32;
  _QWORD aBlock[5];
  uint64_t v34;
  SCPreferencesContext context;

  v4 = v1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = sub_1000BA8E0();
  v9 = type metadata accessor for DispatchQoS(v8);
  __chkstk_darwin(v9);
  sub_100098694();
  v12 = *(void **)(v4 + 16);
  if (v12)
  {
    v29 = v11;
    v30 = v10;
    v13 = v12;
    UnfairLock.lock()();
    v14 = *(void **)(v4 + 40);
    *(_QWORD *)(v4 + 40) = a1;

    context.version = 1;
    context.info = (void *)v4;
    context.retain = (const void *(__cdecl *)(const void *))sub_10013D64C;
    context.release = (void (__cdecl *)(const void *))j_j__swift_unknownObjectRelease;
    context.copyDescription = (CFStringRef (__cdecl *)(const void *))sub_1006F353C;
    v15 = a1;
    SCPreferencesSetCallback(v13, (SCPreferencesCallBack)sub_1006F3474, &context);
    SCPreferencesSetDispatchQueue(v13, *(dispatch_queue_t *)(v4 + 32));
    UnfairLock.unlock()();
    v16 = swift_allocObject(&unk_100B8B450, 24, 7);
    swift_weakInit(v16 + 16, v4);
    v17 = swift_allocObject(&unk_100B8B478, 32, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v13;
    aBlock[4] = sub_10013D5E8;
    v34 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100088F7C;
    aBlock[3] = &unk_100B8B490;
    v18 = _Block_copy(aBlock);
    v19 = v13;
    v20 = swift_retain();
    static DispatchQoS.unspecified.getter(v20);
    v32 = _swiftEmptyArrayStorage;
    v21 = sub_100051B90((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_1000BA294(&qword_100BD4F10);
    v23 = sub_1000A60D4((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v22, v23, v6, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v3, v2, v18);
    _Block_release(v18);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v3, v30);
    v24 = v34;
    swift_release(v16);
    swift_release(v24);
  }
  else
  {
    if (qword_100BC2498 != -1)
      swift_once(&qword_100BC2498, sub_100159704);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_1000AECD4(v25, (uint64_t)qword_100CAF1B0);
    v31 = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v27, "Cannot start monitoring Airplane Mode - no preferences", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
}

double sub_10001E7BC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  double result;

  ProxyContainer.public.getter(a1);
  v1 = sub_1000BA294(&qword_100BCF650);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_100262BE8);
  swift_release(v4);
  sub_10009880C();
  ProxyContainer.public.getter(v5);
  v6 = sub_1000BA294(&qword_100BCF658);
  v9 = sub_1000BA3CC(v6, v7, v8, (uint64_t)sub_100262CA0);
  swift_release(v9);
  sub_10009880C();
  ProxyContainer.public.getter(v10);
  v11 = sub_1000BA294(&qword_100BCF660);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_100262D80);
  swift_release(v14);
  sub_10009880C();
  v16 = ProxyContainer.private.getter(v15);
  RegistrationContainer.lazy(block:)(sub_100262EB0, 0);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_10001E87C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];

  v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v23, 1, 0);
  v3 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v20 = *(_QWORD *)(a1 + 16);
    else
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v4)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    }
    else
    {
      v6 = *(_QWORD *)(v3 + 8 * i + 32);
      swift_retain(v6);
    }
    Strong = swift_unknownObjectWeakLoadStrong(v6 + 32);
    ((void (*)(void))swift_unknownObjectRelease)();
    if (Strong)
    {
      v8 = swift_unknownObjectWeakLoadStrong(v6 + 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)(v6 + 24);
        ObjectType = swift_getObjectType(v8);
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
        swift_unknownObjectRelease(v9);
      }
    }
    swift_release(v6);
  }
LABEL_12:
  swift_bridgeObjectRelease(v3);
  v12 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_14;
LABEL_33:
    swift_bridgeObjectRelease(v12);
    v22 = *v2;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    return;
  }
  if (v12 < 0)
    v21 = *v2;
  else
    v21 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v13)
    goto LABEL_33;
LABEL_14:
  if (v13 >= 1)
  {
    for (j = 0; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else
      {
        v15 = *(_QWORD *)(v12 + 8 * j + 32);
        swift_retain(v15);
      }
      v16 = swift_unknownObjectWeakLoadStrong(v15 + 32);
      v17 = swift_unknownObjectRelease(v16);
      if (v16)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized ContiguousArray._endMutation()(v19);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
}

_QWORD *sub_10001EAC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_retain();
  swift_release(v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Font.Leading(0);
  v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_1000BA294(&qword_100BCCDA8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_10001EC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t v25;

  v5 = type metadata accessor for UserInterfaceSizeClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC5A68);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v25 - v16;
  if (!a2)
  {
    v19 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    return Color.init(uiColor:)(v19);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))((char *)&v25 - v16, enum case for UserInterfaceSizeClass.compact(_:), v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
  v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_100037794(a3, (uint64_t)v11, &qword_100BC5A68);
  sub_100037794((uint64_t)v17, v18, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) != 1)
  {
    sub_100037794((uint64_t)v11, (uint64_t)v15, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v18, v5);
      sub_10000F1C8(&qword_100BC5AB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v8, v5, v21);
      v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v8, v5);
      sub_100021AA4((uint64_t)v17, &qword_100BC5A68);
      v23(v15, v5);
      sub_100021AA4((uint64_t)v11, &qword_100BC5A68);
      if ((v22 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      v24 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      return Color.init(uiColor:)(v24);
    }
    sub_100021AA4((uint64_t)v17, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_8:
    sub_100021AA4((uint64_t)v11, &qword_100BC5E60);
    goto LABEL_11;
  }
  sub_100021AA4((uint64_t)v17, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) != 1)
    goto LABEL_8;
  sub_100021AA4((uint64_t)v11, &qword_100BC5A68);
LABEL_10:
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  return Color.init(uiColor:)(v24);
}

void sub_10001EF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v1 = type metadata accessor for EnvironmentState(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 16))(v9, v2);
  v5 = v9[0];
  v6 = v9[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v9[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, v9, 0, 0);
  sub_10006A788(v6, (uint64_t)v4);
  swift_release(v5);
  v7 = v4[2];
  sub_10006A74C((uint64_t)v4);
  __asm { BR              X9 }
}

uint64_t sub_10001EFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = enum case for CellularRadioAccessTechnology.unknown(_:);
  v2 = ((uint64_t (*)(_QWORD))type metadata accessor for CellularRadioAccessTechnology)(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_10001F054(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char **v11;
  id v12;
  id v13;
  uint64_t v14;

  type metadata accessor for AttributedString(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079F58();
  if ((a2 & 1) != 0)
    v8 = static Font.footnote.getter(v7);
  else
    v8 = static Font.subheadline.getter(v7);
  v9 = v8;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = &selRef_whiteColor;
  if ((a3 & 1) == 0)
    v11 = &selRef_labelColor;
  v12 = objc_msgSend(v10, *v11);
  v13 = v12;
  WeatherDescription.formatted(font:color:)(v9, v12);

  v14 = Text.init(_:)(v3);
  swift_release(v9);

  return v14;
}

void sub_10001F148()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;

  sub_1000C1B60();
  if ((v3 & 1) != 0)
  {
    sub_1000DD15C();
    if (v4 != v5)
    {
      sub_1000C572C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  sub_1000C179C();
  if (v2)
  {
    v11 = sub_1000DBBEC(v6, v7, v8, v9, v10);
    v12 = (_QWORD *)sub_100098740(v11, 8 * v2 + 32);
    v13 = j__malloc_size(v12);
    sub_1000C22C4((uint64_t)(v13 - 32) / 8);
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  if ((v1 & 1) != 0)
  {
    sub_1000EFA14();
    *(_QWORD *)(v0 + 16) = 0;
    sub_1000986E8();
  }
  else
  {
    sub_100099BF0(v6, v7, (uint64_t)(v12 + 4));
  }
  sub_10004A2A0();
}

double sub_10001F1E8(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  double result;

  ProxyContainer.public.getter(a2);
  v3 = sub_1000BA294(&qword_100BF02E8);
  v6 = sub_1000BA3CC(v3, v4, v5, (uint64_t)sub_10055C804);
  swift_release(v6);
  sub_10009880C();
  sub_1000C2974();
  v7 = sub_1000BA294(&qword_100BF02F0);
  v10 = sub_1000BA3CC(v7, v8, v9, (uint64_t)sub_10014AB60);
  swift_release(v10);
  sub_10009880C();
  sub_1000C2974();
  v11 = sub_1000BA294(&qword_100BE6648);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_10055CAFC);
  swift_release(v14);
  sub_10009880C();
  sub_1000C2974();
  v15 = sub_1000BA294(&qword_100BF02F8);
  v18 = sub_1000BA3CC(v15, v16, v17, (uint64_t)sub_10014AE14);
  swift_release(v18);
  sub_10009880C();
  ProxyContainer.private.getter(v19);
  swift_retain();
  RegistrationContainer.lazy(block:)(sub_10014A884, a1);
  sub_10009880C();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_10001F2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  void *v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[6];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v0 - 8);
  v31 = v0;
  __chkstk_darwin(v0);
  v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS.QoSClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static Logger.geocode.getter(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Prewarming GeoServices", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  sub_10009FFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchQoS.QoSClass.background(_:), v5);
  v18 = (void *)static OS_dispatch_queue.global(qos:)(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  aBlock[4] = sub_100129478;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B9BAE0;
  v19 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v20);
  v32 = _swiftEmptyArrayStorage;
  v21 = sub_1001221E0();
  v22 = sub_1000BA294(&qword_100BD4F10);
  v23 = sub_100121014();
  v24 = v29;
  v25 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v22, v23, v31, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v4, v24, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v4, v28);
}

void sub_10001F5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1000986AC();
  v3 = v2;
  sub_1000BA294(&qword_100BC4FF0);
  sub_1000AE848();
  __chkstk_darwin(v4);
  v5 = sub_1000D1DE8();
  sub_100098B6C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  sub_1000BA294(&qword_100BC5000);
  sub_1000CF828();
  __chkstk_darwin(v10);
  sub_100079FBC();
  Tips.MaxDisplayCount.init(_:)(v3);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v9, v5, &protocol witness table for Tips.MaxDisplayCount);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v9, v5);
  v12 = sub_1000C5E30(v11, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>);
  v13 = sub_10009D568(v12);
  v14 = sub_1000C5E30(v13, (uint64_t)&opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>);
  sub_1000C1E24(v14);
  sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1000CCC8C();
  sub_100098640();
}

double sub_10001F6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  double result;

  v4 = type metadata accessor for CurrentWeather(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  swift_bridgeObjectRelease(v5[11]);
  swift_bridgeObjectRelease(v5[13]);
  swift_bridgeObjectRelease(v5[15]);
  swift_bridgeObjectRelease(v5[17]);
  swift_bridgeObjectRelease(v5[19]);
  swift_bridgeObjectRelease(v5[21]);
  swift_bridgeObjectRelease(v5[23]);
  swift_bridgeObjectRelease(v5[25]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5[28]).n128_u64[0];
  return result;
}

_QWORD *sub_10001F750(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[11];
  v5 = a1[13];
  swift_bridgeObjectRetain(a1[9]);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

void sub_10001F7B8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v2 = v1;
  v28[1] = a1;
  v3 = sub_1000C4D6C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_1000BA294(&qword_100BC5A68);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  sub_1000BA294(&qword_100BFBC60);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = sub_1000BA294(&qword_100BFBC68);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter(v20);
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 0;
  v21 = sub_1000BA294(&qword_100BFBC70);
  sub_10007DCC0(v2, v14 + *(int *)(v21 + 44));
  static Alignment.center.getter(v22);
  sub_1009465A8();
  sub_100021AA4(v14, &qword_100BFBC60);
  sub_10011AA68();
  sub_10000AB54((uint64_t)v2, (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ContentStatusBannerView);
  v23 = *(unsigned __int8 *)(v4 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_100B882F0, v24 + v5, v23 | 7);
  sub_100133920((uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  v26 = sub_100156E04();
  v27 = sub_1001546F8();
  View.onChange<A>(of:initial:_:)(v10, 1, sub_1001339F4, v25, v15, v6, v26, v27);
  swift_release(v25);
  sub_100021AA4(v10, &qword_100BC5A68);
  sub_100021AA4(v19, &qword_100BFBC68);
}

uint64_t sub_10001F9F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t __dst[14];

  v3 = type metadata accessor for AttributedString(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v110);
  v113 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BCCDA8);
  v8 = __chkstk_darwin(v7);
  v112 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v93 - v10;
  v12 = sub_1000BA294(&qword_100BE59C0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v111 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1000BA294(&qword_100C17D40);
  __chkstk_darwin(v109);
  v16 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100C17D48);
  __chkstk_darwin(v17);
  v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100C17D50);
  __chkstk_darwin(v20);
  v22 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1000BA294(&qword_100C17D58);
  v24 = __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  v28 = *(_QWORD *)(v1 + 72);
  if (!v28)
    return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v25);
  v95 = v16;
  v96 = v13;
  v97 = v12;
  v98 = v17;
  v99 = v19;
  v100 = (uint64_t)&v93 - v26;
  v101 = v27;
  v102 = v22;
  v103 = v25;
  v104 = v5;
  v105 = a1;
  v93 = *(_QWORD *)(v1 + 64);
  __dst[0] = v93;
  __dst[1] = v28;
  v29 = v28;
  v30 = sub_100114EF8();
  v94 = v29;
  swift_bridgeObjectRetain(v29);
  v31 = Text.init<A>(_:)(__dst, &type metadata for String, v30);
  v33 = v32;
  v35 = v34;
  v108 = v36 & 1;
  v37 = static Font.subheadline.getter();
  v38 = static Font.footnote.getter();
  v39 = *(_QWORD *)(v1 + 112);
  v40 = *(_BYTE *)(v1 + 120);
  sub_10008D47C(v39, v40);
  sub_100109B54();
  v42 = v41;
  sub_1000B15F8(v39, v40);
  sub_100015870((uint64_t)v11);
  v43 = type metadata accessor for Font.Leading(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v43);
  v44 = v112;
  sub_100037794((uint64_t)v11, v112, &qword_100BCCDA8);
  swift_retain();
  swift_retain();
  v45 = sub_10040BDEC(v37, v38, v42 & 1, v44);
  LOBYTE(v44) = v108;
  v46 = Text.font(_:)(v45, v31, v33, v108, v35);
  v107 = v47;
  v106 = v48;
  v112 = v1;
  v50 = v49;
  swift_release(v37);
  swift_release(v38);
  swift_release(v45);
  sub_1000D31B4(v31, v33, v44);
  swift_bridgeObjectRelease(v35);
  sub_100021A14((uint64_t)v11, &qword_100BCCDA8);
  __dst[0] = v46;
  __dst[1] = v107;
  LOBYTE(__dst[2]) = v106 & 1;
  __dst[3] = v50;
  v51 = v112;
  v52 = v113;
  sub_10095C994(v113);
  v53 = type metadata accessor for DynamicTypeSize(0);
  sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v52, v52, v53, v54);
  if ((result & 1) != 0)
  {
    sub_10003D2DC(&qword_100BC4E30, (uint64_t *)&unk_100C0A510);
    v56 = v111;
    View.dynamicTypeSize<A>(_:)(v52, &type metadata for Text, v110, &protocol witness table for Text, v57);
    sub_100021A14(v52, (uint64_t *)&unk_100C0A510);
    sub_1000D31B4(__dst[0], __dst[1], __dst[2]);
    swift_bridgeObjectRelease(__dst[3]);
    v58 = *(_QWORD *)(v51 + 144);
    v59 = *(_BYTE *)(v51 + 152);
    sub_10008D47C(v58, v59);
    sub_100109B54();
    v61 = v60;
    sub_1000B15F8(v58, v59);
    v62 = v96;
    v63 = (uint64_t)v95;
    v64 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v95, v56, v97);
    v65 = (_BYTE *)(v63 + *(int *)(v109 + 36));
    *v65 = 0;
    v65[1] = v61 & 1;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v64);
    KeyPath = swift_getKeyPath(&unk_1009DE048);
    v67 = (uint64_t)v99;
    sub_100037794(v63, (uint64_t)v99, &qword_100C17D40);
    v68 = v98;
    v69 = v67 + *(int *)(v98 + 36);
    *(_QWORD *)v69 = KeyPath;
    *(_BYTE *)(v69 + 8) = 0;
    sub_100021A14(v63, &qword_100C17D40);
    memcpy(__dst, (const void *)v51, sizeof(__dst));
    v70 = (uint64_t)v104;
    sub_10001B8B0(v93, v94, (uint64_t)v104);
    v71 = Text.init(_:)(v70);
    v73 = v72;
    v75 = v74;
    v77 = v76 & 1;
    v78 = sub_10095D594();
    v79 = (uint64_t)v102;
    View.accessibilityLabel(_:)(v71, v73, v77, v75, v68, v78);
    sub_1000D31B4(v71, v73, v77);
    swift_bridgeObjectRelease(v75);
    sub_100021A14(v67, &qword_100C17D48);
    v80 = *(unsigned __int8 *)(v51 + 96);
    v81 = *(_QWORD *)(v51 + 112);
    LOBYTE(v62) = *(_BYTE *)(v51 + 120);
    sub_10008D47C(v81, v62);
    sub_100109B54();
    v83 = v82;
    sub_1000B15F8(v81, v62);
    v84 = 2;
    if ((v83 & 1) != 0)
      v84 = 3;
    if (v80)
      v85 = v84;
    else
      v85 = 4;
    v86 = swift_getKeyPath(&unk_1009DE078);
    v87 = v101;
    sub_100037794(v79, v101, &qword_100C17D50);
    v88 = v103;
    v89 = v87 + *(int *)(v103 + 36);
    *(_QWORD *)v89 = v86;
    *(_QWORD *)(v89 + 8) = v85;
    *(_BYTE *)(v89 + 16) = 0;
    sub_100021A14(v79, &qword_100C17D50);
    v90 = v100;
    sub_1000F111C(v87, v100, &qword_100C17D58);
    v91 = v90;
    v92 = v105;
    sub_1000F111C(v91, v105, &qword_100C17D58);
    return _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v88);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002018C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t countAndFlagsBits;
  int v24;
  __n128 v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;

  v2 = type metadata accessor for AirQualityScaleCategory(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v51 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AirQualityScale(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BE7C80);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AirQuality(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for WeatherMapOverlayKind(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_3:
    v54._countAndFlagsBits = 0xD000000000000043;
    v54._object = (void *)0x8000000100A07990;
    v20._countAndFlagsBits = 0x7469706963657250;
    v20._object = (void *)0xED00006E6F697461;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v54)._countAndFlagsBits;

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return countAndFlagsBits;
  }
  v24 = v18;
  if (v18 != enum case for WeatherMapOverlayKind.airQuality(_:))
  {
    if (v18 == enum case for WeatherMapOverlayKind.temperature(_:))
    {
      v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v56._object = (void *)0x8000000100A07B10;
      v30._countAndFlagsBits = 0x74617265706D6554;
      v30._object = (void *)0xEB00000000657275;
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      v56._countAndFlagsBits = 0xD000000000000041;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v56)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    v45 = enum case for WeatherMapOverlayKind.wind(_:);
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v24 == v45)
    {
      v58._countAndFlagsBits = 0xD00000000000003ALL;
      v58._object = (void *)0x8000000100A07AD0;
      v46._countAndFlagsBits = 0x70614D20646E6957;
      v46._object = (void *)0xE800000000000000;
      v47._countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v19, v47, v58)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    goto LABEL_3;
  }
  type metadata accessor for MapComponent(0);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.airQuality.getter(v25);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_1004D54FC((uint64_t)v9);
    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v55._object = (void *)0x8000000100A079E0;
    v27._countAndFlagsBits = 0x6C61755120726941;
    v27._object = (void *)0xEF70614D20797469;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v55._countAndFlagsBits = 0xD000000000000041;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v55)._countAndFlagsBits;

  }
  else
  {
    v48 = v11;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v57._countAndFlagsBits = 0xD000000000000090;
    v57._object = (void *)0x8000000100A07A30;
    v33._countAndFlagsBits = 0x70614D204025;
    v33._object = (void *)0xE600000000000000;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v57);

    v36 = sub_1000BA294(&qword_100BC3C38);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_10097CA50;
    v38 = AirQuality.scale.getter(v37);
    v39 = AirQualityScale.displayLabel.getter(v38);
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v50);
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_1000B2E24();
    *(_QWORD *)(v37 + 32) = v39;
    *(_QWORD *)(v37 + 40) = v41;
    countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v35._countAndFlagsBits, v35._object, v37);
    swift_bridgeObjectRelease(v35._object);
    swift_bridgeObjectRelease(v37);
    v42 = v51;
    v44 = AirQuality.currentScaleCategory.getter(v43);
    AirQualityScaleCategory.glyph.getter(v44);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v53);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return countAndFlagsBits;
}

uint64_t sub_1000207F4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_1000BA294(&qword_100BD66C0);
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AppData(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v26 - v9;
  v11 = Client.version.getter(v8);
  v13 = v12;
  v14 = Client.buildNumber.getter();
  AppData.init(appVersion:appBuildNumber:)(v11, v13, v14, v15);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
  sub_10000F1C8(&qword_100BD66C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppData);
  v17 = v16;
  SessionData.init(key:data:)(0x61746144707061, 0xE700000000000000, v7, v3, v16);
  v18 = sub_1000BA294(&qword_100BCDC68);
  v19 = type metadata accessor for DataEventTrait(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v18, v22 + *(_QWORD *)(v20 + 72), v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v23 + v22, enum case for DataEventTrait.unique(_:), v19);
  SessionManager.push<A>(_:traits:file:line:)(v2, v23, 0xD000000000000065, 0x80000001009FA420, 304, v3, v17);
  v24 = swift_bridgeObjectRelease(v23);
  (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v2, v27, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t type metadata accessor for ResettingBool()
{
  return objc_opt_self(_TtC7Weather13ResettingBool);
}

void sub_100020A3C(const __SCPreferences *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  __CFString *v16;
  CFPropertyListRef v17;
  int v18;
  void *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD aBlock[5];
  uint64_t v53;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v2 + 32);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    swift_once(&qword_100BC2498, sub_100159704);
    goto LABEL_9;
  }
  UnfairLock.lock()();
  SCPreferencesSynchronize(a1);
  v16 = (__CFString *)String._bridgeToObjectiveC()();
  v17 = (id)SCPreferencesGetValue(a1, v16);

  if (v17)
  {
    aBlock[0] = v17;
    if ((swift_dynamicCast(&v51, aBlock, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for Bool, 6) & 1) != 0)
    {
      v18 = v51;
      v19 = *(void **)(v2 + 40);
      v20 = *(unsigned __int8 *)(v2 + 48);
      v21 = *(_QWORD *)(v2 + 64);
      v22 = *(_QWORD *)(v2 + 72);
      *(_BYTE *)(v2 + 48) = (_BYTE)v51;
      if (v19)
      {
        v23 = v19;
        if (v18 != v20)
        {
          if (v21)
          {
            v24 = swift_allocObject(&unk_100B8B4C8, 33, 7);
            *(_QWORD *)(v24 + 16) = v21;
            *(_QWORD *)(v24 + 24) = v22;
            *(_BYTE *)(v24 + 32) = v18;
            aBlock[4] = sub_1006F35B4;
            v53 = v24;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100088F7C;
            aBlock[3] = &unk_100B8B4E0;
            v48 = _Block_copy(aBlock);
            sub_1000FDC6C(v21, v22);
            sub_1000FDC6C(v21, v22);
            sub_1000FDC6C(v21, v22);
            v47 = v19;
            static DispatchQoS.unspecified.getter(v25);
            v51 = _swiftEmptyArrayStorage;
            v26 = sub_100051B90((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v27 = sub_1000BA294(&qword_100BD4F10);
            v28 = sub_1000A60D4((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
            dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v27, v28, v4, v26);
            v29 = v47;
            v30 = v48;
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v48);
            _Block_release(v30);
            sub_1000BF8D0(v21, v22);
            sub_1000BF8D0(v21, v22);

            (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v4);
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v49);
            swift_release(v53);
            goto LABEL_20;
          }
          v23 = v19;
          goto LABEL_14;
        }
      }
      else
      {
        v23 = 0;
      }
      sub_1000FDC6C(v21, v22);
LABEL_14:
      v36 = qword_100BC2498;
      v37 = v23;
      if (v36 != -1)
        swift_once(&qword_100BC2498, sub_100159704);
      v38 = type metadata accessor for Logger(0);
      sub_1000AECD4(v38, (uint64_t)qword_100CAF1B0);
      sub_1000FDC6C(v21, v22);
      v39 = v37;
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = v22;
        v43 = swift_slowAlloc(14, -1);
        *(_DWORD *)v43 = 67109376;
        LODWORD(aBlock[0]) = v19 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);

        *(_WORD *)(v43 + 8) = 1024;
        LODWORD(aBlock[0]) = v21 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
        sub_1000BF8D0(v21, v42);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Not calling handler, state not changed or handler not present. callbackQueuePresent=%{BOOL}d, handlerPresent=%{BOOL}d", (uint8_t *)v43, 0xEu);
        v44 = v43;
        v22 = v42;
        swift_slowDealloc(v44, -1, -1);
        v45 = v40;
      }
      else
      {

        sub_1000BF8D0(v21, v22);
        v45 = v39;
        v39 = v40;
      }

      sub_1000BF8D0(v21, v22);
      goto LABEL_20;
    }
  }
  if (qword_100BC2498 != -1)
    goto LABEL_23;
LABEL_9:
  v31 = type metadata accessor for Logger(0);
  v32 = sub_1000AECD4(v31, (uint64_t)qword_100CAF1B0);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Cannot get AirplaneMode preferences value", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

LABEL_20:
  UnfairLock.unlock()();
}

uint64_t sub_100020FD4(uint64_t a1)
{
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t countAndFlagsBits;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v1 == 10)
  {
    v12._countAndFlagsBits = 0xD000000000000086;
    v12._object = (void *)0x80000001009FA890;
    v3._countAndFlagsBits = 0x46207961442D6425;
    v3._object = (void *)0xEF7473616365726FLL;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v12);

    v6 = sub_1000BA294(&qword_100BC3C38);
    v7 = swift_allocObject(v6, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v7 + 56) = &type metadata for Int;
    *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v7 + 32) = 10;
    countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
    swift_bridgeObjectRelease(v5._object);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v13._object = (void *)0x80000001009FA840;
    v10._countAndFlagsBits = 0x6F4620796C696144;
    v10._object = (void *)0xEE00747361636572;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0xD000000000000040;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v2, v11, v13)._countAndFlagsBits;

  }
  return countAndFlagsBits;
}

void sub_100021170(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void ***v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void **aBlock;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  void *v74;
  void (*v75)();
  uint64_t v76;
  _QWORD v77[2];

  v70 = a3;
  v4 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  v66 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v64 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v5;
  v6 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v61 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  v68 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BackgroundAnimationData(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BackgroundAnimationKind(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a2;
  v22 = *((_QWORD *)a2 + 1);
  v69 = v4;
  v23 = v70;
  WeatherConditionBackgroundModel.animationKind.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v20, v16) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    v24 = v15;
    v25 = v13;
    v26 = v68;
    v60 = v22;
    v27 = sub_10014FE7C();
    v28 = v23;
    v29 = v69;
    if ((v27 & 1) != 0)
    {
      v30 = (void ***)(v28 + *(int *)(v69 + 84));
      v32 = *v30;
      v31 = (uint64_t)v30[1];
      aBlock = v32;
      v72 = v31;
      v33 = sub_1000BA294(&qword_100C13F50);
      State.wrappedValue.getter(v77, v33);
      v34 = *(unsigned __int8 *)(v77[0] + 16);
      swift_release(v77[0]);
      if (v34 == 1)
      {
        v36 = WeatherConditionBackgroundModel.animationData.getter(v35);
        BackgroundAnimationData.options.getter(v36);
        v37 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v12);
        v38 = WeatherConditionBackgroundOptions.canShowCollisionLayer.getter(v37);
        v39 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v67);
        if ((v38 & 1) != 0)
        {
          v40 = v61;
          v41 = Date.init()(v39);
          v42 = Date.timeIntervalSince1970.getter(v41);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
          v43 = v28 + *(int *)(v29 + 88);
          v45 = *(_QWORD *)(v43 + 8);
          aBlock = *(void ***)v43;
          v44 = aBlock;
          v72 = v45;
          *(double *)v77 = v42;
          v46 = sub_1000BA294(&qword_100C13F90);
          State.wrappedValue.setter(v77, v46);
          aBlock = v44;
          v72 = v45;
          State.wrappedValue.getter(v77, v46);
          v47 = v77[0];
          v48 = (void *)objc_opt_self(CATransaction);
          v49 = v64;
          sub_10000AB54(v28, v64, type metadata accessor for WeatherConditionBackgroundModifier);
          v50 = *(unsigned __int8 *)(v66 + 80);
          v51 = (v50 + 16) & ~v50;
          v52 = (v65 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
          v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
          v54 = swift_allocObject(&unk_100B9AEB0, v53 + 16, v50 | 7);
          sub_10010E534(v49, v54 + v51);
          *(_QWORD *)(v54 + v52) = v47;
          v55 = v54 + v53;
          *(_DWORD *)v55 = v21;
          v56 = v60;
          *(_QWORD *)(v55 + 8) = v60;
          v75 = sub_1001505CC;
          v76 = v54;
          aBlock = _NSConcreteStackBlock;
          v72 = 1107296256;
          v73 = sub_100121D84;
          v74 = &unk_100B9AEC8;
          v57 = _Block_copy(&aBlock);
          v58 = v76;
          swift_bridgeObjectRetain(v56);
          objc_msgSend(v48, "setCompletionBlock:", v57, swift_release(v58).n128_f64[0]);
          _Block_release(v57);
        }
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_100021578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000215BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_10003BC44(v2);
  sub_10004A298();
}

void sub_1000215E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  char v24;
  double v25;
  double v26;
  double v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = (uint64_t)v2;
  v49 = a1;
  v54 = a2;
  v4 = (int *)type metadata accessor for ConditionSummaryModifier(0);
  v51 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v52 = v5;
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000BA294(&qword_100BC4088);
  __chkstk_darwin(v47);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1000BA294(&qword_100BC4090);
  __chkstk_darwin(v48);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1000BA294(&qword_100BC4098);
  __chkstk_darwin(v50);
  v53 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v2;
  swift_retain();
  sub_1007A5940();
  v17 = v16;
  swift_release(v15);
  v18 = sub_100174990();
  swift_release(v17);
  sub_1007A5958(v19);
  swift_retain();
  sub_1007A5940();
  v21 = v20;
  swift_release(v15);
  v22 = sub_100174A14();
  swift_release(v21);
  sub_10041934C((uint64_t *)((char *)v14 + *(int *)(v12 + 32)));
  if ((v24 & 1) != 0)
    v25 = (v22 - (v14[1] + v14[3] + v14[5] + v14[7])) * 0.5;
  else
    v25 = v23;
  sub_10006BCFC((uint64_t)v14, type metadata accessor for LocationHeaderViewMeasurements);
  v26 = *(double *)(v3 + v4[8]);
  v27 = *(double *)(v3 + v4[9]);
  v28 = *(unsigned __int8 *)(v3 + v4[6]);
  v29 = 0;
  if (v28 == 1)
  {
    v30 = (uint64_t *)(v3 + v4[10]);
    v31 = *v30;
    v32 = v30[1];
    v55 = v31;
    v56 = v32;
    v33 = sub_1000BA294(&qword_100BC40A8);
    State.wrappedValue.getter(&v57, v33);
    v29 = v57;
  }
  v34 = sub_1000BA294(&qword_100BC40A0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v8, v49, v34);
  v36 = &v8[*(int *)(v47 + 36)];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = v29;
  v37 = 1.0;
  if (v28)
    v37 = CGFloat.clamp(min:max:)(v35, 0.0, 1.0, (-v18 / v25 - v26) / (v27 - v26));
  sub_100037768((uint64_t)v8, (uint64_t)v10, &qword_100BC4088);
  *(double *)&v10[*(int *)(v48 + 36)] = v37;
  sub_100021A14((uint64_t)v8, &qword_100BC4088);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for ConditionSummaryModifier);
  v38 = *(unsigned __int8 *)(v51 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = v39 + v52;
  v41 = v38 | 7;
  v42 = swift_allocObject(&unk_100B5CE08, v39 + v52, v38 | 7);
  sub_10007802C((uint64_t)v6, v42 + v39, type metadata accessor for ConditionSummaryModifier);
  sub_100080C0C(v3, (uint64_t)v6, type metadata accessor for ConditionSummaryModifier);
  v43 = swift_allocObject(&unk_100B5CE30, v40, v41);
  sub_10007802C((uint64_t)v6, v43 + v39, type metadata accessor for ConditionSummaryModifier);
  v44 = v53;
  sub_100037768((uint64_t)v10, v53, &qword_100BC4090);
  v45 = (uint64_t (**)(uint64_t))(v44 + *(int *)(v50 + 36));
  *v45 = sub_100179998;
  v45[1] = (uint64_t (*)(uint64_t))v42;
  v45[2] = (uint64_t (*)(uint64_t))sub_1001799B8;
  v45[3] = (uint64_t (*)(uint64_t))v43;
  sub_100021A14((uint64_t)v10, &qword_100BC4090);
  sub_1000787D4(v44, v54, &qword_100BC4098);
}

void sub_100021A14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1000BA294(a2);
  sub_10003BC44(v2);
  sub_10004A298();
}

uint64_t sub_100021A3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1000BA294(a2);
  sub_10003BC44(v3);
  return a1;
}

uint64_t sub_100021A68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1000BA294(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100021AA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1000BA294(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_10004A298();
}

uint64_t sub_100021ADC()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100998A10);
  v4 = v0;
  v2 = sub_100144B30();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 33);
}

void sub_100021B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v0 = type metadata accessor for Scope(0);
  v31 = *(_QWORD *)(v0 - 8);
  v32 = v0;
  sub_10009D98C();
  __chkstk_darwin(v1);
  sub_100088FDC();
  v30 = v2;
  v3 = type metadata accessor for CallbackScope(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098728();
  v7 = v6 - v5;
  sub_1000CCD34();
  v8 = v34;
  v9 = v35;
  sub_1000DB418(v33, v34);
  v10 = sub_10009C82C();
  v11 = type metadata accessor for DebugDataSource(v10);
  v12 = enum case for CallbackScope.any(_:);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  v29(v7, enum case for CallbackScope.any(_:), v3);
  v13 = swift_allocObject(&unk_100B7F870, 24, 7);
  swift_weakInit(v13 + 16);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v11, v7, sub_100554174, v13, v11, v8, v9);
  swift_release(v13);
  sub_1000DBB60();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
  sub_1000C2974();
  v14 = sub_1000BA294((uint64_t *)&unk_100BCEF00);
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0, 0, sub_10014928C, 0, v14);
  swift_release(v15);
  sub_10009880C();
  sub_1000CCD34();
  v16 = v34;
  v17 = v35;
  sub_1000DB418(v33, v34);
  v18 = sub_10009C82C();
  v19 = type metadata accessor for DebugCacheRegistry(v18);
  v29(v7, v12, v3);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v19, v7, sub_10055385C, 0, v19, v16, v17);
  sub_1000DBB60();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
  sub_1000C2974();
  sub_10009C82C();
  v20 = type metadata accessor for DiagnosticManager();
  sub_1000C2960(v20, v21, v22, (uint64_t)sub_100553AB8);
  sub_10009880C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v30, enum case for Scope.singleton(_:), v32);
  v23 = Definition.inScope(_:)(v30);
  swift_release(v23);
  sub_100089020();
  v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  ProxyContainer.private.getter(v24);
  RegistrationContainer.lazy(block:)(sub_100553C48, 0);
  sub_10009880C();
  sub_1000C2974();
  sub_10009C82C();
  v25 = type metadata accessor for DebugNotificationSubscriptionsViewController();
  v28 = sub_1000C2960(v25, v26, v27, (uint64_t)sub_10055401C);
  swift_release(v28);
  sub_10009880C();
  sub_100098640();
}

void sub_100021DC0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;
  char v46;
  char v47[24];

  v1 = v0;
  v2 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&aBlock - v13;
  v15 = OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController;
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController];
  v17 = (uint64_t)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  swift_beginAccess(&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL], v47, 0, 0);
  sub_100038D20(v17, (uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100021AA4((uint64_t)v7, &qword_100BD4280);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                       + 8];
    v19 = v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
           + 16];
    aBlock = *(void ***)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
    v41 = v18;
    LOBYTE(v42) = v19;
    v20 = sub_1000BA294((uint64_t *)&unk_100BD4270);
    Binding.wrappedValue.getter(v20);
    if (v46 == 1 && !v16)
    {
      v33 = objc_msgSend(v1, "viewIfLoaded");
      v34 = objc_msgSend(v33, "window");

      if (!v34)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return;
      }
      sub_1002C92F0();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      v35 = sub_1002C8FBC((uint64_t)v12);
      objc_msgSend(v35, "setDelegate:", v1);
      objc_msgSend(v35, "setModalPresentationStyle:", 2);
      v36 = objc_msgSend(v35, "presentationController");
      if (v36)
      {
        v37 = v36;
        objc_msgSend(v36, "setDelegate:", v1);

      }
      v38 = *(void **)&v1[v15];
      *(_QWORD *)&v1[v15] = v35;
      v39 = v35;

      objc_msgSend(v1, "presentViewController:animated:completion:", v39, 1, 0);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  v21 = *(void **)&v1[v15];
  if (!v21)
    return;
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                     + 8];
  v23 = v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
         + 16];
  aBlock = *(void ***)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  v41 = v22;
  LOBYTE(v42) = v23;
  v24 = v21;
  v25 = sub_1000BA294((uint64_t *)&unk_100BD4270);
  Binding.wrappedValue.getter(v25);
  if ((v46 & 1) != 0 || !v16)
  {

  }
  else
  {
    objc_msgSend(v24, "setDelegate:", 0);
    v26 = swift_allocObject(&unk_100B6B438, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v1);
    v44 = sub_1002C92E8;
    v45 = v26;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_100121D84;
    v43 = &unk_100B6B450;
    v27 = _Block_copy(&aBlock);
    swift_release(v45);
    objc_msgSend(v24, "dismissViewControllerAnimated:completion:", 1, v27);

    _Block_release(v27);
    v28 = *(void **)&v1[v15];
    *(_QWORD *)&v1[v15] = 0;

  }
LABEL_11:
  v29 = *(void **)&v1[v15];
  if (v29)
  {
    v30 = &v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
    swift_beginAccess(&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme], &aBlock, 0, 0);
    v31 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v4, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v31);
    v32 = v29;
    objc_msgSend(v32, "setOverrideUserInterfaceStyle:", UIUserInterfaceStyle.init(_:)(v4));

  }
}

uint64_t sub_100022240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  char v15;

  v7 = v6;
  *(_QWORD *)(v7 + 24) = 0x3FF0000000000000;
  v14 = swift_weakInit(v7 + 64, 0);
  ObservationRegistrar.init()(v14);
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a3;
  *(_QWORD *)(v7 + 48) = a4;
  *(_QWORD *)(v7 + 56) = a5;
  *(_BYTE *)(v7 + 17) = a6;
  if ((a6 & 1) != 0)
    v15 = 2;
  else
    v15 = 0;
  *(_BYTE *)(v7 + 16) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10055BE8C(a2);
  if ((a6 & 1) == 0)
    sub_100936FF8(v7);
  swift_release(a3);
  swift_release(a1);
  swift_release(a2);
  return v7;
}

uint64_t destroy for VisibilityModifier(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_release(a1[3]);
}

void sub_10002234C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  double v25;
  double v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(CGFloat *@<X8>);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _QWORD v78[5];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  *(_QWORD *)&v59 = a1;
  v64 = a2;
  v3 = type metadata accessor for RoundedCornerStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v58 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BE3968);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BE3970);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v60 = sub_1000BA294(&qword_100BE3978);
  __chkstk_darwin(v60);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1000BA294(&qword_100BE3980);
  __chkstk_darwin(v63);
  v61 = v2;
  v62 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *((_OWORD *)v2 + 3);
  v79 = *((_OWORD *)v2 + 2);
  v80 = v15;
  v17 = *((_OWORD *)v2 + 2);
  v16 = *((_OWORD *)v2 + 3);
  v81 = *((_OWORD *)v2 + 4);
  v65 = v17;
  v66 = v16;
  v67 = *((_OWORD *)v2 + 4);
  *(_QWORD *)&v16 = *v2;
  v82 = v2[10];
  v68 = v2[10];
  v18 = 1.0 / *(double *)&v16;
  v19 = sub_1000BA294(&qword_100BE3988);
  State.wrappedValue.getter(&v69, v19);
  v20 = v72;
  v21 = sub_1000BA294(&qword_100BE3990);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v59, v21);
  *(_QWORD *)&v8[*(int *)(v6 + 36)] = v20;
  v65 = v79;
  v66 = v80;
  v67 = v81;
  v68 = v82;
  v57 = v19;
  State.wrappedValue.getter(&v69, v19);
  v22 = v73;
  sub_100037768((uint64_t)v8, (uint64_t)v11, &qword_100BE3968);
  v23 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = v22;
  sub_100021A14((uint64_t)v8, &qword_100BE3968);
  v65 = v79;
  v66 = v80;
  v67 = v81;
  v68 = v82;
  State.wrappedValue.getter(&v69, v19);
  v24 = v69;
  v25 = v70;
  v26 = v71;
  v27 = enum case for RoundedCornerStyle.continuous(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v29 = v58;
  v28(v58, enum case for RoundedCornerStyle.continuous(_:), v3);
  v30 = v29;
  Path.init(roundedRect:cornerRadius:style:)(&v74, v29, *(double *)&v24, *((double *)&v24 + 1), v25, v26, 16.0);
  v59 = v74;
  v31 = v75;
  v32 = v76;
  LOBYTE(v29) = v77;
  sub_100037768((uint64_t)v11, (uint64_t)v13, &qword_100BE3970);
  v33 = &v13[*(int *)(v60 + 36)];
  *(_OWORD *)v33 = v59;
  *((_QWORD *)v33 + 2) = v31;
  *((_QWORD *)v33 + 3) = v32;
  v33[32] = (char)v29;
  *(_WORD *)(v33 + 33) = 256;
  sub_100021A14((uint64_t)v11, &qword_100BE3970);
  v65 = v79;
  v66 = v80;
  v67 = v81;
  v68 = v82;
  State.wrappedValue.getter(&v69, v57);
  v34 = v69;
  v35 = v70;
  v36 = v71;
  v28(v30, v27, v56);
  Path.init(roundedRect:cornerRadius:style:)(v78, v30, *(double *)&v34, *((double *)&v34 + 1), v35, v36, 16.0);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v65, 0, 0, v18, 10.0, 0.0);
  Path.strokedPath(_:)(&v69, &v65);
  v60 = v69;
  v37 = v70;
  v38 = v71;
  LOBYTE(v4) = v72;
  sub_100158A28((uint64_t)&v65);
  v39 = sub_100154604((uint64_t)v78);
  v40 = static Color.white.getter(v39);
  v41 = Color.opacity(_:)(0.05);
  swift_release(v40);
  v43 = static Alignment.center.getter(v42);
  v45 = v44;
  v46 = (uint64_t)v13;
  v47 = (uint64_t)v13;
  v48 = v62;
  sub_100037768(v47, v62, &qword_100BE3978);
  v49 = v48 + *(int *)(v63 + 36);
  *(_OWORD *)v49 = v60;
  *(double *)(v49 + 16) = v37;
  *(double *)(v49 + 24) = v38;
  *(_BYTE *)(v49 + 32) = v4;
  *(_QWORD *)(v49 + 40) = v41;
  *(_WORD *)(v49 + 48) = 256;
  *(_QWORD *)(v49 + 56) = v43;
  *(_QWORD *)(v49 + 64) = v45;
  sub_100021A14(v46, &qword_100BE3978);
  v50 = swift_allocObject(&unk_100B74B80, 104, 7);
  v51 = v61;
  memcpy((void *)(v50 + 16), v61, 0x58uLL);
  v52 = swift_allocObject(&unk_100B74BA8, 104, 7);
  memcpy((void *)(v52 + 16), v51, 0x58uLL);
  v53 = v64;
  sub_100037768(v48, v64, &qword_100BE3980);
  v54 = (void (**)(CGFloat *@<X8>))(v53 + *(int *)(sub_1000BA294(&qword_100BE3998) + 36));
  *v54 = sub_10045A884;
  v54[1] = (void (*)(CGFloat *@<X8>))v50;
  v54[2] = (void (*)(CGFloat *@<X8>))sub_10045A890;
  v54[3] = (void (*)(CGFloat *@<X8>))v52;
  sub_10045A898((uint64_t)v51);
  sub_10045A898((uint64_t)v51);
  sub_100021A14(v48, &qword_100BE3980);
}

void sub_100022890(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;

  v62 = a3;
  v59 = a4;
  v6 = type metadata accessor for MainView(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1000BA294(&qword_100BFB9A8);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1000BA294(&qword_100BFB9B0);
  __chkstk_darwin(v60);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BFB9B8);
  __chkstk_darwin(v61);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BFB9C0);
  __chkstk_darwin(v57);
  v58 = (uint64_t)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DB418(a1, a1[3]);
  sub_10014D410(v8);
  KeyPath = swift_getKeyPath(&unk_1009BD160);
  v19 = a2[3];
  v18 = a2[4];
  sub_1000DB418(a2, v19);
  v20 = sub_1000BA294(&qword_100BF74C8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v19, v18);
  if (v64)
  {
    v21 = *(_BYTE *)sub_1000DB418(v63, v64);
    sub_10000AB54((uint64_t)v8, (uint64_t)v11, type metadata accessor for MainView);
    v22 = &v11[*(int *)(v9 + 36)];
    *(_QWORD *)v22 = KeyPath;
    v22[8] = v21;
    sub_100679D90((uint64_t)v8);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v63);
    v56 = swift_getKeyPath(&unk_1009BD188);
    v23 = type metadata accessor for SettingReader(0);
    v24 = static SettingReader.shared.getter(v23);
    if (qword_100BC2158 != -1)
      swift_once(&qword_100BC2158, sub_10015B1A4);
    v25 = qword_100CAEC78;
    v26 = DeviceSupportsStickyHeaders();
    v27 = SettingReader.isEnabled(_:with:)(v25, v26);
    swift_release(v24);
    v29 = static SettingReader.shared.getter(v28);
    if (qword_100BC2168 != -1)
      swift_once(&qword_100BC2168, sub_10015B17C);
    v30 = SettingReader.isEnabled(_:with:)(qword_100CAEC88, 1);
    swift_release(v29);
    v32 = static SettingReader.shared.getter(v31);
    if (qword_100BC2170 != -1)
      swift_once(&qword_100BC2170, sub_10015B154);
    v33 = SettingReader.isEnabled(_:with:)(qword_100CAEC90, 1);
    swift_release(v32);
    v35 = static SettingReader.shared.getter(v34);
    v36 = static Settings.VFX.foregroundEffects.getter();
    v37 = DeviceSupportsForegroundEffects();
    v38 = SettingReader.isEnabled(_:with:)(v36, v37);
    swift_release(v35);
    swift_release(v36);
    sub_100037794((uint64_t)v11, (uint64_t)v13, &qword_100BFB9A8);
    v39 = &v13[*(int *)(v60 + 36)];
    *(_QWORD *)v39 = v56;
    v39[8] = v27 & 1;
    v39[9] = v30 & 1;
    v39[10] = v33 & 1;
    v39[11] = v38 & 1;
    sub_100021AA4((uint64_t)v11, &qword_100BFB9A8);
    v40 = sub_1000BA294(&qword_100BFB8A8);
    v41 = (void *)UIApplicationDelegateAdaptor.wrappedValue.getter(v40);
    v42 = sub_10014C7F8();

    v43 = type metadata accessor for ObservableResolver(0);
    sub_10000F1C8((unint64_t *)&qword_100BD0930, (uint64_t (*)(uint64_t))&type metadata accessor for ObservableResolver);
    v45 = static ObservableObject.environmentStore.getter(v43, v44);
    sub_100037794((uint64_t)v13, (uint64_t)v15, &qword_100BFB9B0);
    v46 = (uint64_t *)&v15[*(int *)(v61 + 36)];
    *v46 = v45;
    v46[1] = v42;
    sub_100021AA4((uint64_t)v13, &qword_100BFB9B0);
    v47 = a2[3];
    v48 = a2[4];
    sub_1000DB418(a2, v47);
    v49 = sub_1000BA294(&qword_100BE1380);
    v50 = dispatch thunk of ResolverType.resolve<A>(_:)(v49, v49, v47, v48);
    if (v50)
    {
      v51 = v50;
      sub_10003D2DC(&qword_100BF76A8, &qword_100BE1380);
      v53 = static ObservableObject.environmentStore.getter(v49, v52);
      v54 = v58;
      sub_100037794((uint64_t)v15, v58, &qword_100BFB9B8);
      v55 = (uint64_t *)(v54 + *(int *)(v57 + 36));
      *v55 = v53;
      v55[1] = v51;
      sub_100021AA4((uint64_t)v15, &qword_100BFB9B8);
      sub_1000F111C(v54, v59, &qword_100BFB9C0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100022DA0(int a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[5];
  _QWORD *v61;

  v58 = a5;
  v50 = a4;
  v54 = a3;
  v57 = a1;
  LODWORD(v59) = a1 & 1;
  v56 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v45 - v16;
  v18 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(unsigned __int8 *)(v5 + 16);
  sub_10000AB54((uint64_t)a2, (uint64_t)v20, v22);
  if (v21 == (_DWORD)v59)
  {
    sub_1000215BC((uint64_t)v20, type metadata accessor for LocationViewModel);
  }
  else
  {
    v46 = v15;
    v47 = v12;
    v48 = a2;
    v49 = v10;
    v23 = v58;
    v59 = v11;
    v25 = v55;
    v24 = v56;
    v26 = v57;
    v27 = v20[*(int *)(v18 + 52)];
    sub_1000215BC((uint64_t)v20, type metadata accessor for LocationViewModel);
    if ((v27 & 1) != 0)
    {
      v28 = v5;
      v29 = v54;
      if ((v26 & 1) != 0)
      {
        v30 = sub_10009FFE0();
        v45 = static OS_dispatch_queue.main.getter(v30);
        v31 = v46;
        static DispatchTime.now()();
        + infix(_:_:)(v31);
        v48 = *(void (**)(char *, uint64_t))(v47 + 8);
        v48(v31, v59);
        v32 = (_QWORD *)swift_allocObject(&unk_100B659B8, 40, 7);
        v33 = v50;
        v32[2] = v29;
        v32[3] = v33;
        v32[4] = v23;
        aBlock[4] = sub_100153904;
        v61 = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100121D84;
        aBlock[3] = &unk_100B659D0;
        v34 = v28;
        v35 = _Block_copy(aBlock);
        v36 = v61;
        swift_unknownObjectRetain(v29);
        swift_retain();
        swift_release(v36);
        v37 = v49;
        static DispatchQoS.unspecified.getter(v38);
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        v40 = v39;
        v41 = sub_1000BA294(&qword_100BD4F10);
        sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v24, v40);
        v43 = (void *)v45;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v37, v25, v35);
        v44 = v35;
        v28 = v34;
        _Block_release(v44);

        (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v24);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v52);
        v48(v17, v59);
      }
      else
      {
        sub_1000DB418((_QWORD *)(v54 + 32), *(_QWORD *)(v54 + 56));
        sub_100499648((uint64_t)v48);
        *(_BYTE *)(v23 + 72) = 0;
        sub_10012DFFC();
      }
      *(_BYTE *)(v28 + 16) = v26 & 1;
    }
  }
}

void sub_100023164(uint64_t a1, char a2, char a3, char a4, int a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t active;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  char v23;
  uint64_t v24;
  _BYTE v25[12];
  int v26;

  v26 = a5;
  sub_1000BA294(&qword_100BC5F40);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_10004A2E8();
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  sub_10009D98C();
  v17 = __chkstk_darwin(v16);
  v19 = &v25[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v21 = &v25[-v20];
  sub_10015382C(a1, v7);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, active) == 1)
  {
    sub_1000F0D1C(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v21);
    sub_100021A68(v7, &qword_100BC5F40);
  }
  else
  {
    sub_1000F13F0(v7, (uint64_t)v21);
  }
  sub_1000F13F0((uint64_t)v21, (uint64_t)v19);
  if (a2 == 3)
    a2 = *(_BYTE *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState);
  if (a3 == 2)
    v22 = *(_BYTE *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState);
  else
    v22 = a3 & 1;
  if (a4 == 4)
    a4 = *(_BYTE *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger);
  if (v26 == 2)
    v23 = *(_BYTE *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle);
  else
    v23 = v26 & 1;
  if (a6 == 3)
    a6 = *(_BYTE *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState);
  v24 = type metadata accessor for LocationViewerViewState._Storage(0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  sub_100133204((uint64_t)v19, a2, v22, a4, v23, a6);
}

void sub_100023374(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for LocationModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  v37 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BF1FA8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PreprocessedWeatherData(0);
  __chkstk_darwin(v11);
  v34 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocationViewerInput(0);
  v20 = *(int *)(v19 + 72);
  v35 = a1;
  sub_10003773C(a1 + v20, (uint64_t)v15, &qword_100BC3380);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    v21 = &qword_100BC3380;
    v22 = (uint64_t)v15;
  }
  else
  {
    sub_10007C77C((uint64_t)v15, (uint64_t)v18, type metadata accessor for LocationWeatherDataState);
    sub_1000FB3A4();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) != 1)
    {
      v29 = v34;
      sub_10007C77C((uint64_t)v10, v34, type metadata accessor for PreprocessedWeatherData);
      v30 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v7, v35 + *(int *)(v19 + 20), v36);
      v23 = sub_100029E14();
      v27 = v31;
      v24 = sub_100015398();
      v25 = v32;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v30);
      sub_1000215BC((uint64_t)v18, type metadata accessor for LocationWeatherDataState);
      v33 = (uint64_t *)(v29 + *(int *)(v11 + 60));
      v26 = *v33;
      v28 = v33[1];
      swift_bridgeObjectRetain(v28);
      sub_1000215BC(v29, type metadata accessor for PreprocessedWeatherData);
      goto LABEL_7;
    }
    sub_1000215BC((uint64_t)v18, type metadata accessor for LocationWeatherDataState);
    v21 = &qword_100BF1FA8;
    v22 = (uint64_t)v10;
  }
  sub_100021A14(v22, v21);
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0xE000000000000000;
  v28 = 0xE000000000000000;
LABEL_7:
  *a2 = v23;
  a2[1] = v27;
  a2[2] = v24;
  a2[3] = v25;
  a2[4] = v26;
  a2[5] = v28;
}

void *sub_100023644(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int64x2_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64x2_t *v24;
  unsigned int *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64x2_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;

  v2 = type metadata accessor for PrecipitationRelevancyWindow(0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v41 = v4;
  sub_1000BA294(&qword_100BCE370);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BCE378);
  v45 = *(_QWORD *)(v9 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v44 = v11;
  sub_1000BA294(&qword_100BE7C80);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v16 = type metadata accessor for AirQuality(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_100098728();
  v20 = v19 - v18;
  v47 = &_swiftEmptySetSingleton;
  if (qword_100BC2690 != -1)
    swift_once(&qword_100BC2690, sub_10015A928);
  v21 = qword_100CAF4F8;
  sub_1001359E4();
  sub_1000C41E4(v21);
  if (v46 == 1)
    sub_1000BB7CC();
  if (qword_100BC26A8 != -1)
    swift_once(&qword_100BC26A8, sub_10015A570);
  sub_1000C41E4(qword_100CAF510);
  if (v46 == 1)
    sub_1000BCC5C();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.airQuality.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16) == 1)
  {
    v22 = sub_100021A68(v15, &qword_100BE7C80);
  }
  else
  {
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v20, v15, v16);
    if ((AirQuality.isSignificant.getter(v23) & 1) != 0)
      sub_1000BB7CC();
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
  }
  WeatherDataModel.minuteForecast.getter(v22);
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9) == 1)
  {
    sub_100021A68(v8, &qword_100BCE370);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v44, v8, v9);
    if ((a2 & 1) != 0)
    {
      v24 = v41;
      *v41 = vdupq_n_s64(0x40AC200000000000uLL);
      v25 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.window(_:);
    }
    else
    {
      v25 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.default(_:);
      v24 = v41;
    }
    (*(void (**)(int64x2_t *, _QWORD, uint64_t))(v42 + 104))(v24, *v25, v43);
    v26 = Forecast<>.isRelevant(in:)(v24);
    (*(void (**)(int64x2_t *, uint64_t))(v42 + 8))(v24, v43);
    if ((v26 & 1) != 0)
      sub_1000BCC5C();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v9);
  }
  if (qword_100BC2740 != -1)
    swift_once(&qword_100BC2740, sub_100135A20);
  if (byte_100C0EB18 == 1)
  {
    if (qword_100BC2750 != -1)
      swift_once(&qword_100BC2750, sub_10087C2CC);
    if (byte_100C0EB28 == 1)
      sub_1000BB7CC();
    if (qword_100BC2758 != -1)
      swift_once(&qword_100BC2758, sub_10087C2F0);
    if (byte_100C0EB29 == 1)
      sub_1000BCC5C();
    if (qword_100BC2760 != -1)
      swift_once(&qword_100BC2760, sub_10087C314);
    if (byte_100C0EB2A == 1)
      sub_100600A44(&v46, 2);
    if (qword_100BC2768 != -1)
      swift_once(&qword_100BC2768, sub_10087C338);
    if (byte_100C0EB2B == 1)
      sub_100600A44(&v46, 3);
  }
  if (qword_100BC2770 != -1)
    swift_once(&qword_100BC2770, sub_100135B08);
  if (byte_100C0EB2C == 1)
  {
    sub_1000BA294(&qword_100C0EBD0);
    v27 = *(_QWORD *)(sub_1000DE0E8() - 8);
    v28 = *(_QWORD *)(v27 + 72);
    v29 = *(unsigned __int8 *)(v27 + 80);
    v30 = (v29 + 32) & ~v29;
    v31 = sub_1000C4854(v30 + 2 * v28, v29);
    *(_OWORD *)(v31 + 16) = xmmword_10097DA20;
    v32 = v31 + v30;
    sub_10087C35C(v32);
    v33 = v32 + v28;
  }
  else
  {
    if (qword_100BC2778 != -1)
      swift_once(&qword_100BC2778, sub_100135B2C);
    if (byte_100C0EB2D != 1)
    {
      WeatherDataModel.weatherAlerts.getter();
      return v47;
    }
    sub_1000BA294(&qword_100C0EBD0);
    v34 = *(_QWORD *)(sub_1000DE0E8() - 8);
    v35 = *(_QWORD *)(v34 + 72);
    v36 = *(unsigned __int8 *)(v34 + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = sub_1000C4854(v37 + v35, v36);
    *(_OWORD *)(v38 + 16) = xmmword_10097CA50;
    v33 = v38 + v37;
  }
  sub_10087C810(v33);
  return v47;
}

_QWORD *sub_100023BE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  swift_bridgeObjectRetain(v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BC3660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = *(_QWORD *)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t sub_100023CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1000BE79C();
  sub_1000BDCA4();
  swift_bridgeObjectRelease(*v5);
  v6 = (uint64_t)v5 + *(int *)(sub_1000BA294(&qword_100BD6FC0) + 36);
  v7 = sub_10011DC84();
  if (!sub_1000CF764(v6))
    sub_1000C1DE4();
  v8 = (uint64_t)v5 + *(int *)(v0 + 20);
  if (!sub_1000CF764(v8))
    sub_100099254(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
  return sub_1000B4380(v1, v3 + v4, v2 | 7);
}

void sub_100023D50(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t started;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;

  v32 = a4;
  v33 = a1;
  v35 = a2;
  v34 = type metadata accessor for PrivacyConfiguration(0);
  v5 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SettingReader(0);
  v13 = static SettingReader.shared.getter(v12);
  v14 = static Settings.WeatherAnalytics.Debugging.sendAppSessionStartAndEventsForNonDnuUsers.getter();
  SettingReader.read<A>(_:)(&v36);
  swift_release(v13);
  swift_release(v14);
  v15 = v36;
  v17 = a3[3];
  v16 = a3[4];
  sub_1000DB418(a3, v17);
  v18 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v17, v16);
  AppConfiguration.privacy.getter(v18);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = PrivacyConfiguration.allowAppSessionEventForNonDNUUsers.getter(v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v34);
  v21 = 1;
  if ((v15 & 1) == 0 && (v20 & 1) == 0)
    v21 = AccessTracker.diagnosticSubmissionAllowed.getter(1);
  switch(v35)
  {
    case 0:
    case 3:
      return;
    case 1:
      if ((v21 & 1) != 0)
      {
        started = type metadata accessor for AppSessionStartEvent(0);
        sub_10000F1C8(&qword_100BD6648, (uint64_t (*)(uint64_t))&type metadata accessor for AppSessionStartEvent);
        v36 = 0u;
        v37 = 0u;
        AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(started, 0, &v36, 0, 0, started, v23);
        sub_100021A14((uint64_t)&v36, &qword_100C0B800);
        v24 = type metadata accessor for AppSessionEndEvent(0);
        sub_10000F1C8(&qword_100BD6640, (uint64_t (*)(uint64_t))&type metadata accessor for AppSessionEndEvent);
        AccessTracker.time<A>(_:submitAndRestartWithSession:)(v24, 0, v24, v25);
        sub_100127650();
      }
      break;
    case 2:
      if ((v21 & 1) != 0)
      {
        v26 = type metadata accessor for AppSessionEndEvent(0);
        v36 = 0u;
        v37 = 0u;
        sub_10000F1C8(&qword_100BD6640, (uint64_t (*)(uint64_t))&type metadata accessor for AppSessionEndEvent);
        v28 = v27;
        v29 = v33;
        swift_retain();
        AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v26, 0, &v36, sub_1002F9438, v29, v26, v28);
        swift_release(v29);
        sub_100021A14((uint64_t)&v36, &qword_100C0B800);
      }
      else
      {
        v30 = type metadata accessor for ReferralData(0);
        sub_10000F1C8(&qword_100BD6638, (uint64_t (*)(uint64_t))&type metadata accessor for ReferralData);
        AccessTracker.clearStack<A>(of:includeParentTrackers:)(v30, 1, v30, v31);
      }
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005BLL, 0x80000001009FA3C0, "Weather/SessionEventsAndDataCoordinator.swift", 45, 2);
      __break(1u);
      break;
  }
}

#error "100024178: call analysis failed (funcsize=65)"

uint64_t sub_1000241B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for MeasuredLocationViewerView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v0, (uint64_t)v4, type metadata accessor for MeasuredLocationViewerView);
  type metadata accessor for MainActor(0);
  v5 = static MainActor.shared.getter();
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = v7 + v3;
  v9 = v6 | 7;
  v10 = swift_allocObject(&unk_100B7E058, v8, v6 | 7);
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v4, v10 + v7, type metadata accessor for MeasuredLocationViewerView);
  sub_100080C0C(v0, (uint64_t)v4, type metadata accessor for MeasuredLocationViewerView);
  v11 = static MainActor.shared.getter();
  v12 = swift_allocObject(&unk_100B7E080, v8, v9);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10007802C((uint64_t)v4, v12 + v7, type metadata accessor for MeasuredLocationViewerView);
  Binding.init(get:set:)(&v15, sub_100537C30, v10, sub_100537D6C, v12, &type metadata for Bool);
  return v15;
}

uint64_t sub_100024310(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1000BA294(&qword_100BC3BA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TemperatureHighLowTextVertical(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  if (*(_BYTE *)(v9 + 136) == 1)
  {
    v10 = *(_QWORD *)(v9 + 104);
    v11 = *(_QWORD *)(v9 + 112);
    v12 = *(_QWORD *)(v9 + 120);
    v13 = *(_QWORD *)(v9 + 128);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    TemperatureHighLowTextVertical.init(highTemperature:lowTemperature:showNumericOnlyHighLow:scaleFactor:additionalSpacing:)(v10, v11, v12, v13, 0, 1.6, 8.0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    swift_storeEnumTagMultiPayload(v4, v2, 0);
    sub_10007A100((uint64_t)&unk_100BC3BA8);
    _ConditionalContent<>.init(storage:)(v4, v5, &type metadata for Text, v14, &protocol witness table for Text);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    *(_QWORD *)v4 = sub_10007CFFC();
    *((_QWORD *)v4 + 1) = v16;
    v4[16] = v17 & 1;
    *((_QWORD *)v4 + 3) = v18;
    swift_storeEnumTagMultiPayload(v4, v2, 1);
    sub_10007A100((uint64_t)&unk_100BC3BA8);
    return _ConditionalContent<>.init(storage:)(v4, v5, &type metadata for Text, v19, &protocol witness table for Text);
  }
}

double sub_100024504(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(uint64_t (**)(uint64_t))(Strong + 16);
    memset(v18, 0, sizeof(v18));
    v19 = 0;
    v20 = v2;
    v21 = 1;
    swift_bridgeObjectRetain(v2);
    sub_10009FF10((uint64_t)v18, v7);
    sub_100021A14((uint64_t)v18, &qword_100BD3378);
    v9 = static os_signpost_type_t.event.getter(v8);
    v10 = *(void **)(v6 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_logger);
    v11 = v6 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_signpostID;
    v12 = sub_1000BA294(&qword_100BC3C38);
    v13 = swift_allocObject(v12, 72, 7);
    *(_OWORD *)(v13 + 16) = xmmword_10097CA50;
    swift_bridgeObjectRetain(v2);
    v14 = v10;
    v15 = sub_10009F84C(v2);
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 56) = &type metadata for String;
    *(_QWORD *)(v13 + 64) = sub_1000B2E24();
    *(_QWORD *)(v13 + 32) = v15;
    *(_QWORD *)(v13 + 40) = v17;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v9, &_mh_execute_header, v14, "Weather:weatherDataActionsDebounced", 35, 2, v11, "actions %{private}s", 19, 2, v13);
    swift_release(v6);

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100024688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];

  v3 = v2;
  v24 = a2;
  v25 = a1;
  v4 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v11 = v2[1];
  swift_retain();
  sub_100042A08();
  swift_release(v11);
  v12 = v3[2];
  v13 = v3[3];
  sub_100043CA8((uint64_t)(v3 + 4), (uint64_t)v26);
  v14 = v3[10];
  swift_retain();
  sub_100042A08();
  swift_release(v11);
  v15 = sub_10000EC58();
  v17 = v16;
  v18 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v19 = v18(v8, v4);
  if (v17)
  {
    v20 = v3[9];
  }
  else
  {
    v20 = 0;
    v15 = 0;
  }
  v21 = static Color.black.getter(v19);
  sub_100011F28((uint64_t)v10, v12, v13, (uint64_t)v26, v14, v20, v15, v17, v24, 0, v21);
  swift_release(v21);
  swift_bridgeObjectRelease(v17);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  return v18(v10, v4);
}

_QWORD *sub_100024804(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  _QWORD v72[5];
  __int128 v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (!v85)
  {
    __break(1u);
    goto LABEL_16;
  }
  v67 = v86;
  v6 = a1[3];
  v7 = a1[4];
  sub_1000DB418(a1, v6);
  v8 = sub_1000BA294(&qword_100BC43F0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v8, v8, v6, v7);
  v9 = v83;
  if (!v83)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v64 = v87;
  v65 = v88;
  v66 = v85;
  v11 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v11);
  v12 = type metadata accessor for WeatherService(0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:name:)(v12, 0x5372656874616577, 0xEE00656369767265, v12, v11, v10);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = (uint64_t)result;
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:name:)(v12, 0xD00000000000001ALL, 0x8000000100A0E100, v12, v14, v15);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v16 = (uint64_t)result;
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BED520);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!v82)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BCF678);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v80)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BF75C0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  if (!v78)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BF7688);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v76)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = sub_1000BA294(&qword_100BF65C8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (!v74)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v63 = v84;
  v32 = a1[3];
  v33 = a1[4];
  sub_1000DB418(a1, v32);
  v34 = sub_1000BA294(&qword_100BF7500);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v34, v34, v32, v33);
  if (!*(_QWORD *)((char *)&v72[3] + 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = a1[3];
  v36 = a1[4];
  sub_1000DB418(a1, v35);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(v72, &type metadata for Bool, 0xD000000000000012, 0x80000001009F5CF0, &type metadata for Bool, v35, v36);
  v37 = v72[0];
  if (LOBYTE(v72[0]) == 2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v38 = a1[3];
  v39 = a1[4];
  sub_1000DB418(a1, v38);
  v40 = sub_1000BA294(&qword_100BF74F8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v40, v40, v38, v39);
  if (!v71)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v61 = v16;
  v62 = v13;
  v41 = a1[3];
  v42 = a1[4];
  sub_1000DB418(a1, v41);
  v43 = sub_1000BA294(&qword_100BED530);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v43, v43, v41, v42);
  if (v69)
  {
    v44 = sub_100068EB4((uint64_t)v77, v78);
    v45 = __chkstk_darwin(v44);
    v47 = (uint64_t *)((char *)&v60 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v48 + 16))(v47, v45);
    v49 = sub_100068EB4((uint64_t)v75, v76);
    v50 = __chkstk_darwin(v49);
    v52 = (uint64_t *)((char *)&v60 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v53 + 16))(v52, v50);
    v54 = sub_100068EB4((uint64_t)v70, v71);
    v55 = __chkstk_darwin(v54);
    v57 = (uint64_t *)((char *)&v60 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v58 + 16))(v57, v55);
    v59 = sub_100614560(v66, v67, v64, v65, v9, v63, v62, v61, &v81, &v79, *v47, *v52, &v73, (__int128 *)((char *)v72 + 1), v37 & 1, *v57, &v68);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v70);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v75);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
    return (_QWORD *)v59;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100024D70(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;

  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_10009D98C();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = (uint64_t *)(v10 - v9);
  v12 = type metadata accessor for HourlyForecastComponent(0);
  sub_100095B78(a1 + *(int *)(v12 + 20), (uint64_t)v11, type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  LODWORD(v12) = *(unsigned __int8 *)(a1 + *(int *)(v12 + 40));
  v13 = *v11;
  swift_bridgeObjectRetain(*v11);
  if ((_DWORD)v12 == 1)
  {
    sub_100546664(v13);
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    v13 = v15;
  }
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v37._object = (void *)0x8000000100A05620;
  v17._countAndFlagsBits = 0x4620796C72756F48;
  v17._object = (void *)0xEF7473616365726FLL;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0xD000000000000041;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v37);

  v31 = v19;
  v20 = String.init<A>(_:)(&v31, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v22 = v21;
  v31._countAndFlagsBits = v20;
  v31._object = v21;
  v32 = 0x6B636F6C63;
  v33 = 0xE500000000000000;
  v34 = 1;
  v35 = 0;
  v36 = 0;
  sub_1001246D4(a1, (uint64_t)v11, (uint64_t)&v31, v7);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease(0xE500000000000000);
  swift_bridgeObjectRelease(v22);
  sub_1000215BC((uint64_t)v11, type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  v23 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v24 = (uint64_t *)(a2 + v23[5]);
  *v24 = v13;
  v25 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v24, v25, 3);
  v26 = a2 + v23[7];
  v27 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v28 = type metadata accessor for TemperatureChartKind(0);
  sub_1000C3AB8(v28);
  v29 = type metadata accessor for DetailCondition(0);
  sub_1000C3AB8(v29);
  *(_BYTE *)(v26 + v27) = 0;
  v30 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v26, v30, 2);
  _s7Weather24LocationCompositionStateOwst_0(v26, 0, 1, v30);
  sub_10007C77C(v7, a2, type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v23[6]) = 259;
}

uint64_t sub_100025038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v0 = type metadata accessor for CallbackScope(0);
  __chkstk_darwin(v0);
  sub_100098728();
  v3 = v2 - v1;
  v4 = type metadata accessor for Scope(0);
  __chkstk_darwin(v4);
  sub_100098728();
  sub_1000B4DB4();
  v5 = sub_1000BA294(&qword_100BE0098);
  RegistrationContainer.register<A>(_:name:factory:)(v5, 0, 0, sub_10078A28C, 0, v5);
  sub_1000DD390();
  sub_1000BB5A4();
  v6 = sub_1000C4974();
  swift_release(v6);
  sub_10009D330();
  sub_1000C409C();
  sub_1000B4DB4();
  v7 = sub_1000BA294(&qword_100BD44F0);
  sub_1000BA3CC(v7, v8, v9, (uint64_t)sub_10078A2C4);
  sub_1000DD390();
  sub_1000BB5A4();
  v10 = sub_1000C4974();
  swift_release(v10);
  sub_10009D330();
  sub_1000C409C();
  sub_1000B4DB4();
  v11 = sub_1000BA294(&qword_100BF75F8);
  sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_10078A51C);
  sub_1000DD390();
  sub_1000BB5A4();
  v14 = sub_1000C4974();
  swift_release(v14);
  sub_10009D330();
  sub_1000C409C();
  sub_1000B4DB4();
  v15 = sub_1000BA294(&qword_100C055B8);
  sub_1000BA3CC(v15, v16, v17, (uint64_t)sub_10078A5E8);
  sub_1000DD390();
  sub_1000BB5A4();
  v18 = sub_1000C4974();
  swift_release(v18);
  sub_10009D330();
  sub_1000C409C();
  sub_1000B4DB4();
  v19 = sub_1000BA294(&qword_100C055C0);
  sub_1000BA3CC(v19, v20, v21, (uint64_t)sub_10078A824);
  sub_1000DD390();
  sub_1000BB5A4();
  v22 = sub_1000C4974();
  swift_release(v22);
  sub_10009D330();
  sub_1000C409C();
  v24 = ProxyContainer.private.getter(v23);
  RegistrationContainer.lazy(block:)(sub_10078A950, 0);
  swift_release(v24);
  sub_1000DF944();
  v25 = v32;
  v26 = v33;
  sub_1000DB418(v31, v32);
  sub_1000C58B0();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v5, v3, sub_10078B504, 0, v5, v25, v26);
  sub_1000DA1E4();
  sub_1000DB80C();
  sub_1000DF944();
  v27 = v32;
  v28 = v33;
  sub_1000DB418(v31, v32);
  v29 = type metadata accessor for ShortcutItemHandlerManager(0);
  sub_1000C58B0();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v29, v3, sub_10078B62C, 0, v29, v27, v28);
  sub_1000DA1E4();
  return sub_1000DB80C();
}

uint64_t sub_1000252F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t, __n128);
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char v79[24];
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char v83[32];

  v73 = type metadata accessor for UnitConfiguration.Temperature(0);
  v69 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v65 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1000BA294(&qword_100BE06D8);
  __chkstk_darwin(v70);
  v72 = (uint64_t)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1000BA294(&qword_100BD7148);
  __chkstk_darwin(v3);
  v66 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v76 = (char *)&v64 - v6;
  v77 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v77);
  v74 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BCA0E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC3340);
  __chkstk_darwin(v11);
  v68 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - v17;
  v19 = type metadata accessor for Locale(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v64 - v24;
  static Locale.current.getter(v26);
  v27 = v20;
  v28 = *(void (**)(char *, char *, uint64_t, __n128))(v20 + 16);
  v78 = v25;
  v67 = v28;
  ((void (*)(char *, char *, uint64_t))v28)(v18, v25, v19);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v19);
  v75 = v0;
  v29 = v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastLocale;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastLocale, v83, 0, 0);
  v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10007EBC8((uint64_t)v18, (uint64_t)v10, &qword_100BC3340);
  sub_10007EBC8(v29, v30, &qword_100BC3340);
  v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v19);
  v71 = v27;
  if (v31 == 1)
  {
    sub_100021AA4((uint64_t)v18, &qword_100BC3340);
    v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v19);
    v33 = v73;
    if (v32 == 1)
    {
      sub_100021AA4((uint64_t)v10, &qword_100BC3340);
      v34 = (uint64_t)v74;
      v35 = v75;
      goto LABEL_9;
    }
  }
  else
  {
    sub_10007EBC8((uint64_t)v10, (uint64_t)v15, &qword_100BC3340);
    if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v19) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v22, v30, v19);
      sub_100086DA4(&qword_100BCA0F8, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t)&protocol conformance descriptor for Locale);
      v38 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v22, v19, v37);
      v39 = *(void (**)(char *, uint64_t))(v27 + 8);
      v39(v22, v19);
      sub_100021AA4((uint64_t)v18, &qword_100BC3340);
      v39(v15, v19);
      sub_100021AA4((uint64_t)v10, &qword_100BC3340);
      v34 = (uint64_t)v74;
      v35 = v75;
      v36 = v77;
      v33 = v73;
      if ((v38 & 1) != 0)
        goto LABEL_9;
      goto LABEL_8;
    }
    sub_100021AA4((uint64_t)v18, &qword_100BC3340);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v19);
    v33 = v73;
  }
  sub_100021AA4((uint64_t)v10, &qword_100BCA0E0);
  v34 = (uint64_t)v74;
  v35 = v75;
  v36 = v77;
LABEL_8:
  v40 = *(uint64_t (**)(uint64_t))(v35 + 16);
  v41 = *(_QWORD *)(v35 + 24);
  v42 = v78;
  v43 = v67;
  ((void (*)(uint64_t, char *, uint64_t))v67)(v34, v78, v19);
  v44 = type metadata accessor for EnvironmentAction(0);
  swift_storeEnumTagMultiPayload(v34, v44, 2);
  swift_storeEnumTagMultiPayload(v34, v36, 2);
  v82 = 0;
  v80 = 0u;
  v81 = 0u;
  swift_retain();
  sub_1000A5EBC(v34, (uint64_t)&v80, v40);
  sub_100021AA4((uint64_t)&v80, (uint64_t *)&unk_100BFFA10);
  sub_1000A0AA4(v34);
  v45 = swift_release(v41);
  v46 = (uint64_t)v68;
  v43(v68, v42, v19, v45);
  _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, v19);
  swift_beginAccess(v29, &v80, 33, 0);
  sub_10015BA94(v46, v29);
  swift_endAccess(&v80);
LABEL_9:
  v47 = type metadata accessor for UnitManager(0);
  v48 = static UnitManager.standard.getter(v47);
  v49 = (uint64_t)v76;
  UnitManager.systemWideTemperatureUnit.getter();
  swift_release(v48);
  v50 = v35 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastTemperatureUnit;
  swift_beginAccess(v35 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastTemperatureUnit, v79, 0, 0);
  v51 = v72;
  v52 = v72 + *(int *)(v70 + 48);
  sub_10007EBC8(v49, v72, &qword_100BD7148);
  sub_10007EBC8(v50, v52, &qword_100BD7148);
  if (_s7Weather24LocationCompositionStateOwet_0(v51, 1, v33) != 1)
  {
    v53 = v66;
    sub_10007EBC8(v51, v66, &qword_100BD7148);
    if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v33) != 1)
    {
      v54 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v65, v52, v33);
      sub_100086DA4(qword_100BE06E0, (uint64_t (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature, (uint64_t)&protocol conformance descriptor for UnitConfiguration.Temperature);
      LODWORD(v75) = dispatch thunk of static Equatable.== infix(_:_:)(v53, v54, v33, v55);
      v56 = v51;
      v57 = *(void (**)(char *, uint64_t))(v69 + 8);
      v57(v54, v33);
      v57((char *)v53, v33);
      sub_100021AA4(v56, &qword_100BD7148);
      if ((v75 & 1) != 0)
        goto LABEL_16;
LABEL_17:
      swift_beginAccess(v50, &v80, 33, 0);
      sub_10015A308(v49, v50);
      swift_endAccess(&v80);
      v60 = *(uint64_t (**)(uint64_t))(v35 + 16);
      v59 = *(_QWORD *)(v35 + 24);
      sub_10007EBC8(v49, v34, &qword_100BD7148);
      v61 = type metadata accessor for ConfiguredUnitsAction(0);
      swift_storeEnumTagMultiPayload(v34, v61, 1);
      v62 = type metadata accessor for EnvironmentAction(0);
      swift_storeEnumTagMultiPayload(v34, v62, 10);
      swift_storeEnumTagMultiPayload(v34, v77, 2);
      v82 = 0;
      v80 = 0u;
      v81 = 0u;
      swift_retain();
      sub_1000A5EBC(v34, (uint64_t)&v80, v60);
      sub_100021AA4((uint64_t)&v80, (uint64_t *)&unk_100BFFA10);
      sub_1000A0AA4(v34);
      swift_release(v59);
      v58 = v49;
      goto LABEL_18;
    }
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v53, v33);
LABEL_14:
    sub_100021AA4(v51, &qword_100BE06D8);
    goto LABEL_17;
  }
  if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v33) != 1)
    goto LABEL_14;
  sub_100021AA4(v51, &qword_100BD7148);
LABEL_16:
  v58 = v49;
LABEL_18:
  sub_100021AA4(v58, &qword_100BD7148);
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v78, v19);
}

void sub_100025AF4()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1000986AC();
  v23 = v1;
  v3 = v2;
  v24 = v4;
  v25 = v5;
  v7 = v6;
  v9 = v8;
  v10 = sub_1000BAD84();
  v26 = *(_QWORD *)(v10 - 8);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = v0[18];
  v16 = v0[19];
  sub_1000DB418(v0 + 15, v15);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v15, v16);
  v17 = *(_QWORD *)(v9 + 16);
  if (v17)
  {
    v22 = v10;
    sub_1000992C4();
    sub_1000BBD24();
    v19 = v9 + v18;
    v21 = *(_QWORD *)(v20 + 72);
    sub_10003BCC8();
    do
    {
      sub_1000FCEE8(v19, v7, v24, v25, v3, v14, v23 & 1, 0);
      v19 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v9);
    v10 = v22;
  }
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v10);
  sub_100098640();
}

_QWORD *sub_100025C0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[11];
  v8 = a1[13];
  v12 = a1[15];
  v13 = a1[17];
  v14 = a1[19];
  v9 = a1[23];
  v10 = a1[25];
  swift_bridgeObjectRetain(a1[21]);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t sub_100025CF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = type metadata accessor for NotificationSubscription.Kind(0);
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = swift_allocObject(&unk_100B84EA8, 24, 7);
  v47 = v4;
  *(_QWORD *)(v4 + 16) = _swiftEmptyArrayStorage;
  v5 = (uint64_t *)(v4 + 16);
  v6 = swift_allocObject(&unk_100B84EA8, 24, 7);
  v46 = v6;
  *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
  v7 = (uint64_t *)(v6 + 16);
  v8 = swift_allocObject(&unk_100B84ED0, 17, 7);
  v45 = v8;
  *(_BYTE *)(v8 + 16) = 0;
  v9 = (_BYTE *)(v8 + 16);
  v10 = swift_allocObject(&unk_100B84ED0, 17, 7);
  v44 = v10;
  *(_BYTE *)(v10 + 16) = 0;
  v11 = (_BYTE *)(v10 + 16);
  v12 = swift_allocObject(&unk_100B84ED0, 17, 7);
  v43 = v12;
  *(_BYTE *)(v12 + 16) = 0;
  v13 = (_BYTE *)(v12 + 16);
  v14 = swift_allocObject(&unk_100B84ED0, 17, 7);
  v42 = v14;
  *(_BYTE *)(v14 + 16) = 0;
  v15 = (_BYTE *)(v14 + 16);
  v16 = v0[11];
  v17 = v0[12];
  v37 = v0 + 8;
  v38 = v0;
  v18 = sub_1000DB418(v0 + 8, v16);
  static NotificationSubscription.Kind.all.getter(v18);
  v39 = v3;
  v19 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)(v3, v16, v17);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = *(_QWORD *)(type metadata accessor for NotificationSubscription(0) - 8);
    v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v23 = v19;
    v24 = *(_QWORD *)(v21 + 72);
    v41 = v23;
    swift_bridgeObjectRetain(v23);
    do
    {
      sub_10000B7A4(v22, v5, v9, v11, v7, v13, v15);
      v22 += v24;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n(v41, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v19);
  }
  v25 = v38;
  v26 = v38[11];
  v27 = v38[12];
  sub_1000DB418(v37, v26);
  v28 = dispatch thunk of NotificationSubscriptionManagerType.resubscribedAfterDeviceRestoreOnce()(v26, v27);
  v29 = swift_allocObject(&unk_100B84EF8, 80, 7);
  *(_BYTE *)(v29 + 16) = v28 & 1;
  v31 = v46;
  v30 = v47;
  *(_QWORD *)(v29 + 24) = v25;
  *(_QWORD *)(v29 + 32) = v30;
  v33 = v44;
  v32 = v45;
  *(_QWORD *)(v29 + 40) = v31;
  *(_QWORD *)(v29 + 48) = v32;
  v35 = v42;
  v34 = v43;
  *(_QWORD *)(v29 + 56) = v33;
  *(_QWORD *)(v29 + 64) = v34;
  *(_QWORD *)(v29 + 72) = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  asyncMain(block:)(sub_10061A6F0, v29);
  swift_release(v30);
  swift_release(v31);
  swift_release(v32);
  swift_release(v33);
  swift_release(v34);
  swift_release(v35);
  return swift_release(v29);
}

uint64_t sub_1000261AC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v25[16];
  id v26;

  v0 = sub_1000BA294(&qword_100BD4280);
  __chkstk_darwin(v0);
  v2 = &v25[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v25[-v8];
  v10 = (void *)objc_opt_self(NSFileManager);
  v11 = objc_msgSend(v10, "defaultManager");
  v12 = objc_msgSend(v11, "URLsForDirectory:inDomains:", 13, 1);

  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v3);
  sub_1001209F4(v13, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v3) == 1)
    __break(1u);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v9, v2, v3);
  URL.appendingPathComponent(_:)(0xD000000000000010, 0x8000000100A0E120);
  v14 = objc_msgSend(v10, "defaultManager");
  URL._bridgeToObjectiveC()(v15);
  v17 = v16;
  v26 = 0;
  v18 = objc_msgSend(v14, "removeItemAtURL:error:", v16, &v26);

  v19 = v26;
  if (v18)
  {
    v20 = v26;
  }
  else
  {
    v21 = v26;
    v22 = _convertNSErrorToError(_:)(v19);

    swift_willThrow();
    swift_errorRelease(v22);
  }
  v23 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v23(v6, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v9, v3);
}

void sub_10002640C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v48;

  v46 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v45 = sub_1000B4D00();
  v8 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  sub_100088FDC();
  v43 = v9;
  v10 = type metadata accessor for UVIndex(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_100098728();
  v14 = v13 - v12;
  v44 = type metadata accessor for UVIndexComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  v19 = type metadata accessor for UVIndexComponentPreprocessedDataModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v21 = sub_1000C4668();
  v22 = type metadata accessor for UVIndexComponent(v21);
  v23 = sub_100125274(a1 + *(int *)(v22 + 20), v2);
  v24 = CurrentWeather.uvIndex.getter(v23);
  v25 = UVIndex.value.getter(v24);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  v26 = (uint64_t *)(v2 + *(int *)(v19 + 20));
  v28 = *v26;
  v27 = v26[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v43, v2, v45);
  sub_1000B375C();
  v29 = swift_bridgeObjectRetain(v27);
  v30 = static NSDateFormatter.prevailingPeriodSymbols.getter(v29);
  *(_QWORD *)v18 = v25;
  *(double *)(v18 + 8) = fmin((double)v25 / 11.0, 1.0);
  *(_QWORD *)(v18 + 16) = v28;
  *(_QWORD *)(v18 + 24) = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v18 + *(int *)(v44 + 28), v43, v45);
  *(_QWORD *)(v18 + *(int *)(v44 + 32)) = v30;
  v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v48._object = (void *)0x8000000100A11910;
  v32._countAndFlagsBits = 0x7865646E49205655;
  v32._object = (void *)0xE800000000000000;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0xD00000000000003ALL;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v48);

  sub_10024342C(v2);
  *(Swift::String *)v7 = v34;
  strcpy((char *)(v7 + 16), "sun.max.fill");
  *(_BYTE *)(v7 + 29) = 0;
  *(_WORD *)(v7 + 30) = -5120;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  swift_storeEnumTagMultiPayload(v7, v46, 0);
  v35 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v36 = a2 + v35[5];
  sub_100080BA8(v18, v36, type metadata accessor for UVIndexComponentViewModel);
  v37 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v36, v37, 16);
  v38 = a2 + v35[7];
  v39 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v40 = enum case for DetailCondition.uvIndex(_:);
  v41 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v38, v40, v41);
  *(_BYTE *)(v38 + v39) = 0;
  v42 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v38, v42, 2);
  _s7Weather24LocationCompositionStateOwst_0(v38, 0, 1, v42);
  sub_100080BA8(v7, a2, type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v35[6]) = 256;
  sub_100098640();
}

uint64_t initializeBufferWithCopyOfBuffer for LocationHeaderViewGradientBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1000267B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[24];

  v2 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  a1 += 16;
  swift_beginAccess(a1, v37, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v17 = result;
    v36 = v3;
    if (qword_100BC2458 != -1)
      swift_once(&qword_100BC2458, sub_100159808);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_1000AECD4(v18, (uint64_t)qword_100CAF100);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      v35 = v2;
      v23 = v22;
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Setting up periodic timer", v22, 2u);
      v24 = v23;
      v2 = v35;
      swift_slowDealloc(v24, -1, -1);
    }

    v26 = Date.init()(v25);
    Date.zeroSeconds.getter(v26);
    v27 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v28 = v27(v12, v6);
    static Calendar.current.getter(v28);
    Date.wc_addMinutes(_:calendar:)(1, v5);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v2);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    v29 = objc_allocWithZone((Class)NSTimer);
    swift_retain();
    v30 = sub_1000FE258((uint64_t)v9, 1, (uint64_t)sub_1002A1790, v17, 60.0);
    v31 = swift_allocObject(&unk_100B69B18, 32, 7);
    *(_QWORD *)(v31 + 16) = v17;
    *(_QWORD *)(v31 + 24) = v30;
    swift_retain();
    v32 = v30;
    asyncMain(block:)(sub_1002A17C4, v31);
    swift_release(v17);

    v33 = swift_release(v31);
    ((void (*)(char *, uint64_t, __n128))v27)(v12, v6, v33);
    return v27(v15, v6);
  }
  return result;
}

void sub_100026A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  if (!*(_QWORD *)(a1 + 16)
    || (sub_1000BA294(&qword_100BCCB90), v2 = sub_1000BA608(), v3 = v2, (v27 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease(a1);
    return;
  }
  v4 = 0;
  v5 = v2 + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    Hasher.init(_seed:)(v28);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(v28, v8, v7);
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = *(_QWORD *)(v3 + 48);
      v16 = (uint64_t *)(v15 + 16 * v11);
      v17 = v16[1];
      v18 = *v16 == v8 && v17 == v7;
      if (v18 || (sub_1000BBD78(*v16, v17) & 1) != 0)
      {
LABEL_11:
        swift_bridgeObjectRelease(v7);
        goto LABEL_22;
      }
      v19 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v19;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
          break;
        v20 = (uint64_t *)(v15 + 16 * v11);
        v21 = v20[1];
        v22 = *v20 == v8 && v21 == v7;
        if (v22 || (sub_1000BBD78(*v20, v21) & 1) != 0)
          goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
    v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    *v23 = v8;
    v23[1] = v7;
    v24 = *(_QWORD *)(v3 + 16);
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_25;
    *(_QWORD *)(v3 + 16) = v26;
LABEL_22:
    if (++v4 == v27)
      goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_100026C30@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  _BYTE *v37;

  v5 = type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v7 = sub_1000BA8E0();
  v8 = type metadata accessor for LocationComponentHeaderViewModel(v7);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294(&qword_100BC4E68);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100098728();
  v16 = v15 - v14;
  type metadata accessor for DailyForecastComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100098728();
  v20 = (_QWORD *)(v19 - v18);
  v21 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for DailyForecastComponent(0) + 20));
  swift_bridgeObjectRetain(v21);
  CurrentWeather.temperature.getter(v22);
  sub_100112E9C(v21, v16, v20);
  *(_QWORD *)v12 = sub_100020FD4((uint64_t)v21);
  *(_QWORD *)(v12 + 8) = v23;
  *(_QWORD *)(v12 + 16) = 0x7261646E656C6163;
  *(_QWORD *)(v12 + 24) = 0xE800000000000000;
  *(_BYTE *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  swift_storeEnumTagMultiPayload(v12, v8, 0);
  sub_100128124((uint64_t)v20, v2);
  swift_storeEnumTagMultiPayload(v2, v5, 1);
  v25 = static Edge.Set.leading.getter(v24);
  v26 = static Edge.Set.trailing.getter();
  v27 = Edge.Set.init(rawValue:)(0);
  v28 = Edge.Set.init(rawValue:)(v27);
  if (Edge.Set.init(rawValue:)(v28 & v25) != v25)
    v27 = Edge.Set.init(rawValue:)(v27 | v25);
  v29 = Edge.Set.init(rawValue:)(v27);
  if (Edge.Set.init(rawValue:)(v29 & v26) != v26)
    LOBYTE(v27) = Edge.Set.init(rawValue:)(v27 | v26);
  sub_1001280E8((uint64_t)v20);
  v30 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v31 = a2 + v30[7];
  v32 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v33 = type metadata accessor for TemperatureChartKind(0);
  sub_1000C3838(v33);
  v34 = type metadata accessor for DetailCondition(0);
  sub_1000C3838(v34);
  *(_BYTE *)(v31 + v32) = 1;
  v35 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v31, v35, 2);
  _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v35);
  sub_100080BA8(v12, a2, type metadata accessor for LocationComponentHeaderViewModel);
  result = sub_100080BA8(v2, a2 + v30[5], type metadata accessor for LocationComponentViewModel);
  v37 = (_BYTE *)(a2 + v30[6]);
  *v37 = v27;
  v37[1] = 0;
  return result;
}

void sub_100026EC4(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v7;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, *a4, v7, swift_bridgeObjectRelease(a2).n128_f64[0]);

}

uint64_t sub_100026F1C(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, (char *)v12 + 1, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    ((void (*)(void))__chkstk_darwin)();
    KeyPath = swift_getKeyPath(&unk_10099FF20);
    ((void (*)(void))__chkstk_darwin)();
    v7 = swift_getKeyPath(&unk_10099FF58);
    static Published.subscript.getter(v12, v5, KeyPath, v7);
    swift_release(KeyPath);
    v8 = swift_release(v7);
    v9 = a1 & 1;
    if (LOBYTE(v12[0]) == (a1 & 1))
    {
      return swift_release(v5);
    }
    else
    {
      __chkstk_darwin(v8);
      v10 = swift_getKeyPath(&unk_10099FF20);
      __chkstk_darwin(v10);
      v11 = swift_getKeyPath(&unk_10099FF58);
      LOBYTE(v12[0]) = v9;
      return static Published.subscript.setter(v12, v5, v10, v11);
    }
  }
  return result;
}

uint64_t sub_1000270C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = type metadata accessor for SettingReader(0);
  v1 = static SettingReader.shared.getter(v0);
  if (qword_100BC2258 != -1)
    swift_once(&qword_100BC2258, sub_10015B00C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v13 + 5));
  v2 = swift_release(v1);
  if ((v13 & 0x10000000000) != 0)
    return 1;
  v4 = static SettingReader.shared.getter(v2);
  if (qword_100BC2260 != -1)
    swift_once(&qword_100BC2260, sub_10015AFEC);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v13 + 4));
  v5 = swift_release(v4);
  if ((v13 & 0x100000000) != 0)
    return 0;
  v6 = static SettingReader.shared.getter(v5);
  if (qword_100BC2268 != -1)
    swift_once(&qword_100BC2268, sub_10015B08C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v13 + 3));
  v7 = swift_release(v6);
  if ((v13 & 0x1000000) != 0)
    return 2;
  v8 = static SettingReader.shared.getter(v7);
  if (qword_100BC2270 != -1)
    swift_once(&qword_100BC2270, sub_10015B02C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v13 + 2));
  v9 = swift_release(v8);
  if ((v13 & 0x10000) != 0)
    return 3;
  v10 = static SettingReader.shared.getter(v9);
  if (qword_100BC2280 != -1)
    swift_once(&qword_100BC2280, sub_10015B06C);
  SettingReader.read<A>(_:)((uint64_t *)((char *)&v13 + 1));
  v11 = swift_release(v10);
  if ((v13 & 0x100) != 0)
    return 5;
  v12 = static SettingReader.shared.getter(v11);
  if (qword_100BC2278 != -1)
    swift_once(&qword_100BC2278, sub_10015B04C);
  SettingReader.read<A>(_:)(&v13);
  swift_release(v12);
  if ((_BYTE)v13)
    return 4;
  else
    return 6;
}

void sub_10002731C(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1(0);
  v6 = swift_allocObject(v5, 16, 7);
  a3[3] = v5;
  a3[4] = a2;
  *a3 = v6;
  sub_100079F70();
}

double sub_10002735C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double result;

  v2 = type metadata accessor for Scope(0);
  __chkstk_darwin(v2);
  sub_1000C2974();
  v3 = sub_1000BA294(&qword_100BE6600);
  v6 = sub_1000BA3CC(v3, v4, v5, (uint64_t)sub_1004B2B1C);
  swift_release(v6);
  sub_10009880C();
  sub_1000C2974();
  v7 = sub_1000BA294(&qword_100BE6608);
  v10 = sub_1000BA3CC(v7, v8, v9, (uint64_t)sub_1004B2D3C);
  swift_release(v10);
  sub_10009880C();
  sub_1000C2974();
  v11 = sub_1000BA294(&qword_100BDBAD0);
  v14 = sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_1004B2F2C);
  v15 = sub_10009880C();
  sub_1000B4A78(v15, enum case for Scope.singleton(_:));
  v16 = sub_1000C2AAC();
  swift_release(v16);
  swift_release(v14);
  sub_1000C3BA4();
  sub_1000C2974();
  v17 = sub_1000BA294(&qword_100BE6610);
  v20 = sub_1000BA3CC(v17, v18, v19, (uint64_t)sub_1004B2F78);
  v21 = sub_10009880C();
  sub_1000B4A78(v21, enum case for Scope.containerSingleton(_:));
  v22 = sub_1000C2AAC();
  swift_release(v22);
  swift_release(v20);
  sub_1000C3BA4();
  ProxyContainer.private.getter(v23);
  swift_retain();
  RegistrationContainer.lazy(block:)(sub_1004B3DB0, a1);
  sub_10009880C();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_1000274EC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, "userInfo");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  return v3;
}

void sub_100027554(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = v1;
  v4 = *v1;
  sub_10009FFE0();
  v5 = (void *)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
  v6 = sub_1000BA294(&qword_100C156C0);
  v7 = firstly<A, B>(on:disposeOn:closure:)(v5, v2, sub_100010384, 0, v6, v4);

  v8 = (void *)static OS_dispatch_queue.geocode.getter();
  v9 = swift_allocObject(&unk_100B9BB18, 17, 7);
  *(_BYTE *)(v9 + 16) = a1;
  v10 = sub_1000BA294(&qword_100BF7410);
  v11 = Promise.then<A, B>(on:disposeOn:closure:)(v8, v2, sub_1001294A8, v9, v10, v4);
  swift_release(v7);

  v12 = swift_release(v9);
  v14 = (id)static OS_dispatch_queue.main.getter(v12);
  v13 = Promise.then<A, B>(on:disposeOn:closure:)(v14, v2, sub_1000098FC, 0, (char *)&type metadata for () + 8, v4);
  swift_release(v13);
  swift_release(v11);

}

void sub_100027698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  type metadata accessor for ConfiguredUnitsAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_100088FDC();
  type metadata accessor for ActivityAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  sub_100098728();
  v4 = type metadata accessor for EnvironmentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BDECB0);
  __chkstk_darwin(v9);
  sub_100088FDC();
  sub_100080C0C(v0, v8, type metadata accessor for EnvironmentAction);
  v10 = (char *)sub_1000277DC + 4 * word_1009A79D4[swift_getEnumCaseMultiPayload(v8, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1000277DC()
{
  _QWORD *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *inited;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *v1;
  v3 = sub_1000BA294(&qword_100BC31F0);
  inited = (__n128 *)swift_initStackObject(v3, v0 + 7);
  v5 = sub_1000BAB80(inited, (__n128)xmmword_10097CA50);
  v6 = sub_1000C4AD8((uint64_t)v5, (uint64_t)&type metadata for LocationAuthorizationAction);
  Dictionary.init(dictionaryLiteral:)(v6);
  sub_1000BADF4();
  sub_1000C5FD8();
  ShortDescription.init(name:_:)(v7, v8, v2, v9);
  v10 = (_QWORD *)v0[5];
  v10[3] = v0[4];
  v10[4] = sub_100077ABC();
  sub_100077A84(v10);
  return (*(uint64_t (**)(void))(v0[3] + 32))();
}

void sub_100027F28(char a1, void (*a2)(void))
{
  char v2;

  v2 = a1;
  a2();
  sub_1000DD70C((uint64_t)&v2);
  sub_100089028();
}

void sub_100027F58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[4];

  v3 = v2;
  v5 = *v2;
  v6 = v2[16];
  v7 = v2[17];
  sub_1000DB418(v2 + 13, v6);
  v8 = dispatch thunk of LocationMetadataManagerType.requiresShowingAddresses.getter(v6, v7);
  if ((v8 & 1) != 0)
  {
    __chkstk_darwin(v8);
    v17[2] = v2;
    v17[3] = a2;
    v9 = firstly<A>(closure:)(sub_1006CECD0, v17, (char *)&type metadata for () + 8);
    sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
    v10 = (void *)static OS_dispatch_queue.main.getter();
    v11 = Promise.then<A, B>(on:disposeOn:closure:)(v10, v2, sub_1006CEA08, 0, (char *)&type metadata for () + 8, v5);
    swift_release(v11);
    swift_release(v9);

  }
  else
  {
    if (qword_100BC24A0 != -1)
      swift_once(&qword_100BC24A0, sub_1001596C4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_1000AECD4(v12, (uint64_t)qword_100CAF1C8);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)sub_100098710(2);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Current location updated, post sync", v16, 2u);
      sub_1000986F0((uint64_t)v16);
    }

    swift_retain();
    asyncMain(block:)(sub_1006CECCC, v3);
    swift_release(v3);
  }
}

uint64_t sub_100028124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = type metadata accessor for SavedLocation(0);
  return swift_storeEnumTagMultiPayload(a2, v5, 0);
}

uint64_t *sub_10002818C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  int *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t, __n128);
  __n128 v78;
  void (*v79)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t *v171;
  uint64_t v172;
  char *v174;
  char *v175;
  _QWORD *__dsta;
  char *__dst;
  int *v178;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v9 = v8[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1000BA294(&qword_100BC4E68);
  v13 = *(_QWORD **)(v12 - 8);
  v14 = (void (*)(char *, char *, uint64_t))v13[3];
  v14(v10, v11, v12);
  v14((char *)a1 + v8[6], (char *)a2 + v8[6], v12);
  v14((char *)a1 + v8[7], (char *)a2 + v8[7], v12);
  v15 = v8[8];
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v18 = v17[1];
  v19 = v16[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = v8[9];
  v21 = (uint64_t *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  *v21 = *v22;
  v23 = v22[1];
  v24 = v21[1];
  v21[1] = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[5];
  v26 = (uint64_t *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = *v27;
  v29 = v27[1];
  v30 = *v26;
  *v26 = *v27;
  swift_unknownObjectRetain(v28);
  swift_unknownObjectRelease(v30);
  v26[1] = v29;
  v31 = a3[6];
  v32 = (uint64_t *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = v33[1];
  v35 = v32[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release(v35);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  if (a1 != a2)
  {
    v36 = a3[8];
    v37 = (uint64_t *)((char *)a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    sub_100021A14((uint64_t)a1 + v36, &qword_100BC37D8);
    v39 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      v40 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
      v41 = 1;
    }
    else
    {
      *v37 = *v38;
      swift_retain();
      v41 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v41);
  }
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)v44;
  v46 = v44[8];
  sub_10008D47C(*(_QWORD *)v44, v46);
  v47 = *(_QWORD *)v43;
  v48 = v43[8];
  *(_QWORD *)v43 = v45;
  v43[8] = v46;
  sub_1000B15F8(v47, v48);
  v49 = a3[10];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = *(_QWORD *)v51;
  v53 = v51[8];
  sub_10008D47C(*(_QWORD *)v51, v53);
  v54 = *(_QWORD *)v50;
  v55 = v50[8];
  *(_QWORD *)v50 = v52;
  v50[8] = v53;
  sub_1000B15F8(v54, v55);
  v56 = a3[11];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
  v60 = a3[12];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v63);
  v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63);
  if (!v64)
  {
    if (v65)
    {
      sub_1000215BC((uint64_t)v61, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_12;
    }
    v97 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v97 - 8) + 24))(v61, v62, v97);
    v98 = v63[5];
    v99 = &v61[v98];
    v100 = &v62[v98];
    *v99 = *v100;
    v101 = v100[1];
    v102 = v99[1];
    v99[1] = v101;
    swift_bridgeObjectRetain(v101);
    swift_bridgeObjectRelease(v102);
    v103 = v63[6];
    v104 = &v61[v103];
    v105 = &v62[v103];
    *v104 = *v105;
    v106 = v105[1];
    v107 = v104[1];
    v104[1] = v106;
    swift_bridgeObjectRetain(v106);
    swift_bridgeObjectRelease(v107);
    v108 = v63[7];
    v109 = &v61[v108];
    v110 = &v62[v108];
    v111 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 24))(v109, v110, v111);
    v14(&v61[v63[8]], &v62[v63[8]], v12);
    v14(&v61[v63[9]], &v62[v63[9]], v12);
    v112 = v63[10];
    v113 = &v61[v112];
    v114 = &v62[v112];
    *v113 = *v114;
    v115 = v114[1];
    v116 = v113[1];
    v113[1] = v115;
    swift_bridgeObjectRetain(v115);
    swift_bridgeObjectRelease(v116);
    v117 = v63[11];
    v118 = &v61[v117];
    v119 = &v62[v117];
    *v118 = *v119;
    v120 = v119[1];
    v121 = v118[1];
    v118[1] = v120;
    swift_bridgeObjectRetain(v120);
    swift_bridgeObjectRelease(v121);
    *(_QWORD *)&v61[v63[12]] = *(_QWORD *)&v62[v63[12]];
    v61[v63[13]] = v62[v63[13]];
    v122 = v63[14];
    v123 = &v61[v122];
    v124 = &v62[v122];
    *v123 = *v124;
    v125 = v124[1];
    v126 = v123[1];
    v123[1] = v125;
    swift_bridgeObjectRetain(v125);
    swift_bridgeObjectRelease(v126);
    v127 = v63[15];
    v128 = &v61[v127];
    v129 = &v62[v127];
    v130 = type metadata accessor for Precipitation(0);
    v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
    v132 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
    if (v131)
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
LABEL_21:
        v61[v63[16]] = v62[v63[16]];
        v149 = v63[17];
        v150 = &v61[v149];
        v151 = &v62[v149];
        *v150 = *v151;
        v152 = v151[1];
        v153 = v150[1];
        v150[1] = v152;
        swift_bridgeObjectRetain(v152);
        swift_bridgeObjectRelease(v153);
        v154 = v63[18];
        v155 = &v61[v154];
        v156 = &v62[v154];
        *v155 = *v156;
        v157 = v156[1];
        v158 = v155[1];
        v155[1] = v157;
        swift_bridgeObjectRetain(v157);
        swift_bridgeObjectRelease(v158);
        v159 = v63[19];
        v160 = &v61[v159];
        v161 = &v62[v159];
        *v160 = *v161;
        v162 = v161[1];
        v163 = v160[1];
        v160[1] = v162;
        swift_bridgeObjectRetain(v162);
        swift_bridgeObjectRelease(v163);
        v164 = v63[20];
        v165 = *(_QWORD *)&v62[v164];
        v166 = *(_QWORD *)&v61[v164];
        *(_QWORD *)&v61[v164] = v165;
        swift_bridgeObjectRetain(v165);
        swift_bridgeObjectRelease(v166);
        goto LABEL_22;
      }
    }
    else
    {
      v147 = *(_QWORD *)(v130 - 8);
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 24))(v128, v129, v130);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v147 + 8))(v128, v130);
    }
    v148 = sub_1000BA294(&qword_100BCB338);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    goto LABEL_21;
  }
  if (v65)
  {
LABEL_12:
    v96 = sub_1000BA294(&qword_100BCB340);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_22;
  }
  v178 = a3;
  v66 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v61, v62, v66);
  v67 = v63[5];
  v68 = &v61[v67];
  v69 = &v62[v67];
  *v68 = *v69;
  v70 = v69[1];
  v68[1] = v70;
  v71 = v63[6];
  v72 = &v61[v71];
  v73 = &v62[v71];
  *v72 = *v73;
  __dsta = v13;
  v74 = v73[1];
  v72[1] = v74;
  v75 = v63[7];
  v174 = &v62[v75];
  v175 = &v61[v75];
  v76 = type metadata accessor for TimeZone(0);
  v77 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v76 - 8) + 16);
  swift_bridgeObjectRetain(v70);
  v78 = swift_bridgeObjectRetain(v74);
  v77(v175, v174, v76, v78);
  v79 = (void (*)(_BYTE *, _BYTE *, uint64_t))__dsta[2];
  v79(&v61[v63[8]], &v62[v63[8]], v12);
  v79(&v61[v63[9]], &v62[v63[9]], v12);
  v80 = v63[10];
  v81 = &v61[v80];
  v82 = &v62[v80];
  *v81 = *v82;
  v83 = v82[1];
  v81[1] = v83;
  v84 = v63[11];
  v85 = &v61[v84];
  v86 = &v62[v84];
  *v85 = *v86;
  v87 = v86[1];
  v85[1] = v87;
  *(_QWORD *)&v61[v63[12]] = *(_QWORD *)&v62[v63[12]];
  v61[v63[13]] = v62[v63[13]];
  v88 = v63[14];
  v89 = &v61[v88];
  v90 = &v62[v88];
  *v89 = *v90;
  v91 = v90[1];
  v89[1] = v91;
  v92 = v63[15];
  __dst = &v61[v92];
  v93 = &v62[v92];
  v94 = type metadata accessor for Precipitation(0);
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRetain(v87);
  swift_bridgeObjectRetain(v91);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
  {
    v95 = sub_1000BA294(&qword_100BCB338);
    memcpy(__dst, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(__dst, v93, v94);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v94);
  }
  a3 = v178;
  v61[v63[16]] = v62[v63[16]];
  v133 = v63[17];
  v134 = &v61[v133];
  v135 = &v62[v133];
  *v134 = *v135;
  v136 = v135[1];
  v134[1] = v136;
  v137 = v63[18];
  v138 = &v61[v137];
  v139 = &v62[v137];
  *v138 = *v139;
  v140 = v139[1];
  v138[1] = v140;
  v141 = v63[19];
  v142 = &v61[v141];
  v143 = &v62[v141];
  *v142 = *v143;
  v144 = v143[1];
  v142[1] = v144;
  v145 = v63[20];
  v146 = *(_QWORD *)&v62[v145];
  *(_QWORD *)&v61[v145] = v146;
  swift_bridgeObjectRetain(v136);
  swift_bridgeObjectRetain(v140);
  swift_bridgeObjectRetain(v144);
  swift_bridgeObjectRetain(v146);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
LABEL_22:
  v167 = *(int *)(sub_1000BA294(&qword_100BDE090) + 28);
  v168 = *(_QWORD *)&v61[v167];
  *(_QWORD *)&v61[v167] = *(_QWORD *)&v62[v167];
  swift_retain();
  swift_release(v168);
  v169 = a3[13];
  v170 = (char *)a1 + v169;
  v171 = (uint64_t *)((char *)a2 + v169);
  v172 = *(uint64_t *)((char *)a1 + v169);
  *(uint64_t *)((char *)a1 + v169) = *v171;
  swift_retain();
  swift_release(v172);
  *((_QWORD *)v170 + 1) = v171[1];
  return a1;
}

uint64_t sub_100028A54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;

  v1 = type metadata accessor for UserIdentity(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PrivateUserData(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose))
  {
    v10 = SessionManager.tracker.getter(result);
    v12 = v0[9];
    v11 = v0[10];
    sub_1000DB418(v0 + 6, v12);
    v13 = dispatch thunk of IdentityServiceType.identity.getter(v12, v11);
    v14 = UserIdentity.privateIdentifier.getter(v13);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    PrivateUserData.init(privateUserID:)(v14, v16);
    v17 = sub_1000BA294(&qword_100BCDC68);
    v18 = type metadata accessor for DataEventTrait(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned __int8 *)(v19 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = swift_allocObject(v17, v21 + *(_QWORD *)(v19 + 72), v20 | 7);
    *(_OWORD *)(v22 + 16) = xmmword_10097CA50;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v22 + v21, enum case for DataEventTrait.unique(_:), v18);
    sub_10000F1C8(&qword_100BD1210, (uint64_t (*)(uint64_t))&type metadata accessor for PrivateUserData);
    Tracker.push<A>(data:traits:file:line:)(v9, v22, 0xD000000000000065, 0x80000001009FA420, 495, v5, v23);
    swift_release(v10);
    v24 = swift_bridgeObjectRelease(v22);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v24);
  }
  return result;
}

double sub_100028C50(_QWORD *a1)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    v4 = type metadata accessor for Date(0);
LABEL_6:
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    return result;
  }
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload != 2)
      return result;
    v4 = type metadata accessor for Location(0);
    goto LABEL_6;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(*a1).n128_u64[0];
  return result;
}

void sub_100028CC8()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath(&unk_1009BE0C0);
  sub_1000D91EC();
  sub_100086DA4(&qword_100BFC628, type metadata accessor for TipCoordinator, (uint64_t)&unk_1009BE0A0);
  sub_1000DDE00(v0, v1);
  sub_100089020();
  sub_100099960();
}

uint64_t sub_100028D2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[32];
  _QWORD v10[3];

  v10[0] = " ";
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 32));
    if (v5 > 0x3F)
    {
      return v4;
    }
    else
    {
      v6 = *(_QWORD *)(v2 - 8) + 64;
      v7 = *(_QWORD *)(v4 - 8) + 64;
      swift_getTupleTypeLayout2(v9, v6, v7);
      v10[1] = v9;
      v10[2] = v7;
      swift_initEnumMetadataMultiPayload(a1, 0, 3, v10);
      return 0;
    }
  }
  return v2;
}

uint64_t sub_100028DE8(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

void sub_100028E18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *a1;
  if (qword_100BC2468 != -1)
    swift_once(&qword_100BC2468, sub_100159724);
  v2 = type metadata accessor for Logger(0);
  sub_1000AECD4(v2, (uint64_t)qword_100CAF120);
  v3 = swift_retain_n(v1, 6);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(96, -1);
    v21 = v18;
    *(_DWORD *)v6 = 136446722;
    NWActivity.domain.getter();
    v7 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
    v9 = v8;
    v19 = sub_1000CE1C8(v7, v8, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_release_n(v1, 2);
    v10 = swift_bridgeObjectRelease(v9);
    *(_WORD *)(v6 + 12) = 2082;
    v19 = NWActivity.label.getter(v10);
    v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
    v13 = v12;
    v19 = sub_1000CE1C8(v11, v12, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_release_n(v1, 2);
    v14 = swift_bridgeObjectRelease(v13);
    *(_WORD *)(v6 + 22) = 2082;
    v15 = NWActivity.parentActivity.getter(v14);
    swift_release(v15);
    if (v15)
      v16 = 7562617;
    else
      v16 = 28526;
    if (v15)
      v17 = 0xE300000000000000;
    else
      v17 = 0xE200000000000000;
    v19 = sub_1000CE1C8(v16, v17, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Activating parent network activity. domain=%{public}s, label=%{public}s, hasParent=%{public}s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy(v18, 3);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 6);
  }
  NWActivity.activate()();
}

uint64_t sub_1000290CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v4 = sub_1000BA294(&qword_100BCC768);
  __chkstk_darwin(v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for NWActivity.CompletionReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  if (qword_100BC2468 != -1)
    swift_once(&qword_100BC2468, sub_100159724);
  v12 = type metadata accessor for Logger(0);
  sub_1000AECD4(v12, (uint64_t)qword_100CAF120);
  v13 = swift_retain_n(v11, 6);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(32, -1);
    v37 = v8;
    v18 = v17;
    v36 = swift_slowAlloc(96, -1);
    v42 = v36;
    *(_DWORD *)v18 = 136446722;
    v38 = v2;
    v40 = NWActivity.domain.getter();
    v35 = v16;
    v19 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
    v21 = v20;
    v40 = sub_1000CE1C8(v19, v20, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    swift_release_n(v11, 2);
    v22 = swift_bridgeObjectRelease(v21);
    *(_WORD *)(v18 + 12) = 2082;
    v40 = NWActivity.label.getter(v22);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
    v25 = v24;
    v40 = sub_1000CE1C8(v23, v24, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    swift_release_n(v11, 2);
    v26 = swift_bridgeObjectRelease(v25);
    *(_WORD *)(v18 + 22) = 2082;
    v27 = NWActivity.parentActivity.getter(v26);
    swift_release(v27);
    if (v27)
      v28 = 7562617;
    else
      v28 = 28526;
    if (v27)
      v29 = 0xE300000000000000;
    else
      v29 = 0xE200000000000000;
    v40 = sub_1000CE1C8(v28, v29, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    swift_release_n(v11, 2);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v35, "Completing parent network activity. domain=%{public}s, label=%{public}s, hasParent=%{public}s", (uint8_t *)v18, 0x20u);
    v30 = v36;
    swift_arrayDestroy(v36, 3);
    swift_slowDealloc(v30, -1, -1);
    v31 = v18;
    v8 = v37;
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_release_n(v11, 6);
  }
  v32 = type metadata accessor for NetworkActivityCompletion(0);
  sub_100159454(v39 + *(int *)(v32 + 24), (uint64_t)v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for NWActivity.CompletionReason.success(_:), v7);
    sub_100021AA4((uint64_t)v6, &qword_100BCC768);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  NWActivity.complete(reason:)(v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

_QWORD *initializeBufferWithCopyOfBuffer for Scroll(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_1000294BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  void *v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  unint64_t v40;
  Swift::String v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;

  v5 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  v10 = (int *)type metadata accessor for PressureComponentViewModel(0);
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100098728();
  v14 = v13 - v12;
  v15 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_10009E540();
  v17 = type metadata accessor for PressureComponent(0);
  sub_100124A10(a1 + *(int *)(v17 + 20), v2);
  v18 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v2, v18);
  v19 = (uint64_t *)(v2 + v15[5]);
  v20 = *v19;
  v21 = v19[1];
  v22 = (uint64_t *)(v2 + v15[6]);
  v23 = *v22;
  v24 = v22[1];
  v25 = (uint64_t *)(v2 + v15[7]);
  v26 = *v25;
  v27 = v25[1];
  v28 = *(_QWORD *)(v2 + v15[8]);
  v29 = (uint64_t *)(v2 + v15[9]);
  v30 = *v29;
  v31 = v29[1];
  v32 = (_QWORD *)(v14 + v10[5]);
  *v32 = v20;
  v32[1] = v21;
  v33 = (_QWORD *)(v14 + v10[6]);
  *v33 = v23;
  v33[1] = v24;
  v34 = (_QWORD *)(v14 + v10[7]);
  *v34 = v26;
  v34[1] = v27;
  *(_QWORD *)(v14 + v10[8]) = v28;
  v35 = (_QWORD *)(v14 + v10[9]);
  *v35 = v30;
  v35[1] = v31;
  v36 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v27);
  v37 = objc_msgSend(v36, "mainBundle", swift_bridgeObjectRetain(v31).n128_f64[0]);
  sub_1000989C4();
  v38._countAndFlagsBits = 0x6572757373657250;
  v38._object = (void *)0xE800000000000000;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v40 = 0xD00000000000003ALL;
  v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, *(Swift::String *)(&v51 - 1));

  sub_1001249D4(v2);
  *(Swift::String *)v9 = v41;
  *(_QWORD *)(v9 + 16) = 0x6567756167;
  *(_QWORD *)(v9 + 24) = 0xE500000000000000;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 0;
  swift_storeEnumTagMultiPayload(v9, v5, 0);
  v42 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v43 = a2 + v42[5];
  sub_100080BA8(v14, v43, type metadata accessor for PressureComponentViewModel);
  v44 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v43, v44, 11);
  v45 = a2 + v42[7];
  v46 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v47 = enum case for DetailCondition.pressure(_:);
  v48 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v45, v47, v48);
  *(_BYTE *)(v45 + v46) = 0;
  v49 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v45, v49, 2);
  _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v49);
  result = sub_100080BA8(v9, a2, type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v42[6]) = 256;
  return result;
}

uint64_t sub_1000297C8()
{
  void *v0;
  unint64_t v1;
  void *v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double Width;
  id v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  CGRect v23;
  CGRect v24;

  v1 = (unint64_t)objc_msgSend(v0, "orientation");
  if (v1 > 6)
    return 0;
  if (((1 << v1) & 0x61) != 0)
  {
    v3 = (void *)objc_opt_self(UIScreen);
    v4 = objc_msgSend(v3, "mainScreen");
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v23.origin.x = v6;
    v23.origin.y = v8;
    v23.size.width = v10;
    v23.size.height = v12;
    Width = CGRectGetWidth(v23);
    v14 = objc_msgSend(v3, "mainScreen");
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;

    v24.origin.x = v16;
    v24.origin.y = v18;
    v24.size.width = v20;
    v24.size.height = v22;
    if (CGRectGetHeight(v24) >= Width)
      return 1;
    else
      return 3;
  }
  else if (((1 << v1) & 6) != 0)
  {
    return 1;
  }
  else
  {
    return 3;
  }
}

uint64_t sub_100029908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v0 = type metadata accessor for Location.Identifier(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)v12 - v6;
  LocationModel.identifier.getter(v5);
  type metadata accessor for LocationViewerPageControl(0);
  v8 = sub_1000BA294(&qword_100BECFA0);
  Binding.wrappedValue.getter(v8);
  v9 = static Location.Identifier.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v7, v0);
  return v9 & 1;
}

double sub_1000299FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v1 = type metadata accessor for Locale.Language(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocationHeaderView(0);
  v10 = *(_QWORD *)(v0 + *(int *)(v9 + 76) + 24);
  if ((*(_BYTE *)(v0 + *(int *)(v9 + 64) + 161) & 1) != 0)
  {
    result = 0.0;
    if (!v10)
      return -5.0;
  }
  else if (v10)
  {
    v12 = static Locale.current.getter(v9);
    Locale.language.getter(v12);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = Locale.Language.isCJK.getter(v13);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    result = -5.0;
    if ((v14 & 1) != 0)
      return -3.0;
  }
  else
  {
    return -5.0;
  }
  return result;
}

uint64_t sub_100029B34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  int *v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  double v22;
  Swift::String v23;

  v4 = CurrentWeather.humidity.getter();
  v22 = CurrentWeather.humidity.getter();
  v5 = StringBuilder.makeString(for:data:formattedForAccessibility:)(&v22, a1, 0);
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._object = (void *)0x80000001009F38E0;
  v9._countAndFlagsBits = 0x79746964696D7548;
  v9._object = (void *)0xE800000000000000;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD00000000000003ALL;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v23);

  *(Swift::String *)a2 = v11;
  strcpy((char *)(a2 + 16), "humidity.fill");
  *(_WORD *)(a2 + 30) = -4864;
  *(_BYTE *)(a2 + 32) = 0;
  v12 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload(a2, v12, 0);
  v13 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v14 = (double *)(a2 + v13[5]);
  *v14 = v4;
  *((_QWORD *)v14 + 1) = v5;
  *((_QWORD *)v14 + 2) = v7;
  v15 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v14, v15, 4);
  v16 = a2 + v13[7];
  v17 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v18 = enum case for DetailCondition.humidity(_:);
  v19 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v16, v18, v19);
  *(_BYTE *)(v16 + v17) = 0;
  v20 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v16, v20, 2);
  result = _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v20);
  *(_WORD *)(a2 + v13[6]) = 256;
  return result;
}

_QWORD *sub_100029D2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[1];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[9];
  v6 = a1[11];
  v13 = a1[13];
  v14 = a1[3];
  v7 = a1[15];
  v8 = a1[17];
  v9 = a1[19];
  v12 = a1[21];
  v10 = a1[23];
  swift_bridgeObjectRelease(a1[25]);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_100029E14()
{
  uint64_t countAndFlagsBits;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v16;

  countAndFlagsBits = LocationModel.name.getter();
  v2 = v1;
  v3 = LocationModel.kind.getter();
  v4 = Location.Identifier.Kind.rawValue.getter(v3 & 1);
  v6 = v5;
  v7 = Location.Identifier.Kind.rawValue.getter(1);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v6);
    v2 = v6;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
      return countAndFlagsBits;
  }
  swift_bridgeObjectRelease(v2);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._object = (void *)0x8000000100A09760;
  v13._countAndFlagsBits = 0x7461636F4C20794DLL;
  v13._object = (void *)0xEB000000006E6F69;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = 0xD00000000000003DLL;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v16)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t destroy for FullscreenMapPresentationSourceViewModifier(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t *assignWithCopy for LocationViewerViewWeatherConditionBackground(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  v5 = a2[1];
  v6 = a2[2];
  v7 = a1[1];
  a1[1] = v5;
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRelease(v7);
  a1[2] = v6;
  sub_100094D04(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_retain();
  swift_release(v8);
  a1[10] = a2[10];
  return a1;
}

uint64_t sub_10002A018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  sub_1000D93C4();
  sub_1000DC84C();
  v7 = v6;
  sub_1000ECED8(v6, v8);
  sub_1000CC7A0();
  if (v9)
  {
    __break(1u);
LABEL_10:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }
  sub_1000EF934();
  if (sub_1000C20CC(v5 & 1))
  {
    sub_1000E7B84();
    sub_1000BDC1C();
    if (!v11)
      goto LABEL_10;
    v3 = v10;
  }
  v12 = *v2;
  if ((v4 & 1) != 0)
  {
    v13 = *(_QWORD *)(v12 + 56);
    sub_100094EF4();
    sub_1000C6954();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v15 + 40))(v13 + v14 * v3, v7);
  }
  else
  {
    sub_10011EBD4(v3, v1, v0, v7, v12);
    return sub_1000D1C04(v0);
  }
}

uint64_t destroy for WeatherConditionBackgroundBindingModifierWithVFXBackground(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_unknownObjectRelease(a1[2]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 4);
  return swift_release(a1[10]);
}

void sub_10002A11C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = type metadata accessor for WeatherMapPresentationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = (_BYTE *)(v7 - v6);
  type metadata accessor for DisplayMetrics(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v13 = type metadata accessor for MainViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = sub_1000BA294(&qword_100BF4878);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100098728();
  v22 = v21 - v20;
  v51 = sub_1000BA294(&qword_100BF4880);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100098728();
  v26 = v25 - v24;
  v54 = sub_1000BA294(&qword_100BF4888);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v52 = v28;
  v56 = sub_1000BA294(&qword_100BF4890);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v55 = v30;
  KeyPath = swift_getKeyPath(&unk_1009B5088);
  sub_100094EE4();
  sub_1000DDCF0();
  sub_10009880C();
  sub_1000BC534(v17 + *(int *)(v13 + 40), v12);
  sub_1000215BC(v17, type metadata accessor for MainViewModel);
  v32 = (uint64_t *)(v22 + *(int *)(v18 + 36));
  v33 = sub_1000BA294(&qword_100BF4898);
  sub_1000BC534(v12, (uint64_t)v32 + *(int *)(v33 + 28));
  *v32 = KeyPath;
  v34 = sub_1000BA294(&qword_100BF48A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v22, a1, v34);
  sub_100079F9C(v12);
  v35 = swift_getKeyPath(&unk_1009B50B0);
  sub_100094EE4();
  sub_1000DDCF0();
  sub_10009880C();
  v36 = sub_1000C2D28();
  sub_1000BC534(v36, v37);
  sub_1000215BC(v17, type metadata accessor for MainViewModel);
  LOBYTE(v32) = v8[1];
  sub_100079F9C((uint64_t)v8);
  sub_10003773C(v22, v26, &qword_100BF4878);
  v38 = v26 + *(int *)(v51 + 36);
  *(_QWORD *)v38 = v35;
  *(_BYTE *)(v38 + 8) = (_BYTE)v32;
  sub_100021A14(v22, &qword_100BF4878);
  v39 = swift_getKeyPath(&unk_1009B50D8);
  sub_100094EE4();
  sub_1000DDCF0();
  sub_10009880C();
  v40 = sub_1000C2D28();
  sub_1000BC534(v40, v41);
  sub_1000215BC(v17, type metadata accessor for MainViewModel);
  LOBYTE(v22) = v8[*(int *)(v57 + 36)];
  sub_100079F9C((uint64_t)v8);
  sub_10003773C(v26, v52, &qword_100BF4880);
  v42 = v52 + *(int *)(v54 + 36);
  *(_QWORD *)v42 = v39;
  *(_BYTE *)(v42 + 8) = v22;
  sub_100021A14(v26, &qword_100BF4880);
  v43 = swift_getKeyPath(&unk_1009B5100);
  sub_100094EE4();
  sub_1000DDCF0();
  sub_10009880C();
  v44 = sub_1000C2D28();
  sub_10000AB54(v44, v45, type metadata accessor for WeatherMapPresentationState);
  sub_1000215BC(v17, type metadata accessor for MainViewModel);
  LOBYTE(v22) = v8[1];
  sub_1000D9FF0();
  sub_10003773C(v52, v55, &qword_100BF4888);
  v46 = v55 + *(int *)(v56 + 36);
  *(_QWORD *)v46 = v43;
  *(_BYTE *)(v46 + 8) = (v22 & 0xC0) == 64;
  sub_100021A14(v52, &qword_100BF4888);
  sub_100094EE4();
  sub_1000DDCF0();
  sub_10009880C();
  v47 = sub_1000C2D28();
  sub_10000AB54(v47, v48, type metadata accessor for WeatherMapPresentationState);
  sub_1000215BC(v17, type metadata accessor for MainViewModel);
  LOBYTE(v43) = *v8;
  sub_1000D9FF0();
  v49 = swift_allocObject(&unk_100B82C28, 32, 7);
  *(_QWORD *)(v49 + 16) = a2;
  *(_QWORD *)(v49 + 24) = a3;
  sub_10003773C(v55, a4, &qword_100BF4890);
  v50 = a4 + *(int *)(sub_1000BA294(&qword_100BF48A8) + 36);
  *(_BYTE *)v50 = v43;
  *(_QWORD *)(v50 + 8) = sub_1005DA1E8;
  *(_QWORD *)(v50 + 16) = v49;
  sub_100094EE4();
  sub_100021A14(v55, &qword_100BF4890);
}

uint64_t sub_10002A554@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  ValueWitnessTable *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[5];
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BC43F0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  v8 = v39;
  if (!v39)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BED408);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!v38)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = type metadata accessor for WireframeLevelInterestManager();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = result;
  v34 = v40;
  v35 = a2;
  v16 = a1[3];
  v17 = a1[4];
  sub_1000DB418(a1, v16);
  v18 = type metadata accessor for TipCoordinator(0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v18, v18, v16, v17);
  if (result)
  {
    v19 = result;
    v20 = sub_100068EB4((uint64_t)v37, v38);
    __chkstk_darwin(v20);
    v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v22);
    v36[3] = &type metadata for LocationTracker;
    v36[4] = &off_100B76058;
    v36[0] = swift_allocObject(&unk_100B7DEE0, 96, 7);
    memcpy((void *)(v36[0] + 16), v22, 0x50uLL);
    v24 = type metadata accessor for LocationInteractor();
    v25 = (_QWORD *)swift_allocObject(v24, 88, 7);
    v26 = sub_100068EB4((uint64_t)v36, (uint64_t)&type metadata for LocationTracker);
    __chkstk_darwin(v26);
    v28 = (char *)&v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    ((void (*)(uint64_t, uint64_t *))v29->initializeWithCopy)((uint64_t)v28, v30);
    v25[7] = &type metadata for LocationTracker;
    v25[8] = &off_100B76058;
    v31 = swift_allocObject(&unk_100B7DEE0, 96, 7);
    v25[4] = v31;
    memcpy((void *)(v31 + 16), v28, 0x50uLL);
    v32 = v34;
    v25[2] = v8;
    v25[3] = v32;
    v25[9] = v15;
    v25[10] = v19;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
    result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
    v33 = v35;
    *v35 = v25;
    v33[1] = &off_100B88C08;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10002A7F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[3];
  uint64_t active;
  _UNKNOWN **v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  v6 = v30;
  if (!v30)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v32;
  v7 = v33;
  v9 = v31;
  v10 = a1[3];
  v11 = a1[4];
  sub_1000DB418(a1, v10);
  v12 = sub_1000BA294(&qword_100BED428);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v12, v12, v10, v11);
  if (!v29)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = *sub_1000DB418(v28, v29);
  active = type metadata accessor for ActiveLocationInputFactory();
  v27 = &off_100B66978;
  v25[0] = v13;
  sub_100043CA8((uint64_t)v25, (uint64_t)v24);
  v14 = swift_allocObject(&unk_100B7DD78, 56, 7);
  sub_10003C800(v24, v14 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  v15 = swift_allocObject(&unk_100B7DDA0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1000A2334;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = swift_allocObject(&unk_100B7DDC8, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1000A22E4;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BED430);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (v29)
  {
    v20 = *sub_1000DB418(v28, v29);
    active = type metadata accessor for ActiveLocationModelFactory();
    v27 = &off_100B66968;
    v25[0] = v20;
    sub_100043CA8((uint64_t)v25, (uint64_t)v24);
    v21 = swift_allocObject(&unk_100B7DDF0, 56, 7);
    sub_10003C800(v24, v21 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v25);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
    v22 = swift_allocObject(&unk_100B7DE18, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_10014352C;
    *(_QWORD *)(v22 + 24) = v21;
    v23 = sub_1000BA294((uint64_t *)&unk_100C0A200);
    swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
    return sub_10004EB7C(v6, v9, v8, v7, sub_10014357C, 0, sub_1000A30A4, v16, sub_10013DB04, v22);
  }
LABEL_7:
  __break(1u);
  return result;
}

Swift::Void __swiftcall NotificationsOptInMonitor.applicationWillEnterForeground()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t (*v97)(uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  void *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 aBlock;
  __int128 v156;
  uint64_t (*v157)();
  uint64_t v158;

  v1 = v0;
  v147 = *(_QWORD *)v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v141 = *(_QWORD *)(v2 - 8);
  v142 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v5 = sub_1000987B4(v4);
  v139 = type metadata accessor for DispatchQoS(v5);
  v138 = *(_QWORD *)(v139 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v8 = sub_1000987B4(v7);
  v136 = type metadata accessor for DispatchTime(v8);
  v134 = *(_QWORD *)(v136 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v133 = v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  v13 = sub_1000987B4((uint64_t)&v127 - v12);
  v132 = type metadata accessor for NotificationsOptInState(v13);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v131 = v15;
  sub_1000BA294(&qword_100BC30C8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v18 = sub_1000987B4(v17);
  v19 = type metadata accessor for Date(v18);
  v153 = *(_QWORD *)(v19 - 8);
  v154 = v19;
  sub_10009D98C();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v152 = v21;
  v22 = type metadata accessor for MainAction(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_1000986FC();
  v128 = v24;
  sub_10009D2A4();
  __chkstk_darwin(v25);
  sub_1000860D0();
  v129 = v26;
  sub_10009D2A4();
  __chkstk_darwin(v27);
  sub_1000860D0();
  v148 = v28;
  sub_10009D2A4();
  __chkstk_darwin(v29);
  sub_1000860D0();
  v146 = v30;
  sub_10009D2A4();
  __chkstk_darwin(v31);
  sub_1000860D0();
  v145 = v32;
  sub_10009D2A4();
  __chkstk_darwin(v33);
  sub_1000860D0();
  v144 = v34;
  sub_10009D2A4();
  __chkstk_darwin(v35);
  sub_1000860D0();
  v143 = v36;
  sub_10009D2A4();
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v127 - v39;
  __chkstk_darwin(v38);
  v42 = (char *)&v127 - v41;
  v43 = *(_QWORD *)(v0 + 56);
  v44 = *(_QWORD *)(v0 + 64);
  sub_1000DB418((_QWORD *)(v0 + 32), v43);
  v149 = dispatch thunk of NotificationsOptInManagerType.tipDismissalOverThreshold()(v43, v44);
  *v42 = 0;
  v151 = type metadata accessor for NotificationsOptInAction(0);
  swift_storeEnumTagMultiPayload(v42, v151, 1);
  v45 = v22;
  sub_1000BD630((uint64_t)v42, v22);
  sub_1000F5568();
  v47 = v46;
  v48 = *(_QWORD *)(v46 + 16);
  if (v48 >= *(_QWORD *)(v46 + 24) >> 1)
  {
    sub_1000C3498();
    v47 = v119;
  }
  *(_QWORD *)(v47 + 16) = v48 + 1;
  v49 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v50 = *(_QWORD *)(v23 + 72);
  sub_1004AB310((uint64_t)v42, v47 + v49 + v50 * v48);
  v51 = *(_QWORD *)(v0 + 64);
  v52 = sub_1000D9B0C((_QWORD *)(v0 + 32));
  if ((dispatch thunk of NotificationsOptInManagerType.listViewTipDismissed()(v52, v51) & 1) != 0)
  {
    *v40 = v149 & 1;
    swift_storeEnumTagMultiPayload(v40, v151, 0);
    sub_1000BD630((uint64_t)v40, v45);
    sub_1000CDB34();
    if (v53)
    {
      sub_1000C3498();
      v47 = v122;
    }
    v54 = (_QWORD *)(v0 + 32);
    sub_1000D1BD8();
    sub_1004AB310((uint64_t)v40, v55);
  }
  else
  {
    v54 = (_QWORD *)(v0 + 32);
  }
  v56 = *(_QWORD *)(v0 + 64);
  v57 = sub_1000D9B0C(v54);
  v58 = dispatch thunk of NotificationsOptInManagerType.resubscriptionTipDismissed()(v57, v56);
  v150 = v49;
  if ((v58 & 1) != 0)
  {
    v59 = v143;
    swift_storeEnumTagMultiPayload(v143, v151, 8);
    sub_1000BD630(v59, v45);
    sub_1000CDB34();
    if (v53)
    {
      sub_1000C3498();
      v47 = v123;
    }
    sub_1000D1BD8();
    sub_1004AB310(v143, v60);
  }
  v61 = v151;
  v62 = *(_QWORD *)(v0 + 64);
  v63 = sub_1000D9B0C(v54);
  if ((dispatch thunk of NotificationsOptInManagerType.severeAcknowledged()(v63, v62) & 1) != 0)
  {
    v65 = v144;
    swift_storeEnumTagMultiPayload(v144, v61, 6);
    sub_1000C5148(v65);
    sub_1000CDB34();
    if (v53)
    {
      sub_1000C3498();
      v47 = v124;
    }
    v66 = v150;
    sub_1000D1BD8();
    sub_1004AB310(v144, v67);
  }
  else
  {
    v66 = v150;
  }
  if (qword_100BC1F10 != -1)
    swift_once(&qword_100BC1F10, sub_10015B0AC);
  v68 = qword_100CAE5C0;
  sub_10005329C(&qword_100C18180, v64, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsOptInMonitor, (uint64_t)&protocol conformance descriptor for NotificationsOptInMonitor);
  Configurable.setting<A>(_:)(v68, v147, v69);
  if (aBlock == 1)
  {
    v68 = v145;
    swift_storeEnumTagMultiPayload(v145, v61, 11);
    sub_1000C5148(v68);
    sub_1000DC04C();
    if (v53)
    {
      sub_1000BCDF8();
      v47 = v125;
    }
    *(_QWORD *)(v47 + 16) = v68;
    sub_1004AB310(v145, v47 + v66 + v0 * v50);
  }
  v70 = sub_1000BBAA8();
  v71 = dispatch thunk of NotificationsOptInManagerType.dismissedLocationIds()(v70);
  v72 = (uint64_t)v146;
  *v146 = v71;
  *(_BYTE *)(v72 + 8) = v149 & 1;
  v73 = sub_1000BD820();
  swift_storeEnumTagMultiPayload(v73, v74, 3);
  sub_1000C5148(v72);
  sub_1000DC04C();
  if (v53)
  {
    sub_1000BCDF8();
    v47 = v120;
  }
  *(_QWORD *)(v47 + 16) = v68;
  sub_1000C64DC();
  v75 = *(_QWORD *)(v0 + 56);
  v76 = *(_QWORD *)(v0 + 64);
  sub_1000DB418(v54, v75);
  v77 = v152;
  dispatch thunk of NotificationsOptInManagerType.lastTipDismissalDate()(v75, v76);
  v78 = v148;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16))(v148, v77, v154);
  v79 = sub_1000BD820();
  swift_storeEnumTagMultiPayload(v79, v80, 4);
  sub_1000C5148(v78);
  sub_1000DC04C();
  if (v53)
  {
    sub_1000BCDF8();
    v47 = v121;
  }
  *(_QWORD *)(v47 + 16) = v75;
  sub_1000C64DC();
  v81 = sub_1000BBAA8();
  if ((dispatch thunk of NotificationsOptInManagerType.tappedAllowLocation()(v81) & 1) != 0)
  {
    v82 = v129;
    v83 = sub_1000BD820();
    swift_storeEnumTagMultiPayload(v83, v84, 13);
    sub_1000C5148(v82);
    sub_1000DC04C();
    if (v53)
    {
      sub_1000BCDF8();
      v47 = v126;
    }
    *(_QWORD *)(v47 + 16) = v75;
    sub_1000C64DC();
  }
  v85 = sub_1000BBAA8();
  if ((dispatch thunk of NotificationsOptInManagerType.tappedAllowNotifications()(v85) & 1) != 0)
  {
    v86 = v130;
    static TaskPriority.userInitiated.getter();
    v87 = type metadata accessor for TaskPriority(0);
    _s7Weather24LocationCompositionStateOwst_0(v86, 0, 1, v87);
    v88 = (_QWORD *)sub_100098740((uint64_t)&unk_100B9E580, 40);
    v88[2] = 0;
    v88[3] = 0;
    v88[4] = v1;
    sub_1000992A0();
    v89 = sub_100966894(v86, (uint64_t)&unk_100C18190, (uint64_t)v88);
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr))(v0 + 72))(&aBlock);
    v90 = v131;
    sub_10005EAA0(aBlock + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v131);
    sub_10009925C();
    v91 = *(unsigned __int8 *)(v90 + *(int *)(v132 + 60));
    sub_1000215BC(v90, type metadata accessor for NotificationsOptInState);
    if (v91 != 1)
      goto LABEL_40;
    if (qword_100BC2440 != -1)
      swift_once(&qword_100BC2440, sub_1006F37F4);
    v92 = type metadata accessor for Logger(0);
    v93 = sub_1000AECD4(v92, (uint64_t)qword_100CAF0B8);
    v94 = Logger.logObject.getter(v93);
    v95 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)sub_10009D340();
      *(_WORD *)v96 = 0;
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Notification state says hasn't tapped allow notification but has requested notification permission, which are conflicting. Reset authorization flags", v96, 2u);
      sub_1000986F0((uint64_t)v96);
    }

    v97 = *(uint64_t (**)(uint64_t))(v1 + 16);
    v98 = *(_QWORD *)(v1 + 24);
    v99 = v128;
    v100 = sub_1000BD820();
    swift_storeEnumTagMultiPayload(v100, v101, 15);
    sub_1000C5148(v99);
    v157 = 0;
    aBlock = 0u;
    v156 = 0u;
    sub_100094EE4();
    sub_1000A5EBC(v99, (uint64_t)&aBlock, v97);
    sub_100021A14((uint64_t)&aBlock, (uint64_t *)&unk_100BFFA10);
    sub_1000215BC(v99, type metadata accessor for MainAction);
    v89 = v98;
  }
  swift_release(v89);
LABEL_40:
  v102 = sub_100098740((uint64_t)&unk_100B9E530, 32);
  *(_QWORD *)(v102 + 16) = v1;
  *(_QWORD *)(v102 + 24) = v47;
  sub_1000992A0();
  asyncMain(block:)(sub_100966E04, v102);
  sub_10009925C();
  v103 = sub_1000BBAA8();
  if ((dispatch thunk of NotificationsOptInManagerType.enteredSettingsApp()(v103) & 1) != 0)
  {
    v104 = sub_1000BBAA8();
    dispatch thunk of NotificationsOptInManagerType.resetEnteredSettingsApp()(v104);
    sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
    v105 = (void *)static OS_dispatch_queue.main.getter();
    v106 = v133;
    static DispatchTime.now()();
    v107 = v135;
    + infix(_:_:)(v106);
    v108 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
    v109 = v136;
    v108(v106, v136);
    v157 = sub_100966E0C;
    v158 = v1;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v156 = sub_100121D84;
    *((_QWORD *)&v156 + 1) = &unk_100B9E548;
    v110 = _Block_copy(&aBlock);
    sub_1000992A0();
    sub_10009880C();
    v111 = v137;
    static DispatchQoS.unspecified.getter(v112);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    sub_10005329C((unint64_t *)&qword_100BFFA20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v114 = v113;
    v115 = sub_1000BA294(&qword_100BD4F10);
    v116 = sub_100121014();
    v117 = v140;
    v118 = v142;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v115, v116, v142, v114);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v107, v111, v117, v110);
    _Block_release(v110);

    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v117, v118);
    (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v111, v139);
    v108(v107, v109);
  }
  (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
}

uint64_t sub_10002B480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  int v47;
  int v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  size_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  const void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  const void *v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const void *v118;
  int v119;
  size_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  int *v142;
  int v143;
  int v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  void *__dst;
  _BYTE *__dstb;
  int *__dsta;

  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v6);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BCD680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 8);
  v19 = *(_QWORD *)(a1 + v15 + 8);
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease(v19);
  v20 = *(_BYTE *)(v17 + 48);
  v21 = *(_QWORD *)(v16 + 16);
  v22 = *(_QWORD *)(v16 + 24);
  v23 = *(_QWORD *)(v16 + 32);
  v24 = *(_QWORD *)(v16 + 40);
  v25 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v25;
  v26 = *(_BYTE *)(v16 + 48);
  *(_BYTE *)(v16 + 48) = v20;
  sub_100176DD4(v21, v22, v23, v24, v26);
  v27 = *(_QWORD *)(v17 + 64);
  v28 = *(_QWORD *)(v16 + 64);
  *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
  *(_QWORD *)(v16 + 64) = v27;
  swift_bridgeObjectRelease(v28);
  v29 = *(_QWORD *)(v17 + 80);
  v30 = *(_QWORD *)(v16 + 80);
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  *(_QWORD *)(v16 + 80) = v29;
  swift_bridgeObjectRelease(v30);
  v31 = *(_QWORD *)(v17 + 96);
  v32 = *(_QWORD *)(v16 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_QWORD *)(v16 + 96) = v31;
  swift_bridgeObjectRelease(v32);
  v33 = *(_QWORD *)(v17 + 112);
  v34 = *(_QWORD *)(v16 + 112);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_QWORD *)(v16 + 112) = v33;
  swift_bridgeObjectRelease(v34);
  v35 = *(_QWORD *)(v17 + 128);
  v36 = *(_QWORD *)(v16 + 128);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  *(_QWORD *)(v16 + 128) = v35;
  swift_bridgeObjectRelease(v36);
  *(_BYTE *)(v16 + 136) = *(_BYTE *)(v17 + 136);
  *(_BYTE *)(v16 + 137) = *(_BYTE *)(v17 + 137);
  *(_BYTE *)(v16 + 138) = *(_BYTE *)(v17 + 138);
  v37 = *(_QWORD *)(v17 + 152);
  v38 = *(_QWORD *)(v16 + 152);
  *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
  *(_QWORD *)(v16 + 152) = v37;
  swift_bridgeObjectRelease(v38);
  *(_BYTE *)(v16 + 160) = *(_BYTE *)(v17 + 160);
  *(_BYTE *)(v16 + 161) = *(_BYTE *)(v17 + 161);
  v39 = a3[7];
  v40 = *(_QWORD *)(a1 + v39);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  swift_bridgeObjectRelease(v40);
  v41 = a3[8];
  v42 = *(_QWORD *)(a1 + v41);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  swift_release(v42 & 0xFFFFFFFFFFFFFFBLL);
  v43 = a3[9];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v47 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, (uint64_t)v46);
  v48 = _s7Weather24LocationCompositionStateOwet_0(v45, 1, (uint64_t)v46);
  if (v47)
  {
    if (!v48)
    {
      *(_BYTE *)v44 = *(_BYTE *)v45;
      *(_WORD *)(v44 + 1) = *(_WORD *)(v45 + 1);
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
      v49 = v46[8];
      v50 = (void *)(v44 + v49);
      v51 = (const void *)(v45 + v49);
      v52 = type metadata accessor for URL(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        v53 = sub_1000BA294(&qword_100BD4280);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      v154 = v46;
      v65 = v46[9];
      v66 = v44 + v65;
      v67 = v45 + v65;
      *(_BYTE *)v66 = *(_BYTE *)(v45 + v65);
      *(_QWORD *)(v66 + 8) = *(_QWORD *)(v45 + v65 + 8);
      v68 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
      v69 = v68[6];
      __dst = (void *)(v66 + v69);
      v70 = (const void *)(v67 + v69);
      if (_s7Weather24LocationCompositionStateOwet_0(v67 + v69, 1, v52))
      {
        v71 = sub_1000BA294(&qword_100BD4280);
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(__dst, v70, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v52);
      }
      *(_OWORD *)(v66 + v68[7]) = *(_OWORD *)(v67 + v68[7]);
      *(_QWORD *)(v66 + v68[8]) = *(_QWORD *)(v67 + v68[8]);
      *(_BYTE *)(v44 + v154[10]) = *(_BYTE *)(v45 + v154[10]);
      v72 = v154[11];
      v73 = (void *)(v44 + v72);
      v74 = (const void *)(v45 + v72);
      v75 = type metadata accessor for LocationOfInterest(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        v76 = sub_1000BA294(&qword_100BC3118);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      }
      *(_BYTE *)(v44 + v154[12]) = *(_BYTE *)(v45 + v154[12]);
      *(_BYTE *)(v44 + v154[13]) = *(_BYTE *)(v45 + v154[13]);
      v77 = v154[14];
      v78 = (_BYTE *)(v44 + v77);
      v79 = (_BYTE *)(v45 + v77);
      v80 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, (uint64_t)v80))
      {
        v81 = sub_1000BA294(&qword_100BCD688);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        *v78 = *v79;
        v82 = v80[5];
        v83 = &v78[v82];
        __dstb = &v79[v82];
        v84 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v83, __dstb, v84);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(&v78[v80[6]], &v79[v80[6]], v75);
        v78[v80[7]] = v79[v80[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, (uint64_t)v80);
      }
      v85 = v44;
      v86 = (uint64_t)v154;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v48)
  {
    sub_1000215BC(v44, type metadata accessor for LocationFooterViewModel);
LABEL_13:
    v54 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCD690) - 8) + 64);
    v55 = (void *)v44;
    v56 = (const void *)v45;
LABEL_14:
    memcpy(v55, v56, v54);
    goto LABEL_31;
  }
  *(_BYTE *)v44 = *(_BYTE *)v45;
  *(_BYTE *)(v44 + 1) = *(_BYTE *)(v45 + 1);
  *(_BYTE *)(v44 + 2) = *(_BYTE *)(v45 + 2);
  v57 = *(_QWORD *)(v45 + 16);
  v58 = *(_QWORD *)(v44 + 16);
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = v57;
  swift_bridgeObjectRelease(v58);
  v59 = v46[8];
  v60 = (void *)(v44 + v59);
  v61 = (const void *)(v45 + v59);
  v62 = type metadata accessor for URL(0);
  v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v62);
  v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  v111 = *(_QWORD *)(v62 - 8);
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v111 + 8))(v60, v62);
LABEL_41:
    v112 = sub_1000BA294(&qword_100BD4280);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v111 + 40))(v60, v61, v62);
LABEL_42:
  v113 = v46[9];
  v114 = v44 + v113;
  v115 = v45 + v113;
  *(_BYTE *)v114 = *(_BYTE *)(v45 + v113);
  v116 = *(_QWORD *)(v44 + v113 + 8);
  *(_QWORD *)(v114 + 8) = *(_QWORD *)(v45 + v113 + 8);
  swift_bridgeObjectRelease(v116);
  v155 = v115;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v117 = __dsta[6];
  v118 = (const void *)(v115 + v117);
  v153 = v114 + v117;
  LODWORD(v115) = _s7Weather24LocationCompositionStateOwet_0(v114 + v117, 1, v62);
  v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v62);
  if ((_DWORD)v115)
  {
    if (v119)
    {
      v120 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v121 = (void *)v153;
LABEL_47:
      memcpy(v121, v118, v120);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v153, v118, v62);
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v62);
  }
  else
  {
    v122 = *(_QWORD *)(v62 - 8);
    if (v119)
    {
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v153, v62);
      v120 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v121 = (void *)v153;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v122 + 40))(v153, v118, v62);
  }
LABEL_51:
  v123 = __dsta[7];
  v124 = (_QWORD *)(v114 + v123);
  v125 = (uint64_t *)(v155 + v123);
  v127 = *v125;
  v126 = v125[1];
  v128 = v124[1];
  *v124 = v127;
  v124[1] = v126;
  swift_bridgeObjectRelease(v128);
  v129 = __dsta[8];
  v130 = *(_QWORD *)(v114 + v129);
  *(_QWORD *)(v114 + v129) = *(_QWORD *)(v155 + v129);
  swift_release(v130);
  *(_BYTE *)(v44 + v46[10]) = *(_BYTE *)(v45 + v46[10]);
  v131 = v46[11];
  v132 = (void *)(v44 + v131);
  v133 = (const void *)(v45 + v131);
  v134 = type metadata accessor for LocationOfInterest(0);
  v135 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v134);
  v136 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134);
  if (v135)
  {
    if (!v136)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  v137 = *(_QWORD *)(v134 - 8);
  if (v136)
  {
    (*(void (**)(void *, uint64_t))(v137 + 8))(v132, v134);
LABEL_56:
    v138 = sub_1000BA294(&qword_100BC3118);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v137 + 40))(v132, v133, v134);
LABEL_57:
  *(_BYTE *)(v44 + v46[12]) = *(_BYTE *)(v45 + v46[12]);
  *(_BYTE *)(v44 + v46[13]) = *(_BYTE *)(v45 + v46[13]);
  v139 = v46[14];
  v140 = (_BYTE *)(v44 + v139);
  v141 = (_BYTE *)(v45 + v139);
  v142 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v143 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v140, 1, (uint64_t)v142);
  v144 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, (uint64_t)v142);
  if (v143)
  {
    if (!v144)
    {
      *v140 = *v141;
      v145 = v142[5];
      v146 = &v140[v145];
      v147 = &v141[v145];
      v148 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v146, v147, v148);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(&v140[v142[6]], &v141[v142[6]], v134);
      v140[v142[7]] = v141[v142[7]];
      v85 = (uint64_t)v140;
      v86 = (uint64_t)v142;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v85, 0, 1, v86);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v144)
  {
    sub_1000215BC((uint64_t)v140, type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    v54 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCD688) - 8) + 64);
    v55 = v140;
    v56 = v141;
    goto LABEL_14;
  }
  *v140 = *v141;
  v149 = v142[5];
  v150 = &v140[v149];
  v151 = &v141[v149];
  v152 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 40))(v150, v151, v152);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v134 - 8) + 40))(&v140[v142[6]], &v141[v142[6]], v134);
  v140[v142[7]] = v141[v142[7]];
LABEL_31:
  v87 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v87) = *(_BYTE *)(a2 + v87);
  v88 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v88) = *(_BYTE *)(a2 + v88);
  v89 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v90 = *(void **)(a1 + v89);
  *(_QWORD *)(a1 + v89) = *(_QWORD *)(a2 + v89);

  v91 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v91) = *(_BYTE *)(a2 + v91);
  v92 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v93 = a1 + v92;
  v94 = a2 + v92;
  v95 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
  v96 = a3[20];
  v97 = (void *)(a1 + v96);
  v98 = (const void *)(a2 + v96);
  v99 = type metadata accessor for ForegroundEffect(0);
  v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v99);
  v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99);
  if (!v100)
  {
    v102 = *(_QWORD *)(v99 - 8);
    if (!v101)
    {
      (*(void (**)(void *, const void *, uint64_t))(v102 + 40))(v97, v98, v99);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v102 + 8))(v97, v99);
    goto LABEL_36;
  }
  if (v101)
  {
LABEL_36:
    v103 = sub_1000BA294(&qword_100BC5B30);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
LABEL_37:
  v104 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v105 = *(_QWORD *)(a1 + v104);
  *(_QWORD *)(a1 + v104) = *(_QWORD *)(a2 + v104);
  swift_bridgeObjectRelease(v105);
  v106 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  v107 = a1 + v106;
  v108 = a2 + v106;
  v109 = type metadata accessor for LocationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 40))(v107, v108, v109);
  return a1;
}

uint64_t sub_10002BFD0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t *v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t active;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  int v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  int *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int *v225;
  uint64_t v226;
  char v227[8];
  uint64_t v228;

  v226 = a2;
  v220 = (int *)type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v218 = v5;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v217 = v7;
  v9 = __chkstk_darwin(v8);
  v221 = &v195 - v10;
  v215 = type metadata accessor for WeatherCoalescedLocationResult(0, v9);
  v214 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  sub_100088FDC();
  sub_10009511C(v11);
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  sub_10009511C(v13);
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  sub_10009511C(v15);
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  sub_10009511C(v17);
  sub_1000BA294(&qword_100BC5F40);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  sub_10009511C(v19);
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  sub_10009511C(v21);
  sub_1000BA294(&qword_100BC61F0);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v206 = v23;
  v205 = type metadata accessor for SavedLocation(0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100088FDC();
  v204 = v25;
  v211 = type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100098728();
  v29 = (uint64_t *)(v28 - v27);
  v225 = (int *)type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_1000986FC();
  v208 = v31;
  __chkstk_darwin(v32);
  v34 = &v195 - v33;
  __chkstk_darwin(v35);
  v219 = &v195 - v36;
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100088FDC();
  v224 = v38;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v223 = v40;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100088FDC();
  v222 = v42;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_100098728();
  v46 = v45 - v44;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_100098728();
  v50 = v49 - v48;
  sub_1000BA294(&qword_100BC3340);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_100098728();
  v54 = v53 - v52;
  v55 = type metadata accessor for EnvironmentState(0);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_100098728();
  v59 = v58 - v57;
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v60);
  sub_100098728();
  v63 = (_BYTE *)(v62 - v61);
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v64);
  sub_100098728();
  v67 = v66 - v65;
  if ((a3 - 1) > 1u)
  {
    v198 = v59;
    v199 = v54;
    v200 = v55;
    v216 = v66 - v65;
    v213 = v63;
    v209 = a3;
    v201 = v50;
    v202 = v46;
    v97 = v226;
    v98 = v226 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    sub_100084050(v226 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v34, type metadata accessor for ViewState);
    v99 = v225;
    sub_100084050((uint64_t)&v34[v225[5]], (uint64_t)v29, type metadata accessor for ViewState.SecondaryViewState);
    v100 = (uint64_t *)v211;
    if (swift_getEnumCaseMultiPayload(v29) == 1)
    {
      v100 = &OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
      v99 = v220;
      sub_1000215BC((uint64_t)v29, type metadata accessor for ViewState.SecondaryViewState);
    }
    else
    {
      v103 = *v29;
      if (*(_QWORD *)&v34[v99[9] + 8] != 1
        || (v104 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
            objc_msgSend(v104, "userInterfaceIdiom"),
            v104,
            (v34[v99[7]] & 1) != 0))
      {
        sub_1000215BC((uint64_t)v34, type metadata accessor for ViewState);
        v102 = v210;
        if ((sub_1002EFB7C(v103) & 1) != 0)
        {
          v99 = v220;
          v105 = LocationAuthorizationState.rawValue.getter(v209);
          if (v105 == 0x7265746544746F6ELL && v106 == 0xED000064656E696DLL)
          {
            sub_1000C149C();
            swift_bridgeObjectRelease();
          }
          else
          {
            v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v106, 0x7265746544746F6ELL, 0xED000064656E696DLL, 0);
            swift_bridgeObjectRelease();
            if ((v108 & 1) == 0)
            {
              v197 = v103;
              v163 = (uint64_t)v100;
              v100 = &OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
              v97 = v226;
              v164 = v206;
              sub_1002F6FCC(*(_QWORD *)(v226 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + v99[5]), v206);
              v165 = _s7Weather24LocationCompositionStateOwet_0(v164, 1, v205);
              if ((_DWORD)v165 == 1)
              {
                sub_1000B3B00(v165, &qword_100BC61F0);
                v166 = v208;
                sub_100084050(v98, v208, type metadata accessor for ViewState);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 1, 1, v163);
                v167 = type metadata accessor for SearchViewState(0);
                v168 = sub_1000DCD38(v167);
                v169 = sub_1000DD8E0(v168);
                sub_1000CCAF8(v169);
                sub_10009D4CC();
                sub_100112494();
                v170 = sub_1000CFC40();
                sub_1000988A0(v170, &qword_100BC5F68);
                sub_100094EEC(v171, &qword_100BC5F70);
                sub_10004A2CC(v172, &qword_100BC5F78);
                sub_1000B3B00(v173, &qword_100BC5F80);
                v174 = v166;
                v175 = type metadata accessor for ViewState;
              }
              else
              {
                v176 = v204;
                sub_1001C6CE4(v164, v204);
                sub_100084050(v98, v208, type metadata accessor for ViewState);
                v177 = v203;
                SavedLocation.identifier.getter(v178);
                v179 = type metadata accessor for Location.Identifier(0);
                sub_10009D4B8(v179);
                active = type metadata accessor for LocationViewerActiveLocationState(0);
                sub_10009D4B8(active);
                sub_100023164(v177, 3, 2, 4, 2, 3, v197);
                v182 = v181;
                sub_1000B3B00(v181, &qword_100BC5F40);
                v183 = v207;
                *v207 = v182;
                swift_storeEnumTagMultiPayload(v183, v163, 0);
                sub_100099444();
                _s7Weather24LocationCompositionStateOwst_0(v184, v185, v186, v163);
                v187 = type metadata accessor for SearchViewState(0);
                v188 = sub_1000DCD38(v187);
                v189 = sub_1000DD8E0(v188);
                sub_1000CCAF8(v189);
                sub_10009D4CC();
                v190 = v208;
                sub_100112494();
                v191 = sub_1000CFC40();
                sub_1000988A0(v191, &qword_100BC5F68);
                sub_100094EEC(v192, &qword_100BC5F70);
                sub_10004A2CC(v193, &qword_100BC5F78);
                sub_1000B3B00(v194, &qword_100BC5F80);
                sub_1000215BC(v190, type metadata accessor for ViewState);
                v175 = (uint64_t (*)(uint64_t))&type metadata accessor for SavedLocation;
                v174 = v176;
              }
              sub_1000215BC(v174, v175);
              goto LABEL_21;
            }
            sub_1000C149C();
          }
          v97 = v226;
        }
        else
        {
          sub_1000D9CA0();
        }
        v101 = v219;
LABEL_20:
        sub_100084050(v98, (uint64_t)v101, type metadata accessor for ViewState);
LABEL_21:
        v109 = v97 + *v100;
        v110 = v102[5];
        v111 = v102[6];
        sub_1000DB418(v102 + 2, v110);
        type metadata accessor for CurrentLocation(0);
        v112 = v221;
        sub_1000DF550();
        v113 = v212;
        dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:)(v112, *(_QWORD *)(v109 + v99[5]), *(_QWORD *)(v109 + v99[7]), v110, v111);
        sub_100021A14((uint64_t)v112, (uint64_t *)&unk_100C0D170);
        v220 = (int *)WeatherCoalescedLocationResult.coalescedLocations.getter(v114);
        (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v113, v215);
        v115 = type metadata accessor for AppConfigurationState(0);
        sub_10009D34C(v216, v116, v117, v115);
        v118 = v97 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        sub_1000992EC(v97 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, (uint64_t)v227);
        sub_100084050(v118, v198, type metadata accessor for EnvironmentState);
        v119 = type metadata accessor for Locale(0);
        v120 = v199;
        sub_10009D34C(v199, v121, v122, v119);
        v228 = 1;
        sub_1000C37C8();
        sub_1000DB8C0(2u, v209, 5, v120, v213, v195, v196, v197, v198, SBYTE1(v198), SBYTE2(v198), v199);
        sub_100098898(v123, &qword_100BC3340);
        sub_100099450();
        sub_100099444();
        _s7Weather24LocationCompositionStateOwst_0(v124, v125, v126, v200);
        v127 = v218;
        sub_100084050(v109, v218, type metadata accessor for LocationsState);
        sub_1000DF550();
        sub_10009C514((uint64_t)v112, v217);
        v128 = *(_QWORD *)(v127 + v99[7]);
        v129 = v127 + v99[12];
        v130 = *(_QWORD *)v129;
        v131 = *(_QWORD *)(v129 + 8);
        v132 = *(_QWORD *)(v127 + v99[13]);
        v133 = *(_BYTE *)(v129 + 16);
        swift_bridgeObjectRetain(*(_QWORD *)(v127 + v99[5]));
        swift_bridgeObjectRetain(v128);
        sub_100163980(v130, v131, v133);
        swift_bridgeObjectRetain(v132);
        v134 = v201;
        sub_1006EA08C();
        sub_100021A14((uint64_t)v221, (uint64_t *)&unk_100C0D170);
        sub_1000215BC(v127, type metadata accessor for LocationsState);
        sub_100099444();
        _s7Weather24LocationCompositionStateOwst_0(v135, v136, v137, (uint64_t)v99);
        v138 = type metadata accessor for NotificationsOptInState(0);
        v139 = v202;
        v142 = sub_1000B4458(v202, v140, v141, v138);
        v143 = v222;
        sub_10009D34C(v222, v144, v145, v142);
        v146 = v219;
        v147 = v223;
        sub_100084050((uint64_t)v219, v223, type metadata accessor for ViewState);
        sub_100099444();
        _s7Weather24LocationCompositionStateOwst_0(v148, v149, v150, (uint64_t)v225);
        v151 = type metadata accessor for ModalViewState(0);
        v152 = v224;
        _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v151);
        v153 = v213;
        v94 = sub_1000B4768(0, 3, v216, (uint64_t)v213, v154, v155, v156, v157, v139, v143, v147, v152, 0, 0, 0, 0, 0, 0, 0,
                v226);
        sub_100021A14(v152, &qword_100BC5F60);
        sub_100098898(v158, &qword_100BC5F88);
        sub_10004A2CC(v159, &qword_100BC5F90);
        sub_1000988A0(v160, &qword_100BC5F98);
        sub_100021A14(v134, &qword_100BC5FA0);
        sub_100021A14((uint64_t)v153, &qword_100BC5FA8);
        sub_100094EEC(v161, &qword_100BC5FB0);
        sub_1000215BC((uint64_t)v146, type metadata accessor for ViewState);
        return v94;
      }
      sub_1000D9CA0();
    }
    v101 = v219;
    v102 = v210;
    sub_1000215BC((uint64_t)v34, type metadata accessor for ViewState);
    goto LABEL_20;
  }
  v68 = type metadata accessor for AppConfigurationState(0);
  sub_10009D34C(v67, v69, v70, v68);
  v71 = v226;
  v72 = v226 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  sub_1000992EC(v226 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, (uint64_t)v227);
  sub_100084050(v72, v59, type metadata accessor for EnvironmentState);
  v73 = type metadata accessor for Locale(0);
  sub_10009D34C(v54, v74, v75, v73);
  v228 = 1;
  sub_1000C37C8();
  sub_1000DB8C0(2u, a3, 5, v54, v63, v195, v196, v197, v198, SBYTE1(v198), SBYTE2(v198), v199);
  sub_10004A2CC(v76, &qword_100BC3340);
  sub_100099450();
  sub_100099444();
  _s7Weather24LocationCompositionStateOwst_0(v77, v78, v79, v55);
  _s7Weather24LocationCompositionStateOwst_0(v50, 1, 1, (uint64_t)v220);
  v80 = type metadata accessor for NotificationsOptInState(0);
  v83 = sub_1000B4458(v46, v81, v82, v80);
  v84 = v222;
  sub_10009D34C(v222, v85, v86, v83);
  v87 = v223;
  _s7Weather24LocationCompositionStateOwst_0(v223, 1, 1, (uint64_t)v225);
  v88 = type metadata accessor for ModalViewState(0);
  v89 = v224;
  _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v88);
  v94 = sub_1000B4768(0, 3, v67, (uint64_t)v63, v90, v91, v92, v93, v46, v84, v87, v89, 0, 0, 0, 0, 0, 0, 0,
          v71);
  sub_100021A14(v89, &qword_100BC5F60);
  sub_100021A14(v87, &qword_100BC5F88);
  sub_100098898(v95, &qword_100BC5F90);
  sub_100021A14(v46, &qword_100BC5F98);
  sub_100021A14(v50, &qword_100BC5FA0);
  sub_100021A14((uint64_t)v63, &qword_100BC5FA8);
  sub_1000988A0(v96, &qword_100BC5FB0);
  return v94;
}

double sub_10002CD70()
{
  id v0;
  unint64_t v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = (unint64_t)objc_msgSend(v0, "userInterfaceIdiom");

  result = 0.0;
  if (v1 <= 5)
    return dbl_10099EEB8[v1];
  return result;
}

void sub_10002CDD8(char a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  int v11;
  NSObject *v12;
  os_log_type_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  sub_1000BA294(&qword_100BC30C8);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100079FBC();
  if (qword_100BC2500 != -1)
    swift_once(&qword_100BC2500, sub_100159654);
  v7 = sub_100098720();
  sub_1000AECD4(v7, (uint64_t)qword_100CAF2E8);
  sub_1000999A8();
  v8 = sub_10009C0A4();
  if (sub_1000C23F4(v8))
  {
    v9 = (uint8_t *)sub_100098710(2);
    *(_WORD *)v9 = 0;
    sub_1000D00B0((void *)&_mh_execute_header, v1, v2, "TipCoordinator initializing", v9);
    sub_1000986F0((uint64_t)v9);
  }

  v10 = type metadata accessor for SettingReader(0);
  static SettingReader.shared.getter(v10);
  if (qword_100BC2290 != -1)
    swift_once(&qword_100BC2290, sub_10015AE70);
  sub_1000CD0E0();
  sub_10009880C();
  v11 = v45;
  v12 = sub_100099C48();
  if (qword_100BC2288 != -1)
    swift_once(&qword_100BC2288, sub_10015AE90);
  sub_1000CD0E0();
  sub_10009880C();
  if ((v45 & 1) != 0)
  {
    sub_1000B26D8();
    v13 = sub_10009C0A4();
    if (sub_1000C23F4(v13))
    {
      v4 = (uint8_t *)sub_100098710(2);
      *(_WORD *)v4 = 0;
      sub_1000D00B0((void *)&_mh_execute_header, v12, v2, "Resetting Tips datastore", v4);
      sub_1000986F0((uint64_t)v4);
    }

    ((void (*)(void))static Tips.resetDatastore())();
    if (v11)
    {
      sub_1000B26D8();
      v14 = sub_10009C0A4();
      if (sub_1000AE9A0(v14))
      {
        v15 = (uint8_t *)sub_100098710(2);
        *(_WORD *)v15 = 0;
        sub_1000D00B0((void *)&_mh_execute_header, v12, (os_log_type_t)v4, "Setting resetDatastoreOnNextLaunchEnabled back to false", v15);
        sub_1000986F0((uint64_t)v15);
      }

      v16 = type metadata accessor for Settings.TappableModulesTipStore();
      swift_initStaticObject(v16, &unk_100BC28B0);
      v17 = qword_100CAEE10;
      v45 = 0;
      sub_100086DA4(&qword_100BF3FE0, (uint64_t (*)(uint64_t))type metadata accessor for Settings.TappableModulesTipStore, (uint64_t)&protocol conformance descriptor for Settings.TappableModulesTipStore);
      Updatable.save<A>(setting:value:)(v17, &v45, v16, v18);
    }
  }
  if (qword_100BC22A8 != -1)
    swift_once(&qword_100BC22A8, sub_10015AF74);
  v19 = ((uint64_t (*)(void))dispatch thunk of SettingGroup.isEnabled.getter)();
  if ((v19 & 1) != 0)
    v19 = static Tips.hideAllTipsForTesting()();
  if ((a1 & 1) != 0)
  {
    static Tips.resetDatastore()(v19);
    v21 = sub_1000BA294(&qword_100BFC608);
    v22 = swift_allocObject(v21, 128, 7);
    *(_OWORD *)(v22 + 16) = xmmword_10098C1A0;
    v23 = sub_10014936C();
    *(_QWORD *)(v22 + 32) = &unk_100B71678;
    *(_QWORD *)(v22 + 40) = v23;
    v24 = sub_1001445CC();
    *(_QWORD *)(v22 + 48) = &unk_100B716F0;
    *(_QWORD *)(v22 + 56) = v24;
    v25 = sub_100123A9C();
    *(_QWORD *)(v22 + 64) = &unk_100B71658;
    *(_QWORD *)(v22 + 72) = v25;
    v26 = sub_10014CDF8();
    *(_QWORD *)(v22 + 80) = &unk_100B71638;
    *(_QWORD *)(v22 + 88) = v26;
    v27 = sub_1001238FC();
    *(_QWORD *)(v22 + 96) = &unk_100B71590;
    *(_QWORD *)(v22 + 104) = v27;
    v28 = sub_10014D178();
    *(_QWORD *)(v22 + 112) = &unk_100B71610;
    *(_QWORD *)(v22 + 120) = v28;
    static Tips.hideTipsForTesting(_:)(v22);
    v20.n128_f64[0] = sub_1000986C4();
  }
  if ((dispatch thunk of SettingGroup.isEnabled.getter(v19, v20) & 1) != 0)
  {
    sub_100099C48();
    if (qword_100BC2228 != -1)
      swift_once(&qword_100BC2228, sub_1005C6178);
    sub_1000CD0E0();
    sub_10009880C();
    sub_1000DC78C();
    if (v29)
    {
      v30 = sub_1000BA294(&qword_100BFC608);
      v31 = sub_1000989D4(v30);
      *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
      v32 = sub_10014936C();
      *(_QWORD *)(v31 + 32) = &unk_100B71678;
    }
    else
    {
      sub_100099C48();
      if (qword_100BC2230 != -1)
        swift_once(&qword_100BC2230, sub_1005C6198);
      sub_1000CD0E0();
      sub_10009880C();
      sub_1000DC78C();
      if (v29)
      {
        v33 = sub_1000BA294(&qword_100BFC608);
        v31 = sub_1000989D4(v33);
        *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
        v32 = sub_1001445CC();
        *(_QWORD *)(v31 + 32) = &unk_100B716F0;
      }
      else
      {
        sub_100099C48();
        if (qword_100BC2238 != -1)
          swift_once(&qword_100BC2238, sub_1005C61B8);
        sub_1000CD0E0();
        sub_10009880C();
        sub_1000DC78C();
        if (v29)
        {
          v34 = sub_1000BA294(&qword_100BFC608);
          v31 = sub_1000989D4(v34);
          *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
          v32 = sub_100123A9C();
          *(_QWORD *)(v31 + 32) = &unk_100B71658;
        }
        else
        {
          sub_100099C48();
          if (qword_100BC2240 != -1)
            swift_once(&qword_100BC2240, sub_1005C61D8);
          sub_1000CD0E0();
          sub_10009880C();
          sub_1000DC78C();
          if (v29)
          {
            v35 = sub_1000BA294(&qword_100BFC608);
            v31 = sub_1000989D4(v35);
            *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
            v32 = sub_10014CDF8();
            v36 = &unk_100B71638;
          }
          else
          {
            sub_100099C48();
            if (qword_100BC2250 != -1)
              swift_once(&qword_100BC2250, sub_1005C6218);
            sub_1000CD0E0();
            sub_10009880C();
            sub_1000DC78C();
            if (v29)
            {
              v37 = sub_1000BA294(&qword_100BFC608);
              v31 = sub_1000989D4(v37);
              *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
              v32 = sub_1001238FC();
              v36 = &unk_100B71590;
            }
            else
            {
              sub_100099C48();
              if (qword_100BC2248 != -1)
                swift_once(&qword_100BC2248, sub_1005C61F8);
              sub_1000CD0E0();
              sub_10009880C();
              sub_1000DC78C();
              if (!v29)
                goto LABEL_55;
              v38 = sub_1000BA294(&qword_100BFC608);
              v31 = sub_1000989D4(v38);
              *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
              v32 = sub_10014D178();
              v36 = &unk_100B71610;
            }
          }
          *(_QWORD *)(v31 + 32) = v36;
        }
      }
    }
    *(_QWORD *)(v31 + 40) = v32;
    static Tips.showTipsForTesting(_:)(v31);
    sub_1000986C4();
  }
LABEL_55:
  sub_100099C48();
  if (qword_100BC2298 != -1)
    swift_once(&qword_100BC2298, sub_10015AEB0);
  sub_1000CD0E0();
  v39 = sub_10009880C();
  v40 = v45;
  static TaskPriority.high.getter(v39);
  v41 = type metadata accessor for TaskPriority(0);
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v41);
  v42 = sub_1000989D4((uint64_t)&unk_100B88990);
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  *(_BYTE *)(v42 + 32) = v40;
  *(_QWORD *)(v42 + 40) = v44;
  swift_retain();
  v43 = sub_10068CCF4(v3, (uint64_t)&unk_100BFC600, v42);
  swift_release(v43);
  sub_100120F24(v3);
  sub_100098640();
}

void sub_10002D56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, __n128);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];

  v69 = a7;
  v70 = a4;
  v71 = a6;
  v67 = a3;
  v10 = type metadata accessor for TimeState(0);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v65 = v11;
  v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Location(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v59 - v20;
  sub_10003773C(a2, (uint64_t)v14, &qword_100BC35F8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) == 1)
  {
    sub_100021A14((uint64_t)v14, &qword_100BC35F8);
    if (qword_100BC2480 != -1)
      swift_once(&qword_100BC2480, sub_1001597E8);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_1000AECD4(v22, (uint64_t)qword_100CAF168);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "WeatherDataStoreObserver: Fetching weather data for all locations", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    sub_100119A40();
    sub_100025AF4();
  }
  else
  {
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    __chkstk_darwin(v27);
    swift_bridgeObjectRetain(a1);
    v62 = a1;
    sub_10011EDD8();
    v29 = v28;
    if (qword_100BC2480 != -1)
      swift_once(&qword_100BC2480, sub_1001597E8);
    v63 = a5;
    v30 = type metadata accessor for Logger(0);
    sub_1000AECD4(v30, (uint64_t)qword_100CAF168);
    v31 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
    v61 = v21;
    v32 = v31(v19, v21, v15);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(22, -1);
      v36 = swift_slowAlloc(32, -1);
      v59 = v29;
      v37 = v36;
      *(_DWORD *)v35 = 141558275;
      v72 = 1752392040;
      v73[0] = v36;
      v38 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
      *(_WORD *)(v35 + 12) = 2081;
      v39 = Location.name.getter(v38);
      v41 = v40;
      v72 = sub_1000CE1C8(v39, v40, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
      v42 = swift_bridgeObjectRelease(v41);
      v60 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
      v60(v19, v15, v42);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "WeatherDataStoreObserver: Fetching weather data for priority location %{private,mask.hash}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy(v37, 1);
      v43 = v37;
      v29 = v59;
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      v60 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
      ((void (*)(char *, uint64_t))v60)(v19, v15);
    }

    v44 = v68;
    v59 = *(_QWORD *)(v68 + 16);
    v45 = swift_allocObject(&unk_100B9A860, 24, 7);
    swift_weakInit(v45 + 16, v44);
    v46 = v69;
    v47 = v66;
    sub_100095B78(v69, v66, type metadata accessor for TimeState);
    v48 = *(unsigned __int8 *)(v64 + 80);
    v49 = (v48 + 64) & ~v48;
    v50 = (v65 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    v51 = (_QWORD *)swift_allocObject(&unk_100B9A888, v50 + 8, v48 | 7);
    v51[2] = v45;
    v51[3] = v29;
    v52 = v67;
    v54 = v70;
    v53 = v71;
    v51[4] = v67;
    v51[5] = v54;
    v55 = (uint64_t)v51 + v49;
    v56 = v63;
    v51[6] = v63;
    v51[7] = v53;
    sub_10007C77C(v47, v55, type metadata accessor for TimeState);
    v57 = v62;
    *(_QWORD *)((char *)v51 + v50) = v62;
    swift_bridgeObjectRetain(v57);
    swift_retain();
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v53);
    v58 = (uint64_t)v61;
    sub_10003AE3C((uint64_t)v61, v52, v54, v56, v53, v46, 0, 0, (uint64_t)sub_100152148, (uint64_t)v51, v59, (uint64_t)v60, (uint64_t)v61, v62, v63, v64, v65, v66, v67,
      v68,
      v69,
      v70);
    swift_release(v51);
    ((void (*)(uint64_t, uint64_t))v60)(v58, v15);
    swift_release(v45);
  }
}

uint64_t sub_10002DB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  char *v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v40 = a2;
  v41 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v8 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BackgroundAnimationData(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100BC2810 != -1)
    swift_once(&qword_100BC2810, sub_10014FE30);
  v18 = byte_100C13A80;
  v38 = a1;
  sub_10000AB54(a1, (uint64_t)v17, type metadata accessor for WeatherConditionBackgroundModifier);
  if (v18 != 1)
  {
    sub_1000215BC((uint64_t)v17, type metadata accessor for WeatherConditionBackgroundModifier);
LABEL_9:
    v33 = 1;
    goto LABEL_11;
  }
  v37 = a4;
  v19 = &v17[*(int *)(v15 + 36)];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_10008D47C(*(_QWORD *)v19, v21);
  sub_100109B54();
  v23 = v22;
  sub_1000B15F8(v20, v21);
  sub_1000215BC((uint64_t)v17, type metadata accessor for WeatherConditionBackgroundModifier);
  if ((v23 & 1) == 0)
  {
    v33 = 1;
    a4 = v37;
    goto LABEL_11;
  }
  v25 = WeatherConditionBackgroundModel.animationData.getter(v24);
  BackgroundAnimationData.options.getter(v25);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v27 = WeatherConditionBackgroundOptions.canShowCollisionLayer.getter(v26);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v41);
  a4 = v37;
  if ((v27 & 1) == 0)
    goto LABEL_9;
  v28 = v39;
  if (!*(_QWORD *)(v39 + 16))
    goto LABEL_9;
  v29 = v38;
  sub_10014FFE8();
  v31 = v30;
  v32 = *(float *)(v29 + *(int *)(v15 + 116));
  swift_bridgeObjectRetain(v28);
  CollisionViewMetrics.init(vfxViewWidth:gapWidth:leadingPadding:componentWidths:)(v31, a5, v32);
  v33 = 0;
LABEL_11:
  v34 = type metadata accessor for CollisionViewMetrics(0);
  return _s7Weather24LocationCompositionStateOwst_0(a4, v33, 1, v34);
}

uint64_t sub_10002DD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  __n128 v87;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  _QWORD v110[12];

  v6 = sub_1000BA294(&qword_100C18680);
  __chkstk_darwin(v6);
  v104 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100C18688);
  v92 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v91 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100C18690);
  v95 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100C18698);
  v14 = __chkstk_darwin(v13);
  v103 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for _RegexFactory(0, v14);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100C186A0);
  v18 = __chkstk_darwin(v17);
  v99 = (uint64_t)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for CharacterClass(0, v18);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1000BA294(&qword_100C186A8);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v107 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Location(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v26);
  v108 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v29 = *(_QWORD *)(v28 + *(int *)(type metadata accessor for LocationsState(0) + 32));
  v30 = *(_QWORD *)(v29 + 16);
  v105 = v12;
  if (v30)
  {
    v89 = v10;
    v90 = v8;
    v31 = v29 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v109 = *(_QWORD *)(v23 + 72);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v106 = v29;
    swift_bridgeObjectRetain_n(v29, 2);
    v33 = v23;
    while (1)
    {
      v34 = v32(v25, v31, v22);
      v35 = Location.id.getter(v34);
      if (v35 == a1 && v36 == a2)
      {
        swift_bridgeObjectRelease();
        v45 = v90;
        v10 = v89;
        goto LABEL_14;
      }
      v38 = a1;
      v39 = a1;
      v40 = a2;
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v39, a2, 0);
      v42 = swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v25, v22, v42);
      v31 += v109;
      --v30;
      a2 = v40;
      a1 = v38;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        v43 = 1;
        v8 = v90;
        v10 = v89;
        goto LABEL_11;
      }
    }
    v45 = v90;
    v10 = v89;
    a2 = v40;
    a1 = v38;
LABEL_14:
    v8 = v45;
    v44 = (uint64_t)v108;
    v46 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v33 + 32))(v44, v25, v22, v46);
    v43 = 0;
  }
  else
  {
    swift_bridgeObjectRetain(v29);
    v43 = 1;
    v33 = v23;
LABEL_11:
    v44 = (uint64_t)v108;
  }
  _s7Weather24LocationCompositionStateOwst_0(v44, v43, 1, v22);
  swift_bridgeObjectRelease();
  v47 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, v22);
  if ((_DWORD)v47 == 1)
  {
    sub_100021A14(v44, &qword_100BC35F8);
    v48 = v10;
    v49 = v96;
    v50.n128_f64[0] = static RegexComponent<>.digit.getter();
    v51 = type metadata accessor for RegexRepetitionBehavior(0, v50);
    v52 = v99;
    _s7Weather24LocationCompositionStateOwst_0(v99, 1, 1, v51);
    v53 = v100;
    makeFactory()(v54);
    sub_10000F1C8(&qword_100C186B0, (uint64_t (*)(uint64_t))&type metadata accessor for CharacterClass);
    v55 = v103;
    v56 = v98;
    _RegexFactory.oneOrMore<A, B>(_:_:)(v49, v52, &type metadata for Substring, v98, v57);
    sub_100021A14(v52, &qword_100C186A0);
    v58 = v49;
    v59 = v8;
    v60 = v48;
    v61 = v105;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v58, v56);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v102);
    v62 = v107;
    v63 = OneOrMore.init(_:)(v55, &type metadata for Substring);
    __chkstk_darwin(v63);
    *(&v89 - 2) = (uint64_t)v62;
    v64 = a2;
    v65 = a1;
    v66 = sub_1000BA294(&qword_100C186B8);
    sub_10003D2DC(&qword_100C186C0, &qword_100C18690);
    v68 = v67;
    Regex.init<A>(_:)(sub_10096A734, &v89 - 4, v66, v60, v67);
    v110[0] = v65;
    v110[1] = v64;
    v69 = sub_1001C8F34();
    v70 = (uint64_t)v104;
    BidirectionalCollection<>.firstMatch<A, B>(of:)(v61, &type metadata for String, v66, v60, v69, v68);
    if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v59) == 1)
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v60);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v94);
      sub_100021A14(v70, &qword_100C18680);
      return 0;
    }
    v73 = v61;
    v74 = v92;
    v75 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v91, v70, v59);
    Regex.Match.output.getter(v110, v59);
    swift_bridgeObjectRelease();
    v76 = v110[8];
    v77 = v110[9];
    v79 = v110[10];
    v78 = v110[11];
    v80 = Double.init(_:)(v110[4], v110[5], v110[6], v110[7]);
    if ((v81 & 1) != 0)
    {
      v87 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v75, v59, v87);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v60);
      v84 = v94;
      v85 = v93;
      v86 = v107;
    }
    else
    {
      v72 = v80;
      Double.init(_:)(v76, v77, v79, v78);
      v83 = v82;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v59);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v60);
      v84 = v94;
      v85 = v93;
      v86 = v107;
      if ((v83 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v107, v94);
        return v72;
      }
    }
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v84);
    return 0;
  }
  v71 = Location.coordinate.getter(v47);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v44, v22);
  return *(_QWORD *)&v71;
}

uint64_t sub_10002E5A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumCaseMultiPayload;
  char v12;
  char v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v20;
  uint64_t v21;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100079FBC();
  type metadata accessor for MapComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100099864();
  v7 = type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018A98(a1, (uint64_t)v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v7);
  switch(EnumCaseMultiPayload)
  {
    case 0:
      sub_1000215BC((uint64_t)v10, type metadata accessor for LocationComponentViewModel);
      sub_100146AE8();
      v13 = v16;
      return v13 & 1;
    case 18:
      sub_10068D56C();
      break;
    case 5:
      sub_10068EEC8((uint64_t)v10, v1);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v2, v4) != enum case for WeatherMapOverlayKind.wind(_:))
      {
        sub_10068D440();
        v13 = v18;
        sub_1000215BC(v1, type metadata accessor for MapComponentViewModel);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
        return v13 & 1;
      }
      sub_10068D4A4();
      if ((v17 & 1) != 0)
      {
        v13 = 1;
      }
      else
      {
        sub_10068D440();
        v13 = v20;
      }
      v14 = type metadata accessor for MapComponentViewModel;
      v15 = v1;
      goto LABEL_10;
    case 16:
      sub_10068D508();
      break;
    case 1:
      sub_10001C170();
      break;
    default:
      sub_1000215BC((uint64_t)v10, type metadata accessor for LocationComponentViewModel);
      v13 = 0;
      return v13 & 1;
  }
  v13 = v12;
  v14 = type metadata accessor for LocationComponentViewModel;
  v15 = (uint64_t)v10;
LABEL_10:
  sub_1000215BC(v15, v14);
  return v13 & 1;
}

uint64_t sub_10002E788(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void ***v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void ***v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  void **aBlock;
  uint64_t v110;
  uint64_t (*v111)(uint64_t);
  void *v112;
  void (*v113)();
  uint64_t v114;
  uint64_t v115;

  v2 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  v101 = *((_QWORD *)v2 - 1);
  __chkstk_darwin(v2);
  v102 = v3;
  v104 = (uint64_t)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100C0A0A0);
  __chkstk_darwin(v4);
  v98 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100C12840);
  __chkstk_darwin(v6);
  v97 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v108 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v99 = v10;
  v100 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v103 = (char *)&v81 - v11;
  v85 = type metadata accessor for WeatherVFXViewModel(0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v82 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100C13F58);
  __chkstk_darwin(v13);
  v84 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for BackgroundAnimationKind(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for VFXEffectViewID(0);
  v90 = *(_QWORD *)(v91 - 8);
  v16 = __chkstk_darwin(v91);
  v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v81 - v19;
  v89 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for BackgroundAnimationData(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1000BA294(&qword_100BC4678);
  __chkstk_darwin(v25);
  v27 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (void ***)(a1 + v2[28]);
  v30 = *v28;
  v29 = (uint64_t)v28[1];
  aBlock = v30;
  v110 = v29;
  v31 = sub_1000BA294(&qword_100C13F60);
  State.wrappedValue.getter(&v115, v31);
  v32 = v115;
  v33 = a1 + v2[10];
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16);
  v95(v27, v33, v8);
  v105 = v8;
  _s7Weather24LocationCompositionStateOwst_0(v27, 0, 1, v8);
  v96 = (_QWORD *)v27;
  sub_10014E3A8(v27);
  swift_release(v32);
  v106 = a1;
  v107 = v2;
  v34 = (void ***)(a1 + v2[21]);
  v35 = v33;
  v37 = *v34;
  v36 = (uint64_t)v34[1];
  aBlock = v37;
  v110 = v36;
  v38 = sub_1000BA294(&qword_100C13F50);
  State.wrappedValue.getter(&v115, v38);
  v39 = v115;
  *(_BYTE *)(v115 + 16) = 1;
  swift_release(v39);
  v41 = WeatherConditionBackgroundModel.animationData.getter(v40);
  BackgroundAnimationData.options.getter(v41);
  v42 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v24, v87);
  WeatherConditionBackgroundOptions.effectViewID.getter(v42);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v22, v89);
  v43 = v90;
  v44 = v91;
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v18, enum case for VFXEffectViewID.locationViewer(_:), v91);
  LOBYTE(v27) = static VFXEffectViewID.== infix(_:_:)(v20, v18);
  v45 = *(void (**)(char *, uint64_t))(v43 + 8);
  v45(v18, v44);
  v46 = ((uint64_t (*)(char *, uint64_t))v45)(v20, v44);
  if ((v27 & 1) != 0)
  {
    if (qword_100BC2808 != -1)
      swift_once(&qword_100BC2808, sub_10014FC90);
    v47 = Namespace.wrappedValue.getter(*(_QWORD *)(v106 + v107[15]));
    swift_beginAccess(&off_100C13A78, &aBlock, 33, 0);
    sub_100120E08(&v115, v47);
    v46 = swift_endAccess(&aBlock);
  }
  v48 = v92;
  WeatherConditionBackgroundModel.animationKind.getter(v46);
  v49 = v93;
  v50 = v94;
  if ((*(unsigned int (**)(char *, uint64_t))(v93 + 88))(v48, v94) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    if ((WeatherVFXConditionBackground.isLoaded.getter() & 1) != 0)
    {
      v51 = (uint64_t)v84;
      WeatherVFXConditionBackground.backgroundEffectModel.getter();
      v52 = v85;
      if (_s7Weather24LocationCompositionStateOwet_0(v51, 1, v85))
      {
        sub_100021A14(v51, &qword_100C13F58);
      }
      else
      {
        v74 = v83;
        v75 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v51, v52);
        sub_100021A14(v51, &qword_100C13F58);
        v76 = (void *)WeatherVFXViewModel.effect.getter();
        v77 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v75, v52);
        if (v76)
        {
          v78 = dispatch thunk of VFXEffect.scene.getter(v77);
          if (!v78
            || (v79 = (void *)v78,
                v80 = dispatch thunk of VFXScene.effects.getter(),
                v79,
                LOBYTE(v79) = sub_1008A5B38((uint64_t)v76, v80),
                swift_bridgeObjectRelease(v80),
                (v79 & 1) == 0))
          {
            WeatherVFXConditionBackground.reset(animated:)(0);
          }

        }
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
  }
  v53 = (uint64_t)v103;
  v54 = v105;
  v55 = (void (*)(char *, uint64_t, uint64_t))v95;
  v95((uint64_t)v103, v35, v105);
  v56 = v106;
  v57 = sub_1000BA294(&qword_100C13D38);
  v58 = v96;
  State.wrappedValue.getter(v96, v57);
  v59 = type metadata accessor for DynamicTypeSize(0);
  v60 = v97;
  _s7Weather24LocationCompositionStateOwst_0(v97, 1, 1, v59);
  v61 = type metadata accessor for TargetWindowSizeClass(0);
  v62 = v98;
  _s7Weather24LocationCompositionStateOwst_0(v98, 1, 1, v61);
  sub_10005F264((uint64_t)v58, v53, v60, v62, 0, 0);
  sub_100021A14(v62, &qword_100C0A0A0);
  sub_100021A14(v60, &qword_100C12840);
  sub_100021A14((uint64_t)v58, &qword_100BC4678);
  v63 = (void *)objc_opt_self(CATransaction);
  v64 = v104;
  sub_10000AB54(v56, v104, type metadata accessor for WeatherConditionBackgroundModifier);
  v65 = v100;
  v55(v100, v53, v54);
  v66 = *(unsigned __int8 *)(v101 + 80);
  v67 = (v66 + 16) & ~v66;
  v68 = v108;
  v69 = *(unsigned __int8 *)(v108 + 80);
  v70 = (v102 + v69 + v67) & ~v69;
  v71 = swift_allocObject(&unk_100B9AE60, v70 + v99, v66 | v69 | 7);
  sub_10010E534(v64, v71 + v67);
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v71 + v70, v65, v54);
  v113 = sub_1001501CC;
  v114 = v71;
  aBlock = _NSConcreteStackBlock;
  v110 = 1107296256;
  v111 = sub_100121D84;
  v112 = &unk_100B9AE78;
  v72 = _Block_copy(&aBlock);
  objc_msgSend(v63, "setCompletionBlock:", v72, swift_release(v114).n128_f64[0]);
  _Block_release(v72);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v53, v54);
}

void sub_10002EFF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _BYTE v35[24];

  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v35, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v13 = Strong;
    v33 = v2;
    v14 = type metadata accessor for NWPathMonitor(0);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v15 = NWPathMonitor.init()();
    v16 = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v13 + 32) = v15;
    swift_release(v16);
    v17 = *(_QWORD *)(v13 + 32);
    if (v17)
    {
      swift_retain();
      swift_retain();
      v18 = sub_1000FDC6C((uint64_t)sub_10012EBB4, v13);
      NWPathMonitor.pathUpdateHandler.setter(sub_10012EBB4, v13, v18);
      swift_release(v17);
      swift_release(v13);
    }
    sub_10009FFE0();
    static DispatchQoS.unspecified.getter(v19);
    v34 = _swiftEmptyArrayStorage;
    sub_100086DA4((unint64_t *)&qword_100BC29A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
    v21 = v20;
    v22 = sub_1000BA294(&qword_100BC29B0);
    sub_100081288((unint64_t *)&qword_100BC29B8, &qword_100BC29B0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v22, v23, v6, v21);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
    v24 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002CLL, 0x8000000100A1C340, v11, v8, v5, 0);
    v25 = *(_QWORD *)(v13 + 32);
    if (v25)
    {
      v26 = swift_retain();
      NWPathMonitor.start(queue:)(v24, v26);
      swift_release(v25);
    }
    v27 = type metadata accessor for AirplaneModeMonitor();
    swift_allocObject(v27, 80, 7);
    v28 = sub_10000BCE8();
    v29 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v28;
    swift_release(v29);
    v30 = *(_QWORD *)(v13 + 40);
    if (v30)
    {
      swift_retain();
      swift_retain();
      sub_10013D654((uint64_t)sub_100967464, v13);
      swift_release(v30);
      v31 = *(_QWORD *)(v13 + 40);
      if (v31)
      {
        swift_retain();
        sub_10001E438(v24);
        swift_release(v13);
        v13 = v31;
      }
    }
    swift_release(v13);

  }
}

uint64_t sub_10002F2FC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v6);
  v9 = Calendar.isDateInToday(_:)(a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  objc_msgSend(a2, "setDateStyle:", (v9 & 1) == 0);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(a2, "stringFromDate:", isa);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  return v12;
}

#error "10002F4A0: call analysis failed (funcsize=62)"

#error "10002F5B8: call analysis failed (funcsize=62)"

uint64_t sub_10002F620@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a1;
  v41 = a2;
  v2 = sub_1000BA294(&qword_100C0A0A0);
  __chkstk_darwin(v2);
  v39 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(0);
  v40 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BackgroundAnimationData(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = WeatherConditionBackgroundModel.animationData.getter(v16);
  BackgroundAnimationData.options.getter(v19);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  WeatherConditionBackgroundOptions.cameraPositionType.getter(v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v7, enum case for WeatherConditionBackgroundConfig.CameraPositionType.list(_:), v4);
  sub_10000F1C8(&qword_100C13F88, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType);
  LOBYTE(v14) = dispatch thunk of static Equatable.== infix(_:_:)(v9, v7, v4, v22);
  v23 = *(void (**)(char *, uint64_t))(v21 + 8);
  v23(v7, v4);
  v23(v9, v4);
  if ((v14 & 1) != 0)
  {
    v24 = (void *)objc_opt_self(UIDevice);
    v25 = objc_msgSend(v24, "currentDevice", v38);
    v26 = objc_msgSend(v25, "userInterfaceIdiom");

    v27 = type metadata accessor for TargetWindowSizeClass(0);
    if (v26)
      v28 = (unsigned int *)&enum case for TargetWindowSizeClass.portraitRegular(_:);
    else
      v28 = (unsigned int *)&enum case for TargetWindowSizeClass.compact(_:);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v41, *v28, v27);
  }
  else
  {
    v29 = v39;
    sub_100037794(v38, v39, &qword_100C0A0A0);
    v30 = type metadata accessor for TargetWindowSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30) == 1)
    {
      sub_100021A14(v29, &qword_100C0A0A0);
      if (qword_100BC2438 != -1)
        swift_once(&qword_100BC2438, sub_100159690);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_1000AECD4(v31, (uint64_t)qword_100CAF0A0);
      v33 = Logger.logObject.getter(v32);
      v35 = static os_log_type_t.error.getter(v33, v34);
      if (os_log_type_enabled(v33, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v35, "VFX background is using compact configs because the target size class is not set", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v41, enum case for TargetWindowSizeClass.compact(_:), v30);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v41, v29, v30);
    }
  }
}

uint64_t sub_10002F9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F6FFC((uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, &qword_100BD0218, (void (*)(_QWORD))&type metadata accessor for LayoutSubview, a1);
}

#error "10002FA9C: call analysis failed (funcsize=62)"

void sub_10002FB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v1 = type metadata accessor for Date(0);
  __chkstk_darwin(v1);
  sub_100098728();
  v2 = type metadata accessor for NotificationsOptInAction(0);
  __chkstk_darwin(v2);
  sub_100098728();
  v5 = v4 - v3;
  v6 = sub_1000BA294(&qword_100BDECB0);
  __chkstk_darwin(v6);
  sub_100098728();
  sub_100131124(v0, v5);
  v7 = (char *)sub_10002FBFC + 4 * word_1009CDFD0[swift_getEnumCaseMultiPayload(v5, v2)];
  __asm { BR              X10 }
}

uint64_t sub_10002FBFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_1000BB650();
  sub_1000BCB54();
  sub_1000C4EFC();
  ShortDescription.init(name:_:)(v5, v6, v4, v7);
  v1[3] = v2;
  v1[4] = sub_100077ABC();
  v8 = sub_10005F164(v1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)v0 + 32))(v8, v3, v2);
}

void sub_1000301C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  __n128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void **aBlock;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  void *v109;
  uint64_t (*v110)();
  uint64_t v111;

  v2 = type metadata accessor for SavedLocation(0);
  v95 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v93 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v4;
  __chkstk_darwin(v3);
  v104 = (uint64_t)&v81 - v5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  __chkstk_darwin(v6);
  v99 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v97 = *(_QWORD *)(v8 - 8);
  v98 = v8;
  __chkstk_darwin(v8);
  v96 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v10);
  v89 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v102);
  v87 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for CurrentLocation(0);
  v83 = *(_QWORD *)(v88 - 8);
  v13 = __chkstk_darwin(v88);
  v85 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v14;
  __chkstk_darwin(v13);
  v86 = (uint64_t)&v81 - v15;
  v16 = type metadata accessor for MainAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a1[8] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v22, type metadata accessor for ViewState);
  v23 = *(_QWORD *)&v22[*(int *)(v20 + 36) + 8];
  sub_1000215BC((uint64_t)v22, type metadata accessor for ViewState);
  if (v23 != 1)
  {
    v24 = a1[5];
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = v24 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v27 = *(_QWORD *)(v17 + 72);
      v82 = a1[5];
      swift_bridgeObjectRetain(v24);
      v28 = type metadata accessor for MainAction;
      v92 = v16;
      v91 = v27;
      v90 = a1;
      while (1)
      {
        sub_100095B78(v26, (uint64_t)v19, v28);
        if (swift_getEnumCaseMultiPayload(v19, v16) == 3)
        {
          v29 = type metadata accessor for LocationsAction(0);
          if (swift_getEnumCaseMultiPayload(v19, v29) == 4)
          {
            v30 = *v19;
            if (!sub_10076ABC8((uint64_t)a1, *v19))
              goto LABEL_16;
            v31 = *(int *)(v102 + 20);
            v32 = *(_QWORD *)(*(_QWORD *)(a1[7] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + v31) + 16)
                - 1;
            v33 = a1[8] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
            v34 = *(_QWORD *)(v33 + v31);
            v35 = *(_QWORD *)(v34 + 16);
            v36 = v35 - 1;
            if (v30 != v32)
              v36 = v30;
            if (!v35)
            {
              swift_bridgeObjectRelease(v82);
              v62 = v87;
              sub_100095B78(v33, v87, type metadata accessor for LocationsState);
              v63 = v89;
              sub_10003773C(v62, v89, (uint64_t *)&unk_100C0D170);
              sub_1000215BC(v62, type metadata accessor for LocationsState);
              if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v88) == 1)
              {
                sub_100021A14(v63, (uint64_t *)&unk_100C0D170);
              }
              else
              {
                v64 = v86;
                sub_10007C77C(v63, v86, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
                v65 = sub_10009FFE0();
                v66 = (void *)static OS_dispatch_queue.main.getter(v65);
                v67 = v85;
                sub_100095B78(v64, v85, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
                v68 = *(unsigned __int8 *)(v83 + 80);
                v69 = (v68 + 24) & ~v68;
                v70 = swift_allocObject(&unk_100B8EC60, v69 + v84, v68 | 7);
                *(_QWORD *)(v70 + 16) = v105;
                sub_10007C77C(v67, v70 + v69, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
                v110 = sub_10076B2F0;
                v111 = v70;
                aBlock = _NSConcreteStackBlock;
                v107 = 1107296256;
                v108 = sub_100121D84;
                v109 = &unk_100B8EC78;
                v71 = _Block_copy(&aBlock);
                v72 = v111;
                swift_retain();
                v73 = swift_release(v72);
                v74 = v96;
                static DispatchQoS.unspecified.getter(v73);
                aBlock = (void **)_swiftEmptyArrayStorage;
                sub_10005329C((unint64_t *)&qword_100BFFA20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
                v76 = v75;
                v77 = sub_1000BA294(&qword_100BD4F10);
                v78 = sub_100121014();
                v79 = v99;
                v80 = v101;
                dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v77, v78, v101, v76);
                OS_dispatch_queue.async(group:qos:flags:execute:)(0, v74, v79, v71);
                _Block_release(v71);

                (*(void (**)(char *, uint64_t))(v100 + 8))(v79, v80);
                (*(void (**)(char *, uint64_t))(v97 + 8))(v74, v98);
                sub_1000215BC(v64, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
              }
              return;
            }
            if ((v36 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_22:
              __break(1u);
              return;
            }
            if (v36 >= v35)
              goto LABEL_22;
            v37 = *(unsigned __int8 *)(v95 + 80);
            v38 = v104;
            sub_100095B78(v34 + ((v37 + 32) & ~v37) + *(_QWORD *)(v95 + 72) * v36, v104, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
            v39 = sub_10009FFE0();
            v103 = static OS_dispatch_queue.main.getter(v39);
            v40 = v38;
            v41 = v93;
            sub_100095B78(v40, v93, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
            v42 = (v37 + 24) & ~v37;
            v43 = swift_allocObject(&unk_100B8EC10, v42 + v94, v37 | 7);
            *(_QWORD *)(v43 + 16) = v105;
            sub_10007C77C(v41, v43 + v42, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
            v110 = sub_10076B284;
            v111 = v43;
            aBlock = _NSConcreteStackBlock;
            v107 = 1107296256;
            v108 = sub_100121D84;
            v109 = &unk_100B8EC28;
            v44 = _Block_copy(&aBlock);
            v45 = v111;
            swift_retain();
            v46 = swift_release(v45);
            v47 = v96;
            static DispatchQoS.unspecified.getter(v46);
            aBlock = (void **)_swiftEmptyArrayStorage;
            sub_10005329C((unint64_t *)&qword_100BFFA20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v49 = v48;
            v50 = sub_1000BA294(&qword_100BD4F10);
            v51 = sub_100121014();
            v52 = v99;
            v53 = v28;
            v54 = v101;
            v55 = v49;
            v27 = v91;
            dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v50, v51, v101, v55);
            v56 = (void *)v103;
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v52, v44);
            v57 = v44;
            v16 = v92;
            _Block_release(v57);

            v58 = v52;
            a1 = v90;
            v59 = v54;
            v28 = v53;
            (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v59);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v47, v98);
            v60 = v104;
            v61 = (uint64_t (*)(uint64_t))&type metadata accessor for SavedLocation;
          }
          else
          {
            v60 = (uint64_t)v19;
            v61 = type metadata accessor for LocationsAction;
          }
        }
        else
        {
          v60 = (uint64_t)v19;
          v61 = v28;
        }
        sub_1000215BC(v60, v61);
        v26 += v27;
        if (!--v25)
        {
LABEL_16:
          swift_bridgeObjectRelease(v82);
          return;
        }
      }
    }
  }
}

uint64_t sub_1000309E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for SunriseSunsetNightRule(0);
  v24 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SunriseSunsetDayRule(0);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SunriseSunsetMorningRule(0);
  v22 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SunriseSunsetPolarRule(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = SunriseSunsetPolarRule.init()(v11);
  v15 = SunriseSunsetMorningRule.init()(v14);
  v16 = SunriseSunsetDayRule.init()(v15);
  SunriseSunsetNightRule.init()(v16);
  v17 = type metadata accessor for Date(0);
  v18 = type metadata accessor for SunriseSunsetDescriptionContext(0);
  v19 = static RuleBuilder.buildBlock<A, B, C, D>(_:_:_:_:)(v13, v8, v5, v2, v17, v18, v9, v6, v3, v0, &protocol witness table for SunriseSunsetPolarRule, &protocol witness table for SunriseSunsetMorningRule, &protocol witness table for SunriseSunsetDayRule, &protocol witness table for SunriseSunsetNightRule);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v19;
}

uint64_t sub_100030BEC()
{
  return Transaction.disablesPageScrollAnimations.setter(1);
}

uint64_t initializeWithCopy for VisibilityModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2[3];
  v6 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

void sub_100030C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  unsigned __int8 v8;
  _BYTE v9[29];
  char v10;
  char v11;
  char v12;
  _QWORD v13[4];

  sub_100076A50((_BYTE *)(v0 + 49), &v10);
  sub_100076A50(&v10, &v12);
  sub_1000B4E08();
  switch(v4)
  {
    case 6:
      sub_10007695C(v0 + 8, (uint64_t)v9);
      sub_1000C187C((uint64_t)v9, (uint64_t)v13);
      if ((v6 & 1) != 0)
        goto LABEL_9;
      goto LABEL_10;
    case 4:
      sub_10007695C(v0 + 8, (uint64_t)v9);
      sub_1000C187C((uint64_t)v9, (uint64_t)v13);
      if ((v5 & 1) != 0)
        goto LABEL_9;
      goto LABEL_10;
    case 2:
      sub_10007695C(v0 + 8, (uint64_t)v9);
      sub_1000C187C((uint64_t)v9, (uint64_t)v13);
      if ((v7 & 1) != 0)
      {
LABEL_9:
        sub_100076A98();
        sub_100076A50(&v10, &v11);
        sub_1000C4120();
        v8 = sub_1000DDF94();
        sub_1000BB66C(v8);
      }
LABEL_10:
      sub_1000BCB70();
      return;
  }
  sub_1000C4F0C((uint64_t)"Fatal error", v1, v2, v3, 0x8000000100A15650, (uint64_t)"Weather/GridGeometry.swift");
  __break(1u);
}

void sub_100030DD0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;

  sub_100110738(a1);
  sub_1000FDA40(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_100098918();
}

double sub_100030DF0@<D0>(uint64_t a1@<X8>)
{
  double result;
  double v3;
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int16 v8;
  __int128 v9;

  sub_100076608();
  sub_1000C2448((uint64_t)&unk_100B60890);
  result = v3;
  *(double *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  return result;
}

void sub_100030E64(uint64_t *a1)
{
  sub_100030E88(*a1, a1[1]);
  sub_10004A298();
}

void sub_100030E88(uint64_t a1, uint64_t a2)
{
  _QWORD v2[2];

  v2[0] = a1;
  v2[1] = a2;
  sub_100030F08();
  sub_1000C3584((uint64_t)v2, (uint64_t)&type metadata for TipAlignmentKey);
  sub_1000CC7E4();
}

void sub_100030EB8()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_1000994C0();
  v0[1] = v1;
  sub_10004A298();
}

uint64_t sub_100030ED4()
{
  uint64_t v1;

  sub_100030F08();
  sub_1000C2448((uint64_t)&type metadata for TipAlignmentKey);
  return v1;
}

unint64_t sub_100030F08()
{
  unint64_t result;

  result = qword_100BC5AE8;
  if (!qword_100BC5AE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TipAlignmentKey, &type metadata for TipAlignmentKey);
    atomic_store(result, (unint64_t *)&qword_100BC5AE8);
  }
  return result;
}

void sub_100030F44()
{
  sub_100030F60();
  sub_10004A298();
}

uint64_t sub_100030F60()
{
  unint64_t v0;

  v0 = sub_100030F88();
  sub_1000DCB00(v0, (uint64_t)&type metadata for WindowHorizontalSizeClassKey);
  return sub_1000BBC08();
}

unint64_t sub_100030F88()
{
  unint64_t result;

  result = qword_100BC5AD8;
  if (!qword_100BC5AD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WindowHorizontalSizeClassKey, &type metadata for WindowHorizontalSizeClassKey);
    atomic_store(result, (unint64_t *)&qword_100BC5AD8);
  }
  return result;
}

void sub_100030FC4(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a1;
  v2 = (int *)type metadata accessor for LocationComponentBackground(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BE3380);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BE3388);
  v8 = __chkstk_darwin(v57);
  v56 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v10 = sub_1000BA294(&qword_100BE3390);
  sub_10043A224(v1, (uint64_t)&v7[*(int *)(v10 + 44)]);
  v12 = static Alignment.center.getter(v11);
  v54 = v13;
  v55 = v12;
  v53 = &v7[*(int *)(v5 + 36)];
  v14 = (int *)type metadata accessor for LocationComponentContainerBackgroundView(0);
  v15 = v1 + v14[11];
  v16 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v4, v15, v16);
  v17 = v14[12];
  v52 = v1;
  v18 = *(_QWORD *)(v1 + v17);
  v19 = v1 + v14[14];
  v51 = *(_OWORD *)v19;
  v20 = *(_QWORD *)(v19 + 16);
  v50 = *(_QWORD *)(v19 + 24);
  v21 = *(_BYTE *)(v19 + 32);
  v22 = *(_BYTE *)(v1 + v14[10]);
  v23 = &v4[v2[5]];
  swift_retain();
  v24 = sub_1000BA294((uint64_t *)&unk_100C0A200);
  sub_10007AB60((uint64_t)&unk_100BC4620);
  *(_QWORD *)v23 = ObservedObject.init(wrappedValue:)(v18, v24, v25);
  *((_QWORD *)v23 + 1) = v26;
  v4[v2[6]] = 0;
  v27 = &v4[v2[7]];
  *(_OWORD *)v27 = v51;
  v28 = v50;
  *((_QWORD *)v27 + 2) = v20;
  *((_QWORD *)v27 + 3) = v28;
  v27[32] = v21;
  v4[v2[8]] = v22;
  v29 = &v4[v2[9]];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_10099FE78);
  v29[8] = 0;
  v30 = &v4[v2[10]];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_10099FDC0);
  v30[8] = 0;
  v31 = &v4[v2[11]];
  v32 = type metadata accessor for WeatherVFXConditionBackground(0);
  sub_10007A100((uint64_t)&qword_100BD0870);
  *(_QWORD *)v31 = EnvironmentObject.init()(v32, v33);
  *((_QWORD *)v31 + 1) = v34;
  v35 = &v4[v2[12]];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_1009A0B48);
  v36 = sub_1000BA294(&qword_100BD86C0);
  v37 = swift_storeEnumTagMultiPayload(v35, v36, 0);
  v38 = static Alignment.center.getter(v37);
  v40 = v39;
  v41 = sub_1000BA294(&qword_100BE3398);
  v43 = v52;
  v42 = (uint64_t)v53;
  v44 = (uint64_t)&v53[*(int *)(v41 + 36)];
  sub_10043B4D0(v52, v44);
  v45 = (uint64_t *)(v44 + *(int *)(sub_1000BA294(&qword_100BE33A0) + 36));
  *v45 = v38;
  v45[1] = v40;
  sub_10007C75C((uint64_t)v4, v42, type metadata accessor for LocationComponentBackground);
  v46 = (uint64_t *)(v42 + *(int *)(sub_1000BA294(&qword_100BE33A8) + 36));
  v47 = (uint64_t)v56;
  v48 = v54;
  *v46 = v55;
  v46[1] = v48;
  sub_100037768((uint64_t)v7, v47, &qword_100BE3380);
  *(_BYTE *)(v47 + *(int *)(v57 + 36)) = 1;
  sub_100021A14((uint64_t)v7, &qword_100BE3380);
  sub_10043B680(v43, v47, v58);
  sub_100021A14(v47, &qword_100BE3388);
}

uint64_t sub_100031354@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for LocationViewCollisionOptions(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for LocationViewCollisionOptions(uint64_t a1)
{
  uint64_t result;

  result = qword_100C0B040;
  if (!qword_100C0B040)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationViewCollisionOptions);
  return result;
}

double sub_1000313C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;

  v0 = type metadata accessor for Scope(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = ProxyContainer.public.getter(v2);
  v6 = type metadata accessor for Tracker(0);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0x75646F4D7473694CLL, 0xEA0000000000656CLL, sub_10055CB08, 0, v6);
  v8 = swift_release(v5);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, enum case for Scope.containerSingleton(_:), v0, v8);
  v9 = Definition.inScope(_:)(v4);
  swift_release(v9);
  v10 = swift_release(v7);
  (*(void (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v10);
  v11 = type metadata accessor for ListViewModelFactory(0);
  v12 = RegistrationContainer.register<A>(_:name:factory:)(v11, 0, 0, sub_10014A88C, 0, v11);
  swift_release(v12);
  v13 = sub_1000BA294(&qword_100BF0300);
  v14 = RegistrationContainer.register<A>(_:name:factory:)(v13, 0, 0, sub_10055CB84, 0, v13);
  swift_release(v14);
  v15 = sub_1000BA294(&qword_100BF0308);
  v16 = RegistrationContainer.register<A>(_:name:factory:)(v15, 0, 0, sub_10055CC08, 0, v15);
  swift_release(v16);
  v17 = sub_1000BA294(&qword_100BF0310);
  v18 = RegistrationContainer.register<A>(_:name:factory:)(v17, 0, 0, sub_10055CD8C, 0, v17);
  swift_release(v18);
  v19 = sub_1000BA294(&qword_100BC4708);
  v20 = RegistrationContainer.register<A>(_:name:factory:)(v19, 0, 0, sub_10055CDD8, 0, v19);
  swift_release(v20);
  v21 = sub_1000BA294((uint64_t *)&unk_100C0A200);
  v22 = RegistrationContainer.register<A>(_:name:factory:)(v21, 0, 0, sub_10055D030, 0, v21);
  swift_release(v22);
  v23 = sub_1000BA294(&qword_100BED428);
  v24 = RegistrationContainer.register<A>(_:name:factory:)(v23, 0, 0, sub_100143BF0, 0, v23);
  swift_release(v24);
  v25 = sub_1000BA294(&qword_100BED430);
  v26 = RegistrationContainer.register<A>(_:name:factory:)(v25, 0, 0, sub_100143BDC, 0, v25);
  swift_release(v26);
  v27 = sub_1000BA294(&qword_100BF0318);
  v28 = RegistrationContainer.register<A>(_:name:factory:)(v27, 0, 0, sub_10055D368, 0, v27);
  swift_release(v28);
  v29 = sub_1000BA294(&qword_100BF0320);
  v30 = RegistrationContainer.register<A>(_:name:factory:)(v29, 0, 0, sub_10014AB0C, 0, v29);
  swift_release(v30);
  v31 = sub_1000BA294(&qword_100BC46A0);
  v32 = RegistrationContainer.register<A>(_:name:factory:)(v31, 0, 0, sub_10055D3B4, 0, v31);
  swift_release(v32);
  v33 = sub_1000BA294(&qword_100BEFE98);
  v34 = RegistrationContainer.register<A>(_:name:factory:)(v33, 0, 0, sub_10055D5FC, 0, v33);
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

uint64_t sub_1000316D0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  id v10;
  id v11;

  v0 = Location.kind.getter();
  v1 = Location.Identifier.Kind.rawValue.getter(v0 & 1);
  v3 = v2;
  v4 = Location.Identifier.Kind.rawValue.getter(1);
  if (v1 == v4 && v3 == v5)
  {
    swift_bridgeObjectRelease_n(v3, 2);
  }
  else
  {
    v7 = v5;
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v4, v5, 0);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v7);
    if ((v8 & 1) == 0)
      return 2;
  }
  v10 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  if (v11)
    return 2;
  else
    return 1;
}

uint64_t destroy for Scroll(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 8));
}

uint64_t sub_1000317B0(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  _OWORD v19[3];

  if ((static LocationModel.== infix(_:_:)() & 1) == 0)
    goto LABEL_15;
  v4 = (int *)type metadata accessor for LocationViewerViewModel(0);
  sub_10009C58C();
  if ((v5 & 1) == 0)
    goto LABEL_15;
  sub_1000801CC((_QWORD *)(a1 + v4[6]), (_QWORD *)(a2 + v4[6]));
  if ((v6 & 1) != 0
    && (sub_1000BA538(), v7)
    && sub_1001315B0(*(_BYTE *)(a1 + v4[8]), *(_BYTE *)(a2 + v4[8]))
    && (sub_1000BA538(), v7)
    && (sub_1000BA538(), v7)
    && (sub_1000BA538(), v7)
    && (sub_1000F45A4(), (v8 & 1) != 0)
    && (sub_1000BA538(), v7))
  {
    v11 = v4[14];
    v12 = *(_OWORD *)(a1 + v11 + 16);
    v18[0] = *(_OWORD *)(a1 + v11);
    v18[1] = v12;
    v13 = *(_OWORD *)(a1 + v11 + 32);
    v14 = (__int128 *)(a2 + v11);
    v15 = *v14;
    v16 = v14[1];
    v18[2] = v13;
    v19[0] = v15;
    v17 = v14[2];
    v19[1] = v16;
    v19[2] = v17;
    v9 = sub_100125B68((uint64_t *)v18, v19);
  }
  else
  {
LABEL_15:
    v9 = 0;
  }
  return v9 & 1;
}

void sub_1000318C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t active;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  double v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  float v58;
  uint64_t v59;
  float v60;
  float v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[9];
  _BYTE __dst[88];

  v69 = a1;
  v73 = type metadata accessor for LayoutDirection(0);
  v72 = *(_QWORD *)(v73 - 8);
  v4 = __chkstk_darwin(v73);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v70 = (char *)&v67 - v6;
  v7 = type metadata accessor for Location.Identifier(0);
  v74 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v67 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1000BA294(&qword_100BCD780);
  __chkstk_darwin(v75);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  v15 = __chkstk_darwin(v14);
  v76 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v67 - v17;
  v19 = sub_1000BA294(&qword_100BCD680);
  v20 = __chkstk_darwin(v19);
  v68 = (uint64_t)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v67 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v67 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v67 - v28;
  sub_10006F614(a2, (uint64_t)v27);
  v30 = v2;
  sub_10011A3DC(v2, (uint64_t)v18);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v7) == 1)
  {
    v31 = *(_QWORD *)&v18[v14[8] + 8];
    swift_retain();
    sub_10006BDA4();
    swift_release(v31);
    sub_100019258((uint64_t)v13, (uint64_t)v29);
    sub_1000829D4((uint64_t)v18);
    sub_100021A68((uint64_t)v27, &qword_100BCD680);
    v32 = v74;
  }
  else
  {
    sub_1000829D4((uint64_t)v18);
    v32 = v74;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v29, v27, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v7);
  }
  v33 = (char *)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v24, v30 + v14[6], v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v7);
  v34 = (uint64_t)&v10[*(int *)(v75 + 48)];
  sub_10006F614((uint64_t)v24, (uint64_t)v10);
  sub_10006F614((uint64_t)v29, v34);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v7) == 1)
  {
    sub_100021A68((uint64_t)v24, &qword_100BCD680);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v7) == 1)
    {
      sub_100021A68((uint64_t)v10, &qword_100BCD680);
      v35 = v76;
      sub_10011A3DC(v30, v76);
LABEL_13:
      sub_1000829D4(v35);
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  v36 = v68;
  sub_10006F614((uint64_t)v10, v68);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v7) == 1)
  {
    sub_100021A68((uint64_t)v24, &qword_100BCD680);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v7);
LABEL_9:
    sub_100021A68((uint64_t)v10, &qword_100BCD780);
    v35 = v76;
    sub_10011A3DC(v30, v76);
    goto LABEL_10;
  }
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
  v75 = (uint64_t)v29;
  v39 = v67;
  v38(v67, v34, v7);
  v40 = sub_100051B90((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  v41 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v39, v7, v40);
  v42 = *(void (**)(char *, uint64_t))(v32 + 8);
  v42(v39, v7);
  sub_100021A68((uint64_t)v24, &qword_100BCD680);
  v29 = (char *)v75;
  v42((char *)v36, v7);
  sub_100021A68((uint64_t)v10, &qword_100BCD680);
  v35 = v76;
  sub_10011A3DC((uint64_t)v33, v76);
  if ((v41 & 1) != 0)
    goto LABEL_13;
LABEL_10:
  v37 = *(unsigned __int8 *)(v35 + v14[7]);
  sub_1000829D4(v35);
  if (v37 != 1)
    goto LABEL_26;
LABEL_14:
  memcpy(__dst, v33, 0x49uLL);
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000D4FF4);
  sub_10008CF58();
  sub_10008CED0((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000CEE98);
  v43 = *(double *)&v77[5];
  sub_100121C3C(0, v69);
  if (v44)
    v45 = v44;
  else
    v45 = _swiftEmptyArrayStorage;
  v77[0] = v45;
  swift_bridgeObjectRetain(v45);
  sub_100121AD0(v77);
  swift_bridgeObjectRelease(v45);
  v46 = v77[0];
  __chkstk_darwin(v47);
  *(&v67 - 2) = v33;
  sub_10084AD08((void (*)(int *__return_ptr, __int128 *))sub_100153408, (uint64_t)(&v67 - 4), v46);
  v49 = v48;
  swift_release(v46);
  v50 = v70;
  sub_1001591C8();
  v51 = v72;
  v52 = v71;
  v53 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, enum case for LayoutDirection.rightToLeft(_:), v73);
  LOBYTE(v46) = static LayoutDirection.== infix(_:_:)(v50, v52);
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v52, v53);
  v54(v50, v53);
  if ((v46 & 1) != 0)
  {
    sub_100202928(v49);
    v49 = v55;
  }
  v56 = &v33[v14[11]];
  v57 = *(_QWORD *)v56;
  if (*(_QWORD *)v56)
  {
    v58 = v43;
    swift_retain();
    v59 = sub_10010E6C8();
    v61 = v60;
    v62 = v59;
    swift_release(v57);
    if (v61 == v58)
    {
      v63 = sub_100121188(v62, v49);
      swift_bridgeObjectRelease(v62);
      if ((v63 & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      swift_bridgeObjectRelease(v62);
    }
    if (sub_10012ACBC(v49, v58) <= 0.0)
    {
LABEL_27:
      sub_100021A68((uint64_t)v29, &qword_100BCD680);
      swift_bridgeObjectRelease(v49);
      return;
    }
    swift_retain();
    sub_10012AB88(v49, v58);
    swift_release(v57);
LABEL_26:
    sub_100021A68((uint64_t)v29, &qword_100BCD680);
    return;
  }
  v64 = *((_QWORD *)v56 + 1);
  v65 = type metadata accessor for LocationViewCollisionOptions(0);
  v66 = sub_100051B90(&qword_100BCCB38, type metadata accessor for LocationViewCollisionOptions, (uint64_t)&unk_1009D07D4);
  EnvironmentObject.error()(0, v64, v65, v66);
  __break(1u);
}

void sub_100032068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v8 = sub_1000BA294(&qword_100BC3130);
  sub_1000D05F0(v8);
  sub_1000C0A4C();
  v12 = 0;
  v9 = sub_1000BA294(&qword_100BC5020);
  v10 = type metadata accessor for Tips.ParameterOption(0);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_10097CA50;
  static Tips.ParameterOption.transient.getter();
  Tips.Parameter.init<A>(_:_:_:_:)(a3, a4, a5, &v12, v11, &type metadata for Bool, a3, &protocol witness table for Bool, &protocol witness table for Bool);
  sub_1000BAB2C();
}

void sub_100032144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v12;

  v2 = sub_1000BA294(&qword_100BC3620);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for CurrentWeather(0);
  __chkstk_darwin(v3);
  v4 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v4);
  v5 = sub_1000BA294(&qword_100BC3460);
  __chkstk_darwin(v5);
  v6 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for CurrentLocation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v9, v10);
  v11 = (char *)sub_1000322FC + 4 * algn_1009CC64F[swift_getEnumCaseMultiPayload(v9, v7)];
  __asm { BR              X10 }
}

void sub_1000322FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v9 = *(_QWORD *)(*(_QWORD *)(v8 - 112) + *(int *)(type metadata accessor for BannerStateComputer(0) + 20))
     + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess(v9, v8 - 104, 0, 0);
  if (*(_BYTE *)(v9 + 2) != 4)
  {
    sub_1000215BC(v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    v12 = static Location.currentLocationID.getter(v11);
    v14 = v13;
    v15 = type metadata accessor for ContentStatusBanner(0);
    _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v15);
    type metadata accessor for BannerStateComputer(0);
    sub_1000F8E2C(v2, v12, v14);
    return;
  }
  if (*(_BYTE *)(v9 + *(int *)(type metadata accessor for EnvironmentState(0) + 60)))
    v10 = 2;
  else
    v10 = 1;
  *(_DWORD *)(v8 - 116) = v10;
  sub_1000215BC(v7, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 - 112)
                              + *(int *)(type metadata accessor for BannerStateComputer(0) + 20))
                  + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData
                  + 16);
  swift_bridgeObjectRetain(v16);
  v18 = static Location.currentLocationID.getter(v17);
  v20 = v19;
  sub_1000EED10(v18, v19, v16);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v16);
  v21 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v21) == 1)
  {
    v22 = &qword_100BC3380;
    v23 = v1;
  }
  else
  {
    sub_1000EADE8();
    sub_1000215BC(v1, type metadata accessor for LocationWeatherDataState);
    v24 = type metadata accessor for WeatherData(0);
    v25 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v24);
    if ((_DWORD)v25 != 1)
    {
      WeatherDataModel.currentWeather.getter(v25);
      sub_1000215BC(v6, type metadata accessor for WeatherData);
      CurrentWeather.date.getter(v27);
      (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v5, v4);
      v26 = 0;
      goto LABEL_12;
    }
    v22 = &qword_100BC3460;
    v23 = v6;
  }
  sub_100021A14(v23, v22);
  v26 = 1;
LABEL_12:
  v28 = type metadata accessor for Date(0);
  v29 = _s7Weather24LocationCompositionStateOwst_0(v3, v26, 1, v28);
  v30 = static Location.currentLocationID.getter(v29);
  v32 = v31;
  v33 = static Location.currentLocationID.getter(v30);
  v35 = v34;
  v36 = type metadata accessor for ContentStatusBanner(0);
  sub_100037768(v3, v2 + *(int *)(v36 + 24), (uint64_t *)&unk_100BD35A0);
  *(_BYTE *)v2 = *(_DWORD *)(v8 - 116);
  *(_QWORD *)(v2 + 8) = v33;
  *(_QWORD *)(v2 + 16) = v35;
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v36);
  sub_1000F8E2C(v2, v30, v32);
  sub_100021A14(v3, (uint64_t *)&unk_100BD35A0);
}

void sub_1000325B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (**v83)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90;
  char *v91;
  uint64_t v92;
  void (**v93)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  void *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  Swift::String v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void (**v173)(uint64_t@<X0>, uint64_t@<X8>);
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;

  v165 = a2;
  *(_QWORD *)&v184 = a1;
  v171 = a3;
  v3 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v3);
  v163 = (char *)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for BlendMode(0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_1000BA294(&qword_100C14050);
  __chkstk_darwin(v176);
  v159 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100C14058);
  v8 = __chkstk_darwin(v7);
  v170 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v169 = (uint64_t)&v142 - v10;
  v11 = sub_1000BA294(&qword_100C14060);
  __chkstk_darwin(v11);
  v147 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_1000BA294(&qword_100C14068);
  __chkstk_darwin(v182);
  v146 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100C13F58);
  __chkstk_darwin(v14);
  v174 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100C14070);
  v17 = __chkstk_darwin(v16);
  v168 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v183 = (uint64_t)&v142 - v19;
  v181 = type metadata accessor for WeatherVFXView(0);
  v178 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v177 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_1000BA294(&qword_100C14078);
  __chkstk_darwin(v172);
  v173 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))((char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v167 = type metadata accessor for WeatherVFXViewModel(0);
  v166 = *(_QWORD *)(v167 - 8);
  v22 = __chkstk_darwin(v167);
  v158 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = v23;
  __chkstk_darwin(v22);
  v180 = (char *)&v142 - v24;
  v157 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(0);
  v156 = *(_QWORD *)(v157 - 8);
  v25 = __chkstk_darwin(v157);
  v155 = (char *)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v154 = (char *)&v142 - v27;
  v153 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v142 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for BackgroundAnimationData(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v148 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  v142 = *(_QWORD *)(v30 - 8);
  v31 = __chkstk_darwin(v30);
  v144 = (uint64_t)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = v32;
  __chkstk_darwin(v31);
  v164 = (uint64_t)&v142 - v33;
  v34 = type metadata accessor for UserInterfaceSizeClass(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v142 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v38);
  v40 = (char *)&v142 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1000BA294(&qword_100BC5A68);
  v42 = __chkstk_darwin(v41);
  v44 = (char *)&v142 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v42);
  v47 = (char *)&v142 - v46;
  __chkstk_darwin(v45);
  v49 = (char *)&v142 - v48;
  v50 = sub_1000BA294(&qword_100C14080);
  v51 = __chkstk_darwin(v50);
  v175 = (uint64_t)&v142 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v51);
  v185 = (uint64_t)&v142 - v54;
  v179 = v30;
  sub_10011AA68(v53);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v47, enum case for UserInterfaceSizeClass.regular(_:), v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v34);
  v55 = (uint64_t)&v40[*(int *)(v38 + 48)];
  sub_100037794((uint64_t)v49, (uint64_t)v40, &qword_100BC5A68);
  sub_100037794((uint64_t)v47, v55, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v34) == 1)
  {
    sub_100021A14((uint64_t)v47, &qword_100BC5A68);
    sub_100021A14((uint64_t)v49, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v34) == 1)
    {
      sub_100021A14((uint64_t)v40, &qword_100BC5A68);
      v56 = v184;
      v57 = v164;
      sub_10000AB54(v184, v164, type metadata accessor for WeatherConditionBackgroundModifier);
      v59 = v167;
      v60 = v166;
      v61 = v179;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_100037794((uint64_t)v40, (uint64_t)v44, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v34) == 1)
  {
    sub_100021A14((uint64_t)v47, &qword_100BC5A68);
    sub_100021A14((uint64_t)v49, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v44, v34);
LABEL_6:
    sub_100021A14((uint64_t)v40, &qword_100BC5E60);
    v56 = v184;
    v57 = v164;
    sub_10000AB54(v184, v164, type metadata accessor for WeatherConditionBackgroundModifier);
    v59 = v167;
    v60 = v166;
LABEL_7:
    sub_1000215BC(v57, type metadata accessor for WeatherConditionBackgroundModifier);
    v62 = v165;
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v55, v34);
  sub_10000F1C8(&qword_100BC5AB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  v64 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v37, v34, v63);
  v65 = *(void (**)(char *, uint64_t))(v35 + 8);
  v65(v37, v34);
  sub_100021A14((uint64_t)v47, &qword_100BC5A68);
  sub_100021A14((uint64_t)v49, &qword_100BC5A68);
  v65(v44, v34);
  sub_100021A14((uint64_t)v40, &qword_100BC5A68);
  v56 = v184;
  v57 = v164;
  sub_10000AB54(v184, v164, type metadata accessor for WeatherConditionBackgroundModifier);
  v59 = v167;
  v60 = v166;
  v61 = v179;
  if ((v64 & 1) == 0)
    goto LABEL_7;
LABEL_9:
  v66 = v148;
  v67 = WeatherConditionBackgroundModel.animationData.getter(v58);
  v68 = v151;
  BackgroundAnimationData.options.getter(v67);
  v69 = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v66, v150);
  v70 = v154;
  WeatherConditionBackgroundOptions.displayLocation.getter(v69);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v68, v153);
  v71 = v156;
  v72 = v155;
  v73 = v157;
  (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v155, enum case for WeatherConditionBackgroundOptions.DisplayLocation.locationViewer(_:), v157);
  LOBYTE(v68) = static WeatherConditionBackgroundOptions.DisplayLocation.== infix(_:_:)(v70, v72);
  v74 = *(void (**)(char *, uint64_t))(v71 + 8);
  v74(v72, v73);
  v74(v70, v73);
  sub_1000215BC(v57, type metadata accessor for WeatherConditionBackgroundModifier);
  v62 = v165;
  if ((v68 & 1) != 0)
  {
    v75 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    v76 = v180;
    v75(v180, v165, v59);
    v77 = v144;
    sub_10000AB54(v56, v144, type metadata accessor for WeatherConditionBackgroundModifier);
    v78 = *(unsigned __int8 *)(v60 + 80);
    v79 = (v78 + 16) & ~v78;
    v80 = *(unsigned __int8 *)(v142 + 80);
    v81 = (v145 + v80 + v79) & ~v80;
    v82 = swift_allocObject(&unk_100B9B040, v81 + v143, v78 | v80 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v82 + v79, v76, v59);
    sub_10010E534(v77, v82 + v81);
    v83 = v173;
    *v173 = sub_100900C80;
    v83[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v82;
    swift_storeEnumTagMultiPayload(v83, v172, 0);
    v84 = sub_1000BA294(&qword_100C14088);
    sub_10003D2DC(&qword_100C14090, &qword_100C14088);
    v86 = v85;
    sub_10000F1C8(&qword_100C14098, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherVFXView);
    v88 = _ConditionalContent<>.init(storage:)(v83, v84, v181, v86, v87);
    goto LABEL_12;
  }
LABEL_11:
  v75 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v89 = v180;
  v75(v180, v62, v59);
  v90 = sub_10014FCA4();
  v91 = v177;
  WeatherVFXView.init(model:foregroundEffectsEnabled:)(v89, v90 & 1);
  v92 = v178;
  v93 = v173;
  v94 = v181;
  (*(void (**)(void (**)(uint64_t@<X0>, uint64_t@<X8>), char *, uint64_t))(v178 + 16))(v173, v91, v181);
  swift_storeEnumTagMultiPayload(v93, v172, 1);
  v95 = sub_1000BA294(&qword_100C14088);
  sub_10003D2DC(&qword_100C14090, &qword_100C14088);
  v97 = v96;
  sub_10000F1C8(&qword_100C14098, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherVFXView);
  _ConditionalContent<>.init(storage:)(v93, v95, v94, v97, v98);
  v99 = v91;
  v61 = v179;
  v88 = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v99, v94);
LABEL_12:
  v100 = (uint64_t)v174;
  WeatherVFXConditionBackground.collisionEffectModel.getter(v88);
  if (_s7Weather24LocationCompositionStateOwet_0(v100, 1, v59) == 1)
  {
    sub_100021A14(v100, &qword_100C13F58);
  }
  else
  {
    v101 = v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v158, v100, v59);
    v102 = (_QWORD *)(v56 + *(int *)(v61 + 52));
    v103 = (void *)v102[2];
    if (v103)
    {
      v104 = *(_QWORD *)(v56 + *(int *)(v61 + 52) + 8);
      *(_QWORD *)&v184 = *v102;
      v105 = v180;
      v75(v180, (uint64_t)v101, v59);
      v106 = v177;
      WeatherVFXView.init(model:foregroundEffectsEnabled:)(v105, 0);
      sub_10014FFE8();
      sub_10014FFE8();
      static Alignment.center.getter(v107);
      v108 = v60;
      v109 = (uint64_t)v147;
      sub_1009468C4();
      (*(void (**)(char *, uint64_t))(v178 + 8))(v106, v181);
      v187 = 0x6F6973696C6C6F63;
      *(_QWORD *)&v188 = 0xEA00000000002D6ELL;
      swift_bridgeObjectRetain(v103);
      v110._countAndFlagsBits = v104;
      v110._object = v103;
      String.append(_:)(v110);
      swift_bridgeObjectRelease(v103);
      v111 = v187;
      v112 = v188;
      v114 = static MatchedGeometryProperties.position.getter(v113);
      v115 = static UnitPoint.center.getter();
      v117 = v116;
      v118 = v146;
      sub_100037794(v109, v146, &qword_100C14060);
      v119 = v118 + *(int *)(v182 + 36);
      *(_QWORD *)v119 = v111;
      *(_QWORD *)(v119 + 8) = v112;
      *(_QWORD *)(v119 + 16) = v184;
      *(_DWORD *)(v119 + 24) = v114;
      *(double *)(v119 + 32) = v115;
      *(_QWORD *)(v119 + 40) = v117;
      *(_BYTE *)(v119 + 48) = 0;
      sub_100021A14(v109, &qword_100C14060);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v101, v59);
      v120 = v183;
      sub_1000F111C(v118, v183, &qword_100C14068);
      v121 = 0;
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v101, v59);
  }
  v121 = 1;
  v120 = v183;
LABEL_18:
  v122 = 1;
  v123 = _s7Weather24LocationCompositionStateOwst_0(v120, v121, 1, v182);
  WeatherVFXConditionBackground.backgroundMask.getter(&v186, v123);
  sub_1000F111C((uint64_t)&v186, (uint64_t)&v187, &qword_100C140A0);
  v124 = v187;
  v125 = v176;
  if (v187)
  {
    v184 = v188;
    v126 = v189;
    v127 = v190;
    v128 = v161;
    v129 = v160;
    v130 = v162;
    (*(void (**)(char *, _QWORD, uint64_t))(v161 + 104))(v160, enum case for BlendMode.destinationOut(_:), v162);
    v131 = (uint64_t)v163;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v163, v129, v130);
    v132 = v159;
    sub_10000AB54(v131, (uint64_t)&v159[*(int *)(v125 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    *(_QWORD *)v132 = v124;
    *(_OWORD *)(v132 + 8) = v184;
    *((_QWORD *)v132 + 3) = v126;
    *((_QWORD *)v132 + 4) = v127;
    *((_WORD *)v132 + 20) = 0;
    swift_bridgeObjectRetain(v124);
    sub_1000215BC(v131, (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
    sub_100158858(&v186);
    v133 = (uint64_t)v132;
    v120 = v183;
    v134 = v169;
    sub_1000F111C(v133, v169, &qword_100C14050);
    v122 = 0;
    v135 = v171;
    v136 = (uint64_t)v168;
    v137 = (uint64_t)v170;
  }
  else
  {
    v135 = v171;
    v136 = (uint64_t)v168;
    v137 = (uint64_t)v170;
    v134 = v169;
  }
  _s7Weather24LocationCompositionStateOwst_0(v134, v122, 1, v125);
  v138 = v185;
  v139 = v175;
  sub_100037794(v185, v175, &qword_100C14080);
  sub_100037794(v120, v136, &qword_100C14070);
  sub_100037794(v134, v137, &qword_100C14058);
  sub_100037794(v139, v135, &qword_100C14080);
  v140 = v120;
  v141 = sub_1000BA294(&qword_100C140A8);
  sub_100037794(v136, v135 + *(int *)(v141 + 48), &qword_100C14070);
  sub_100037794(v137, v135 + *(int *)(v141 + 64), &qword_100C14058);
  sub_100021A14(v134, &qword_100C14058);
  sub_100021A14(v140, &qword_100C14070);
  sub_100021A14(v138, &qword_100C14080);
  sub_100021A14(v137, &qword_100C14058);
  sub_100021A14(v136, &qword_100C14070);
  sub_100021A14(v139, &qword_100C14080);
}

uint64_t sub_100033644(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v2 = (int *)type metadata accessor for WeatherData(0);
  v3 = a1 + v2[5];
  v4 = type metadata accessor for Locale(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[6];
  v6 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[7];
  v8 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    v9 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  v10 = a1 + v2[8];
  v11 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + 8));
  }
  v14 = a1 + v2[9];
  v15 = type metadata accessor for WeatherDataOverrides(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v14, 1, v15);
  if (!(_DWORD)result)
  {
    v17 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v14, v17);
    v18 = v14 + *(int *)(v15 + 20);
    result = _s7Weather24LocationCompositionStateOwet_0(v18, 1, v17);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v18, v17);
  }
  return result;
}

double sub_100033808(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;

  v4 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + 8));
    v9 = v7 + v8[5];
    v10 = type metadata accessor for Locale(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v7 + v8[6];
    v12 = type metadata accessor for WeatherDataModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v7 + v8[7];
    v14 = sub_1000BA294(&qword_100BC3348);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    {
      v15 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
    v16 = v7 + v8[8];
    v17 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for WeatherStatisticsModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v16, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
    }
    v20 = v7 + v8[9];
    v21 = type metadata accessor for WeatherDataOverrides(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
    {
      v22 = type metadata accessor for Date(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v22))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
      v23 = v20 + *(int *)(v21 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v22))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v23, v22);
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

void sub_100033A34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1000BA294(a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_10004A298();
}

_QWORD *sub_100033A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  void (*v19)(char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;

  v1 = v0;
  v2 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentSizeCategory(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v32 - v10;
  type metadata accessor for LocationContentView(0);
  sub_100109D64();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v12 == enum case for ContentSizeCategory.extraSmall(_:)
    || v12 == enum case for ContentSizeCategory.small(_:)
    || v12 == enum case for ContentSizeCategory.medium(_:)
    || v12 == enum case for ContentSizeCategory.large(_:)
    || v12 == enum case for ContentSizeCategory.extraLarge(_:)
    || v12 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v12 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v12 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v19(v11, v5);
      v24 = *(_QWORD *)(v1 + 8);
      swift_retain();
      sub_10008D488();
      swift_release(v24);
      v25 = sub_1006F55F0();
LABEL_42:
      sub_1000215BC((uint64_t)v4, type metadata accessor for LocationViewModel);
      return v25;
    }
    v19(v9, v5);
    v19(v11, v5);
  }
  if (qword_100BC2558 != -1)
    swift_once(&qword_100BC2558, sub_10013AF44);
  v26 = byte_100C00A38;
  v27 = *(_QWORD *)(v1 + 8);
  swift_retain();
  sub_10008D488();
  swift_release(v27);
  if (v26 != 1)
  {
    v25 = *(_QWORD **)&v4[*(int *)(v2 + 28)];
    swift_bridgeObjectRetain(v25);
    goto LABEL_42;
  }
  v28 = *(_QWORD *)&v4[*(int *)(v2 + 32)];
  v29 = v28 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  sub_1000215BC((uint64_t)v4, type metadata accessor for LocationViewModel);
  sub_1003ED7D8(v28);
  v25 = v30;
  swift_release(v29);
  return v25;
}

void sub_100033D48(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  v8 = sub_10012B768(a1, a2, a3);
  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "labelColor", swift_retain().n128_f64[0]);
  v11 = Color.init(uiColor:)(v10);
  v12 = sub_10012BA68(a1, a2, a3);
  v13 = sub_10001EC08(a1, a2, a3);
  v14 = sub_10012B4AC(a1, a2, a3);
  sub_1000F9174(a1, a2);
  swift_release(v8);
  sub_100021AA4(a3, &qword_100BC5A68);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v11;
  *(_QWORD *)(a4 + 16) = v12;
  *(_QWORD *)(a4 + 24) = v13;
  *(_BYTE *)(a4 + 32) = v14;
}

void sub_100033E40(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, _QWORD *a10)
{
  uint64_t v16;
  char v17;
  int *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void *ObjCClassFromMetadata;
  id v47;
  id v48;
  _BYTE v52[9];
  uint64_t v53;

  *(_QWORD *)a9 = 0;
  type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10007A100((uint64_t)&unk_100BED878);
  *(_QWORD *)(a9 + 8) = sub_1000B2F30(v16);
  *(_BYTE *)(a9 + 16) = v17 & 1;
  v18 = (int *)sub_10007A064();
  v19 = (_QWORD *)(a9 + v18[6]);
  *v19 = swift_getKeyPath(&unk_1009AB878);
  v20 = sub_1000BA294(&qword_100BC37E0);
  sub_1000987D0(v20);
  v21 = a9 + v18[7];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1009AB8A0);
  *(_WORD *)(v21 + 8) = 0;
  v22 = (_QWORD *)(a9 + v18[8]);
  *v22 = swift_getKeyPath(&unk_1009AB848);
  v23 = sub_1000BA294(&qword_100BC37D8);
  sub_1000987D0(v23);
  v24 = (_QWORD *)(a9 + v18[9]);
  *v24 = swift_getKeyPath(&unk_1009AB7F8);
  v25 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  sub_1000987D0(v25);
  KeyPath = swift_getKeyPath(&unk_1009AB8C8);
  sub_10011E0F0(KeyPath);
  v27 = swift_getKeyPath(&unk_1009AB8F8);
  sub_10011E0F0(v27);
  v28 = swift_getKeyPath(&unk_1009AB928);
  sub_10011E0F0(v28);
  v29 = a9 + v18[13];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_1009AB958);
  *(_QWORD *)(v29 + 8) = 0;
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  *(_BYTE *)(v29 + 32) = 0;
  v30 = swift_getKeyPath(&unk_1009AB980);
  sub_10011E0F0(v30);
  Text.Measurements.init()(v31);
  v32 = a9 + v18[23];
  type metadata accessor for PageControlDisplayState(0);
  sub_10007A100((uint64_t)&unk_100BED880);
  *(_QWORD *)v32 = sub_1000B2F30(v33);
  *(_BYTE *)(v32 + 8) = v34 & 1;
  v35 = a9 + v18[24];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_1009AB9A8);
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 33) = 0u;
  v36 = a9 + v18[25];
  v52[0] = 0;
  State.init(wrappedValue:)(v52, &type metadata for Bool);
  v37 = v53;
  *(_BYTE *)v36 = v52[1];
  *(_QWORD *)(v36 + 8) = v37;
  v38 = a9 + v18[26];
  *(_QWORD *)v38 = sub_100124C30;
  *(_QWORD *)(v38 + 8) = 0;
  *(_BYTE *)(v38 + 16) = 0;
  v39 = v18[27];
  sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  *(_QWORD *)(a9 + v39) = OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD000000000000012, 0x80000001009AB600);
  v40 = (_QWORD *)(a9 + v18[15]);
  swift_retain();
  v41 = sub_100098B10();
  sub_1000BE924((uint64_t)&qword_100BC46D8);
  *v40 = ObservedObject.init(wrappedValue:)(a1, v41, v42);
  v40[1] = v43;
  sub_10003B59C((uint64_t)a2, a9 + v18[17]);
  *(_QWORD *)(a9 + v18[18]) = a3;
  *(_QWORD *)(a9 + v18[16]) = a4;
  v44 = (_QWORD *)(a9 + v18[19]);
  *v44 = a5;
  v44[1] = a6;
  sub_10003B59C((uint64_t)a7, a9 + v18[20]);
  *(_QWORD *)(a9 + v18[28]) = a8;
  sub_10003B59C((uint64_t)a10, a9 + v18[21]);
  v45 = sub_1000A0794(0, &qword_100BED888, UIToolbar_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v45);
  swift_retain();
  swift_unknownObjectRetain(a5);
  v47 = objc_msgSend(ObjCClassFromMetadata, "appearance", swift_retain().n128_f64[0]);
  v48 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v47, "setTintColor:", v48);
  swift_release(a1);
  swift_release(a4);
  swift_unknownObjectRelease(a5);
  swift_release(a8);

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a2);
  sub_100542EB4();
}

double sub_100034288(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSObject *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v5 = type metadata accessor for SceneConnectionOptions(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_opt_self(UIWindowScene);
  v10 = swift_dynamicCastObjCClass(a1, v9);
  if (!v10)
    return result;
  v12 = v10;
  v36 = a1;
  v13 = objc_msgSend(a3, "shortcutItem");
  if (v13)
  {
    v14 = v13;
    sub_1001484D0(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___shortcutItemHandlerManager, (uint64_t (*)(_QWORD))&type metadata accessor for ShortcutItemHandlerManager);
    ShortcutItemHandlerManager.handle(shortcutItem:)((UIApplicationShortcutItem)v14);

    sub_10009880C();
  }
  sub_1000C5340(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___stateManager, &qword_100BD44D0, (uint64_t (*)(_QWORD *, uint64_t))sub_10003C800, (uint64_t *)&unk_100BD44D8);
  v15 = v38;
  v16 = v39;
  sub_1000DB418(v37, v38);
  UISceneConnectionOptions.connectionOptions.getter();
  dispatch thunk of SceneStateManagerType.sceneWillConnectToSession(withOptions:)(v8, v15, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  sub_1001484D0(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___windowFrameMonitor, type metadata accessor for DisplayMetricsMonitor);
  v17 = sub_1000D16CC();
  v18 = sub_1000A0794(0, &qword_100BD44F8, UIWindow_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(void **)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v20)
      goto LABEL_9;
    goto LABEL_6;
  }
  if (v19 < 0)
    v35 = v19;
  else
    v35 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  v20 = (void *)_CocoaArrayWrapper.endIndex.getter(v35);
  sub_10009D2E0();
  if (v20)
  {
LABEL_6:
    sub_1001215C4(0, (v19 & 0xC000000000000001) == 0, v19);
    if ((v19 & 0xC000000000000001) != 0)
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
    else
      v21 = *(id *)(v19 + 32);
    v20 = v21;
  }
LABEL_9:
  sub_10009D2E0();
  sub_100137548(v20);
  sub_10009880C();
  v22 = objc_msgSend(a3, "userActivities");
  v23 = sub_1000A0794(0, (unint64_t *)&qword_100BD4500, NSUserActivity_ptr);
  v24 = sub_100120628();
  static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, v23, v24);

  sub_1001209BC();
  v26 = v25;
  sub_10009D2E0();
  if (v26)
  {
    if (qword_100BC2420 != -1)
      swift_once(&qword_100BC2420, sub_10015967C);
    v27 = sub_100098720();
    sub_1000AECD4(v27, (uint64_t)qword_100CAF058);
    sub_1000999A8();
    v28 = sub_10009C0A4();
    if (os_log_type_enabled(v22, v28))
    {
      v29 = (uint8_t *)sub_10009D340();
      *(_WORD *)v29 = 0;
      sub_1000D00B0((void *)&_mh_execute_header, v22, v28, "Scene is handling a user activity on launch", v29);
      sub_1000986F0((uint64_t)v29);
    }

    sub_1000C5340(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___continueUserActivityHandlerManager, &qword_100BD44E8, (uint64_t (*)(_QWORD *, uint64_t))sub_10003C800, &qword_100BD44F0);
    sub_1000DB418(v37, v38);
    sub_1004B704C(v26);

    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  }
  v30 = sub_1000D16CC();
  v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v18);

  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v32 = (void *)v31;
    else
      v32 = (void *)(v31 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v31);
    _CocoaArrayWrapper.endIndex.getter(v32);
    sub_1000B4720();
    if (v32)
      goto LABEL_17;
LABEL_29:

    *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
    return result;
  }
  v32 = *(void **)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v32)
    goto LABEL_29;
LABEL_17:
  sub_1001215C4(0, (v31 & 0xC000000000000001) == 0, v31);
  if ((v31 & 0xC000000000000001) != 0)
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
  else
    v33 = *(id *)(v31 + 32);
  sub_1000B4720();
  v34 = v36;
  static UIWindow.keyWindowScene.setter(v12);
  UIWindow.registerKeyWindowSceneNotification()();

  return result;
}

void sub_1000346D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v4 = v2;
  v45 = a2;
  v5 = sub_1000D1D08();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100079FBC();
  v7 = type metadata accessor for Container.Environment(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "launchedToTest", v9))
    objc_msgSend(v2, "_stopHangTracer");
  v12 = objc_msgSend((id)objc_opt_self(AMSEphemeralDefaults), "setSuppressEngagement:", 1);
  if (DeviceRequiresProMotionOptOut(v12))
  {
    v13 = objc_msgSend((id)objc_opt_self(CADisplay), "mainDisplay");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "overrideMinimumFrameDuration:", 4);

    }
  }
  v15 = sub_1000BA294(&qword_100BC3C38);
  v16 = sub_1000D0970(v15);
  *(_OWORD *)(v16 + 16) = xmmword_10097CA50;
  sub_10014CBAC();
  ContainerManager.containerEnvironment.getter();
  sub_10009880C();
  sub_1000C0CC8(&qword_100BCEF60, v17, (uint64_t (*)(uint64_t))&type metadata accessor for Container.Environment, (uint64_t)&protocol conformance descriptor for Container.Environment);
  v18 = (void *)dispatch thunk of CustomStringConvertible.description.getter(v7);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v21 = sub_1000B2E24();
  *(_QWORD *)(v16 + 64) = v21;
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;
  sub_100079FE8(v21, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  sub_1000D94A4();
  v22 = sub_10009C0A4();
  os_log(_:dso:log:type:_:)("Application will finish launching with container environment=%{public}@", 71, 2, &_mh_execute_header, v18, v22, v16);
  swift_bridgeObjectRelease();

  if (qword_100BC1EF0 != -1)
    swift_once(&qword_100BC1EF0, sub_10014B1C0);
  v23 = qword_100CAE578;
  v24 = sub_100094EE4();
  *(_BYTE *)(v23 + 16) = TFSetupCrashDetector(v24);
  sub_10009880C();
  sub_10014C9E4();
  sub_10014C66C();
  sub_100037674((uint64_t)v47);
  v25 = v48;
  v26 = v49;
  sub_1000DB418(v47, v48);
  v27 = sub_1000BD350();
  v28 = dispatch thunk of ResolverType.resolve<A>(_:)(v27, v27, v25, v26);
  if (!v28)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v29 = v28;
  sub_1000DB80C();
  if (v45)
    v30 = Dictionary<>.applicationStateLaunchOptions.getter();
  else
    v30 = 0;
  sub_1000B461C(enum case for StartupTaskExecutionPhase.willFinishLaunching(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 104));
  StartupTaskManager.startAllTasks(launchOptions:phase:)(v30, v3);
  swift_bridgeObjectRelease();
  sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_1000C25BC();
  v31 = v48;
  v32 = v49;
  sub_1000DB418(v47, v48);
  v33 = type metadata accessor for SessionManager(0);
  v34 = dispatch thunk of ResolverType.resolve<A>(_:)(v33, v33, v31, v32);
  if (!v34)
    goto LABEL_21;
  v35 = *(_QWORD *)&v4[OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager];
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager] = v34;
  swift_release(v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v47);
  sub_1000C25BC();
  v36 = v48;
  v37 = v49;
  sub_1000DB418(v47, v48);
  v38 = dispatch thunk of ResolverType.resolve<A>(_:name:)(v33, 0xD000000000000011, 0x80000001009F7050, v33, v36, v37);
  if (!v38)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_release(v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v47);
  sub_1000C25BC();
  v39 = sub_10009D3E4();
  v40 = type metadata accessor for AppSessionManager(v39);
  v41 = dispatch thunk of ResolverType.resolve<A>(_:)(v40, v40, v33, v36);
  if (!v41)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v42 = OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager;
  v43 = *(_QWORD *)&v4[OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager];
  *(_QWORD *)&v4[OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager] = v41;
  swift_release(v43);
  sub_1000DB80C();
  if (qword_100BC1F00 != -1)
    swift_once(&qword_100BC1F00, sub_10014C654);
  sub_1000C25BC();
  sub_1000BBC6C((uint64_t)&xmmword_100CAE588, (uint64_t)v46);
  sub_1000A3908((uint64_t)v47, (uint64_t)&xmmword_100CAE588, &qword_100BCED50);
  swift_endAccess(v46);
  if (*(_QWORD *)&v4[v42])
  {
    sub_100094EE4();
    AppSessionManager.startAppSession()();
    sub_10009880C();
  }
  swift_release(v29);
  sub_100098640();
}

void sub_100034B14(uint64_t a1)
{
  os_log_type_t v1;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_100BC2500 != -1)
    swift_once(&qword_100BC2500, sub_100159654);
  v3 = sub_100098720();
  v4 = sub_1000AECD4(v3, (uint64_t)qword_100CAF2E8);
  v5 = sub_100086124();
  Logger.logObject.getter(v5);
  v6 = sub_10009C0A4();
  v7 = &unk_10097D000;
  if (sub_1000BDA70(v6))
  {
    v8 = (uint8_t *)sub_100098710(12);
    v9 = sub_100098710(32);
    v24 = a1;
    v25 = v9;
    *(_DWORD *)v8 = 136315138;
    sub_10009EF94();
    v10 = String.init<A>(describing:)(&v24);
    v12 = v11;
    v24 = sub_1000CE1C8(v10, v11, &v25);
    v7 = (_QWORD *)&unk_10097D000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    sub_100098718(a1);
    swift_bridgeObjectRelease(v12);
    sub_10009D7A0((void *)&_mh_execute_header, v4, v1, "tipPriorityQueue update attempted - queue=%s", v8);
    sub_1000988D8(v9);
    sub_1000986F0(v9);
    sub_1000986F0((uint64_t)v8);

  }
  else
  {

    sub_100098718(a1);
  }
  sub_10068EF14();
  if (!v13 || (v14 = *(_QWORD *)(v13 + 16), swift_bridgeObjectRelease(v13), !v14))
  {
    v15 = sub_10009EF94();
    sub_100146570(v15, (uint64_t)&unk_1009BE0E8);
    v16 = sub_100086124();
    v17 = v4;
    Logger.logObject.getter(v16);
    v18 = sub_10009C0A4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)sub_100098710(12);
      v20 = sub_100098710(32);
      v24 = a1;
      v25 = v20;
      *(_DWORD *)v19 = v7[323];
      sub_10009EF94();
      v21 = String.init<A>(describing:)(&v24);
      v23 = v22;
      v24 = sub_1000CE1C8(v21, v22, &v25);
      sub_1000B2F74((uint64_t)&v24, (uint64_t)&v25);
      sub_100098718(a1);
      swift_bridgeObjectRelease(v23);
      sub_10009D7A0((void *)&_mh_execute_header, v17, v18, "tipPriorityQueueUpdated - queue=%s", v19);
      sub_1000988D8(v20);
      sub_1000986F0(v20);
      sub_1000986F0((uint64_t)v19);

    }
    else
    {

      sub_100098718(a1);
    }
  }
}

uint64_t sub_100034DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  unint64_t v35;
  __n128 v36;
  unsigned int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  utsname v85;

  v80 = a1;
  v81 = sub_1000BA294(&qword_100BD66A8);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v78 = (char *)&v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for OsInstallVariant(0);
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  __chkstk_darwin(v2);
  v71 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DeviceData(0);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  v5 = __chkstk_darwin(v4);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v82 = (char *)&v69 - v7;
  v8 = sub_1000BA294(&qword_100BD66B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DevicePlatform(0);
  v84 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v69 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v69 - v19;
  __chkstk_darwin(v18);
  v83 = (char *)&v69 - v21;
  v22 = type metadata accessor for DeviceInfo(0);
  v74 = *(_QWORD *)(v22 - 8);
  v75 = v22;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = static DeviceInfo.current.getter(v23);
  v27 = Tracker.diagnosticSubmissionAllowed.getter(v26);
  v72 = v25;
  v28 = DeviceInfo.marketingProductName.getter();
  v30 = v28;
  v31 = v29;
  if ((v27 & 1) == 0)
  {
    if (v28 == 5459817 && v29 == 0xE300000000000000)
    {
      v35 = 0xE300000000000000;
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(5459817, 0xE300000000000000, v28, v29, 0) & 1) == 0)
      {
        if (v30 == 0x534F63616DLL && v31 == 0xE500000000000000)
        {
          v36 = swift_bridgeObjectRelease(0xE500000000000000);
          v37 = (unsigned int *)&enum case for DevicePlatform.macOS(_:);
        }
        else
        {
          v68 = _stringCompareWithSmolCheck(_:_:expecting:)(0x534F63616DLL, 0xE500000000000000, v30, v31, 0);
          v36 = swift_bridgeObjectRelease(v31);
          v37 = (unsigned int *)&enum case for DevicePlatform.unknown(_:);
          if ((v68 & 1) != 0)
            v37 = (unsigned int *)&enum case for DevicePlatform.macOS(_:);
        }
        goto LABEL_13;
      }
      v35 = v31;
    }
    v36 = swift_bridgeObjectRelease(v35);
    v37 = (unsigned int *)&enum case for DevicePlatform.iOS(_:);
LABEL_13:
    v32 = v84;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v84 + 104))(v17, *v37, v11, v36);
    v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v33(v20, v17, v11);
    goto LABEL_14;
  }
  DevicePlatform.init(rawValue:)(v28, v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    v32 = v84;
    (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v20, enum case for DevicePlatform.unknown(_:), v11);
    sub_100021A14((uint64_t)v10, &qword_100BD66B0);
    v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  }
  else
  {
    v32 = v84;
    v33 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
    v33(v20, v10, v11);
  }
LABEL_14:
  v38 = v83;
  v33(v83, v20, v11);
  bzero(&v85, 0x500uLL);
  uname(&v85);
  v39 = String.init(cString:)(v85.machine);
  v41 = v40;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v38, v11);
  v42 = objc_msgSend((id)objc_opt_self(TFCapabilities), "isInternalBuild");
  v43 = (unsigned int *)&enum case for OsInstallVariant.internal(_:);
  if (!v42)
    v43 = (unsigned int *)&enum case for OsInstallVariant.external(_:);
  v44 = v71;
  v45 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v69 + 104))(v71, *v43, v70);
  v46 = v72;
  v47 = DeviceInfo.productVersion.getter(v45);
  v49 = v48;
  v50 = DeviceInfo.buildVersion.getter();
  v51 = v82;
  DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)(v39, v41, v14, v44, v47, v49, v50, v52);
  v71 = (char *)v11;
  v53 = v76;
  v54 = v77;
  v55 = v73;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v51, v77);
  sub_10000F1C8(&qword_100BD66B8, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceData);
  v57 = v56;
  v58 = v78;
  SessionData.init(key:data:)(0x6144656369766564, 0xEA00000000006174, v55, v54, v56);
  v59 = sub_1000BA294(&qword_100BCDC68);
  v60 = type metadata accessor for DataEventTrait(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(unsigned __int8 *)(v61 + 80);
  v63 = (v62 + 32) & ~v62;
  v64 = swift_allocObject(v59, v63 + *(_QWORD *)(v61 + 72), v62 | 7);
  *(_OWORD *)(v64 + 16) = xmmword_10097CA50;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v64 + v63, enum case for DataEventTrait.unique(_:), v60);
  AccessSessionManager.push<A>(_:traits:file:line:)(v58, v64, 0xD000000000000065, 0x80000001009FA420, 348, v54, v57);
  v65 = swift_bridgeObjectRelease(v64);
  (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v58, v81, v65);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v82, v54);
  (*(void (**)(char *, char *))(v84 + 8))(v83, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v46, v75);
}

void sub_1000353D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v1 = v0;
  v2 = sub_1000BA294(&qword_100BD6668);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TemperatureScaleData(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v35 - v12;
  if ((Tracker.diagnosticSubmissionAllowed.getter(v11) & 1) != 0)
  {
    v39 = v3;
    v14 = type metadata accessor for UnitManager(0);
    v15 = static UnitManager.standard.getter(v14);
    v40 = (id)UnitManager.temperature.getter();
    swift_release(v15);
    v16 = OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit;
    v17 = *(void **)(v1 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit);
    if (v17
      && (sub_1000A0794(0, (unint64_t *)&qword_100BC4D48, NSObject_ptr),
          v18 = v17,
          v19 = static NSObject.== infix(_:_:)(v18, v40),
          v18,
          (v19 & 1) != 0))
    {

    }
    else
    {
      v20 = v40;
      TemperatureScaleData.init(_:)(v40);
      v21 = *(void **)(v1 + v16);
      *(_QWORD *)(v1 + v16) = v40;
      v40 = v20;

      v38 = *(_QWORD *)(v1 + 32);
      v23 = SessionManager.tracker.getter(v22);
      sub_10000F1C8(&qword_100BD4618, (uint64_t (*)(uint64_t))&type metadata accessor for TemperatureScaleData);
      v25 = v24;
      v37 = 0x80000001009FA420;
      Tracker.push<A>(data:traits:file:line:)(v13, _swiftEmptyArrayStorage, 0xD000000000000065, 0x80000001009FA420, 460, v6, v24);
      v26 = swift_release(v23);
      (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v10, v13, v6, v26);
      SessionData.init(key:data:)(0xD000000000000014, 0x80000001009FA490, v10, v6, v25);
      v27 = sub_1000BA294(&qword_100BCDC68);
      v28 = type metadata accessor for DataEventTrait(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(_QWORD *)(v29 + 72);
      v31 = *(unsigned __int8 *)(v29 + 80);
      v36 = v2;
      v32 = (v31 + 32) & ~v31;
      v33 = swift_allocObject(v27, v32 + v30, v31 | 7);
      *(_OWORD *)(v33 + 16) = xmmword_10097CA50;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v33 + v32, enum case for DataEventTrait.unique(_:), v28);
      SessionManager.push<A>(_:traits:file:line:)(v5, v33, 0xD000000000000065, v37, 462, v6, v25);

      v34 = swift_bridgeObjectRelease(v33);
      (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v5, v36, v34);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
}

char *sub_1000356F4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  void (*v114)(char *, char *, uint64_t, __n128);
  __n128 v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v199)(char *, char *);
  void (*v200)(char *, char *);
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  v9 = v8[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1000BA294(&qword_100BC4E68);
  v204 = *(_QWORD *)(v12 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v204 + 24);
  v13(v10, v11, v12);
  v13(&a1[v8[6]], &a2[v8[6]], v12);
  v13(&a1[v8[7]], &a2[v8[7]], v12);
  v14 = v8[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  v18 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  v19 = v8[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v23 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[5];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *((_QWORD *)v26 + 1);
  v28 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  swift_retain();
  swift_release(v28);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = type metadata accessor for Date(0);
  v203 = *(_QWORD *)(v32 - 8);
  v205 = v32;
  v200 = *(void (**)(char *, char *))(v203 + 24);
  v200(v30, v31);
  v33 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  v34 = v33[5];
  v35 = &v30[v34];
  v36 = &v31[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  v38 = *((_QWORD *)v35 + 1);
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  v39 = v33[6];
  v40 = &v30[v39];
  v41 = &v31[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  v43 = *((_QWORD *)v40 + 1);
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  v44 = v33[7];
  v45 = &v30[v44];
  v46 = &v31[v44];
  v47 = type metadata accessor for TimeZone(0);
  v202 = *(_QWORD *)(v47 - 8);
  v206 = v47;
  v199 = *(void (**)(char *, char *))(v202 + 24);
  v199(v45, v46);
  v13(&v30[v33[8]], &v31[v33[8]], v12);
  v207 = v12;
  v201 = v13;
  v13(&v30[v33[9]], &v31[v33[9]], v12);
  v48 = v33[10];
  v49 = &v30[v48];
  v50 = &v31[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v51 = *((_QWORD *)v50 + 1);
  v52 = *((_QWORD *)v49 + 1);
  *((_QWORD *)v49 + 1) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = v33[11];
  v54 = &v30[v53];
  v55 = &v31[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  v57 = *((_QWORD *)v54 + 1);
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  *(_QWORD *)&v30[v33[12]] = *(_QWORD *)&v31[v33[12]];
  v30[v33[13]] = v31[v33[13]];
  v58 = v33[14];
  v59 = &v30[v58];
  v60 = &v31[v58];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v61 = *((_QWORD *)v60 + 1);
  v62 = *((_QWORD *)v59 + 1);
  *((_QWORD *)v59 + 1) = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  v63 = v33[15];
  v64 = &v30[v63];
  v65 = &v31[v63];
  v66 = type metadata accessor for Precipitation(0);
  LODWORD(v62) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  v208 = v66;
  if ((_DWORD)v62)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v68 = *(_QWORD *)(v66 - 8);
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v66);
LABEL_6:
    v69 = sub_1000BA294(&qword_100BCB338);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v64, v65, v66);
LABEL_7:
  v30[v33[16]] = v31[v33[16]];
  v70 = v33[17];
  v71 = &v30[v70];
  v72 = &v31[v70];
  *(_QWORD *)v71 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  v74 = *((_QWORD *)v71 + 1);
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRelease(v74);
  v75 = v33[18];
  v76 = &v30[v75];
  v77 = &v31[v75];
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v78 = *((_QWORD *)v77 + 1);
  v79 = *((_QWORD *)v76 + 1);
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRelease(v79);
  v80 = v33[19];
  v81 = &v30[v80];
  v82 = &v31[v80];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v83 = *((_QWORD *)v82 + 1);
  v84 = *((_QWORD *)v81 + 1);
  *((_QWORD *)v81 + 1) = v83;
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRelease(v84);
  v85 = v33[20];
  v86 = *(_QWORD *)&v31[v85];
  v87 = *(_QWORD *)&v30[v85];
  *(_QWORD *)&v30[v85] = v86;
  swift_bridgeObjectRetain(v86);
  swift_bridgeObjectRelease(v87);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v88 = a3[9];
  v89 = &a1[v88];
  v90 = &a2[v88];
  *(_QWORD *)v89 = *(_QWORD *)v90;
  *((_QWORD *)v89 + 1) = *((_QWORD *)v90 + 1);
  v91 = a3[10];
  v92 = &a1[v91];
  v93 = &a2[v91];
  *(_QWORD *)v92 = *(_QWORD *)v93;
  *((_QWORD *)v92 + 1) = *((_QWORD *)v93 + 1);
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  v94 = a3[13];
  v95 = &a1[v94];
  v96 = &a2[v94];
  v97 = *(_QWORD *)&a1[v94];
  *(_QWORD *)&a1[v94] = *(_QWORD *)&a2[v94];
  swift_retain();
  swift_release(v97);
  v98 = *((_QWORD *)v95 + 1);
  *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
  swift_retain();
  swift_release(v98);
  v99 = *(int *)(sub_1000BA294(&qword_100BCB330) + 32);
  v100 = &v95[v99];
  v101 = &v96[v99];
  LODWORD(v98) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, (uint64_t)v33);
  v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, (uint64_t)v33);
  if (!(_DWORD)v98)
  {
    if (v102)
    {
      sub_1000215BC((uint64_t)v100, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_13;
    }
    ((void (*)(char *, char *, uint64_t))v200)(v100, v101, v205);
    v134 = v33[5];
    v135 = &v100[v134];
    v136 = &v101[v134];
    *(_QWORD *)v135 = *(_QWORD *)v136;
    v137 = *((_QWORD *)v136 + 1);
    v138 = *((_QWORD *)v135 + 1);
    *((_QWORD *)v135 + 1) = v137;
    swift_bridgeObjectRetain(v137);
    swift_bridgeObjectRelease(v138);
    v139 = v33[6];
    v140 = &v100[v139];
    v141 = &v101[v139];
    *(_QWORD *)v140 = *(_QWORD *)v141;
    v142 = *((_QWORD *)v141 + 1);
    v143 = *((_QWORD *)v140 + 1);
    *((_QWORD *)v140 + 1) = v142;
    swift_bridgeObjectRetain(v142);
    v144 = swift_bridgeObjectRelease(v143);
    ((void (*)(char *, char *, uint64_t, __n128))v199)(&v100[v33[7]], &v101[v33[7]], v206, v144);
    v201(&v100[v33[8]], &v101[v33[8]], v207);
    v201(&v100[v33[9]], &v101[v33[9]], v207);
    v145 = v33[10];
    v146 = &v100[v145];
    v147 = &v101[v145];
    *(_QWORD *)v146 = *(_QWORD *)v147;
    v148 = *((_QWORD *)v147 + 1);
    v149 = *((_QWORD *)v146 + 1);
    *((_QWORD *)v146 + 1) = v148;
    swift_bridgeObjectRetain(v148);
    swift_bridgeObjectRelease(v149);
    v150 = v33[11];
    v151 = &v100[v150];
    v152 = &v101[v150];
    *(_QWORD *)v151 = *(_QWORD *)v152;
    v153 = *((_QWORD *)v152 + 1);
    v154 = *((_QWORD *)v151 + 1);
    *((_QWORD *)v151 + 1) = v153;
    swift_bridgeObjectRetain(v153);
    swift_bridgeObjectRelease(v154);
    *(_QWORD *)&v100[v33[12]] = *(_QWORD *)&v101[v33[12]];
    v100[v33[13]] = v101[v33[13]];
    v155 = v33[14];
    v156 = &v100[v155];
    v157 = &v101[v155];
    *(_QWORD *)v156 = *(_QWORD *)v157;
    v158 = *((_QWORD *)v157 + 1);
    v159 = *((_QWORD *)v156 + 1);
    *((_QWORD *)v156 + 1) = v158;
    swift_bridgeObjectRetain(v158);
    swift_bridgeObjectRelease(v159);
    v160 = v33[15];
    v161 = &v100[v160];
    v162 = &v101[v160];
    LODWORD(v143) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v100[v160], 1, v208);
    v163 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v208);
    if ((_DWORD)v143)
    {
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v161, v162, v208);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v208);
LABEL_23:
        v100[v33[16]] = v101[v33[16]];
        v180 = v33[17];
        v181 = &v100[v180];
        v182 = &v101[v180];
        *(_QWORD *)v181 = *(_QWORD *)v182;
        v183 = *((_QWORD *)v182 + 1);
        v184 = *((_QWORD *)v181 + 1);
        *((_QWORD *)v181 + 1) = v183;
        swift_bridgeObjectRetain(v183);
        swift_bridgeObjectRelease(v184);
        v185 = v33[18];
        v186 = &v100[v185];
        v187 = &v101[v185];
        *(_QWORD *)v186 = *(_QWORD *)v187;
        v188 = *((_QWORD *)v187 + 1);
        v189 = *((_QWORD *)v186 + 1);
        *((_QWORD *)v186 + 1) = v188;
        swift_bridgeObjectRetain(v188);
        swift_bridgeObjectRelease(v189);
        v190 = v33[19];
        v191 = &v100[v190];
        v192 = &v101[v190];
        *(_QWORD *)v191 = *(_QWORD *)v192;
        v193 = *((_QWORD *)v192 + 1);
        v194 = *((_QWORD *)v191 + 1);
        *((_QWORD *)v191 + 1) = v193;
        swift_bridgeObjectRetain(v193);
        swift_bridgeObjectRelease(v194);
        v195 = v33[20];
        v196 = *(_QWORD *)&v101[v195];
        v197 = *(_QWORD *)&v100[v195];
        *(_QWORD *)&v100[v195] = v196;
        swift_bridgeObjectRetain(v196);
        swift_bridgeObjectRelease(v197);
        return a1;
      }
    }
    else
    {
      v178 = *(_QWORD *)(v208 - 8);
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(v178 + 24))(v161, v162, v208);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v178 + 8))(v161, v208);
    }
    v179 = sub_1000BA294(&qword_100BCB338);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
    goto LABEL_23;
  }
  if (v102)
  {
LABEL_13:
    v133 = sub_1000BA294(&qword_100BCB340);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v100, v101, v205);
  v103 = v33[5];
  v104 = &v100[v103];
  v105 = &v101[v103];
  *(_QWORD *)v104 = *(_QWORD *)v105;
  v106 = *((_QWORD *)v105 + 1);
  *((_QWORD *)v104 + 1) = v106;
  v107 = v33[6];
  v108 = &v100[v107];
  v109 = &v101[v107];
  *(_QWORD *)v108 = *(_QWORD *)v109;
  v110 = *((_QWORD *)v109 + 1);
  *((_QWORD *)v108 + 1) = v110;
  v111 = v33[7];
  v112 = &v100[v111];
  v113 = &v101[v111];
  v114 = *(void (**)(char *, char *, uint64_t, __n128))(v202 + 16);
  swift_bridgeObjectRetain(v106);
  v115 = swift_bridgeObjectRetain(v110);
  v114(v112, v113, v206, v115);
  v116 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
  v116(&v100[v33[8]], &v101[v33[8]], v207);
  v116(&v100[v33[9]], &v101[v33[9]], v207);
  v117 = v33[10];
  v118 = &v100[v117];
  v119 = &v101[v117];
  *(_QWORD *)v118 = *(_QWORD *)v119;
  v120 = *((_QWORD *)v119 + 1);
  *((_QWORD *)v118 + 1) = v120;
  v121 = v33[11];
  v122 = &v100[v121];
  v123 = &v101[v121];
  *(_QWORD *)v122 = *(_QWORD *)v123;
  v124 = *((_QWORD *)v123 + 1);
  *((_QWORD *)v122 + 1) = v124;
  *(_QWORD *)&v100[v33[12]] = *(_QWORD *)&v101[v33[12]];
  v100[v33[13]] = v101[v33[13]];
  v125 = v33[14];
  v126 = &v100[v125];
  v127 = &v101[v125];
  *(_QWORD *)v126 = *(_QWORD *)v127;
  v128 = *((_QWORD *)v127 + 1);
  *((_QWORD *)v126 + 1) = v128;
  v129 = v33[15];
  v130 = &v100[v129];
  v131 = &v101[v129];
  swift_bridgeObjectRetain(v120);
  swift_bridgeObjectRetain(v124);
  swift_bridgeObjectRetain(v128);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v208))
  {
    v132 = sub_1000BA294(&qword_100BCB338);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v130, v131, v208);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v208);
  }
  v100[v33[16]] = v101[v33[16]];
  v164 = v33[17];
  v165 = &v100[v164];
  v166 = &v101[v164];
  *(_QWORD *)v165 = *(_QWORD *)v166;
  v167 = *((_QWORD *)v166 + 1);
  *((_QWORD *)v165 + 1) = v167;
  v168 = v33[18];
  v169 = &v100[v168];
  v170 = &v101[v168];
  *(_QWORD *)v169 = *(_QWORD *)v170;
  v171 = *((_QWORD *)v170 + 1);
  *((_QWORD *)v169 + 1) = v171;
  v172 = v33[19];
  v173 = &v100[v172];
  v174 = &v101[v172];
  *(_QWORD *)v173 = *(_QWORD *)v174;
  v175 = *((_QWORD *)v174 + 1);
  *((_QWORD *)v173 + 1) = v175;
  v176 = v33[20];
  v177 = *(_QWORD *)&v101[v176];
  *(_QWORD *)&v100[v176] = v177;
  swift_bridgeObjectRetain(v167);
  swift_bridgeObjectRetain(v171);
  swift_bridgeObjectRetain(v175);
  swift_bridgeObjectRetain(v177);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, (uint64_t)v33);
  return a1;
}

_QWORD *sub_100036180()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  double (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[3];
  void *v15;
  double (*v16)(uint64_t);
  uint64_t v17;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  UIApplication.expectedWindow.getter(v14);

  v3 = v15;
  v4 = v16;
  sub_1000DB418(v14, (uint64_t)v15);
  dispatch thunk of WindowType.bounds.getter(v3, v4);
  v6 = v5;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v14);
  v1[2] = v6;
  v7 = type metadata accessor for ResettingBool();
  swift_allocObject(v7, 33, 7);
  v1[3] = ResettingBool.init(wrappedValue:interval:)(0, 1.0);
  swift_allocObject(v7, 33, 7);
  v1[4] = ResettingBool.init(wrappedValue:interval:)(0, 1.0);
  v1[5] = 0;
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v9 = swift_allocObject(&unk_100B8BD38, 24, 7);
  swift_weakInit(v9 + 16);
  v16 = sub_10070D144;
  v17 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10070BCF4;
  v15 = &unk_100B8BD50;
  v10 = _Block_copy(v14);
  v11 = objc_msgSend(v8, "addObserverForName:object:queue:usingBlock:", UIDeviceOrientationDidChangeNotification, 0, 0, v10, swift_release(v17).n128_f64[0]);
  _Block_release(v10);

  v12 = v1[5];
  v1[5] = v11;
  swift_unknownObjectRelease(v12);
  return v1;
}

double sub_10003634C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v2 = v1;
  v4 = sub_1000BA294(&qword_100BC30C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_retain();
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_100B889E0, 41, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v10 + 32) = v2;
  *(_BYTE *)(v10 + 40) = a1;
  sub_100966894((uint64_t)v6, (uint64_t)&unk_100BFC650, v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100036428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54[2];

  v3 = type metadata accessor for BackgroundAnimationData(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  __chkstk_darwin(v3);
  v46 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v52 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnimatedGradient(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SkyBackgroundGradient(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = WeatherConditionBackgroundModel.gradient.getter(v15);
  v17 = SkyBackgroundGradient.gradient()(v16);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  v49 = v1;
  v18 = sub_1000BA294(&qword_100C13D28);
  v19 = State.wrappedValue.getter(v10, v18);
  v20 = AnimatedGradient.visibleGradient.getter(v19);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  LOBYTE(v7) = static Gradient.== infix(_:_:)(v17, v20);
  swift_bridgeObjectRelease(v20);
  if ((v7 & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    if (qword_100BC2438 != -1)
      swift_once(&qword_100BC2438, sub_100159690);
    v22 = type metadata accessor for Logger(0);
    sub_1000AECD4(v22, (uint64_t)qword_100CAF0A0);
    v24 = v50;
    v23 = v51;
    v25 = v52;
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, a1, v51);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc(22, -1);
      v31 = swift_slowAlloc(32, -1);
      v45 = v31;
      *(_DWORD *)v30 = 141558275;
      v53 = 1752392040;
      v54[0] = v31;
      v32 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      *(_WORD *)(v30 + 12) = 2081;
      v43[1] = v30 + 14;
      v33 = v46;
      v44 = v29;
      WeatherConditionBackgroundModel.animationData.getter(v32);
      sub_10000F1C8(&qword_100C13F98, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundAnimationData);
      v34 = v48;
      v35 = dispatch thunk of CustomStringConvertible.description.getter(v48);
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v34);
      v53 = sub_1000CE1C8(v35, v37, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      v38 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v52, v23, v38);
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v44, "Updating gradient background; model=%{private,mask.hash}s",
        (uint8_t *)v30,
        0x16u);
      v39 = v45;
      swift_arrayDestroy(v45, 1);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
    }

    v41 = static Animation.easeInOut(duration:)(v40, 1.0);
    v42 = __chkstk_darwin(v41);
    v43[-2] = v49;
    v43[-1] = v17;
    withAnimation<A>(_:_:)(v42, sub_1001500FC, &v43[-4], &type metadata for () + 1);
    swift_release(v41);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  return result;
}

void sub_100036848(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  _BYTE __dst[232];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  Swift::String v49;

  v4 = type metadata accessor for WindComponent(0);
  memcpy(__dst, (const void *)(a1 + *(int *)(v4 + 20)), sizeof(__dst));
  v5 = *(_QWORD *)&__dst[8];
  v41 = *(_OWORD *)&__dst[16];
  v42 = *(_OWORD *)&__dst[32];
  v6 = *(_QWORD *)&__dst[56];
  v7 = *(_QWORD *)&__dst[72];
  v37 = *(_QWORD *)&__dst[64];
  v38 = *(_QWORD *)__dst;
  v43 = *(_OWORD *)&__dst[80];
  v44 = *(_OWORD *)&__dst[96];
  v8 = *(_QWORD *)&__dst[120];
  v35 = *(_QWORD *)&__dst[112];
  v36 = *(_QWORD *)&__dst[48];
  v45 = *(_OWORD *)&__dst[160];
  v46 = *(_OWORD *)&__dst[176];
  v9 = *(_QWORD *)&__dst[208];
  v47 = *(_OWORD *)&__dst[192];
  v48 = *(_OWORD *)&__dst[216];
  v39 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v10 = a2 + v39[5];
  v11 = type metadata accessor for WindComponentViewModel(0);
  v12 = v10 + *(int *)(v11 + 68);
  swift_bridgeObjectRetain(v5);
  sub_1002BDF74((uint64_t)&v41);
  sub_1002BDF74((uint64_t)&v42);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  sub_1002BDF74((uint64_t)&v43);
  sub_1002BDF74((uint64_t)&v44);
  swift_bridgeObjectRetain(v8);
  sub_1002BDF74((uint64_t)&v45);
  sub_1002BDF74((uint64_t)&v46);
  sub_1002BDF74((uint64_t)&v47);
  sub_1002BDF74((uint64_t)&v48);
  sub_1005D9890((uint64_t)__dst, v12);
  v13 = sub_1000BA294(&qword_100BF4870);
  v14 = sub_100098740(v13, 128);
  *(_OWORD *)(v14 + 16) = xmmword_10098B610;
  v15 = v42;
  *(_OWORD *)(v10 + 16) = v41;
  *(_OWORD *)(v10 + 32) = v15;
  v16 = v44;
  *(_OWORD *)(v10 + 80) = v43;
  *(_OWORD *)(v10 + 96) = v16;
  v17 = v46;
  *(_OWORD *)(v10 + 128) = v45;
  *(_OWORD *)(v10 + 144) = v17;
  v18 = v48;
  *(_OWORD *)(v10 + 160) = v47;
  *(_QWORD *)(v14 + 32) = v36;
  *(_QWORD *)(v14 + 40) = v6;
  *(_QWORD *)(v14 + 48) = v38;
  *(_QWORD *)(v14 + 56) = v5;
  *(_QWORD *)(v14 + 64) = v35;
  *(_QWORD *)(v14 + 72) = v8;
  *(_QWORD *)(v14 + 80) = v37;
  *(_QWORD *)(v14 + 88) = v7;
  v19 = *(_QWORD *)&__dst[152];
  v20 = *(_QWORD *)&__dst[128];
  v21 = *(_QWORD *)&__dst[136];
  *(_QWORD *)(v14 + 96) = *(_QWORD *)&__dst[144];
  *(_QWORD *)(v14 + 104) = v19;
  *(_QWORD *)(v14 + 112) = v20;
  *(_QWORD *)(v14 + 120) = v21;
  *(_QWORD *)v10 = v38;
  *(_QWORD *)(v10 + 8) = v5;
  *(_QWORD *)(v10 + 48) = v36;
  *(_QWORD *)(v10 + 56) = v6;
  *(_QWORD *)(v10 + 64) = v37;
  *(_QWORD *)(v10 + 72) = v7;
  *(_QWORD *)(v10 + 112) = v35;
  *(_QWORD *)(v10 + 120) = v8;
  *(_QWORD *)(v10 + 176) = v9;
  *(_OWORD *)(v10 + 184) = v18;
  *(_QWORD *)(v10 + *(int *)(v11 + 72)) = v14;
  v22 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v19);
  v23 = objc_msgSend(v22, "mainBundle", swift_bridgeObjectRetain(v21).n128_f64[0]);
  sub_1000C0AA4();
  v49._object = v24;
  v25._countAndFlagsBits = 1684957527;
  v25._object = (void *)0xE400000000000000;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0xD000000000000036;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v23, v26, v49);

  *(Swift::String *)a2 = v27;
  *(_QWORD *)(a2 + 16) = 1684957559;
  *(_QWORD *)(a2 + 24) = 0xE400000000000000;
  *(_BYTE *)(a2 + 32) = 0;
  v28 = type metadata accessor for LocationComponentHeaderViewModel(0);
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload(a2, v28, 0);
  v29 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v10, v29, 18);
  v30 = a2 + v39[7];
  v31 = *(int *)(sub_1000BA294(&qword_100BC5FF8) + 48);
  v32 = enum case for DetailCondition.wind(_:);
  v33 = type metadata accessor for DetailCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v30, v32, v33);
  *(_BYTE *)(v30 + v31) = 0;
  v34 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v30, v34, 2);
  _s7Weather24LocationCompositionStateOwst_0(v30, 0, 1, v34);
  *(_WORD *)(a2 + v39[6]) = 256;
  sub_10009990C();
}

void sub_100036B98(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  CFAbsoluteTime Current;
  CFAbsoluteTime *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;

  v4 = v2;
  v6 = sub_1000D1D08();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  sub_100079FBC();
  v7 = sub_1000BA294(&qword_100BC3C38);
  v8 = sub_1000D0970(v7);
  *(_OWORD *)(v8 + 16) = xmmword_10097CA50;
  v50 = 0;
  v51 = 0xE000000000000000;
  v54 = objc_msgSend(v2, "applicationState");
  type metadata accessor for State(0);
  _print_unlocked<A, B>(_:_:)(&v54, &v50, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v10 = v50;
  v11 = (void *)v51;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v12 = sub_1000B2E24();
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v11;
  sub_100079FE8(v12, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  sub_1000D94A4();
  v13 = sub_10009C0A4();
  os_log(_:dso:log:type:_:)("Application did finish launching with application state=%{public}@", 66, 2, &_mh_execute_header, v11, v13, v8);
  sub_10003BC58();

  sub_10001456C(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___stateManager, &qword_100BCEF10, (uint64_t (*)(_QWORD *, uint64_t))sub_10003C800, &qword_100BCEF18, (uint64_t)&v50);
  v14 = v52;
  v15 = v53;
  sub_1000DB418(&v50, v52);
  if (a2)
  {
    type metadata accessor for LaunchOptionsKey(0);
    v17 = v16;
    v18 = type metadata accessor for ApplicationStateLaunchOptionKey(0);
    sub_10005329C((unint64_t *)&unk_100BCEF40, 255, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10097D070);
    v20 = v19;
    sub_10005329C(&qword_100BCEF58, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ApplicationStateLaunchOptionKey, (uint64_t)&protocol conformance descriptor for ApplicationStateLaunchOptionKey);
    v22 = Dictionary.mapKeysAndValues<A, B>(_:)(sub_100256D10, 0, a2, v17, (char *)&type metadata for Any + 8, v18, (char *)&type metadata for Any + 8, v20, v21);
  }
  else
  {
    v22 = 0;
  }
  dispatch thunk of ApplicationStateManagerType.applicationDidFinishLaunching(withOptions:)(v22, v14, v15);
  sub_10003BC58();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v50);
  v23 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  sub_1000BA658(v23, v24, v25, (uint64_t)"didBecomeKeyWindow", (uint64_t)UIWindowDidBecomeKeyNotification);

  v26 = sub_1000C45F4();
  sub_1000BA658(v26, v27, v28, (uint64_t)"willEnterForeground", (uint64_t)UIApplicationWillEnterForegroundNotification);

  v29 = sub_1000C45F4();
  sub_1000BA658(v29, v30, v31, (uint64_t)"didEnterBackground", (uint64_t)UIApplicationDidEnterBackgroundNotification);

  v32 = sub_1000C45F4();
  sub_1000BA658(v32, v33, v34, (uint64_t)"willTerminate", (uint64_t)UIApplicationWillTerminateNotification);

  v35 = sub_1000C45F4();
  sub_1000BA658(v35, v36, v37, (uint64_t)"didBecomeFocused", (uint64_t)UIApplicationDidBecomeActiveNotification);

  v38 = sub_1000C45F4();
  sub_1000BA658(v38, v39, v40, (uint64_t)"didLoseFocus", (uint64_t)UIApplicationWillResignActiveNotification);

  Current = CFAbsoluteTimeGetCurrent();
  v42 = (CFAbsoluteTime *)&v4[OBJC_IVAR____TtC7Weather11AppDelegate_appLaunchTime];
  *v42 = Current;
  *((_BYTE *)v42 + 8) = 0;
  sub_100037674((uint64_t)&v50);
  v43 = v52;
  v44 = v53;
  sub_1000DB418(&v50, v52);
  v45 = sub_1000BD350();
  if (dispatch thunk of ResolverType.resolve<A>(_:)(v45, v45, v43, v44))
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v50);
    if (a2)
      v46 = Dictionary<>.applicationStateLaunchOptions.getter(a2);
    else
      v46 = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v3, enum case for StartupTaskExecutionPhase.didFinishLaunching(_:), v49);
    StartupTaskManager.startAllTasks(launchOptions:phase:)(v46, v3);
    sub_10009880C();
    v47 = sub_10003BC58();
    (*(void (**)(uint64_t, uint64_t, double))(v48 + 8))(v3, v49, v47);
    sub_100098640();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100036FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_beginAccess(v2 + 16, v9, 33, 0);
  swift_retain();
  sub_100037040();
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  sub_100037034(v5);
  v6 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v6 + 16) = v5 + 1;
  v7 = v6 + 16 * v5;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  return swift_endAccess(v9);
}

uint64_t sub_100037034(uint64_t a1)
{
  return sub_1001ADDDC(a1, (uint64_t (*)(BOOL))sub_10011EF24);
}

void sub_100037040()
{
  sub_10048BDF0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10011EF24);
}

uint64_t sub_10003704C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t sub_100037094(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

void sub_10003709C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000986AC();
  sub_1000D1950();
  if ((v6 & 1) != 0)
  {
    sub_1000DD15C();
    if (v10 != v11)
    {
      sub_1000C572C();
      if (v10)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  else
  {
    v9 = v5;
  }
  if (v9 <= *(_QWORD *)(v0 + 16))
    v12 = *(_QWORD *)(v0 + 16);
  else
    v12 = v9;
  if (!v12)
    goto LABEL_17;
  sub_1000DBBEC(v4, v5, v6, v7, v8);
  v13 = sub_100079FD4();
  v14 = (const void *)sub_1000DC490(v13);
  j__malloc_size(v14);
  if (!v3)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10011E044();
  v16 = v16 && v3 == -1;
  if (v16)
    goto LABEL_22;
  sub_1000C22C4(v15 / v3);
LABEL_17:
  v17 = sub_100079FD4();
  v18 = sub_10009EEB0(v17);
  if ((v2 & 1) != 0)
  {
    sub_10011FF9C(v18, v19);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v18);
  }
  sub_10009925C();
  sub_100098640();
}

uint64_t SessionScenePhaseObserver.scenePhaseChanged(old:new:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __n128 v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v85;

  v2 = type metadata accessor for EndReason(0);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v79 = v4;
  v5 = sub_10009876C();
  v6 = type metadata accessor for SessionEndData(v5);
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v78 = v8;
  v9 = sub_10009876C();
  v10 = type metadata accessor for UUID(v9);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  sub_10009D98C();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v68 = v12;
  v13 = sub_10009876C();
  v67 = type metadata accessor for Session.Kind(v13);
  v71 = *(_QWORD *)(v67 - 8);
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v18 = type metadata accessor for Date(0);
  v75 = *(_QWORD *)(v18 - 8);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v76 = v20;
  v21 = sub_10009876C();
  v22 = type metadata accessor for UserIdentityChange(v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100098728();
  v26 = v25 - v24;
  sub_1000BA294(&qword_100BCDC60);
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100098728();
  v30 = v29 - v28;
  v32 = v29 - v28 + *(int *)(v31 + 48);
  v33 = type metadata accessor for ScenePhase(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  v35(v30, a1, v33);
  v35(v32, a2, v33);
  v83 = v34;
  v85 = v32;
  v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 88);
  v37 = v36(v32, v33);
  v38 = v37;
  v39 = enum case for ScenePhase.active(_:);
  v77 = v18;
  if ((_DWORD)v37 == enum case for ScenePhase.active(_:))
  {
    v40 = v36(v30, v33);
    v41 = enum case for ScenePhase.background(_:);
    if (v40 == v38 || v40 == enum case for ScenePhase.inactive(_:) || v40 == enum case for ScenePhase.background(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v33);
      v44 = v74[6];
      v45 = v74[7];
      sub_1000DB418(v74 + 3, v44);
      dispatch thunk of IdentityRotationManagerType.rotateIdentifiersIfNeeded()(v44, v45);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v22);
      sub_1000DB418(v74 + 8, v74[11]);
      static Date.now.getter();
      sub_10013010C(v76);
      v46 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v46(v76, v77);
      v47 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v71 + 104))(v17, enum case for Session.Kind.userEvents(_:), v67);
      v48 = UUID.init()(v47);
      v49 = UUID.uuidString.getter(v48);
      v51 = v50;
      v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
      Date.init()(v52);
      SessionManager.start(for:identifier:startDate:timestampJitter:)(v17, v49, v51, v76, 0);
      v53 = swift_bridgeObjectRelease(v51);
      ((void (*)(uint64_t, uint64_t, __n128))v46)(v76, v77, v53);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v17, v67);
    }
  }
  else
  {
    v41 = enum case for ScenePhase.background(_:);
    if ((_DWORD)v37 == enum case for ScenePhase.background(_:))
    {
      v55 = SessionManager.tracker.getter(v37);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v80 + 104))(v79, enum case for EndReason.appBackground(_:), v81);
      SessionEndData.init(endReason:)(v79);
      v56 = sub_1000BA294(&qword_100BCDC68);
      v57 = type metadata accessor for DataEventTrait(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(unsigned __int8 *)(v58 + 80);
      v60 = (v59 + 32) & ~v59;
      v61 = swift_allocObject(v56, v60 + *(_QWORD *)(v58 + 72), v59 | 7);
      *(_OWORD *)(v61 + 16) = xmmword_10097CA50;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v61 + v60, enum case for DataEventTrait.unique(_:), v57);
      v62 = sub_100242518();
      Tracker.push<A>(data:traits:file:line:)(v78, v61, 0xD00000000000005FLL, 0x80000001009F5350, 53, v73, v62);
      swift_release(v55);
      v63 = swift_bridgeObjectRelease(v61);
      v64 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v72 + 8))(v78, v73, v63);
      Date.init()(v64);
      SessionManager.end(endDate:completion:)(v76, 0, 0);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v77);
      v65 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v65(v85, v33);
      return ((uint64_t (*)(uint64_t, uint64_t))v65)(v30, v33);
    }
  }
  v66 = v36(v30, v33);
  if (v66 == v39 || v66 == enum case for ScenePhase.inactive(_:) || v66 == v41)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v85, v33);
  else
    return sub_1002424D8(v30);
}

uint64_t sub_100037674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = v1 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___resolver;
  sub_1000992EC(v1 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___resolver, (uint64_t)v8);
  sub_100037768(v3, (uint64_t)&v6, &qword_100BCED50);
  if (v7)
    return sub_10003C800(&v6, a1);
  sub_100021AA4((uint64_t)&v6, &qword_100BCED50);
  sub_10014C58C();
  Container.resolver.getter();
  sub_10009880C();
  sub_10003B59C(a1, (uint64_t)&v6);
  sub_1000BBC6C(v3, (uint64_t)v5);
  sub_1000A3908((uint64_t)&v6, v3, &qword_100BCED50);
  return swift_endAccess(v5);
}

void sub_10003773C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1000BA294(a3);
  sub_10009D2C8(v3);
  sub_10004A298();
}

void sub_100037768(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100075DC0(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_10004A298();
}

void sub_100037794(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100075DC0(a1, a2, a3);
  sub_10009D2C8(v3);
  sub_10004A298();
}

double sub_1000377B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  double result;
  uint64_t v6;

  v2 = sub_1000BA294(&qword_100BFADF8);
  inited = swift_initStackObject(v2, &v6);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &off_100B5B108;
  sub_1000BA294(&qword_100BEF018);
  v4 = Dictionary.init(dictionaryLiteral:)(inited);
  sub_100079B04(v4, a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_100037850(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  __int128 v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _UNKNOWN **v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[6];

  v2 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocationModel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - v9;
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  dispatch thunk of ResolverType.resolve<A>(_:)(v5, v5, v11, v12);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v42(v10, v4, v5);
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  dispatch thunk of ResolverType.resolve<A>(_:)(&type metadata for LocationViewPresentationKind, &type metadata for LocationViewPresentationKind, v14, v15);
  v16 = v53[0];
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BED420);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!v52)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_10003C800(&v51, (uint64_t)v53);
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BED3A0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v49)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C800(&v48, (uint64_t)&v51);
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  v26 = v44;
  if (v44)
  {
    v40 = v47;
    v39 = v46;
    v38 = v45;
    v27 = v16 & 1;
    v28 = *sub_1000DB418(v53, v53[3]);
    v49 = type metadata accessor for LocationInputFactory();
    v50 = &off_100B90270;
    *(_QWORD *)&v48 = v28;
    sub_100043CA8((uint64_t)&v48, (uint64_t)v43);
    v29 = swift_allocObject(&unk_100B7DE40, 56, 7);
    sub_10003C800(v43, v29 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v48);
    v30 = swift_allocObject(&unk_100B7DE68, 32, 7);
    *(_QWORD *)(v30 + 16) = sub_1000A2314;
    *(_QWORD *)(v30 + 24) = v29;
    sub_100043CA8((uint64_t)&v51, (uint64_t)&v48);
    v31 = v41;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v41, v10, v5);
    v32 = *(unsigned __int8 *)(v6 + 80);
    v33 = (v32 + 56) & ~v32;
    v34 = v33 + v7;
    v35 = swift_allocObject(&unk_100B7DE90, v33 + v7 + 1, v32 | 7);
    sub_10003C800(&v48, v35 + 16);
    v42((char *)(v35 + v33), v31, v5);
    *(_BYTE *)(v35 + v34) = v27;
    v36 = sub_1000BA294(&qword_100BC4650);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    v37 = sub_100049EE8(v26, v38, v39, v40, sub_1001434BC, 0, sub_1000A22C0, v30, sub_1001433E8, v35);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v51);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v53);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    return v37;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100037C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5A68);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v21 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v21 - v14;
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10011AA68();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100037768((uint64_t)v15, (uint64_t)v6, &qword_100BC5A68);
  sub_100037768((uint64_t)v13, v16, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v0) == 1)
  {
    sub_100021A14((uint64_t)v13, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v0) == 1)
    {
      sub_100021A14((uint64_t)v6, &qword_100BC5A68);
      return 1;
    }
    goto LABEL_6;
  }
  sub_100037768((uint64_t)v6, (uint64_t)v10, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v0) == 1)
  {
    sub_100021A14((uint64_t)v13, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
LABEL_6:
    sub_100021A14((uint64_t)v6, &qword_100BC5E60);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
  sub_10007A100((uint64_t)&qword_100BC5AB8);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v3, v0, v18);
  v20 = *(void (**)(char *, uint64_t))(v1 + 8);
  v20(v3, v0);
  sub_100021A14((uint64_t)v13, &qword_100BC5A68);
  sub_100021A14((uint64_t)v15, &qword_100BC5A68);
  v20(v10, v0);
  sub_100021A14((uint64_t)v6, &qword_100BC5A68);
  if ((v19 & 1) != 0)
    return 1;
LABEL_7:
  if (qword_100BC21A8 != -1)
    swift_once(&qword_100BC21A8, sub_10012F04C);
  return byte_100BED560;
}

_QWORD *sub_100037F88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, _QWORD *);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  char *v26;
  _QWORD *v27;

  v27 = a2;
  v3 = *(a1 - 1);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(a1);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - v6;
  v24 = *(void (**)(char *))(v3 + 16);
  v24((char *)&v22 - v6);
  type metadata accessor for MainActor(0);
  v8 = ((uint64_t (*)(void))static MainActor.shared.getter)();
  v9 = *(unsigned __int8 *)(v3 + 80);
  v10 = (v9 + 64) & ~v9;
  v11 = v10 + v4;
  v23 = v9 | 7;
  v12 = (char *)swift_allocObject(&unk_100B85150, v10 + v4, v9 | 7);
  *((_QWORD *)v12 + 2) = v8;
  *((_QWORD *)v12 + 3) = &protocol witness table for MainActor;
  v13 = a1[2];
  v14 = a1[3];
  *((_QWORD *)v12 + 4) = v13;
  *((_QWORD *)v12 + 5) = v14;
  v15 = a1[5];
  v22 = a1[4];
  *((_QWORD *)v12 + 6) = v22;
  *((_QWORD *)v12 + 7) = v15;
  v16 = *(void (**)(char *, char *, _QWORD *))(v3 + 32);
  v16(&v12[v10], v7, a1);
  v17 = v26;
  v18 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v24)(v26, v25, a1);
  v19 = static MainActor.shared.getter(v18);
  v20 = (char *)swift_allocObject(&unk_100B85178, v11, v23);
  *((_QWORD *)v20 + 2) = v19;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = v13;
  *((_QWORD *)v20 + 5) = v14;
  *((_QWORD *)v20 + 6) = v22;
  *((_QWORD *)v20 + 7) = v15;
  v16(&v20[v10], v17, a1);
  return Binding.init(get:set:)(v27, sub_10061ED20, v12, sub_10061EED8, v20, v14);
}

BOOL sub_100038130(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  char *v41;
  _BOOL8 result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  char v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  int *v60;
  unsigned __int8 *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  unsigned __int8 *v82;
  char v83;
  uint64_t *v84;
  uint64_t v85;
  unsigned __int8 *v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  unsigned __int8 *v91;
  int *v92;
  unsigned __int8 *v93;
  unsigned __int8 *v94;
  unsigned __int8 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v99 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v94 = (unsigned __int8 *)v5;
  v96 = sub_1000BA294(&qword_100BDBF48);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v100 = v7;
  sub_1000BA294(&qword_100BCD688);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v95 = (unsigned __int8 *)v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v97 = (uint64_t)&v90 - v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v98 = (uint64_t)&v90 - v13;
  v106 = type metadata accessor for LocationOfInterest(0);
  v102 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  sub_100088FDC();
  v101 = v14;
  v15 = sub_1000BA294(&qword_100BDBF50);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v105 = v17;
  sub_1000BA294(&qword_100BC3118);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  v103 = v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  v104 = (uint64_t)&v90 - v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  v107 = (uint64_t)&v90 - v23;
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100BCCFF0);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  v31 = (char *)&v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v90 - v37;
  __chkstk_darwin(v36);
  v39 = a2;
  v41 = (char *)&v90 - v40;
  if (*a1 != *v39 || a1[1] != v39[1] || a1[2] != v39[2])
    return 0;
  v43 = *((_QWORD *)a1 + 2);
  v44 = *((_QWORD *)v39 + 2);
  if (!v43)
  {
    v93 = v39;
    if (v44)
      return 0;
    goto LABEL_15;
  }
  if (!v44)
    return 0;
  v45 = *((_QWORD *)a1 + 1);
  v93 = v39;
  v46 = *((_QWORD *)v39 + 1);
  v47 = v45 == v46 && v43 == v44;
  if (v47 || (v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v43, v46, v44, 0), result = 0, (v48 & 1) != 0))
  {
LABEL_15:
    v49 = type metadata accessor for LocationFooterViewModel(0);
    v50 = a1;
    v51 = v49;
    v52 = *(int *)(v49 + 32);
    v91 = v50;
    sub_1001A7210((uint64_t)&v50[v52], (uint64_t)v41, &qword_100BD4280);
    v92 = (int *)v51;
    sub_1000DF5B8((uint64_t)&v93[*(int *)(v51 + 32)], (uint64_t)v38);
    v53 = (uint64_t)&v31[*(int *)(v28 + 48)];
    sub_1000DF5B8((uint64_t)v41, (uint64_t)v31);
    sub_1000DF5B8((uint64_t)v38, v53);
    sub_100088FC8((uint64_t)v31, 1, v24);
    if (v47)
    {
      sub_1000BC08C((uint64_t)v38);
      sub_1000BC08C((uint64_t)v41);
      sub_100088FC8(v53, 1, v24);
      if (v47)
      {
        sub_100021AA4((uint64_t)v31, &qword_100BD4280);
        goto LABEL_26;
      }
    }
    else
    {
      sub_1001A7210((uint64_t)v31, (uint64_t)v35, &qword_100BD4280);
      sub_100088FC8(v53, 1, v24);
      if (!v54)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v27, v53, v24);
        sub_100086DA4(qword_100BCCE60, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v58 = dispatch thunk of static Equatable.== infix(_:_:)(v35, v27, v24, v57);
        v59 = *(void (**)(char *, uint64_t))(v25 + 8);
        v59(v27, v24);
        sub_1000BC08C((uint64_t)v38);
        sub_1000BC08C((uint64_t)v41);
        v59(v35, v24);
        sub_1000BC08C((uint64_t)v31);
        if ((v58 & 1) == 0)
          return 0;
LABEL_26:
        v61 = v91;
        v60 = v92;
        v62 = v93;
        if ((sub_1000389AC(&v91[v92[9]], &v93[v92[9]]) & 1) == 0
          || (sub_10009B654(v61[v60[10]], v62[v60[10]]) & 1) == 0)
        {
          return 0;
        }
        v63 = v107;
        sub_1000C3958((uint64_t)&v61[v60[11]], v107);
        v64 = v62;
        v65 = v104;
        sub_1000C3958((uint64_t)&v62[v60[11]], v104);
        v66 = v105;
        v67 = v105 + *(int *)(v15 + 48);
        sub_1000C3958(v63, v105);
        sub_1000C3958(v65, v67);
        v68 = v106;
        sub_100088FC8(v66, 1, v106);
        if (v47)
        {
          sub_1000C28AC(v65);
          sub_1000C28AC(v63);
          sub_100088FC8(v67, 1, v68);
          if (v47)
          {
            sub_100021AA4(v66, &qword_100BC3118);
LABEL_38:
            if (v61[v60[12]] != v64[v60[12]] || v61[v60[13]] != v64[v60[13]])
              return 0;
            v77 = v98;
            sub_1000C3958((uint64_t)&v61[v60[14]], v98);
            v78 = v97;
            sub_1000C3958((uint64_t)&v64[v60[14]], v97);
            v79 = v100;
            v80 = v100 + *(int *)(v96 + 48);
            sub_1000C3958(v77, v100);
            sub_1000C3958(v78, v80);
            v81 = v99;
            sub_100088FC8(v79, 1, (uint64_t)v99);
            if (v47)
            {
              sub_1000C28AC(v78);
              sub_1000C28AC(v77);
              sub_100088FC8(v80, 1, (uint64_t)v81);
              if (v47)
              {
                sub_100021AA4(v79, &qword_100BCD688);
                return 1;
              }
              v84 = &qword_100BDBF48;
            }
            else
            {
              v82 = v95;
              sub_1001A7210(v79, (uint64_t)v95, &qword_100BCD688);
              sub_100088FC8(v80, 1, (uint64_t)v81);
              if (v83)
              {
                v84 = &qword_100BDBF48;
              }
              else
              {
                v85 = v80;
                v86 = v94;
                sub_1000DB648(v85, (uint64_t)v94, type metadata accessor for HomeAndWorkRefinementRowViewModel);
                if (*v82 == *v86
                  && (static Location.== infix(_:_:)(&v82[v81[5]], &v86[v81[5]]) & 1) != 0
                  && (static LocationOfInterest.== infix(_:_:)(&v82[v81[6]], &v86[v81[6]]) & 1) != 0)
                {
                  v87 = v81[7];
                  v88 = v82[v87];
                  v89 = v86[v87];
                  sub_1003841A0((uint64_t)v86);
                  sub_1000C2428(v78);
                  sub_1000C2428(v77);
                  sub_1003841A0((uint64_t)v82);
                  sub_1000C2428(v79);
                  return v88 == v89;
                }
                sub_1003841A0((uint64_t)v86);
                v84 = &qword_100BCD688;
              }
              sub_1000C28AC(v78);
              sub_1000C28AC(v77);
              sub_1003841A0((uint64_t)v82);
            }
            v56 = v79;
            v55 = v84;
LABEL_24:
            sub_100021AA4(v56, v55);
            return 0;
          }
        }
        else
        {
          v69 = v103;
          sub_1001A7210(v66, v103, &qword_100BC3118);
          sub_100088FC8(v67, 1, v68);
          if (!v70)
          {
            v71 = v102;
            v72 = v65;
            v73 = v101;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v101, v67, v68);
            sub_100086DA4((unint64_t *)&qword_100BDBF58, (uint64_t (*)(uint64_t))&type metadata accessor for LocationOfInterest, (uint64_t)&protocol conformance descriptor for LocationOfInterest);
            v75 = dispatch thunk of static Equatable.== infix(_:_:)(v69, v73, v68, v74);
            v76 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
            v76(v73, v68);
            sub_1000C28AC(v72);
            sub_1000C28AC(v107);
            v76(v69, v68);
            sub_1000C28AC(v66);
            v60 = v92;
            if ((v75 & 1) == 0)
              return 0;
            goto LABEL_38;
          }
          sub_1000C2428(v65);
          sub_1000C2428(v63);
          (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69, v68);
        }
        v55 = &qword_100BDBF50;
        v56 = v66;
        goto LABEL_24;
      }
      sub_1000BC08C((uint64_t)v38);
      sub_1000BC08C((uint64_t)v41);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v35, v24);
    }
    v55 = &qword_100BCCFF0;
    v56 = (uint64_t)v31;
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1000389AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BCCFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BD4280);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  if (*a1 != *a2)
    return 0;
  sub_1009476E4();
  if ((v20 & 1) == 0)
    return 0;
  v21 = type metadata accessor for LearnMoreAttributorViewModel(0);
  v47 = a2;
  v22 = v21;
  sub_100038D20((uint64_t)&a1[*(int *)(v21 + 24)], (uint64_t)v19);
  v46 = v22;
  v23 = *(int *)(v22 + 24);
  v24 = v47;
  sub_100038D20((uint64_t)&v47[v23], (uint64_t)v17);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100038D20((uint64_t)v19, (uint64_t)v10);
  sub_100038D20((uint64_t)v17, v25);
  sub_100098750((uint64_t)v10);
  if (!v26)
  {
    sub_100038D20((uint64_t)v10, (uint64_t)v14);
    sub_100098750(v25);
    if (!v26)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v25, v4);
      v28 = sub_10015BC5C();
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v4, v28);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v7, v4);
      sub_1000B43C0((uint64_t)v17);
      sub_1000B43C0((uint64_t)v19);
      v30(v14, v4);
      sub_1000B43C0((uint64_t)v10);
      if ((v29 & 1) != 0)
        goto LABEL_15;
      return 0;
    }
    sub_100021A68((uint64_t)v17, &qword_100BD4280);
    sub_100021A68((uint64_t)v19, &qword_100BD4280);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_11:
    sub_100021A68((uint64_t)v10, &qword_100BCCFF0);
    return 0;
  }
  sub_1000B43C0((uint64_t)v17);
  sub_1000B43C0((uint64_t)v19);
  sub_100098750(v25);
  if (!v26)
    goto LABEL_11;
  sub_100021A68((uint64_t)v10, &qword_100BD4280);
LABEL_15:
  v31 = v24;
  v32 = v46;
  v33 = *(int *)(v46 + 28);
  v34 = *(_QWORD *)&a1[v33];
  v35 = *(_QWORD *)&a1[v33 + 8];
  v36 = &v31[v33];
  v37 = *((_QWORD *)v36 + 1);
  v38 = v34 == *(_QWORD *)v36 && v35 == v37;
  if (v38
    || (v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, *(_QWORD *)v36, v37, 0),
        result = 0,
        (v39 & 1) != 0))
  {
    v40 = *(int *)(v32 + 32);
    v41 = *(_QWORD *)&a1[v40];
    v42 = *(_QWORD *)&v47[v40];
    if (v41)
    {
      v49 = v41;
      if (v42)
      {
        v48 = v42;
        v43 = sub_1000BA294(&qword_100BE5590);
        v44 = sub_1001599E8();
        swift_retain_n(v41, 2);
        LOBYTE(v44) = dispatch thunk of static Equatable.== infix(_:_:)(&v49, &v48, v43, v44);
        v45 = v49;
        swift_release(v41);
        swift_release(v45);
        if ((v44 & 1) != 0)
          return 1;
      }
    }
    else if (!v42)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100038D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD4280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100038D68()
{
  sub_1008152C8();
}

void sub_100038D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1000EB128(a1, a2);
  dispatch thunk of LocationMetadataManagerType.resolveAddress(for:)(v2, v3, v4);
  sub_1006B9D70();
}

void sub_100038DA0()
{
  _BYTE *v0;

  *v0 = sub_10009E58C();
  sub_10004A298();
}

uint64_t sub_100038DBC()
{
  unsigned __int8 v1;

  sub_100038DF0();
  sub_1000C2448((uint64_t)&unk_100B60830);
  return v1;
}

unint64_t sub_100038DF0()
{
  unint64_t result;

  result = qword_100BC5B28;
  if (!qword_100BC5B28)
  {
    result = swift_getWitnessTable(&unk_10098009C, &unk_100B60830);
    atomic_store(result, (unint64_t *)&qword_100BC5B28);
  }
  return result;
}

void sub_100038E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD);
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v68 = type metadata accessor for Location.Identifier(0);
  __chkstk_darwin(v68);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v4);
  sub_100079F7C();
  sub_10009511C(v5);
  sub_1000BA294(&qword_100BC6000);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_10009511C(v7);
  sub_1000BA294(qword_100BC6008);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v10 = sub_1000987B4(v9);
  type metadata accessor for WeatherMapPresentationState(v10);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v13 = sub_1000987B4(v12);
  v69 = type metadata accessor for WeatherMapOverlayKind(v13);
  __chkstk_darwin(v69);
  sub_100088FDC();
  v15 = sub_1000987B4(v14);
  type metadata accessor for ViewState.SecondaryViewState(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v17);
  sub_100079F7C();
  v19 = sub_1000987B4(v18);
  type metadata accessor for DisplayMetrics(v19);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v22 = sub_1000987B4(v21);
  type metadata accessor for WeatherMapTrackingState(v22);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100088FDC();
  sub_10009511C(v24);
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  sub_10009511C(v26);
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  sub_10009511C(v28);
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  sub_10009511C(v30);
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v33 = sub_1000987B4(v32);
  type metadata accessor for LocationViewerActiveLocationState(v33);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v35);
  sub_1000BA30C();
  __chkstk_darwin(v36);
  sub_100079F7C();
  v38 = sub_1000987B4(v37);
  type metadata accessor for ViewState(v38);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v40);
  sub_1000BA30C();
  __chkstk_darwin(v41);
  sub_100079F7C();
  v43 = sub_1000987B4(v42);
  type metadata accessor for ModalViewState(v43);
  sub_1000B42B0();
  v45 = __chkstk_darwin(v44);
  __chkstk_darwin(v45);
  type metadata accessor for NotificationsOptInInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v48);
  sub_100088FDC();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v49);
  sub_100088FDC();
  v51 = sub_1000987B4(v50);
  type metadata accessor for NotificationsOptInState(v51);
  sub_1000B42B0();
  __chkstk_darwin(v52);
  sub_100088FDC();
  sub_10009511C(v53);
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v54);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v55);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v57);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v58);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F40);
  sub_1000B42B0();
  __chkstk_darwin(v59);
  sub_100088FDC();
  v60 = type metadata accessor for LocationModel(0);
  __chkstk_darwin(v60);
  sub_100098728();
  v61 = type metadata accessor for LocationViewerViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_100098728();
  v65 = v64 - v63;
  sub_100080C0C(a3, v64 - v63, v66);
  v67 = (char *)&loc_1000393B4 + *((int *)qword_100563B90 + swift_getEnumCaseMultiPayload(v65, v61));
  __asm { BR              X10 }
}

uint64_t sub_1000393C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v0, v2, v3);
  v6 = *(_QWORD *)(v4 - 240);
  LocationModel.identifier.getter(v5);
  sub_100099444();
  _s7Weather24LocationCompositionStateOwst_0(v7, v8, v9, *(_QWORD *)(v4 - 248));
  sub_100099444();
  _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, *(_QWORD *)(v4 - 232));
  sub_100023164(v6, 3, 2, 1, 2, 3, *(_QWORD *)(v4 - 200));
  v14 = v13;
  sub_100098898(v13, &qword_100BC5F40);
  v15 = *(_QWORD *)(v4 - 144);
  v16 = sub_1000C6BA0();
  _s7Weather24LocationCompositionStateOwst_0(v16, v17, v18, *(_QWORD *)(v4 - 128));
  sub_100563BB8(v14, v15, *(_QWORD *)(v4 - 120));
  v19 = sub_1000995F8();
  sub_100098898(v19, &qword_100BC5F60);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v3);
  return v2;
}

uint64_t sub_10003A874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v0 = type metadata accessor for CallbackScope(0);
  v55 = *(_QWORD *)(v0 - 8);
  v56 = v0;
  __chkstk_darwin(v0);
  sub_100098728();
  v54 = v2 - v1;
  v53 = type metadata accessor for Container.TestSuite(0);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  sub_100098728();
  v6 = v5 - v4;
  v7 = type metadata accessor for Scope(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098728();
  v11 = v10 - v9;
  sub_1000B4DB4();
  v12 = sub_1000BA294(&qword_100BD4D18);
  sub_1000BA3CC(v12, v13, v14, (uint64_t)sub_100150D6C);
  sub_10009880C();
  v15 = enum case for Scope.singleton(_:);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104);
  v52 = enum case for Scope.singleton(_:);
  v16(v11, enum case for Scope.singleton(_:), v7);
  v17 = sub_1000C5944();
  swift_release(v17);
  sub_100098834();
  sub_1000BCBF4();
  sub_1000B4DB4();
  v18 = sub_1000BA294(&qword_100C0C2D8);
  sub_1000BA3CC(v18, v19, v20, (uint64_t)sub_100150CFC);
  sub_10009880C();
  v16(v11, v15, v7);
  v21 = sub_1000C5944();
  swift_release(v21);
  sub_100098834();
  sub_1000BCBF4();
  sub_1000B4DB4();
  v22 = sub_1000BA294(&qword_100BDC5A8);
  sub_1000BA3CC(v22, v23, v24, (uint64_t)sub_100150BEC);
  sub_10009880C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, enum case for Container.TestSuite.automation(_:), v53);
  v25 = Definition.whenTesting(_:_:)(v6, sub_10082C220, 0);
  swift_release(v25);
  sub_100098834();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v53);
  sub_1000B4DB4();
  v26 = sub_1000BA294(&qword_100BDC5B0);
  v29 = sub_1000BA3CC(v26, v27, v28, (uint64_t)sub_10082C330);
  swift_release(v29);
  sub_10009880C();
  sub_1000B4DB4();
  v30 = sub_1000BA294(&qword_100BD4D20);
  v31 = RegistrationContainer.register<A>(_:name:factory:)(v30, 0x746C7561666544, 0xE700000000000000, sub_100150BE8, 0, v30);
  sub_10009880C();
  v16(v11, v52, v7);
  v32 = Definition.inScope(_:)(v11);
  swift_release(v32);
  swift_release(v31);
  sub_1000BCBF4();
  sub_1000B4DB4();
  v33 = RegistrationContainer.register<A>(_:name:factory:)(v30, 0x75646F4D7473694CLL, 0xEA0000000000656CLL, sub_100150BE8, 0, v30);
  sub_10009880C();
  sub_1000DDFFC();
  v34 = sub_1000DBE3C();
  swift_release(v34);
  swift_release(v33);
  sub_1000BCBF4();
  sub_1000B4DB4();
  v35 = sub_1000BA294(&qword_100BD4D28);
  v38 = sub_1000BA3CC(v35, v36, v37, (uint64_t)sub_10082C4A0);
  sub_10009880C();
  sub_1000DDFFC();
  v39 = sub_1000DBE3C();
  swift_release(v39);
  swift_release(v38);
  sub_1000BCBF4();
  ProxyContainer.private.getter(v40);
  RegistrationContainer.lazy(block:)(sub_10082C4BC, 0);
  v41 = sub_10009880C();
  ProxyContainer.callback.getter(v57, v41);
  v42 = v58;
  v43 = v59;
  sub_1000DB418(v57, v58);
  v44 = sub_1000BA294((uint64_t *)&unk_100BD44D8);
  v45 = enum case for CallbackScope.any(_:);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 104);
  v46(v54, enum case for CallbackScope.any(_:), v56);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v44, v54, sub_10082C5A4, 0, v44, v42, v43);
  sub_1000CCE80();
  v47 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v57);
  ProxyContainer.callback.getter(v57, v47);
  v48 = v58;
  v49 = v59;
  sub_1000DB418(v57, v58);
  v50 = sub_1000BA294(&qword_100BCEEF0);
  v46(v54, v45, v56);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v50, v54, sub_10082C710, 0, v50, v48, v49);
  sub_1000CCE80();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v57);
}

void sub_10003ACCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[3];

  v1 = v0;
  v2 = type metadata accessor for ColorScheme(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100BD4410);
  UIViewControllerRepresentableContext.coordinator.getter(v19, v6);
  v7 = (char *)v19[0];
  v8 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  v9 = v1 + *(int *)(v8 + 20);
  v10 = (uint64_t)&v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  swift_beginAccess(&v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL], v19, 33, 0);
  sub_10015BB78(v9, v10);
  swift_endAccess(v19);
  v11 = (uint64_t *)(v1 + *(int *)(v8 + 24));
  v12 = *v11;
  v13 = v11[1];
  LOBYTE(v11) = *((_BYTE *)v11 + 16);
  v14 = &v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  v15 = *(_QWORD *)&v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  v16 = *(_QWORD *)&v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                     + 8];
  *(_QWORD *)v14 = v12;
  *((_QWORD *)v14 + 1) = v13;
  v14[16] = (char)v11;
  swift_retain();
  swift_retain();
  swift_release(v16);
  swift_release(v15);
  sub_1001591FC();
  v17 = &v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
  swift_beginAccess(&v7[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme], v19, 33, 0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v17, v5, v2);
  swift_endAccess(v19);
  sub_100021DC0();

}

void sub_10003AE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  char v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  sub_1000986AC();
  v24 = v23;
  LODWORD(v80) = v25;
  v83 = v26;
  v28 = v27;
  v94 = v29;
  v95 = v30;
  v93 = v31;
  v33 = v32;
  v84 = *(_QWORD *)(sub_1000FC58C() - 8);
  sub_10011E39C();
  __chkstk_darwin(v34);
  v85 = v35;
  sub_1000DCA60();
  v92 = v36;
  v37 = sub_1000992C4();
  v90 = *(_QWORD *)(v37 - 8);
  v91 = v37;
  sub_10011E39C();
  __chkstk_darwin(v38);
  v82 = v39;
  sub_1000DCA60();
  v88 = v40;
  v87 = sub_1000BAD84();
  v96 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  sub_10003BD18();
  v89 = v41;
  v79 = v42;
  __chkstk_darwin(v43);
  v45 = (char *)&v74 - v44;
  if (a21)
  {
    v46 = sub_100098740((uint64_t)&unk_100B94C00, 32);
    *(_QWORD *)(v46 + 16) = a21;
    *(_QWORD *)(v46 + 24) = a22;
    swift_retain_n(a22, 2);
    sub_1008065AC(v33, (uint64_t)sub_1002A4E0C, v46);
    swift_release(v46);
    sub_1000BF8D0(a21, a22);
  }
  v81 = v24 & 1;
  v47 = v22[18];
  v48 = v22[19];
  sub_1000DB418(v22 + 15, v47);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v47, v48);
  v49 = v88;
  sub_1000B3024();
  v50 = sub_100818F70();
  sub_1000860C4(v50);
  v51 = v45;
  v78 = v45;
  v52 = v94;
  sub_100095508();
  v86 = v22;
  v53 = v95;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRetain(v28);
  v77 = v80 & 1;
  v76 = sub_1000AE388(0, v49, v77, v93, v52, v53, v28);
  v75 = v28;
  __chkstk_darwin(v76);
  *(&v74 - 2) = (uint64_t)v22;
  *(&v74 - 1) = v33;
  v54 = sub_1000BA294(&qword_100BC5AA8);
  v80 = firstly<A>(closure:)(sub_1008152C8, &v74 - 4, v54);
  sub_1000B3024();
  sub_100080C0C(v83, v92, type metadata accessor for TimeState);
  v55 = v96;
  v56 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v89, v51, v87);
  v57 = v90;
  v58 = *(unsigned __int8 *)(v90 + 80);
  v59 = (v58 + 24) & ~v58;
  v60 = (v82 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(unsigned __int8 *)(v84 + 80);
  v62 = (v61 + v60 + 32) & ~v61;
  v63 = *(unsigned __int8 *)(v55 + 80);
  v64 = (v85 + v63 + v62) & ~v63;
  v65 = v64 + v79;
  v66 = (v64 + v79 + 9) & 0xFFFFFFFFFFFFFFF8;
  v67 = swift_allocObject(&unk_100B94BD8, v66 + 8, v58 | v61 | v63 | 7);
  *(_QWORD *)(v67 + 16) = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v67 + v59, v88, v91);
  v68 = (_QWORD *)(v67 + v60);
  v69 = v94;
  *v68 = v93;
  v68[1] = v69;
  v70 = v75;
  v68[2] = v95;
  v68[3] = v70;
  sub_10007802C(v92, v67 + v62, type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v67 + v64, v89, v56);
  v71 = (_BYTE *)(v67 + v65);
  *v71 = v77;
  v71[1] = v81;
  *(_QWORD *)(v67 + v66) = v76;
  swift_bridgeObjectRetain(v69);
  sub_10003BCC8();
  sub_100095508();
  swift_retain();
  swift_retain();
  v73 = (void *)zalgo.getter(v72);
  Promise.then<A>(on:closure:)(v73, sub_100061CF8, v67, &type metadata for () + 1);
  sub_1000C1354();
  sub_100089020();
  sub_10009880C();
  sub_1000B439C();

  (*(void (**)(char *, uint64_t))(v96 + 8))(v78, v87);
  sub_100098640();
}

void sub_10003B214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_QWORD *a21,_QWORD *a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  double v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  double v58;
  _QWORD *v59;
  void *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  __int128 v65[2];

  sub_1000986AC();
  v24 = v23;
  v60 = v25;
  v61 = v26;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v59 = v33;
  v35 = v34;
  v64 = v36;
  v37 = type metadata accessor for UnfairLock.Options(0);
  v38 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  sub_100098728();
  v41 = v40 - v39;
  v42 = sub_1000BA294(&qword_100BC28E8);
  v43 = swift_allocObject(v42, ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72), *(unsigned __int8 *)(v38 + 80) | 7);
  *(_OWORD *)(v43 + 16) = xmmword_10097CA50;
  static UnfairLock.Options.dataSynchronization.getter(v43);
  *(_QWORD *)&v65[0] = v43;
  sub_1000C5D04((unint64_t *)&qword_100BC28F0);
  v45 = v44;
  v46 = sub_1000BA294(&qword_100BC28F8);
  sub_10003D2DC((unint64_t *)&qword_100BC2900, &qword_100BC28F8);
  dispatch thunk of SetAlgebra.init<A>(_:)(v65, v46, v47, v37, v45);
  v48 = sub_1000CD6E8();
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  *(_QWORD *)(v24 + 328) = UnfairLock.init(options:)(v41);
  *(_BYTE *)(v24 + 336) = 0;
  v49 = v24 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
  v50 = enum case for StartMethod.unknown(_:);
  v51 = sub_100098BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v49, v50, v51);
  *(_QWORD *)(v24 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit) = 0;
  *(_QWORD *)(v24 + 24) = v64;
  *(_QWORD *)(v24 + 32) = v35;
  swift_retain();
  *(_QWORD *)(v24 + 16) = SessionManager.tracker.getter(v52);
  *(_QWORD *)(v24 + 40) = v60;
  sub_10003B59C((uint64_t)v59, v24 + 48);
  v62 = (_QWORD *)v32;
  sub_10003B59C(v32, v24 + 88);
  v63 = (_QWORD *)v30;
  sub_10003B59C(v30, v24 + 128);
  sub_10003B59C((uint64_t)v28, v24 + 168);
  sub_10003B59C((uint64_t)v61, v24 + 208);
  sub_10003B59C((uint64_t)a21, v24 + 248);
  sub_10003B59C((uint64_t)a22, v24 + 288);
  *(_BYTE *)(v24 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose) = a23;
  v53 = v60;
  sub_1000207F4();
  sub_1002F7D28();
  sub_1000194E4();
  sub_10001B504();
  sub_10006ADEC();
  sub_100016328();
  sub_100047494();
  sub_100028A54();
  sub_1000DB418(v59, v59[3]);
  sub_10000F1C8(&qword_100BD6630, type metadata accessor for SessionEventsAndDataCoordinator);
  v54 = sub_10009D4E0();
  dispatch thunk of IdentityServiceType.addObserver(_:)(v54);
  swift_release(v24);
  if (a23 == 2)
  {
    sub_10003B59C((uint64_t)a21, (uint64_t)v65);
    v55 = swift_allocObject(&unk_100B6CBB8, 64, 7);
    sub_10003C800(v65, v55 + 16);
    *(_QWORD *)(v55 + 56) = v24;
    v56 = sub_10009D4E0();
    v57 = Tracker.onSessionChange(block:)(sub_100127914, v55, v56);
    swift_release(v55);
    v58 = sub_10009D4E0();
    SessionObserver.dispose(on:)(v58);
    swift_release(v35);

    swift_release(v57);
    swift_release(v24);
  }
  else
  {
    swift_release(v35);

  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v61);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v63);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v62);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v59);
  sub_100098640();
}

void sub_10003B59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_10004A298();
}

uint64_t sub_10003B5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v75[3];
  id v76[2];

  v3 = v2;
  sub_1000BA294(&qword_100BC3068);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v60 = sub_1000BA294(&qword_100BE0598);
  v62 = *(_QWORD *)(v60 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  v63 = sub_1000BA294(&qword_100BE05A0);
  v64 = *(_QWORD *)(v63 - 8);
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v59 = v14;
  v66 = sub_1000BA294(&qword_100BE05A8);
  v68 = *(_QWORD *)(v66 - 8);
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v61 = v16;
  v69 = sub_1000BA294(&qword_100BE05B0);
  v71 = *(_QWORD *)(v69 - 8);
  sub_10009D98C();
  __chkstk_darwin(v17);
  sub_100088FDC();
  v65 = v18;
  v72 = sub_1000BA294(&qword_100BE05B8);
  v73 = *(_QWORD *)(v72 - 8);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v67 = v20;
  v21 = type metadata accessor for OSSignpostID(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_100098728();
  v25 = v24 - v23;
  v26 = sub_1000BA294(&qword_100BE05C0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  *(_QWORD *)(v2 + 32) = PassthroughSubject.init()();
  *(_QWORD *)(v2 + 40) = &_swiftEmptySetSingleton;
  v70 = v2 + 40;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(5);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_resetAccumulator) = 0;
  v27 = OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_logger;
  sub_1000A0794(0, (unint64_t *)&qword_100BC2998, OS_os_log_ptr);
  v28 = (void *)OS_os_log.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, 0xD00000000000001DLL, 0x800000010099E000);
  *(_QWORD *)(v3 + v27) = v28;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  swift_retain();
  OSSignpostID.init(log:)(v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v3 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_signpostID, v25, v21);
  v75[0] = *(id *)(v3 + 32);
  v58 = (void *)objc_opt_self(NSRunLoop);
  v76[0] = objc_msgSend(v58, "mainRunLoop", swift_retain().n128_f64[0]);
  type metadata accessor for NSRunLoop.SchedulerOptions(0);
  sub_1000DDA80();
  v57 = sub_1000A0794(0, (unint64_t *)&qword_100BC3088, NSRunLoop_ptr);
  sub_10003D310(&qword_100BE05C8, &qword_100BE05C0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v30 = v29;
  v31 = sub_1001203C8();
  Publisher.receive<A>(on:options:)(v76, v8, v26, v57, v30, v31);
  sub_100021A14(v8, &qword_100BC3068);

  swift_release(v75[0]);
  v75[0] = _swiftEmptyArrayStorage;
  v32 = sub_1000BC174();
  sub_1000C3A8C(v32);
  v33 = sub_1000BA294(&qword_100BE05D0);
  sub_10003D310(&qword_100BE05D8, &qword_100BE0598, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  Publisher.scan<A>(_:_:)(v75, sub_10011BA58, v32, v60, v33, v34);
  swift_release(v32);
  v35 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v12, v60, v35);
  v36 = sub_1000BC174();
  sub_1000C3A8C(v36);
  sub_10003D310(&qword_100BE05E0, &qword_100BE05A0, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  sub_1000C5C58();
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(v37, v38, v39, v40);
  v41 = swift_release(v36);
  (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v59, v63, v41);
  v42 = v3 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_debounceTime;
  v75[0] = objc_msgSend(v58, "mainRunLoop");
  sub_1000DDA80();
  sub_10003D310(&qword_100BE05E8, &qword_100BE05A8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  Publisher.debounce<A>(for:scheduler:options:)(v42, v75, v8, v66, v57, v43, v31, v44);
  sub_100021A14(v8, &qword_100BC3068);

  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v61, v66);
  v45 = sub_1000BC174();
  sub_1000C3A8C(v45);
  sub_10003D310(&qword_100BE05F0, &qword_100BE05B0, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  sub_1000C5C58();
  Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(v46, v47, v48, v49);
  v50 = swift_release(v45);
  (*(void (**)(uint64_t, uint64_t, __n128))(v71 + 8))(v65, v69, v50);
  v51 = sub_1000BC174();
  sub_1000C3A8C(v51);
  sub_10003D310(&qword_100BE05F8, &qword_100BE05B8, (uint64_t)&protocol conformance descriptor for Publishers.HandleEvents<A>);
  v54 = Publisher<>.sink(receiveValue:)(sub_100151114, v51, v72, v52, v53);
  v55 = swift_release(v51);
  (*(void (**)(uint64_t, uint64_t, __n128))(v73 + 8))(v67, v72, v55);
  swift_beginAccess(v70, v75, 33, 0);
  AnyCancellable.store(in:)(v70);
  swift_endAccess(v75);
  swift_release(v54);
  swift_release(a2);
  return v3;
}

uint64_t sub_10003BC38(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(v1, a1);
}

uint64_t sub_10003BC44(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

double sub_10003BC58()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_10003BC60()
{
  return type metadata accessor for DynamicTypeSize(0);
}

void sub_10003BC84()
{
  Swift::String v0;

  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

uint64_t sub_10003BC9C()
{
  return type metadata accessor for WeatherData(0);
}

uint64_t sub_10003BCA4@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t sub_10003BCB8()
{
  return type metadata accessor for PreviewLocation(0);
}

void sub_10003BCC0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1000215BC(v2, a2);
}

uint64_t sub_10003BCC8()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10003BCD0()
{
  double v0;

  return DetailChartGradientModel.init(gradient:startValue:endValue:)(0.0, v0);
}

uint64_t sub_10003BD0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10003BD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(a1, 0xD00000000000002BLL, a3, 0);
}

void sub_10003BD3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_10003BD48()
{
  return type metadata accessor for ConditionDetailMapViewModel(0);
}

uint64_t sub_10003BD50()
{
  return type metadata accessor for WeatherDataModel(0);
}

uint64_t sub_10003BD60(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v2);
}

uint64_t sub_10003BD6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1000B15F8(*(_QWORD *)(v2 + a1), *(_BYTE *)(v2 + a1 + 8));
  return v1;
}

void sub_10003BD94()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_10007C77C(v2, v1, v0);
}

void sub_10003BDC0(Swift::UInt a1)
{
  Hasher._combine(_:)(a1);
}

uint64_t sub_10003BDC8()
{
  return sub_100015CB8();
}

uint64_t sub_10003BDD4()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10003BDE0()
{
  return type metadata accessor for LocationWeatherDataState(0);
}

uint64_t sub_10003BDE8(uint64_t a1)
{
  return *(_QWORD *)a1;
}

unint64_t sub_10003BDFC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_100731C9C();
}

uint64_t sub_10003BE08()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

BOOL sub_10003BE20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  v0 = sub_1000BA294(&qword_100BC3620);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  v6 = sub_1000BA294(&qword_100BEE5E8);
  State.wrappedValue.getter(v5, v6);
  sub_100037768((uint64_t)v5 + *(int *)(v3 + 20), (uint64_t)v2, &qword_100BC3620);
  v7 = type metadata accessor for ContentStatusBanner(0);
  v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v7) != 1;
  sub_100021A14((uint64_t)v2, &qword_100BC3620);
  sub_1000BF3B4();
  return v8;
}

_QWORD *sub_10003BF3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a1[7];
  v13 = a2[7];
  if (v12 < 2)
  {
    if (v13 >= 2)
    {
      a1[6] = a2[6];
      v14 = a2[7];
      a1[7] = v14;
      swift_bridgeObjectRetain(v14);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 < 2)
  {
    sub_1001A27B4((uint64_t)(a1 + 6));
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  a1[6] = a2[6];
  v15 = a2[7];
  a1[7] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v12);
LABEL_8:
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 20);
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    sub_100021AA4((uint64_t)a1 + v16, (uint64_t *)&unk_100C09CD0);
    v19 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        v21 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v22 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
        v22 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v22);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a2 + v23);
  v27 = *(_QWORD *)((char *)a1 + v23);
  *(_QWORD *)((char *)a1 + v23) = v26;
  swift_retain();
  swift_release(v27);
  v28 = *((_QWORD *)v24 + 1);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_retain();
  swift_release(v28);
  v29 = *((_QWORD *)v24 + 2);
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  swift_retain();
  swift_release(v29);
  v30 = *((_QWORD *)v24 + 3);
  *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
  swift_retain();
  swift_release(v30);
  v24[32] = v25[32];
  v31 = *((_QWORD *)v24 + 5);
  *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
  swift_retain();
  swift_release(v31);
  return a1;
}

void sub_10003C1BC(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  int v29;
  int v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int v91;
  uint64_t v92;

  v85 = a3;
  v91 = a2;
  v3 = type metadata accessor for BackgroundAnimationData.Model(0);
  v88 = *(_QWORD *)(v3 - 8);
  v89 = v3;
  __chkstk_darwin(v3);
  v87 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BC4678);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v81 - v9;
  v11 = type metadata accessor for BackgroundAnimationKind(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v86 = (char *)&v81 - v17;
  __chkstk_darwin(v16);
  v90 = (char *)&v81 - v18;
  v19 = type metadata accessor for BackgroundAnimationData(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v81 - v25;
  v27 = WeatherConditionBackgroundModel.canShowAnimatedBackground.getter(v24);
  if ((v27 & 1) == 0)
  {
    v43 = v92;
    WeatherConditionBackgroundModel.animationKind.getter(v27);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
    if (v44 == enum case for BackgroundAnimationKind.vfx(_:))
    {
      type metadata accessor for WeatherConditionBackgroundModifier(0);
      WeatherVFXConditionBackground.reset(animated:)(0);
    }
    else if (v44 == enum case for BackgroundAnimationKind.mica(_:))
    {
      v51 = (uint64_t *)(v43 + *(int *)(type metadata accessor for WeatherConditionBackgroundModifier(0) + 108));
      v52 = *v51;
      v53 = v51[1];
      v54 = *((unsigned __int8 *)v51 + 16);
      v55 = type metadata accessor for WeatherMicaConditionBackground(0);
      sub_10000F1C8(&qword_100C13F48, type metadata accessor for WeatherMicaConditionBackground);
      v57 = StateObject.wrappedValue.getter(v52, v53, v54, v55, v56);
      sub_1002F1E54(0);
      swift_release(v57);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    v66 = type metadata accessor for WeatherConditionBackgroundModel(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v66);
    type metadata accessor for WeatherConditionBackgroundModifier(0);
    sub_100037794((uint64_t)v10, (uint64_t)v8, &qword_100BC4678);
    v67 = sub_1000BA294(&qword_100C13D38);
    State.wrappedValue.setter(v8, v67);
    v68 = (uint64_t)v10;
    goto LABEL_20;
  }
  v83 = v12;
  v84 = v11;
  v81 = v8;
  v82 = v10;
  WeatherConditionBackgroundModel.animationData.getter(v27);
  v28 = *(uint64_t (**)(char *, uint64_t))(v20 + 88);
  v29 = v28(v26, v19);
  v30 = enum case for BackgroundAnimationData.none(_:);
  v31 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  v32 = v31(v26, v19);
  if (v29 == v30 || (v91 & 1) != 0)
  {
    v45 = v90;
    WeatherConditionBackgroundModel.animationKind.getter(v32);
    v47 = v83;
    v46 = v84;
    v48 = (*(uint64_t (**)(char *, uint64_t))(v83 + 88))(v45, v84);
    if (v48 == enum case for BackgroundAnimationKind.vfx(_:))
    {
      type metadata accessor for WeatherConditionBackgroundModifier(0);
      WeatherVFXConditionBackground.reset(animated:)(1);
      v50 = (uint64_t)v81;
      v49 = (uint64_t)v82;
    }
    else
    {
      v58 = v92;
      v50 = (uint64_t)v81;
      v49 = (uint64_t)v82;
      if (v48 == enum case for BackgroundAnimationKind.mica(_:))
      {
        v59 = (uint64_t *)(v58 + *(int *)(type metadata accessor for WeatherConditionBackgroundModifier(0) + 108));
        v60 = *v59;
        v61 = v59[1];
        v62 = *((unsigned __int8 *)v59 + 16);
        v63 = type metadata accessor for WeatherMicaConditionBackground(0);
        sub_10000F1C8(&qword_100C13F48, type metadata accessor for WeatherMicaConditionBackground);
        v65 = StateObject.wrappedValue.getter(v60, v61, v62, v63, v64);
        sub_1002F1E54((v91 & 1) == 0);
        swift_release(v65);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v46);
      }
    }
    v69 = type metadata accessor for WeatherConditionBackgroundModel(0);
    _s7Weather24LocationCompositionStateOwst_0(v49, 1, 1, v69);
    type metadata accessor for WeatherConditionBackgroundModifier(0);
    sub_100037794(v49, v50, &qword_100BC4678);
    v70 = sub_1000BA294(&qword_100C13D38);
    State.wrappedValue.setter(v50, v70);
    v68 = v49;
LABEL_20:
    sub_100021A14(v68, &qword_100BC4678);
    return;
  }
  WeatherConditionBackgroundModel.animationData.getter(v32);
  if (v28(v23, v19) != enum case for BackgroundAnimationData.loaded(_:))
  {
    v31(v23, v19);
    return;
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
  v34 = (unint64_t)v87;
  v33 = v88;
  v35 = v89;
  v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v23, v89);
  v37 = v86;
  WeatherConditionBackgroundModel.animationKind.getter(v36);
  v39 = v83;
  v38 = v84;
  v40 = (*(uint64_t (**)(char *, uint64_t))(v83 + 88))(v37, v84);
  if (v40 == enum case for BackgroundAnimationKind.vfx(_:))
  {
    v41 = type metadata accessor for WeatherConditionBackgroundModifier(0);
    swift_getObjectType(*(_QWORD *)(v92 + *(int *)(v41 + 44)));
    WeatherConditionBackgroundManagerType.executeRequests()();
LABEL_23:
    (*(void (**)(unint64_t, uint64_t, __n128))(v33 + 8))(v34, v35, v42);
    return;
  }
  if (v40 == enum case for BackgroundAnimationKind.mica(_:))
  {
    v71 = type metadata accessor for WeatherConditionBackgroundModifier(0);
    v72 = v92;
    v73 = (uint64_t *)(v92 + *(int *)(v71 + 108));
    v74 = *v73;
    v75 = v73[1];
    v76 = *((unsigned __int8 *)v73 + 16);
    v77 = type metadata accessor for WeatherMicaConditionBackground(0);
    sub_10000F1C8(&qword_100C13F48, type metadata accessor for WeatherMicaConditionBackground);
    v79 = StateObject.wrappedValue.getter(v74, v75, v76, v77, v78);
    sub_1002F02F4(v34, (_QWORD *)(v72 + *(int *)(v71 + 48)), v85 & 1);
    v42 = swift_release(v79);
    goto LABEL_23;
  }
  (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v37, v38, v80);
}

uint64_t sub_10003C800(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_10003C818(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  double v28;
  BOOL v29;
  double v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  char v35;
  id v36;
  id v37;
  uint64_t v38;
  CGRect v40;

  v38 = sub_10009E908();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100099864();
  sub_1000BA294(&qword_100C12840);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v7 = sub_10008909C();
  v8 = type metadata accessor for DynamicTypeSize(v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v12 = v11 - v10;
  v37 = sub_1000CD460(v13, "interfaceOrientation");
  v14 = sub_1000CD460((uint64_t)v37, "traitCollection");
  v36 = objc_msgSend(v14, "horizontalSizeClass");

  v15 = sub_1000DFAA8();
  v17 = v16;
  v18 = sub_1000CD460((uint64_t)v15, "screen");
  objc_msgSend(v18, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v40.origin.x = v20;
  v40.origin.y = v22;
  v40.size.width = v24;
  v40.size.height = v26;
  v27 = v17 / CGRectGetWidth(v40);
  objc_msgSend(a1, "bounds");
  v29 = sub_1001393B8(v28);
  sub_1000DFAA8();
  v31 = sub_100137B74(v30);
  v32 = v31;
  v33 = sub_1000CD460(v31, "traitCollection");
  v34 = objc_msgSend(v33, "preferredContentSizeCategory");

  DynamicTypeSize.init(_:)(v34);
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v8) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, enum case for DynamicTypeSize.medium(_:), v8);
    sub_1008E6C10(v3);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v3, v8);
  }
  *(_QWORD *)v2 = v37;
  *(_QWORD *)(v2 + 8) = v36;
  if (v27 == 1.0)
  {
    v35 = 0;
  }
  else if (vabdd_f64(0.5, v27) <= 0.05)
  {
    v35 = 2;
  }
  else if (v27 > 0.5)
  {
    v35 = 1;
  }
  else
  {
    v35 = 3;
  }
  *(_BYTE *)(v2 + 16) = v35;
  *(_BYTE *)(v2 + 17) = v29;
  *(_BYTE *)(v2 + 18) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v2 + *(int *)(v38 + 36), v12, v8);
  sub_100147B20(v2, a2);

}

id sub_10003CAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "systemImageNamed:", v4);

  return v5;
}

_QWORD *sub_10003CB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = type metadata accessor for Location.Identifier(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC6338);
  __chkstk_darwin(v8);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocationData(0);
  v36 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v35 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v32 = (char *)v31 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v31[1] = v2;
    v16 = *(_QWORD *)(type metadata accessor for SavedLocation(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v39 = a2;
    v33 = *(_QWORD *)(v16 + 72);
    v34 = (_QWORD *)(a2 + 96);
    v31[0] = a1;
    swift_bridgeObjectRetain(a1);
    v19 = _swiftEmptyArrayStorage;
    do
    {
      SavedLocation.identifier.getter(v18);
      v20 = *(_QWORD *)(v39 + 120);
      v21 = *(_QWORD *)(v39 + 128);
      sub_1000DB418(v34, v20);
      if ((dispatch thunk of LocationPrivacySamplerType.canRecordLocation(_:)(v7, v20, v21) & 1) != 0)
      {
        v22 = ((double (*)(void))Location.Identifier.coordinate.getter)();
        Location.Identifier.coordinate.getter();
        LocationData.init(latitudeDouble:longitudeDouble:)(v22, v23);
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v24, 1, v11);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
      {
        v18 = sub_100159990((uint64_t)v10);
      }
      else
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
        v26 = v32;
        v25(v32, v10, v11);
        v25(v35, v26, v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        {
          sub_10011F004();
          v19 = v28;
        }
        v27 = v19[2];
        if (v27 >= v19[3] >> 1)
        {
          sub_10011F004();
          v19 = v29;
        }
        v19[2] = v27 + 1;
        v18 = ((uint64_t (*)(char *, char *, uint64_t))v25)((char *)v19+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v27, v35, v11);
      }
      v17 += v33;
      --v15;
    }
    while (v15);
    swift_release(v39);
    swift_bridgeObjectRelease(v31[0]);
  }
  else
  {
    swift_release(a2);
    return _swiftEmptyArrayStorage;
  }
  return v19;
}

double sub_10003CE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  double result;
  uint64_t v21;

  v0 = type metadata accessor for UserInterfaceSizeClass(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC5A68);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v21 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v21 - v14;
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10011AA68();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100037768((uint64_t)v15, (uint64_t)v6, &qword_100BC5A68);
  sub_100037768((uint64_t)v13, v16, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v0) == 1)
  {
    sub_100021A14((uint64_t)v13, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v0) == 1)
    {
      sub_100021A14((uint64_t)v6, &qword_100BC5A68);
      goto LABEL_10;
    }
  }
  else
  {
    sub_100037768((uint64_t)v6, (uint64_t)v10, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      sub_10007A100((uint64_t)&qword_100BC5AB8);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v3, v0, v17);
      v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v3, v0);
      sub_100021A14((uint64_t)v13, &qword_100BC5A68);
      sub_100021A14((uint64_t)v15, &qword_100BC5A68);
      v19(v10, v0);
      sub_100021A14((uint64_t)v6, &qword_100BC5A68);
      if ((v18 & 1) != 0)
        goto LABEL_10;
      goto LABEL_7;
    }
    sub_100021A14((uint64_t)v13, &qword_100BC5A68);
    sub_100021A14((uint64_t)v15, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  sub_100021A14((uint64_t)v6, &qword_100BC5E60);
LABEL_7:
  if (qword_100BC2510 != -1)
    swift_once(&qword_100BC2510, sub_100701860);
LABEL_10:
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_10003D160(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + a2[6];
  v5 = type metadata accessor for WeatherMapOverlayKind(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  v6 = a1 + a2[8];
  v7 = sub_1000BA294(&qword_100BC5FD0);
  result = _s7Weather24LocationCompositionStateOwet_0(v6, 3, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 48), v5);
  return result;
}

uint64_t sub_10003D21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v7;

  type metadata accessor for LocationViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v1);
  sub_1000C24A0();
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - v3;
  sub_100094EE4();
  sub_1000DC51C();
  sub_10009880C();
  sub_100094EE4();
  sub_10008D488();
  sub_10009880C();
  v5 = sub_100084CEC((uint64_t)v4, v0);
  sub_1000215BC(v0, type metadata accessor for LocationViewModel);
  sub_1000215BC((uint64_t)v4, type metadata accessor for LocationViewModel);
  return v5 & 1;
}

void sub_10003D2DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_100075EB0(a2);
    atomic_store(sub_10003BC38(v3), a1);
  }
  sub_10004A298();
}

void sub_10003D310(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_100075EB0(a2);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_10004A298();
}

uint64_t sub_10003D34C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = type metadata accessor for LocationModel(0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BC4650);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = result;
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294((uint64_t *)&unk_100C0A200);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18 = result;
  v19 = a1[3];
  v20 = a1[4];
  sub_1000DB418(a1, v19);
  v21 = sub_1000BA294(&qword_100BED410);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v21, v21, v19, v20);
  v22 = v57;
  if (!v57)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v47 = v58;
  v48 = v14;
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BC43B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  v26 = v53;
  if (!v53)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v27 = v56;
  v45 = v55;
  v46 = a2;
  v44 = v54;
  v28 = a1[3];
  v29 = a1[4];
  sub_1000DB418(a1, v28);
  v30 = type metadata accessor for WireframeLevelInterestManager();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v30, v30, v28, v29);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v31 = result;
  v32 = a1[3];
  v33 = a1[4];
  sub_1000DB418(a1, v32);
  v34 = sub_1000BA294(&qword_100BDC598);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v34, v34, v32, v33);
  if (!v52)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v35 = a1[3];
  v36 = a1[4];
  sub_1000DB418(a1, v35);
  v37 = sub_1000BA294(&qword_100BED540);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v37, v37, v35, v36);
  if (v50)
  {
    v38 = sub_100068EB4((uint64_t)v51, v52);
    __chkstk_darwin(v38);
    v40 = (uint64_t *)((char *)&v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v41 + 16))(v40);
    v42 = sub_100526A54(v6, v48, v18, v22, v47, v26, v44, v45, v27, v31, *v40, &v49);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v51);
    result = type metadata accessor for LocationModule();
    v43 = v46;
    v46[3] = result;
    v43[4] = &off_100B9D310;
    *v43 = v42;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10003D698(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;

  v2 = a1[3];
  v3 = a1[4];
  sub_1000DB418(a1, v2);
  v4 = sub_1000BA294(&qword_100BED3B0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (!v49)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = a1[3];
  v7 = a1[4];
  sub_1000DB418(a1, v6);
  v8 = sub_1000BA294(&qword_100BED3A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v8, v8, v6, v7);
  if (!v47)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_1000BA294(&qword_100BED398);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!v45)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v12 = a1[3];
  v13 = a1[4];
  sub_1000DB418(a1, v12);
  v14 = sub_1000BA294(&qword_100BCF678);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!v43)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v15 = a1[3];
  v16 = a1[4];
  sub_1000DB418(a1, v15);
  v17 = sub_1000BA294(&qword_100BED520);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v17, v17, v15, v16);
  if (!v41)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v18 = a1[3];
  v19 = a1[4];
  sub_1000DB418(a1, v18);
  v20 = sub_1000BA294(&qword_100BED528);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v20, v20, v18, v19);
  if (!v39)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = a1[3];
  v22 = a1[4];
  sub_1000DB418(a1, v21);
  v23 = sub_1000BA294(&qword_100BED530);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v23, v23, v21, v22);
  if (v37)
  {
    v24 = sub_100068EB4((uint64_t)v48, v49);
    v25 = __chkstk_darwin(v24);
    v27 = (uint64_t *)((char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v28 + 16))(v27, v25);
    v29 = sub_100068EB4((uint64_t)v44, v45);
    v30 = __chkstk_darwin(v29);
    v32 = (uint64_t *)((char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v33 + 16))(v32, v30);
    v34 = sub_1005278F0(*v27, &v46, *v32, &v42, &v40, &v38, &v36);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v44);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
    return v34;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10003D97C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1000E79B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10003D9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = type metadata accessor for Font.Leading(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Font.TextStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 136) == 1)
  {
    v9 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Font.TextStyle.title3(_:), v5);
    static Font.Weight.semibold.getter(v9);
    v10 = static Font.system(_:weight:)(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v11 = *(_QWORD *)v0;
    v12 = *(_BYTE *)(v0 + 8);
    sub_10008D47C(v11, v12);
    sub_100109B54();
    v14 = v13;
    sub_1000B15F8(v11, v12);
    if ((v14 & 1) != 0)
      v15 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
    else
      v15 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
    v16 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *v15, v5);
    static Font.Weight.medium.getter(v16);
    v17 = static Font.system(_:weight:)(v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
    v10 = Font.leading(_:)(v4, v17);
    swift_release(v17);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v10;
}

id sub_10003DB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  Class v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  double v48;
  void *v49;
  void *v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v56;
  void *v57;
  _BYTE v58[64];
  _BYTE v59[64];
  Swift::String v60;
  Swift::String v61;

  v1 = sub_100098AA0();
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v61._object - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WeatherActivity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v61._object - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100120678();
  v8 = sub_100010C58(0xD00000000000001ELL, 0x80000001009F9190);
  objc_msgSend(v8, "setEligibleForHandoff:", 1);
  sub_10014D808(v0, (uint64_t)v7);
  v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 2, v1);
  if (v9)
  {
    if (v9 == 1)
    {
      sub_1001206B4(0);
      v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      sub_1000989C4();
      sub_1000BBEF8(v11, v12, (uint64_t)"Show my Weather location list");
      sub_10009D4A8();
      sub_1000C534C();
      v13 = sub_1000BA294(&qword_100BC6A10);
      inited = swift_initStackObject(v13, &v61._object);
      *(_OWORD *)(inited + 16) = xmmword_10097CA50;
      v15 = sub_1000C45D0(inited, "mainBundle");
      sub_1000BA814();
      sub_10009F7DC();
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v0;
      sub_100026A88(inited);
      isa = Set._bridgeToObjectiveC()().super.isa;
      sub_1000986C4();
      sub_1000BD3A0(v17, "setKeywords:");

    }
    else
    {
      sub_1000D8EE8();
      v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      sub_1000989C4();
      sub_1000BBEF8(v23, v24, (uint64_t)"Show weather in My Location");
      sub_10009D4A8();
      sub_1000C534C();
      v25 = sub_1000BA294(&qword_100BC6A10);
      v26 = swift_initStackObject(v25, v59);
      *(_OWORD *)(v26 + 16) = xmmword_10097DA20;
      v27 = sub_1000C45D0(v26, "mainBundle");
      v60._object = (void *)0x80000001009F9220;
      v28._countAndFlagsBits = 0x72656874616577;
      v28._object = (void *)0xE700000000000000;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v60._countAndFlagsBits = 0xD000000000000036;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v60);

      *(Swift::String *)(v26 + 32) = v30;
      v32 = sub_1000C45D0(v31, "mainBundle");
      sub_1000989C4();
      v33._countAndFlagsBits = 1701995880;
      v33._object = (void *)0xE400000000000000;
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v61);
      sub_10009F7DC();
      *(_QWORD *)(v26 + 48) = v27;
      *(_QWORD *)(v26 + 56) = v30._countAndFlagsBits;
      sub_100026A88(v26);
      v35 = Set._bridgeToObjectiveC()().super.isa;
      sub_1000986C4();
      sub_1000BD3A0(v36, "setKeywords:");

      if (qword_100BC2600 != -1)
        swift_once(&qword_100BC2600, sub_1007C7998);
      v37 = static WeatherLocation.currentLocationID;
      v38 = (void *)unk_100CAF430;
      swift_bridgeObjectRetain(unk_100CAF430);
      sub_1000C46EC(v37, v38);
      swift_bridgeObjectRetain(v38);
      sub_1000BBF74(v37, v38);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1000D8EE8();
    v18 = sub_1002CA43C((uint64_t)v4);
    if (v19)
    {
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v21 = 0;
    }
    sub_100098A10(v18, "setTitle:");

    v39 = sub_1000BA294(&qword_100BC6A10);
    v40 = swift_initStackObject(v39, v58);
    *(_OWORD *)(v40 + 16) = xmmword_10097DA20;
    v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    sub_1000989C4();
    v42 = sub_1000BA814();
    v44 = v43;

    *(_QWORD *)(v40 + 32) = v42;
    *(_QWORD *)(v40 + 40) = v44;
    *(_QWORD *)(v40 + 48) = Location.Identifier.name.getter(v45);
    *(_QWORD *)(v40 + 56) = v46;
    sub_100026A88(v40);
    v47 = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setKeywords:", v47, sub_1000986C4());

    v48 = Location.Identifier.coordinate.getter();
    v50 = v49;
    v56 = 0;
    v57 = (void *)0xE000000000000000;
    sub_1000CD6B8((uint64_t)&v56);
    v51._countAndFlagsBits = 44;
    v51._object = (void *)0xE100000000000000;
    String.append(_:)(v51);
    sub_1000CD6B8((uint64_t)&v56);
    sub_1000C46EC(v56, v57);
    v53 = Location.Identifier.name.getter(v52);
    sub_1000BBF74(v53, v54);
    sub_1002CA5CC(*(void **)&v48, 0, 7627116);
    sub_1002CA5CC(v50, 0, 1735290732);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v8;
}

uint64_t sub_10003E0F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v79;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v29 = a2[2];
      v28 = a2[3];
      *(_QWORD *)(a1 + 16) = v29;
      *(_QWORD *)(a1 + 24) = v28;
      v31 = a2[4];
      v30 = a2[5];
      *(_QWORD *)(a1 + 32) = v31;
      *(_QWORD *)(a1 + 40) = v30;
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      v32 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
      v33 = v32[9];
      v34 = a1 + v33;
      v35 = (uint64_t)a2 + v33;
      v36 = type metadata accessor for Precipitation(0);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v36 - 8) + 16);
      swift_bridgeObjectRetain(v29);
      v38 = swift_bridgeObjectRetain(v31);
      v37(v34, v35, v36, v38);
      v39 = v32[10];
      v40 = (_QWORD *)(a1 + v39);
      v41 = (uint64_t *)((char *)a2 + v39);
      v42 = v41[1];
      *v40 = *v41;
      v40[1] = v42;
      v43 = v32[11];
      v44 = (_QWORD *)(a1 + v43);
      v45 = (uint64_t *)((char *)a2 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = v32[12];
      v48 = (_QWORD *)(a1 + v47);
      v49 = (uint64_t *)((char *)a2 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = v32[13];
      v79 = a1 + v51;
      v52 = (uint64_t)a2 + v51;
      v53 = type metadata accessor for Date(0);
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v53 - 8) + 16);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v46);
      v55 = swift_bridgeObjectRetain(v50);
      v54(v79, v52, v53, v55);
      v56 = v32[14];
      v57 = a1 + v56;
      v58 = (uint64_t)a2 + v56;
      v59 = type metadata accessor for TimeZone(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
      *(_BYTE *)(a1 + v32[15]) = *((_BYTE *)a2 + v32[15]);
      v60 = v32[16];
      v61 = *(uint64_t *)((char *)a2 + v60);
      *(_QWORD *)(a1 + v60) = v61;
      swift_bridgeObjectRetain(v61);
      v24 = a1;
      v25 = a3;
      v26 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
      v10 = v9[5];
      v11 = a1 + v10;
      v12 = (uint64_t)a2 + v10;
      v13 = type metadata accessor for TimeZone(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      v14 = v9[6];
      v15 = *(uint64_t *)((char *)a2 + v14);
      *(_QWORD *)(a1 + v14) = v15;
      v16 = v9[7];
      v17 = (_QWORD *)(a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      v20 = v9[8];
      v21 = (_QWORD *)(a1 + v20);
      v22 = (uint64_t *)((char *)a2 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v23);
      v24 = a1;
      v25 = a3;
      v26 = 1;
    }
    else
    {
      v62 = type metadata accessor for Date(0);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(a1, a2, v62);
      v63 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
      v64 = v63[5];
      v65 = a1 + v64;
      v66 = (uint64_t)a2 + v64;
      v67 = type metadata accessor for TimeZone(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      v68 = v63[6];
      v69 = *(uint64_t *)((char *)a2 + v68);
      *(_QWORD *)(a1 + v68) = v69;
      v70 = v63[7];
      v71 = (_QWORD *)(a1 + v70);
      v72 = (uint64_t *)((char *)a2 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = v63[8];
      v75 = (_QWORD *)(a1 + v74);
      v76 = (uint64_t *)((char *)a2 + v74);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      swift_bridgeObjectRetain(v69);
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRetain(v77);
      v24 = a1;
      v25 = a3;
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v25, v26);
  }
  return a1;
}

uint64_t sub_10003E438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  void *v16;
  void *v17;

  v1 = sub_1000BA294(&qword_100BFFBC0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1000BA294(&qword_100BFFBC8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1006E7984();
  v9 = v8;
  v10 = static Color.clear.getter(v8);
  v11 = v10;
  if ((v9 & 1) != 0)
  {
    v16 = (void *)v10;
    v12 = type metadata accessor for LocationViewModel(0);
    View.setForegroundEffect(_:)(v0 + *(int *)(v12 + 80), &type metadata for Color, &protocol witness table for Color);
    swift_release(v11);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    swift_storeEnumTagMultiPayload(v3, v1, 0);
    v16 = &type metadata for Color;
    v17 = &protocol witness table for Color;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.setForegroundEffect(_:)>>, 1);
    _ConditionalContent<>.init(storage:)(v3, v4, &type metadata for Color, OpaqueTypeConformance2, &protocol witness table for Color);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    *v3 = v10;
    swift_storeEnumTagMultiPayload(v3, v1, 1);
    v16 = &type metadata for Color;
    v17 = &protocol witness table for Color;
    v15 = swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.setForegroundEffect(_:)>>, 1);
    return _ConditionalContent<>.init(storage:)(v3, v4, &type metadata for Color, v15, &protocol witness table for Color);
  }
}

uint64_t sub_10003E610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_100176D88(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003E6D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for LocationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  v13 = *(_QWORD *)(a1 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v15 = *(int *)(v14 + 20);
  v16 = (char *)v10 + v15;
  v17 = (const void *)(v11 + v15);
  v18 = type metadata accessor for WeatherCondition(0);
  v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v22 = sub_1000BA294(&qword_100BC3660);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_7:
  v23 = *(int *)(v14 + 24);
  v24 = *(_QWORD *)((char *)v10 + v23);
  *(_QWORD *)((char *)v10 + v23) = *(_QWORD *)(v11 + v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v28 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  swift_bridgeObjectRelease(v28);
  v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = v31[1];
  v33 = v30[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_bridgeObjectRelease(v33);
  v34 = v31[3];
  v35 = v30[3];
  v30[2] = v31[2];
  v30[3] = v34;
  swift_bridgeObjectRelease(v35);
  v36 = v31[5];
  v37 = v30[5];
  v30[4] = v31[4];
  v30[5] = v36;
  swift_bridgeObjectRelease(v37);
  return a1;
}

uint64_t destroy for ContentStatusBannerViewStyle(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  return swift_release(a1[3]);
}

_BYTE *sub_10003E90C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 4:
      v12 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v9 = a1;
      v10 = a3;
      v11 = 4;
      break;
    case 3:
      v13 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain(v13);
      v9 = a1;
      v10 = a3;
      v11 = 3;
      break;
    case 2:
      v7 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_1000BA294(&qword_100BCB648);
      a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
      v9 = a1;
      v10 = a3;
      v11 = 2;
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  return a1;
}

uint64_t sub_10003EA14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;

  v32 = type metadata accessor for LocationViewerViewModel(0);
  __chkstk_darwin(v32);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1000BA294(&qword_100BECFA0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BEDA80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v31 - v13;
  v15 = *(_QWORD *)(v1 + 8);
  swift_retain();
  sub_1007A61E8();
  v17 = v16;
  swift_release(v15);
  v18 = type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10007A100((uint64_t)&unk_100BED878);
  Bindable<A>.init(wrappedValue:)(v17, v18, v19);
  Bindable.projectedValue.getter(v8);
  KeyPath = swift_getKeyPath(&unk_1009ABA48);
  Bindable<A>.subscript.getter(KeyPath, v8);
  swift_release(KeyPath);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1000BF64C();
  v22 = *(_QWORD *)&v4[*(int *)(v32 + 20)];
  swift_bridgeObjectRetain(v22);
  sub_1000BF3B4();
  sub_1000787D4((uint64_t)v7, a1, &qword_100BECFA0);
  v23 = (int *)type metadata accessor for PageControl(0);
  *(_QWORD *)(a1 + v23[5]) = v22;
  v24 = (_QWORD *)(a1 + v23[6]);
  *v24 = swift_getKeyPath(&unk_1009AB7F8);
  v25 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  v26 = a1 + v23[7];
  v27 = type metadata accessor for PageControlDisplayState(0);
  sub_10007A100((uint64_t)&unk_100BED880);
  *(_QWORD *)v26 = Environment.init<A>(_:)(v27, v27, v28);
  *(_BYTE *)(v26 + 8) = v29 & 1;
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v8);
}

void sub_10003ECC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  double v39;
  double *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  unsigned __int8 v67[9];

  v3 = v2;
  v60 = a1;
  v62 = a2;
  v4 = sub_1000BA294(&qword_100BE2118);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BE2120);
  __chkstk_darwin(v61);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE2128);
  __chkstk_darwin(v10);
  v56 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000BA294(&qword_100BE2130);
  __chkstk_darwin(v54);
  v57 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1000BA294(&qword_100BE2138);
  __chkstk_darwin(v55);
  v58 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1000BA294(&qword_100BE2140);
  __chkstk_darwin(v63);
  v59 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A7244(v2 + 97, (uint64_t)&v66, &qword_100BE2148);
  sub_1001A7244((uint64_t)&v66, (uint64_t)v67, &qword_100BE2148);
  v15 = v67[0];
  if (v67[0] == 6)
    goto LABEL_9;
  v16 = *(_QWORD *)(v2 + 32);
  v17 = *(_BYTE *)(v3 + 40);
  sub_10008D47C(*(_QWORD *)(v3 + 32), v17);
  sub_100109B54();
  v19 = v18;
  sub_1000B15F8(v16, v17);
  if ((v19 & 1) != 0)
    goto LABEL_9;
  v65 = *(_OWORD *)v3;
  if ((_QWORD)v65)
  {
    v20 = type metadata accessor for TipCoordinator(0);
    swift_retain();
    ObservableResolver.resolve<A>(_:)(v20, v20);
    sub_1004446CC(&v65);
    v21 = v64;
    if (!v64)
    {
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    sub_100028CC8();
    v23 = v22;
    swift_release(v21);
    if ((v23 & 1) != 0)
    {
      swift_retain();
      ObservableResolver.resolve<A>(_:)(v20, v20);
      sub_1004446CC(&v65);
      v24 = v64;
      if (v64)
      {
        v25 = sub_10068CDF4(v15);
        swift_release(v24);
        if ((v25 & 1) != 0)
        {
          v26 = *(_QWORD *)(v3 + 48);
          v27 = *(_QWORD *)(v3 + 56);
          v28 = *(_BYTE *)(v3 + 64);
          sub_100082BE8(v26, v27, v28);
          sub_1007A60A8();
          v52 = v30;
          v53 = v29;
          sub_100082C5C(v26, v27, v28);
          v31 = (uint64_t)v59;
          v32 = (uint64_t)&v59[*(int *)(v63 + 36)];
          v33 = v56;
          sub_10043E514(v3, v56);
          v34 = v57;
          sub_100037768(v33, v57, &qword_100BE2128);
          *(_QWORD *)(v34 + *(int *)(v54 + 36)) = 0x3FF0000000000000;
          sub_100021A14(v33, &qword_100BE2128);
          v35 = static VerticalAlignment.bottom.getter();
          v36 = v58;
          sub_100037768(v34, v58, &qword_100BE2130);
          v37 = (uint64_t *)(v36 + *(int *)(v55 + 36));
          *v37 = v35;
          v37[1] = (uint64_t)sub_10043EB44;
          v37[2] = 0;
          sub_100021A14(v34, &qword_100BE2130);
          v38 = v60;
          v39 = sub_10043EB68();
          sub_100037768(v36, v32, &qword_100BE2138);
          v40 = (double *)(v32 + *(int *)(sub_1000BA294(&qword_100BE2170) + 36));
          *v40 = 0.0;
          v40[1] = v39;
          sub_100021A14(v36, &qword_100BE2138);
          v41 = (_QWORD *)(v32 + *(int *)(sub_1000BA294(&qword_100BE2168) + 36));
          v42 = v52;
          *v41 = v53;
          v41[1] = v42;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v31, v38, v4);
          sub_100037768(v31, (uint64_t)v9, &qword_100BE2140);
          swift_storeEnumTagMultiPayload(v9, v61, 0);
          v43 = sub_100444630();
          sub_10007AB60((uint64_t)&unk_100BE2158);
          _ConditionalContent<>.init(storage:)(v9, v63, v4, v43, v44);
          sub_100021A14(v31, &qword_100BE2140);
          return;
        }
        goto LABEL_9;
      }
      goto LABEL_11;
    }
LABEL_9:
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v45(v7, v60, v4);
    v45(v9, (uint64_t)v7, v4);
    swift_storeEnumTagMultiPayload(v9, v61, 1);
    v46 = sub_100444630();
    sub_10007AB60((uint64_t)&unk_100BE2158);
    _ConditionalContent<>.init(storage:)(v9, v63, v4, v46, v47);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
LABEL_12:
  v48 = *((_QWORD *)&v65 + 1);
  v49 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  EnvironmentObject.error()(0, v48, v49, v50);
  __break(1u);
}

void sub_10003F238(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  _QWORD *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v110 = a1;
  sub_1000BA294(&qword_100BDE150);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v109 = v4;
  v5 = type metadata accessor for ContentSizeCategory(0);
  v107 = *(_QWORD *)(v5 - 8);
  v108 = v5;
  __chkstk_darwin(v5);
  sub_10009883C();
  v105 = v6 - v7;
  __chkstk_darwin(v8);
  v106 = (char *)&v98 - v9;
  v10 = sub_1000DAEDC();
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v103 = v12;
  v13 = sub_1000E7020();
  v99 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_10004A2E8();
  sub_1000BA294(&qword_100BC39D0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  v104 = v10;
  v18 = *(int *)(v10 + 44);
  v102 = v1;
  v100 = (uint64_t)v1 + v18;
  v19 = sub_1000160B4();
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v101 = type metadata accessor for Text.WritingMode(0);
  v26 = 1;
  sub_10009D34C(v17, v27, v28, v101);
  v29 = sub_1000C0E0C();
  v36 = Text.Measurements.size(of:in:writingMode:)(v30, v31, v32, v33, v34, v29, v35);
  v38 = v37;
  sub_1000D31B4(v19, v21, v25);
  swift_bridgeObjectRelease(v23);
  sub_100021A14(v17, &qword_100BC39D0);
  v39 = v102;
  v40 = sub_100011268();
  v42 = v41;
  v44 = v43;
  LOBYTE(v21) = v45 & 1;
  _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v101);
  v46 = sub_1000C0E0C();
  v53 = Text.Measurements.size(of:in:writingMode:)(v47, v48, v49, v50, v51, v46, v52);
  v55 = v54;
  sub_1000D31B4(v40, v42, v21);
  swift_bridgeObjectRelease(v44);
  v56 = v17;
  v57 = v39;
  sub_100021A14(v56, &qword_100BC39D0);
  sub_10013F3A0();
  v59 = v58;
  v60 = *v39;
  v61 = *(_QWORD *)(*v39 + 16);
  if (v61)
  {
    v62 = v60 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    v63 = *(_QWORD *)(v99 + 72);
    swift_bridgeObjectRetain(v60);
    v26 = 0;
    v64 = v103;
    while (1)
    {
      sub_100080C0C(v62, v2, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      v65 = *(double *)(v2 + *(int *)(v13 + 48));
      sub_1000215BC(v2, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      if (v65 >= 0.3)
        break;
      ++v26;
      v62 += v63;
      if (v61 == v26)
      {
        v26 = 1;
        break;
      }
    }
    swift_bridgeObjectRelease(v60);
  }
  else
  {
    v64 = v103;
  }
  if (qword_100BC2400 != -1)
    swift_once(&qword_100BC2400, sub_1001597C4);
  v66 = type metadata accessor for Logger(0);
  sub_1000AECD4(v66, (uint64_t)qword_100CAEFF8);
  sub_100080C0C((uint64_t)v57, v64, type metadata accessor for DailyComponentView);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v70 = 134349056;
    v71 = *(_QWORD *)(*(_QWORD *)v64 + 16);
    sub_1000215BC(v64, type metadata accessor for DailyComponentView);
    v111 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112);
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "About to check if a large text layout might be required for the daily forecast component. dailyForecastCount=%{public}ld", v70, 0xCu);
    sub_1000BD378();
  }
  else
  {
    sub_1000215BC(v64, type metadata accessor for DailyComponentView);
  }
  v73 = v106;
  v72 = v107;

  sub_100109D64();
  v74 = v105;
  v75 = v108;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v105, v73, v108);
  v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 88))(v74, v75);
  if (v76 != enum case for ContentSizeCategory.extraSmall(_:)
    && v76 != enum case for ContentSizeCategory.small(_:)
    && v76 != enum case for ContentSizeCategory.medium(_:)
    && v76 != enum case for ContentSizeCategory.large(_:)
    && v76 != enum case for ContentSizeCategory.extraLarge(_:)
    && v76 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v76 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v76 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v76 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v76 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v76 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v76 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v87 = 1;
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v75);
  }
  v87 = 0;
LABEL_48:
  v88 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v73, v75);
  v89 = Logger.logObject.getter(v88);
  v90 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v91 = 67240192;
    HIDWORD(v112) = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v112 + 4, &v113);
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "Obtained the large text layout requirement for the daily forecast component. mightRequireLargeTextRowView=%{BOOL,public}d", v91, 8u);
    sub_1000BD378();
  }

  v93 = static HorizontalAlignment.center.getter(v92);
  v94 = (uint64_t)v109;
  *v109 = v93;
  *(_QWORD *)(v94 + 8) = 0;
  *(_BYTE *)(v94 + 16) = 0;
  v95 = sub_1000BA294(&qword_100BDE158);
  sub_10013F020(v57, v87, v26, v94 + *(int *)(v95 + 44), v36, v38, v53, v55, v59);
  v96 = v110;
  sub_100037768(v94, v110, &qword_100BDE150);
  v97 = (_QWORD *)(v96 + *(int *)(sub_1000BA294(&qword_100BDE160) + 36));
  *v97 = 0xD000000000000012;
  v97[1] = 0x800000010099B440;
  sub_100021A14(v94, &qword_100BDE150);
}

_QWORD *sub_10003F8CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  char *v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_1000986AC();
  v69 = v1;
  v70 = v2;
  v3 = v0;
  v5 = v4;
  v67 = *v0;
  sub_1000BA294(&qword_100C0A988);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v63 = v7;
  sub_10009D2A4();
  __chkstk_darwin(v8);
  sub_1000860D0();
  v64 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  v12 = (char *)&v59 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - v17;
  v19 = sub_1000C591C();
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_1000986FC();
  v61 = v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  sub_1000860D0();
  v62 = v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v65 = v25;
  sub_10009D2A4();
  __chkstk_darwin(v26);
  sub_1000860D0();
  v66 = v27;
  sub_10009D2A4();
  __chkstk_darwin(v28);
  v30 = (char *)&v59 - v29;
  type metadata accessor for UnfairLock.Options(0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_1000BCED8();
  v32 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_lock;
  static UnfairLock.Options.dataSynchronization.getter(v33);
  v34 = sub_1000CD6E8();
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = UnfairLock.init(options:)(v0);
  v68 = v32;
  *(_QWORD *)((char *)v0 + v32) = v35;
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity) = 0;
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity) = 0;
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity) = 0;
  v36 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId);
  *v36 = 0;
  v36[1] = 0;
  sub_10015B8F8();
  sub_1000B4744((uint64_t)v18);
  if (!v41)
  {
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
    v60 = v30;
    v39 = v18;
    v40 = v38;
    v38((uint64_t)v30, v39, v19);
    sub_10015B928();
    sub_1000B4744((uint64_t)v15);
    v37 = v20;
    if (!v41)
    {
      v42 = v66;
      v40(v66, v15, v19);
      sub_10015B810();
      sub_1000B4744((uint64_t)v12);
      if (v43)
      {
        sub_1000DD7B4(v42);
        v15 = v12;
      }
      else
      {
        v44 = v65;
        v40(v65, v12, v19);
        v15 = v64;
        sub_10015B90C();
        sub_1000B4744((uint64_t)v15);
        if (!v45)
        {
          v55 = v40;
          v56 = v62;
          v55(v62, v15, v19);
          v15 = v63;
          sub_10015B93C();
          sub_1000B4744((uint64_t)v15);
          v46 = (uint64_t)v60;
          if (!v57)
          {
            v58 = v61;
            sub_1000B4E28(v61, (uint64_t)v15);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_label, v5);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_weatherLabel, v46);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapLabel, v66);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapMetadataLabel, v44);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesLabel, v56);
            sub_1000B4E28((uint64_t)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_overlayTileLabel, v58);
            return v3;
          }
          sub_1000DD7B4(v56);
          sub_1000DD7B4(v44);
          sub_1000DD7B4(v66);
          goto LABEL_14;
        }
        sub_1000DD7B4(v44);
        sub_1000DD7B4(v42);
      }
    }
    v46 = (uint64_t)v60;
LABEL_14:
    sub_1000DD7B4(v46);
    v18 = v15;
    goto LABEL_15;
  }
  v37 = v20;
LABEL_15:
  v47 = v67;
  sub_1007FBB64((uint64_t)v18);
  if (qword_100BC2468 != -1)
    swift_once(&qword_100BC2468, sub_100159724);
  v48 = type metadata accessor for Logger(0);
  v49 = sub_1000AECD4(v48, (uint64_t)qword_100CAF120);
  v50 = Logger.logObject.getter(v49);
  v52 = static os_log_type_t.error.getter(v50, v51);
  if (os_log_type_enabled(v50, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v52, "LocationNetworkActivityFlow couldn't be created", v53, 2u);
    swift_slowDealloc(v53, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v5, v19);
  sub_1000D949C(v68);
  sub_1000D949C(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity);
  sub_1000D949C(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity);
  sub_1000D949C(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v3 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId
                                                   + 8));
  swift_deallocPartialClassInstance(v3, v47, *(unsigned int *)(*v3 + 48), *(unsigned __int16 *)(*v3 + 52));
  return 0;
}

uint64_t sub_10003FDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t KeyPath;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v4);
  v5 = (int *)type metadata accessor for LocationComponentHeaderView(0);
  KeyPath = swift_getKeyPath(&unk_1009DD540);
  sub_1000C64C0(KeyPath);
  v7 = (_QWORD *)(a2 + v5[6]);
  *v7 = swift_getKeyPath(&unk_1009DD568);
  v8 = sub_1000BA294(&qword_100BC2908);
  sub_1000BA934(v8);
  v9 = (_QWORD *)(a2 + v5[7]);
  *v9 = swift_getKeyPath(&unk_1009DD598);
  v10 = sub_1000BA294(&qword_100BC37D8);
  sub_1000BA934(v10);
  v11 = swift_getKeyPath(&unk_1009DD5C8);
  sub_1000C64C0(v11);
  v12 = swift_getKeyPath(&unk_1009DD5F8);
  sub_1000C64C0(v12);
  v13 = swift_getKeyPath(&unk_1009DD628);
  sub_1000C64C0(v13);
  v14 = (_QWORD *)(a2 + v5[11]);
  *v14 = swift_getKeyPath(&unk_1009DD658);
  v15 = sub_1000BA294(&qword_100BC68C8);
  sub_1000BA934(v15);
  v16 = a2 + v5[12];
  v17 = swift_getKeyPath(&unk_1009DD688);
  *(_QWORD *)v16 = v17;
  *(_WORD *)(v16 + 8) = 0;
  v20 = 0x4038000000000000;
  sub_1000DC008(v17, enum case for Font.TextStyle.caption(_:));
  sub_10010D1D0();
  v18 = sub_1000DE218((uint64_t)&v20);
  v20 = 0x4038000000000000;
  sub_1000DC008(v18, enum case for Font.TextStyle.footnote(_:));
  sub_1000DE218((uint64_t)&v20);
  return sub_100126800(a1, a2);
}

uint64_t sub_10003FFB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  Swift::Double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69;

  v68 = a1;
  v2 = *v1;
  v3 = type metadata accessor for AirQualityScaleCategory(0);
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AirQualityScale(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v67 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v58 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v58 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v58 - v16;
  if (qword_100BC2698 != -1)
    swift_once(&qword_100BC2698, sub_10015A5C0);
  v18 = qword_100CAF500;
  v19 = sub_100125CCC();
  v20 = Configurable.setting<A>(_:)(v18, v2, v19);
  if ((v69 & 1) != 0)
  {
    v64 = 0;
  }
  else
  {
    v21 = sub_1000BB8D4();
    v64 = AirQualityScale.isNumerical.getter(v21);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  v63 = AirQuality.index.getter(v20);
  v22 = AirQuality.scale.getter(v63);
  v23 = AirQualityScale.range.getter(v22);
  v61 = v24;
  v62 = v23;
  sub_1000BC644((uint64_t)v17);
  v25 = sub_1000BB8D4();
  v26 = AirQuality.index.getter(v25);
  v27 = AirQualityScale.fraction(for:)(v26);
  v28 = sub_1000BC644((uint64_t)v15);
  v29 = AirQuality.currentScaleCategory.getter(v28);
  v30 = AirQualityScaleCategory.description.getter(v29);
  v59 = v31;
  v60 = v30;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v66);
  v32 = sub_1000BB8D4();
  v33 = AirQualityScale.displayName.getter(v32);
  v65 = v34;
  v66 = v33;
  v35 = sub_1000BC644((uint64_t)v15);
  v36 = AirQuality.displayDescription.getter(v35);
  v38 = v37;
  v39 = sub_1000BB8D4();
  v40 = AirQualityScale.displayName.getter(v39);
  v42 = v41;
  v43 = sub_1000BC644((uint64_t)v12);
  v44 = AirQuality.isSignificant.getter(v43);
  v45 = (uint64_t)v67;
  v46 = sub_1000BB8D4();
  v47 = AirQualityScale.gradientStops.getter(v46);
  sub_1000BC644(v45);
  v48 = v68;
  sub_10000B63C(v68);
  v49 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v50 = v48 + v49[5];
  v51 = v62;
  *(_QWORD *)v50 = v63;
  *(_QWORD *)(v50 + 8) = v51;
  *(_QWORD *)(v50 + 16) = v61;
  *(Swift::Double *)(v50 + 24) = v27;
  v52 = v59;
  *(_QWORD *)(v50 + 32) = v60;
  *(_QWORD *)(v50 + 40) = v52;
  v53 = v65;
  *(_QWORD *)(v50 + 48) = v66;
  *(_QWORD *)(v50 + 56) = v53;
  *(_QWORD *)(v50 + 64) = v36;
  *(_QWORD *)(v50 + 72) = v38;
  *(_QWORD *)(v50 + 80) = v40;
  *(_QWORD *)(v50 + 88) = v42;
  *(_BYTE *)(v50 + 96) = v64 & 1;
  *(_BYTE *)(v50 + 97) = v44 & 1;
  *(_QWORD *)(v50 + 104) = v47;
  v54 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v50, v54, 0);
  v55 = (_BYTE *)(v48 + v49[7]);
  *v55 = 0;
  v56 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v55, v56, 3);
  result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v56);
  *(_WORD *)(v48 + v49[6]) = 256;
  return result;
}

uint64_t sub_100040308(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0);
  sub_10004037C(v7, a2);
  sub_1000AECD4(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001009F0D20, a3, a4);
}

uint64_t *sub_10004037C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_1000403BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  Class isa;
  id v39;
  void *v40;
  void *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  Swift::String *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  unint64_t v72;
  Swift::String *v73;
  void *v74;
  __n128 v75;
  double v76;
  double v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t result;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  unsigned int v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String v117;
  Swift::String v118;

  v5 = v4;
  v109 = a3;
  v107 = a4;
  v8 = sub_1000BA294(&qword_100BCBD10);
  __chkstk_darwin(v8);
  v110 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v114 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  __chkstk_darwin(v10);
  v113 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BFE5C0);
  v13 = __chkstk_darwin(v12);
  v103 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v99 - v15;
  v108 = type metadata accessor for TimeZone(0);
  v106 = *(_QWORD *)(v108 - 8);
  v17 = __chkstk_darwin(v108);
  v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter(v17);
  v21 = Location.coordinate.getter(v20);
  v23 = v22;
  v24 = v4[5];
  v25 = v4[6];
  sub_1000DB418(v5 + 2, v5[5]);
  v26 = dispatch thunk of MoonDataProviderType.moonEphemeris(for:coordinate:)(a2, v24, v25, v21);
  v27 = v4[5];
  v28 = v4[6];
  sub_1000DB418(v5 + 2, v5[5]);
  v29 = v28;
  v30 = a2;
  dispatch thunk of MoonDataProviderType.nextMoonEvent(after:coordinate:timeZone:)(a2, v19, v27, v29, v21, v23);
  v31 = sub_1001297D4((uint64_t)v16, v4, a2, (uint64_t)v19);
  v33 = v31;
  v116 = v34;
  v112 = v32;
  if (v26)
  {
    v35 = v31;
    sub_10012059C();
    swift_retain();
    v37 = (void *)static NSNumberFormatter.percent.getter(v36);
    CelestialEphemeris.illuminatedFraction.getter();
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    v39 = objc_msgSend(v37, "stringFromNumber:", isa);

    if (v39)
    {
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v41 = v40;

      swift_release(v26);
      v42 = 0;
    }
    else
    {
      swift_release(v26);
      v100 = 0;
      v41 = 0;
      v42 = 1;
    }
    v33 = v35;
    v43 = v112;
  }
  else
  {
    v43 = v32;
    v100 = 0;
    v41 = 0;
    v42 = 1;
  }
  v44 = sub_1000081B4(v5, v30, (uint64_t)v19, a1, v21, v23);
  v101 = v45;
  v102 = v44;
  v111 = v46;
  v47 = sub_10012964C(v33, v116, v43, (uint64_t)v16);
  v104 = v48;
  v105 = v47;
  if ((v42 & 1) != 0)
  {
    v49 = _swiftEmptyArrayStorage;
  }
  else
  {
    v99 = v33;
    v43 = (unint64_t)v19;
    v50 = v16;
    v51 = v30;
    v52 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v117._object = (void *)0x8000000100A10D20;
    v53._countAndFlagsBits = 0x616E696D756C6C49;
    v53._object = (void *)0xEC0000006E6F6974;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v117._countAndFlagsBits = 0xD000000000000035;
    v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v117);

    sub_10011EF00(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    v49 = (_QWORD *)v56;
    v58 = *(_QWORD *)(v56 + 16);
    v57 = *(_QWORD *)(v56 + 24);
    if (v58 >= v57 >> 1)
    {
      sub_10011EF00(v57 > 1, v58 + 1, 1, v56);
      v49 = v96;
    }
    v49[2] = v58 + 1;
    v59 = (Swift::String *)&v49[5 * v58];
    v59[2] = v55;
    v33 = v99;
    v59[3]._countAndFlagsBits = v100;
    v59[3]._object = v41;
    LOBYTE(v59[4]._countAndFlagsBits) = 0;
    v30 = v51;
    v16 = v50;
    v19 = (char *)v43;
    LOBYTE(v43) = v112;
  }
  v60 = v103;
  sub_100033A34((uint64_t)v16, v103, &qword_100BFE5C0);
  v61 = type metadata accessor for MoonRiseSetEvent(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61) == 1)
  {
    sub_100021A14(v60, &qword_100BFE5C0);
  }
  else
  {
    sub_1008C0664();
    v100 = v62;
    v64 = v63;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
    if (v64)
    {
      if ((_BYTE)v43 == 0xFF)
      {
        swift_bridgeObjectRelease(v64);
      }
      else
      {
        sub_100121DEC(v33, v116, v43);
        if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
        {
          sub_10011EF00(0, v49[2] + 1, 1, (uint64_t)v49);
          v49 = v97;
        }
        v43 = v49[2];
        v65 = v49[3];
        if (v43 >= v65 >> 1)
        {
          sub_10011EF00(v65 > 1, v43 + 1, 1, (uint64_t)v49);
          v49 = v98;
        }
        v49[2] = v43 + 1;
        v66 = &v49[5 * v43];
        v66[4] = v100;
        v66[5] = v64;
        v67 = v116;
        v66[6] = v33;
        v66[7] = v67;
        LOBYTE(v43) = v112;
        *((_BYTE *)v66 + 64) = v112;
      }
    }
  }
  if ((_BYTE)v111 != 0xFF)
  {
    v68 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v118._countAndFlagsBits = 0xD000000000000036;
    v118._object = (void *)0x8000000100A10CE0;
    v69._countAndFlagsBits = 0x6C7546207478654ELL;
    v69._object = (void *)0xEE006E6F6F4D206CLL;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v118);

    if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
    {
      sub_10011EF00(0, v49[2] + 1, 1, (uint64_t)v49);
      v49 = v94;
    }
    v43 = v49[2];
    v72 = v49[3];
    if (v43 >= v72 >> 1)
    {
      sub_10011EF00(v72 > 1, v43 + 1, 1, (uint64_t)v49);
      v49 = v95;
    }
    v49[2] = v43 + 1;
    v73 = (Swift::String *)&v49[5 * v43];
    v73[2] = v71;
    v74 = v101;
    v73[3]._countAndFlagsBits = v102;
    v73[3]._object = v74;
    LOBYTE(v43) = v112;
    LOBYTE(v73[4]._countAndFlagsBits) = v111;
  }
  if (v26)
  {
    v75 = swift_retain();
    v76 = CelestialEphemeris.librationPositionAngle.getter(v75);
    v77 = CelestialEphemeris.topocentricParallacticAngle.getter();
    swift_release(v26);
    v78 = v77 - v76 + 360.0;
  }
  else
  {
    if (qword_100BC2400 != -1)
      swift_once(&qword_100BC2400, sub_1001597C4);
    v79 = type metadata accessor for Logger(0);
    v80 = sub_1000AECD4(v79, (uint64_t)qword_100CAEFF8);
    v81 = Logger.logObject.getter(v80);
    v83 = static os_log_type_t.error.getter(v81, v82);
    if (os_log_type_enabled(v81, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v83, "Failed to calcuate rotationAngle due to missing ephemeris", v84, 2u);
      swift_slowDealloc(v84, -1, -1);
    }

    v78 = 0.0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v30, v115);
  v85 = v110;
  sub_100033A34(v109, v110, &qword_100BCBD10);
  v86 = type metadata accessor for DayMoonData(0);
  v87 = _s7Weather24LocationCompositionStateOwet_0(v85, 1, v86);
  if ((_DWORD)v87 == 1)
  {
    swift_release(v26);
    sub_100021A14((uint64_t)v16, &qword_100BFE5C0);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v19, v108);
    sub_100021A14(v85, &qword_100BCBD10);
    v88 = 8;
  }
  else
  {
    v88 = DayMoonData.phase.getter(v87);
    swift_release(v26);
    sub_100021A14((uint64_t)v16, &qword_100BFE5C0);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v19, v108);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v85, v86);
  }
  v89 = v107;
  v90 = v104;
  *v107 = v105;
  v89[1] = v90;
  v91 = v116;
  v89[2] = v33;
  v89[3] = v91;
  *((_BYTE *)v89 + 32) = v43;
  v89[5] = (uint64_t)v49;
  v92 = (int *)type metadata accessor for MoonComponentViewModel(0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v114 + 32))((char *)v89 + v92[7], v113, v115);
  *((_BYTE *)v89 + v92[8]) = v88;
  *(double *)((char *)v89 + v92[9]) = v78;
  return result;
}

uint64_t sub_100040C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  size_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 10 + a1) & ~v11;
  v13 = (v11 + 10 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release(v18);
  v19 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  LOBYTE(v15) = *(_BYTE *)(v20 + 16);
  sub_1000D55D4(*(_QWORD *)v20, v22, (char)v15);
  v23 = *(_QWORD *)v19;
  v24 = *(_QWORD *)(v19 + 8);
  v25 = *(_BYTE *)(v19 + 16);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = (_BYTE)v15;
  sub_1000D31B4(v23, v24, v25);
  v26 = *(_QWORD *)(v20 + 24);
  v27 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v19 + 24) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v30 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_retain();
  swift_release(v30);
  v31 = type metadata accessor for Date(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_DWORD *)(v32 + 80) & 0xF8;
  v34 = v33 + 23;
  v35 = v33 + 23 + v28;
  v36 = ~v33 & 0xFFFFFFFFFFFFFFF8;
  v37 = v35 & v36;
  v38 = (v34 + v29) & v36;
  LODWORD(v29) = _s7Weather24LocationCompositionStateOwet_0(v35 & v36, 1, v31);
  v39 = _s7Weather24LocationCompositionStateOwet_0(v38, 1, v31);
  if ((_DWORD)v29)
  {
    if (!v39)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v37, v38, v31);
      _s7Weather24LocationCompositionStateOwst_0(v37, 0, 1, v31);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 24))(v37, v38, v31);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v37, v31);
  }
  if (*(_DWORD *)(v32 + 84))
    v40 = *(_QWORD *)(v32 + 64);
  else
    v40 = *(_QWORD *)(v32 + 64) + 1;
  memcpy((void *)v37, (const void *)v38, v40);
LABEL_10:
  if (*(_DWORD *)(v32 + 84))
    v41 = *(_QWORD *)(v32 + 64);
  else
    v41 = *(_QWORD *)(v32 + 64) + 1;
  v42 = (uint64_t *)(((v37 | 7) + v41) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  *v42 = *(_QWORD *)(((v38 | 7) + v41) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release(v43);
  return a1;
}

void sub_100040E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD v34[3];
  ValueMetadata *v35;
  _UNKNOWN **v36;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = &type metadata for FoundationContentStatusBannerLastUpdatedFormatter;
  v36 = &off_100B6CF08;
  v34[0] = a2;
  v12 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v13 = *(int *)(type metadata accessor for ContentStatusBanner(0) + 24);
  v32 = a1;
  sub_10007C714(a1 + v13, (uint64_t)v6);
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  v33 = v11;
  if (v14 == 1)
  {
    sub_10013BB0C(v12, v11);
    sub_1001C8EF4((uint64_t)v6);
    v15 = v32;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v16 = (void *)*sub_1000DB418(v34, (uint64_t)v35);
    v31 = v12;
    sub_10013BB0C(v12, v11);
    v17 = sub_10002F2FC((uint64_t)v10, v16);
    v18 = v11;
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if (v18)
    {
      v22 = 0xD000000000000010;
      v23 = 0xD000000000000170;
      v30 = 0x8000000100A19B70;
      v24 = 0x8000000100A19B50;
    }
    else
    {
      v23 = 0xD00000000000016DLL;
      v30 = 0x8000000100A19CF0;
      v22 = 0x6C6E6F207473614CLL;
      v24 = 0xEF4025203A656E69;
    }
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, (Swift::String_optional)0, (NSBundle)v21, v25, *(Swift::String *)&v23);
    v15 = v32;

    v27 = sub_1000BA294(&qword_100BC3C38);
    v28 = swift_allocObject(v27, 72, 7);
    *(_OWORD *)(v28 + 16) = xmmword_10097CA50;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    *(_QWORD *)(v28 + 64) = sub_1000B2E24();
    *(_QWORD *)(v28 + 32) = v17;
    *(_QWORD *)(v28 + 40) = v20;
    static String.localizedStringWithFormat(_:_:)(v26._countAndFlagsBits, v26._object, v28);
    swift_bridgeObjectRelease(v26._object);
    v29 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v29);
  }
  __asm { BR              X10 }
}

uint64_t sub_100041160@<X0>(uint64_t a1@<X8>)
{
  Swift::String *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t result;
  void *v14;
  Swift::String v15;

  v9 = objc_msgSend((id)objc_opt_self(*(_QWORD *)(a1 + 1616)), *(SEL *)(v3 + 1936));
  v15._countAndFlagsBits = v6 + 56;
  v15._object = (void *)0x8000000100A19B00;
  v10._object = (void *)0x8000000100A0F770;
  v10._countAndFlagsBits = 0xD000000000000013;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v15);

  sub_10013B990(v2);
  result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v8 - 120));
  *v1 = v12;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  v1[2]._countAndFlagsBits = v4;
  v1[2]._object = v5;
  v14 = *(void **)(v8 - 128);
  v1[3]._countAndFlagsBits = v7;
  v1[3]._object = v14;
  return result;
}

uint64_t sub_1000413BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  void *v34;

  v29 = a1;
  v30 = sub_1000BA294(&qword_100C0D3F8);
  __chkstk_darwin(v30);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100C0D400);
  __chkstk_darwin(v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100C0D408);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v28 - v15;
  if (a2)
  {
    v17 = sub_1000BA294(&qword_100C0D410);
    v28[1] = a3;
    v18 = v17;
    v19 = sub_1001547FC();
    v20 = View.accessibilityHidden(_:)(1, v18, v19);
    __chkstk_darwin(v20);
    v28[-2] = v29;
    v28[-1] = a2;
    v21 = sub_100157908();
    View.accessibilityRepresentation<A>(representation:)(sub_100123EA4, &v28[-4], v7, &type metadata for Text, v21, &protocol witness table for Text);
    sub_1001578C8((uint64_t)v9);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v16, v10);
    swift_storeEnumTagMultiPayload(v6, v30, 0);
    v31 = v7;
    v32 = &type metadata for Text;
    v33 = v21;
    v34 = &protocol witness table for Text;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v31, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
    _ConditionalContent<>.init(storage:)(v6, v10, v7, OpaqueTypeConformance2, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    v24 = sub_1000BA294(&qword_100C0D410);
    v25 = sub_1001547FC();
    View.accessibilityHidden(_:)(1, v24, v25);
    sub_100847880((uint64_t)v9, (uint64_t)v6);
    swift_storeEnumTagMultiPayload(v6, v30, 1);
    v26 = sub_100157908();
    v31 = v7;
    v32 = &type metadata for Text;
    v33 = v26;
    v34 = &protocol witness table for Text;
    v27 = swift_getOpaqueTypeConformance2(&v31, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
    _ConditionalContent<>.init(storage:)(v6, v10, v7, v27, v26);
    return sub_1001578C8((uint64_t)v9);
  }
}

__n128 initializeWithTake for WeatherDataState(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000416B0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_1000BA294(&qword_100C09EB0);
  if (swift_getEnumCaseMultiPayload(v4, v5) != 1)
    return swift_release(*v4);
  v6 = type metadata accessor for ScenePhase(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t *sub_100041724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = *(uint64_t *)((char *)a1 + v8);
  *(uint64_t *)((char *)a1 + v8) = *v10;
  swift_retain();
  swift_release(v11);
  v12 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v9 + 8) = v10[1];
  swift_retain();
  swift_release(v12);
  v13 = *(int *)(sub_1000BA294(&qword_100BECFA0) + 32);
  v14 = v9 + v13;
  v15 = (char *)v10 + v13;
  v16 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t sub_1000417E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(a1 + 24));
  sub_1000B15F8(*(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = (char *)v4 + *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v4);
  }
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 36) + 8));
}

void sub_100041898(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void ***v37;
  uint64_t v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void ***v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t (*v68)(char *, uint64_t);
  uint64_t v69;
  int v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  __n128 v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  void **aBlock;
  uint64_t v140;
  uint64_t (*v141)(uint64_t);
  void *v142;
  uint64_t (*v143)();
  uint64_t v144;
  uint64_t v145;

  v137 = a1;
  v138 = a2;
  v4 = sub_1000BA294(&qword_100C0A0A0);
  __chkstk_darwin(v4);
  v134 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000BA294(&qword_100C12840);
  __chkstk_darwin(v6);
  v135 = (uint64_t)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for DispatchWorkItemFlags(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for DispatchQoS(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  v111 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v112 = v11;
  v113 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for DispatchTime(0);
  v110 = *(_QWORD *)(v121 - 8);
  v12 = __chkstk_darwin(v121);
  v109 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v114 = (char *)&v109 - v14;
  v132 = type metadata accessor for VFXEffectViewID(0);
  v130 = *(_QWORD *)(v132 - 8);
  v15 = __chkstk_darwin(v132);
  v129 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v128 = (char *)&v109 - v17;
  v133 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  v127 = *(_QWORD *)(v133 - 8);
  v18 = __chkstk_darwin(v133);
  v125 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v124 = (char *)&v109 - v21;
  __chkstk_darwin(v20);
  v23 = (char *)&v109 - v22;
  v131 = type metadata accessor for BackgroundAnimationData(0);
  v126 = *(_QWORD *)(v131 - 8);
  v24 = __chkstk_darwin(v131);
  v123 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v122 = (char *)&v109 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v109 - v28;
  v30 = type metadata accessor for BackgroundAnimationKind(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100BC4678);
  __chkstk_darwin(v34);
  v36 = (char **)((char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = (void ***)(a3 + *(int *)(v10 + 112));
  v39 = *v37;
  v38 = (uint64_t)v37[1];
  aBlock = v39;
  v140 = v38;
  v40 = sub_1000BA294(&qword_100C13F60);
  State.wrappedValue.getter(&v145, v40);
  v41 = v145;
  v42 = type metadata accessor for WeatherConditionBackgroundModel(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v36, v138, v42);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v42);
  sub_10014E3A8((uint64_t)v36);
  swift_release(v41);
  v136 = v10;
  v43 = a3;
  v44 = (void ***)(a3 + *(int *)(v10 + 84));
  v46 = *v44;
  v45 = (uint64_t)v44[1];
  aBlock = v46;
  v140 = v45;
  v47 = sub_1000BA294(&qword_100C13F50);
  State.wrappedValue.getter(&v145, v47);
  LODWORD(v41) = *(unsigned __int8 *)(v145 + 16);
  swift_release(v145);
  if ((_DWORD)v41 == 1)
  {
    WeatherConditionBackgroundModel.animationKind.getter(v48);
    v49 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v33, v30);
    if ((_DWORD)v49 == enum case for BackgroundAnimationKind.vfx(_:))
    {
      v50 = v138;
      v51 = WeatherConditionBackgroundModel.animationData.getter(v49);
      BackgroundAnimationData.options.getter(v51);
      v52 = v131;
      v126 = *(_QWORD *)(v126 + 8);
      v53 = ((uint64_t (*)(char *, uint64_t))v126)(v29, v131);
      v54 = v128;
      WeatherConditionBackgroundOptions.effectViewID.getter(v53);
      v55 = v23;
      v56 = v133;
      v127 = *(_QWORD *)(v127 + 8);
      ((void (*)(char *, uint64_t))v127)(v55, v133);
      v58 = v129;
      v57 = v130;
      v59 = v132;
      (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v129, enum case for VFXEffectViewID.locationViewer(_:), v132);
      v60 = static VFXEffectViewID.== infix(_:_:)(v54, v58);
      v61 = *(void (**)(char *, uint64_t))(v57 + 8);
      v61(v58, v59);
      v62 = ((uint64_t (*)(char *, uint64_t))v61)(v54, v59);
      v63 = v43;
      v64 = (uint64_t)v134;
      if ((v60 & 1) != 0)
      {
        v65 = v122;
        v66 = WeatherConditionBackgroundModel.animationData.getter(v62);
        v67 = v124;
        BackgroundAnimationData.options.getter(v66);
        v68 = (uint64_t (*)(char *, uint64_t))v126;
        v69 = ((uint64_t (*)(char *, uint64_t))v126)(v65, v52);
        v130 = WeatherConditionBackgroundOptions.locationViewerOrientation.getter(v69);
        LODWORD(v132) = v70;
        v71 = (void (*)(char *, uint64_t))v127;
        v72 = ((uint64_t (*)(char *, uint64_t))v127)(v67, v56);
        v73 = v123;
        v74 = WeatherConditionBackgroundModel.animationData.getter(v72);
        v75 = v125;
        BackgroundAnimationData.options.getter(v74);
        v76 = v68(v73, v52);
        v77 = WeatherConditionBackgroundOptions.locationViewerOrientation.getter(v76);
        v79 = v78;
        v71(v75, v56);
        if ((v132 & 1) == 0)
        {
          v50 = v138;
          if ((v79 & 1) == 0 && v130 == v77)
            goto LABEL_9;
          goto LABEL_12;
        }
        v50 = v138;
        if ((v79 & 1) == 0)
        {
LABEL_12:
          swift_getObjectType(*(_QWORD *)(v63 + *(int *)(v136 + 44)));
          WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
          v90 = sub_10009FFE0();
          v133 = static OS_dispatch_queue.main.getter(v90);
          v91 = v109;
          static DispatchTime.now()();
          v92 = v114;
          + infix(_:_:)(v91);
          v137 = *(void (**)(char *, uint64_t))(v110 + 8);
          v137(v91, v121);
          v93 = v113;
          sub_10000AB54(v63, v113, type metadata accessor for WeatherConditionBackgroundModifier);
          v94 = *(unsigned __int8 *)(v111 + 80);
          v95 = (v94 + 16) & ~v94;
          v96 = swift_allocObject(&unk_100B9AFF0, v95 + v112, v94 | 7);
          sub_10010E534(v93, v96 + v95);
          v143 = sub_100900A88;
          v144 = v96;
          aBlock = _NSConcreteStackBlock;
          v140 = 1107296256;
          v141 = sub_100121D84;
          v142 = &unk_100B9B008;
          v97 = _Block_copy(&aBlock);
          v98 = swift_release(v144);
          v99 = v115;
          static DispatchQoS.unspecified.getter(v98);
          aBlock = (void **)_swiftEmptyArrayStorage;
          sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          v101 = v100;
          v102 = sub_1000BA294(&qword_100BD4F10);
          sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
          v103 = v118;
          v104 = v102;
          v105 = v120;
          v106 = v101;
          v50 = v138;
          dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v104, v107, v120, v106);
          v108 = (void *)v133;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v92, v99, v103, v97);
          _Block_release(v97);

          (*(void (**)(char *, uint64_t))(v119 + 8))(v103, v105);
          (*(void (**)(char *, uint64_t))(v116 + 8))(v99, v117);
          v137(v92, v121);
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      v63 = a3;
      v50 = v138;
      v64 = (uint64_t)v134;
    }
LABEL_9:
    sub_100036428(v50);
    v80 = v136;
    v81 = sub_1000BA294(&qword_100C13D38);
    State.wrappedValue.getter(v36, v81);
    v82 = type metadata accessor for DynamicTypeSize(0);
    v83 = v135;
    _s7Weather24LocationCompositionStateOwst_0(v135, 1, 1, v82);
    v84 = type metadata accessor for TargetWindowSizeClass(0);
    _s7Weather24LocationCompositionStateOwst_0(v64, 1, 1, v84);
    sub_10005F264((uint64_t)v36, v50, v83, v64, 0, 0);
    sub_100021A14(v64, &qword_100C0A0A0);
    sub_100021A14(v83, &qword_100C12840);
    sub_100021A14((uint64_t)v36, &qword_100BC4678);
    v85 = v63 + *(int *)(v80 + 100);
    v86 = *(_QWORD *)v85;
    v87 = *(_BYTE *)(v85 + 8);
    sub_10008D47C(*(_QWORD *)v85, v87);
    sub_100109B54();
    v89 = v88;
    sub_1000B15F8(v86, v87);
    sub_10003C1BC(v50, v89 & 1, *(unsigned __int8 *)(v63 + *(int *)(v80 + 64)));
  }
}

uint64_t sub_100042258(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v173;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_1000B15F8(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_100021A14(a1 + v14, &qword_100BC2908);
    v17 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      *v15 = *v16;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
    v20 = a3[7];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    sub_100021A14(a1 + v20, &qword_100BC37D8);
    v23 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = 1;
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v25);
  }
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)v28;
  v30 = *(_BYTE *)(v28 + 8);
  sub_10008D47C(*(_QWORD *)v28, v30);
  v31 = *(_QWORD *)v27;
  v32 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v30;
  sub_1000B15F8(v31, v32);
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  sub_10008D47C(*(_QWORD *)v35, v37);
  v38 = *(_QWORD *)v34;
  v39 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v37;
  sub_1000B15F8(v38, v39);
  if (a1 != a2)
  {
    v40 = a3[10];
    v41 = a1 + v40;
    v42 = a2 + v40;
    sub_100021A14(a1 + v40, &qword_100BC37E0);
    v43 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
      *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
      *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
      *(_BYTE *)(v41 + 18) = *(_BYTE *)(v42 + 18);
      v44 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v45 = v41 + v44;
      v46 = v42 + v44;
      v47 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      v48 = 1;
    }
    else
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      swift_retain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v48);
  }
  v49 = a3[11];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = *(_QWORD *)v51;
  v53 = *(_BYTE *)(v51 + 8);
  sub_10008D47C(*(_QWORD *)v51, v53);
  v54 = *(_QWORD *)v50;
  v55 = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v50 = v52;
  *(_BYTE *)(v50 + 8) = v53;
  sub_1000B15F8(v54, v55);
  if (a1 != a2)
  {
    v56 = a3[12];
    v57 = (_QWORD *)(a1 + v56);
    v58 = (_QWORD *)(a2 + v56);
    sub_100021A14(a1 + v56, &qword_100BC37E8);
    v59 = sub_1000BA294(&qword_100BC37E8);
    if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
    {
      v60 = type metadata accessor for Font.Context(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v57, v58, v60);
      v61 = 1;
    }
    else
    {
      *v57 = *v58;
      swift_retain();
      v61 = 0;
    }
    swift_storeEnumTagMultiPayload(v57, v59, v61);
  }
  v62 = a3[13];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = *(_QWORD *)v64;
  v66 = *(_BYTE *)(v64 + 8);
  sub_10008D47C(*(_QWORD *)v64, v66);
  v67 = *(_QWORD *)v63;
  v68 = *(_BYTE *)(v63 + 8);
  *(_QWORD *)v63 = v65;
  *(_BYTE *)(v63 + 8) = v66;
  sub_1000B15F8(v67, v68);
  v69 = a3[14];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v72 = *(_QWORD *)v71;
  v73 = *(_QWORD *)(v71 + 8);
  v74 = *(_QWORD *)(v71 + 16);
  v75 = *(_QWORD *)(v71 + 24);
  v76 = *(_BYTE *)(v71 + 32);
  sub_1000D55E4(*(_QWORD *)v71, v73, v74, v75, v76);
  v77 = *(_QWORD *)v70;
  v78 = *(_QWORD *)(v70 + 8);
  v79 = *(_QWORD *)(v70 + 16);
  v80 = *(_QWORD *)(v70 + 24);
  v81 = *(_BYTE *)(v70 + 32);
  *(_QWORD *)v70 = v72;
  *(_QWORD *)(v70 + 8) = v73;
  *(_QWORD *)(v70 + 16) = v74;
  *(_QWORD *)(v70 + 24) = v75;
  *(_BYTE *)(v70 + 32) = v76;
  sub_1000D31C4(v77, v78, v79, v80, v81);
  v82 = a3[15];
  v173 = a3;
  v83 = a1 + v82;
  v84 = a2 + v82;
  v85 = *(_QWORD *)v84;
  v86 = *(_QWORD *)(v84 + 8);
  v87 = *(_QWORD *)(v84 + 16);
  v88 = *(_QWORD *)(v84 + 24);
  v89 = *(_QWORD *)(v84 + 32);
  v90 = *(_QWORD *)(v84 + 40);
  v91 = *(_BYTE *)(v84 + 48);
  sub_1000D55F0(*(_QWORD *)v84, v86, v87, v88, v89, v90, v91);
  v92 = *(_QWORD *)v83;
  v93 = *(_QWORD *)(v83 + 8);
  v94 = *(_QWORD *)(v83 + 16);
  v95 = *(_QWORD *)(v83 + 24);
  v96 = *(_QWORD *)(v83 + 32);
  v97 = *(_QWORD *)(v83 + 40);
  v98 = *(_BYTE *)(v83 + 48);
  *(_QWORD *)v83 = v85;
  *(_QWORD *)(v83 + 8) = v86;
  *(_QWORD *)(v83 + 16) = v87;
  *(_QWORD *)(v83 + 24) = v88;
  *(_QWORD *)(v83 + 32) = v89;
  *(_QWORD *)(v83 + 40) = v90;
  *(_BYTE *)(v83 + 48) = v91;
  sub_1000D31D0(v92, v93, v94, v95, v96, v97, v98);
  v99 = v173[16];
  v100 = a1 + v99;
  v101 = a2 + v99;
  *(_QWORD *)v100 = *(_QWORD *)(a2 + v99);
  v102 = *(_QWORD *)(a2 + v99 + 8);
  v103 = *(_QWORD *)(a1 + v99 + 8);
  *(_QWORD *)(v100 + 8) = v102;
  swift_bridgeObjectRetain(v102);
  swift_bridgeObjectRelease(v103);
  v104 = *(_QWORD *)(v101 + 16);
  v105 = *(_QWORD *)(v101 + 24);
  v106 = *(_QWORD *)(v101 + 32);
  v107 = *(_QWORD *)(v101 + 40);
  LOBYTE(v89) = *(_BYTE *)(v101 + 48);
  sub_100176D88(v104, v105, v106, v107, v89);
  v108 = *(_QWORD *)(v100 + 16);
  v109 = *(_QWORD *)(v100 + 24);
  v110 = *(_QWORD *)(v100 + 32);
  v111 = *(_QWORD *)(v100 + 40);
  *(_QWORD *)(v100 + 16) = v104;
  *(_QWORD *)(v100 + 24) = v105;
  *(_QWORD *)(v100 + 32) = v106;
  *(_QWORD *)(v100 + 40) = v107;
  v112 = *(_BYTE *)(v100 + 48);
  *(_BYTE *)(v100 + 48) = v89;
  sub_100176DD4(v108, v109, v110, v111, v112);
  *(_QWORD *)(v100 + 56) = *(_QWORD *)(v101 + 56);
  v113 = *(_QWORD *)(v101 + 64);
  v114 = *(_QWORD *)(v100 + 64);
  *(_QWORD *)(v100 + 64) = v113;
  swift_bridgeObjectRetain(v113);
  swift_bridgeObjectRelease(v114);
  *(_QWORD *)(v100 + 72) = *(_QWORD *)(v101 + 72);
  v115 = *(_QWORD *)(v101 + 80);
  v116 = *(_QWORD *)(v100 + 80);
  *(_QWORD *)(v100 + 80) = v115;
  swift_bridgeObjectRetain(v115);
  swift_bridgeObjectRelease(v116);
  *(_QWORD *)(v100 + 88) = *(_QWORD *)(v101 + 88);
  v117 = *(_QWORD *)(v101 + 96);
  v118 = *(_QWORD *)(v100 + 96);
  *(_QWORD *)(v100 + 96) = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease(v118);
  *(_QWORD *)(v100 + 104) = *(_QWORD *)(v101 + 104);
  v119 = *(_QWORD *)(v101 + 112);
  v120 = *(_QWORD *)(v100 + 112);
  *(_QWORD *)(v100 + 112) = v119;
  swift_bridgeObjectRetain(v119);
  swift_bridgeObjectRelease(v120);
  *(_QWORD *)(v100 + 120) = *(_QWORD *)(v101 + 120);
  v121 = *(_QWORD *)(v101 + 128);
  v122 = *(_QWORD *)(v100 + 128);
  *(_QWORD *)(v100 + 128) = v121;
  swift_bridgeObjectRetain(v121);
  swift_bridgeObjectRelease(v122);
  *(_BYTE *)(v100 + 136) = *(_BYTE *)(v101 + 136);
  *(_BYTE *)(v100 + 137) = *(_BYTE *)(v101 + 137);
  *(_BYTE *)(v100 + 138) = *(_BYTE *)(v101 + 138);
  *(_QWORD *)(v100 + 144) = *(_QWORD *)(v101 + 144);
  v123 = *(_QWORD *)(v101 + 152);
  v124 = *(_QWORD *)(v100 + 152);
  *(_QWORD *)(v100 + 152) = v123;
  swift_bridgeObjectRetain(v123);
  swift_bridgeObjectRelease(v124);
  *(_BYTE *)(v100 + 160) = *(_BYTE *)(v101 + 160);
  *(_BYTE *)(v100 + 161) = *(_BYTE *)(v101 + 161);
  v125 = v173[17];
  v126 = a1 + v125;
  v127 = a2 + v125;
  v128 = *(_QWORD *)(a2 + v125);
  v129 = *(_QWORD *)(a2 + v125 + 8);
  LOBYTE(v106) = *(_BYTE *)(a2 + v125 + 16);
  sub_1000D55D4(v128, v129, v106);
  v130 = *(_QWORD *)v126;
  v131 = *(_QWORD *)(v126 + 8);
  v132 = *(_BYTE *)(v126 + 16);
  *(_QWORD *)v126 = v128;
  *(_QWORD *)(v126 + 8) = v129;
  *(_BYTE *)(v126 + 16) = v106;
  sub_1000D31B4(v130, v131, v132);
  v133 = *(_QWORD *)(v127 + 24);
  v134 = *(_QWORD *)(v126 + 24);
  *(_QWORD *)(v126 + 24) = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v134);
  v135 = v173[18];
  v136 = a1 + v135;
  v137 = a2 + v135;
  v138 = *(_QWORD *)(a2 + v135);
  v139 = *(_QWORD *)(a2 + v135 + 8);
  LOBYTE(v106) = *(_BYTE *)(a2 + v135 + 16);
  sub_1000D55D4(v138, v139, v106);
  v140 = *(_QWORD *)v136;
  v141 = *(_QWORD *)(v136 + 8);
  v142 = *(_BYTE *)(v136 + 16);
  *(_QWORD *)v136 = v138;
  *(_QWORD *)(v136 + 8) = v139;
  *(_BYTE *)(v136 + 16) = v106;
  sub_1000D31B4(v140, v141, v142);
  v143 = *(_QWORD *)(v137 + 24);
  v144 = *(_QWORD *)(v136 + 24);
  *(_QWORD *)(v136 + 24) = v143;
  swift_bridgeObjectRetain(v143);
  swift_bridgeObjectRelease(v144);
  v145 = v173[19];
  v146 = a1 + v145;
  v147 = a2 + v145;
  v148 = *(_QWORD *)(a1 + v145 + 24);
  v149 = *(_QWORD *)(a2 + v145 + 24);
  if (v148)
  {
    if (v149)
    {
      v150 = *(_QWORD *)v147;
      v151 = *(_QWORD *)(v147 + 8);
      v152 = *(_BYTE *)(v147 + 16);
      sub_1000D55D4(*(_QWORD *)v147, v151, v152);
      v153 = *(_QWORD *)v146;
      v154 = *(_QWORD *)(v146 + 8);
      v155 = *(_BYTE *)(v146 + 16);
      *(_QWORD *)v146 = v150;
      *(_QWORD *)(v146 + 8) = v151;
      *(_BYTE *)(v146 + 16) = v152;
      sub_1000D31B4(v153, v154, v155);
      v156 = *(_QWORD *)(v147 + 24);
      v157 = *(_QWORD *)(v146 + 24);
      *(_QWORD *)(v146 + 24) = v156;
      swift_bridgeObjectRetain(v156);
      swift_bridgeObjectRelease(v157);
    }
    else
    {
      sub_100176E20(v146);
      v162 = *(_OWORD *)(v147 + 16);
      *(_OWORD *)v146 = *(_OWORD *)v147;
      *(_OWORD *)(v146 + 16) = v162;
    }
  }
  else if (v149)
  {
    v158 = *(_QWORD *)v147;
    v159 = *(_QWORD *)(v147 + 8);
    v160 = *(_BYTE *)(v147 + 16);
    sub_1000D55D4(*(_QWORD *)v147, v159, v160);
    *(_QWORD *)v146 = v158;
    *(_QWORD *)(v146 + 8) = v159;
    *(_BYTE *)(v146 + 16) = v160;
    v161 = *(_QWORD *)(v147 + 24);
    *(_QWORD *)(v146 + 24) = v161;
    swift_bridgeObjectRetain(v161);
  }
  else
  {
    v163 = *(_OWORD *)(v147 + 16);
    *(_OWORD *)v146 = *(_OWORD *)v147;
    *(_OWORD *)(v146 + 16) = v163;
  }
  *(_QWORD *)(a1 + v173[20]) = *(_QWORD *)(a2 + v173[20]);
  v164 = v173[21];
  v165 = a1 + v164;
  v166 = a2 + v164;
  v167 = type metadata accessor for Text.Measurements(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 24))(v165, v166, v167);
  *(_QWORD *)(a1 + v173[22]) = *(_QWORD *)(a2 + v173[22]);
  v168 = v173[23];
  v169 = a1 + v168;
  v170 = a2 + v168;
  v171 = sub_1000BA294(&qword_100BC37F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 24))(v169, v170, v171);
  return a1;
}

void sub_100042A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(void);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  void (*v17)(void);
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1000986AC();
  v3 = v2;
  v4 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_10009E540();
  v6 = sub_1000BA294(&qword_100BC4670);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_10009883C();
  v10 = v8 - v9;
  __chkstk_darwin(v11);
  v13 = (void (**)(void))((char *)&v22 - v12);
  v14 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  sub_10009922C(v14, (uint64_t)&v25, 0);
  sub_100037768(v14, (uint64_t)v13, &qword_100BC4670);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000BA294(&qword_100BC4690);
      v16 = sub_1000BE880();
      sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32));
      (*(void (**)(void (**)(void), uint64_t))(v5 + 8))(v13, v4);
    }
    else
    {
      v21 = sub_1000BE880();
      (*(void (**)(uint64_t, void (**)(void), uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v3, v13, v21);
    }
  }
  else
  {
    v17 = *v13;
    v23 = v4;
    v18 = v13[2];
    v17();
    ((void (*)(uint64_t))v18)(v1);
    sub_10009D338();
    sub_10009D330();
    v19 = v10 + *(int *)(sub_1000BA294(&qword_100BC4690) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10, v1, v23);
    v20 = sub_1000BE880();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v3, v20);
    sub_10009525C(v10, v6);
    sub_10009922C(v14, (uint64_t)&v24, 33);
    sub_1000A3908(v10, v14, &qword_100BC4670);
    sub_1000B30A0();
  }
  sub_100098640();
}

uint64_t sub_100042BEC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_release(*a1);
  swift_release(a1[1]);
  v4 = (uint64_t)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for URL(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

void sub_100042C60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[10];
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_1000BA294(&qword_100BC30C8);
  __chkstk_darwin(v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Location(0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  v6 = *(_QWORD *)(v25 + 64);
  v7 = __chkstk_darwin(v5);
  v24[4] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v24[9] = (char *)v24 - v8;
  v9 = type metadata accessor for LocationsAction(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v24 - v13;
  v31 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v31);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  v18 = a1[5];
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v24[8] = v4;
    v28 = v32 + 72;
    v20 = v18 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v21 = *(_QWORD *)(v15 + 72);
    v24[3] = v6 + 7;
    v24[0] = v18;
    swift_bridgeObjectRetain(v18);
    v24[2] = &type metadata for () + 1;
    v29 = v21;
    v30 = v14;
    v22 = v31;
    v24[1] = v9;
    do
    {
      sub_100095B78(v20, (uint64_t)v17, type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload(v17, v22) == 3)
      {
        sub_10007C77C((uint64_t)v17, (uint64_t)v14, type metadata accessor for LocationsAction);
        sub_100095B78((uint64_t)v14, (uint64_t)v12, type metadata accessor for LocationsAction);
        v23 = (char *)&loc_100042EA0 + 4 * byte_1009C6C70[swift_getEnumCaseMultiPayload(v12, v9)];
        __asm { BR              X9 }
      }
      sub_1000215BC((uint64_t)v17, type metadata accessor for MainAction);
      v20 += v21;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease(v24[0]);
  }
  sub_1000301C0(v27);
}

uint64_t sub_1000432C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v20 = type metadata accessor for EnvironmentAction(0);
  v2 = __chkstk_darwin(v20);
  v21 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)v18 - v4;
  v19 = type metadata accessor for LocationsAction(0);
  v6 = __chkstk_darwin(v19);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v22 = (char *)v18 - v9;
  v10 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(result + 16))
  {
    v18[1] = a1;
    v18[2] = result;
    v15 = result + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v16 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain(result);
    v18[4] = v8;
    v18[5] = v5;
    v18[3] = v16;
    sub_100080C0C(v15, (uint64_t)v13, type metadata accessor for MainAction);
    v17 = (char *)&loc_100043440 + 4 * byte_1009D9F00[swift_getEnumCaseMultiPayload(v13, v10)];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_100043754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  _QWORD v17[10];

  v17[6] = type metadata accessor for WeatherDataAction(0);
  sub_1000B42B0();
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v17[9] = (char *)v17 - v5;
  v17[5] = type metadata accessor for EnvironmentAction(0);
  sub_1000B42B0();
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v17 - v10;
  v12 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v12);
  sub_100099234();
  result = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(result + 16))
  {
    v17[3] = *(_QWORD *)(a1 + 40);
    v17[4] = v11;
    v15 = result + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    swift_bridgeObjectRetain(result);
    v17[8] = v9;
    sub_100080C0C(v15, v1, type metadata accessor for MainAction);
    v16 = (char *)&loc_1000438B4 + 4 * byte_10099C870[swift_getEnumCaseMultiPayload(v1, v12)];
    __asm { BR              X9 }
  }
  return result;
}

void sub_100043B08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = sub_1000BA294(&qword_100BEE288);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[9];
  if (v9)
  {
    v10 = v2[8];
    v11 = *v2;
    v12 = &v8[*(int *)(v6 + 36)];
    v20 = *(_OWORD *)(v2 + 1);
    sub_10003B59C((uint64_t)(v2 + 3), (uint64_t)(v12 + 32));
    swift_retain_n(v9, 2);
    swift_retain();
    swift_unknownObjectRetain(v20);
    v13 = sub_1000BA294(&qword_100BC46A0);
    sub_10007AB60((uint64_t)&unk_100BC46A8);
    *(_QWORD *)v12 = ObservedObject.init(wrappedValue:)(v11, v13, v14);
    *((_QWORD *)v12 + 1) = v15;
    *((_OWORD *)v12 + 1) = v20;
    *((_QWORD *)v12 + 9) = v10;
    *((_QWORD *)v12 + 10) = v9;
    v16 = sub_1000BA294(&qword_100BEE290);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, a1, v16);
    swift_release(v9);
    sub_1000787D4((uint64_t)v8, a2, &qword_100BEE288);
  }
  else
  {
    v17 = v2[10];
    v18 = type metadata accessor for WeatherVFXConditionBackground(0);
    sub_10007A100((uint64_t)&qword_100BD0870);
    EnvironmentObject.error()(0, v17, v18, v19);
    __break(1u);
  }
}

uint64_t sub_100043CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_100043CEC(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(unsigned __int8 *, unsigned __int8 *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  const char *v187;
  unsigned __int8 *v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  char v216;
  void (*v217)(uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  BOOL v233;
  uint64_t v234;
  uint64_t v235;
  unsigned __int8 *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  double v244;
  unsigned __int8 *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t (*v249)(_QWORD, uint64_t, uint64_t, unsigned __int8 *, _QWORD, _QWORD, uint64_t, uint64_t, double, uint64_t, uint64_t);
  uint64_t v250;
  int v251;
  id v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  int *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  BOOL v270;
  uint64_t v271;
  char v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unsigned __int8 *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t (*v293)(uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t *v316;
  uint64_t *v317;
  char v318;
  char v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void (*v342)(char *, uint64_t);
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  __n128 v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t (*v355)(uint64_t, uint64_t, uint64_t);
  int *v356;
  unsigned __int8 v357;
  uint64_t v358;
  uint64_t v359;
  int v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  void (*v364)(uint64_t, uint64_t);
  char v365;
  uint64_t v366;
  _QWORD *v367;
  uint64_t v368;
  uint64_t v369;
  char v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  BOOL v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t *v381;
  int *v382;
  unsigned __int8 *v383;
  char v384;
  uint64_t v385;
  char v386;
  _QWORD *v387;
  uint64_t v388;
  void (*v389)(_QWORD);
  char v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  int v394;
  uint64_t v395;
  uint64_t v396;
  BOOL v397;
  uint64_t v398;
  uint64_t v399;
  int v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  __n128 v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char v416;
  char v417;
  unsigned __int8 *v418;
  int v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  _QWORD *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unsigned __int8 v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  char v465;
  uint64_t v466;
  int *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  char v475;
  uint64_t *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char v482;
  void (*v483)(uint64_t, uint64_t);
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  char v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  char v493;
  void (*v494)(uint64_t, uint64_t);
  void (*v495)(uint64_t, uint64_t);
  char v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  __int128 v505;
  uint64_t v506;
  uint64_t v507;
  unint64_t v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t *v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  _QWORD *v557;
  uint64_t v558;
  void (*v559)(uint64_t, uint64_t, uint64_t);
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  int v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  unsigned __int8 *v583;
  uint64_t v584;
  int *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t *v591;
  uint64_t v592;
  uint64_t v593;
  void (*v594)(unsigned __int8 *, unsigned __int8 *, uint64_t);
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  int *v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  int *v607;
  uint64_t v608;
  void (*v609)(_QWORD);
  uint64_t v610;
  _QWORD *v611;
  unsigned __int8 *v612;
  uint64_t v613;
  uint64_t v614;
  _BYTE v615[24];
  uint64_t v616;
  uint64_t v617;
  _BYTE v618[168];
  uint64_t __dst[15];

  LODWORD(v606) = a3;
  v612 = a1;
  v608 = a4;
  v7 = type metadata accessor for LocationsConfiguration(0);
  v555 = *(_QWORD *)(v7 - 8);
  v556 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v554 = v9;
  v10 = sub_10009876C();
  v11 = type metadata accessor for AppConfiguration(v10);
  v552 = *(_QWORD *)(v11 - 8);
  v553 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v551 = v13;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v549 = v15;
  sub_1000BA294(&qword_100BCD690);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v575 = v17;
  v18 = sub_10009876C();
  type metadata accessor for LocationCompositionState(v18);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100088FDC();
  v546 = v20;
  sub_1000BA294(&qword_100BC3118);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000986FC();
  v533 = v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  sub_100079F7C();
  v545 = v24;
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v586 = v26;
  v27 = sub_10009876C();
  v543 = type metadata accessor for LocationContentState(v27);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_100088FDC();
  v589 = v29;
  v30 = sub_10009876C();
  type metadata accessor for LearnMoreAttributorViewModel(v30);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100088FDC();
  v588 = v32;
  v33 = sub_10009876C();
  v577 = type metadata accessor for LocationEntity(v33);
  v576 = *(_QWORD *)(v577 - 8);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_1000986FC();
  v550 = v35;
  sub_10009D2A4();
  __chkstk_darwin(v36);
  sub_100079F7C();
  v587 = v37;
  v38 = sub_10009876C();
  v39 = type metadata accessor for TimeZone(v38);
  v541 = *(_QWORD *)(v39 - 8);
  v542 = v39;
  sub_10009D98C();
  __chkstk_darwin(v40);
  sub_100088FDC();
  v540 = v41;
  v571 = sub_1000BA294(&qword_100BCB130);
  v539 = *(_QWORD *)(v571 - 8);
  sub_10009D98C();
  __chkstk_darwin(v42);
  sub_1000986FC();
  v544 = v43;
  sub_10009D2A4();
  __chkstk_darwin(v44);
  sub_100079F7C();
  v538 = v45;
  sub_1000BA294(&qword_100BCB138);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  sub_100088FDC();
  v574 = v47;
  v48 = sub_10009876C();
  v564 = type metadata accessor for UUID(v48);
  v563 = *(_QWORD *)(v564 - 8);
  sub_10009D98C();
  __chkstk_darwin(v49);
  sub_100088FDC();
  v511 = v50;
  v514 = sub_1000BA294(&qword_100C08D20);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_100088FDC();
  v517 = v52;
  sub_1000BA294(&qword_100BE4BF0);
  sub_1000B42B0();
  __chkstk_darwin(v53);
  sub_1000986FC();
  v537 = v54;
  sub_10009D2A4();
  __chkstk_darwin(v55);
  sub_1000860D0();
  v513 = v56;
  sub_10009D2A4();
  __chkstk_darwin(v57);
  sub_100079F7C();
  v516 = v58;
  v59 = sub_10009876C();
  v520 = type metadata accessor for ForegroundEffect(v59);
  v515 = *(_QWORD *)(v520 - 8);
  sub_10009D98C();
  __chkstk_darwin(v60);
  sub_100088FDC();
  v512 = v61;
  v519 = sub_1000BA294(&qword_100C00218);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_100088FDC();
  v521 = v63;
  sub_1000BA294(&qword_100BC4630);
  sub_1000B42B0();
  __chkstk_darwin(v64);
  sub_1000986FC();
  v548 = v65;
  sub_10009D2A4();
  __chkstk_darwin(v66);
  sub_100079F7C();
  v524 = v67;
  v68 = sub_10009876C();
  v585 = (int *)type metadata accessor for LocationViewModel(v68);
  sub_1000B42B0();
  __chkstk_darwin(v69);
  sub_100088FDC();
  v522 = v70;
  v527 = sub_1000BA294(&qword_100BC6CB0);
  sub_1000B42B0();
  __chkstk_darwin(v71);
  sub_100088FDC();
  v528 = v72;
  v561 = sub_1000BA294(&qword_100BD4C40);
  sub_1000B42B0();
  __chkstk_darwin(v73);
  sub_100088FDC();
  v562 = v74;
  sub_1000BA294(&qword_100BC5B30);
  sub_1000B42B0();
  __chkstk_darwin(v75);
  sub_1000986FC();
  v547 = v76;
  sub_10009D2A4();
  __chkstk_darwin(v77);
  sub_1000860D0();
  v518 = v78;
  sub_10009D2A4();
  __chkstk_darwin(v79);
  sub_100079F7C();
  v592 = v80;
  v593 = sub_1000DB3BC();
  v567 = *(_QWORD *)(v593 - 8);
  sub_10009D98C();
  __chkstk_darwin(v81);
  sub_1000986FC();
  v570 = v82;
  sub_10009D2A4();
  __chkstk_darwin(v83);
  sub_1000860D0();
  v573 = v84;
  sub_10009D2A4();
  __chkstk_darwin(v85);
  sub_100079F7C();
  v578 = v86;
  v87 = sub_10009876C();
  v609 = (void (*)(_QWORD))type metadata accessor for Location.Identifier(v87);
  v610 = *((_QWORD *)v609 - 1);
  sub_10009D98C();
  __chkstk_darwin(v88);
  sub_1000986FC();
  v572 = v89;
  sub_10009D2A4();
  __chkstk_darwin(v90);
  v92 = (char *)&v497 - v91;
  sub_1000BA294(&qword_100BC3660);
  sub_1000B42B0();
  __chkstk_darwin(v93);
  sub_1000986FC();
  v560 = v94;
  sub_10009D2A4();
  __chkstk_darwin(v95);
  sub_100079F7C();
  v559 = v96;
  v97 = sub_10009876C();
  v582 = type metadata accessor for WeatherCondition(v97);
  v581 = *(_QWORD *)(v582 - 8);
  sub_10009D98C();
  __chkstk_darwin(v98);
  sub_100088FDC();
  v580 = v99;
  v100 = sub_10009876C();
  v595 = type metadata accessor for Date(v100);
  v557 = *(_QWORD **)(v595 - 8);
  sub_10009D98C();
  __chkstk_darwin(v101);
  sub_1000986FC();
  v590 = v102;
  sub_10009D2A4();
  __chkstk_darwin(v103);
  sub_100079F7C();
  v583 = (unsigned __int8 *)v104;
  v105 = sub_10009876C();
  v607 = (int *)type metadata accessor for LocationInput(v105);
  sub_1000B42B0();
  __chkstk_darwin(v106);
  sub_1000986FC();
  v530 = v107;
  sub_10009D2A4();
  __chkstk_darwin(v108);
  sub_100079F7C();
  v529 = v109;
  sub_1000BA294(&qword_100BC6B68);
  sub_1000B42B0();
  __chkstk_darwin(v110);
  sub_1000986FC();
  v536 = v111;
  sub_10009D2A4();
  __chkstk_darwin(v112);
  sub_1000860D0();
  v525 = v113;
  sub_10009D2A4();
  __chkstk_darwin(v114);
  sub_1000860D0();
  v532 = v115;
  sub_10009D2A4();
  __chkstk_darwin(v116);
  sub_100079F7C();
  v584 = v117;
  v118 = sub_10009876C();
  v591 = (uint64_t *)type metadata accessor for NewsDataModel(v118);
  sub_1000B42B0();
  __chkstk_darwin(v119);
  sub_1000986FC();
  v523 = v120;
  sub_10009D2A4();
  __chkstk_darwin(v121);
  sub_100079F7C();
  v598 = v122;
  sub_1000BA294(&qword_100BF1FA8);
  sub_1000B42B0();
  __chkstk_darwin(v123);
  sub_100088FDC();
  v594 = v124;
  v125 = sub_10009876C();
  v596 = type metadata accessor for PreprocessedWeatherData(v125);
  sub_1000B42B0();
  __chkstk_darwin(v126);
  sub_100088FDC();
  v597 = v127;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v128);
  sub_1000986FC();
  v535 = v129;
  sub_10009D2A4();
  __chkstk_darwin(v130);
  sub_1000860D0();
  v531 = (uint64_t *)v131;
  sub_10009D2A4();
  __chkstk_darwin(v132);
  sub_1000860D0();
  v568 = v133;
  sub_10009D2A4();
  __chkstk_darwin(v134);
  sub_100079F7C();
  v599 = v135;
  v136 = sub_10009876C();
  v602 = (int *)type metadata accessor for WeatherData(v136);
  sub_1000B42B0();
  __chkstk_darwin(v137);
  sub_1000986FC();
  v526 = (uint64_t *)v138;
  sub_10009D2A4();
  __chkstk_darwin(v139);
  sub_1000860D0();
  v558 = v140;
  sub_10009D2A4();
  __chkstk_darwin(v141);
  sub_100079F7C();
  v601 = v142;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v143);
  v144 = sub_1000992A8();
  v605 = type metadata accessor for LocationWeatherDataState(v144);
  sub_1000B42B0();
  __chkstk_darwin(v145);
  sub_100088FDC();
  v600 = v146;
  v147 = sub_10009876C();
  v604 = type metadata accessor for OSSignpostID(v147);
  v603 = *(_QWORD *)(v604 - 8);
  sub_10009D98C();
  __chkstk_darwin(v148);
  sub_10009E540();
  sub_1000BA294(&qword_100BC35F8);
  sub_1000B42B0();
  __chkstk_darwin(v149);
  v151 = (char *)&v497 - ((v150 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v152);
  v154 = (char *)&v497 - v153;
  v155 = type metadata accessor for Location(0);
  v156 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  sub_1000986FC();
  v566 = v157;
  sub_10009D2A4();
  __chkstk_darwin(v158);
  v160 = (char *)&v497 - v159;
  LocationModel.coalesceLocation.getter(v161);
  sub_100088FC8((uint64_t)v154, 1, v155);
  if (!v190)
  {
    v509 = v92;
    v569 = v606 & 1;
    v565 = v156;
    v168 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v156 + 32);
    v579 = v155;
    v169 = sub_10008908C((uint64_t)v160, (uint64_t)v154, v168);
    v170 = LocationModel.coalesceLocationID.getter(v169);
    v172 = v171;
    v534 = v151;
    v503 = a2;
    LocationModel.location.getter(v170);
    v173 = *(id *)((char *)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_logger);
    v174 = OSSignpostID.init(log:)(v173);
    static os_signpost_type_t.begin.getter(v174);
    v507 = sub_1000BA294(&qword_100BC3C38);
    v175 = sub_1000D0970(v507);
    v505 = xmmword_10097CA50;
    *(_OWORD *)(v175 + 16) = xmmword_10097CA50;
    v606 = (uint64_t)v160;
    v176 = (uint64_t)v173;
    Location.name.getter(v175);
    v178 = v177;
    v180 = v179;
    *(_QWORD *)(v175 + 56) = &type metadata for String;
    v508 = sub_1000B2E24();
    *(_QWORD *)(v175 + 64) = v508;
    *(_QWORD *)(v175 + 32) = v178;
    *(_QWORD *)(v175 + 40) = v180;
    sub_1000DA264();
    v181 = sub_1000BF2D8();
    v510 = v5;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v181, v182, v183, v184, v185, v186, v5, v187);
    swift_bridgeObjectRelease(v175);
    v188 = &v612[v607[16]];
    v189 = *((_QWORD *)v188 + 2);
    swift_bridgeObjectRetain(v172);
    v504 = v170;
    sub_1000EED10(v170, v172, v189);
    sub_10009895C();
    sub_100088FC8(v4, 1, v605);
    if (v190)
    {
      sub_100021A14(v4, &qword_100BC3380);
      v192 = v510;
      v193 = v606;
      v194 = v610;
LABEL_15:
      static os_signpost_type_t.end.getter(v191);
      v203 = sub_1000D0970(v507);
      *(_OWORD *)(v203 + 16) = v505;
      Location.name.getter(v203);
      v204 = v508;
      *(_QWORD *)(v203 + 56) = &type metadata for String;
      *(_QWORD *)(v203 + 64) = v204;
      *(_QWORD *)(v203 + 32) = v205;
      *(_QWORD *)(v203 + 40) = v206;
      sub_1000DA264();
      v207 = sub_1000BF2D8();
      os_signpost(_:dso:log:name:signpostID:_:_:)(v207, v208, v209, v210, v211, v212, v192, v213);
      sub_100075DF4();
      v214 = (uint64_t)v509;
      Location.identifier.getter(v215);
      LODWORD(v203) = v569;
      v216 = sub_1000BD07C(v504, v172);
      sub_10009895C();
      sub_100059720((_DWORD)v203 == 0, v216 & 1, v203, v608);
      sub_1000DC7F0(v214, *(uint64_t (**)(uint64_t, _QWORD))(v194 + 8));
      sub_1000DC2C8(v192, *(uint64_t (**)(uint64_t, _QWORD))(v603 + 8));
      sub_1000BEBAC();
      v218 = v193;
LABEL_16:
      v217(v218, v579);
LABEL_17:
      sub_100021A14((uint64_t)v534, &qword_100BC35F8);
      goto LABEL_18;
    }
    sub_10007802C(v4, v600, type metadata accessor for LocationWeatherDataState);
    v195 = v599;
    sub_1000EADE8();
    v197 = sub_100088FC8(v195, 1, (uint64_t)v602);
    v193 = v606;
    v194 = v610;
    if (v196)
    {
      sub_10009BC18(v197, type metadata accessor for LocationWeatherDataState);
      v198 = &qword_100BC3460;
    }
    else
    {
      v199 = v601;
      sub_10007802C(v195, v601, type metadata accessor for WeatherData);
      v195 = (uint64_t)v594;
      sub_1000FB3A4();
      sub_100088FC8(v195, 1, v596);
      if (!v200)
      {
        sub_10007802C(v195, v597, type metadata accessor for PreprocessedWeatherData);
        v219 = v584;
        sub_1000FB2B0();
        v221 = sub_100088FC8(v219, 1, (uint64_t)v591);
        if (!v220)
        {
          v501 = (uint64_t *)v188;
          v502 = v176;
          sub_10009895C();
          sub_10007802C(v219, v598, type metadata accessor for NewsDataModel);
          v223 = v611[30];
          v224 = v611[31];
          v225 = sub_1000DB418(v611 + 27, v223);
          v226 = Location.kind.getter(v225);
          v227 = sub_100109ABC(v226);
          v229 = v228;
          v230 = 1;
          v231 = sub_1000C6CD0();
          v233 = v227 == v231 && v229 == v232;
          v234 = v229;
          if (!v233)
          {
            v235 = v232;
            v230 = sub_1000C1F58(v227, v232, v231);
            v234 = v235;
          }
          sub_1000986C4();
          swift_bridgeObjectRelease(v234);
          v236 = v612;
          v237 = v612[1];
          v238 = *((_QWORD *)v612 + 1);
          v239 = v606;
          v241 = Location.id.getter(v240);
          sub_100120D14(v241, v242, v238);
          LOBYTE(v238) = v243;
          v244 = sub_1000986C4();
          v245 = &v236[v607[7]];
          v246 = v607[12];
          v247 = v236[v607[8]];
          v248 = v607[9];
          v249 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, unsigned __int8 *, _QWORD, _QWORD, uint64_t, uint64_t, double, uint64_t, uint64_t))(v224 + 16);
          v499 = v607[11];
          v500 = v248;
          v250 = v236[v248];
          v498 = v246;
          v251 = v249(v230 & 1, v237, v238 & 1, v245, v236[v499], v236[v246], v247, v250, v244, v223, v224);
          v252 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
          v253 = objc_msgSend(v252, "userInterfaceIdiom");

          if (v253 == (id)1)
          {
            v256 = v529;
            sub_1000BE938((uint64_t)v236, v255, type metadata accessor for LocationInput);
            v258 = v578;
            v259 = v557;
            LODWORD(v504) = 0;
            if ((v251 & 1) != 0)
            {
              v260 = v607;
              LODWORD(v605) = *(unsigned __int8 *)(v256 + v607[10]) == 2;
              v261 = (uint64_t)v585;
              v262 = v582;
              v263 = v606;
            }
            else
            {
              LODWORD(v605) = 0;
              v261 = (uint64_t)v585;
              v262 = v582;
              v263 = v606;
              v260 = v607;
            }
            v275 = v610;
          }
          else
          {
            LODWORD(v605) = v251;
            v264 = Location.kind.getter(v254);
            v265 = sub_100109ABC(v264);
            v267 = v266;
            v268 = sub_1000C6CD0();
            v270 = v265 == v268 && v267 == v269;
            v263 = v239;
            v258 = v578;
            v259 = v557;
            if (v270)
            {
              swift_bridgeObjectRelease_n(v267, 2);
              v273 = v530;
              sub_1000BE938((uint64_t)v612, v276, type metadata accessor for LocationInput);
              v261 = (uint64_t)v585;
              v275 = v610;
            }
            else
            {
              v271 = v269;
              v272 = sub_1000DADB8(v265, v267, v268);
              sub_1000986C4();
              swift_bridgeObjectRelease(v271);
              v273 = v530;
              sub_1000BE938((uint64_t)v612, v274, type metadata accessor for LocationInput);
              v261 = (uint64_t)v585;
              v275 = v610;
              if ((v272 & 1) == 0)
              {
                LODWORD(v504) = 0;
                v262 = v582;
                v260 = v607;
                goto LABEL_40;
              }
            }
            v260 = v607;
            LODWORD(v504) = *(unsigned __int8 *)(v273 + v607[13]);
            v262 = v582;
          }
LABEL_40:
          sub_10009BC18(v257, type metadata accessor for LocationInput);
          v277 = &v612[v260[14]];
          v594 = (void (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v259[2];
          v594(v583, v277, v595);
          v278 = (uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastViewModel;
          sub_10009922C((uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastViewModel, (uint64_t)&v617, 0);
          _s7Weather24LocationCompositionStateOwet_0(v278, 1, v261);
          v584 = v278;
          v279 = v601;
          v280 = (uint64_t)v583;
          LODWORD(v599) = sub_1000316D0();
          v557 = (_QWORD *)v259[1];
          v281 = ((uint64_t (*)(uint64_t, uint64_t))v557)(v280, v595);
          v282 = *(_QWORD *)&v612[v260[22] + 8];
          v283 = (uint64_t)v509;
          v284 = Location.identifier.getter(v281);
          v285 = Location.Identifier.id.getter(v284);
          v286 = (uint64_t)v559;
          sub_1000F3CAC(v285, v287, v282);
          sub_1000986C4();
          v288 = v283;
          v289 = v286;
          sub_1000DC7F0(v288, *(uint64_t (**)(uint64_t, _QWORD))(v275 + 8));
          sub_100080C0C(v279, v558, type metadata accessor for WeatherData);
          v290 = sub_100088FC8(v286, 1, v262);
          if (v190)
          {
            v298 = v602;
            v291 = WeatherDataModel.currentWeather.getter(v290);
            v296 = v580;
            CurrentWeather.condition.getter(v291);
            v292 = sub_1000BDB94();
            v294 = v293(v292);
            sub_10004A2E0(v294, type metadata accessor for WeatherData);
            sub_100021A14(v289, &qword_100BC3660);
            v295 = v581;
            v297 = v565;
          }
          else
          {
            sub_10004A2E0(v290, type metadata accessor for WeatherData);
            v295 = v581;
            v296 = v580;
            sub_10008908C(v580, v289, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v581 + 32));
            v297 = v565;
            v298 = v602;
          }
          v299 = v566;
          v559 = *(void (**)(uint64_t, uint64_t, uint64_t))(v297 + 16);
          v559(v566, v263, v579);
          v300 = v590;
          v583 = &v612[v607[21]];
          v301 = sub_1000BF008(v590, (uint64_t)v583);
          v302 = v601;
          v610 = v601 + v298[6];
          WeatherDataModel.currentWeather.getter(v301);
          v303 = v560;
          sub_10008908C(v560, v296, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v295 + 16));
          sub_100099444();
          _s7Weather24LocationCompositionStateOwst_0(v304, v305, v306, v262);
          ForegroundEffect.init(for:at:currentWeather:weatherCondition:)(v299, v300, v258, v303);
          v307 = v568;
          sub_100080C0C(v302, v568, type metadata accessor for WeatherData);
          sub_100099444();
          _s7Weather24LocationCompositionStateOwst_0(v308, v309, v310, (uint64_t)v298);
          v311 = (uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData;
          sub_10009922C((uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData, (uint64_t)&v616, 0);
          v312 = v562;
          v313 = v562 + *(int *)(v561 + 48);
          sub_1000C091C(v307, v562);
          sub_1000C091C(v311, v313);
          if (_s7Weather24LocationCompositionStateOwet_0(v312, 1, (uint64_t)v298) == 1)
          {
            sub_100021A14(v307, &qword_100BC3460);
            sub_100088FC8(v313, 1, (uint64_t)v298);
            v314 = (uint64_t)v591;
            if (!v190)
              goto LABEL_50;
            sub_100021A14(v312, &qword_100BC3460);
          }
          else
          {
            v315 = v531;
            sub_100037768(v312, (uint64_t)v531, &qword_100BC3460);
            sub_100088FC8(v313, 1, (uint64_t)v298);
            v314 = (uint64_t)v591;
            if (v190)
            {
              sub_100021A14(v568, &qword_100BC3460);
              sub_1000215BC((uint64_t)v315, type metadata accessor for WeatherData);
LABEL_50:
              v316 = &qword_100BD4C40;
LABEL_61:
              v326 = v312;
LABEL_62:
              sub_100021A14(v326, v316);
LABEL_63:
              v327 = v535;
              sub_1000BE938(v601, v320, type metadata accessor for WeatherData);
              sub_100099444();
              _s7Weather24LocationCompositionStateOwst_0(v328, v329, v330, (uint64_t)v602);
              sub_10009922C(v311, (uint64_t)v618, 33);
              sub_1000A3908(v327, v311, &qword_100BC3460);
              sub_1000E7D78();
              v331 = v536;
              sub_100080C0C(v598, v536, type metadata accessor for NewsDataModel);
              _s7Weather24LocationCompositionStateOwst_0(v331, 0, 1, v314);
              v332 = v611;
              v333 = sub_10009922C((uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastNewsData, (uint64_t)v618, 33);
              sub_1000CE058(v333, v334, &qword_100BC6B68);
              sub_1000E7D78();
              v335 = v597;
              v336 = v564;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v563 + 16))(v537, v597, v564);
              sub_100099444();
              _s7Weather24LocationCompositionStateOwst_0(v337, v338, v339, v336);
              v340 = sub_10009922C((uint64_t)v332 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastPreprocessedDataUuid, (uint64_t)v618, 33);
              sub_1000CE058(v340, v341, &qword_100BE4BF0);
              sub_1000E7D78();
              v342 = (void (*)(char *, uint64_t))v606;
              v343 = sub_1007CBD7C();
              v345 = v344;
              v346 = sub_1000D0B8C();
              v347 = v538;
              v348 = WeatherDataModel.dailyForecast.getter(v346);
              v349 = v590;
              v350 = CurrentWeather.date.getter(v348);
              v351 = v540;
              v352 = Location.timeZone.getter(v350);
              Forecast<>.todaysWeather(today:timeZone:)(v349, v351, v352);
              (*(void (**)(uint64_t, uint64_t))(v541 + 8))(v351, v542);
              ((void (*)(uint64_t, uint64_t))v557)(v349, v595);
              v602 = *(int **)(v539 + 8);
              ((void (*)(uint64_t, uint64_t))v602)(v347, v571);
              static LocationEntity.makeFromLocation(_:name:)(v342, v343, v345);
              swift_bridgeObjectRelease(v345);
              sub_1007CBEC0(v332, v342, v588);
              v353 = v589;
              v354 = v579;
              v355 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v559;
              v559(v589, (uint64_t)v342, v579);
              v356 = (int *)v543;
              sub_100080C0C(v601, v353 + *(int *)(v543 + 20), type metadata accessor for WeatherData);
              sub_100080C0C(v335, v353 + v356[6], type metadata accessor for PreprocessedWeatherData);
              sub_100080C0C(v598, v353 + v356[7], type metadata accessor for NewsDataModel);
              v357 = *v612;
              *(_BYTE *)(v353 + v356[8]) = v569;
              *(_BYTE *)(v353 + v356[9]) = v357;
              Location.identifier.getter(v358);
              v359 = (uint64_t)v534;
              v360 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v534, 1, v354);
              v361 = 1;
              if (!v360)
              {
                v362 = v566;
                v363 = v355(v566, v359, v354);
                Location.identifier.getter(v363);
                sub_1000BEBAC();
                v364(v362, v354);
                v361 = 0;
              }
              v365 = 1;
              v366 = _s7Weather24LocationCompositionStateOwst_0(v586, v361, 1, (uint64_t)v609);
              WeatherDataModel.currentWeather.getter(v366);
              v591 = (uint64_t *)(v335 + *(int *)(v596 + 60));
              memcpy(__dst, v591, 0x70uLL);
              v367 = sub_100017838(__dst);
              v368 = v544;
              v369 = WeatherDataModel.dailyForecast.getter(v367);
              v370 = LocationModel.kind.getter(v369);
              v371 = sub_100109ABC(v370);
              v373 = v372;
              v374 = sub_1000C6CD0();
              v376 = v371 == v374 && v373 == v375;
              v377 = v373;
              if (!v376)
              {
                v378 = v375;
                v365 = sub_1000DADB8(v371, v373, v374);
                v377 = v378;
              }
              swift_bridgeObjectRelease(v373);
              swift_bridgeObjectRelease(v377);
              v379 = v545;
              LocationModel.locationOfInterest.getter(v380);
              v381 = v546;
              LocationModel.locationCompositionState.getter(v546);
              v382 = v607;
              v383 = v612;
              v568 = v607[23];
              v384 = v365 & 1;
              v385 = v606;
              v386 = v569;
              v387 = v611;
              sub_1007CC848(v570, __dst, v606, v569, v384, (uint64_t)v381, (uint64_t)v618, v612[v568]);
              sub_1000163B0(__dst);
              sub_1000215BC((uint64_t)v381, type metadata accessor for LocationCompositionState);
              sub_100021A14(v379, &qword_100BC3118);
              ((void (*)(uint64_t, uint64_t))v602)(v368, v571);
              v388 = sub_1000BDB94();
              v609 = v389;
              v389(v388);
              v602 = (int *)sub_1007CCA64(v385, v601, v597, v598, v386, v605 & 1, v599, *v383, v383[v382[13]]);
              sub_1000DB418(v387 + 12, v387[15]);
              v596 = sub_10000D6D4(v589);
              v390 = Location.kind.getter(v596);
              v391 = sub_100109ABC(v390);
              v393 = v392;
              v394 = 1;
              v395 = sub_1000C6CD0();
              v397 = v391 == v395 && v393 == v396;
              v398 = v393;
              if (!v397)
              {
                v399 = v396;
                v394 = sub_1000C1F58(v391, v396, v395);
                v398 = v399;
              }
              LODWORD(v571) = v394;
              sub_1000986C4();
              swift_bridgeObjectRelease(v398);
              v400 = v612[v498];
              v401 = v612[v499];
              v402 = *v501;
              v403 = v501[1];
              v404 = v501[2];
              v405 = v501[3];
              v406 = v549;
              sub_100099C0C((uint64_t)&v612[v607[17]], v407, (uint64_t *)&unk_100C0D170);
              v408 = type metadata accessor for CurrentLocation(0);
              v409 = sub_100088FC8(v406, 1, v408);
              if (v190)
              {
                sub_10009518C(v409, (uint64_t *)&unk_100C0D170);
                v411 = 0;
                v413 = 0;
              }
              else
              {
                v411 = CurrentLocation.id.getter(v410);
                v413 = v412;
                sub_10009BC18(v411, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
              }
              sub_10009AD1C(v411, v413, v402, v403, v404, v405, v414, v415, v497, v498, v499, v500, (uint64_t)v501, v502, v503, v504, v505, *((uint64_t *)&v505 + 1), v506,
                v507);
              v417 = v416;
              sub_100075DF4();
              v418 = v612;
              v419 = v612[v500];
              v421 = v591[12];
              v420 = v591[13];
              if (v612[v568] == 1)
              {
                swift_bridgeObjectRetain(v591[13]);
                v422 = v533;
                LocationModel.locationOfInterest.getter(v423);
              }
              else
              {
                v424 = type metadata accessor for LocationOfInterest(0);
                v422 = v533;
                _s7Weather24LocationCompositionStateOwst_0(v533, 1, 1, v424);
                swift_bridgeObjectRetain(v420);
              }
              v425 = v421;
              v426 = v611;
              sub_1007CCDB8(v606, v571 & 1, v400 == 1, v401 == 2, v588, v417 & 1, v419, v425, v575, v420, v422);
              sub_100075DF4();
              sub_100021A14(v422, &qword_100BC3118);
              type metadata accessor for LocationFooterViewModel(0);
              sub_100099444();
              _s7Weather24LocationCompositionStateOwst_0(v427, v428, v429, v430);
              v431 = v569;
              LODWORD(v607) = v569 == 0;
              v432 = type metadata accessor for UnitManager(0);
              v433 = static UnitManager.standard.getter(v432);
              v591 = (uint64_t *)UnitManager.temperature.getter();
              swift_release(v433);
              LODWORD(v612) = *v418;
              v434 = v590;
              sub_1000BF008(v590, (uint64_t)v583);
              v435 = v547;
              sub_100037768(v592, v547, &qword_100BC5B30);
              v436 = v578;
              v438 = WeatherDataModel.currentWeather.getter(v437);
              v439 = CurrentWeather.isDaylight.getter(v438);
              sub_1000BDDD4(v436);
              v440 = v550;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v576 + 16))(v550, v587, v577);
              v441 = v426 + 17;
              v442 = v426[20];
              v443 = v426[21];
              sub_1000DB418(v441, v442);
              v444 = v551;
              v445 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v442, v443);
              v446 = v554;
              AppConfiguration.locationsConfiguration.getter(v445);
              v447 = (*(uint64_t (**)(uint64_t, uint64_t))(v552 + 8))(v444, v553);
              LOBYTE(v433) = LocationsConfiguration.shouldTrackComponentExposureEvents.getter(v447);
              (*(void (**)(uint64_t, uint64_t))(v555 + 8))(v446, v556);
              v496 = v433 & 1;
              v448 = v608;
              sub_1006F5F38(v572, v586, v618, (uint64_t)v602, v596, v575, v605 & 1, v504, v608, v599, (char)v607, 3u, v591, v607, v431, v612, v434, v435, (v439 & 1) == 0,
                v440,
                v496);
              v449 = v448;
              v450 = v548;
              sub_1000BE938(v449, v451, type metadata accessor for LocationViewModel);
              sub_100099444();
              _s7Weather24LocationCompositionStateOwst_0(v452, v453, v454, (uint64_t)v585);
              v455 = v584;
              sub_10009922C(v584, (uint64_t)v615, 33);
              sub_1000A3908(v450, v455, &qword_100BC4630);
              v456 = swift_endAccess(v615);
              v457 = static os_signpost_type_t.end.getter(v456);
              v458 = sub_1000D0970(v507);
              *(_OWORD *)(v458 + 16) = v505;
              v459 = v606;
              Location.name.getter(v458);
              v460 = v508;
              *(_QWORD *)(v458 + 56) = &type metadata for String;
              *(_QWORD *)(v458 + 64) = v460;
              *(_QWORD *)(v458 + 32) = v461;
              *(_QWORD *)(v458 + 40) = v462;
              sub_1000DA264();
              v463 = v510;
              os_signpost(_:dso:log:name:signpostID:_:_:)(v457, &_mh_execute_header, v502, "Weather:locationViewModelMake", 29, 2, v510, "location %{private}s");
              sub_10009895C();
              sub_1000215BC(v589, type metadata accessor for LocationContentState);
              sub_1000215BC(v588, type metadata accessor for LearnMoreAttributorViewModel);
              (*(void (**)(uint64_t, uint64_t))(v576 + 8))(v587, v577);
              sub_100021A14(v574, &qword_100BCB138);
              sub_1000BDDD4(v573);
              sub_100021A14(v592, &qword_100BC5B30);
              sub_1000D9294();
              sub_1000215BC(v598, type metadata accessor for NewsDataModel);
              sub_1000215BC(v597, type metadata accessor for PreprocessedWeatherData);
              sub_1000215BC(v601, type metadata accessor for WeatherData);
              sub_1000215BC(v600, type metadata accessor for LocationWeatherDataState);
              sub_1000DC2C8(v463, *(uint64_t (**)(uint64_t, _QWORD))(v603 + 8));
              sub_1000BEBAC();
              v218 = v459;
              goto LABEL_16;
            }
            v317 = v526;
            sub_10007802C(v313, (uint64_t)v526, type metadata accessor for WeatherData);
            sub_1000FAF2C(v315, v317);
            v319 = v318;
            sub_1000C1854();
            sub_100098854(v568);
            sub_1000C1854();
            sub_100098854(v312);
            if ((v319 & 1) == 0)
              goto LABEL_63;
          }
          v321 = v532;
          sub_100080C0C(v598, v532, type metadata accessor for NewsDataModel);
          sub_1000CDA08();
          v322 = (uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastNewsData;
          sub_10009922C((uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastNewsData, (uint64_t)&v614, 0);
          v312 = v528;
          v323 = v528 + *(int *)(v527 + 48);
          sub_1000D0580(v321, v528);
          sub_1000D0580(v322, v323);
          sub_100088FC8(v312, 1, v314);
          if (v190)
          {
            sub_100021A14(v321, &qword_100BC6B68);
            sub_100088FC8(v323, 1, v314);
            if (v190)
            {
              sub_100021A14(v312, &qword_100BC6B68);
              goto LABEL_83;
            }
          }
          else
          {
            v324 = v525;
            sub_100037768(v312, v525, &qword_100BC6B68);
            sub_100088FC8(v323, 1, v314);
            if (!v325)
            {
              v464 = v523;
              sub_10007802C(v323, v523, type metadata accessor for NewsDataModel);
              v465 = sub_1000FA3BC(v324, v464);
              sub_1000215BC(v464, type metadata accessor for NewsDataModel);
              sub_100098854(v532);
              sub_1000C1854();
              sub_100098854(v312);
              if ((v465 & 1) == 0)
                goto LABEL_63;
LABEL_83:
              v466 = v524;
              sub_100099C0C(v584, v320, &qword_100BC4630);
              v467 = v585;
              sub_100088FC8(v466, 1, (uint64_t)v585);
              if (v190)
              {
                v316 = &qword_100BC4630;
                v326 = v466;
                goto LABEL_62;
              }
              v468 = v466;
              v469 = v522;
              sub_10007802C(v468, v522, type metadata accessor for LocationViewModel);
              if ((v605 & 1) != *(_BYTE *)(v469 + v467[10])
                || (_DWORD)v504 != *(unsigned __int8 *)(v469 + v467[11])
                || *(unsigned __int8 *)(v469 + v467[12]) != v599
                || *(unsigned __int8 *)(v469 + v467[18]) != *v612
                || (v470 = static Date.== infix(_:_:)(v469 + v467[19], v583), (v470 & 1) == 0))
              {
                sub_10009BC18(v470, type metadata accessor for LocationViewModel);
                goto LABEL_63;
              }
              v471 = v469 + v467[20];
              v472 = v521;
              v473 = v521 + *(int *)(v519 + 48);
              sub_1000C091C(v471, v521);
              sub_1000C091C(v592, v473);
              v474 = v520;
              sub_100088FC8(v472, 1, v520);
              if (v190)
              {
                sub_100088FC8(v473, 1, v474);
                if (v190)
                {
                  sub_100021A14(v521, &qword_100BC5B30);
LABEL_102:
                  v484 = (uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastPreprocessedDataUuid;
                  sub_10009922C((uint64_t)v611 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastPreprocessedDataUuid, (uint64_t)&v613, 0);
                  v485 = v516;
                  sub_1000C2350(v516, v597, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v563 + 16));
                  sub_1000CDA08();
                  v486 = v517;
                  v487 = v517 + *(int *)(v514 + 48);
                  sub_1000D0580(v484, v517);
                  sub_1000D0580(v485, v487);
                  sub_100088FC8(v486, 1, v314);
                  if (v190)
                  {
                    sub_100021A14(v516, &qword_100BE4BF0);
                    sub_100088FC8(v487, 1, v564);
                    if (v190)
                    {
                      sub_100021A14(v517, &qword_100BE4BF0);
                      goto LABEL_114;
                    }
                  }
                  else
                  {
                    sub_100037768(v517, v513, &qword_100BE4BF0);
                    sub_100088FC8(v487, 1, v564);
                    if (!v488)
                    {
                      v489 = v563;
                      v490 = v511;
                      sub_1000C2350(v511, v487, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v563 + 32));
                      sub_100086DA4(&qword_100BE4C00, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
                      v491 = v513;
                      v493 = dispatch thunk of static Equatable.== infix(_:_:)(v513, v490, v314, v492);
                      v494 = *(void (**)(uint64_t, uint64_t))(v489 + 8);
                      v494(v490, v314);
                      sub_100021A14(v516, &qword_100BE4BF0);
                      v494(v491, v314);
                      sub_100021A14(v517, &qword_100BE4BF0);
                      if ((v493 & 1) != 0)
                      {
LABEL_114:
                        if (*(unsigned __int8 *)(v522 + v585[6] + 160) == v612[v607[23]])
                        {
                          sub_100021A14(v592, &qword_100BC5B30);
                          sub_1000D9294();
                          sub_1000215BC(v598, type metadata accessor for NewsDataModel);
                          sub_1000215BC(v597, type metadata accessor for PreprocessedWeatherData);
                          sub_1000215BC(v601, type metadata accessor for WeatherData);
                          sub_1000215BC(v600, type metadata accessor for LocationWeatherDataState);
                          sub_1000DC2C8(v510, *(uint64_t (**)(uint64_t, _QWORD))(v603 + 8));
                          sub_1000BEBAC();
                          v495(v606, v579);
                          sub_10007802C(v522, v608, type metadata accessor for LocationViewModel);
                          goto LABEL_17;
                        }
                      }
LABEL_112:
                      sub_1000215BC(v522, type metadata accessor for LocationViewModel);
                      v314 = (uint64_t)v591;
                      goto LABEL_63;
                    }
                    sub_100021A14(v516, &qword_100BE4BF0);
                    (*(void (**)(uint64_t, uint64_t))(v563 + 8))(v513, v564);
                  }
                  v476 = &qword_100C08D20;
                  v477 = v517;
LABEL_111:
                  sub_100021A14(v477, v476);
                  goto LABEL_112;
                }
              }
              else
              {
                sub_100037768(v521, v518, &qword_100BC5B30);
                sub_100088FC8(v473, 1, v474);
                if (!v475)
                {
                  v478 = v515;
                  v314 = v512;
                  v479 = v520;
                  sub_10008908C(v512, v473, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v515 + 32));
                  sub_100086DA4(&qword_100BC5B98, (uint64_t (*)(uint64_t))&type metadata accessor for ForegroundEffect, (uint64_t)&protocol conformance descriptor for ForegroundEffect);
                  v480 = v518;
                  v482 = dispatch thunk of static Equatable.== infix(_:_:)(v518, v314, v479, v481);
                  v483 = *(void (**)(uint64_t, uint64_t))(v478 + 8);
                  v483(v314, v479);
                  v483(v480, v479);
                  sub_100021A14(v521, &qword_100BC5B30);
                  if ((v482 & 1) == 0)
                    goto LABEL_112;
                  goto LABEL_102;
                }
                (*(void (**)(uint64_t, uint64_t))(v515 + 8))(v518, v520);
              }
              v476 = &qword_100C00218;
              v477 = v521;
              goto LABEL_111;
            }
            sub_100021A14(v532, &qword_100BC6B68);
            sub_1000215BC(v324, type metadata accessor for NewsDataModel);
          }
          v316 = &qword_100BC6CB0;
          goto LABEL_61;
        }
        sub_10004A2E0(v221, type metadata accessor for PreprocessedWeatherData);
        sub_1000215BC(v199, type metadata accessor for WeatherData);
        sub_10009BC18(v222, type metadata accessor for LocationWeatherDataState);
        v198 = &qword_100BC6B68;
        v202 = v219;
        goto LABEL_14;
      }
      sub_1000215BC(v199, type metadata accessor for WeatherData);
      sub_10009BC18(v201, type metadata accessor for LocationWeatherDataState);
      v198 = &qword_100BF1FA8;
    }
    v202 = v195;
LABEL_14:
    sub_100021A14(v202, v198);
    v192 = v510;
    goto LABEL_15;
  }
  sub_100021A14((uint64_t)v154, &qword_100BC35F8);
  v163 = LocationModel.identifier.getter(v162);
  v164 = LocationModel.id.getter(v163);
  v166 = v165;
  v167 = sub_1000BD07C(v164, v165);
  swift_bridgeObjectRelease(v166);
  sub_100059720(0, v167 & 1, 0, v608);
  sub_1000DC7F0((uint64_t)v92, *(uint64_t (**)(uint64_t, _QWORD))(v610 + 8));
LABEL_18:
  sub_100098640();
}

_QWORD *sub_100045F7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  __n128 v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  _QWORD *result;
  _QWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[3];

  v99 = a1;
  v93 = *(_QWORD *)(type metadata accessor for NewsArticle(0) - 8);
  sub_10009D98C();
  __chkstk_darwin(v5);
  sub_100098694();
  v94 = *(_QWORD *)(type metadata accessor for NewsArticlePlacement(0) - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v98 = (uint64_t *)v7;
  v8 = type metadata accessor for Article(0);
  v100 = *(_QWORD *)(v8 - 8);
  sub_10009D98C();
  __chkstk_darwin(v9);
  v10 = sub_1000992A8();
  v11 = type metadata accessor for ArticleModel(v10);
  v101 = *(_QWORD *)(v11 - 8);
  v102 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_1000DB210();
  __chkstk_darwin(v13);
  v15 = (char *)v87 - v14;
  v91 = type metadata accessor for ArticlePlacement(0);
  v96 = *(_QWORD *)(v91 - 8);
  sub_10009D98C();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v90 = v17;
  v18 = type metadata accessor for News(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = sub_1000BD1E4();
  v21 = type metadata accessor for NewsDataModel(v20);
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = (uint64_t *)(v24 - v23);
  sub_100080C0C(v97, v24 - v23, v26);
  if (swift_getEnumCaseMultiPayload(v25, v21) != 1)
  {
    v88 = v19;
    v89 = v18;
    v54 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v19 + 32))(v1, v25, v18);
    v55 = News.placements.getter(v54);
    v56 = (uint64_t)v99;
    swift_bridgeObjectRetain(v99);
    v57 = sub_1009311D8(v55, v56);
    v95 = *(_QWORD *)(v57 + 16);
    if (v95)
    {
      v87[0] = v57;
      v87[1] = v1;
      v94 = v57 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
      v58 = *(_QWORD *)(v96 + 72);
      v92 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, __n128))(v96 + 16);
      v93 = v58;
      v59 = swift_bridgeObjectRetain(v57);
      v60 = 0;
      v32 = _swiftEmptyArrayStorage;
      v62 = v90;
      v61 = v91;
      while (1)
      {
        v98 = (uint64_t *)v60;
        v63 = v92(v62, v94 + v93 * v60, v61, v59);
        v64 = ArticlePlacement.articles.getter(v63);
        v65 = *(_QWORD *)(v64 + 16);
        if (v65)
        {
          v99 = v32;
          v103[0] = _swiftEmptyArrayStorage;
          v66 = v103;
          v67 = v64;
          sub_100605C2C();
          sub_1000BD80C();
          v69 = v67 + v68;
          v71 = *(_QWORD *)(v70 + 72);
          v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
          do
          {
            v72(v3, v69, v8);
            v72((uint64_t)v15, v3, v8);
            v73 = swift_storeEnumTagMultiPayload(v15, v102, 0);
            (*(void (**)(uint64_t, uint64_t, __n128))(v100 + 8))(v3, v8, v73);
            if ((sub_1000D0228() & 1) == 0)
            {
              sub_1000DE1E4();
              v66 = (_QWORD *)v103[0];
            }
            if (v66[2] >= v66[3] >> 1)
            {
              sub_1000DD5D8();
              v66 = (_QWORD *)v103[0];
            }
            sub_1000C3420();
            sub_10007802C((uint64_t)v15, v74, type metadata accessor for ArticleModel);
            v69 += v71;
            --v65;
          }
          while (v65);
          v75 = swift_bridgeObjectRelease(v97);
          v32 = v99;
          v62 = v90;
          v61 = v91;
        }
        else
        {
          v75 = swift_bridgeObjectRelease(v64);
          v66 = _swiftEmptyArrayStorage;
        }
        (*(void (**)(uint64_t, uint64_t, __n128))(v96 + 8))(v62, v61, v75);
        v76 = v66[2];
        v77 = v32[2];
        if (__OFADD__(v77, v76))
          goto LABEL_63;
        if (!swift_isUniquelyReferenced_nonNull_native(v32) || v77 + v76 > v32[3] >> 1)
        {
          sub_1000C64A0();
          v32 = v78;
        }
        if (v66[2])
        {
          v79 = v32[2];
          if ((v32[3] >> 1) - v79 < v76)
            goto LABEL_67;
          v80 = sub_1000C50B0(v79);
          if (v81 < v80 + v82 * v76 && v80 < v81 + v82 * v76)
            goto LABEL_70;
          swift_arrayInitWithCopy(v80);
          if (v76)
          {
            v84 = v32[2];
            v52 = __OFADD__(v84, v76);
            v85 = v84 + v76;
            if (v52)
              goto LABEL_69;
            v32[2] = v85;
          }
        }
        else if (v76)
        {
          goto LABEL_65;
        }
        v60 = (uint64_t)v98 + 1;
        v59.n128_f64[0] = sub_1000986C4();
        if (v60 == v95)
        {
          swift_bridgeObjectRelease_n(v87[0], 2);
          goto LABEL_60;
        }
      }
    }
    swift_bridgeObjectRelease(v57);
    v32 = _swiftEmptyArrayStorage;
LABEL_60:
    sub_1000C51C8(v88);
    return v32;
  }
  v27 = *v25;
  v28 = (uint64_t)v99;
  swift_bridgeObjectRetain(v99);
  sub_100015E14(v27, v28);
  v96 = *(_QWORD *)(v29 + 16);
  if (!v96)
  {
    swift_bridgeObjectRelease(v29);
    return _swiftEmptyArrayStorage;
  }
  v30 = 0;
  v31 = *(unsigned __int8 *)(v94 + 80);
  v92 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, __n128))v29;
  v95 = v29 + ((v31 + 32) & ~v31);
  v32 = _swiftEmptyArrayStorage;
  v94 = *(_QWORD *)(v94 + 72);
  while (1)
  {
    v100 = v30;
    v33 = v95 + v94 * v30;
    v34 = v98;
    sub_100080C0C(v33, (uint64_t)v98, type metadata accessor for NewsArticlePlacement);
    v35 = *v34;
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v99 = v32;
      v103[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v35);
      v37 = v103;
      sub_100605C2C();
      sub_1000BD80C();
      v39 = v35 + v38;
      v41 = *(_QWORD *)(v40 + 72);
      do
      {
        sub_100080C0C(v39, v2, type metadata accessor for NewsArticle);
        sub_100080C0C(v2, v4, type metadata accessor for NewsArticle);
        swift_storeEnumTagMultiPayload(v4, v102, 1);
        sub_10006BD5C(v2, type metadata accessor for NewsArticle);
        if ((sub_1000D0228() & 1) == 0)
        {
          sub_1000DE1E4();
          v37 = (_QWORD *)v103[0];
        }
        if (v37[2] >= v37[3] >> 1)
        {
          sub_1000DD5D8();
          v37 = (_QWORD *)v103[0];
        }
        sub_1000C3420();
        sub_10007802C(v4, v42, type metadata accessor for ArticleModel);
        v39 += v41;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease(v97);
      v32 = v99;
    }
    else
    {
      v37 = _swiftEmptyArrayStorage;
    }
    sub_10006BD5C((uint64_t)v98, type metadata accessor for NewsArticlePlacement);
    v43 = v37[2];
    v44 = v32[2];
    if (__OFADD__(v44, v43))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native(v32) || v44 + v43 > v32[3] >> 1)
    {
      sub_1000C64A0();
      v32 = v45;
    }
    if (v37[2])
    {
      v46 = v32[2];
      if ((v32[3] >> 1) - v46 < v43)
        goto LABEL_66;
      v47 = sub_1000C50B0(v46);
      if (v48 < v47 + v49 * v43 && v47 < v48 + v49 * v43)
        goto LABEL_70;
      swift_arrayInitWithCopy(v47);
      if (v43)
      {
        v51 = v32[2];
        v52 = __OFADD__(v51, v43);
        v53 = v51 + v43;
        if (v52)
          goto LABEL_68;
        v32[2] = v53;
      }
    }
    else if (v43)
    {
      goto LABEL_64;
    }
    v30 = v100 + 1;
    sub_1000986C4();
    if (v30 == v96)
    {
      swift_bridgeObjectRelease(v92);
      return v32;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25);
  __break(1u);
  return result;
}

void sub_100046668(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double (**v19)();
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29[3];
  uint64_t v30;

  v29[0] = a6;
  v11 = sub_1000BA294(&qword_100BDC0D0);
  __chkstk_darwin(v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BDC0D8);
  __chkstk_darwin(v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000989D4((uint64_t)&unk_100B6FB98);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  v18 = sub_1000BA294(&qword_100BDC0E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v13, a1, v18);
  v19 = (double (**)())&v13[*(int *)(v11 + 36)];
  *v19 = sub_10013DCD4;
  v19[1] = (double (*)())v17;
  v19[2] = 0;
  v19[3] = 0;
  v29[1] = a2;
  v29[2] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  v20 = sub_1000BA294(&qword_100BDC0E8);
  State.wrappedValue.getter(&v30, v20);
  v21 = v30;
  LOBYTE(v17) = sub_100021ADC();
  swift_release(v21);
  sub_10007EBC8((uint64_t)v13, (uint64_t)v16, &qword_100BDC0D0);
  v16[*(int *)(v14 + 36)] = (v17 & 1) == 0;
  sub_100021AA4((uint64_t)v13, &qword_100BDC0D0);
  v22 = (_QWORD *)sub_1000989D4((uint64_t)&unk_100B6FBC0);
  v22[2] = a2;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = v29[0];
  sub_10007EBC8((uint64_t)v16, v29[0], &qword_100BDC0D8);
  v28 = (_QWORD *)(v27 + *(int *)(sub_1000BA294(&qword_100BDC0F0) + 36));
  *v28 = sub_10013DDC8;
  v28[1] = v22;
  v28[2] = v24;
  v28[3] = v26;
  sub_100021AA4((uint64_t)v16, &qword_100BDC0D8);
}

void sub_100046890(uint64_t (*a1)(_QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  _QWORD v20[3];
  _QWORD *v21;

  v4 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v5 = 0;
    v6 = (uint64_t *)(a3 + 48);
    v7 = _swiftEmptyArrayStorage;
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v9 = *(v6 - 2);
      v8 = *(v6 - 1);
      v10 = *v6;
      v20[0] = v9;
      v20[1] = v8;
      v20[2] = v10;
      sub_100095508();
      v11 = swift_bridgeObjectRetain();
      v12 = a1(v20, v11);
      if (v3)
      {
        swift_release();
        sub_100075DF4();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v12 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v21 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10011ECA0();
          v7 = v21;
        }
        v14 = v7[2];
        v15 = v7;
        if (v14 >= v7[3] >> 1)
        {
          sub_10011ECA0();
          v15 = v21;
        }
        v15[2] = v14 + 1;
        v16 = &v15[3 * v14];
        v16[4] = v9;
        v16[5] = v8;
        v16[6] = v10;
        v4 = a3;
        v7 = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1000CC8C8();
      }
      ++v5;
      v6 += 3;
      if (v18 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

void sub_100046A1C()
{
  sub_1000F56C8();
}

void sub_100046A40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v33;
  char v34;
  char v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[8];
  _BYTE v41[72];
  _QWORD v42[5];
  _QWORD v43[6];
  uint64_t v44;

  v40[5] = a3;
  sub_1000E775C();
  sub_10009D98C();
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for WeatherAvailability.AvailabilityKind(0);
  v40[6] = *(_QWORD *)(v13 - 8);
  v40[7] = v13;
  sub_10009D98C();
  __chkstk_darwin(v14);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v15);
  sub_100079F7C();
  v17 = sub_1001102C8(v16);
  sub_1000B43A4(v17, (uint64_t)&v44);
  sub_1000BBFEC(v18);
  __chkstk_darwin(v19);
  sub_100088FDC();
  v21 = sub_1000987B4(v20);
  v22 = type metadata accessor for Location.Identifier(v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_100094EC4();
  static Settings.Maps.overrides.getter(v24);
  sub_1000C2224();
  sub_1000CF87C();
  if ((v6 & 1) != 0)
  {
    sub_1000EAFD4();
    sub_1000C1AD8();
    sub_1000DACA8();
    v25 = sub_1000D0A00();
    SettingReader.read<A>(_:)(v12);
    swift_release(v4);
    swift_release(v25);
    sub_100159EF4((uint64_t)v12, a4);
    v26 = sub_1000B4608();
    v27 = a4;
    v28 = 0;
  }
  else
  {
    v29 = *(_QWORD *)(a1 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v5, a2, v22);
    sub_10013487C(v4, (uint64_t)v42);
    if (v29)
    {
      v30 = sub_100012AB4(v43);
      sub_100134850(v42);
      sub_1000C0E98();
      if ((v30 & 1) != 0)
      {
        v38 = enum case for WeatherMapOverlayKind.airQuality(_:);
        v39 = sub_1000B4608();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(a4, v38, v39);
        v27 = a4;
        v28 = 0;
        v26 = v39;
        goto LABEL_20;
      }
    }
    else
    {
      sub_100134850(v42);
      sub_1000C0E98();
    }
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1000D9618();
      String.hash(into:)(v41, 0x7469706963657270, 0xED00006E6F697461);
      v31 = sub_100109988() & ~(-1 << *(_BYTE *)(a1 + 32));
      if (((*(_QWORD *)(a1 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
      {
        sub_1000BD4E0();
        sub_1000D12F4();
        __asm { BR              X9 }
      }
      if (*(_QWORD *)(a1 + 16))
      {
        sub_1000D9618();
        String.hash(into:)(v41, 0x696C617551726961, 0xEA00000000007974);
        sub_100109988();
        sub_1000B4A1C();
        if ((v33 & 1) != 0)
          __asm { BR              X9 }
        if (*(_QWORD *)(a1 + 16))
        {
          sub_1000D9618();
          String.hash(into:)(v41, 1684957559, 0xE400000000000000);
          sub_100109988();
          sub_1000B4A1C();
          if ((v34 & 1) != 0)
          {
            sub_1000BD4E0();
            sub_1000D12F4();
            __asm { BR              X9 }
          }
          if (*(_QWORD *)(a1 + 16))
          {
            sub_1000D9618();
            String.hash(into:)(v41, 0x74617265706D6574, 0xEB00000000657275);
            sub_100109988();
            sub_1000B4A1C();
            if ((v36 & 1) != 0)
            {
              sub_1000BD4E0();
              sub_1000D12F4();
              __asm { BR              X9 }
            }
          }
        }
      }
    }
    v26 = sub_1000B4608();
    v27 = a4;
    v28 = 1;
  }
LABEL_20:
  _s7Weather24LocationCompositionStateOwst_0(v27, v28, 1, v26);
  sub_100098640();
}

void sub_100046FD8()
{
  swift_bridgeObjectRelease(0xEA00000000007974);
  JUMPOUT(0x100046BE0);
}

void sub_100046FE8()
{
  swift_bridgeObjectRelease(0xE400000000000000);
  JUMPOUT(0x100046FF0);
}

void sub_100046FFC()
{
  swift_bridgeObjectRelease(0xEB00000000657275);
  JUMPOUT(0x10004700CLL);
}

uint64_t destroy for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[3]);
}

void sub_100047040(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;

  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v11);
  v51 = Image.init(_internalSystemName:)(v10, v11);
  v12 = a2 + *(int *)(type metadata accessor for LocationComponentHeaderView(0) + 20);
  v13 = *(_QWORD *)v12;
  v14 = *(_BYTE *)(v12 + 8);
  sub_10008D47C(*(_QWORD *)v12, v14);
  sub_100109B54();
  v16 = v15;
  v17 = sub_1000B15F8(v13, v14);
  if ((v16 & 1) != 0)
    v18 = static Font.caption.getter(v17);
  else
    v18 = static Font.footnote.getter(v17);
  v19 = v18;
  static Font.Weight.medium.getter(v18);
  v50 = Font.weight(_:)(v19);
  swift_release(v19);
  KeyPath = swift_getKeyPath(&unk_1009DD780);
  sub_10008D47C(v13, v14);
  sub_100109B54();
  sub_1000B15F8(v13, v14);
  v20 = sub_1000BA294(&qword_100BC37F8);
  v21 = ScaledMetric.wrappedValue.getter(&v55, v20);
  v22 = v55;
  static Alignment.center.getter(v21);
  v23 = _FrameLayout.init(width:height:alignment:)(v22, 0, 0, 1);
  v24 = v56;
  v47 = v57;
  v48 = v55;
  v25 = v58;
  v45 = v60;
  v46 = v59;
  v44 = static Edge.Set.leading.getter(v23);
  sub_10008D47C(v13, v14);
  sub_100109B54();
  v27 = v26;
  sub_1000B15F8(v13, v14);
  if ((v27 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v28 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v28 = &qword_100CAE538;
  }
  v29 = EdgeInsets.init(_all:)(*(double *)v28 + -4.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = swift_getKeyPath(&unk_1009DD7B0);
  v37 = swift_getKeyPath(&unk_1009DD7E0);
  v38 = *(_QWORD *)v12;
  v39 = *(_BYTE *)(v12 + 8);
  sub_1000D55D4(a3, a4, a5 & 1);
  swift_bridgeObjectRetain(a6);
  sub_10008D47C(v38, v39);
  sub_100109B54();
  v41 = v40;
  sub_1000B15F8(v38, v39);
  if ((v41 & 1) != 0)
  {
    if (qword_100BC1EB0 != -1)
      swift_once(&qword_100BC1EB0, sub_1002425A4);
    v42 = &qword_100CAE530;
  }
  else
  {
    if (qword_100BC1EB8 != -1)
      swift_once(&qword_100BC1EB8, sub_100129188);
    v42 = &qword_100CAE538;
  }
  v43 = *v42;
  *(_QWORD *)a7 = v51;
  *(_QWORD *)(a7 + 8) = KeyPath;
  *(_QWORD *)(a7 + 16) = v50;
  *(_QWORD *)(a7 + 24) = v48;
  *(_BYTE *)(a7 + 32) = v24;
  *(_QWORD *)(a7 + 40) = v47;
  *(_BYTE *)(a7 + 48) = v25;
  *(_QWORD *)(a7 + 56) = v46;
  *(_QWORD *)(a7 + 64) = v45;
  *(_BYTE *)(a7 + 72) = v44;
  *(double *)(a7 + 80) = v29;
  *(_QWORD *)(a7 + 88) = v31;
  *(_QWORD *)(a7 + 96) = v33;
  *(_QWORD *)(a7 + 104) = v35;
  *(_BYTE *)(a7 + 112) = 0;
  *(_QWORD *)(a7 + 120) = a3;
  *(_QWORD *)(a7 + 128) = a4;
  *(_BYTE *)(a7 + 136) = a5 & 1;
  *(_QWORD *)(a7 + 144) = a6;
  *(_QWORD *)(a7 + 152) = v36;
  *(_QWORD *)(a7 + 160) = 1;
  *(_BYTE *)(a7 + 168) = 0;
  *(_QWORD *)(a7 + 176) = v37;
  *(_QWORD *)(a7 + 184) = 0x3FE0000000000000;
  *(_WORD *)(a7 + 192) = 256;
  *(_QWORD *)(a7 + 200) = v43;
  *(_BYTE *)(a7 + 208) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000D55D4(a3, a4, a5 & 1);
  swift_bridgeObjectRetain(a6);
  swift_retain();
  swift_retain();
  sub_1000D31B4(a3, a4, a5 & 1);
  swift_release(v50);
  swift_release(KeyPath);
  swift_release(v51);
  swift_release(v37);
  swift_release(v36);
  swift_bridgeObjectRelease(a6);
}

void sub_100047494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  void (*v49)(_QWORD, _QWORD);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD, _QWORD);
  __int128 v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;

  v97 = sub_1000BA294(&qword_100BD66E8);
  v1 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v3 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UserData(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v96 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v106 = (char *)&v86 - v8;
  v9 = type metadata accessor for Calendar.Identifier(0);
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  __chkstk_darwin(v9);
  v103 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v11);
  v109 = (uint64_t)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v14 = *(char **)(v13 - 8);
  v107 = v13;
  v108 = v14;
  v15 = __chkstk_darwin(v13);
  v98 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v86 - v17;
  *(_QWORD *)&v102 = type metadata accessor for UserIdentity(0);
  v99 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Calendar(0);
  v100 = *(_QWORD *)(v21 - 8);
  v101 = (void (*)(_QWORD, _QWORD, _QWORD))v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DateComponents(0);
  v25 = __chkstk_darwin(v24);
  v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose))
  {
    v29 = v0;
    v94 = v26;
    v95 = v25;
    v90 = v5;
    v91 = v4;
    v92 = v3;
    v93 = v1;
    static Calendar.current.getter(v25);
    v30 = sub_1000BA294(&qword_100BC4E50);
    v31 = type metadata accessor for Calendar.Component(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(_QWORD *)(v32 + 72);
    v34 = *(unsigned __int8 *)(v32 + 80);
    v35 = (v34 + 32) & ~v34;
    v36 = swift_allocObject(v30, v35 + 2 * v33, v34 | 7);
    *(_OWORD *)(v36 + 16) = xmmword_10097DA20;
    v37 = v36 + v35;
    v38 = *(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 104);
    v38(v37, enum case for Calendar.Component.year(_:), v31);
    v38(v37 + v33, enum case for Calendar.Component.month(_:), v31);
    v39 = sub_1000A8278(v36);
    v40 = v29;
    v42 = v29[9];
    v41 = v29[10];
    v88 = v29 + 6;
    sub_1000DB418(v29 + 6, v42);
    v43 = dispatch thunk of IdentityServiceType.identity.getter(v42, v41);
    UserIdentity.startDate.getter(v43);
    v44 = *(void (**)(char *, uint64_t))(v99 + 8);
    v89 = v20;
    v45 = v102;
    v87 = v44;
    v44(v20, v102);
    Calendar.dateComponents(_:from:)(v39, v18);
    v46 = swift_bridgeObjectRelease(v39);
    v47 = v107;
    v99 = *((_QWORD *)v108 + 1);
    ((void (*)(char *, uint64_t, __n128))v99)(v18, v107, v46);
    v48 = v101;
    v49 = *(void (**)(_QWORD, _QWORD))(v100 + 8);
    v49(v23, v101);
    DateComponents.day.setter(1, 0);
    v51 = v103;
    v50 = v104;
    v52 = v105;
    (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, enum case for Calendar.Identifier.gregorian(_:), v105);
    Calendar.init(identifier:)(v51);
    v53 = (*(double (**)(char *, uint64_t))(v50 + 8))(v51, v52);
    v54 = v109;
    Calendar.date(from:)(v28, v53);
    v49(v23, v48);
    v55 = v28;
    if (_s7Weather24LocationCompositionStateOwet_0(v54, 1, v47) == 1)
    {
      (*(void (**)(char *, uint64_t))(v94 + 8))(v28, v95);
      sub_100021A14(v109, (uint64_t *)&unk_100BD35A0);
      return;
    }
    v56 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v108 + 4))(v98, v109, v47);
    v57 = Date.timeIntervalSince1970.getter(v56) * 1000.0;
    if ((~*(_QWORD *)&v57 & 0x7FF0000000000000) != 0)
    {
      if (v57 > -9.22337204e18)
      {
        if (v57 < 9.22337204e18)
        {
          v58 = (uint64_t)v57;
          v59 = v40[9];
          v60 = v40[10];
          sub_1000DB418(v88, v59);
          v61 = v89;
          v62 = dispatch thunk of IdentityServiceType.identity.getter(v59, v60);
          v63 = UserIdentity.identifier.getter(v62);
          v65 = v64;
          v87(v61, v45);
          v66 = UserData.init(userID:userStartDate:)(v63, v65, v58);
          v109 = v40[4];
          v67 = SessionManager.tracker.getter(v66);
          v68 = sub_1000BA294(&qword_100BCDC68);
          v105 = v68;
          v69 = type metadata accessor for DataEventTrait(0);
          v70 = *(_QWORD *)(v69 - 8);
          v71 = *(unsigned __int8 *)(v70 + 80);
          v72 = (v71 + 32) & ~v71;
          v73 = v72 + *(_QWORD *)(v70 + 72);
          v103 = (char *)(v71 | 7);
          v104 = v73;
          v74 = swift_allocObject(v68, v73, v71 | 7);
          v102 = xmmword_10097CA50;
          *(_OWORD *)(v74 + 16) = xmmword_10097CA50;
          v75 = enum case for DataEventTrait.unique(_:);
          v101 = *(void (**)(_QWORD, _QWORD, _QWORD))(v70 + 104);
          v101(v74 + v72, enum case for DataEventTrait.unique(_:), v69);
          sub_10000F1C8(&qword_100BD66F0, (uint64_t (*)(uint64_t))&type metadata accessor for UserData);
          v77 = v76;
          v108 = v55;
          v78 = v106;
          v79 = v91;
          Tracker.push<A>(data:traits:file:line:)(v106, v74, 0xD000000000000065, 0x80000001009FA420, 484, v91, v76);
          swift_release(v67);
          v80 = swift_bridgeObjectRelease(v74);
          v81 = v90;
          v82 = v96;
          (*(void (**)(char *, char *, uint64_t, __n128))(v90 + 16))(v96, v78, v79, v80);
          v83 = v92;
          SessionData.init(key:data:)(0x6174614472657375, 0xE800000000000000, v82, v79, v77);
          v84 = swift_allocObject(v105, v104, v103);
          *(_OWORD *)(v84 + 16) = v102;
          v101(v84 + v72, v75, v69);
          SessionManager.push<A>(_:traits:file:line:)(v83, v84, 0xD000000000000065, 0x80000001009FA420, 486, v79, v77);
          v85 = swift_bridgeObjectRelease(v84);
          (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v83, v97, v85);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v106, v79);
          ((void (*)(char *, uint64_t))v99)(v98, v107);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v108, v95);
          return;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t sub_100047BB4(char a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[3];
  id v42;

  v4 = v3;
  v39 = a2;
  v7 = sub_1000BA294(&qword_100BC3068);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BE1FE8);
  v36 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BE1FF0);
  v14 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  v38 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a3;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112)) = &_swiftEmptySetSingleton;
  swift_beginAccess(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), v41, 33, 0);
  v40 = a1;
  Published.init(initialValue:)(&v40, &type metadata for Bool);
  swift_endAccess(v41);
  LOBYTE(v41[0]) = a1;
  v17 = sub_1000BA294(&qword_100BE1FF8);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = CurrentValueSubject.init(_:)(v41);
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104)) = v18;
  v41[0] = v18;
  v19 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v19);
  v20 = sub_1000A0794(0, (unint64_t *)&qword_100BC3088, NSRunLoop_ptr);
  sub_10007AB60((uint64_t)&unk_100BE2000);
  v22 = v21;
  v23 = sub_1001203C8();
  v24 = swift_retain();
  Publisher.debounce<A>(for:scheduler:options:)(v39, &v42, v9, v17, v20, v22, v23, v24);
  sub_100021A14((uint64_t)v9, &qword_100BC3068);
  swift_release(v41[0]);
  sub_10007AB60((uint64_t)&unk_100BE2008);
  Publisher.dropFirst(_:)(1, v10, v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v10);
  v26 = swift_allocObject(&unk_100B73C88, 24, 7);
  swift_weakInit(v26 + 16, v4);
  sub_10007AB60((uint64_t)&unk_100BE2010);
  v28 = v27;
  v29 = swift_retain();
  v30 = v37;
  v31 = Publisher<>.sink(receiveValue:)(sub_1001226A4, v26, v37, v28, v29);
  swift_release(v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v30);
  swift_release(v26);
  v32 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  swift_beginAccess(v32, v41, 33, 0);
  AnyCancellable.store(in:)(v32);
  swift_endAccess(v41);
  swift_release(v31);

  v33 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v39, v33);
  return v4;
}

void sub_100047F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[3];
  uint64_t v114;
  uint64_t v115;

  v2 = v1;
  v100 = a1;
  v101 = type metadata accessor for WeatherDataAction(0);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BC3620);
  v5 = __chkstk_darwin(v4);
  v103 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v108 = (uint64_t)&v98 - v7;
  v8 = type metadata accessor for CurrentWeather(0);
  v105 = *(_QWORD *)(v8 - 8);
  v106 = v8;
  __chkstk_darwin(v8);
  v104 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v10);
  v110 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC3380);
  __chkstk_darwin(v12);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BC3460);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v112 = (uint64_t)&v98 - v19;
  v20 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v20);
  v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = __chkstk_darwin(v26);
  v109 = (uint64_t)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v30 = (char *)&v98 - v29;
  v111 = type metadata accessor for BannerStateComputer(0);
  v31 = *(int *)(v111 + 20);
  sub_100080C0C(*(_QWORD *)(v2 + v31) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v25, type metadata accessor for LocationsState);
  sub_100037768((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_100C0D170);
  sub_1000215BC((uint64_t)v25, type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v26) == 1)
  {
    sub_100021A14((uint64_t)v22, (uint64_t *)&unk_100C0D170);
    return;
  }
  v107 = v30;
  sub_10007802C((uint64_t)v22, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  v33 = static Location.currentLocationID.getter(v32);
  v35 = v34;
  v98 = v31;
  v36 = *(_QWORD *)(*(_QWORD *)(v2 + v31) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v35);
  sub_1000EED10(v33, v35, v36);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v36);
  v37 = type metadata accessor for LocationWeatherDataState(0);
  v38 = v2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v37) == 1)
  {
    sub_100021A14((uint64_t)v14, &qword_100BC3380);
    v39 = type metadata accessor for WeatherData(0);
    v40 = v112;
    _s7Weather24LocationCompositionStateOwst_0(v112, 1, 1, v39);
  }
  else
  {
    v40 = v112;
    sub_1000EADE8();
    sub_1000215BC((uint64_t)v14, type metadata accessor for LocationWeatherDataState);
  }
  v41 = (uint64_t)v110;
  sub_100037768(v40, (uint64_t)v18, &qword_100BC3460);
  v42 = type metadata accessor for WeatherData(0);
  v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v42);
  if ((_DWORD)v43 == 1)
  {
    sub_100021A14((uint64_t)v18, &qword_100BC3460);
    v44 = 1;
  }
  else
  {
    v45 = v104;
    WeatherDataModel.currentWeather.getter(v43);
    sub_1000215BC((uint64_t)v18, type metadata accessor for WeatherData);
    CurrentWeather.date.getter(v46);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v45, v106);
    v44 = 0;
  }
  v47 = type metadata accessor for Date(0);
  _s7Weather24LocationCompositionStateOwst_0(v41, v44, 1, v47);
  v48 = (uint64_t)v107;
  v49 = v109;
  sub_100080C0C((uint64_t)v107, v109, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v49, v26);
  v99 = v38;
  if (EnumCaseMultiPayload == 2)
  {
    if (qword_100BC24E0 != -1)
      swift_once(&qword_100BC24E0, sub_1001596E4);
    v58 = type metadata accessor for Logger(0);
    sub_1000AECD4(v58, (uint64_t)qword_100CAF288);
    v59 = swift_bridgeObjectRetain_n(v35, 2);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = swift_slowAlloc(22, -1);
      v63 = swift_slowAlloc(32, -1);
      v113[0] = v63;
      *(_DWORD *)v62 = 141558275;
      v114 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      *(_WORD *)(v62 + 12) = 2081;
      swift_bridgeObjectRetain(v35);
      v114 = sub_1000CE1C8(v33, v35, v113);
      v48 = (uint64_t)v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      swift_bridgeObjectRelease_n(v35, 3);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Restoring uncertain location banner (loaded from cache). ID=%{private,mask.hash}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v63, 1);
      v64 = v63;
      v40 = v112;
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v35, 2);
    }
    v72 = type metadata accessor for ContentStatusBanner(0);
    v73 = v108;
    sub_100037768(v41, v108 + *(int *)(v72 + 24), (uint64_t *)&unk_100BD35A0);
    v74 = 4;
    goto LABEL_28;
  }
  if (EnumCaseMultiPayload == 1)
  {
    if (qword_100BC24E0 != -1)
      swift_once(&qword_100BC24E0, sub_1001596E4);
    v51 = type metadata accessor for Logger(0);
    sub_1000AECD4(v51, (uint64_t)qword_100CAF288);
    v52 = swift_bridgeObjectRetain_n(v35, 2);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc(22, -1);
      v56 = swift_slowAlloc(32, -1);
      v113[0] = v56;
      *(_DWORD *)v55 = 141558275;
      v114 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      *(_WORD *)(v55 + 12) = 2081;
      swift_bridgeObjectRetain(v35);
      v114 = sub_1000CE1C8(v33, v35, v113);
      v48 = (uint64_t)v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      swift_bridgeObjectRelease_n(v35, 3);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Restoring old location banner (loaded from cache). ID=%{private,mask.hash}s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy(v56, 1);
      v57 = v56;
      v40 = v112;
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v35, 2);
    }
    v72 = type metadata accessor for ContentStatusBanner(0);
    v73 = v108;
    sub_100037768(v41, v108 + *(int *)(v72 + 24), (uint64_t *)&unk_100BD35A0);
    v74 = 5;
LABEL_28:
    *(_BYTE *)v73 = v74;
    goto LABEL_29;
  }
  if (*(_BYTE *)(v38 + *(int *)(v111 + 28)) == 1)
  {
    if (qword_100BC24E0 != -1)
      swift_once(&qword_100BC24E0, sub_1001596E4);
    v65 = type metadata accessor for Logger(0);
    sub_1000AECD4(v65, (uint64_t)qword_100CAF288);
    v66 = swift_bridgeObjectRetain_n(v35, 2);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc(22, -1);
      v70 = swift_slowAlloc(32, -1);
      v113[0] = v70;
      *(_DWORD *)v69 = 141558275;
      v114 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      *(_WORD *)(v69 + 12) = 2081;
      swift_bridgeObjectRetain(v35);
      v114 = sub_1000CE1C8(v33, v35, v113);
      v48 = (uint64_t)v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      swift_bridgeObjectRelease_n(v35, 3);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Showing no connection banner. ID=%{private,mask.hash}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v70, 1);
      v71 = v70;
      v40 = v112;
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v35, 2);
    }
    v85 = *(_QWORD *)(v99 + v98) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess(v85, v113, 0, 0);
    if (*(_BYTE *)(v85 + *(int *)(type metadata accessor for EnvironmentState(0) + 60)))
      v86 = 2;
    else
      v86 = 1;
    v87 = type metadata accessor for ContentStatusBanner(0);
    v88 = (uint64_t)v103;
    sub_100037768(v41, (uint64_t)&v103[*(int *)(v87 + 24)], (uint64_t *)&unk_100BD35A0);
    *(_BYTE *)v88 = v86;
    *(_QWORD *)(v88 + 8) = v33;
    *(_QWORD *)(v88 + 16) = v35;
    _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, v87);
    swift_bridgeObjectRetain(v35);
    v75 = v88;
    goto LABEL_30;
  }
  v76 = v102;
  sub_100080C0C(v100, v102, type metadata accessor for WeatherDataAction);
  if (swift_getEnumCaseMultiPayload(v76, v101) != 2)
  {
    sub_1000215BC(v76, type metadata accessor for WeatherDataAction);
    if (qword_100BC24E0 != -1)
      swift_once(&qword_100BC24E0, sub_1001596E4);
    v89 = type metadata accessor for Logger(0);
    sub_1000AECD4(v89, (uint64_t)qword_100CAF288);
    v90 = swift_bridgeObjectRetain_n(v35, 2);
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = swift_slowAlloc(22, -1);
      v94 = swift_slowAlloc(32, -1);
      v113[0] = v94;
      *(_DWORD *)v93 = 141558275;
      v114 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      *(_WORD *)(v93 + 12) = 2081;
      swift_bridgeObjectRetain(v35);
      v114 = sub_1000CE1C8(v33, v35, v113);
      v48 = (uint64_t)v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      swift_bridgeObjectRelease_n(v35, 3);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Removing banner (successfully loaded new data). ID=%{private,mask.hash}s", (uint8_t *)v93, 0x16u);
      swift_arrayDestroy(v94, 1);
      v95 = v94;
      v40 = v112;
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v93, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v35, 2);
    }
    v96 = type metadata accessor for ContentStatusBanner(0);
    v97 = v108;
    _s7Weather24LocationCompositionStateOwst_0(v108, 1, 1, v96);
    v75 = v97;
    goto LABEL_30;
  }
  v77 = *(_QWORD *)(v76 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v76 + 24));
  swift_bridgeObjectRelease(v77);
  if (qword_100BC24E0 != -1)
    swift_once(&qword_100BC24E0, sub_1001596E4);
  v78 = type metadata accessor for Logger(0);
  sub_1000AECD4(v78, (uint64_t)qword_100CAF288);
  v79 = swift_bridgeObjectRetain_n(v35, 2);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = swift_slowAlloc(22, -1);
    v83 = swift_slowAlloc(32, -1);
    v113[0] = v83;
    *(_DWORD *)v82 = 141558275;
    v114 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    *(_WORD *)(v82 + 12) = 2081;
    swift_bridgeObjectRetain(v35);
    v114 = sub_1000CE1C8(v33, v35, v113);
    v48 = (uint64_t)v107;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    swift_bridgeObjectRelease_n(v35, 3);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Showing weather unavailable banner (failed loading new data). ID=%{private,mask.hash}s", (uint8_t *)v82, 0x16u);
    swift_arrayDestroy(v83, 1);
    v84 = v83;
    v40 = v112;
    swift_slowDealloc(v84, -1, -1);
    swift_slowDealloc(v82, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v35, 2);
  }
  v72 = type metadata accessor for ContentStatusBanner(0);
  v73 = v108;
  sub_100037768(v41, v108 + *(int *)(v72 + 24), (uint64_t *)&unk_100BD35A0);
  *(_BYTE *)v73 = 0;
LABEL_29:
  *(_QWORD *)(v73 + 8) = v33;
  *(_QWORD *)(v73 + 16) = v35;
  _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v72);
  swift_bridgeObjectRetain(v35);
  v75 = v73;
LABEL_30:
  sub_1000F8E2C(v75, v33, v35);
  sub_100021A14(v41, (uint64_t *)&unk_100BD35A0);
  sub_100021A14(v40, &qword_100BC3460);
  sub_1000215BC(v48, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  sub_1000215BC(v49, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
}

uint64_t sub_100048E38(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36[16];
  uint64_t v37;
  _QWORD **v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _BYTE v42[24];
  uint64_t v43;
  _QWORD *v44;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = _swiftEmptyArrayStorage;
  v11 = sub_10007C080(a1);
  v37 = v3;
  v38 = &v44;
  v39 = a3;
  v40 = a2;
  sub_10007808C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, __n128))sub_1000781AC, (uint64_t)v36, (uint64_t)v11);
  v13 = v12;
  static Logger.geocode.getter(v12);
  swift_bridgeObjectRetain(v11);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(58, -1);
    v34 = v7;
    v18 = v17;
    v33 = swift_slowAlloc(32, -1);
    v43 = v33;
    *(_DWORD *)v18 = 134350339;
    v35 = v13;
    swift_beginAccess(&v44, v42, 0, 0);
    v19 = v44;
    v41 = v44[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    *(_WORD *)(v18 + 12) = 2050;
    v32 = v8;
    v20 = v11[2];
    swift_bridgeObjectRelease(v11);
    v41 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v18 + 22) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    *(_WORD *)(v18 + 32) = 1025;
    LODWORD(v41) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, (char *)&v41 + 4);
    *(_WORD *)(v18 + 38) = 2160;
    v41 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    *(_WORD *)(v18 + 48) = 2081;
    v41 = (uint64_t)v19;
    swift_bridgeObjectRetain(v19);
    v21 = sub_1000BA294(&qword_100C156C8);
    v22 = String.init<A>(reflecting:)(&v41, v21);
    v24 = v23;
    v41 = sub_1000CE1C8(v22, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    v25 = v24;
    v13 = v35;
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "About to reverse geocode locations from the sample. ratio=(%{public}ld/%{public}ld, invalidateLocations=%{BOOL,private,mask.hash}d, locations=%{private,mask.hash}s", (uint8_t *)v18, 0x3Au);
    v26 = v33;
    swift_arrayDestroy(v33, 1);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v27 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n(v11, 2);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v28 = (void *)zalgo.getter(v27);
  v29 = type metadata accessor for SavedLocation(0);
  v30 = when<A>(on:_:)(v28, v13, v29);
  swift_bridgeObjectRelease(v13);

  swift_bridgeObjectRelease(v44);
  return v30;
}

void sub_10004918C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t a1)@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD);
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, _QWORD, uint64_t);
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  int v119;
  uint8_t *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  _QWORD v152[3];
  uint64_t v153;
  unsigned int v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  void (*v158)(uint64_t, _QWORD, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t (*v161)(uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t (*v171)(uint64_t);
  uint64_t v172;
  uint8_t *v173;
  NSObject *v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;

  v167 = a2;
  v170 = a1;
  v178 = type metadata accessor for NewsArticle(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v182 = (uint64_t *)v6;
  v7 = type metadata accessor for Article(0);
  v180 = *(_QWORD *)(v7 - 8);
  v181 = v7;
  __chkstk_darwin(v7);
  sub_100088FDC();
  v179 = v8;
  sub_1000BA294(&qword_100BE4BD8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  v164 = v10;
  sub_10009D2A4();
  __chkstk_darwin(v11);
  v166 = (uint64_t)v152 - v12;
  v183 = type metadata accessor for ArticleModel(0);
  v175 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  sub_1000986FC();
  v168 = v13;
  sub_10009D2A4();
  __chkstk_darwin(v14);
  sub_1000860D0();
  v172 = v15;
  sub_10009D2A4();
  __chkstk_darwin(v16);
  sub_1000860D0();
  v176 = (_QWORD *)v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  sub_1000860D0();
  v174 = v19;
  sub_10009D2A4();
  __chkstk_darwin(v20);
  sub_1000860D0();
  v177 = (_QWORD *)v21;
  sub_10009D2A4();
  __chkstk_darwin(v22);
  sub_1000860D0();
  v173 = v23;
  sub_10009D2A4();
  __chkstk_darwin(v24);
  sub_1000860D0();
  v171 = v25;
  sub_10009D2A4();
  __chkstk_darwin(v26);
  sub_1000860D0();
  v162 = v27;
  sub_10009D2A4();
  __chkstk_darwin(v28);
  v30 = (char *)v152 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)v152 - v32;
  __chkstk_darwin(v34);
  v165 = (uint64_t)v152 - v35;
  sub_1000BA294(&qword_100BE4BE0);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_100098728();
  v39 = v38 - v37;
  v40 = type metadata accessor for NewsComponentPosition(0);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100098728();
  v44 = v43 - v42;
  v45 = type metadata accessor for NewsConfiguration(0);
  v46 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  sub_100098728();
  v49 = v48 - v47;
  v169 = v3;
  v50 = sub_100488334();
  v51 = NewsConfiguration.enabled.getter(v50);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v45);
  if ((v51 & 1) != 0)
  {
    v163 = v40;
    v52 = (uint64_t)v174;
    if (!*(_QWORD *)(v167 + 16))
      goto LABEL_5;
    sub_1004883E4(v170, v167, v39);
    v53 = v163;
    if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v163) == 1)
    {
      sub_100021A14(v39, &qword_100BE4BE0);
LABEL_5:
      v54 = sub_1000BA294(&qword_100BE4BE8);
      v55 = type metadata accessor for ArticlePlacementLocation(0);
      v56 = *(_QWORD *)(v55 - 8);
      v57 = *(unsigned __int8 *)(v56 + 80);
      v58 = (v57 + 32) & ~v57;
      v155 = *(_QWORD *)(v56 + 72);
      v59 = v58 + v155;
      v160 = v54;
      v157 = v57 | 7;
      v60 = swift_allocObject(v54, v58 + v155, v57 | 7);
      v156 = xmmword_10097CA50;
      *(_OWORD *)(v60 + 16) = xmmword_10097CA50;
      v159 = v58;
      v61 = *(void (**)(_QWORD))(v56 + 104);
      v154 = enum case for ArticlePlacementLocation.severe(_:);
      v167 = v55;
      v158 = (void (*)(uint64_t, _QWORD, uint64_t))v61;
      v61(v60 + v58);
      v62 = sub_10009D608((_QWORD *)v60);
      v63 = v62;
      v64 = v62[2];
      v161 = a3;
      if (v64)
      {
        v152[2] = v60;
        v153 = v59;
        sub_1000DDB04();
        v152[1] = v63;
        v66 = (uint64_t)v63 + v65;
        v68 = *(_QWORD *)(v67 + 72);
        while (1)
        {
          sub_100080C0C(v66, (uint64_t)v33, type metadata accessor for ArticleModel);
          sub_100080C0C((uint64_t)v33, (uint64_t)v30, type metadata accessor for ArticleModel);
          if (sub_100098D80((uint64_t)v30) == 1)
          {
            v69 = (uint64_t)v182;
            a3 = type metadata accessor for NewsArticle;
            sub_1000C0CEC((uint64_t)v30, (uint64_t)v182);
            sub_1000D9E08();
            sub_100079F9C(v69);
            v52 = *(_QWORD *)(v56 + 16);
          }
          else
          {
            sub_1000C49A8();
            v71 = Article.phenomena.getter(v70);
            sub_1000DAF34(*((uint64_t (**)(uint64_t, uint64_t))a3 + 1));
            v52 = *(_QWORD *)(v71 + 16);
          }
          swift_bridgeObjectRelease();
          if (!v52)
            break;
          sub_1000215BC((uint64_t)v33, type metadata accessor for ArticleModel);
          v66 += v68;
          if (!--v64)
          {
            sub_1000CCD94();
            v73 = v166;
            goto LABEL_17;
          }
        }
        v73 = v166;
        sub_10007802C((uint64_t)v33, v166, type metadata accessor for ArticleModel);
        sub_1000CCD94();
LABEL_17:
        v59 = v153;
      }
      else
      {
        v68 = (unint64_t)a3;
        v72 = 1;
        v73 = v166;
      }
      sub_1000DF66C((uint64_t)v62, v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v77 = _s7Weather24LocationCompositionStateOwet_0(v73, 1, (uint64_t)a3);
      v78 = (uint64_t)v173;
      if (v77 == 1)
      {
        sub_100021A14(v73, &qword_100BE4BD8);
        v79 = sub_1000CD788(v160, v59);
        *(_OWORD *)(v79 + 16) = v156;
        v80 = enum case for ArticlePlacementLocation.trend(_:);
        v158(v79 + v159, enum case for ArticlePlacementLocation.trend(_:), v167);
        v81 = sub_10009D608((_QWORD *)v79);
        v82 = (uint64_t)v81;
        v83 = v81[2];
        if (v83)
        {
          LODWORD(v166) = v80;
          sub_1000DDB04();
          v165 = v82;
          v85 = v82 + v84;
          v68 = *(_QWORD *)(v86 + 72);
          a3 = v171;
          while (1)
          {
            sub_100080C0C(v85, (uint64_t)a3, type metadata accessor for ArticleModel);
            sub_100080C0C((uint64_t)a3, v78, type metadata accessor for ArticleModel);
            if (sub_100098D80(v78) == 1)
            {
              v87 = (uint64_t)v182;
              sub_10007802C(v78, (uint64_t)v182, type metadata accessor for NewsArticle);
              sub_1000D9E08();
              sub_1000215BC(v87, type metadata accessor for NewsArticle);
              v52 = *(_QWORD *)(v73 + 16);
            }
            else
            {
              sub_1000C49A8();
              v89 = Article.phenomena.getter(v88);
              v90 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)a3 + 1);
              a3 = v171;
              sub_1000DAF34(v90);
              v52 = *(_QWORD *)(v89 + 16);
              v78 = (uint64_t)v173;
            }
            swift_bridgeObjectRelease();
            if (!v52)
              break;
            sub_1000D8FFC();
            v85 += v68;
            if (!--v83)
            {
              sub_1000CCD94();
              v92 = v164;
              goto LABEL_30;
            }
          }
          v92 = v164;
          sub_10007802C((uint64_t)a3, v164, type metadata accessor for ArticleModel);
          sub_1000CCD94();
LABEL_30:
          v80 = v166;
        }
        else
        {
          v91 = 1;
          v92 = v164;
        }
        sub_1000DF66C((uint64_t)v81, v91);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (_s7Weather24LocationCompositionStateOwet_0(v92, 1, (uint64_t)a3) == 1)
        {
          sub_100021A14(v92, &qword_100BE4BD8);
          v94 = v155;
          v95 = v159;
          v96 = sub_1000CD788(v160, v159 + 2 * v155);
          *(_OWORD *)(v96 + 16) = xmmword_10097DA20;
          v97 = v96 + v95;
          v98 = v167;
          v99 = v158;
          v158(v97, v80, v167);
          v99(v97 + v94, v154, v98);
          v100 = sub_10009D608((_QWORD *)v96);
          swift_setDeallocating(v96);
          sub_10011EA40();
          v101 = _swiftEmptyArrayStorage;
          v185 = _swiftEmptyArrayStorage;
          v102 = v100[2];
          if (v102)
          {
            v103 = 0;
            while (v103 < v100[2])
            {
              v104 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
              v105 = *(_QWORD *)(v175 + 72);
              v106 = (uint64_t)v177;
              sub_1000BCF30((uint64_t)v100 + v104 + v105 * v103, (uint64_t)v177);
              sub_1000BCF30(v106, v52);
              if (sub_100098D80(v52) == 1)
              {
                v107 = (uint64_t)v182;
                v68 = (unint64_t)type metadata accessor for NewsArticle;
                sub_10007802C(v52, (uint64_t)v182, type metadata accessor for NewsArticle);
                v108 = *(_QWORD *)(v107 + *(int *)(v178 + 44));
                swift_bridgeObjectRetain();
                sub_1000215BC(v107, type metadata accessor for NewsArticle);
                v109 = *(_QWORD *)(v108 + 16);
              }
              else
              {
                v110 = v179;
                v68 = v180;
                v111 = v181;
                v112 = (*(double (**)(uint64_t, uint64_t, uint64_t))(v180 + 32))(v179, v52, v181);
                v113 = Article.phenomena.getter(v112);
                (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v110, v111);
                v109 = *(_QWORD *)(v113 + 16);
                v52 = (uint64_t)v174;
              }
              swift_bridgeObjectRelease();
              if (v109)
              {
                sub_1000C0CEC((uint64_t)v177, (uint64_t)v176);
                v114 = v185;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_100605C2C();
                  v114 = v185;
                }
                v68 = v114[2];
                if (v68 >= v114[3] >> 1)
                {
                  sub_100605C2C();
                  v114 = v185;
                }
                v114[2] = v68 + 1;
                sub_1000C0CEC((uint64_t)v176, (uint64_t)v114 + v104 + v68 * v105);
              }
              else
              {
                sub_100079F9C((uint64_t)v177);
              }
              if (v102 == ++v103)
              {
                v101 = v185;
                v68 = (unint64_t)v161;
                goto LABEL_49;
              }
            }
            __break(1u);
          }
          else
          {
LABEL_49:
            swift_bridgeObjectRelease();
            v115 = &qword_100BC2000;
            if (v101[2])
            {
              if (qword_100BC24D0 != -1)
                swift_once(&qword_100BC24D0, sub_100159668);
              v116 = type metadata accessor for Logger(0);
              sub_1000AECD4(v116, (uint64_t)qword_100CAF258);
              swift_retain();
              v118 = Logger.logObject.getter(v117);
              v119 = static os_log_type_t.default.getter(v118);
              if (os_log_type_enabled(v118, (os_log_type_t)v119))
              {
                LODWORD(v178) = v119;
                v120 = (uint8_t *)sub_100098710(12);
                v177 = (_QWORD *)sub_100098710(32);
                v185 = v177;
                *(_DWORD *)v120 = 136315138;
                v121 = v101[2];
                v122 = _swiftEmptyArrayStorage;
                if (v121)
                {
                  v173 = v120;
                  v174 = v118;
                  v184 = _swiftEmptyArrayStorage;
                  sub_10009AAB0();
                  sub_1000DDB04();
                  v176 = v101;
                  v124 = (uint64_t)v101 + v123;
                  v126 = *(_QWORD *)(v125 + 72);
                  do
                  {
                    v127 = v172;
                    sub_1000BD4C0(v124);
                    v128 = v127;
                    v129 = v168;
                    sub_1000BD4C0(v128);
                    if (sub_100098D80(v129) == 1)
                    {
                      v130 = v129;
                      v131 = v182;
                      sub_10007802C(v130, (uint64_t)v182, type metadata accessor for NewsArticle);
                      v133 = *v131;
                      v132 = v131[1];
                      swift_bridgeObjectRetain();
                      sub_1000D8FFC();
                    }
                    else
                    {
                      v134 = v179;
                      v135 = v180;
                      v136 = v129;
                      v137 = v181;
                      v138.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(v180 + 32))(v179, v136, v181);
                      v133 = Article.id.getter(v138);
                      v132 = v139;
                      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v137);
                    }
                    sub_1000215BC(v172, type metadata accessor for ArticleModel);
                    v122 = v184;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_10009AAB0();
                      v122 = v184;
                    }
                    v140 = v122[2];
                    if (v140 >= v122[3] >> 1)
                    {
                      sub_10009AAB0();
                      v122 = v184;
                    }
                    v122[2] = v140 + 1;
                    v141 = &v122[2 * v140];
                    v141[4] = v133;
                    v141[5] = v132;
                    v124 += v126;
                    --v121;
                  }
                  while (v121);
                  v142 = (unint64_t)v161;
                  v115 = &qword_100BC2000;
                  v120 = v173;
                  v118 = v174;
                }
                else
                {
                  v142 = v68;
                }
                v143 = Array.description.getter(v122, &type metadata for String);
                v145 = v144;
                swift_bridgeObjectRelease();
                v184 = (_QWORD *)sub_1000CE1C8(v143, v145, (uint64_t *)&v185);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185);
                sub_1000CFFC0();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v118, (os_log_type_t)v178, "NewsArticleComponentFactory - Articles with phenomena but no matching alert are hidden. articles=%s", v120, 0xCu);
                v146 = (uint64_t)v177;
                swift_arrayDestroy(v177, 1);
                sub_1000986F0(v146);
                sub_1000986F0((uint64_t)v120);

                v68 = v142;
              }
              else
              {

                sub_1000CFFC0();
              }
            }
            else
            {
              swift_release();
            }
            if (v115[154] == -1)
              goto LABEL_69;
          }
          swift_once(&qword_100BC24D0, sub_100159668);
LABEL_69:
          v147 = type metadata accessor for Logger(0);
          v148 = sub_1000AECD4(v147, (uint64_t)qword_100CAF258);
          v149 = Logger.logObject.getter(v148);
          v150 = static os_log_type_t.default.getter(v149);
          if (os_log_type_enabled(v149, v150))
          {
            v151 = (uint8_t *)sub_100098710(2);
            *(_WORD *)v151 = 0;
            _os_log_impl((void *)&_mh_execute_header, v149, v150, "NewsArticleComponentFactory - No eligible articles found", v151, 2u);
            sub_1000986F0((uint64_t)v151);
          }

          v74 = v68;
          v75 = 1;
          goto LABEL_72;
        }
        v93 = v162;
        sub_1000C0CEC(v92, v162);
        sub_10048973C(v93, v68);
      }
      else
      {
        v93 = v165;
        sub_1000C0CEC(v73, v165);
        sub_10048937C(v93, v68);
      }
      sub_100079F9C(v93);
      v74 = v68;
      v75 = 0;
LABEL_72:
      v76 = v163;
      goto LABEL_73;
    }
    sub_1000C0CEC(v39, v44);
    sub_1000C0CEC(v44, (uint64_t)a3);
    v74 = (uint64_t)a3;
    v75 = 0;
    v76 = v53;
  }
  else
  {
    v74 = (uint64_t)a3;
    v75 = 1;
    v76 = v40;
  }
LABEL_73:
  _s7Weather24LocationCompositionStateOwst_0(v74, v75, 1, v76);
  sub_100098640();
}

#error "100049F98: call analysis failed (funcsize=62)"

void sub_10004A000(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  sub_1000BA294(&qword_100C12840);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = sub_10003BC60();
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100079FBC();
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = (void *)UIApplication.maybeWindow.getter();

  if (v10)
  {
    sub_10003C818(v10, a1);
  }
  else
  {
    if (qword_100BC2420 != -1)
      swift_once(&qword_100BC2420, sub_10015967C);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_1000AECD4(v11, (uint64_t)qword_100CAF058);
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.error.getter(v13, v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "DisplayMetrics.expectedWindowMetrics used fallback window display metrics.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v18 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v19 = sub_1000297C8();

    v20 = objc_msgSend(v17, "horizontalSizeClass");
    DynamicTypeSize.init(_:)(objc_msgSend(v17, "preferredContentSizeCategory"));
    if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v1, enum case for DynamicTypeSize.medium(_:), v7);
      sub_1008E6C10(v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v1, v6, v7);
    }
    *(_QWORD *)a1 = v19;
    *(_QWORD *)(a1 + 8) = v20;
    *(_WORD *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 18) = 0;
    v21 = sub_10009E908();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1 + *(int *)(v21 + 36), v1, v7);

  }
}

uint64_t sub_10004A2B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void sub_10004A2CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

uint64_t sub_10004A2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 416));
}

void sub_10004A2E0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1000215BC(v2, a2);
}

uint64_t sub_10004A300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 112) = v5;
  return dispatch thunk of Decoder.container<A>(keyedBy:)(a1, a1, a3, v3, v4);
}

void sub_10004A31C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_10007802C(a1, a2, v2);
}

void sub_10004A324(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  Swift::UInt v10;

  Hasher._combine(_:)(v10);
}

uint64_t sub_10004A330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_10004A33C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_10004A344()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1176) + 8))(v1, *(_QWORD *)(v0 + 1184));
}

void sub_10004A358(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_100037768(a1, v1, v2);
}

uint64_t sub_10004A364()
{
  return type metadata accessor for NewsArticleComponentContentViewModel(0);
}

uint64_t sub_10004A36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getTupleTypeMetadata2(a1, a2, a3, 0, 0);
}

uint64_t sub_10004A378()
{
  return type metadata accessor for LocationRowButtonStyle(0);
}

uint64_t sub_10004A380(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, a1);
}

double sub_10004A38C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t sub_10004A3BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 16) = v1;
  return result;
}

void sub_10004A3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_10007C77C(v0, v1, v2);
}

unint64_t sub_10004A3F4()
{
  return sub_100665844();
}

uint64_t sub_10004A3FC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

void sub_10004A408()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 20) + 24) = (v0 - 1);
}

uint64_t sub_10004A428()
{
  return type metadata accessor for WeatherDescription(0);
}

uint64_t sub_10004A450()
{
  uint64_t v0;
  uint64_t v1;

  return dispatch thunk of RawRepresentable.rawValue.getter(v0, v1);
}

double sub_10004A45C()
{
  return 10.0;
}

uint64_t initializeWithCopy for FullscreenMapPresentationSourceViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  sub_10008D47C(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_10004A4E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  size_t v9;
  void *v10;
  const void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;

  v6 = type metadata accessor for ContentStatusBanner(0);
  v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (*(_QWORD *)(a2 + 16) >= 2uLL)
      {
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v15 = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v15;
        swift_bridgeObjectRetain(v15);
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      }
      v16 = *(int *)(v6 + 24);
      v17 = (void *)(a1 + v16);
      v18 = (const void *)(a2 + v16);
      v19 = type metadata accessor for Date(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        v20 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      v21 = a1;
      v22 = v6;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000BF3B4();
LABEL_7:
    v9 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BC3620) - 8) + 64);
    v10 = (void *)a1;
    v11 = (const void *)a2;
LABEL_8:
    memcpy(v10, v11, v9);
    goto LABEL_18;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a2 + 16);
  if (v12 < 2)
  {
    if (v13 >= 2)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v14 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v14;
      swift_bridgeObjectRetain(v14);
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  if (v13 < 2)
  {
    sub_1001A27B4(a1 + 8);
LABEL_40:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_42;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v64 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v64;
  swift_bridgeObjectRetain(v64);
  swift_bridgeObjectRelease(v12);
LABEL_42:
  v65 = *(int *)(v6 + 24);
  v66 = a1 + v65;
  v67 = a2 + v65;
  v68 = type metadata accessor for Date(0);
  v69 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v68);
  v70 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v68);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      v21 = v66;
      v22 = v68;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v22);
      goto LABEL_18;
    }
    goto LABEL_47;
  }
  v71 = *(_QWORD *)(v68 - 8);
  if (v70)
  {
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v66, v68);
LABEL_47:
    v9 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294((uint64_t *)&unk_100BD35A0) - 8) + 64);
    v10 = (void *)v66;
    v11 = (const void *)v67;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 24))(v66, v67, v68);
LABEL_18:
  sub_100094D04((_QWORD *)(a1 + a3[5]), (_QWORD *)(a2 + a3[5]));
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_QWORD *)(v25 + 24);
  v30 = *(_BYTE *)(v25 + 32);
  sub_1000D55E4(*(_QWORD *)v25, v27, v28, v29, v30);
  v31 = *(_QWORD *)v24;
  v32 = *(_QWORD *)(v24 + 8);
  v33 = *(_QWORD *)(v24 + 16);
  v34 = *(_QWORD *)(v24 + 24);
  v35 = *(_BYTE *)(v24 + 32);
  *(_QWORD *)v24 = v26;
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v28;
  *(_QWORD *)(v24 + 24) = v29;
  *(_BYTE *)(v24 + 32) = v30;
  sub_1000D31C4(v31, v32, v33, v34, v35);
  if (a1 != a2)
  {
    v36 = a3[7];
    v37 = a1 + v36;
    v38 = a2 + v36;
    sub_100021A14(a1 + v36, &qword_100BC37E0);
    v39 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
      *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
      *(_BYTE *)(v37 + 17) = *(_BYTE *)(v38 + 17);
      *(_BYTE *)(v37 + 18) = *(_BYTE *)(v38 + 18);
      v40 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v41 = v37 + v40;
      v42 = v38 + v40;
      v43 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      v44 = 1;
    }
    else
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;
      swift_retain();
      v44 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v39, v44);
  }
  v45 = a3[8];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  v48 = (_OWORD *)(a1 + v45 + 8);
  v49 = *(_QWORD *)(a1 + v45 + 16);
  v50 = *(_QWORD *)(v47 + 16);
  if (v49 < 2)
  {
    if (v50 >= 2)
    {
      *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
      v51 = *(_QWORD *)(v47 + 16);
      *(_QWORD *)(v46 + 16) = v51;
      swift_bridgeObjectRetain(v51);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  if (v50 < 2)
  {
    sub_1001A27B4((uint64_t)v48);
LABEL_28:
    *v48 = *(_OWORD *)(v47 + 8);
    goto LABEL_30;
  }
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  v52 = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 16) = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v49);
LABEL_30:
  v53 = *(int *)(v6 + 24);
  v54 = (void *)(v46 + v53);
  v55 = (const void *)(v47 + v53);
  v56 = type metadata accessor for Date(0);
  v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v56);
  v58 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56);
  if (!v57)
  {
    v59 = *(_QWORD *)(v56 - 8);
    if (!v58)
    {
      (*(void (**)(void *, const void *, uint64_t))(v59 + 24))(v54, v55, v56);
      goto LABEL_36;
    }
    (*(void (**)(void *, uint64_t))(v59 + 8))(v54, v56);
    goto LABEL_35;
  }
  if (v58)
  {
LABEL_35:
    v60 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
LABEL_36:
  v61 = *(int *)(sub_1000BA294(&qword_100BEE180) + 28);
  v62 = *(_QWORD *)(v46 + v61);
  *(_QWORD *)(v46 + v61) = *(_QWORD *)(v47 + v61);
  swift_retain();
  swift_release(v62);
  return a1;
}

uint64_t initializeWithCopy for LocationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v13 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v13;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = a2 + 56;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v4);
  swift_retain(v5);
  swift_unknownObjectRetain(v13);
  swift_retain(v6);
  v10(a1 + 56, v7, v9);
  v11 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 96, a2 + 96);
  return a1;
}

uint64_t sub_10004AB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;

  v7 = type metadata accessor for Domain(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100098728();
  v11 = v10 - v9;
  v12 = sub_1000B466C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  (*(void (**)(uint64_t, _QWORD))(v16 + 104))(v14 - v13, enum case for Access.protected(_:));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, enum case for Domain.standard(_:), v7);
  v19 = 0;
  v17 = sub_1000BA294(&qword_100BD0228);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  result = Setting.init(_:defaultValue:domain:access:)(a2, a3, &v19, v11, v15);
  *a4 = result;
  return result;
}

uint64_t sub_10004AC18()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  __n128 v14;
  void (*v15)(char *, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  void (*v72)(char *, uint64_t, __n128);
  uint64_t v73;
  unsigned int v74;
  void (*v75)(char *);
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;

  v76 = type metadata accessor for CallbackScope(0);
  v73 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v1 = (char *)&v70 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Scope(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C2974();
  v6 = type metadata accessor for Client(0);
  v9 = sub_1000C2960(v6, v7, v8, (uint64_t)sub_100141E88);
  sub_10009880C();
  v10 = enum case for Scope.singleton(_:);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v11(v5, enum case for Scope.singleton(_:), v2);
  v12 = v11;
  v71 = v11;
  v13 = sub_1000D9DBC();
  swift_release(v13);
  v14 = swift_release(v9);
  v15 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v15(v5, v2, v14);
  v72 = v15;
  sub_1000C2974();
  v16 = sub_1000BA294(&qword_100BE0080);
  v19 = sub_1000BA3CC(v16, v17, v18, (uint64_t)sub_100141754);
  sub_10009880C();
  v12(v5, v10, v2);
  v20 = sub_1000D9DBC();
  swift_release(v20);
  v21 = swift_release(v19);
  v15(v5, v2, v21);
  sub_1000CCD34();
  v22 = v78;
  v23 = v79;
  sub_1000DB418(v77, v78);
  v24 = sub_1000BA294(&qword_100BD13E8);
  v74 = enum case for CallbackScope.any(_:);
  v25 = v73;
  v75 = *(void (**)(char *))(v73 + 104);
  v26 = v76;
  v75(v1);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v24, v1, sub_100141588, 0, v24, v22, v23);
  v73 = *(_QWORD *)(v25 + 8);
  ((void (*)(char *, uint64_t))v73)(v1, v26);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
  sub_1000C2974();
  v27 = type metadata accessor for SessionEventsAndDataCoordinator(0);
  v30 = sub_1000C2960(v27, v28, v29, (uint64_t)sub_1000180DC);
  sub_10009880C();
  v71(v5, enum case for Scope.containerSingleton(_:), v2);
  v31 = Definition.inScope(_:)(v5);
  swift_release(v31);
  v32 = swift_release(v30);
  v72(v5, v2, v32);
  sub_1000E706C();
  RegistrationContainer.register<A>(_:name:factory:)(v27, 0xD000000000000011, 0x80000001009F7050, sub_1000131E4, 0, v27);
  sub_10009880C();
  sub_1000DDA70();
  v33 = sub_1000C4974();
  swift_release(v33);
  sub_10009D330();
  sub_1000DB9B8();
  sub_1000E706C();
  v34 = sub_1000BA294(&qword_100BE0088);
  sub_1000BA3CC(v34, v35, v36, (uint64_t)sub_100141D44);
  sub_10009880C();
  sub_1000DDA70();
  v37 = sub_1000C4974();
  swift_release(v37);
  sub_10009D330();
  sub_1000DB9B8();
  sub_1000E706C();
  v38 = sub_1000BA294(&qword_100BD1400);
  v41 = sub_1000BA3CC(v38, v39, v40, (uint64_t)sub_100141A30);
  swift_release(v41);
  sub_10009880C();
  sub_1000E706C();
  v42 = type metadata accessor for SessionScenePhaseObserver();
  sub_1000C2960(v42, v43, v44, (uint64_t)sub_100141830);
  sub_10009880C();
  sub_1000DDA70();
  v45 = sub_1000C4974();
  swift_release(v45);
  sub_10009D330();
  sub_1000DB9B8();
  ProxyContainer.private.getter(v46);
  RegistrationContainer.lazy(block:)(sub_100141484, 0);
  v47 = sub_10009880C();
  ProxyContainer.callback.getter(v77, v47);
  sub_1000C3A54();
  v48 = sub_1000BA294(&qword_100BE0090);
  v49 = v76;
  v50 = ((uint64_t (*)(char *, _QWORD, uint64_t))v75)(v1, v74, v76);
  sub_1000BC13C(v50, v51, (uint64_t)sub_10014123C);
  ((void (*)(char *, uint64_t))v73)(v1, v49);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
  sub_1000CCD34();
  sub_1000C3A54();
  sub_1000BA294((uint64_t *)&unk_100BD44D8);
  v52 = sub_1000C4960();
  sub_1000BC13C(v52, v53, (uint64_t)sub_1001410EC);
  sub_1000B4544();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
  sub_1000CCD34();
  sub_1000C3A54();
  sub_1000BA294(&qword_100BE0098);
  sub_1000C4960();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v48, v1, sub_100403F2C, 0, v48, v2, v5);
  sub_1000B4544();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
  ProxyContainer.private.getter(v54);
  v55 = sub_1000BA294(&qword_100BE00A0);
  v58 = sub_1000BA3CC(v55, v56, v57, (uint64_t)sub_100141E48);
  swift_release(v58);
  sub_10009880C();
  sub_1000CCD34();
  sub_1000C3A54();
  sub_1000BA294(&qword_100BDC588);
  v59 = sub_1000C4960();
  sub_1000BC13C(v59, v60, (uint64_t)sub_1001415D4);
  sub_1000B4544();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v77);
  sub_1000C2974();
  v61 = sub_1000BA294(&qword_100BE00A8);
  v64 = sub_1000BA3CC(v61, v62, v63, (uint64_t)sub_1001417C8);
  swift_release(v64);
  sub_10009880C();
  sub_1000C2974();
  v65 = sub_1000BA294(&qword_100BE00B0);
  v68 = sub_1000BA3CC(v65, v66, v67, (uint64_t)sub_100141B60);
  swift_release(v68);
  return sub_10009880C();
}

void sub_10004B134(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v11 = sub_1000DA2CC();
  sub_1000C6D9C();
  __chkstk_darwin(v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B466C();
  sub_1000C4654();
  __chkstk_darwin(v15);
  sub_10009E540();
  (*(void (**)(uint64_t, _QWORD))(v16 + 104))(v5, *a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v14, enum case for Domain.standard(_:), v11);
  v19 = 0;
  v17 = sub_1000BA294(&qword_100BD0228);
  sub_1000860C4(v17);
  *a5 = Setting.init(_:defaultValue:domain:access:)(a3, a4, &v19, v14, v5);
  sub_10009D300();
}

void sub_10004B214(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(char, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v38 = a1;
  v2 = (int *)type metadata accessor for LocationComponentContainerView(0);
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = type metadata accessor for LocationComponentContainerViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for LocationComponentContainerContentView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v1, (uint64_t)v7, type metadata accessor for LocationComponentContainerViewModel);
  v39 = *(_OWORD *)(v1 + v2[5]);
  sub_100080C0C(v1, (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LocationComponentContainerView);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 16) & ~v11;
  v37 = swift_allocObject(&unk_100B73F50, v12 + v4, v11 | 7);
  sub_10007C75C((uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v12, type metadata accessor for LocationComponentContainerView);
  v13 = v1 + v2[16];
  v15 = *(_QWORD *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  v16 = *(unsigned __int8 *)(v13 + 16);
  v17 = type metadata accessor for PagingContentOffsetsStorage(0);
  sub_10007A100((uint64_t)&unk_100BE2440);
  v19 = v18;
  swift_unknownObjectRetain(v39);
  v20 = StateObject.wrappedValue.getter(v15, v14, v16, v17, v19);
  v21 = v1 + v2[13];
  v22 = *(_BYTE *)(v21 + 16);
  v23 = *(_QWORD *)(v21 + 24);
  v40 = *(_OWORD *)v21;
  v41 = v22;
  v42 = v23;
  v24 = sub_1000BA294(&qword_100BE2448);
  State.projectedValue.getter(v24);
  v36 = v43;
  v25 = v44;
  v26 = v45;
  LOBYTE(v16) = v46;
  *(_QWORD *)v10 = swift_getKeyPath(&unk_10099FC98);
  v10[8] = 0;
  *((_QWORD *)v10 + 2) = swift_getKeyPath(&unk_10099FD38);
  v10[24] = 0;
  sub_10007C75C((uint64_t)v7, (uint64_t)&v10[v8[6]], type metadata accessor for LocationComponentContainerViewModel);
  *(_OWORD *)&v10[v8[7]] = v39;
  v27 = (void (**)(char, uint64_t))&v10[v8[8]];
  v28 = v37;
  *v27 = sub_1004461A8;
  v27[1] = (void (*)(char, uint64_t))v28;
  v29 = &v10[v8[9]];
  *(_QWORD *)v29 = ObservedObject.init(wrappedValue:)(v20, v17, v19);
  *((_QWORD *)v29 + 1) = v30;
  v31 = &v10[v8[10]];
  *(_OWORD *)v31 = v36;
  *((_QWORD *)v31 + 2) = v25;
  *((_QWORD *)v31 + 3) = v26;
  v31[32] = v16;
  KeyPath = swift_getKeyPath(&unk_10099FD38);
  v33 = swift_getKeyPath(&unk_1009A03E8);
  v34 = v38;
  sub_100080C0C((uint64_t)v10, v38, type metadata accessor for LocationComponentContainerContentView);
  v35 = v34 + *(int *)(sub_1000BA294(&qword_100BE23B8) + 36);
  *(_QWORD *)v35 = KeyPath;
  *(_BYTE *)(v35 + 8) = 0;
  *(_QWORD *)(v35 + 16) = v33;
  *(_WORD *)(v35 + 24) = 0;
  sub_100441DDC((uint64_t)v10, type metadata accessor for LocationComponentContainerContentView);
}

double sub_10004B51C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  double v11;
  double v12;
  uint64_t v13;
  __int128 v14;
  double v15;
  double v16;
  __int128 *v17;
  __int128 v18;
  double v20[6];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  _OWORD v25[2];
  char v26;
  _BYTE v27[40];
  _BYTE v28[56];

  v2 = v1;
  v4 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 8);
  swift_retain();
  sub_10008D488();
  swift_release(v7);
  LODWORD(v7) = v6[*(int *)(v4 + 68)];
  sub_1000215BC((uint64_t)v6, type metadata accessor for LocationViewModel);
  v8 = type metadata accessor for LocationContentView(0);
  v9 = (__int128 *)(v2 + *(int *)(v8 + 64));
  if ((_DWORD)v7 == 1)
  {
    v10 = v9[1];
    v21 = *v9;
    v22 = v10;
    LOBYTE(v23) = *((_BYTE *)v9 + 32);
    sub_1000787D4((uint64_t)&v21, (uint64_t)v28, &qword_100BC3BB0);
    sub_1001171F4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55E4);
    sub_10011740C();
    v12 = v11;
    sub_1001171F4((uint64_t)&v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31C4);
  }
  else
  {
    v13 = v8;
    v14 = v9[1];
    v25[0] = *v9;
    v25[1] = v14;
    v26 = *((_BYTE *)v9 + 32);
    sub_1000787D4((uint64_t)v25, (uint64_t)v27, &qword_100BC3BB0);
    sub_1001171F4((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55E4);
    sub_10011740C();
    v16 = v15;
    sub_1001171F4((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31C4);
    v17 = (__int128 *)(v2 + *(int *)(v13 + 72));
    v18 = v17[1];
    v21 = *v17;
    v22 = v18;
    v23 = v17[2];
    v24 = *((_BYTE *)v17 + 48);
    sub_1000787D4((uint64_t)&v21, (uint64_t)v28, &qword_100BC39C8);
    sub_100116E3C((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55F0);
    sub_100116E74();
    sub_100116E3C((uint64_t)&v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31D0);
    v12 = v16 - v20[2];
  }
  return v12 + a1;
}

void sub_10004B704()
{
  sub_10004B720();
  sub_10004A298();
}

uint64_t sub_10004B720()
{
  unint64_t v0;

  v0 = sub_10004B748();
  sub_1000DCB00(v0, (uint64_t)&unk_100B60870);
  return sub_1000BBC08();
}

unint64_t sub_10004B748()
{
  unint64_t result;

  result = qword_100BC5B18;
  if (!qword_100BC5B18)
  {
    result = swift_getWitnessTable(&unk_10098010C, &unk_100B60870);
    atomic_store(result, (unint64_t *)&qword_100BC5B18);
  }
  return result;
}

uint64_t sub_10004B784()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  unsigned int v92;
  unsigned int v93;
  uint64_t v94;

  v94 = type metadata accessor for Container.TestSuite(0);
  v0 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v2 = (char *)&v92 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Scope(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AppStateMonitor();
  v8 = RegistrationContainer.register<A>(_:name:factory:)(v7, 0, 0, sub_100143150, 0, v7);
  v9 = enum case for Scope.containerSingleton(_:);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v10(v6, enum case for Scope.containerSingleton(_:), v3);
  v11 = Definition.inScope(_:)(v6);
  swift_release(v11);
  v12 = swift_release(v8);
  v13 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v13(v6, v3, v12);
  v14 = type metadata accessor for AppConfigurationMonitor();
  v15 = RegistrationContainer.register<A>(_:name:factory:)(v14, 0, 0, sub_100142F10, 0, v14);
  v10(v6, v9, v3);
  v16 = Definition.inScope(_:)(v6);
  swift_release(v16);
  v17 = swift_release(v15);
  v13(v6, v3, v17);
  v18 = type metadata accessor for AppLaunchCountMonitor();
  v19 = RegistrationContainer.register<A>(_:name:factory:)(v18, 0, 0, sub_1001430B4, 0, v18);
  v10(v6, v9, v3);
  v20 = Definition.inScope(_:)(v6);
  swift_release(v20);
  v21 = swift_release(v19);
  v13(v6, v3, v21);
  v22 = type metadata accessor for CountryCodeConfigurationMonitor();
  v23 = RegistrationContainer.register<A>(_:name:factory:)(v22, 0, 0, sub_100142E14, 0, v22);
  v10(v6, v9, v3);
  v24 = Definition.inScope(_:)(v6);
  swift_release(v24);
  v25 = swift_release(v23);
  v13(v6, v3, v25);
  v26 = type metadata accessor for CurrentLocationMonitor();
  v27 = RegistrationContainer.register<A>(_:name:factory:)(v26, 0, 0, sub_100142F2C, 0, v26);
  v10(v6, v9, v3);
  v28 = Definition.inScope(_:)(v6);
  swift_release(v28);
  v29 = swift_release(v27);
  v13(v6, v3, v29);
  v30 = type metadata accessor for LocationOfInterestMonitor();
  v31 = RegistrationContainer.register<A>(_:name:factory:)(v30, 0, 0, sub_1008F2EC0, 0, v30);
  v32 = enum case for Scope.singleton(_:);
  v10(v6, enum case for Scope.singleton(_:), v3);
  v33 = Definition.inScope(_:)(v6);
  swift_release(v33);
  v34 = swift_release(v31);
  v13(v6, v3, v34);
  v35 = type metadata accessor for LocaleMonitor(0);
  v36 = RegistrationContainer.register<A>(_:name:factory:)(v35, 0, 0, sub_1008F2ED4, 0, v35);
  v10(v6, v9, v3);
  v37 = Definition.inScope(_:)(v6);
  swift_release(v37);
  v38 = swift_release(v36);
  v13(v6, v3, v38);
  v39 = type metadata accessor for LocationAuthorizationMonitor();
  v40 = RegistrationContainer.register<A>(_:name:factory:)(v39, 0, 0, sub_1008F2EE8, 0, v39);
  v10(v6, v9, v3);
  v41 = Definition.inScope(_:)(v6);
  swift_release(v41);
  v42 = swift_release(v40);
  v13(v6, v3, v42);
  v43 = type metadata accessor for NetworkConnectivityMonitor();
  v44 = RegistrationContainer.register<A>(_:name:factory:)(v43, 0, 0, sub_1008F306C, 0, v43);
  v10(v6, v9, v3);
  v45 = Definition.inScope(_:)(v6);
  swift_release(v45);
  v46 = swift_release(v44);
  v13(v6, v3, v46);
  v47 = type metadata accessor for NotificationAuthorizationMonitor();
  v48 = RegistrationContainer.register<A>(_:name:factory:)(v47, 0, 0, sub_1008F30FC, 0, v47);
  v93 = v32;
  v10(v6, v32, v3);
  v49 = Definition.inScope(_:)(v6);
  swift_release(v49);
  v50 = swift_release(v48);
  v13(v6, v3, v50);
  v51 = type metadata accessor for NotificationsOptInMonitor();
  v52 = RegistrationContainer.register<A>(_:name:factory:)(v51, 0, 0, sub_1008F31D8, 0, v51);
  v10(v6, v9, v3);
  v53 = Definition.inScope(_:)(v6);
  swift_release(v53);
  v54 = swift_release(v52);
  v13(v6, v3, v54);
  v55 = type metadata accessor for NotificationSubscriptionMonitor();
  v56 = RegistrationContainer.register<A>(_:name:factory:)(v55, 0, 0, sub_1008F3310, 0, v55);
  v10(v6, v32, v3);
  v57 = Definition.inScope(_:)(v6);
  swift_release(v57);
  v58 = swift_release(v56);
  v13(v6, v3, v58);
  v59 = type metadata accessor for AccessibilitySettingsMonitor();
  v60 = RegistrationContainer.register<A>(_:name:factory:)(v59, 0, 0, sub_1008F3494, 0, v59);
  v10(v6, v9, v3);
  v61 = Definition.inScope(_:)(v6);
  swift_release(v61);
  v62 = swift_release(v60);
  v13(v6, v3, v62);
  v63 = type metadata accessor for ReportWeatherMonitor();
  v64 = RegistrationContainer.register<A>(_:name:factory:)(v63, 0, 0, sub_1008F3578, 0, v63);
  v10(v6, v9, v3);
  v65 = Definition.inScope(_:)(v6);
  swift_release(v65);
  v66 = swift_release(v64);
  v13(v6, v3, v66);
  v67 = type metadata accessor for SavedLocationsMonitor();
  v68 = RegistrationContainer.register<A>(_:name:factory:)(v67, 0, 0, sub_1008F3598, 0, v67);
  v10(v6, v9, v3);
  v69 = Definition.inScope(_:)(v6);
  swift_release(v69);
  v70 = swift_release(v68);
  v13(v6, v3, v70);
  v71 = type metadata accessor for SettingsMonitor(0);
  v72 = RegistrationContainer.register<A>(_:name:factory:)(v71, 0, 0, sub_1008F3768, 0, v71);
  v92 = v9;
  v10(v6, v9, v3);
  v73 = Definition.inScope(_:)(v6);
  swift_release(v73);
  v74 = swift_release(v72);
  v13(v6, v3, v74);
  v75 = type metadata accessor for SidebarVisibilityMonitor();
  v76 = RegistrationContainer.register<A>(_:name:factory:)(v75, 0, 0, sub_1008F377C, 0, v75);
  v10(v6, v9, v3);
  v77 = Definition.inScope(_:)(v6);
  swift_release(v77);
  v78 = swift_release(v76);
  v13(v6, v3, v78);
  v79 = sub_1000BA294(&qword_100C12F78);
  v80 = RegistrationContainer.register<A>(_:name:factory:)(v79, 0, 0, sub_1008F3790, 0, v79);
  v81 = v2;
  v82 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for Container.TestSuite.performance(_:), v94);
  v83 = Definition.whenTesting(_:_:)(v2, sub_1008F38C0, 0);
  v84 = swift_release(v80);
  (*(void (**)(char *, uint64_t, __n128))(v0 + 8))(v81, v82, v84);
  v10(v6, v92, v3);
  v85 = Definition.inScope(_:)(v6);
  swift_release(v85);
  v86 = swift_release(v83);
  v13(v6, v3, v86);
  v87 = type metadata accessor for UserNotificationMonitor();
  v88 = RegistrationContainer.register<A>(_:name:factory:)(v87, 0, 0, sub_1008F3920, 0, v87);
  v10(v6, v93, v3);
  v89 = Definition.inScope(_:)(v6);
  swift_release(v89);
  v90 = swift_release(v88);
  return ((uint64_t (*)(char *, uint64_t, __n128))v13)(v6, v3, v90);
}

void sub_10004BF94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  double v61;
  double v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  Swift::String v75;
  Swift::String v76;
  Swift::String v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  Swift::String v113;
  Swift::String v114;

  v110 = a1;
  v112 = a2;
  v106 = a3;
  v105 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  v7 = type metadata accessor for MoonPhase.Hemisphere(0);
  v98 = *(_QWORD *)(v7 - 8);
  v99 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v97 = v9;
  v10 = sub_10009876C();
  type metadata accessor for MoonComponentViewModel(v10);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  v111 = v12;
  v13 = sub_10009876C();
  v14 = type metadata accessor for TimeZone(v13);
  v100 = *(_QWORD *)(v14 - 8);
  v101 = v14;
  sub_10009D98C();
  __chkstk_darwin(v15);
  sub_100098728();
  v18 = v17 - v16;
  sub_1000BA294(&qword_100BCBD10);
  sub_1000B42B0();
  v20 = __chkstk_darwin(v19);
  v103 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v94 - v23;
  __chkstk_darwin(v22);
  v104 = (char *)&v94 - v25;
  v26 = sub_10009876C();
  v27 = type metadata accessor for CurrentWeather(v26);
  v95 = *(_QWORD *)(v27 - 8);
  v96 = v27;
  sub_10009D98C();
  __chkstk_darwin(v28);
  sub_100098728();
  v31 = v30 - v29;
  type metadata accessor for MoonComponent(0);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100098728();
  v35 = v34 - v33;
  sub_1000BA294(&qword_100BC3350);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_100098728();
  v39 = v38 - v37;
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  sub_100098728();
  v43 = v42 - v41;
  v44 = type metadata accessor for Date(0);
  v108 = *(_QWORD *)(v44 - 8);
  sub_10009D98C();
  __chkstk_darwin(v45);
  sub_100088FDC();
  v107 = v46;
  v47 = sub_10009876C();
  v48 = type metadata accessor for WeatherData(v47);
  sub_100033A34(v112 + *(int *)(v48 + 36), v39, &qword_100BC3350);
  v49 = type metadata accessor for WeatherDataOverrides(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v49) == 1)
  {
    sub_100021A14(v39, &qword_100BC3350);
    _s7Weather24LocationCompositionStateOwst_0(v43, 1, 1, v44);
  }
  else
  {
    sub_100033A34(v39, v43, (uint64_t *)&unk_100BD35A0);
    sub_1000215BC(v39, type metadata accessor for WeatherDataOverrides);
  }
  v50 = v44;
  sub_1006D0A18(v112, v35);
  v51 = _s7Weather24LocationCompositionStateOwet_0(v43, 1, v44);
  v52 = (uint64_t)v104;
  v102 = v50;
  if ((_DWORD)v51 == 1)
  {
    v53 = WeatherDataModel.currentWeather.getter(v51);
    v54 = v107;
    CurrentWeather.date.getter(v53);
    v55 = v31;
    v56 = v54;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v55, v96);
    sub_1000215BC(v35, type metadata accessor for MoonComponent);
    sub_100021A14(v43, (uint64_t *)&unk_100BD35A0);
  }
  else
  {
    sub_1000215BC(v35, type metadata accessor for MoonComponent);
    v56 = v107;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v107, v43, v50);
  }
  v57 = v109[5];
  v58 = v109[6];
  v59 = sub_1000DB418(v109 + 2, v57);
  Location.timeZone.getter(v59);
  v61 = Location.coordinate.getter(v60);
  dispatch thunk of MoonDataProviderType.dayMoonData(for:timeZone:coordinate:)(v56, v18, v57, v58, v61, v62);
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v18, v101);
  v63 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v114._countAndFlagsBits = 0xD000000000000036;
  v114._object = (void *)0x8000000100A10C80;
  v64._countAndFlagsBits = 1852796749;
  v64._object = (void *)0xE400000000000000;
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v114);
  countAndFlagsBits = v66._countAndFlagsBits;
  object = v66._object;

  sub_100033A34(v52, (uint64_t)v24, &qword_100BCBD10);
  v69 = type metadata accessor for DayMoonData(0);
  v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v69);
  if ((_DWORD)v70 == 1)
  {
    sub_100021A14((uint64_t)v24, &qword_100BCBD10);
    swift_bridgeObjectRetain(v66._object);
    v71 = v66._countAndFlagsBits;
    v72 = v66._object;
  }
  else
  {
    v73 = DayMoonData.phase.getter(v70);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v24, v69);
    v71 = MoonPhase.description.getter(v73);
    v72 = v74;
    v113 = v66;
    v75._countAndFlagsBits = 8236;
    v75._object = (void *)0xE200000000000000;
    String.append(_:)(v75);
    v76._countAndFlagsBits = v71;
    v76._object = v72;
    String.append(_:)(v76);
    v77 = v113;
    object = v77._object;
    countAndFlagsBits = v77._countAndFlagsBits;
  }
  sub_1000403BC(v110, v56, v52, v111);
  v78 = v103;
  sub_100033A34(v52, v103, &qword_100BCBD10);
  v79 = _s7Weather24LocationCompositionStateOwet_0(v78, 1, v69);
  if ((_DWORD)v79 == 1)
  {
    sub_100021A14(v78, &qword_100BCBD10);
    v80 = 0;
    v81 = 0;
  }
  else
  {
    v82 = DayMoonData.phase.getter(v79);
    v83 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v78, v69);
    v84 = Location.coordinate.getter(v83);
    v85 = v97;
    MoonPhase.Hemisphere.init(latitude:)(v84);
    v86 = v82;
    v56 = v107;
    v80 = MoonPhase.symbolName(for:)(v85, v86);
    v81 = v87;
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v85, v99);
  }
  if (!v81)
  {
    v80 = 0xD000000000000013;
    v81 = 0x8000000100A10CC0;
  }
  sub_100021A14(v52, &qword_100BCBD10);
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v56, v102);
  *(_QWORD *)v6 = v71;
  *(_QWORD *)(v6 + 8) = v72;
  *(_QWORD *)(v6 + 16) = v80;
  *(_QWORD *)(v6 + 24) = v81;
  *(_BYTE *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = countAndFlagsBits;
  *(_QWORD *)(v6 + 48) = object;
  swift_storeEnumTagMultiPayload(v6, v105, 0);
  v88 = (int *)type metadata accessor for LocationComponentContainerViewModel(0);
  v89 = v106;
  v90 = v106 + v88[5];
  sub_1000DB674((uint64_t)v111, v90, type metadata accessor for MoonComponentViewModel);
  v91 = type metadata accessor for LocationComponentViewModel(0);
  swift_storeEnumTagMultiPayload(v90, v91, 6);
  v92 = v89 + v88[7];
  v93 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload(v92, v93, 8);
  _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v93);
  sub_1000DB674(v6, v89, type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(v89 + v88[6]) = 256;
}

uint64_t initializeWithCopy for NextHourPrecipitationLeadingValueRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

void sub_10004C680(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = a1[3];
  v8 = a1[4];
  sub_1000DB418(a1, v7);
  v9 = a2(0);
  v10 = dispatch thunk of ResolverType.resolve<A>(_:)(v9, v9, v7, v8);
  if (v10)
  {
    a4[3] = v9;
    a4[4] = a3;
    *a4 = v10;
    sub_10009D300();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10004C6EC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  v4 = a2[2];
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release(v5);
  sub_100094D04((_QWORD *)(a1 + 24), v2 + 3);
  v6 = v2[8];
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = v2[9];
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = v2[10];
  v11 = v2[11];
  LOBYTE(v2) = *((_BYTE *)v2 + 96);
  sub_100037094(v10, v11);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 96) = (_BYTE)v2;
  sub_1000BF398(v12, v13);
  return a1;
}

double sub_10004C7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for Location.Identifier(0);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  __chkstk_darwin(v4);
  sub_100088FDC();
  v32 = v5;
  v6 = type metadata accessor for SavedLocation(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100088FDC();
  v30 = v7;
  v8 = type metadata accessor for LocationsAction(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v24 - v12;
  v14 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v14);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v27 = v2 + 16;
    v21 = v19 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v22 = *(_QWORD *)(v15 + 72);
    v25 = v19;
    swift_bridgeObjectRetain(v19);
    v28 = v14;
    v29 = v8;
    v26 = v22;
    do
    {
      sub_1000A6594(v21, (uint64_t)v18, type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload(v18, v14) == 3)
      {
        sub_1001459AC((uint64_t)v18, (uint64_t)v13);
        sub_1000A6594((uint64_t)v13, (uint64_t)v11, type metadata accessor for LocationsAction);
        v23 = (char *)&loc_10004C954 + dword_1007AE56C[swift_getEnumCaseMultiPayload(v11, v8)];
        __asm { BR              X9 }
      }
      sub_10006BD20((uint64_t)v18, type metadata accessor for MainAction);
      v21 += v22;
      --v20;
    }
    while (v20);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

void sub_10004CB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v22[8];

  type metadata accessor for WeatherDataAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v22[4] = v4;
  v5 = sub_10009876C();
  type metadata accessor for NotificationsAction(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v22[3] = v7;
  v8 = sub_10009876C();
  v22[2] = type metadata accessor for EnvironmentAction(v8);
  sub_1000B42B0();
  v10 = __chkstk_darwin(v9);
  v22[5] = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v22[6] = (char *)v22 - v12;
  v13 = sub_10009876C();
  type metadata accessor for LocationsAction(v13);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v22[1] = v15;
  v16 = sub_10009876C();
  v17 = type metadata accessor for MainAction(v16);
  __chkstk_darwin(v17);
  sub_10007A130();
  v22[7] = a1;
  v19 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = v19 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v22[0] = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain(v19);
    sub_100095B78(v20, v1, type metadata accessor for MainAction);
    v21 = (char *)&loc_10004CCC0 + 4 * byte_1009A9E40[swift_getEnumCaseMultiPayload(v1, v17)];
    __asm { BR              X9 }
  }
  sub_100098640();
}

__n128 sub_10004CE5C@<Q0>(__int128 *a1@<X8>)
{
  __int128 *v2;
  __n128 result;
  __int128 v4;

  v2 = sub_10004CE84();
  result = (__n128)*v2;
  v4 = v2[1];
  *a1 = *v2;
  a1[1] = v4;
  return result;
}

__int128 *sub_10004CE84()
{
  if (qword_100BC20E8 != -1)
    swift_once(&qword_100BC20E8, sub_100123DF0);
  return &xmmword_100BE1EC8;
}

_QWORD *sub_10004CEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(_QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char v86;
  uint64_t v87;
  _QWORD *result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char valid;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t (*v110)(uint64_t, _QWORD);
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t (*v113)(uint64_t, _QWORD);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, _QWORD);
  void (*v118)(uint64_t, _QWORD);
  uint64_t (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  os_log_type_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (**v137)(_QWORD, _QWORD);
  int v138;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  _QWORD *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (**v152)(_QWORD, _QWORD);
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181[8];
  char v182[8];
  char v183[8];
  char v184[8];
  char v185[8];
  char v186[8];
  char v187[8];

  v179 = a1;
  v177 = a3;
  v170 = *v3;
  v5 = type metadata accessor for Location(0);
  sub_1000BBFEC(*(_QWORD *)(v5 - 8));
  __chkstk_darwin(v6);
  sub_10009883C();
  v9 = v7 - v8;
  __chkstk_darwin(v10);
  sub_10009511C((uint64_t)&v151 - v11);
  v12 = sub_1000BA294(&qword_100BCB238);
  sub_1000B43A4(v12, (uint64_t)v181);
  sub_1000BBFEC(v13);
  __chkstk_darwin(v14);
  sub_100088FDC();
  v16 = sub_1000987B4(v15);
  v17 = type metadata accessor for NSUnitLength.WeatherFormatUsage(v16);
  sub_1000B43A4(v17, (uint64_t)v186);
  sub_1000BBFEC(v18);
  __chkstk_darwin(v19);
  sub_100088FDC();
  v21 = sub_1000987B4(v20);
  v22 = type metadata accessor for Date(v21);
  sub_1000B43A4(v22, (uint64_t)v184);
  sub_1000BBFEC(v23);
  __chkstk_darwin(v24);
  sub_100088FDC();
  v26 = sub_1000987B4(v25);
  v27 = type metadata accessor for Deviation(v26);
  sub_1000B43A4(v27, (uint64_t)v183);
  sub_1000BBFEC(v28);
  __chkstk_darwin(v29);
  sub_100088FDC();
  sub_10009511C(v30);
  v31 = sub_1000BA294(&qword_100BCB0A8);
  sub_1000B43A4(v31, (uint64_t)v182);
  sub_1000BBFEC(v32);
  __chkstk_darwin(v33);
  sub_10009883C();
  v160 = v34 - v35;
  __chkstk_darwin(v36);
  sub_10009511C((uint64_t)&v151 - v37);
  v38 = sub_1000BA294(&qword_100BDDF80);
  sub_1000B43A4(v38, (uint64_t)v187);
  sub_1000BBFEC(v39);
  __chkstk_darwin(v40);
  sub_100088FDC();
  sub_10009511C(v41);
  v42 = sub_1000BA294(&qword_100BDDF88);
  sub_1000B43A4(v42, (uint64_t)v185);
  sub_1000BBFEC(v43);
  __chkstk_darwin(v44);
  sub_100088FDC();
  sub_10009511C(v45);
  v46 = sub_1000BA294(&qword_100BDDF90);
  __chkstk_darwin(v46);
  sub_100098728();
  v49 = v48 - v47;
  v50 = (void (**)(_QWORD, _QWORD))type metadata accessor for HistoricalComparison(0);
  sub_1000BBFEC((uint64_t)*(v50 - 1));
  __chkstk_darwin(v51);
  sub_10009883C();
  v54 = v52 - v53;
  __chkstk_darwin(v55);
  sub_10009511C((uint64_t)&v151 - v56);
  v57 = sub_1000BA294(&qword_100BCB328);
  __chkstk_darwin(v57);
  sub_100098728();
  v60 = v59 - v58;
  v61 = type metadata accessor for HistoricalComparisons(0);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  sub_100098728();
  v65 = v64 - v63;
  sub_1003BC3C0(a2, v60);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v65, v60, v61);
    sub_1002F6FD8(v49);
    a2 = (uint64_t)v50;
    v68 = v61;
    if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, (uint64_t)v50) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v65, v61);
      v66 = &qword_100BDDF90;
      v67 = v49;
      goto LABEL_5;
    }
    v153 = v62;
    v89 = v175;
    v90 = v174;
    v91 = (*(uint64_t (**)(uint64_t, uint64_t, void (**)(_QWORD, _QWORD)))(v175 + 32))(v174, v49, v50);
    valid = HistoricalComparisons.hasValidData.getter(v91);
    v154 = v65;
    if ((valid & 1) != 0)
    {
      if (qword_100BC2678 != -1)
        swift_once(&qword_100BC2678, sub_100824AE8);
      v94 = qword_100CAF4E0;
      v95 = sub_1000ABD74(&qword_100BDDF98, v93, (uint64_t (*)(uint64_t))type metadata accessor for AveragesComponentViewModelFactory, (uint64_t)&unk_10099B274);
      v96 = v178;
      Configurable.setting<A>(_:)(v94, v170, v95);
      if (v180 != 1)
      {
        v137 = v50;
        (*(void (**)(uint64_t, uint64_t, void (**)(_QWORD, _QWORD)))(v89 + 16))(v54, v90, v50);
        v138 = (*(uint64_t (**)(uint64_t, _QWORD))(v89 + 88))(v54, v50);
        if (v138 == enum case for HistoricalComparison.highTemperature(_:)
          || v138 == enum case for HistoricalComparison.lowTemperature(_:))
        {
          (*(void (**)(uint64_t, _QWORD))(v89 + 96))(v54, v50);
          v140 = v156;
          v141 = v155;
          (*(void (**)(void *, uint64_t, uint64_t))(v156 + 32))(v155, v54, v157);
          sub_1003BA608(v141, v96, v179, v177);
          sub_1000D1DDC(*(uint64_t (**)(uint64_t, uint64_t))(v140 + 8));
          (*(void (**)(uint64_t, _QWORD))(v89 + 8))(v90, v137);
        }
        else
        {
          v152 = v50;
          if (v138 == enum case for HistoricalComparison.precipitationAmount(_:))
          {
            sub_1000D95B8();
            sub_1000C48B4();
            v148 = (unsigned int *)&enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
          }
          else
          {
            if (v138 != enum case for HistoricalComparison.snowfallAmount(_:))
            {
              result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000005BLL, 0x80000001009FA3C0, "Weather/AveragesComponentViewModelFactory.swift", 47, 2);
              __break(1u);
              return result;
            }
            sub_1000D95B8();
            sub_1000C48B4();
            v148 = (unsigned int *)&enum case for NSUnitLength.WeatherFormatUsage.snowfall(_:);
          }
          v149 = v168;
          v150 = v167;
          sub_1000C1554(v167, *v148, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v168 + 104));
          sub_1000DF5CC(v50, v150, v177);
          sub_1000D1DDC(*(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
          v50[1](v50, v62);
          (*(void (**)(uint64_t, _QWORD))(v89 + 8))(v90, v152);
        }
        sub_1000988C4();
        v146 = v154;
        v147 = v68;
        return (_QWORD *)v119(v146, v147);
      }
      v97 = v158;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v171 + 104))(v158, enum case for TrendBaseline.Kind.mean<A>(_:), v172);
      v98 = (void *)objc_opt_self(NSUnitLength);
      v99 = objc_msgSend(v98, "inches");
      v170 = v68;
      v100 = v99;
      v101 = sub_1000A0794(0, (unint64_t *)&qword_100BCB0D8, NSUnitLength_ptr);
      v102 = v159;
      Measurement.init(value:unit:)(v100, v101);
      v103 = objc_msgSend(v98, "inches");
      v104 = v160;
      Measurement.init(value:unit:)(v103, v101);
      v105 = v164;
      v106 = v162;
      v107 = sub_1000C1554(v162, enum case for Deviation.normal(_:), *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v164 + 104));
      v108 = v165;
      static Date.now.getter(v107);
      v109 = v166;
      static Trend<>.mock(baselineKind:baselineValue:currentValue:deviation:baselineStartDate:)(v97, v102, v104, v106, v108);
      sub_1000988C4();
      sub_100094F10(v108, v110);
      (*(void (**)(uint64_t, _QWORD))(v105 + 8))(v106, v50);
      v111 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
      v112 = v163;
      v111(v104, v163);
      v111(v102, v112);
      sub_1000988C4();
      sub_100094F10(v97, v113);
      v114 = v168;
      v115 = v167;
      v116 = v169;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v168 + 104))(v167, enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:), v169);
      sub_1000DF5CC(v109, v115, v177);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v115, v116);
      sub_1000988C4();
      sub_100094F10((uint64_t)v109, v117);
      sub_1000988C4();
      v118(v174, v50);
      sub_1000988C4();
    }
    else
    {
      v170 = v68;
      if (qword_100BC23F0 != -1)
        swift_once(&qword_100BC23F0, sub_100159638);
      v120 = type metadata accessor for Logger(0);
      v121 = sub_1000AECD4(v120, (uint64_t)qword_100CAEFC8);
      v122 = v176;
      v123 = v173;
      v124 = v179;
      v125 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 16))(v173, v179, v5);
      v126 = (void *)Logger.logObject.getter(v125);
      v128 = static os_log_type_t.error.getter(v126, v127);
      if (sub_1000C51D4(v128))
      {
        sub_1000D0CE4();
        v172 = sub_1000C5B78();
        v180 = v172;
        sub_1000C3990(7.2225e-34);
        *(_WORD *)(v123 + 12) = 2081;
        v171 = v123 + 14;
        sub_1000ABD74((unint64_t *)&qword_100BC5FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
        v129 = sub_1000D0118();
        v131 = sub_1000D1278(v129, v130);
        v132 = sub_1000D9D78(v131);
        v89 = v175;
        v90 = v174;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v132, v133);
        swift_bridgeObjectRelease(v121);
        sub_10009BCF8(v123, *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8));
        sub_1000B4500((void *)&_mh_execute_header, v134, v135, "Could not find both a temperature and precipitation weather comparison while making the averages component model. Show internal error message. location=%{private,mask.hash}s");
        v136 = v172;
        swift_arrayDestroy(v172, 1);
        v124 = v179;
        sub_1000986F0(v136);
        sub_1000986F0(v123);
      }
      else
      {
        sub_10009BCF8(v123, *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8));
      }

      v142 = v153;
      v143 = (_QWORD *)sub_1000BAA90();
      sub_1000CFCB0(v143, v144, v124, v145);
      (*(void (**)(uint64_t, _QWORD))(v89 + 8))(v90, v50);
      v119 = *(uint64_t (**)(uint64_t, uint64_t))(v142 + 8);
    }
    v146 = v154;
    v147 = v170;
    return (_QWORD *)v119(v146, v147);
  }
  v66 = &qword_100BCB328;
  v67 = v60;
LABEL_5:
  sub_100021A68(v67, v66);
  v69 = v179;
  v70 = v176;
  if (qword_100BC23F0 != -1)
    swift_once(&qword_100BC23F0, sub_100159638);
  v71 = type metadata accessor for Logger(0);
  v72 = sub_1000AECD4(v71, (uint64_t)qword_100CAEFC8);
  v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v9, v69, v5);
  v74 = (void *)Logger.logObject.getter(v73);
  v76 = static os_log_type_t.error.getter(v74, v75);
  if (sub_1000C51D4(v76))
  {
    sub_1000D0CE4();
    v77 = sub_1000C5B78();
    v180 = v77;
    sub_1000C3990(7.2225e-34);
    *(_WORD *)(a2 + 12) = 2081;
    sub_1000ABD74((unint64_t *)&qword_100BC5FE0, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v78 = sub_1000D0118();
    v80 = sub_1000D1278(v78, v79);
    v81 = sub_1000D9D78(v80);
    v69 = v179;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v81, v82);
    swift_bridgeObjectRelease(v72);
    sub_10009BCF8(v9, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
    sub_1000B4500((void *)&_mh_execute_header, v83, v84, "Encountered empty weather comparisons while making the averages component model. Show internal error message. location=%{private,mask.hash}s");
    swift_arrayDestroy(v77, 1);
    sub_1000986F0(v77);
    sub_1000986F0(a2);
  }
  else
  {
    sub_10009BCF8(v9, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
  }

  v85 = (_QWORD *)sub_1000BAA90();
  return sub_1000CFCB0(v85, v86, v69, v87);
}

uint64_t sub_10004DA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = sub_1000BA294(&qword_100C09EB0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ScenePhase(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  return a1;
}

uint64_t sub_10004DB00(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = sub_1000BA294(&qword_100BCB200);
  return a2(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_10004DB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v7 = *(_QWORD *)(sub_1000DAEDC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000AEF4C(a1, a2, v3 + v8, *(unsigned __int8 *)(v3 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v3 + ((v10 + 39) & 0xFFFFFFFFFFFFF8)), a3, *(double *)(v3 + v9), *(double *)(v3 + v9 + 8), *(double *)(v3 + v10), *(double *)(v3 + v10 + 8), *(double *)(v3 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10004DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1000DAB58(a1, a2, a3, a4);
  swift_unknownObjectRelease(*(_QWORD *)(v5 + 16));
  v8 = (v7 + 40) & ~v7;
  v9 = v5 + v8;
  v10 = sub_1000BA294(&qword_100BC4F28);
  sub_100098814(v10);
  sub_100099768();
  if ((_DWORD)v6 == 1)
  {
    swift_release(*(_QWORD *)(v9 + 8));
    sub_1000BA294(&qword_100BC6510);
    v11 = sub_1000C1860();
    sub_1000989A0(v11);
  }
  sub_1000D0364();
  sub_1000DBDD8();
  if (!sub_1000B4560(v6))
    sub_1000B4684();
  sub_1001103F4();
  sub_1000D2050();
  if (!sub_1000B4560(v9 + *(int *)(v4 + 44)))
    sub_1000B456C();
  v12 = sub_1000CD27C();
  v13 = sub_1000C3DC4(v12);
  sub_1000DB168(v13);
  return sub_1000B4380(v5, v6, v5 + v8);
}

uint64_t sub_10004DCC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, _QWORD, uint64_t);
  void (*v16)(char *, _QWORD, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  void (*v70)(char *, _QWORD, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t);
  void (*v91)(uint64_t);
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  unsigned int v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v0 = type metadata accessor for Container.TestSuite(0);
  v95 = *(_QWORD *)(v0 - 8);
  v96 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v89 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Scope(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B4DB4();
  v7 = sub_1000BA294(&qword_100BDC590);
  v10 = sub_1000BA3CC(v7, v8, v9, (uint64_t)sub_1007B5F54);
  swift_release(v10);
  sub_10009880C();
  sub_1000B4DB4();
  v11 = sub_1000BA294(&qword_100BF7610);
  sub_1000BA3CC(v11, v12, v13, (uint64_t)sub_100145820);
  sub_10009880C();
  v14 = enum case for Scope.singleton(_:);
  v15 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v15(v6, enum case for Scope.singleton(_:), v3);
  v16 = v15;
  v17 = sub_1000DD3D8();
  swift_release(v17);
  sub_10009D338();
  v18 = *(void (**)(uint64_t))(v4 + 8);
  v19 = sub_1000DAEE4();
  v18(v19);
  sub_1000B4DB4();
  v20 = sub_1000BA294(&qword_100C076B0);
  sub_1000BA3CC(v20, v21, v22, (uint64_t)sub_100145568);
  sub_10009880C();
  sub_1000C40C0();
  v23 = sub_1000DD3D8();
  swift_release(v23);
  sub_10009D338();
  sub_1000C28B4();
  sub_1000B4DB4();
  v24 = sub_1000BA294(&qword_100BD3878);
  sub_1000BA3CC(v24, v25, v26, (uint64_t)sub_1007B5F9C);
  sub_10009880C();
  sub_1000C40C0();
  v27 = sub_1000DD3D8();
  swift_release(v27);
  sub_10009D338();
  sub_1000C28B4();
  sub_1000B4DB4();
  v28 = sub_1000BA294(&qword_100BF7688);
  sub_1000BA3CC(v28, v29, v30, (uint64_t)sub_100145668);
  sub_10009880C();
  sub_1000C40C0();
  v31 = sub_1000DD3D8();
  swift_release(v31);
  sub_10009D338();
  sub_1000C28B4();
  v32 = type metadata accessor for NetworkActivityManager();
  swift_allocObject(v32, 40, 7);
  v33 = sub_100134440();
  sub_1000B4DB4();
  sub_1000BA294(&qword_100BDC598);
  sub_1000C625C();
  sub_1000B4DCC(v34, v35, v36, (uint64_t)sub_100145818);
  sub_10009880C();
  sub_10009D338();
  sub_1000C40C0();
  v37 = sub_1000DDF74();
  swift_release(v37);
  sub_10009D330();
  sub_1000C28B4();
  sub_1000B4DB4();
  v38 = sub_1000BA294(&qword_100BF75F0);
  v41 = sub_1000BA3CC(v38, v39, v40, (uint64_t)sub_1001456AC);
  sub_10009880C();
  sub_1000C40C0();
  v42 = sub_1000DDF74();
  swift_release(v42);
  sub_10009D330();
  sub_1000C28B4();
  sub_1000B4DB4();
  sub_1000BA294(&qword_100BF65C8);
  sub_1000C625C();
  v46 = sub_1000B4DCC(v43, v44, v45, (uint64_t)sub_100145660);
  swift_release(v46);
  sub_10009880C();
  sub_10009D338();
  sub_1000B4DB4();
  sub_1000BA294(&qword_100C076B8);
  sub_1000C625C();
  v94 = v33;
  v47 = RegistrationContainer.register<A>(_:name:factory:)(v41, 0, 0, sub_100145958, v33, v41);
  swift_release(v47);
  sub_10009880C();
  sub_10009D338();
  sub_1000B4DB4();
  v48 = sub_1000BA294(&qword_100BEFD78);
  sub_1000BA3CC(v48, v49, v50, (uint64_t)sub_1007B6128);
  sub_10009880C();
  v51 = v14;
  v90 = v16;
  v16(v6, v14, v3);
  v52 = sub_1000DDF74();
  swift_release(v52);
  sub_10009D330();
  v53 = sub_1000DAEE4();
  v91 = v18;
  v18(v53);
  sub_1000B4DB4();
  v54 = sub_1000BA294(&qword_100C076C0);
  sub_1000BA3CC(v54, v55, v56, (uint64_t)sub_1007B6164);
  sub_10009880C();
  v93 = v14;
  v16(v6, v14, v3);
  v57 = sub_1000DDF74();
  swift_release(v57);
  sub_10009D330();
  sub_1000C28B4();
  sub_1000B4DB4();
  v58 = sub_1000BA294(&qword_100BF0328);
  v61 = sub_1000BA3CC(v58, v59, v60, (uint64_t)sub_1007B63F4);
  sub_10009880C();
  v62 = enum case for Container.TestSuite.performance(_:);
  v63 = v95;
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 104);
  v64 = v2;
  v65 = v2;
  v66 = v96;
  v67 = v92(v65, enum case for Container.TestSuite.performance(_:), v96);
  sub_1000DBDB8(v67, (uint64_t)sub_1007B6524);
  v68 = swift_release(v61);
  v95 = *(_QWORD *)(v63 + 8);
  ((void (*)(char *, uint64_t, __n128))v95)(v64, v66, v68);
  v69 = v51;
  v70 = v90;
  v90(v6, v69, v3);
  v71 = Definition.inScope(_:)(v6);
  swift_release(v71);
  sub_10009880C();
  v72 = sub_1000DAEE4();
  v73 = (uint64_t (*)(uint64_t))v91;
  v91(v72);
  sub_1000B4DB4();
  v74 = sub_1000BA294(&qword_100BDBAC0);
  v77 = sub_1000BA3CC(v74, v75, v76, (uint64_t)sub_1007B6568);
  swift_release(v77);
  sub_10009880C();
  ProxyContainer.private.getter(v78);
  RegistrationContainer.lazy(block:)(sub_1007B6608, 0);
  sub_10009880C();
  sub_1000B4DB4();
  v79 = RegistrationContainer.register<A>(_:name:factory:)(&type metadata for Bool, 0xD000000000000014, 0x8000000100A0E160, sub_100123C10, 0, &type metadata for Bool);
  sub_10009880C();
  v80 = v92(v64, v62, v66);
  v81 = sub_1000DBDB8(v80, (uint64_t)sub_1001B8DD4);
  swift_release(v81);
  v82 = swift_release(v79);
  ((void (*)(char *, uint64_t, __n128))v95)(v64, v66, v82);
  sub_1000B4DB4();
  v83 = sub_1000BA294(&qword_100BCEEF0);
  v86 = sub_1000BA3CC(v83, v84, v85, (uint64_t)sub_1007B6838);
  sub_10009880C();
  v70(v6, v93, v3);
  Definition.inScope(_:)(v6);
  swift_release(v94);
  sub_10009880C();
  swift_release(v86);
  v87 = sub_1000DAEE4();
  return v73(v87);
}

double destroy for ConditionDetailLegendViewModel(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(*a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[2]).n128_u64[0];
  return result;
}

uint64_t sub_10004E27C(uint64_t a1)
{
  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t sub_10004E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 20);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for URL(0);
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    v9 = sub_1000BA294(&qword_100BD4280);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void sub_10004E374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  sub_100088FDC();
  v37 = v3;
  v4 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  sub_100088FDC();
  v34 = v5;
  v6 = type metadata accessor for MainAction(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v12 = (char *)&v30 - v11;
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    v30 = v13;
    swift_bridgeObjectRetain(v13);
    v32 = v9;
    v33 = v6;
    v31 = v16;
    v17 = v34;
    v18 = v39;
    do
    {
      sub_1000A1570(v15, (uint64_t)v12);
      if (swift_getEnumCaseMultiPayload(v12, v6) == 2)
      {
        sub_1000A1570((uint64_t)v12, (uint64_t)v9);
        v19 = type metadata accessor for EnvironmentAction(0);
        if (swift_getEnumCaseMultiPayload(v9, v19) == 2)
        {
          v20 = sub_10009FFE0();
          v21 = (void *)static OS_dispatch_queue.main.getter(v20);
          aBlock[4] = sub_1001FD5F8;
          v42 = v40;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100121D84;
          aBlock[3] = &unk_100B646F8;
          v22 = _Block_copy(aBlock);
          v23 = v42;
          swift_retain();
          swift_release(v23);
          static DispatchQoS.unspecified.getter(v24);
          aBlock[0] = _swiftEmptyArrayStorage;
          v25 = sub_1001221E0();
          v26 = sub_1000BA294(&qword_100BD4F10);
          v27 = sub_100121014();
          v28 = v37;
          v29 = v25;
          v9 = v32;
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v18, v29);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v28, v22);
          v6 = v33;
          _Block_release(v22);

          v16 = v31;
          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v18);
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v17, v36);
        }
        sub_10006BD20((uint64_t)v9, type metadata accessor for EnvironmentAction);
      }
      sub_10006BD20((uint64_t)v12, type metadata accessor for MainAction);
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease(v30);
  }
}

void sub_10004E65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1000986AC();
  v4 = v3;
  sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v8 = v7 - v6;
  v9 = (int *)type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100079FBC();
  sub_100079FD4();
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100098694();
  sub_10042C8F8(v0, v2);
  sub_100080C0C(v0, v8, type metadata accessor for LocationComponentContainerViewModel);
  KeyPath = swift_getKeyPath(&unk_1009A0398);
  sub_10007C75C(v8, v1, type metadata accessor for LocationComponentContainerViewModel);
  ((void (*)(void))Text.Measurements.init())();
  v13 = (_QWORD *)(v1 + v9[6]);
  *v13 = swift_getKeyPath(&unk_10099FDE8);
  v14 = sub_1000BA294(&qword_100BC37D8);
  sub_1000916FC((uint64_t)v13, v14);
  v15 = swift_getKeyPath(&unk_10099FC98);
  sub_1000FCC6C(v15);
  v16 = v1 + v9[8];
  *(_QWORD *)v16 = swift_getKeyPath(&unk_1009A03C0);
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_BYTE *)(v16 + 72) = 0;
  v17 = v1 + v9[9];
  *(_QWORD *)v17 = KeyPath;
  *(_WORD *)(v17 + 8) = 0;
  v18 = swift_getKeyPath(&unk_10099FE78);
  sub_1000FCC6C(v18);
  v19 = swift_getKeyPath(&unk_10099FD38);
  sub_1000FCC6C(v19);
  v20 = (_QWORD *)(v1 + v9[12]);
  *v20 = swift_getKeyPath(&unk_10099FD60);
  v21 = sub_1000BA294(&qword_100BC2908);
  sub_1000916FC((uint64_t)v20, v21);
  v22 = v1 + v9[13];
  *(_QWORD *)v22 = swift_getKeyPath(&unk_1009A03E8);
  *(_WORD *)(v22 + 8) = 0;
  sub_100037768(v2, v4, &qword_100BE2320);
  v23 = sub_1000BA294(&qword_100BE2328);
  sub_10007C75C(v1, v4 + *(int *)(v23 + 36), type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier);
  sub_10009E47C(v2);
}

void sub_10004E88C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)();
  double v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v31 = a1;
  v32 = a2;
  v4 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000BA294(&qword_100BEE768);
  __chkstk_darwin(v29);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BEE770);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BEE778);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100BEE780);
  __chkstk_darwin(v30);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v3, (uint64_t)v7, type metadata accessor for ContentStatusBannerPresentationViewModifier);
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_100B7E848, v19 + v6, v18 | 7);
  sub_10007802C((uint64_t)v7, v20 + v19, type metadata accessor for ContentStatusBannerPresentationViewModifier);
  v21 = sub_1000BA294(&qword_100BEE788);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, v31, v21);
  v22 = (uint64_t (**)())&v9[*(int *)(v29 + 36)];
  *v22 = sub_1001243AC;
  v22[1] = (uint64_t (*)())v20;
  if (sub_10003BE20())
    v23 = 1.0;
  else
    v23 = 0.0;
  sub_100037768((uint64_t)v9, (uint64_t)v12, &qword_100BEE768);
  *(double *)&v12[*(int *)(v10 + 36)] = v23;
  sub_100021A14((uint64_t)v9, &qword_100BEE768);
  v24 = sub_10003BE20();
  sub_100345634((uint64_t)&unk_100BEE790);
  View.accessibilityHidden(_:)(!v24, v10, v25);
  sub_100021A14((uint64_t)v12, &qword_100BEE770);
  sub_10000A918();
  v27 = v26;
  sub_100037768((uint64_t)v15, (uint64_t)v17, &qword_100BEE778);
  v28 = &v17[*(int *)(v30 + 36)];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = v27;
  sub_100021A14((uint64_t)v15, &qword_100BEE778);
  sub_1000787D4((uint64_t)v17, v32, &qword_100BEE780);
}

#error "10004EC2C: call analysis failed (funcsize=62)"

uint64_t sub_10004EC94(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >= 2)
    swift_bridgeObjectRelease(v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Date(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_10004ED08()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v4;

  sub_1000769AC();
  sub_10004EDA8();
  v4 = dispatch thunk of CustomStringConvertible.description.getter(&unk_100B93938);
  v1._countAndFlagsBits = 45;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._countAndFlagsBits = Double.description.getter(*(double *)(v0 + 40));
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10004ED80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10004EDE4();
  return ShortDescribable.description.getter(a1, v2);
}

unint64_t sub_10004EDA8()
{
  unint64_t result;

  result = qword_100C0A798;
  if (!qword_100C0A798)
  {
    result = swift_getWitnessTable(&unk_1009CECF8, &unk_100B93938);
    atomic_store(result, (unint64_t *)&qword_100C0A798);
  }
  return result;
}

unint64_t sub_10004EDE4()
{
  unint64_t result;

  result = qword_100C0A7D0;
  if (!qword_100C0A7D0)
  {
    result = swift_getWitnessTable(&unk_1009CED20, &unk_100B93938);
    atomic_store(result, (unint64_t *)&qword_100C0A7D0);
  }
  return result;
}

uint64_t sub_10004EE20(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for Font.Leading(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((a1 & 1) == 0)
    v10 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  v11 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v10, v6);
  static Font.Weight.medium.getter(v11);
  v12 = static Font.system(_:weight:)(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
  v13 = Font.leading(_:)(v5, v12);
  swift_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v13;
}

void sub_10004EF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v0 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BEE2C0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = PrimitiveButtonStyleConfiguration.label.getter(v5);
  v9 = static Edge.Set.all.getter(v8);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v7, v3, v0);
  v10 = &v7[*(int *)(v4 + 36)];
  *v10 = v9;
  *(_OWORD *)(v10 + 8) = xmmword_1009AB470;
  *(_OWORD *)(v10 + 24) = xmmword_1009AB470;
  v10[40] = 0;
  v11 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Alignment.center.getter(v11);
  sub_100946518();
  sub_100021A14((uint64_t)v7, &qword_100BEE2C0);
}

uint64_t destroy for LocationView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_unknownObjectRelease(a1[3]);
  swift_release(a1[6]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 7);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 12);
}

uint64_t sub_10004F10C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110[8];
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[12];
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;

  v107 = a2;
  v99 = a1;
  v2 = (void *)a1[3];
  v4 = a1[4];
  v5 = (void *)a1[5];
  v117 = a1[2];
  v3 = v117;
  v118 = v2;
  v6 = v2;
  v119 = v4;
  v120 = v5;
  v7 = v4;
  v8 = v5;
  v9 = type metadata accessor for TransitionContext(255, (uint64_t)&v117);
  v105 = type metadata accessor for Optional(0, v9);
  v104 = *(_QWORD *)(v105 - 8);
  v10 = __chkstk_darwin(v105);
  v103 = (char *)&v78 - v11;
  v101 = *(v6 - 1);
  __chkstk_darwin(v10);
  v100 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = v3;
  v118 = v6;
  v96 = v6;
  v119 = v7;
  v120 = v8;
  v97 = (uint64_t)v8;
  v13 = type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier(0, (uint64_t)&v117);
  v106 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v78 - v14;
  v117 = v3;
  v118 = v6;
  v92 = v3;
  v119 = v7;
  v120 = v8;
  v15 = v7;
  v16 = type metadata accessor for IDView(255);
  v17 = sub_100075EB0(&qword_100BC4058);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _AppearanceActionModifier);
  v20 = type metadata accessor for ModifiedContent(255, v3, v17);
  v21 = type metadata accessor for _ConditionalContent(255, v19, v20);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v16);
  v23 = sub_1000A609C(&qword_100BC4050, &qword_100BC4058);
  v116[10] = WitnessTable;
  v116[11] = v23;
  v116[8] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v116[9] = &protocol witness table for _AppearanceActionModifier;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v116[6] = v15;
  v116[7] = v23;
  v25 = v15;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v116[4] = v24;
  v116[5] = v26;
  v79 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  v27 = type metadata accessor for VStack(0, v21, v79);
  v85 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v78 = (char *)&v78 - v28;
  v80 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v27);
  v117 = v27;
  v118 = &type metadata for Bool;
  v119 = v80;
  v120 = &protocol witness table for Bool;
  v29 = type metadata accessor for IDView(0);
  v95 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v108 = (char *)&v78 - v30;
  v84 = v29;
  v83 = v13;
  v31 = type metadata accessor for ModifiedContent(0, v29, v13);
  v98 = *(_QWORD *)(v31 - 8);
  v32 = v31;
  __chkstk_darwin(v31);
  v86 = (char *)&v78 - v33;
  v34 = (void *)type metadata accessor for PageContainerSidebarState(255);
  v90 = v34;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v29);
  v82 = v35;
  v36 = swift_getWitnessTable(&unk_1009B84A0, v13);
  v116[2] = v35;
  v116[3] = v36;
  v87 = v32;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  v89 = v37;
  v88 = sub_1000FC98C(&qword_100BF7EC0, type metadata accessor for PageContainerSidebarState);
  v117 = v32;
  v118 = v34;
  v119 = v37;
  v120 = (void *)v88;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v117, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 0);
  v94 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v38 = __chkstk_darwin(OpaqueTypeMetadata2);
  v81 = (char *)&v78 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v38);
  v91 = (char *)&v78 - v41;
  v42 = v92;
  v43 = v96;
  v111 = v92;
  v112 = v96;
  v44 = v25;
  v45 = v97;
  v113 = v25;
  v114 = v97;
  v46 = v109;
  v115 = v109;
  v47 = static HorizontalAlignment.center.getter(v40);
  v48 = v78;
  VStack.init(alignment:spacing:content:)(v47, 0, 1, sub_10014867C, v110, v21, v79);
  v49 = v99;
  v50 = v46 + *((int *)v99 + 15);
  v51 = *(void **)(v50 + 8);
  LOBYTE(v117) = *(_BYTE *)v50;
  v118 = v51;
  v52 = sub_1000BA294(&qword_100BC5608);
  State.wrappedValue.getter(v116, v52);
  LOBYTE(v117) = v116[0];
  View.id<A>(_:)(&v117, v27, &type metadata for Bool, v80, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v27);
  v117 = v42;
  v118 = v43;
  v119 = v44;
  v120 = (void *)v45;
  v53 = type metadata accessor for Page(0, (uint64_t)&v117);
  v54 = v109;
  v55 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, void *))(v101 + 16))(v100, v109 + *(int *)(v53 + 52), v43);
  v56 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v103, v54 + *((int *)v49 + 14), v105);
  v57 = *(_QWORD *)(v50 + 8);
  LOBYTE(v116[0]) = *(_BYTE *)v50;
  v116[1] = v57;
  State.projectedValue.getter(v52);
  v58 = v102;
  sub_10061C4B4(v55, v56, v117, (uint64_t)v118, v119, v42, (uint64_t)v43, v44, v102, v45);
  v59 = v86;
  v60 = v84;
  v61 = v83;
  v62 = v108;
  View.modifier<A>(_:)(v58, v84, v83, v82);
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v58, v61);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v62, v60);
  v63 = (uint64_t *)(v109 + *((int *)v49 + 16));
  v65 = *v63;
  v64 = (void *)v63[1];
  v117 = v65;
  v118 = v64;
  v66 = sub_1000BA294(qword_100BF7EC8);
  State.wrappedValue.getter(v116, v66);
  v67 = v116[0];
  v68 = v81;
  v69 = v87;
  v70 = v90;
  v71 = v89;
  v72 = (void *)v88;
  View.environment<A>(_:)(v116[0], v87, v90, v89, v88);
  swift_release(v67);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v69);
  v117 = v69;
  v118 = v70;
  v119 = v71;
  v120 = v72;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v117, &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>, 1);
  v74 = (uint64_t)v91;
  v75 = OpaqueTypeMetadata2;
  sub_1000B2074(v68, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v76 = *(void (**)(char *, uint64_t))(v94 + 8);
  v76(v68, v75);
  sub_1000B1100(v74, v75, v107);
  return ((uint64_t (*)(uint64_t, uint64_t))v76)(v74, v75);
}

void sub_10004F918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(_QWORD);
  char *v49;
  _QWORD v50[32];

  v50[28] = a4;
  v50[18] = a3;
  v50[19] = a2;
  v50[20] = a1;
  v6 = type metadata accessor for Location(0);
  v50[16] = *(_QWORD *)(v6 - 8);
  v50[17] = v6;
  __chkstk_darwin(v6);
  sub_100088FDC();
  v50[15] = v7;
  v8 = sub_10009876C();
  v9 = type metadata accessor for NotificationSubscription.Kind(v8);
  v50[22] = *(_QWORD *)(v9 - 8);
  v50[23] = v9;
  __chkstk_darwin(v9);
  sub_100088FDC();
  v50[21] = v10;
  v11 = sub_10009876C();
  v12 = type metadata accessor for NotificationSubscription.Location(v11);
  v50[12] = *(_QWORD *)(v12 - 8);
  v50[13] = v12;
  __chkstk_darwin(v12);
  sub_100088FDC();
  v50[11] = v13;
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v50[9] = v15;
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v50[8] = v17;
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v50[7] = v19;
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  v50[24] = type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100088FDC();
  v50[6] = v22;
  v23 = sub_10009876C();
  v50[25] = type metadata accessor for ModalViewState(v23);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100088FDC();
  v50[14] = v25;
  v26 = sub_10009876C();
  type metadata accessor for LocationViewerActiveLocationState(v26);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  v50[10] = (char *)v50 - v29;
  sub_1000BA294(&qword_100BD4280);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_100088FDC();
  v31 = sub_10009876C();
  type metadata accessor for NotificationLocation(v31);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v50[26] = v34;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v50[27] = v36;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100088FDC();
  v50[29] = v38;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v50[30] = v40;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v42);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_100088FDC();
  v44 = sub_10009876C();
  type metadata accessor for NotificationsAction(v44);
  sub_1000B42B0();
  __chkstk_darwin(v45);
  v47 = (char *)v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084050(a5, (uint64_t)v47, v48);
  v49 = (char *)sub_10004FCE4 + 4 * word_10098E2E0[swift_getEnumCaseMultiPayload(v47)];
  __asm { BR              X10 }
}

uint64_t sub_10004FCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  *(_QWORD *)(v4 - 152) = *v3;
  v5 = sub_1000C08E4();
  v6 = v0;
  v9 = sub_1000BBEA4(v5, v7, v8, v5);
  v12 = sub_1000C266C(v9, v10, v11, v9);
  sub_10009D34C(v2, v13, v14, v12);
  v15 = *(_QWORD *)(v4 - 112);
  v16 = *(_QWORD *)(v15 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
  v17 = *(_QWORD *)(v15 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
  v18 = sub_1000DB860();
  v19 = *(_QWORD *)(v4 - 96);
  v22 = sub_1000B4458(v19, v20, v21, v18);
  v23 = *(_QWORD *)(v4 - 104);
  sub_10009D34C(v23, v24, v25, v22);
  v26 = *(_QWORD *)(v4 - 120);
  sub_1000D1184(v26, 1);
  v27 = *(_QWORD *)(v4 - 128);
  _s7Weather24LocationCompositionStateOwst_0(v27, 1, 1, *(_QWORD *)(v4 - 136));
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  sub_1000CDEF4();
  sub_1000DEBAC(0, 3, v6, v1, v2, *(_QWORD *)(v4 - 152), v16, v17, v19, v23, v26, v27, v35, v36, v37, v38, v39, v40, 0,
    v15);
  sub_1000DF51C();
  sub_1000986C4();
  sub_100098898(v28, &qword_100BC5F60);
  sub_10009ED60(v29, &qword_100BC5F88);
  sub_100094EEC(v30, &qword_100BC5F90);
  sub_1000988B0(v31, &qword_100BC5F98);
  sub_1000988A0(v32, &qword_100BC5FA0);
  sub_10004A2CC(v33, &qword_100BC5FA8);
  sub_100021A14(v6, &qword_100BC5FB0);
  return v6;
}

uint64_t sub_100050644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  char v50;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v49 = *(_QWORD *)(a2 + 64);
  v50 = *(_BYTE *)(a2 + 72);
  sub_1000D4FF4(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v49, v50);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 64);
  v22 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v49;
  *(_BYTE *)(a1 + 72) = v50;
  sub_1000CEE98(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(a2 + 80);
  v24 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[6];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v29 = a3[8];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v32 = v30[1];
  v30[1] = v31[1];
  swift_retain();
  swift_release(v32);
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a1 + v33);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_retain();
  swift_release(v36);
  v37 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)(v34 + 8) = *(_QWORD *)(v35 + 8);
  swift_retain();
  swift_release(v37);
  if (a1 != a2)
  {
    v38 = a3[10];
    v39 = (_QWORD *)(a1 + v38);
    v40 = (_QWORD *)(a2 + v38);
    sub_100021A68(a1 + v38, &qword_100BC2908);
    v41 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
    {
      v42 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
      v43 = 1;
    }
    else
    {
      *v39 = *v40;
      swift_retain();
      v43 = 0;
    }
    swift_storeEnumTagMultiPayload(v39, v41, v43);
  }
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = (_QWORD *)(a2 + v44);
  v47 = *(_QWORD *)(a1 + v44);
  *(_QWORD *)(a1 + v44) = *v46;
  swift_retain();
  swift_release(v47);
  *(_QWORD *)(v45 + 8) = v46[1];
  return a1;
}

void sub_100050898()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1000F44F0();
  if ((v4 & 1) != 0)
  {
    sub_1000DD15C();
    if (v5 != v6)
    {
      sub_1000C572C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  sub_100607134();
  if (v3)
  {
    v12 = sub_1000DBBEC(v7, v8, v9, v10, v11);
    v13 = (char *)sub_100098740(v12, 16 * v3 + 32);
    j__malloc_size(v13);
    sub_10011E0FC();
    *((_QWORD *)v13 + 2) = v2;
    *((_QWORD *)v13 + 3) = v14;
  }
  else
  {
    v13 = (char *)_swiftEmptyArrayStorage;
  }
  if ((v1 & 1) != 0)
  {
    sub_10011FEB8((char *)(v0 + 32), v2, v13 + 32);
    *(_QWORD *)(v0 + 16) = 0;
    sub_1000986E8();
  }
  else
  {
    v15 = sub_100095008();
    sub_10011F1F8(v15, v16);
  }
  sub_10004A2A0();
}

_QWORD *sub_10005093C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(unint64_t, uint64_t);
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  int v68;
  size_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  void (*v71)(unint64_t, unint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  int v94;
  void (*v95)(unint64_t, unint64_t, uint64_t);
  size_t v96;
  size_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;

  v6 = *a1;
  v7 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  v8 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *v8;
  *v8 = *(_QWORD *)v7;
  swift_retain();
  swift_release(v9);
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v14 = v12 + 8;
  v103 = ~(unint64_t)v12;
  v15 = (v14 + v7) & v103;
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24);
  v16(((unint64_t)v8 + v14) & v103, v15, v10);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = ((v13 + 16) & ~v13) + v17 + (v13 | 7);
  v102 = a1;
  v19 = ((unint64_t)a1 + v18) & ~(v12 | 7);
  v20 = ((unint64_t)a2 + v18) & ~(v12 | 7);
  v104 = v10;
  v95 = v16;
  v16(v19, v20, v10);
  v21 = (uint64_t *)((v17 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  *v21 = *(_QWORD *)((v17 + 7 + v20) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release(v22);
  v23 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v24 = (uint64_t *)(v19 + v23);
  v26 = v20 + v23 + 15;
  v25 = *(_QWORD *)(v20 + v23);
  v27 = *v24;
  *v24 = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v27);
  v28 = (uint64_t *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v26 &= 0xFFFFFFFFFFFFFFF8;
  v29 = *v28;
  *v28 = *(_QWORD *)v26;
  swift_retain();
  swift_release(v29);
  v28[1] = *(_QWORD *)(v26 + 8);
  v30 = (uint64_t *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (uint64_t *)((v26 + 23) & 0xFFFFFFFFFFFFF8);
  v32 = *v30;
  *v30 = *v31;
  swift_retain();
  swift_release(v32);
  v33 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  v35 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  swift_retain();
  swift_release(v35);
  v36 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v36 = *(_BYTE *)v37;
  v38 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  swift_retain();
  swift_release(v38);
  v39 = *(_QWORD *)(a3 + 16);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(unsigned __int8 *)(v40 + 80) | v12;
  v42 = (*(_BYTE *)(v40 + 80) | v12) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v43 = (v41 + 16 + v36) & v42;
  v44 = (v41 + 16 + v37) & v42;
  v45 = *(unsigned int *)(v40 + 84);
  v46 = *(unsigned int *)(v11 + 84);
  v47 = *(_QWORD *)(v40 + 64) + v12;
  v48 = (v47 & ~v13) + v17;
  v49 = ~v41;
  v50 = v48 + v41;
  v51 = (v48 + v41) & ~v41;
  v48 += 7;
  v105 = (v48 + v51) & 0xFFFFFFFFFFFFFFF8;
  v52 = v105 + 8;
  v101 = v46 | v45;
  v98 = v48;
  v99 = v50;
  v100 = v49;
  if (v46 | v45)
  {
    if (v45 >= v46)
    {
      v56 = _s7Weather24LocationCompositionStateOwet_0(v43, v45, v39);
      v53 = _s7Weather24LocationCompositionStateOwet_0(v44, v45, v39);
      if (v56)
      {
LABEL_4:
        if (!v53)
          goto LABEL_30;
LABEL_26:
        v67 = v105;
        v68 = v101;
        if (v101)
          v69 = v52;
        else
          v69 = v105 + 9;
        memcpy((void *)v43, (const void *)v44, v69);
        v66 = v102;
        goto LABEL_32;
      }
    }
    else
    {
      v94 = _s7Weather24LocationCompositionStateOwet_0((v47 + v43) & v103, v46, v104);
      v52 = v105 + 8;
      v53 = _s7Weather24LocationCompositionStateOwet_0((v47 + v44) & v103, v46, v104);
      if (v94)
        goto LABEL_4;
    }
    if (!v53)
    {
LABEL_23:
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 24);
      v63(v43, v44, v39);
      v95((v47 + v43) & v103, (v47 + v44) & v103, v104);
      v64 = (v99 + v43) & v100;
      v65 = (v99 + v44) & v100;
      v63(v64, v65, v39);
      v95((v47 + v64) & v103, (v47 + v65) & v103, v104);
      *(_QWORD *)((v98 + v64) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v98 + v65) & 0xFFFFFFFFFFFFF8);
      v66 = v102;
      v67 = v105;
      v68 = v101;
      goto LABEL_32;
    }
LABEL_22:
    v61 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v61(v43, v39);
    v96 = v52;
    v62 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
    v62((v47 + v43) & v103, v104);
    v61((v99 + v43) & v100, v39);
    v62((v47 + ((v99 + v43) & v100)) & v103, v104);
    v52 = v96;
    goto LABEL_26;
  }
  if (!*(_BYTE *)(v43 + v52)
    || ((v54 = *(unsigned __int8 *)(v43 + v52) - 1, (_DWORD)v105 == -8) ? (v55 = 0) : (v54 = 0, v55 = *(_DWORD *)v43),
        (v55 | v54) == 0xFFFFFFFF))
  {
    if (!*(_BYTE *)(v44 + v52))
      goto LABEL_23;
    v59 = *(unsigned __int8 *)(v44 + v52) - 1;
    if ((_DWORD)v105 == -8)
    {
      v60 = 0;
    }
    else
    {
      v59 = 0;
      v60 = *(_DWORD *)v44;
    }
    if ((v60 | v59) == 0xFFFFFFFF)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (*(_BYTE *)(v44 + v52))
  {
    v57 = *(unsigned __int8 *)(v44 + v52) - 1;
    if ((_DWORD)v105 == -8)
    {
      v58 = 0;
    }
    else
    {
      v57 = 0;
      v58 = *(_DWORD *)v44;
    }
    if ((v58 | v57) != 0xFFFFFFFF)
      goto LABEL_26;
  }
LABEL_30:
  v97 = v52;
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
  v70(v43, v44, v39);
  v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
  v71((v47 + v43) & v103, (v47 + v44) & v103, v104);
  v72 = (v99 + v43) & v100;
  v73 = (v99 + v44) & v100;
  v70(v72, v73, v39);
  v71((v47 + v72) & v103, (v47 + v73) & v103, v104);
  v52 = v97;
  *(_QWORD *)((v98 + v72) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v98 + v73) & 0xFFFFFFFFFFFFF8);
  v66 = v102;
  v67 = v105;
  v68 = v101;
  if (!v101)
    *(_BYTE *)(v43 + v97) = 0;
LABEL_32:
  if (v68)
    v74 = v52;
  else
    v74 = v67 + 9;
  v75 = (uint64_t *)(((v43 | 7) + v74) & 0xFFFFFFFFFFFFFFF8);
  v76 = *v75;
  *v75 = *(_QWORD *)(((v44 | 7) + v74) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release(v76);
  v77 = ((v74 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v78 = v77 + v43;
  v79 = v77 + v44;
  *(_QWORD *)v78 = *(_QWORD *)v79;
  v80 = *(_QWORD *)(v77 + v43 + 8);
  *(_QWORD *)(v78 + 8) = *(_QWORD *)(v79 + 8);
  swift_retain();
  swift_release(v80);
  *(_BYTE *)(v78 + 16) = *(_BYTE *)(v79 + 16);
  v81 = *(_QWORD *)(v79 + 24);
  v82 = *(_BYTE *)(v79 + 32);
  sub_10008D47C(v81, v82);
  v83 = *(_QWORD *)(v78 + 24);
  v84 = *(_BYTE *)(v78 + 32);
  *(_QWORD *)(v78 + 24) = v81;
  *(_BYTE *)(v78 + 32) = v82;
  sub_1000B15F8(v83, v84);
  v85 = *(_QWORD *)(v79 + 40);
  v86 = *(_BYTE *)(v79 + 48);
  sub_10008D47C(v85, v86);
  v87 = *(_QWORD *)(v78 + 40);
  v88 = *(_BYTE *)(v78 + 48);
  *(_QWORD *)(v78 + 40) = v85;
  *(_BYTE *)(v78 + 48) = v86;
  sub_1000B15F8(v87, v88);
  v89 = *(_QWORD *)(v79 + 56);
  v90 = *(_BYTE *)(v79 + 64);
  sub_10008D47C(v89, v90);
  v91 = *(_QWORD *)(v78 + 56);
  v92 = *(_BYTE *)(v78 + 64);
  *(_QWORD *)(v78 + 56) = v89;
  *(_BYTE *)(v78 + 64) = v90;
  sub_1000B15F8(v91, v92);
  return v66;
}

uint64_t sub_100050FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a2 + 24;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 24, v7, v9, v11);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  LOBYTE(v7) = *(_BYTE *)(a2 + 80);
  sub_10008D47C(v12, v7);
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v7;
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
    *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
    *(_BYTE *)(v14 + 18) = *(_BYTE *)(v15 + 18);
    v17 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v18 = v14 + v17;
    v19 = v15 + v17;
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = 1;
  }
  else
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    swift_retain();
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v21);
  v22 = *(int *)(a3 + 36);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_100051114(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v4 = a2[3];
  v5 = a2[4];
  sub_1000DB418(a2, v4);
  v6 = type metadata accessor for AppStateMonitor();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v8 = result;
  v9 = a1[3];
  v10 = a1[4];
  sub_1000DB418(a1, v9);
  v11 = sub_100051B90(&qword_100C12EF8, (uint64_t (*)(uint64_t))type metadata accessor for AppStateMonitor, (uint64_t)&protocol conformance descriptor for AppStateMonitor);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v8, v11, v9, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
  v12 = a2[3];
  v13 = a2[4];
  sub_1000DB418(a2, v12);
  v14 = type metadata accessor for AppConfigurationMonitor();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v14, v14, v12, v13);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v15 = result;
  v16 = sub_100051B90(&qword_100C12F00, (uint64_t (*)(uint64_t))type metadata accessor for AppConfigurationMonitor, (uint64_t)&unk_1009B0F00);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v15, v16, v9, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
  v17 = a2[3];
  v18 = a2[4];
  sub_1000DB418(a2, v17);
  v19 = type metadata accessor for AppLaunchCountMonitor();
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v20 = result;
  v21 = sub_100051B90(&qword_100C12F08, (uint64_t (*)(uint64_t))type metadata accessor for AppLaunchCountMonitor, (uint64_t)&protocol conformance descriptor for AppLaunchCountMonitor);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v20, v21, v9, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
  v22 = a2[3];
  v23 = a2[4];
  sub_1000DB418(a2, v22);
  v24 = sub_1000BA294(&qword_100BF7640);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v24, v24, v22, v23);
  v25 = v120;
  if (!v120)
    goto LABEL_7;
  if (v120 != 1)
  {
    dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v120, *(_QWORD *)(v121 + 8), v9, v10);
    sub_10015A440(v25);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
LABEL_7:
    v26 = a2[3];
    v27 = a2[4];
    sub_1000DB418(a2, v26);
    v28 = type metadata accessor for CountryCodeConfigurationMonitor();
    result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
    if (result)
    {
      v29 = result;
      v30 = sub_100051B90(&qword_100C12F10, (uint64_t (*)(uint64_t))type metadata accessor for CountryCodeConfigurationMonitor, (uint64_t)&unk_1009D6DC0);
      v119 = v29;
      dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v29, v30, v9, v10);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
      v31 = a2[3];
      v32 = a2[4];
      sub_1000DB418(a2, v31);
      v33 = type metadata accessor for CurrentLocationMonitor();
      result = dispatch thunk of ResolverType.resolve<A>(_:)(v33, v33, v31, v32);
      if (result)
      {
        v34 = result;
        v35 = sub_100051B90(&qword_100C12F18, (uint64_t (*)(uint64_t))type metadata accessor for CurrentLocationMonitor, (uint64_t)&unk_1009BF2F8);
        v118 = v34;
        dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v34, v35, v9, v10);
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
        v36 = a2[3];
        v37 = a2[4];
        sub_1000DB418(a2, v36);
        v38 = type metadata accessor for LocaleMonitor(0);
        result = dispatch thunk of ResolverType.resolve<A>(_:)(v38, v38, v36, v37);
        if (result)
        {
          v39 = result;
          v40 = sub_100051B90(&qword_100C12F20, type metadata accessor for LocaleMonitor, (uint64_t)&protocol conformance descriptor for LocaleMonitor);
          v117 = v39;
          dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v39, v40, v9, v10);
          _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
          v41 = a2[3];
          v42 = a2[4];
          sub_1000DB418(a2, v41);
          v43 = type metadata accessor for LocationAuthorizationMonitor();
          result = dispatch thunk of ResolverType.resolve<A>(_:)(v43, v43, v41, v42);
          if (result)
          {
            v44 = (void *)result;
            v45 = sub_100051B90(&qword_100C12F28, (uint64_t (*)(uint64_t))type metadata accessor for LocationAuthorizationMonitor, (uint64_t)&unk_1009D9CE0);
            v116 = v44;
            dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v44, v45, v9, v10);
            _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
            v46 = a2[3];
            v47 = a2[4];
            sub_1000DB418(a2, v46);
            v48 = type metadata accessor for NotificationAuthorizationMonitor();
            result = dispatch thunk of ResolverType.resolve<A>(_:)(v48, v48, v46, v47);
            if (result)
            {
              v49 = result;
              v50 = sub_100051B90(&qword_100C12F30, (uint64_t (*)(uint64_t))type metadata accessor for NotificationAuthorizationMonitor, (uint64_t)&unk_1009B9D74);
              v115 = v49;
              dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v49, v50, v9, v10);
              _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
              v51 = a2[3];
              v52 = a2[4];
              sub_1000DB418(a2, v51);
              v53 = type metadata accessor for NotificationsOptInMonitor();
              result = dispatch thunk of ResolverType.resolve<A>(_:)(v53, v53, v51, v52);
              if (result)
              {
                v54 = result;
                v55 = sub_100051B90(&qword_100C12F38, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsOptInMonitor, (uint64_t)&protocol conformance descriptor for NotificationsOptInMonitor);
                v114 = v54;
                dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v54, v55, v9, v10);
                _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                v56 = a2[3];
                v57 = a2[4];
                sub_1000DB418(a2, v56);
                v58 = type metadata accessor for NotificationSubscriptionMonitor();
                result = dispatch thunk of ResolverType.resolve<A>(_:)(v58, v58, v56, v57);
                if (result)
                {
                  v59 = result;
                  v60 = sub_100051B90(&qword_100C12F40, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSubscriptionMonitor, (uint64_t)&protocol conformance descriptor for NotificationSubscriptionMonitor);
                  v113 = v59;
                  dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v59, v60, v9, v10);
                  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                  v61 = a2[3];
                  v62 = a2[4];
                  sub_1000DB418(a2, v61);
                  v63 = type metadata accessor for NetworkConnectivityMonitor();
                  result = dispatch thunk of ResolverType.resolve<A>(_:)(v63, v63, v61, v62);
                  if (result)
                  {
                    v64 = result;
                    v65 = sub_100051B90(&qword_100C12F48, (uint64_t (*)(uint64_t))type metadata accessor for NetworkConnectivityMonitor, (uint64_t)&protocol conformance descriptor for NetworkConnectivityMonitor);
                    v112 = v64;
                    dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v64, v65, v9, v10);
                    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                    v66 = a2[3];
                    v67 = a2[4];
                    sub_1000DB418(a2, v66);
                    v68 = type metadata accessor for AccessibilitySettingsMonitor();
                    result = dispatch thunk of ResolverType.resolve<A>(_:)(v68, v68, v66, v67);
                    if (result)
                    {
                      v69 = result;
                      v70 = sub_100051B90(&qword_100C12F50, (uint64_t (*)(uint64_t))type metadata accessor for AccessibilitySettingsMonitor, (uint64_t)&protocol conformance descriptor for AccessibilitySettingsMonitor);
                      v111 = v69;
                      dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v69, v70, v9, v10);
                      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                      v71 = a2[3];
                      v72 = a2[4];
                      sub_1000DB418(a2, v71);
                      v73 = type metadata accessor for ReportWeatherMonitor();
                      result = dispatch thunk of ResolverType.resolve<A>(_:)(v73, v73, v71, v72);
                      if (result)
                      {
                        v74 = result;
                        v75 = sub_100051B90(&qword_100C12F58, (uint64_t (*)(uint64_t))type metadata accessor for ReportWeatherMonitor, (uint64_t)&protocol conformance descriptor for ReportWeatherMonitor);
                        v110 = v74;
                        dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v74, v75, v9, v10);
                        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                        v76 = a2[3];
                        v77 = a2[4];
                        sub_1000DB418(a2, v76);
                        v78 = type metadata accessor for SavedLocationsMonitor();
                        result = dispatch thunk of ResolverType.resolve<A>(_:)(v78, v78, v76, v77);
                        if (result)
                        {
                          v79 = result;
                          v80 = sub_100051B90(&qword_100C12F60, (uint64_t (*)(uint64_t))type metadata accessor for SavedLocationsMonitor, (uint64_t)&protocol conformance descriptor for SavedLocationsMonitor);
                          v109 = v79;
                          dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v79, v80, v9, v10);
                          _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                          v81 = a2[3];
                          v82 = a2[4];
                          sub_1000DB418(a2, v81);
                          v83 = type metadata accessor for SettingsMonitor(0);
                          result = dispatch thunk of ResolverType.resolve<A>(_:)(v83, v83, v81, v82);
                          if (result)
                          {
                            v84 = result;
                            v108 = v20;
                            v85 = sub_100051B90(&qword_100C12F68, type metadata accessor for SettingsMonitor, (uint64_t)&protocol conformance descriptor for SettingsMonitor);
                            v107 = v84;
                            dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v84, v85, v9, v10);
                            _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                            v86 = a2[3];
                            v87 = a2[4];
                            sub_1000DB418(a2, v86);
                            v88 = type metadata accessor for SidebarVisibilityMonitor();
                            result = dispatch thunk of ResolverType.resolve<A>(_:)(v88, v88, v86, v87);
                            if (result)
                            {
                              v89 = result;
                              v90 = sub_100051B90(&qword_100C12F70, (uint64_t (*)(uint64_t))type metadata accessor for SidebarVisibilityMonitor, (uint64_t)&protocol conformance descriptor for SidebarVisibilityMonitor);
                              dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v89, v90, v9, v10);
                              _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                              v91 = a2[3];
                              v92 = a2[4];
                              sub_1000DB418(a2, v91);
                              v93 = sub_1000BA294(&qword_100C12F78);
                              result = dispatch thunk of ResolverType.resolve<A>(_:)(v93, v93, v91, v92);
                              v94 = v120;
                              if (v120)
                              {
                                v105 = v15;
                                v106 = v8;
                                dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v120, *(_QWORD *)(v121 + 8), v9, v10);
                                _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                                v95 = a2[3];
                                v96 = a2[4];
                                sub_1000DB418(a2, v95);
                                v97 = type metadata accessor for UserNotificationMonitor();
                                result = dispatch thunk of ResolverType.resolve<A>(_:)(v97, v97, v95, v96);
                                if (result)
                                {
                                  v98 = (void *)result;
                                  v99 = sub_100051B90(&qword_100C12F80, (uint64_t (*)(uint64_t))type metadata accessor for UserNotificationMonitor, (uint64_t)&protocol conformance descriptor for UserNotificationMonitor);
                                  dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v98, v99, v9, v10);
                                  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                                  v100 = a2[3];
                                  v101 = a2[4];
                                  sub_1000DB418(a2, v100);
                                  v102 = type metadata accessor for LocationOfInterestMonitor();
                                  result = dispatch thunk of ResolverType.resolve<A>(_:)(v102, v102, v100, v101);
                                  if (result)
                                  {
                                    v103 = result;
                                    v104 = sub_100051B90(&qword_100C12F88, (uint64_t (*)(uint64_t))type metadata accessor for LocationOfInterestMonitor, (uint64_t)&unk_1009B032C);
                                    dispatch thunk of ApplicationStateManagerType.add(monitor:)(&v120, v103, v104, v9, v10);
                                    swift_release(v106);
                                    swift_release(v105);
                                    swift_release(v108);
                                    swift_release(v119);
                                    swift_release(v118);
                                    swift_release(v117);

                                    swift_release(v115);
                                    swift_release(v114);
                                    swift_release(v113);
                                    swift_release(v112);
                                    swift_release(v111);
                                    swift_release(v110);
                                    swift_release(v109);
                                    swift_release(v107);
                                    swift_release(v89);

                                    swift_release(v103);
                                    swift_unknownObjectRelease(v94);
                                    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v120);
                                  }
                                  goto LABEL_42;
                                }
LABEL_41:
                                __break(1u);
LABEL_42:
                                __break(1u);
                                goto LABEL_43;
                              }
LABEL_40:
                              __break(1u);
                              goto LABEL_41;
                            }
LABEL_39:
                            __break(1u);
                            goto LABEL_40;
                          }
LABEL_38:
                          __break(1u);
                          goto LABEL_39;
                        }
LABEL_37:
                        __break(1u);
                        goto LABEL_38;
                      }
LABEL_36:
                      __break(1u);
                      goto LABEL_37;
                    }
LABEL_35:
                    __break(1u);
                    goto LABEL_36;
                  }
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
LABEL_33:
                __break(1u);
                goto LABEL_34;
              }
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_100051B90(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100051BD0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  _BYTE *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v63 = a1;
  v66 = sub_1000BA294(&qword_100BDE2B0);
  __chkstk_darwin(v66);
  v62 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1000BA294(&qword_100BDE2B8);
  __chkstk_darwin(v65);
  v64 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1000BA294(&qword_100BDE2C0);
  v4 = __chkstk_darwin(v61);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v55 - v7;
  v9 = sub_1000BA294(&qword_100BDE2C8);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BD9480);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BDE2D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for DailyComponentRowView(0);
  v19 = v18;
  if (*(_BYTE *)(v1 + v18[12]) == 1)
  {
    v55 = v14;
    v56 = v6;
    v57 = v8;
    v58 = v9;
    v59 = v12;
    v60 = v11;
    v62 = v17;
    v21 = v64;
    v20 = v65;
    v22 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v23 = objc_msgSend(v22, "userInterfaceIdiom");

    if (v23)
    {
      v24 = static Axis.Set.horizontal.getter();
      v25 = v24;
      v26 = static Axis.Set.vertical.getter(v24);
      v27 = Axis.Set.init(rawValue:)(0);
      v28 = Axis.Set.init(rawValue:)(v27);
      if (Axis.Set.init(rawValue:)(v28 & v25) != v25)
        v27 = Axis.Set.init(rawValue:)(v27 | v25);
      v29 = Axis.Set.init(rawValue:)(v27);
      v30 = Axis.Set.init(rawValue:)(v29 & v26);
      v32 = (uint64_t)v60;
      v31 = v61;
      v33 = v59;
      v34 = v56;
      if (v30 != v26)
        LOBYTE(v27) = Axis.Set.init(rawValue:)(v27 | v26);
      *v34 = v27;
      v35 = sub_1000BA294(&qword_100BDE310);
      sub_1003BF0D4(v1, (uint64_t)&v34[*(int *)(v35 + 44)]);
      v36 = (uint64_t)v34;
      v37 = &qword_100BDE2C0;
      v38 = (uint64_t)v57;
      sub_1000787D4(v36, (uint64_t)v57, &qword_100BDE2C0);
      sub_100037768(v38, v32, &qword_100BDE2C0);
      swift_storeEnumTagMultiPayload(v32, v58, 1);
      v39 = sub_1003C0A50();
      sub_1001CDAD0(&qword_100BDE2F0, &qword_100BDE2C0);
      v40 = (uint64_t)v62;
      _ConditionalContent<>.init(storage:)(v32, v33, v31, v39, v41);
      v42 = v38;
    }
    else
    {
      v49 = (uint64_t)v55;
      sub_1003BEA94(*(_QWORD *)(v1 + v19[8]), v1 + v19[7], (uint64_t)v55);
      v37 = &qword_100BD9480;
      v50 = (uint64_t)v60;
      sub_100037768(v49, (uint64_t)v60, &qword_100BD9480);
      swift_storeEnumTagMultiPayload(v50, v58, 0);
      v51 = sub_1003C0A50();
      sub_1001CDAD0(&qword_100BDE2F0, &qword_100BDE2C0);
      v40 = (uint64_t)v62;
      _ConditionalContent<>.init(storage:)(v50, v59, v61, v51, v52);
      v42 = v49;
    }
    sub_100021A14(v42, v37);
    v44 = &qword_100BDE2D0;
    sub_100037768(v40, v21, &qword_100BDE2D0);
    swift_storeEnumTagMultiPayload(v21, v20, 0);
    v53 = sub_1003C09CC();
    v54 = sub_1003C0AEC();
    _ConditionalContent<>.init(storage:)(v21, v15, v66, v53, v54);
    v48 = v40;
  }
  else
  {
    v43 = (uint64_t)v62;
    sub_10010BDC4(*(_QWORD *)(v1 + v18[8]), v1 + v18[7], (uint64_t)v62, *(double *)(v1 + v18[11]), *(double *)(v1 + v18[9]), *(double *)(v1 + v18[9] + 8), *(double *)(v1 + v18[10]), *(double *)(v1 + v18[10] + 8));
    v44 = &qword_100BDE2B0;
    v45 = v64;
    sub_100037768(v43, v64, &qword_100BDE2B0);
    swift_storeEnumTagMultiPayload(v45, v65, 1);
    v46 = sub_1003C09CC();
    v47 = sub_1003C0AEC();
    _ConditionalContent<>.init(storage:)(v45, v15, v66, v46, v47);
    v48 = v43;
  }
  sub_100021A14(v48, v44);
}

void sub_1000520AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_1000BA294(&qword_100BCCB90);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_37:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain();
  v12 = 0;
  if (!v10)
    goto LABEL_10;
LABEL_9:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain(v20);
    String.hash(into:)(v33, v19, v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v25);
    *v30 = v19;
    v30[1] = v20;
    ++*(_QWORD *)(v6 + 16);
    if (v10)
      goto LABEL_9;
LABEL_10:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v15 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_35;
      v16 = *(_QWORD *)(v8 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_35;
        v16 = *(_QWORD *)(v8 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_35:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v8 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100052354()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t HourPrecipitationDetailAssembly;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v0 = sub_1000BA294(&qword_100BCED58);
  v1 = swift_allocObject(v0, 352, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10098BCC0;
  v2 = (objc_class *)type metadata accessor for FrameworkAssembly(0);
  v3 = objc_msgSend(objc_allocWithZone(v2), "init");
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = &protocol witness table for FrameworkAssembly;
  *(_QWORD *)(v1 + 32) = v3;
  v4 = (objc_class *)type metadata accessor for FrameworkAssembly(0);
  v5 = objc_msgSend(objc_allocWithZone(v4), "init");
  *(_QWORD *)(v1 + 96) = v4;
  sub_10005329C(&qword_100BCED60, 255, (uint64_t (*)(uint64_t))&type metadata accessor for FrameworkAssembly, (uint64_t)&protocol conformance descriptor for FrameworkAssembly);
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 72) = v5;
  v7 = type metadata accessor for Assembly(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = Assembly.init()();
  *(_QWORD *)(v1 + 136) = v7;
  sub_10005329C(&qword_100BCED68, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 144) = v9;
  *(_QWORD *)(v1 + 112) = v8;
  v10 = type metadata accessor for Assembly(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = Assembly.init()();
  *(_QWORD *)(v1 + 176) = v10;
  sub_10005329C(&qword_100BCED70, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 184) = v12;
  *(_QWORD *)(v1 + 152) = v11;
  v13 = type metadata accessor for Assembly(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = Assembly.init()();
  *(_QWORD *)(v1 + 216) = v13;
  sub_10005329C(&qword_100BCED78, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 224) = v15;
  *(_QWORD *)(v1 + 192) = v14;
  v16 = type metadata accessor for Assembly(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = Assembly.init()();
  *(_QWORD *)(v1 + 256) = v16;
  sub_10005329C(&qword_100BCED80, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 264) = v18;
  *(_QWORD *)(v1 + 232) = v17;
  v19 = type metadata accessor for Assembly(0);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = Assembly.init()();
  *(_QWORD *)(v1 + 296) = v19;
  sub_10005329C(&qword_100BCED88, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 304) = v21;
  *(_QWORD *)(v1 + 272) = v20;
  v22 = type metadata accessor for Assembly(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v23 = Assembly.init()();
  *(_QWORD *)(v1 + 336) = v22;
  sub_10005329C(&qword_100BCED90, 255, (uint64_t (*)(uint64_t))&type metadata accessor for Assembly, (uint64_t)&protocol conformance descriptor for Assembly);
  *(_QWORD *)(v1 + 344) = v24;
  *(_QWORD *)(v1 + 312) = v23;
  v25 = sub_1000BA294(&qword_100BCED98);
  v26 = swift_allocObject(v25, 1672, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10098BCD0;
  v27 = type metadata accessor for AutomationAssembly();
  v28 = swift_allocObject(v27, 16, 7);
  *(_QWORD *)(v26 + 56) = v27;
  sub_10005329C(&qword_100BCEDA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for AutomationAssembly, (uint64_t)&unk_1009D7D54);
  *(_QWORD *)(v26 + 64) = v29;
  *(_QWORD *)(v26 + 32) = v28;
  v30 = type metadata accessor for AnalyticsAssembly();
  v31 = swift_allocObject(v30, 16, 7);
  *(_QWORD *)(v26 + 96) = v30;
  sub_10005329C(&qword_100BCEDA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for AnalyticsAssembly, (uint64_t)&unk_10099DB74);
  *(_QWORD *)(v26 + 104) = v32;
  *(_QWORD *)(v26 + 72) = v31;
  v33 = type metadata accessor for DebugAssembly();
  v34 = swift_allocObject(v33, 16, 7);
  *(_QWORD *)(v26 + 136) = v33;
  sub_10005329C(&qword_100BCEDB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugAssembly, (uint64_t)&unk_1009AE0E8);
  *(_QWORD *)(v26 + 144) = v35;
  *(_QWORD *)(v26 + 112) = v34;
  v36 = type metadata accessor for DemoAssembly();
  v37 = swift_allocObject(v36, 16, 7);
  *(_QWORD *)(v26 + 176) = v36;
  sub_10005329C(&qword_100BCEDB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DemoAssembly, (uint64_t)&unk_1009CE270);
  *(_QWORD *)(v26 + 184) = v38;
  *(_QWORD *)(v26 + 152) = v37;
  v39 = type metadata accessor for HandlerAssembly();
  v40 = swift_allocObject(v39, 16, 7);
  *(_QWORD *)(v26 + 216) = v39;
  sub_10005329C(&qword_100BCEDC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for HandlerAssembly, (uint64_t)&unk_1009C96F0);
  *(_QWORD *)(v26 + 224) = v41;
  *(_QWORD *)(v26 + 192) = v40;
  v42 = type metadata accessor for ManagerAssembly();
  v43 = swift_allocObject(v42, 16, 7);
  *(_QWORD *)(v26 + 256) = v42;
  sub_10005329C(&qword_100BCEDC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ManagerAssembly, (uint64_t)&unk_1009CB200);
  *(_QWORD *)(v26 + 264) = v44;
  *(_QWORD *)(v26 + 232) = v43;
  v45 = type metadata accessor for PerformanceTestAssembly();
  v46 = swift_allocObject(v45, 16, 7);
  *(_QWORD *)(v26 + 296) = v45;
  sub_10005329C(&qword_100BCEDD0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PerformanceTestAssembly, (uint64_t)&unk_1009A61F8);
  *(_QWORD *)(v26 + 304) = v47;
  *(_QWORD *)(v26 + 272) = v46;
  v48 = type metadata accessor for ProviderAssembly();
  v49 = swift_allocObject(v48, 16, 7);
  *(_QWORD *)(v26 + 336) = v48;
  sub_10005329C(&qword_100BCEDD8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ProviderAssembly, (uint64_t)&unk_1009D7924);
  *(_QWORD *)(v26 + 344) = v50;
  *(_QWORD *)(v26 + 312) = v49;
  v51 = type metadata accessor for SettingsAssembly();
  v52 = swift_allocObject(v51, 16, 7);
  *(_QWORD *)(v26 + 376) = v51;
  sub_10005329C(&qword_100BCEDE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SettingsAssembly, (uint64_t)&unk_10099DB34);
  *(_QWORD *)(v26 + 384) = v53;
  *(_QWORD *)(v26 + 352) = v52;
  v54 = type metadata accessor for StartupAssembly();
  v55 = swift_allocObject(v54, 16, 7);
  *(_QWORD *)(v26 + 416) = v54;
  sub_10005329C(&qword_100BCEDE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for StartupAssembly, (uint64_t)&unk_1009D3EB0);
  *(_QWORD *)(v26 + 424) = v56;
  *(_QWORD *)(v26 + 392) = v55;
  v57 = type metadata accessor for ToolbarAssembly();
  v58 = swift_allocObject(v57, 16, 7);
  *(_QWORD *)(v26 + 456) = v57;
  sub_10005329C(&qword_100BCEDF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ToolbarAssembly, (uint64_t)&unk_1009D3B10);
  *(_QWORD *)(v26 + 464) = v59;
  *(_QWORD *)(v26 + 432) = v58;
  v60 = type metadata accessor for MonitorsAssembly();
  v61 = swift_allocObject(v60, 16, 7);
  *(_QWORD *)(v26 + 496) = v60;
  sub_10005329C(&qword_100BCEDF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MonitorsAssembly, (uint64_t)&unk_1009D7D14);
  *(_QWORD *)(v26 + 504) = v62;
  *(_QWORD *)(v26 + 472) = v61;
  v63 = type metadata accessor for WeatherConditionBackgroundAssembly();
  v64 = swift_allocObject(v63, 16, 7);
  *(_QWORD *)(v26 + 536) = v63;
  sub_10005329C(&qword_100BCEE00, 255, (uint64_t (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundAssembly, (uint64_t)&unk_1009D18D4);
  *(_QWORD *)(v26 + 544) = v65;
  *(_QWORD *)(v26 + 512) = v64;
  v66 = type metadata accessor for InteractionsAssembly();
  v67 = swift_allocObject(v66, 16, 7);
  *(_QWORD *)(v26 + 576) = v66;
  sub_10005329C(&qword_100BCEE08, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractionsAssembly, (uint64_t)&unk_1009AF718);
  *(_QWORD *)(v26 + 584) = v68;
  *(_QWORD *)(v26 + 552) = v67;
  v69 = type metadata accessor for AirQualityDetailAssembly();
  v70 = swift_allocObject(v69, 16, 7);
  *(_QWORD *)(v26 + 616) = v69;
  sub_10005329C(&qword_100BCEE10, 255, (uint64_t (*)(uint64_t))type metadata accessor for AirQualityDetailAssembly, (uint64_t)&unk_10097EABC);
  *(_QWORD *)(v26 + 624) = v71;
  *(_QWORD *)(v26 + 592) = v70;
  v72 = type metadata accessor for ConditionDetailAssembly();
  v73 = swift_allocObject(v72, 16, 7);
  *(_QWORD *)(v26 + 656) = v72;
  sub_10005329C(&qword_100BCEE18, 255, (uint64_t (*)(uint64_t))type metadata accessor for ConditionDetailAssembly, (uint64_t)&unk_10098E268);
  *(_QWORD *)(v26 + 664) = v74;
  *(_QWORD *)(v26 + 632) = v73;
  v75 = type metadata accessor for DetailChartAssembly();
  v76 = swift_allocObject(v75, 16, 7);
  *(_QWORD *)(v26 + 696) = v75;
  sub_10005329C(&qword_100BCEE20, 255, (uint64_t (*)(uint64_t))type metadata accessor for DetailChartAssembly, (uint64_t)&unk_10098C5A4);
  *(_QWORD *)(v26 + 704) = v77;
  *(_QWORD *)(v26 + 672) = v76;
  HourPrecipitationDetailAssembly = type metadata accessor for NextHourPrecipitationDetailAssembly();
  v79 = swift_allocObject(HourPrecipitationDetailAssembly, 16, 7);
  *(_QWORD *)(v26 + 736) = HourPrecipitationDetailAssembly;
  sub_10005329C(&qword_100BCEE28, 255, (uint64_t (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailAssembly, (uint64_t)&unk_1009A6464);
  *(_QWORD *)(v26 + 744) = v80;
  *(_QWORD *)(v26 + 712) = v79;
  v81 = type metadata accessor for SunriseSunsetDetailAssembly();
  v82 = swift_allocObject(v81, 16, 7);
  *(_QWORD *)(v26 + 776) = v81;
  sub_10005329C(&qword_100BCEE30, 255, (uint64_t (*)(uint64_t))type metadata accessor for SunriseSunsetDetailAssembly, (uint64_t)&unk_1009C997C);
  *(_QWORD *)(v26 + 784) = v83;
  *(_QWORD *)(v26 + 752) = v82;
  v84 = type metadata accessor for MoonCalendarAssembly();
  v85 = swift_allocObject(v84, 16, 7);
  *(_QWORD *)(v26 + 816) = v84;
  sub_10005329C(&qword_100BCEE38, 255, (uint64_t (*)(uint64_t))type metadata accessor for MoonCalendarAssembly, (uint64_t)&unk_1009D99B8);
  *(_QWORD *)(v26 + 824) = v86;
  *(_QWORD *)(v26 + 792) = v85;
  v87 = type metadata accessor for MoonScrubberAssembly();
  v88 = swift_allocObject(v87, 16, 7);
  *(_QWORD *)(v26 + 856) = v87;
  sub_10005329C(&qword_100BCEE40, 255, (uint64_t (*)(uint64_t))type metadata accessor for MoonScrubberAssembly, (uint64_t)&unk_1009BD4D8);
  *(_QWORD *)(v26 + 864) = v89;
  *(_QWORD *)(v26 + 832) = v88;
  v90 = type metadata accessor for MoonDetailAssembly();
  v91 = swift_allocObject(v90, 16, 7);
  *(_QWORD *)(v26 + 896) = v90;
  sub_10005329C(&qword_100BCEE48, 255, (uint64_t (*)(uint64_t))type metadata accessor for MoonDetailAssembly, (uint64_t)&unk_100989974);
  *(_QWORD *)(v26 + 904) = v92;
  *(_QWORD *)(v26 + 872) = v91;
  v93 = type metadata accessor for MessageCoverAssembly();
  v94 = swift_allocObject(v93, 16, 7);
  *(_QWORD *)(v26 + 936) = v93;
  sub_10005329C(&qword_100BCEE50, 255, (uint64_t (*)(uint64_t))type metadata accessor for MessageCoverAssembly, (uint64_t)&unk_10098B058);
  *(_QWORD *)(v26 + 944) = v95;
  *(_QWORD *)(v26 + 912) = v94;
  v96 = type metadata accessor for MainAssembly();
  v97 = swift_allocObject(v96, 16, 7);
  *(_QWORD *)(v26 + 976) = v96;
  sub_10005329C(&qword_100BCEE58, 255, (uint64_t (*)(uint64_t))type metadata accessor for MainAssembly, (uint64_t)&unk_1009B7A90);
  *(_QWORD *)(v26 + 984) = v98;
  *(_QWORD *)(v26 + 952) = v97;
  v99 = type metadata accessor for NotificationSettingsAssembly();
  v100 = swift_allocObject(v99, 16, 7);
  *(_QWORD *)(v26 + 1016) = v99;
  sub_10005329C(&qword_100BCEE60, 255, (uint64_t (*)(uint64_t))type metadata accessor for NotificationSettingsAssembly, (uint64_t)&unk_1009DC020);
  *(_QWORD *)(v26 + 1024) = v101;
  *(_QWORD *)(v26 + 992) = v100;
  v102 = type metadata accessor for NotificationsOptInAssembly();
  v103 = swift_allocObject(v102, 16, 7);
  *(_QWORD *)(v26 + 1056) = v102;
  sub_10005329C(&qword_100BCEE68, 255, (uint64_t (*)(uint64_t))type metadata accessor for NotificationsOptInAssembly, (uint64_t)&unk_1009B683C);
  *(_QWORD *)(v26 + 1064) = v104;
  *(_QWORD *)(v26 + 1032) = v103;
  v105 = type metadata accessor for ListAssembly();
  v106 = swift_allocObject(v105, 16, 7);
  *(_QWORD *)(v26 + 1096) = v105;
  sub_10005329C(&qword_100BCEE70, 255, (uint64_t (*)(uint64_t))type metadata accessor for ListAssembly, (uint64_t)&unk_1009AE7DC);
  *(_QWORD *)(v26 + 1104) = v107;
  *(_QWORD *)(v26 + 1072) = v106;
  v108 = type metadata accessor for ListMenuAssembly();
  v109 = swift_allocObject(v108, 16, 7);
  *(_QWORD *)(v26 + 1136) = v108;
  sub_10005329C(&qword_100BCEE78, 255, (uint64_t (*)(uint64_t))type metadata accessor for ListMenuAssembly, (uint64_t)&unk_1009C9E04);
  *(_QWORD *)(v26 + 1144) = v110;
  *(_QWORD *)(v26 + 1112) = v109;
  v111 = type metadata accessor for LocationAssembly();
  v112 = swift_allocObject(v111, 16, 7);
  *(_QWORD *)(v26 + 1176) = v111;
  sub_10005329C(&qword_100BCEE80, 255, (uint64_t (*)(uint64_t))type metadata accessor for LocationAssembly, (uint64_t)&unk_1009AB444);
  *(_QWORD *)(v26 + 1184) = v113;
  *(_QWORD *)(v26 + 1152) = v112;
  v114 = type metadata accessor for LocationPreviewAssembly();
  v115 = swift_allocObject(v114, 16, 7);
  *(_QWORD *)(v26 + 1216) = v114;
  sub_10005329C(&qword_100BCEE88, 255, (uint64_t (*)(uint64_t))type metadata accessor for LocationPreviewAssembly, (uint64_t)&unk_100998FA8);
  *(_QWORD *)(v26 + 1224) = v116;
  *(_QWORD *)(v26 + 1192) = v115;
  v117 = type metadata accessor for LocationViewerAssembly();
  v118 = swift_allocObject(v117, 16, 7);
  *(_QWORD *)(v26 + 1256) = v117;
  sub_10005329C(&qword_100BCEE90, 255, (uint64_t (*)(uint64_t))type metadata accessor for LocationViewerAssembly, (uint64_t)&unk_1009AE128);
  *(_QWORD *)(v26 + 1264) = v119;
  *(_QWORD *)(v26 + 1232) = v118;
  v120 = type metadata accessor for ReportWeatherAssembly();
  v121 = swift_allocObject(v120, 16, 7);
  *(_QWORD *)(v26 + 1296) = v120;
  sub_10005329C(&qword_100BCEE98, 255, (uint64_t (*)(uint64_t))type metadata accessor for ReportWeatherAssembly, (uint64_t)&unk_10098DF48);
  *(_QWORD *)(v26 + 1304) = v122;
  *(_QWORD *)(v26 + 1272) = v121;
  v123 = type metadata accessor for SharedSearchAssembly();
  v124 = swift_allocObject(v123, 16, 7);
  *(_QWORD *)(v26 + 1336) = v123;
  sub_10005329C(&qword_100BCEEA0, 255, (uint64_t (*)(uint64_t))type metadata accessor for SharedSearchAssembly, (uint64_t)&unk_1009C6908);
  *(_QWORD *)(v26 + 1344) = v125;
  *(_QWORD *)(v26 + 1312) = v124;
  v126 = type metadata accessor for SearchAssembly();
  v127 = swift_allocObject(v126, 16, 7);
  *(_QWORD *)(v26 + 1376) = v126;
  sub_10005329C(&qword_100BCEEA8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SearchAssembly, (uint64_t)&unk_1009B2384);
  *(_QWORD *)(v26 + 1384) = v128;
  *(_QWORD *)(v26 + 1352) = v127;
  v129 = type metadata accessor for AveragesDetailAssembly();
  v130 = swift_allocObject(v129, 16, 7);
  *(_QWORD *)(v26 + 1416) = v129;
  sub_10005329C(&qword_100BCEEB0, 255, (uint64_t (*)(uint64_t))type metadata accessor for AveragesDetailAssembly, (uint64_t)&unk_1009B7EF8);
  *(_QWORD *)(v26 + 1424) = v131;
  *(_QWORD *)(v26 + 1392) = v130;
  v132 = type metadata accessor for VFXTestAssembly();
  v133 = swift_allocObject(v132, 16, 7);
  *(_QWORD *)(v26 + 1456) = v132;
  sub_10005329C(&qword_100BCEEB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for VFXTestAssembly, (uint64_t)&unk_100992FA0);
  *(_QWORD *)(v26 + 1464) = v134;
  *(_QWORD *)(v26 + 1432) = v133;
  v135 = type metadata accessor for InteractiveMapAssembly();
  v136 = swift_allocObject(v135, 16, 7);
  *(_QWORD *)(v26 + 1496) = v135;
  sub_10005329C(&qword_100BCEEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveMapAssembly, (uint64_t)&unk_1009A5748);
  *(_QWORD *)(v26 + 1504) = v137;
  *(_QWORD *)(v26 + 1472) = v136;
  v138 = type metadata accessor for DayPickerAssembly();
  v139 = swift_allocObject(v138, 16, 7);
  *(_QWORD *)(v26 + 1536) = v138;
  sub_10005329C(&qword_100BCEEC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DayPickerAssembly, (uint64_t)&unk_100990734);
  *(_QWORD *)(v26 + 1544) = v140;
  *(_QWORD *)(v26 + 1512) = v139;
  *(_QWORD *)(v26 + 1576) = &type metadata for ContentStatusBannerAssembly;
  *(_QWORD *)(v26 + 1584) = sub_10012DEC4();
  v141 = type metadata accessor for UnitsConfigurationAssembly();
  v142 = swift_allocObject(v141, 16, 7);
  *(_QWORD *)(v26 + 1616) = v141;
  sub_10005329C(&qword_100BCEED8, 255, (uint64_t (*)(uint64_t))type metadata accessor for UnitsConfigurationAssembly, (uint64_t)&unk_10098E2AC);
  *(_QWORD *)(v26 + 1624) = v143;
  *(_QWORD *)(v26 + 1592) = v142;
  v144 = type metadata accessor for HomeAndWorkRefinementAssembly();
  v145 = swift_allocObject(v144, 16, 7);
  *(_QWORD *)(v26 + 1656) = v144;
  sub_10005329C(&qword_100BCEEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementAssembly, (uint64_t)&unk_1009D9AB0);
  *(_QWORD *)(v26 + 1664) = v146;
  *(_QWORD *)(v26 + 1632) = v145;
  sub_100121204();
  v147 = v26;
  v148 = type metadata accessor for SingletonPool(0);
  swift_allocObject(v148, *(unsigned int *)(v148 + 48), *(unsigned __int16 *)(v148 + 52));
  v149 = SingletonPool.init()();
  v150 = type metadata accessor for ContainerManager(0);
  swift_allocObject(v150, *(unsigned int *)(v150 + 48), *(unsigned __int16 *)(v150 + 52));
  return ContainerManager.init(singletonPool:bundleAssemblies:assemblies:)(v149, v1, v147);
}

void sub_10005329C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(swift_getWitnessTable(a4, v6), a1);
  }
  sub_10004A298();
}

uint64_t sub_1000532D8(double *a1)
{
  return sub_100053300(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_100053300(double a1, double a2, double a3, double a4)
{
  _QWORD v5[4];

  *(double *)v5 = a1;
  *(double *)&v5[1] = a2;
  *(double *)&v5[2] = a3;
  *(double *)&v5[3] = a4;
  sub_10005339C();
  return sub_1000C3584((uint64_t)v5, (uint64_t)&type metadata for SafeAreaInsetsKey);
}

void sub_100053338(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_100053364();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

double sub_100053364()
{
  double v1;

  sub_10005339C();
  sub_1000C2448((uint64_t)&type metadata for SafeAreaInsetsKey);
  return v1;
}

unint64_t sub_10005339C()
{
  unint64_t result;

  result = qword_100BC5AD0;
  if (!qword_100BC5AD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SafeAreaInsetsKey, &type metadata for SafeAreaInsetsKey);
    atomic_store(result, (unint64_t *)&qword_100BC5AD0);
  }
  return result;
}

void sub_1000533D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
  v6 = (int *)type metadata accessor for WeatherData(0);
  v7 = v5 + v6[5];
  v8 = type metadata accessor for Locale(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = type metadata accessor for WeatherDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v6[7];
  v12 = sub_1000BA294(&qword_100BC3348);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    v13 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  v14 = v5 + v6[8];
  v15 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
  if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for WeatherStatisticsModel(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v14, v17);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + 8));
  }
  v18 = v5 + v6[9];
  v19 = type metadata accessor for WeatherDataOverrides(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
  {
    v20 = type metadata accessor for Date(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
    v21 = v18 + *(int *)(v19 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
  }
  v61 = a2;
  v22 = a1 + *(int *)(a2 + 24);
  v23 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = (int *)type metadata accessor for PreprocessedWeatherData(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v22 + v24[5]));
  v25 = (_QWORD *)(v22 + v24[6]);
  swift_bridgeObjectRelease(v25[1]);
  swift_bridgeObjectRelease(v25[3]);
  swift_bridgeObjectRelease(v25[5]);
  v26 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel(0);
  v27 = (uint64_t)v25 + *(int *)(v26 + 28);
  v28 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v27 + 8));
    v29 = v27 + *(int *)(v28 + 20);
    v30 = type metadata accessor for TemperatureScaleConfiguration(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
    v31 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease(*(_QWORD *)(v29 + *(int *)(v31 + 32) + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v25 + *(int *)(v26 + 32) + 8));
  v32 = (_QWORD *)(v22 + v24[7]);
  swift_bridgeObjectRelease(*v32);
  v33 = (uint64_t)v32 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0) + 20);
  v34 = type metadata accessor for WeatherDescription(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  v35 = (_QWORD *)(v22 + v24[8]);
  swift_bridgeObjectRelease(v35[1]);
  swift_bridgeObjectRelease(v35[3]);
  swift_bridgeObjectRelease(v35[5]);
  swift_bridgeObjectRelease(v35[7]);
  v36 = (char *)v35 + *(int *)(type metadata accessor for ListPreprocessedDataModel(0) + 32);
  v37 = type metadata accessor for Date(0);
  v38 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8);
  v38(v36, v37);
  v39 = type metadata accessor for WeatherConditionBackgroundTimeData(0);
  v40 = (uint64_t)&v36[*(int *)(v39 + 20)];
  v41 = type metadata accessor for Elevation(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
  v42 = (uint64_t)&v36[*(int *)(v39 + 24)];
  v43 = type metadata accessor for BackgroundMoonData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  v44 = (_QWORD *)(v22 + v24[9]);
  swift_bridgeObjectRelease(v44[1]);
  swift_bridgeObjectRelease(v44[3]);
  swift_bridgeObjectRelease(v44[5]);
  swift_bridgeObjectRelease(v44[7]);
  swift_bridgeObjectRelease(v44[9]);
  swift_bridgeObjectRelease(v44[11]);
  v45 = swift_bridgeObjectRelease(v44[13]);
  v46 = v22 + v24[10];
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v34 - 8) + 8))(v46, v34, v45);
  v47 = type metadata accessor for UVIndexComponentPreprocessedDataModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v46 + *(int *)(v47 + 20) + 8));
  v48 = (_QWORD *)(v22 + v24[11]);
  swift_bridgeObjectRelease(v48[1]);
  swift_bridgeObjectRelease(v48[3]);
  swift_bridgeObjectRelease(v48[5]);
  v49 = v22 + v24[12];
  v50 = type metadata accessor for PressureTrend(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
  v51 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v49 + v51[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v49 + v51[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v49 + v51[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v49 + v51[9] + 8));
  v52 = (_QWORD *)(v22 + v24[13]);
  swift_bridgeObjectRelease(v52[1]);
  swift_bridgeObjectRelease(v52[3]);
  swift_bridgeObjectRelease(v52[5]);
  swift_bridgeObjectRelease(v52[7]);
  swift_bridgeObjectRelease(v52[9]);
  swift_bridgeObjectRelease(v52[11]);
  swift_bridgeObjectRelease(v52[13]);
  swift_bridgeObjectRelease(v52[15]);
  swift_bridgeObjectRelease(v52[17]);
  swift_bridgeObjectRelease(v52[19]);
  swift_bridgeObjectRelease(v52[21]);
  swift_bridgeObjectRelease(v52[23]);
  swift_bridgeObjectRelease(v52[25]);
  v53 = swift_bridgeObjectRelease(v52[28]);
  v54 = v22 + v24[14];
  ((void (*)(uint64_t, uint64_t, __n128))v38)(v54, v37, v53);
  v55 = v54 + *(int *)(v39 + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v55, v41);
  v56 = v54 + *(int *)(v39 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, v43))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v56, v43);
  v57 = (_QWORD *)(v22 + v24[15]);
  swift_bridgeObjectRelease(v57[1]);
  swift_bridgeObjectRelease(v57[3]);
  swift_bridgeObjectRelease(v57[5]);
  swift_bridgeObjectRelease(v57[7]);
  swift_bridgeObjectRelease(v57[9]);
  swift_bridgeObjectRelease(v57[11]);
  swift_bridgeObjectRelease(v57[13]);
  v58 = (_QWORD *)(a1 + *(int *)(v61 + 28));
  v59 = type metadata accessor for NewsDataModel(0);
  if (swift_getEnumCaseMultiPayload(v58, v59) == 1)
  {
    swift_bridgeObjectRelease(*v58);
  }
  else
  {
    v60 = type metadata accessor for News(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);
  }
}

uint64_t sub_100053A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  double *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double *v54;
  _QWORD v55[2];
  int v56;

  v54 = a3;
  v5 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v5);
  v53 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Text.Measurements(0);
  v12 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  v52 = v12;
  v13 = v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v15;
  v16 = type metadata accessor for DailyComponentView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2 + *(int *)(v16 + 44), v11);
  v17 = (_QWORD *)(a1
                 + *(int *)(type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0) + 20));
  v18 = v17[1];
  v55[0] = *v17;
  v55[1] = v18;
  v19 = sub_100114EF8();
  swift_bridgeObjectRetain(v18);
  v20 = Text.init<A>(_:)(v55, &type metadata for String, v19);
  v22 = v21;
  v56 = v23;
  v25 = v24;
  v26 = a2 + *(int *)(v16 + 36);
  v27 = *(_QWORD *)v26;
  LOBYTE(a2) = *(_BYTE *)(v26 + 8);
  sub_10008D47C(*(_QWORD *)v26, a2);
  sub_100109B54();
  LOBYTE(v13) = v28;
  sub_1000B15F8(v27, a2);
  v29 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v13 & 1) == 0)
    v29 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v29, v7);
  static Font.Weight.medium.getter(v30);
  v31 = static Font.system(_:weight:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v32 = v56 & 1;
  v33 = Text.font(_:)(v31, v20, v22, v56 & 1, v25);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  swift_release(v31);
  v40 = v37 & 1;
  sub_1000D31B4(v20, v22, v32);
  swift_bridgeObjectRelease(v25);
  v41 = type metadata accessor for Text.WritingMode(0);
  v42 = v53;
  _s7Weather24LocationCompositionStateOwst_0(v53, 1, 1, v41);
  v43 = v50;
  v44 = Text.Measurements.size(of:in:writingMode:)(v33, v35, v40, v39, v42, INFINITY, INFINITY);
  v46 = v45;
  sub_1000D31B4(v33, v35, v40);
  swift_bridgeObjectRelease(v39);
  sub_100021A14(v42, &qword_100BC39D0);
  result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v43, v51);
  v48 = v54;
  *v54 = v44;
  *((_QWORD *)v48 + 1) = v46;
  return result;
}

void sub_100053D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;

  v0 = type metadata accessor for Scope(0);
  __chkstk_darwin(v0);
  sub_1000C2974();
  v1 = sub_1000BA294(&qword_100BED388);
  v4 = sub_1000BA3CC(v1, v2, v3, (uint64_t)sub_10003D34C);
  swift_release(v4);
  sub_10009880C();
  sub_1000C2974();
  v5 = sub_1000BA294(&qword_100BED390);
  v8 = sub_1000BA3CC(v5, v6, v7, (uint64_t)sub_100143EF8);
  swift_release(v8);
  sub_10009880C();
  sub_1000C2974();
  v9 = sub_1000BA294(&qword_100BED398);
  v12 = sub_1000BA3CC(v9, v10, v11, (uint64_t)sub_100143D0C);
  swift_release(v12);
  sub_10009880C();
  sub_1000C2974();
  v13 = sub_1000BA294(&qword_100BED3A0);
  v16 = sub_1000BA3CC(v13, v14, v15, (uint64_t)sub_1001441EC);
  swift_release(v16);
  sub_10009880C();
  sub_1000C2974();
  v17 = sub_1000BA294(&qword_100BED3A8);
  v20 = sub_1000BA3CC(v17, v18, v19, (uint64_t)sub_100016544);
  swift_release(v20);
  sub_10009880C();
  sub_1000C2974();
  v21 = sub_10009C82C();
  v22 = type metadata accessor for WeatherForecastDescriptionStringBuilder(v21);
  v23 = sub_1000C3CBC(v22, 0xD000000000000017, 0x8000000100A09720, (uint64_t)sub_1001442DC);
  swift_release(v23);
  sub_10009880C();
  sub_1000C2974();
  v24 = sub_1000BA294(&qword_100BED3B0);
  v27 = sub_1000BA3CC(v24, v25, v26, (uint64_t)sub_10006808C);
  swift_release(v27);
  sub_10009880C();
  sub_1000C2974();
  v28 = sub_1000BA294(&qword_100BDBAA8);
  v31 = sub_1000BA3CC(v28, v29, v30, (uint64_t)sub_100144200);
  swift_release(v31);
  sub_10009880C();
  sub_1000C2974();
  v32 = sub_1000BA294(&qword_100BED3B8);
  v33 = sub_1000C3CBC(v32, 0, 0, (uint64_t)sub_100144298);
  swift_release(v33);
  sub_10009880C();
  sub_1000C2974();
  v34 = sub_1000BA294(&qword_100BED3C0);
  v37 = sub_1000BA3CC(v34, v35, v36, (uint64_t)sub_100143C2C);
  swift_release(v37);
  sub_10009880C();
  sub_1000C2974();
  v38 = sub_1000BA294(&qword_100BED3C8);
  v41 = sub_1000BA3CC(v38, v39, v40, (uint64_t)sub_100143CA8);
  swift_release(v41);
  sub_10009880C();
  sub_1000C2974();
  v42 = sub_1000BA294(&qword_100BED3D0);
  v45 = sub_1000BA3CC(v42, v43, v44, (uint64_t)sub_100143C18);
  swift_release(v45);
  sub_10009880C();
  sub_1000C2974();
  v46 = sub_1000BA294(&qword_100BC43E8);
  v49 = sub_1000BA3CC(v46, v47, v48, (uint64_t)sub_100143C40);
  swift_release(v49);
  sub_10009880C();
  sub_1000C2974();
  v50 = sub_1000BA294(&qword_100BED3D8);
  v53 = sub_1000BA3CC(v50, v51, v52, (uint64_t)sub_100143C04);
  swift_release(v53);
  sub_10009880C();
  sub_1000C2974();
  v54 = sub_1000BA294(&qword_100BED3E0);
  v57 = sub_1000BA3CC(v54, v55, v56, (uint64_t)sub_100143CD0);
  swift_release(v57);
  sub_10009880C();
  sub_1000C2974();
  v58 = sub_1000BA294(&qword_100BED3E8);
  v61 = sub_1000BA3CC(v58, v59, v60, (uint64_t)sub_100143C94);
  swift_release(v61);
  sub_10009880C();
  sub_1000C2974();
  v62 = sub_1000BA294(&qword_100BED3F0);
  v65 = sub_1000BA3CC(v62, v63, v64, (uint64_t)sub_100143CBC);
  swift_release(v65);
  sub_10009880C();
  sub_1000C2974();
  v66 = sub_1000BA294(&qword_100BED3F8);
  v69 = sub_1000BA3CC(v66, v67, v68, (uint64_t)sub_100143CE4);
  swift_release(v69);
  sub_10009880C();
  sub_1000C2974();
  v70 = sub_1000BA294(&qword_100BED400);
  v73 = sub_1000BA3CC(v70, v71, v72, (uint64_t)sub_100143EE4);
  swift_release(v73);
  sub_10009880C();
  sub_1000C2974();
  v74 = sub_10009C82C();
  v75 = type metadata accessor for TipCoordinator(v74);
  v76 = sub_1000C3CBC(v75, 0, 0, (uint64_t)sub_100143CF8);
  v77 = sub_10009880C();
  sub_1000B4A78(v77, enum case for Scope.singleton(_:));
  v78 = sub_1000C2AAC();
  swift_release(v78);
  swift_release(v76);
  sub_1000C3BA4();
  sub_1000C2974();
  v79 = sub_10009C82C();
  v80 = type metadata accessor for Tracker(v79);
  v81 = sub_1000C3CBC(v80, 0x6E6F697461636F4CLL, 0xEE00656C75646F4DLL, (uint64_t)sub_100144214);
  v82 = sub_10009880C();
  sub_1000B4A78(v82, enum case for Scope.containerSingleton(_:));
  v83 = sub_1000C2AAC();
  swift_release(v83);
  swift_release(v81);
  sub_1000C3BA4();
  ProxyContainer.private.getter(v84);
  RegistrationContainer.lazy(block:)(sub_100057648, 0);
  sub_10009880C();
  sub_10009D300();
}

void sub_1000541B0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t, __n128);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void (*v42)(char *, char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v6 = type metadata accessor for Tips.Status(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  if (qword_100BC2500 != -1)
    swift_once(&qword_100BC2500, sub_100159654);
  v16 = type metadata accessor for Logger(0);
  sub_1000AECD4(v16, (uint64_t)qword_100CAF2E8);
  v17 = *(void (**)(char *, char *, uint64_t, __n128))(v7 + 16);
  v40 = a1;
  v42 = v17;
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v15, a1, v6);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v41 = a2;
  if (v21)
  {
    v22 = swift_slowAlloc(22, -1);
    v38 = v9;
    v23 = v22;
    v37 = swift_slowAlloc(64, -1);
    v44 = v37;
    *(_DWORD *)v23 = 136315394;
    LOBYTE(v43) = a2;
    v39 = v3;
    v24 = String.init<A>(describing:)(&v43);
    v43 = sub_1000CE1C8(v24, v25, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    v26 = swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v42(v12, v15, v6, v26);
    v27 = String.init<A>(describing:)(v12);
    v43 = sub_1000CE1C8(v27, v28, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    v29 = swift_bridgeObjectRelease();
    v30 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    v30(v15, v6, v29);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s.stream.status=%s", (uint8_t *)v23, 0x16u);
    v31 = v37;
    swift_arrayDestroy(v37, 2);
    swift_slowDealloc(v31, -1, -1);
    v32 = v23;
    v9 = v38;
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    ((void (*)(char *, uint64_t))v30)(v15, v6);
  }

  ((void (*)(char *, uint64_t, uint64_t))v42)(v9, v40, v6);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v33 != enum case for Tips.Status.invalidated(_:))
  {
    v35 = v41;
    if (v33 == enum case for Tips.Status.pending(_:))
    {
      v36 = 0;
    }
    else
    {
      if (v33 != enum case for Tips.Status.available(_:))
        goto LABEL_13;
      v36 = 1;
    }
    sub_1001466B8(v36, v41);
    return;
  }
  v34 = v41;
  sub_1008257C4(v41);
  v35 = v34;
LABEL_13:
  sub_1001466B8(0, v35);
  ((void (*)(char *, uint64_t))v30)(v9, v6);
}

uint64_t sub_100054504(uint64_t a1, uint64_t a2)
{
  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_10005454C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[16];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;

  v51 = a4;
  v47 = a3;
  v46 = a2;
  v50 = a7;
  v9 = a2 & 1;
  v40 = a5;
  v11 = type metadata accessor for Optional(255, a5);
  v73 = a6;
  v39 = a6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v11);
  v13 = type metadata accessor for ZStack(0, v11, WitnessTable);
  v49 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v42 = (char *)&v38 - v14;
  v15 = type metadata accessor for PlaceholderContentView(255, v13);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _OpacityEffect);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v13);
  v44 = v17;
  v71 = swift_getWitnessTable(&protocol conformance descriptor for PlaceholderContentView<A>, v15);
  v72 = &protocol witness table for _OpacityEffect;
  v41 = v16;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v67 = v13;
  v68 = v16;
  v69 = v17;
  v70 = v43;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v67, &opaque type descriptor for <<opaque return type of View.animation<A>(_:body:)>>, 0);
  v48 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v19 = __chkstk_darwin(OpaqueTypeMetadata2);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v45 = (char *)&v38 - v22;
  v60 = a5;
  v61 = a6;
  v62 = a1;
  v63 = v9;
  v23 = (v46 >> 8) & 1;
  v64 = BYTE1(v46) & 1;
  v24 = v47;
  v65 = v47;
  v66 = v51;
  v25 = j___s7SwiftUI9AlignmentV6centerACvgZ(v11);
  v26 = v42;
  ZStack.init(alignment:content:)(v25);
  swift_retain();
  LOBYTE(v11) = v9;
  sub_1007A6478();
  v28 = v27;
  swift_release(a1);
  v29 = *(_QWORD *)(v28 + 40);
  swift_retain();
  swift_release(v28);
  v53 = v40;
  v54 = v39;
  v55 = a1;
  v56 = v11;
  v57 = v23;
  v58 = v24;
  v59 = v51;
  v30 = swift_checkMetadataState(0, v41);
  v31 = v44;
  v32 = v43;
  View.animation<A>(_:body:)(v29, sub_1007ECF7C, v52, v13, v30, v44, v43);
  v33 = swift_release(v29);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v26, v13, v33);
  v67 = v13;
  v68 = v30;
  v69 = v31;
  v70 = v32;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.animation<A>(_:body:)>>, 1);
  v35 = (uint64_t)v45;
  sub_1000B2074(v21, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  v36 = *(void (**)(char *, uint64_t))(v48 + 8);
  v36(v21, OpaqueTypeMetadata2);
  sub_1000B1100(v35, OpaqueTypeMetadata2, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_1000548F0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1009AE6F0);
  v4 = v0;
  sub_10000F1C8(&qword_100BE3238, type metadata accessor for WireframeContentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t *assignWithCopy for LocationTipOverlayModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v4 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v4);
  a1[1] = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_10008D47C(v5, v6);
  v7 = a1[2];
  v8 = *((_BYTE *)a1 + 24);
  a1[2] = v5;
  *((_BYTE *)a1 + 24) = v6;
  sub_1000B15F8(v7, v8);
  v9 = a2[4];
  v10 = *((_BYTE *)a2 + 40);
  sub_10008D47C(v9, v10);
  v11 = a1[4];
  v12 = *((_BYTE *)a1 + 40);
  a1[4] = v9;
  *((_BYTE *)a1 + 40) = v10;
  sub_1000B15F8(v11, v12);
  v13 = a2[6];
  v14 = a2[7];
  v15 = *((_BYTE *)a2 + 64);
  sub_100082BE8(v13, v14, v15);
  v16 = a1[6];
  v17 = a1[7];
  v18 = *((_BYTE *)a1 + 64);
  a1[6] = v13;
  a1[7] = v14;
  *((_BYTE *)a1 + 64) = v15;
  sub_100082C5C(v16, v17, v18);
  v19 = a2[9];
  LOBYTE(v14) = *((_BYTE *)a2 + 80);
  sub_10008D47C(v19, v14);
  v20 = a1[9];
  v21 = *((_BYTE *)a1 + 80);
  a1[9] = v19;
  *((_BYTE *)a1 + 80) = v14;
  sub_1000B15F8(v20, v21);
  v22 = a2[11];
  LOBYTE(v14) = *((_BYTE *)a2 + 96);
  sub_10008D47C(v22, v14);
  v23 = a1[11];
  v24 = *((_BYTE *)a1 + 96);
  a1[11] = v22;
  *((_BYTE *)a1 + 96) = v14;
  sub_1000B15F8(v23, v24);
  *((_BYTE *)a1 + 97) = *((_BYTE *)a2 + 97);
  return a1;
}

void sub_100054A9C()
{
  uint64_t v0;

  v0 = sub_100542E90();
  sub_1000C0E60(v0);
  sub_10004A298();
}

void sub_100054AB8()
{
  uint64_t v0;

  v0 = sub_10045B984();
  sub_1000C0E60(v0);
  sub_10004A298();
}

uint64_t sub_100054AD4(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_1000E6E9C();
  return v2;
}

unint64_t sub_100054B0C()
{
  unint64_t result;

  result = qword_100BC5AF0;
  if (!qword_100BC5AF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GridCompactLayoutKey, &type metadata for GridCompactLayoutKey);
    atomic_store(result, (unint64_t *)&qword_100BC5AF0);
  }
  return result;
}

uint64_t sub_100054B48()
{
  return sub_100054AD4((void (*)(void))sub_100054B0C);
}

unint64_t sub_100054B5C()
{
  unint64_t result;

  result = qword_100BC5B20;
  if (!qword_100BC5B20)
  {
    result = swift_getWitnessTable(&unk_1009800D4, &type metadata for LocationConditionRequiresAdditionalContrastEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_100BC5B20);
  }
  return result;
}

uint64_t sub_100054B98()
{
  return sub_100054AD4((void (*)(void))sub_100054B5C);
}

uint64_t destroy for AnyEquatable(_QWORD *a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return swift_release(a1[5]);
}

uint64_t sub_100054BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t result;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char v31;
  id v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  __n128 v52;
  _BYTE v53[4];
  unsigned int v54;
  void (*v55)(uint64_t);
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;

  v1 = v0;
  v2 = sub_1000BA294(&qword_100BD6688);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v53[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for InterfaceOrientation(0);
  __chkstk_darwin(v6);
  v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for DeviceOrientation(0);
  __chkstk_darwin(v9);
  v11 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for OrientationData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v65 = &v53[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __chkstk_darwin(v14);
  v18 = &v53[-v17];
  result = Tracker.diagnosticSubmissionAllowed.getter(v16);
  if ((result & 1) != 0)
  {
    v59 = v18;
    v60 = v13;
    v61 = v12;
    v20 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v21 = objc_msgSend(v20, "orientation");

    sub_1001598E4((uint64_t)v21, (uint64_t)v11);
    v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v23 = objc_msgSend(v22, "connectedScenes");

    v24 = sub_1000A0794(0, &qword_100BD6690, UIScene_ptr);
    sub_100120408(&qword_100BD6698, &qword_100BD6690, UIScene_ptr);
    v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v25);

    sub_10001AA9C();
    v28 = v27;
    swift_bridgeObjectRelease(v26);
    v63 = v3;
    v64 = v2;
    v62 = v5;
    if (v28)
    {
      v29 = objc_opt_self(UIWindowScene);
      v30 = (void *)swift_dynamicCastObjCClass(v28, v29);
      v31 = v30 == 0;
      if (v30)
        v32 = objc_msgSend(v30, "interfaceOrientation");
      else
        v32 = 0;
      v33 = v59;

    }
    else
    {
      v32 = 0;
      v31 = 1;
      v33 = v59;
    }
    sub_10015984C((uint64_t)v32, v31, (uint64_t)v8);
    v34 = OrientationData.init(deviceOrientation:interfaceOrientation:)(v11, v8);
    v59 = *(_BYTE **)(v1 + 32);
    v35 = SessionManager.tracker.getter(v34);
    v36 = sub_1000BA294(&qword_100BCDC68);
    v58 = v36;
    v37 = type metadata accessor for DataEventTrait(0);
    v38 = v33;
    v39 = *(_QWORD *)(v37 - 8);
    v40 = *(unsigned __int8 *)(v39 + 80);
    v41 = (v40 + 32) & ~v40;
    v57 = v41 + *(_QWORD *)(v39 + 72);
    v42 = v40 | 7;
    v43 = swift_allocObject(v36, v57, v40 | 7);
    v56 = xmmword_10097CA50;
    *(_OWORD *)(v43 + 16) = xmmword_10097CA50;
    v54 = enum case for DataEventTrait.unique(_:);
    v55 = *(void (**)(uint64_t))(v39 + 104);
    v55(v43 + v41);
    sub_10000F1C8(&qword_100BD66A0, (uint64_t (*)(uint64_t))&type metadata accessor for OrientationData);
    v45 = v44;
    v46 = v61;
    Tracker.push<A>(data:traits:file:line:)(v38, v43, 0xD000000000000065, 0x80000001009FA420, 369, v61, v44);
    swift_release(v35);
    v47 = swift_bridgeObjectRelease(v43);
    v48 = v60;
    v49 = v65;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v60 + 16))(v65, v38, v46, v47);
    v50 = v62;
    SessionData.init(key:data:)(0x7461746E6569726FLL, 0xEF617461446E6F69, v49, v46, v45);
    v51 = swift_allocObject(v58, v57, v42);
    *(_OWORD *)(v51 + 16) = v56;
    ((void (*)(uint64_t, _QWORD, uint64_t))v55)(v51 + v41, v54, v37);
    SessionManager.push<A>(_:traits:file:line:)(v50, v51, 0xD000000000000065, 0x80000001009FA420, 371, v46, v45);
    v52 = swift_bridgeObjectRelease(v51);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v63 + 8))(v50, v64, v52);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v48 + 8))(v38, v46);
  }
  return result;
}

uint64_t sub_100055064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain();
  return a1;
}

void sub_1000550B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  sub_1000986AC();
  v124 = v22;
  v125 = v23;
  v131 = v24;
  v132 = v25;
  v118 = v26;
  v119 = v27;
  v117 = v28;
  v30 = v29;
  v121 = a22;
  v122 = v31;
  v120 = a21;
  v32 = type metadata accessor for SkyBackgroundGradient(0);
  v126 = *(_QWORD *)(v32 - 8);
  v127 = v32;
  sub_10009D98C();
  __chkstk_darwin(v33);
  sub_1000BEA84(v34, v114);
  v35 = sub_1000D0BEC();
  v128 = *(_QWORD *)(v35 - 8);
  v129 = v35;
  sub_10009D98C();
  __chkstk_darwin(v36);
  sub_100088FDC();
  v123 = v37;
  v116 = sub_1000BA294(&qword_100C13D20);
  sub_1000B42B0();
  __chkstk_darwin(v38);
  sub_10009883C();
  v115 = v39 - v40;
  __chkstk_darwin(v41);
  v43 = (char *)&v114 - v42;
  v114 = sub_1000BA294(&qword_100C0A0A0);
  sub_1000B42B0();
  __chkstk_darwin(v44);
  sub_10009883C();
  v47 = v45 - v46;
  __chkstk_darwin(v48);
  v50 = (char *)&v114 - v49;
  v51 = sub_1000BA294(&qword_100BC4678);
  sub_1000B42B0();
  __chkstk_darwin(v52);
  sub_10009883C();
  v55 = v53 - v54;
  __chkstk_darwin(v56);
  v58 = (char *)&v114 - v57;
  v59 = type metadata accessor for LocationViewCollisionOptions(0);
  sub_10000F1C8(&qword_100BCCB38, type metadata accessor for LocationViewCollisionOptions);
  *v30 = EnvironmentObject.init()(v59, v60);
  v30[1] = v61;
  v62 = (int *)sub_1000ED3B8();
  v63 = (_QWORD *)((char *)v30 + v62[5]);
  *v63 = swift_getKeyPath(&unk_1009D8D00);
  v64 = sub_1000BA294(&qword_100BC2990);
  sub_1000BA934(v64);
  v65 = (_QWORD *)((char *)v30 + v62[6]);
  *v65 = swift_getKeyPath(&unk_1009D8D30);
  v66 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  sub_1000BA934(v66);
  v67 = (_QWORD *)((char *)v30 + v62[7]);
  *v67 = swift_getKeyPath(&unk_1009D8D58);
  v68 = sub_1000BA294(&qword_100C062D0);
  sub_1000BA934(v68);
  v69 = (char *)v30 + v62[8];
  *(_QWORD *)v69 = swift_getKeyPath(&unk_1009D8D80);
  v69[8] = 0;
  v70 = (char *)v30 + v62[9];
  *(_QWORD *)v70 = swift_getKeyPath(&unk_1009D8DB0);
  v70[8] = 0;
  *(_QWORD *)((char *)v30 + v62[15]) = 0;
  v130 = sub_1000BE880();
  sub_10009D34C((uint64_t)v58, v71, v72, v130);
  sub_100037794((uint64_t)v58, v55, &qword_100BC4678);
  State.init(wrappedValue:)(v55, v51);
  sub_100021A14((uint64_t)v58, &qword_100BC4678);
  v73 = sub_1000DA7E4();
  sub_10009D34C((uint64_t)v50, v74, v75, v73);
  sub_100037794((uint64_t)v50, v47, &qword_100C0A0A0);
  State.init(wrappedValue:)(v47, v114);
  sub_100021A14((uint64_t)v50, &qword_100C0A0A0);
  v76 = sub_1000C2384();
  sub_10009D34C((uint64_t)v43, v77, v78, v76);
  v79 = v115;
  sub_100037794((uint64_t)v43, v115, &qword_100C13D20);
  State.init(wrappedValue:)(v79, v116);
  sub_100021A14((uint64_t)v43, &qword_100C13D20);
  v80 = (_QWORD *)((char *)v30 + v62[21]);
  v81 = type metadata accessor for WeatherConditionBackgroundModifierState(0);
  v82 = sub_1000860C4(v81);
  *(_BYTE *)(v82 + 16) = 0;
  ((void (*)(void))ObservationRegistrar.init())();
  v133 = v82;
  sub_100099824();
  v83 = v135;
  *v80 = v134;
  v80[1] = v83;
  v133 = 0;
  sub_100099824();
  sub_1000FC748();
  v133 = 0;
  sub_100099824();
  sub_1000FC748();
  v84 = (char *)v30 + v62[24];
  *(_QWORD *)v84 = sub_1001500E8;
  *((_QWORD *)v84 + 1) = 0;
  v84[16] = 0;
  v85 = (char *)v30 + v62[25];
  *(_QWORD *)v85 = swift_getKeyPath(&unk_1009D8DD8);
  v85[8] = 0;
  v86 = (char *)v30 + v62[27];
  *(_QWORD *)v86 = sub_100150BB4;
  *((_QWORD *)v86 + 1) = 0;
  v86[16] = 0;
  v87 = (_QWORD *)((char *)v30 + v62[28]);
  v88 = type metadata accessor for WeatherConditionBackgroundModifierObservableModel(0);
  v89 = sub_1000860C4(v88);
  v90 = v130;
  v91 = _s7Weather24LocationCompositionStateOwst_0(v89 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel__model, 1, 1, v130);
  ObservationRegistrar.init()(v91);
  v133 = v89;
  sub_100099824();
  v92 = v135;
  *v87 = v134;
  v87[1] = v92;
  *(_DWORD *)((char *)v30 + v62[29]) = 1092616192;
  v93 = (char *)v30 + v62[10];
  v116 = *(_QWORD *)(v90 - 8);
  v94 = v117;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v93, v117, v90);
  v95 = (_QWORD *)((char *)v30 + v62[11]);
  v96 = v131;
  v97 = v118;
  v98 = v119;
  *v95 = v131;
  v95[1] = v97;
  sub_100043CA8((uint64_t)v98, (uint64_t)v30 + v62[12]);
  v99 = (_QWORD *)((char *)v30 + v62[26]);
  v100 = type metadata accessor for WeatherVFXConditionBackground(0);
  sub_10000F1C8(&qword_100BD0870, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherVFXConditionBackground);
  v102 = v101;
  swift_unknownObjectRetain(v96);
  swift_retain();
  *v99 = ObservedObject.init(wrappedValue:)(v103, v100, v102);
  v99[1] = v104;
  v105 = (_QWORD *)((char *)v30 + v62[13]);
  v106 = v121;
  v107 = v124;
  *v105 = v122;
  v105[1] = v107;
  v105[2] = v125;
  *((_BYTE *)v30 + v62[16]) = v120;
  *(_QWORD *)((char *)v30 + v62[14]) = v106;
  swift_retain();
  v108 = sub_1000BE978();
  v109 = SkyBackgroundGradient.gradient()(v108);
  sub_1000B3C3C();
  v110 = sub_1000BE978();
  v111 = SkyBackgroundGradient.gradient()(v110);
  sub_1000B3C3C();
  v112 = v123;
  AnimatedGradient.init(baseGradient:animatedGradient:showAnimatedGradient:)(v109, v111, 0);
  swift_unknownObjectRelease(v131);
  swift_release(v132);
  swift_release(v106);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v98);
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v94, v130);
  v113 = (char *)v30 + v62[17];
  *(_QWORD *)&v113[*(int *)(sub_1000BA294(&qword_100C13D28) + 28)] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v113, v112, v129);
  sub_100098640();
}

_QWORD *sub_1000556C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;

  v6 = *a1;
  *a1 = *a2;
  swift_retain();
  swift_release(v6);
  a1[1] = a2[1];
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_100021A14((uint64_t)a1 + v7, &qword_100BC2990);
    v10 = sub_1000BA294(&qword_100BC2990);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
    v13 = a3[6];
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    sub_100021A14((uint64_t)a1 + v13, (uint64_t *)&unk_100C09CD0);
    v16 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for UserInterfaceSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17))
      {
        v18 = sub_1000BA294(&qword_100BC5A68);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
        v19 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v17);
      }
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v19);
    v20 = a3[7];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    sub_100021A14((uint64_t)a1 + v20, &qword_100C062D0);
    v23 = sub_1000BA294(&qword_100C062D0);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for TargetWindowSizeClass(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24))
      {
        v25 = sub_1000BA294(&qword_100C0A0A0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        v26 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
        v26 = 1;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v24);
      }
    }
    else
    {
      *v21 = *v22;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v26);
  }
  v27 = a3[8];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)v29;
  v31 = v29[8];
  sub_10008D47C(*(_QWORD *)v29, v31);
  v32 = *(_QWORD *)v28;
  v33 = v28[8];
  *(_QWORD *)v28 = v30;
  v28[8] = v31;
  sub_1000B15F8(v32, v33);
  v34 = a3[9];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = v36[8];
  sub_10008D47C(*(_QWORD *)v36, v38);
  v39 = *(_QWORD *)v35;
  v40 = v35[8];
  *(_QWORD *)v35 = v37;
  v35[8] = v38;
  sub_1000B15F8(v39, v40);
  v41 = a3[10];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(void (**)(char *, char *, uint64_t))(v45 + 24);
  v46(v42, v43, v44);
  v47 = a3[11];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = *v49;
  v51 = v49[1];
  v52 = *v48;
  *v48 = *v49;
  swift_unknownObjectRetain(v50);
  swift_unknownObjectRelease(v52);
  v48[1] = v51;
  sub_100094D04((_QWORD *)((char *)a1 + a3[12]), (_QWORD *)((char *)a2 + a3[12]));
  v53 = a3[13];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (_QWORD *)((char *)a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  v56 = v55[2];
  v57 = v54[2];
  v54[2] = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v58 = a3[14];
  v59 = *(_QWORD *)((char *)a1 + v58);
  *(_QWORD *)((char *)a1 + v58) = *(_QWORD *)((char *)a2 + v58);
  swift_retain();
  swift_release(v59);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v60 = a3[17];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for AnimatedGradient(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  v64 = *(int *)(sub_1000BA294(&qword_100C13D28) + 28);
  v65 = *(_QWORD *)&v61[v64];
  *(_QWORD *)&v61[v64] = *(_QWORD *)&v62[v64];
  swift_retain();
  swift_release(v65);
  v66 = a3[18];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  LODWORD(v65) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v66, 1, v44);
  v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v44);
  if ((_DWORD)v65)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v67, v68, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v44);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v67, v44);
LABEL_21:
    v70 = sub_1000BA294(&qword_100BC4678);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_22;
  }
  v46(v67, v68, v44);
LABEL_22:
  v71 = *(int *)(sub_1000BA294(&qword_100C13D38) + 28);
  v72 = *(_QWORD *)&v67[v71];
  *(_QWORD *)&v67[v71] = *(_QWORD *)&v68[v71];
  swift_retain();
  swift_release(v72);
  v73 = a3[19];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = type metadata accessor for TargetWindowSizeClass(0);
  v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v76);
  v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  v79 = *(_QWORD *)(v76 - 8);
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v76);
LABEL_27:
    v80 = sub_1000BA294(&qword_100C0A0A0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 24))(v74, v75, v76);
LABEL_28:
  v81 = *(int *)(sub_1000BA294(&qword_100C13D40) + 28);
  v82 = *(_QWORD *)&v74[v81];
  *(_QWORD *)&v74[v81] = *(_QWORD *)&v75[v81];
  swift_retain();
  swift_release(v82);
  v83 = a3[20];
  v84 = (char *)a1 + v83;
  v85 = (char *)a2 + v83;
  v86 = type metadata accessor for CollisionViewMetrics(0);
  v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
  v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
  if (!v87)
  {
    v89 = *(_QWORD *)(v86 - 8);
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v84, v85, v86);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v89 + 8))(v84, v86);
    goto LABEL_33;
  }
  if (v88)
  {
LABEL_33:
    v90 = sub_1000BA294(&qword_100C13D20);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
LABEL_34:
  v91 = *(int *)(sub_1000BA294(&qword_100C13D48) + 28);
  v92 = *(_QWORD *)&v84[v91];
  *(_QWORD *)&v84[v91] = *(_QWORD *)&v85[v91];
  swift_retain();
  swift_release(v92);
  v93 = a3[21];
  v94 = (char *)a1 + v93;
  v95 = (char *)a2 + v93;
  v96 = *(_QWORD *)((char *)a1 + v93);
  *(_QWORD *)((char *)a1 + v93) = *(_QWORD *)((char *)a2 + v93);
  swift_retain();
  swift_release(v96);
  v97 = *((_QWORD *)v94 + 1);
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  swift_retain();
  swift_release(v97);
  v98 = a3[22];
  v99 = (_QWORD *)((char *)a1 + v98);
  v100 = (_QWORD *)((char *)a2 + v98);
  *v99 = *v100;
  v101 = v99[1];
  v99[1] = v100[1];
  swift_retain();
  swift_release(v101);
  v102 = a3[23];
  v103 = (_QWORD *)((char *)a1 + v102);
  v104 = (_QWORD *)((char *)a2 + v102);
  *v103 = *v104;
  v105 = v103[1];
  v103[1] = v104[1];
  swift_retain();
  swift_release(v105);
  v106 = a3[24];
  v107 = (char *)a1 + v106;
  v108 = (char *)a2 + v106;
  v109 = *(_QWORD *)v108;
  v110 = *((_QWORD *)v108 + 1);
  LOBYTE(v95) = v108[16];
  sub_100037094(*(_QWORD *)v108, v110);
  v111 = *(_QWORD *)v107;
  v112 = *((_QWORD *)v107 + 1);
  *(_QWORD *)v107 = v109;
  *((_QWORD *)v107 + 1) = v110;
  v107[16] = (char)v95;
  sub_1000BF398(v111, v112);
  v113 = a3[25];
  v114 = (char *)a1 + v113;
  v115 = (char *)a2 + v113;
  v116 = *(_QWORD *)v115;
  LOBYTE(v110) = v115[8];
  sub_10008D47C(*(_QWORD *)v115, v110);
  v117 = *(_QWORD *)v114;
  v118 = v114[8];
  *(_QWORD *)v114 = v116;
  v114[8] = v110;
  sub_1000B15F8(v117, v118);
  v119 = a3[26];
  v120 = (_QWORD *)((char *)a1 + v119);
  v121 = (_QWORD *)((char *)a2 + v119);
  *v120 = *v121;
  v122 = v120[1];
  v120[1] = v121[1];
  swift_retain();
  swift_release(v122);
  v123 = a3[27];
  v124 = (char *)a1 + v123;
  v125 = (char *)a2 + v123;
  v126 = *(_QWORD *)v125;
  v127 = *((_QWORD *)v125 + 1);
  LOBYTE(v114) = v125[16];
  sub_100037094(*(_QWORD *)v125, v127);
  v128 = *(_QWORD *)v124;
  v129 = *((_QWORD *)v124 + 1);
  *(_QWORD *)v124 = v126;
  *((_QWORD *)v124 + 1) = v127;
  v124[16] = (char)v114;
  sub_1000BF398(v128, v129);
  v130 = a3[28];
  v131 = (char *)a1 + v130;
  v132 = (char *)a2 + v130;
  v133 = *(_QWORD *)((char *)a1 + v130);
  *(_QWORD *)((char *)a1 + v130) = *(_QWORD *)((char *)a2 + v130);
  swift_retain();
  swift_release(v133);
  v134 = *((_QWORD *)v131 + 1);
  *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
  swift_retain();
  swift_release(v134);
  *(_DWORD *)((char *)a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  return a1;
}

uint64_t sub_100055F54@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (**v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t WitnessTable;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  void (**v126)(char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v133 = a1;
  v132 = a6;
  v10 = sub_100075EB0(&qword_100BC4058);
  v137 = type metadata accessor for ModifiedContent(0, a2, v10);
  v125 = *(char **)(v137 - 8);
  v11 = __chkstk_darwin(v137);
  v127 = (uint64_t)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v124 = (char *)&v110 - v14;
  __chkstk_darwin(v13);
  v126 = (void (**)(char *, uint64_t))((char *)&v110 - v15);
  v159 = a2;
  v160 = a3;
  v161 = a4;
  v162 = a5;
  v16 = type metadata accessor for PageContainer(0, (uint64_t)&v159);
  v118 = *(_QWORD *)(v16 - 8);
  v113 = *(_QWORD *)(v118 + 64);
  __chkstk_darwin(v16);
  v116 = (uint64_t)&v110 - v17;
  v159 = a2;
  v160 = a3;
  v161 = a4;
  v162 = a5;
  v18 = type metadata accessor for IDView(0);
  v112 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v121 = (char *)&v110 - v19;
  v136 = v20;
  v21 = type metadata accessor for ModifiedContent(0, v20, v10);
  v117 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v115 = (uint64_t)&v110 - v22;
  v131 = v23;
  v24 = type metadata accessor for ModifiedContent(0, v23, &type metadata for _AppearanceActionModifier);
  v119 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v120 = (uint64_t)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v114 = (uint64_t)&v110 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v110 - v29;
  v159 = a2;
  v160 = a3;
  v122 = a3;
  v138 = a4;
  v161 = a4;
  v162 = a5;
  v123 = a5;
  v31 = type metadata accessor for TransitionContext(255, (uint64_t)&v159);
  v32 = type metadata accessor for Optional(0, v31);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v110 - v35;
  v37 = *(void (***)(char *, char *, uint64_t))(v31 - 8);
  __chkstk_darwin(v34);
  v39 = (char *)&v110 - v38;
  v128 = v24;
  v40 = v24;
  v41 = v133;
  v130 = type metadata accessor for _ConditionalContent(0, v40, v137);
  v134 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v129 = (char *)&v110 - v42;
  v135 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v36, v41 + *(int *)(v16 + 56), v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v31) == 1)
  {
    v43 = v138;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
LABEL_7:
    v54 = a2;
    v55 = v136;
    v56 = v137;
    if (*(_QWORD *)(v41 + *(int *)(v135 + 52)))
      v57 = *(_QWORD *)(v41 + *(int *)(v135 + 52));
    else
      v57 = static AnyTransition.identity.getter();
    swift_retain();
    v58 = v124;
    View.transition(_:)(v57, v54, v43);
    swift_release(v57);
    v59 = sub_1000A609C(&qword_100BC4050, &qword_100BC4058);
    v157 = v43;
    v158 = v59;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v56);
    v61 = (uint64_t)v126;
    sub_1000B2074(v58, v56, WitnessTable);
    v62 = (void (*)(char *, uint64_t))*((_QWORD *)v125 + 1);
    v62(v58, v56);
    v63 = v127;
    sub_1000B1100(v61, v56, v127);
    v155 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v55);
    v156 = v59;
    v64 = v131;
    v153 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v131);
    v154 = &protocol witness table for _AppearanceActionModifier;
    v65 = v128;
    v66 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v128);
    v67 = v55;
    v68 = (uint64_t)v129;
    v69 = WitnessTable;
    v70 = v65;
    sub_1000B20B0(v63, v65, v56, v66, v69, v71, v72, v73, v110, (uint64_t)v111, v112, v113, v114, v115, v116, v117, v118, v119);
    v62((char *)v63, v56);
    v74 = v61;
    v75 = v138;
    v62((char *)v74, v56);
    v76 = v130;
    v77 = v132;
    goto LABEL_13;
  }
  v44 = v121;
  v111 = v30;
  v37[4](v39, v36, v31);
  v45 = v122;
  v159 = a2;
  v160 = v122;
  v46 = v123;
  v161 = v138;
  v162 = v123;
  v47 = type metadata accessor for Page(0, (uint64_t)&v159);
  v48 = dispatch thunk of static Equatable.== infix(_:_:)(&v39[*(int *)(v47 + 52)], v41 + *(int *)(v47 + 52), v45, *(_QWORD *)(v46 + 8));
  v49 = v39;
  if ((v48 & 1) == 0)
  {
    v43 = v138;
    ((void (*)(char *, uint64_t))v37[1])(v49, v31);
    goto LABEL_7;
  }
  v126 = (void (**)(char *, uint64_t))v37;
  v127 = v31;
  v50 = *(int *)(v31 + 52);
  v125 = v39;
  v51 = &v39[v50 + *(int *)(v47 + 52)];
  v124 = a2;
  View.id<A>(_:)(v51, a2, v45, v138, v46);
  v52 = *(int *)(v135 + 52);
  if (*(_QWORD *)(v41 + v52))
    v53 = *(_QWORD *)(v41 + v52);
  else
    v53 = static AnyTransition.identity.getter();
  v78 = v136;
  v79 = v115;
  v80 = v113;
  v81 = v112;
  swift_retain();
  v82 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v78);
  View.transition(_:)(v53, v78, v82);
  swift_release(v53);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v78);
  v83 = v118;
  v84 = v116;
  v85 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v116, v41, v135);
  v86 = *(unsigned __int8 *)(v83 + 80);
  v87 = (v86 + 48) & ~v86;
  v88 = (char *)swift_allocObject(&unk_100B85288, v87 + v80, v86 | 7);
  v89 = v122;
  *((_QWORD *)v88 + 2) = v124;
  *((_QWORD *)v88 + 3) = v89;
  v90 = v123;
  *((_QWORD *)v88 + 4) = v138;
  *((_QWORD *)v88 + 5) = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(&v88[v87], v84, v85);
  v91 = sub_1000A609C(&qword_100BC4050, &qword_100BC4058);
  v143 = v82;
  v144 = v91;
  v64 = v131;
  v92 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v131);
  v93 = v114;
  View.onDisappear(perform:)(sub_1006204C4, v88, v64, v92);
  swift_release(v88);
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v79, v64);
  v141 = v92;
  v67 = v136;
  v142 = &protocol witness table for _AppearanceActionModifier;
  v94 = v128;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v128);
  v96 = (uint64_t)v111;
  sub_1000B2074(v93, v94, v95);
  v97 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  v97(v93, v94);
  v98 = v120;
  sub_1000B1100(v96, v94, v120);
  v99 = v138;
  v139 = v138;
  v140 = v91;
  v70 = v94;
  v56 = v137;
  v100 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v137);
  v68 = (uint64_t)v129;
  sub_1001589C0(v98, v70, v56, v95, v100, v101, v102, v103, v110, (uint64_t)v111, v112, v113, v114, v115, v116, v117, v118, v119);
  v104 = v98;
  v75 = v99;
  v97(v104, v70);
  v97((uint64_t)v111, v70);
  v126[1](v125, v127);
  v77 = v132;
  v76 = v130;
LABEL_13:
  v105 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v67);
  v106 = sub_1000A609C(&qword_100BC4050, &qword_100BC4058);
  v151 = v105;
  v152 = v106;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v64);
  v150 = &protocol witness table for _AppearanceActionModifier;
  v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v70);
  v147 = v75;
  v148 = v106;
  v108 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v56);
  v145 = v107;
  v146 = v108;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v76);
  sub_1000B1100(v68, v76, v77);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v68, v76);
}

void sub_10005695C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  void (*v50)();
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)();
  unint64_t v73;
  char v74;

  sub_1000986AC();
  v71 = v2;
  v67 = sub_1000BE878();
  v3 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  sub_100098728();
  v6 = v5 - v4;
  type metadata accessor for LocationViewerViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v11 = sub_100098AA0();
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  v62 = type metadata accessor for LocationViewerFullscreenMapPresentationSourceModifier(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  sub_1000BA294(&qword_100BED890);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = (_QWORD *)(v22 - v21);
  v60 = sub_1000BA294(&qword_100BED898);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100098728();
  v27 = v26 - v25;
  v69 = sub_1000BA294(&qword_100BED8A0);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_100098728();
  v61 = v30 - v29;
  v68 = sub_1000BA294(&qword_100BED8A8);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100098694();
  v32 = sub_1000BA294(&qword_100BED8B0);
  v70 = *(_QWORD *)(v32 - 8);
  sub_10009D98C();
  v34 = __chkstk_darwin(v33);
  v63 = (char *)&v59 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v66 = (char *)&v59 - v37;
  *v23 = static Alignment.center.getter(v36);
  v23[1] = v38;
  v39 = sub_1000BA294(&qword_100BED8B8);
  sub_100529378(v0, (uint64_t)v23 + *(int *)(v39 + 44));
  sub_10007A064();
  sub_1000BF64C();
  v40 = v6;
  v41 = v6;
  v42 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v41, v10, v67);
  sub_1000BF3B4();
  LocationModel.coalesceLocationIdentifier.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v40, v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v19, v15, v65);
  v43 = v19 + *(int *)(v62 + 20);
  *(_QWORD *)v43 = swift_getKeyPath(&unk_1009AB820);
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  *(_OWORD *)(v43 + 40) = 0u;
  *(_OWORD *)(v43 + 56) = 0u;
  *(_BYTE *)(v43 + 72) = 0;
  sub_100037768((uint64_t)v23, v27, &qword_100BED890);
  v44 = v60;
  sub_10007802C(v19, v27 + *(int *)(v60 + 36), type metadata accessor for LocationViewerFullscreenMapPresentationSourceModifier);
  sub_100021A14((uint64_t)v23, &qword_100BED890);
  v72 = sub_100124C30;
  v73 = 0;
  v74 = 0;
  v45 = sub_1005372F4();
  v46 = v61;
  View.modifier<A>(_:)(&v72, v44, &type metadata for LocationViewerViewCollisionEnvironment, v45);
  sub_100021A14(v27, &qword_100BED898);
  v72 = sub_10012673C;
  v73 = 0;
  v74 = 0;
  sub_1003A70C0((uint64_t)&unk_100BED8D8);
  View.modifier<A>(_:)(&v72, v69, &type metadata for LocationViewerViewVFXEnvironment, v47);
  sub_100021A14(v46, &qword_100BED8A0);
  v48 = sub_100537390();
  v49 = v63;
  v50 = (void (*)())v68;
  View.enableForegroundEffects()(v68, v48);
  sub_100021A14(v1, &qword_100BED8A8);
  v72 = v50;
  v73 = v48;
  swift_getOpaqueTypeConformance2(&v72, &opaque type descriptor for <<opaque return type of View.enableForegroundEffects()>>, 1);
  v51 = v66;
  sub_10009DB74();
  sub_1000B2074(v52, v53, v54);
  v55 = *(void (**)(char *, uint64_t))(v70 + 8);
  v55(v49, v32);
  sub_10009DB74();
  sub_1000B1100(v56, v57, v58);
  v55(v51, v32);
  sub_100098640();
}

void sub_100056D78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double *v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  int v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  double v38;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a1;
  v2 = type metadata accessor for ContentSizeCategory(0);
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = __chkstk_darwin(v2);
  v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v62 = (char *)&v58 - v5;
  v6 = sub_1000BA294(&qword_100BC3BB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BC3BC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100BC3BC8);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BC3BD0);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1000BA294(&qword_100BC3BD8);
  __chkstk_darwin(v59);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1000BA294(&qword_100BC3A18);
  v20 = __chkstk_darwin(v60);
  v58 = (uint64_t)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v20);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  sub_1000BA294(&qword_100BC3BE0);
  sub_1001734D4(v1);
  v22 = sub_1000299FC();
  sub_100037768((uint64_t)v8, (uint64_t)v11, &qword_100BC3BB8);
  v23 = (double *)&v11[*(int *)(v9 + 36)];
  *v23 = 0.0;
  v23[1] = v22;
  sub_100021A14((uint64_t)v8, &qword_100BC3BB8);
  KeyPath = swift_getKeyPath(&unk_10097E288);
  sub_100037768((uint64_t)v11, (uint64_t)v14, &qword_100BC3BC0);
  v25 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *v25 = KeyPath;
  v25[1] = 0x3FE0000000000000;
  sub_100021A14((uint64_t)v11, &qword_100BC3BC0);
  v26 = swift_getKeyPath(&unk_10097E2B8);
  sub_100037768((uint64_t)v14, (uint64_t)v17, &qword_100BC3BC8);
  v27 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v27 = v26;
  *((_QWORD *)v27 + 1) = 1;
  v27[16] = 0;
  sub_100021A14((uint64_t)v14, &qword_100BC3BC8);
  v28 = static Edge.Set.leading.getter();
  v29 = static Edge.Set.trailing.getter();
  v30 = Edge.Set.init(rawValue:)(0);
  v31 = Edge.Set.init(rawValue:)(v30);
  if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
    v30 = Edge.Set.init(rawValue:)(v30 | v28);
  v32 = Edge.Set.init(rawValue:)(v30);
  if (Edge.Set.init(rawValue:)(v32 & v29) != v29)
    LOBYTE(v30) = Edge.Set.init(rawValue:)(v30 | v29);
  v34 = v61;
  v33 = v62;
  type metadata accessor for LocationHeaderView(0);
  sub_100109D64();
  v36 = v63;
  v35 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v34, v33, v64);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v34, v35);
  v38 = 20.0;
  if (v37 != enum case for ContentSizeCategory.extraSmall(_:)
    && v37 != enum case for ContentSizeCategory.small(_:)
    && v37 != enum case for ContentSizeCategory.medium(_:)
    && v37 != enum case for ContentSizeCategory.large(_:)
    && v37 != enum case for ContentSizeCategory.extraLarge(_:)
    && v37 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v37 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    v38 = 0.0;
    if (v37 != enum case for ContentSizeCategory.accessibilityMedium(_:)
      && v37 != enum case for ContentSizeCategory.accessibilityLarge(_:)
      && v37 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      && v37 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      && v37 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
      v38 = 20.0;
    }
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
  v49 = EdgeInsets.init(_all:)(v38);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  sub_100037768((uint64_t)v17, (uint64_t)v19, &qword_100BC3BD0);
  v56 = &v19[*(int *)(v59 + 36)];
  *v56 = v30;
  *((double *)v56 + 1) = v49;
  *((_QWORD *)v56 + 2) = v51;
  *((_QWORD *)v56 + 3) = v53;
  *((_QWORD *)v56 + 4) = v55;
  v56[40] = 0;
  sub_100021A14((uint64_t)v17, &qword_100BC3BD0);
  v57 = v58;
  sub_100037768((uint64_t)v19, v58, &qword_100BC3BD8);
  *(_QWORD *)(v57 + *(int *)(v60 + 36)) = 0x3FF0000000000000;
  sub_100021A14((uint64_t)v19, &qword_100BC3BD8);
  sub_1000787D4(v57, v65, &qword_100BC3A18);
}

void sub_1000572C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33[16];
  uint64_t v34;

  v32 = a2;
  v4 = type metadata accessor for LocationViewerViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BED9A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BED998);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1000BA294(&qword_100BED980);
  v13 = __chkstk_darwin(v31);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.center.getter(v13);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v16 = (uint64_t)&v9[*(int *)(sub_1000BA294(&qword_100BEDA08) + 44)];
  v30 = v2;
  sub_10052BF14(v2, a1, v16);
  KeyPath = swift_getKeyPath(&unk_1009ABA20);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1000BF64C();
  v18 = v6[*(int *)(v4 + 52)];
  sub_1000BF3B4();
  sub_100037768((uint64_t)v9, (uint64_t)v12, &qword_100BED9A8);
  v19 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v19 = KeyPath;
  v19[8] = v18;
  sub_100021A14((uint64_t)v9, &qword_100BED9A8);
  sub_1000BF64C();
  v20 = *(_QWORD *)&v6[*(int *)(v4 + 20)];
  swift_bridgeObjectRetain(v20);
  sub_1000BF3B4();
  sub_100037768((uint64_t)v12, (uint64_t)v15, &qword_100BED998);
  v21 = v31;
  v22 = &v15[*(int *)(v31 + 36)];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = v20;
  sub_100021A14((uint64_t)v12, &qword_100BED998);
  v23 = v30;
  v24 = sub_1000241B0();
  v26 = v25;
  LOBYTE(a1) = v27;
  v34 = v23;
  v28 = sub_10053763C();
  View.alert(isPresented:content:)(v24, v26, a1 & 1, sub_100537B04, v33, v21, v28);
  swift_release(v26);
  swift_release(v24);
  sub_100021A14((uint64_t)v15, &qword_100BED980);
}

uint64_t sub_10005755C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t initializeWithCopy for LocationViewerViewWeatherConditionBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  uint64_t v9;
  __int128 v11;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v11 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v11;
  v5 = a2 + 3;
  v6 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  swift_unknownObjectRetain(v11);
  v8(a1 + 24, v5, v7);
  v9 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_retain(v9);
  return a1;
}

double sub_100057648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t HourPrecipitationStringBuilder;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double result;

  v0 = sub_1000BA294(&qword_100BED408);
  v1 = RegistrationContainer.register<A>(_:name:factory:)(v0, 0, 0, sub_100008900, 0, v0);
  swift_release(v1);
  v2 = sub_1000BA294(&qword_100BED410);
  v3 = RegistrationContainer.register<A>(_:name:factory:)(v2, 0, 0, sub_10002A554, 0, v2);
  swift_release(v3);
  v4 = sub_1000BA294(&qword_100BED3A8);
  v5 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0x647261646E617473, 0xE800000000000000, sub_1000155C8, 0, v4);
  swift_release(v5);
  v6 = sub_1000BA294(&qword_100BED418);
  v7 = RegistrationContainer.register<A>(_:name:factory:)(v6, 0, 0, sub_100143818, 0, v6);
  swift_release(v7);
  v8 = type metadata accessor for LocationViewModelFactory(0);
  v9 = RegistrationContainer.register<A>(_:name:factory:)(v8, 0, 0, sub_10003D698, 0, v8);
  swift_release(v9);
  v10 = RegistrationContainer.register<A>(_:name:factory:)(v4, 0x74616E7265746C61, 0xEB00000000657669, sub_1001438B8, 0, v4);
  swift_release(v10);
  v11 = sub_1000BA294(&qword_100BED420);
  v12 = RegistrationContainer.register<A>(_:name:factory:)(v11, 0, 0, sub_100143BC8, 0, v11);
  swift_release(v12);
  v13 = sub_1000BA294(&qword_100BC4650);
  v14 = RegistrationContainer.register<A>(_:name:factory:)(v13, 0, 0, sub_100037850, 0, v13);
  swift_release(v14);
  v15 = sub_1000BA294((uint64_t *)&unk_100C0A200);
  v16 = RegistrationContainer.register<A>(_:name:factory:)(v15, 0, 0, sub_10002A7F0, 0, v15);
  swift_release(v16);
  v17 = sub_1000BA294(&qword_100BED428);
  v18 = RegistrationContainer.register<A>(_:name:factory:)(v17, 0, 0, sub_100143BF0, 0, v17);
  swift_release(v18);
  v19 = sub_1000BA294(&qword_100BED430);
  v20 = RegistrationContainer.register<A>(_:name:factory:)(v19, 0, 0, sub_100143BDC, 0, v19);
  swift_release(v20);
  v21 = sub_1000BA294(&qword_100BED438);
  v22 = RegistrationContainer.register<A>(_:name:factory:)(v21, 0, 0, sub_100143A40, 0, v21);
  swift_release(v22);
  v23 = sub_1000BA294(&qword_100BED440);
  v24 = RegistrationContainer.register<A>(_:name:factory:)(v23, 0, 0, sub_100143608, 0, v23);
  swift_release(v24);
  v25 = type metadata accessor for AirQualityComponentViewModelFactory();
  v26 = RegistrationContainer.register<A>(_:name:factory:)(v25, 0, 0, sub_100143720, 0, v25);
  swift_release(v26);
  v27 = sub_1000BA294(&qword_100BED448);
  v28 = RegistrationContainer.register<A>(_:name:factory:)(v27, 0, 0, sub_1001435F4, 0, v27);
  swift_release(v28);
  v29 = type metadata accessor for DailyForecastComponentViewModelFactory();
  v30 = RegistrationContainer.register<A>(_:name:factory:)(v29, 0, 0, sub_100143630, 0, v29);
  swift_release(v30);
  v31 = sub_1000BA294(&qword_100BED450);
  v32 = RegistrationContainer.register<A>(_:name:factory:)(v31, 0, 0, sub_10014361C, 0, v31);
  swift_release(v32);
  v33 = type metadata accessor for FeelsLikeComponentViewModelFactory();
  v34 = RegistrationContainer.register<A>(_:name:factory:)(v33, 0, 0, sub_100143740, 0, v33);
  swift_release(v34);
  v35 = sub_1000BA294(&qword_100BED458);
  v36 = RegistrationContainer.register<A>(_:name:factory:)(v35, 0, 0, sub_1005257F8, 0, v35);
  swift_release(v36);
  v37 = type metadata accessor for HourlyForecastComponentViewModelFactory();
  v38 = RegistrationContainer.register<A>(_:name:factory:)(v37, 0, 0, sub_10052580C, 0, v37);
  swift_release(v38);
  v39 = sub_1000BA294(&qword_100BED460);
  v40 = RegistrationContainer.register<A>(_:name:factory:)(v39, 0, 0, sub_100525890, 0, v39);
  swift_release(v40);
  v41 = sub_1000BA294(&qword_100BED468);
  v42 = RegistrationContainer.register<A>(_:name:factory:)(v41, 0, 0, sub_100525918, 0, v41);
  swift_release(v42);
  v43 = sub_1000BA294(&qword_100BED470);
  v44 = RegistrationContainer.register<A>(_:name:factory:)(v43, 0, 0, sub_10052592C, 0, v43);
  swift_release(v44);
  v45 = type metadata accessor for MoonComponentViewModelFactory();
  v46 = RegistrationContainer.register<A>(_:name:factory:)(v45, 0, 0, sub_100525940, 0, v45);
  swift_release(v46);
  v47 = sub_1000BA294(&qword_100BE8768);
  v48 = RegistrationContainer.register<A>(_:name:factory:)(v47, 0, 0, sub_1004D7C8C, 0, v47);
  swift_release(v48);
  v49 = sub_1000BA294(&qword_100BED478);
  v50 = RegistrationContainer.register<A>(_:name:factory:)(v49, 0, 0, sub_100525A1C, 0, v49);
  swift_release(v50);
  HourPrecipitationStringBuilder = type metadata accessor for NextHourPrecipitationStringBuilder(0);
  v52 = RegistrationContainer.register<A>(_:name:factory:)(HourPrecipitationStringBuilder, 0, 0, sub_100525B04, 0, HourPrecipitationStringBuilder);
  swift_release(v52);
  v53 = sub_1000BA294(&qword_100BE8770);
  v54 = RegistrationContainer.register<A>(_:name:factory:)(v53, 0, 0, sub_100525B50, 0, v53);
  swift_release(v54);
  v55 = sub_1000BA294(&qword_100BED480);
  v56 = RegistrationContainer.register<A>(_:name:factory:)(v55, 0, 0, sub_100525C04, 0, v55);
  swift_release(v56);
  v57 = sub_1000BA294(&qword_100BED488);
  v58 = RegistrationContainer.register<A>(_:name:factory:)(v57, 0, 0, sub_100525CA8, 0, v57);
  swift_release(v58);
  v59 = sub_1000BA294(&qword_100BED490);
  v60 = RegistrationContainer.register<A>(_:name:factory:)(v59, 0, 0, sub_100525CBC, 0, v59);
  swift_release(v60);
  v61 = type metadata accessor for PressureComponentViewModelFactory();
  v62 = RegistrationContainer.register<A>(_:name:factory:)(v61, 0, 0, sub_100525CD0, 0, v61);
  swift_release(v62);
  v63 = sub_1000BA294(&qword_100BED498);
  v64 = RegistrationContainer.register<A>(_:name:factory:)(v63, 0, 0, sub_100525CF0, 0, v63);
  swift_release(v64);
  v65 = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  v66 = RegistrationContainer.register<A>(_:name:factory:)(v65, 0, 0, sub_100525D04, 0, v65);
  swift_release(v66);
  v67 = sub_1000BA294(&qword_100BED4A0);
  v68 = RegistrationContainer.register<A>(_:name:factory:)(v67, 0, 0, sub_100525E18, 0, v67);
  swift_release(v68);
  v69 = sub_1000BA294(&qword_100BED4A8);
  v70 = RegistrationContainer.register<A>(_:name:factory:)(v69, 0, 0, sub_100525E2C, 0, v69);
  swift_release(v70);
  v71 = sub_1000BA294(&qword_100BED4B0);
  v72 = RegistrationContainer.register<A>(_:name:factory:)(v71, 0, 0, sub_100525E8C, 0, v71);
  swift_release(v72);
  v73 = sub_1000BA294(&qword_100BED4B8);
  v74 = RegistrationContainer.register<A>(_:name:factory:)(v73, 0, 0, sub_100525F74, 0, v73);
  swift_release(v74);
  v75 = sub_1000BA294(&qword_100BED4C0);
  v76 = RegistrationContainer.register<A>(_:name:factory:)(v75, 0, 0, sub_100526090, 0, v75);
  swift_release(v76);
  v77 = type metadata accessor for AveragesComponentViewModelFactory();
  v78 = RegistrationContainer.register<A>(_:name:factory:)(v77, 0, 0, sub_1005260A4, 0, v77);
  swift_release(v78);
  v79 = sub_1000BA294(&qword_100BED4C8);
  v80 = RegistrationContainer.register<A>(_:name:factory:)(v79, 0, 0, sub_1005261F4, 0, v79);
  swift_release(v80);
  v81 = sub_1000BA294(&qword_100BED4D0);
  v82 = RegistrationContainer.register<A>(_:name:factory:)(v81, 0, 0, sub_10052620C, 0, v81);
  swift_release(v82);
  v83 = type metadata accessor for UVIndexComponentViewModelFactory();
  v84 = RegistrationContainer.register<A>(_:name:factory:)(v83, 0, 0, sub_100526220, 0, v83);
  swift_release(v84);
  v85 = sub_1000BA294(&qword_100BED4D8);
  v86 = RegistrationContainer.register<A>(_:name:factory:)(v85, 0, 0, sub_100526234, 0, v85);
  swift_release(v86);
  v87 = type metadata accessor for VisibilityComponentViewModelFactory();
  v88 = RegistrationContainer.register<A>(_:name:factory:)(v87, 0, 0, sub_100526248, 0, v87);
  swift_release(v88);
  v89 = sub_1000BA294(&qword_100BED4E0);
  v90 = RegistrationContainer.register<A>(_:name:factory:)(v89, 0, 0, sub_1005262D8, 0, v89);
  swift_release(v90);
  v91 = type metadata accessor for WindComponentViewModelFactory();
  v92 = RegistrationContainer.register<A>(_:name:factory:)(v91, 0, 0, sub_1005262EC, 0, v91);
  *(_QWORD *)&result = swift_release(v92).n128_u64[0];
  return result;
}

double sub_100057E5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v62 = a8;
  v63 = a6;
  v64 = a7;
  v61 = a9;
  v18 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1 + *(int *)(type metadata accessor for LocationContentView(0) + 56);
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_10008D47C(*(_QWORD *)v21, v23);
  sub_100109B54();
  v25 = v24;
  sub_1000B15F8(v22, v23);
  v26 = sub_10004EE20(v25 & 1);
  v27 = Text.font(_:)(v26, a2, a3, a4 & 1, a5);
  v29 = v28;
  LOBYTE(a5) = v30;
  v32 = v31;
  swift_release(v26);
  v33 = a5 & 1;
  v34 = type metadata accessor for Text.WritingMode(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v34);
  Text.Measurements.size(of:in:writingMode:)(v27, v29, v33, v32, v20, INFINITY, INFINITY);
  v36 = v35;
  sub_1000D31B4(v27, v29, v33);
  swift_bridgeObjectRelease(v32);
  sub_100021A14((uint64_t)v20, &qword_100BC39D0);
  v37 = static Font.largeTitle.getter();
  v38 = Text.font(_:)(v37, v63, v64, v62 & 1, v61);
  v40 = v39;
  LOBYTE(v32) = v41;
  v43 = v42;
  swift_release(v37);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v34);
  Text.Measurements.size(of:in:writingMode:)(v38, v40, v32 & 1, v43, v20, INFINITY, INFINITY);
  v45 = v44;
  sub_1000D31B4(v38, v40, v32 & 1);
  swift_bridgeObjectRelease(v43);
  sub_100021A14((uint64_t)v20, &qword_100BC39D0);
  v46 = v36 + v45 + sub_100419520();
  v47 = v46 + sub_10002CD70();
  if (a13)
  {
    v63 = a10;
    v64 = a11;
    sub_1000D55D4(a10, a11, a12 & 1);
    swift_bridgeObjectRetain(a13);
    v49 = static Font.headline.getter(v48);
    v50 = Font.smallCaps()();
    swift_release(v49);
    v65 = a12 & 1;
    v51 = Text.font(_:)(v50, a10, a11, a12 & 1, a13);
    v53 = v52;
    v55 = v54;
    v57 = v56;
    swift_release(v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v34);
    Text.Measurements.size(of:in:writingMode:)(v51, v53, v55 & 1, v57, v20, INFINITY, INFINITY);
    v59 = v58;
    sub_1000D31B4(v51, v53, v55 & 1);
    swift_bridgeObjectRelease(v57);
    sub_1000D31B4(v63, v64, a12 & 1);
    swift_bridgeObjectRelease(a13);
    sub_100021A14((uint64_t)v20, &qword_100BC39D0);
    return v47 + v59;
  }
  return v47;
}

void sub_1000581A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  unsigned int v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[3];
  uint64_t v117;
  uint64_t v118;

  v1 = type metadata accessor for CallbackScope(0);
  v113 = *(_QWORD *)(v1 - 8);
  v114 = v1;
  __chkstk_darwin(v1);
  v112 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Scope(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100098694();
  v5 = type metadata accessor for Container.TestSuite(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C3DBC();
  v9 = sub_1000BA294(&qword_100BF74C0);
  v12 = sub_1000BA3CC(v9, v10, v11, (uint64_t)sub_10014A2EC);
  swift_release(v12);
  sub_10009880C();
  sub_1000C3DBC();
  v13 = sub_1000BA294(&qword_100BF74C8);
  sub_1000BA3CC(v13, v14, v15, (uint64_t)sub_100149D44);
  sub_10009880C();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Container.TestSuite.automation(_:), v5);
  v16 = Definition.whenTesting(_:_:)(v8, sub_10060D11C, 0);
  swift_release(v16);
  sub_100098834();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000C3DBC();
  v17 = sub_1000BA294(&qword_100BF74D0);
  v20 = sub_1000BA3CC(v17, v18, v19, (uint64_t)sub_10014A054);
  sub_10009880C();
  v21 = enum case for Scope.containerSingleton(_:);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  v22(v0, enum case for Scope.containerSingleton(_:), v3);
  v23 = Definition.inScope(_:)(v0);
  swift_release(v23);
  swift_release(v20);
  v24 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  sub_1000DA01C();
  sub_1000C3DBC();
  v25 = sub_1000BA294(&qword_100BE1380);
  sub_1000C2960(v25, v26, v27, (uint64_t)sub_100149A58);
  sub_10009880C();
  v110 = v21;
  v111 = v22;
  v22(v0, v21, v3);
  v28 = sub_1000DA69C();
  swift_release(v28);
  sub_100098834();
  sub_1000DA01C();
  v109 = v24;
  sub_1000C3DBC();
  sub_10009C82C();
  v29 = type metadata accessor for WireframeLevelInterestManager();
  sub_1000C2960(v29, v30, v31, (uint64_t)sub_100149D04);
  sub_10009880C();
  v22(v0, v21, v3);
  v32 = sub_1000DA69C();
  swift_release(v32);
  sub_100098834();
  v33 = sub_1000DA01C();
  ProxyContainer.callback.getter(v116, v33);
  v35 = v117;
  v34 = v118;
  sub_1000DB418(v116, v117);
  v37 = v112;
  v36 = v113;
  v38 = v114;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v112, enum case for CallbackScope.any(_:), v114);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)(v25, v37, sub_10006C124, 0, v25, v35, v34);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v116);
  sub_1000D1F28();
  v39 = sub_1000BA294(&qword_100BF74D8);
  v42 = sub_1000BA3CC(v39, v40, v41, (uint64_t)sub_100149B7C);
  swift_release(v42);
  sub_10009880C();
  sub_1000C3DBC();
  v43 = sub_1000BA294(&qword_100BC43B0);
  v46 = sub_1000BA3CC(v43, v44, v45, (uint64_t)sub_100149F80);
  swift_release(v46);
  sub_10009880C();
  sub_1000C3DBC();
  v47 = sub_1000BA294(&qword_100BC43F0);
  sub_1000BA3CC(v47, v48, v49, (uint64_t)sub_100149FF0);
  sub_10009880C();
  sub_1000D139C((uint64_t)sub_100149910);
  sub_10009925C();
  v50 = v110;
  v51 = v111;
  v111(v0, v110, v3);
  v52 = Definition.inScope(_:)(v0);
  swift_release(v52);
  sub_10009880C();
  v109(v0, v3);
  sub_1000C3DBC();
  v53 = sub_1000BA294(&qword_100BF74E0);
  sub_1000C2960(v53, v54, v55, (uint64_t)sub_100149F04);
  sub_10009880C();
  sub_1000D139C((uint64_t)sub_100149730);
  sub_10009925C();
  v51(v0, v50, v3);
  v56 = Definition.inScope(_:)(v0);
  swift_release(v56);
  sub_10009880C();
  sub_1000DDBF8();
  sub_1000C3DBC();
  v57 = sub_1000BA294(&qword_100BF74E8);
  v60 = sub_1000C2960(v57, v58, v59, (uint64_t)sub_100149D60);
  swift_release(v60);
  sub_10009880C();
  sub_1000C3DBC();
  v61 = sub_1000BA294((uint64_t *)&unk_100BCEF20);
  sub_1000C2960(v61, v62, v63, (uint64_t)sub_100149EBC);
  sub_10009880C();
  sub_1000DBBF4();
  v64 = sub_1000CCFFC();
  swift_release(v64);
  sub_10009925C();
  sub_1000DDBF8();
  sub_1000C3DBC();
  v65 = sub_1000BA294(&qword_100BF74F0);
  sub_1000BA3CC(v65, v66, v67, (uint64_t)sub_100149EA8);
  sub_10009880C();
  sub_1000DBBF4();
  v68 = sub_1000CCFFC();
  swift_release(v68);
  sub_10009925C();
  sub_1000DDBF8();
  sub_1000D1F28();
  v69 = sub_1000BA294(&qword_100BF74F8);
  v72 = sub_1000BA3CC(v69, v70, v71, (uint64_t)sub_100149BE8);
  swift_release(v72);
  sub_10009880C();
  sub_1000C3DBC();
  sub_10009C82C();
  v73 = type metadata accessor for WeatherDataUpdater();
  sub_1000C2960(v73, v74, v75, (uint64_t)sub_100024804);
  sub_10009880C();
  sub_100098F40();
  v76 = sub_1000CCFFC();
  swift_release(v76);
  sub_10009925C();
  sub_1000DDBF8();
  sub_1000C3DBC();
  v77 = sub_1000BA294(&qword_100BF7500);
  sub_1000BA3CC(v77, v78, v79, (uint64_t)sub_10014A7B4);
  sub_10009880C();
  sub_1000DBBF4();
  v80 = sub_1000CCFFC();
  swift_release(v80);
  sub_10009925C();
  sub_1000DDBF8();
  sub_1000C3DBC();
  v81 = sub_1000BA294(&qword_100BDBAB8);
  v84 = sub_1000BA3CC(v81, v82, v83, (uint64_t)sub_10060D258);
  swift_release(v84);
  sub_10009880C();
  sub_1000C3DBC();
  v85 = sub_1000BA294(&qword_100BD13F0);
  v88 = sub_1000BA3CC(v85, v86, v87, (uint64_t)sub_10014A618);
  swift_release(v88);
  sub_10009880C();
  sub_1000C3DBC();
  v89 = sub_1000BA294(&qword_100BD13F8);
  v92 = sub_1000BA3CC(v89, v90, v91, (uint64_t)sub_10014A790);
  swift_release(v92);
  sub_10009880C();
  sub_1000C3DBC();
  v93 = sub_1000BA294(&qword_100BF7508);
  v96 = sub_1000BA3CC(v93, v94, v95, (uint64_t)sub_10060D364);
  swift_release(v96);
  sub_10009880C();
  sub_1000C3DBC();
  v97 = sub_10009C82C();
  v98 = type metadata accessor for WeatherService(v97);
  RegistrationContainer.register<A>(_:name:factory:)(v98, 0xD00000000000001ALL, 0x8000000100A0E100, sub_10060D3C0, 0, v98);
  sub_10009880C();
  sub_100098F40();
  v99 = sub_1000CCFFC();
  swift_release(v99);
  sub_10009925C();
  sub_1000DDBF8();
  sub_1000C3DBC();
  v100 = sub_1000BA294(&qword_100BF7510);
  v103 = sub_1000BA3CC(v100, v101, v102, (uint64_t)sub_10060D6F8);
  swift_release(v103);
  sub_10009880C();
  sub_1000C3DBC();
  sub_10009C82C();
  v104 = type metadata accessor for DebugOfflineViewController();
  v107 = sub_1000C2960(v104, v105, v106, (uint64_t)sub_10060D8A8);
  swift_release(v107);
  sub_10009880C();
  sub_1000D1F28();
  v108 = v115;
  swift_retain();
  RegistrationContainer.lazy(block:)(sub_1006132EC, v108);
  sub_10009880C();
  sub_10009925C();
  sub_100098640();
}

uint64_t sub_10005886C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (**v30)(_QWORD *, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, _QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  uint64_t v138;
  void (**v139)(_QWORD *, _QWORD, _QWORD);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(uint64_t, _QWORD);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  double v151;
  uint64_t (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(uint64_t, _QWORD);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  void (*v183)(uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  unsigned int *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  void (**v248)(_QWORD *, _QWORD, _QWORD);
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  char v254[8];
  char v255[8];
  char v256[8];
  uint64_t v257;
  uint64_t v258;

  v247 = a4;
  v231 = a3;
  v226 = a2;
  v245 = a1;
  v252 = a5;
  sub_1000E775C();
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v246 = v7;
  v8 = type metadata accessor for WeatherDataModel(0);
  sub_1000B43A4(v8, (uint64_t)&v242);
  sub_1000BBFEC(v9);
  __chkstk_darwin(v10);
  sub_100088FDC();
  v12 = sub_1000987B4(v11);
  v13 = type metadata accessor for RainExpectation(v12);
  sub_1000B43A4(v13, (uint64_t)&v240);
  sub_1000BBFEC(v14);
  __chkstk_darwin(v15);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v16);
  sub_100079F7C();
  v18 = sub_1000987B4(v17);
  v19 = type metadata accessor for WeatherAvailability.AvailabilityKind(v18);
  sub_1000B43A4(v19, (uint64_t)&v249);
  sub_1000BBFEC(v20);
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_100079F7C();
  v24 = sub_1001102C8(v23);
  sub_1000B43A4(v24, (uint64_t)&v245);
  sub_1000BBFEC(v25);
  __chkstk_darwin(v26);
  sub_100088FDC();
  v28 = sub_1000987B4(v27);
  v29 = type metadata accessor for WeatherMapPrecipitationOverlayKind(v28);
  sub_1000B43A4(v29, (uint64_t)&v257);
  v248 = v30;
  sub_10009D98C();
  __chkstk_darwin(v31);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v32);
  sub_100079F7C();
  sub_10009511C(v33);
  sub_1000BA294(&qword_100BCE728);
  sub_10009D98C();
  __chkstk_darwin(v34);
  sub_100088FDC();
  v36 = sub_1000987B4(v35);
  v37 = type metadata accessor for Wind(v36);
  sub_1000B43A4(v37, (uint64_t)v255);
  sub_1000BBFEC(v38);
  __chkstk_darwin(v39);
  sub_100088FDC();
  sub_10009511C(v40);
  v41 = sub_1000BA294(&qword_100BCB938);
  sub_1000B43A4(v41, (uint64_t)v256);
  sub_1000BBFEC(v42);
  __chkstk_darwin(v43);
  sub_100088FDC();
  sub_10009511C(v44);
  v45 = sub_1000BA294(&qword_100BCB9F8);
  sub_1000B43A4(v45, (uint64_t)v254);
  sub_1000BBFEC(v46);
  __chkstk_darwin(v47);
  sub_100088FDC();
  v49 = sub_1000987B4(v48);
  v50 = type metadata accessor for WeatherMapOverlayKind(v49);
  v51 = *(_QWORD *)(v50 - 8);
  v249 = v50;
  v250 = v51;
  sub_10009D98C();
  __chkstk_darwin(v52);
  sub_100088FDC();
  v54 = sub_1000987B4(v53);
  v244 = type metadata accessor for WeatherCondition(v54);
  sub_1000BBFEC(*(_QWORD *)(v244 - 8));
  __chkstk_darwin(v55);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v56);
  sub_100079F7C();
  v58 = sub_1000987B4(v57);
  v59 = type metadata accessor for CurrentWeather(v58);
  sub_1000B43A4(v59, (uint64_t)&v258);
  sub_1000BBFEC(v60);
  __chkstk_darwin(v61);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v62);
  sub_100079F7C();
  sub_10009511C(v63);
  sub_1000BA294(qword_100BC6008);
  sub_10009D98C();
  __chkstk_darwin(v64);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v65);
  sub_1000BA30C();
  __chkstk_darwin(v66);
  sub_1000BA30C();
  v68 = __chkstk_darwin(v67);
  v70 = (char *)&v202 - v69;
  v71 = __chkstk_darwin(v68);
  v73 = (char *)&v202 - v72;
  v74 = __chkstk_darwin(v71);
  v76 = (char *)&v202 - v75;
  v77 = __chkstk_darwin(v74);
  v79 = (char *)&v202 - v78;
  v80 = __chkstk_darwin(v77);
  v82 = (char *)&v202 - v81;
  v83 = __chkstk_darwin(v80);
  v85 = (char *)&v202 - v84;
  v86 = __chkstk_darwin(v83);
  v88 = (char *)&v202 - v87;
  v89 = __chkstk_darwin(v86);
  v91 = (uint64_t *)((char *)&v202 - v90);
  static Settings.Maps.overrides.getter(v89);
  sub_1000C2224();
  sub_1000CF87C();
  if ((v5 & 1) != 0)
  {
    sub_1000EAFD4();
    sub_1000C1AD8();
    sub_1000DACA8();
    v92 = sub_1000D0A00();
    v93 = v246;
    SettingReader.read<A>(_:)(v246);
    swift_release(v82);
    swift_release(v92);
    return sub_100159EF4((uint64_t)v93, v252);
  }
  v204 = v88;
  v95 = v243;
  v203 = v85;
  v205 = v82;
  v206 = v79;
  v207 = v76;
  v96 = v244;
  v208 = v73;
  v209 = v70;
  v246 = v91;
  v97 = v245;
  v98 = v247;
  if ((sub_100012AB4(v251 + 5) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v250 + 104))(v252, enum case for WeatherMapOverlayKind.airQuality(_:), v249);
  v99 = (uint64_t)v246;
  v100 = v249;
  v101 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v246, 1, 1, v249);
  v102 = v237;
  v103 = WeatherDataModel.currentWeather.getter(v101);
  v104 = v239;
  CurrentWeather.condition.getter(v103);
  v243 = (_QWORD *)v95[1];
  v105 = ((uint64_t (*)(uint64_t, uint64_t))v243)(v102, v242);
  v106 = WeatherCondition.isPrecipitation.getter(v105);
  v107 = sub_1000C0A78(v104);
  if ((v106 & 1) != 0)
  {
    v108 = sub_1000C13A0(v107, qword_100BC6008);
    v109 = sub_1000DA5CC(v108, enum case for WeatherMapPrecipitationOverlayKind.auto(_:));
    sub_1000E70C0(v109, enum case for WeatherMapOverlayKind.precipitation(_:));
    sub_1000BC264(v99);
  }
  v110 = (uint64_t)v204;
  sub_1000596D8(v99, (uint64_t)v204);
  v111 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v100);
  sub_100021A68(v110, qword_100BC6008);
  v112 = v233;
  v113 = (uint64_t)v206;
  if (v111 == 1)
  {
    v114 = v98;
    v115 = (uint64_t)v203;
    sub_100046A40(v226, v114, v97, (uint64_t)v203);
    v116 = sub_1000D1810();
    if ((_DWORD)v116 == 1)
    {
      sub_100021A68(v115, qword_100BC6008);
    }
    else
    {
      sub_1000C13A0(v116, qword_100BC6008);
      v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 32);
      v118 = v115;
      v119 = v222;
      v117(v222, v118, v100);
      v117(v99, v119, v100);
      sub_1000BC264(v99);
    }
  }
  v120 = (uint64_t)v205;
  sub_1000596D8(v99, (uint64_t)v205);
  v121 = sub_1000D1810();
  v122 = sub_100021A68(v120, qword_100BC6008);
  v123 = v97;
  if (v121 == 1)
  {
    v124 = v225;
    WeatherDataModel.hourlyForecast.getter(v122);
    v125 = Forecast<>.numberOfHoursWithPrecipitation(withinHoursFromNow:minimumChance:)(12, 0.3);
    sub_1000988C4();
    v127 = sub_100094F10(v124, v126);
    if (v125 >= 2)
    {
      v128 = sub_1000C13A0(v127, qword_100BC6008);
      v129 = sub_1000DA5CC(v128, enum case for WeatherMapPrecipitationOverlayKind.auto(_:));
      sub_1000E70C0(v129, enum case for WeatherMapOverlayKind.precipitation(_:));
      sub_1000BC264(v99);
    }
  }
  sub_1000596D8(v99, v113);
  v130 = _s7Weather24LocationCompositionStateOwet_0(v113, 1, v100);
  v131 = sub_100021A68(v113, qword_100BC6008);
  v132 = v99;
  v133 = (uint64_t)v209;
  if ((_DWORD)v130 == 1)
  {
    v99 = v237;
    v134 = WeatherDataModel.currentWeather.getter(v131);
    v135 = v239;
    v130 = v99;
    CurrentWeather.condition.getter(v134);
    sub_10009D610(v99);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v238 + 104))(v112, enum case for WeatherCondition.windy(_:), v96);
    LODWORD(v99) = sub_10008805C(v135, v112);
    sub_1000C0A78(v112);
    sub_1000C0A78(v135);
    if ((v99 & 1) != 0)
    {
      sub_100021A68(v132, qword_100BC6008);
      sub_100089084(v132, enum case for WeatherMapOverlayKind.wind(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 104));
      sub_1000BC264(v132);
    }
  }
  sub_1000C6E68(v132, (uint64_t)&v233);
  sub_1000DA9CC(v130);
  v136 = sub_100021A68(v130, qword_100BC6008);
  v137 = (_DWORD)v99 == 1;
  v138 = v132;
  v139 = v248;
  v140 = v234;
  if (v137)
  {
    v141 = v227;
    v142 = WeatherDataModel.currentWeather.getter(v136);
    v143 = v228;
    CurrentWeather.wind.getter(v142);
    v144 = sub_10009D610(v141);
    v145 = v230;
    Wind.gust.getter(v144);
    sub_1000988C4();
    sub_100094F10(v143, v146);
    v130 = v229;
    if (_s7Weather24LocationCompositionStateOwet_0(v145, 1, v229) == 1)
    {
      sub_100021A68(v145, &qword_100BCE728);
      v139 = v248;
    }
    else
    {
      v147 = v224;
      v148 = v223;
      sub_1000D0678(v223, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v224 + 32));
      v149 = v130;
      v150 = v130;
      v130 = v148;
      v151 = Measurement.value.getter(v149);
      v152 = *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8);
      v133 = (uint64_t)v209;
      v153 = v152(v148, v150);
      v139 = v248;
      if (v151 > 24.14)
      {
        v154 = sub_1000C13A0(v153, qword_100BC6008);
        sub_1000E70C0(v154, enum case for WeatherMapOverlayKind.wind(_:));
        sub_1000BC264(v138);
      }
    }
  }
  sub_1000C6E68(v138, (uint64_t)&v234);
  sub_1000DA9CC(v130);
  v155 = sub_100021A68(v130, qword_100BC6008);
  v137 = (_DWORD)v138 == 1;
  v156 = v246;
  v157 = v250;
  if (v137 && *(_QWORD *)(v231 + 16))
  {
    sub_1000C13A0(v155, qword_100BC6008);
    v139[13](v156, enum case for WeatherMapPrecipitationOverlayKind.auto(_:), v241);
    sub_100089084((uint64_t)v156, enum case for WeatherMapOverlayKind.precipitation(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 104));
    sub_1000BC264((uint64_t)v156);
  }
  sub_1000596D8((uint64_t)v156, v133);
  sub_1000DA9CC(v133);
  sub_100021A68(v133, qword_100BC6008);
  v137 = (_DWORD)v156 == 1;
  v158 = v246;
  v159 = v236;
  v160 = v240;
  if (v137)
  {
    sub_1000198FC(v140);
    v160 = v240;
    sub_1000C13A0(v161, qword_100BC6008);
    sub_1000BC264(v140);
    sub_100159EAC(v140, (uint64_t)v158);
  }
  v162 = (uint64_t)v158;
  v163 = v235;
  sub_1000596D8(v162, v235);
  v164 = _s7Weather24LocationCompositionStateOwet_0(v163, 1, v100);
  if ((_DWORD)v164 == 1)
  {
    sub_1000C13A0(v164, qword_100BC6008);
LABEL_38:
    v193 = v252;
    goto LABEL_39;
  }
  v165 = (*(uint64_t (**)(uint64_t, uint64_t))(v157 + 88))(v163, v100);
  if ((_DWORD)v165 != enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    sub_1000BF1A0(*(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
    goto LABEL_38;
  }
  v166 = v165;
  sub_1000BF1A0(*(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
  v167 = v163;
  v168 = v241;
  v139[4](v159, v167, v241);
  v169 = v139[13];
  ((void (*)(uint64_t, _QWORD, uint64_t))v169)(v160, enum case for WeatherMapPrecipitationOverlayKind.auto(_:), v168);
  v170 = static WeatherMapPrecipitationOverlayKind.== infix(_:_:)(v159, v160);
  v171 = v160;
  v172 = v170;
  v173 = (uint64_t (*)(uint64_t, uint64_t))v139[1];
  v174 = v173(v171, v168);
  if ((v172 & 1) != 0)
  {
    v175 = v217;
    v176 = WeatherDataModel.availability.getter(v174);
    v177 = v218;
    WeatherAvailability.minuteAvailability.getter(v176);
    sub_1000988C4();
    sub_100094F10(v175, v178);
    v179 = v220;
    v180 = v219;
    v181 = v221;
    sub_100089084(v219, enum case for WeatherAvailability.AvailabilityKind.available(_:), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 104));
    v182 = sub_10011EA0C(v177, v180);
    v183 = *(void (**)(uint64_t, uint64_t))(v179 + 8);
    v183(v180, v181);
    v184 = ((uint64_t (*)(uint64_t, uint64_t))v183)(v177, v181);
    if ((v182 & 1) != 0)
    {
      v251 = v169;
      v185 = v212;
      WeatherDataModel.rainExpectation.getter(v184);
      v186 = v123;
      v187 = v211;
      v188 = v213;
      v189 = v214;
      v248 = *(void (***)(_QWORD *, _QWORD, _QWORD))(v211 + 104);
      ((void (*)(uint64_t, _QWORD, uint64_t))v248)(v213, enum case for RainExpectation.nextHour(_:), v214);
      v190 = sub_1000CDF4C();
      v183 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
      sub_1000C0A80(v188);
      sub_1000C0A80(v185);
      v191 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 16))(v215, v186, v216);
      if ((v190 & 1) != 0)
      {
        sub_1000C6AF4();
        v192 = sub_1000DBA84();
        sub_1000BEE7C(v192, qword_100BC6008);
        v169 = v251;
LABEL_45:
        v200 = (unsigned int *)&enum case for WeatherMapPrecipitationOverlayKind.radar(_:);
LABEL_47:
        v201 = v252;
        ((void (*)(uint64_t, _QWORD, void (*)(uint64_t, uint64_t)))v169)(v252, *v200, v183);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 104))(v201, v166, v249);
      }
      WeatherDataModel.rainExpectation.getter(v191);
      ((void (*)(uint64_t, _QWORD, uint64_t))v248)(v188, enum case for RainExpectation.now(_:), v189);
      v198 = sub_1000CDF4C();
      sub_1000C0A80(v188);
      sub_1000C0A80(v185);
      sub_1000C6AF4();
      v199 = sub_1000DBA84();
      sub_1000BEE7C(v199, qword_100BC6008);
      v169 = v251;
      if ((v198 & 1) != 0)
        goto LABEL_45;
    }
    else
    {
      v197 = sub_1000DBA84();
      sub_1000BEE7C(v197, qword_100BC6008);
    }
    v200 = (unsigned int *)&enum case for WeatherMapPrecipitationOverlayKind.forecast(_:);
    goto LABEL_47;
  }
  v173((uint64_t)v159, v168);
  v193 = v252;
  v100 = v249;
  v157 = v250;
LABEL_39:
  v194 = (uint64_t)v251;
  v195 = v232;
  v196 = v246;
  sub_1000596D8((uint64_t)v246, v232);
  sub_10013487C(v194, (uint64_t)&v253);
  if (sub_1000D1810() == 1)
  {
    sub_1000198FC(v193);
    sub_100134850(&v253);
    sub_100021A68((uint64_t)v196, qword_100BC6008);
    return sub_100021A68(v195, qword_100BC6008);
  }
  else
  {
    sub_100134850(&v253);
    sub_100021A68((uint64_t)v196, qword_100BC6008);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 32))(v193, v195, v100);
  }
}

uint64_t sub_1000596D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(qword_100BC6008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100059720(char a1@<W1>, char a2@<W2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v50[2];
  __int128 v51;
  __int128 v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int16 v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  __int16 v68;

  v45 = type metadata accessor for Location(0);
  v44 = *(_QWORD *)(v45 - 8);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_10009E540();
  sub_1000D02E0();
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v43 = v9;
  sub_1000BA294(&qword_100BC5B30);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_100098778();
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  sub_1000BA294(&qword_100BCD690);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  v23 = sub_1000BA8E0();
  v24 = type metadata accessor for Location.Identifier(v23);
  __chkstk_darwin(v24);
  sub_100079FBC();
  sub_1000DA790(v5);
  sub_1000DA790(v4);
  v25 = _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v24);
  v26 = Location.Identifier.name.getter(v25);
  v28 = v27;
  v29 = type metadata accessor for LocationFooterViewModel(0);
  v32 = sub_10009D34C(v21, v30, v31, v29);
  v33 = 2;
  if ((a2 & 1) == 0)
  {
    v34 = Location.Identifier.name.getter(v32);
    v36 = v35;
    swift_bridgeObjectRelease(v35);
    v37 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0)
      v37 = v34 & 0xFFFFFFFFFFFFLL;
    v33 = v37 != 0;
  }
  v50[0] = v26;
  v50[1] = v28;
  v51 = 0u;
  v52 = 0u;
  v53 = 2;
  v54 = 0;
  v55 = 0xE000000000000000;
  v56 = 11565;
  v57 = 0xE200000000000000;
  v58 = 0;
  v59 = 0;
  v60 = 0;
  v61 = 0xE000000000000000;
  v62 = 0;
  v63 = 0xE000000000000000;
  v64 = 0;
  v65 = 0;
  v66 = 0;
  v67 = 0xE000000000000000;
  v68 = 0;
  v38 = objc_msgSend((id)objc_opt_self(NSUnitTemperature), "fahrenheit");
  Date.init()(v38);
  v39 = type metadata accessor for ForegroundEffect(0);
  v42 = sub_10009D34C(v13, v40, v41, v39);
  static Location.current.getter(v42);
  static LocationEntity.makeFromLocation(_:name:)(v6, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v6, v45);
  sub_1006F5F38(v5, v4, v50, (uint64_t)_swiftEmptyArrayStorage, 0xC000000000000004, v21, 0, 0, a4, 2, a1 & 1, v33, v38, 1u, a3 & 1, a2 & 1, v17, v13, 0,
    v43,
    1);
}

void sub_100059A64(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  __n128 v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v132 = a1;
  v119 = sub_1000BA294(&qword_100BE39E8);
  v2 = __chkstk_darwin(v119);
  v113 = (uint64_t)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v114 = (uint64_t)&v110 - v4;
  v116 = sub_1000BA294(&qword_100BE39F0);
  __chkstk_darwin(v116);
  v118 = (uint64_t)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1000BA294(&qword_100BE39F8);
  __chkstk_darwin(v131);
  v120 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1000BA294(&qword_100BE3A00);
  __chkstk_darwin(v117);
  v111 = (uint64_t)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294(&qword_100BC5B30);
  __chkstk_darwin(v8);
  v112 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1000BA294(&qword_100BE3A08);
  __chkstk_darwin(v129);
  v115 = (uint64_t *)((char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v128 = sub_1000BA294(&qword_100BE3A10);
  __chkstk_darwin(v128);
  v130 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1000BA294(&qword_100BE3A18);
  __chkstk_darwin(v124);
  v125 = (uint64_t)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1000BA294(&qword_100BE3A20);
  __chkstk_darwin(v127);
  v126 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Color.RGBColorSpace(0);
  v121 = *(_QWORD *)(v14 - 8);
  v122 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v17);
  v19 = (_OWORD *)((char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_1000BA294(&qword_100BDFBE8);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v123 = (uint64_t)&v110 - v24;
  v25 = (int *)type metadata accessor for LocationComponentBackground(0);
  v26 = v1;
  v27 = v1 + v25[9];
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_10008D47C(*(_QWORD *)v27, v29);
  sub_100109B54();
  v31 = v30;
  v32 = sub_1000B15F8(v28, v29);
  if ((v31 & 1) != 0)
  {
    v33 = (char *)v19 + *(int *)(v17 + 20);
    v34 = enum case for RoundedCornerStyle.continuous(_:);
    v35 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
    __asm { FMOV            V0.2D, #16.0 }
    *v19 = _Q0;
    (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v16, enum case for Color.RGBColorSpace.sRGB(_:), v122);
    v41 = Color.init(_:white:opacity:)(v16, 0.1, 1.0);
    sub_100080C0C((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_QWORD *)&v23[*(int *)(v20 + 52)] = v41;
    *(_WORD *)&v23[*(int *)(v20 + 56)] = 256;
    sub_100441DDC((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v42 = &qword_100BDFBE8;
    v43 = v123;
    sub_1001A7244((uint64_t)v23, v123, &qword_100BDFBE8);
    v44 = v125;
    sub_100037768(v43, v125, &qword_100BDFBE8);
    swift_storeEnumTagMultiPayload(v44, v124, 0);
    sub_10007AB60((uint64_t)&unk_100BE3A70);
    v46 = v45;
    sub_10007AB60((uint64_t)&unk_100BE3A78);
    v47 = (uint64_t)v126;
    _ConditionalContent<>.init(storage:)(v44, v20, v129, v46, v48);
    v49 = v130;
    sub_100037768(v47, v130, &qword_100BE3A20);
    swift_storeEnumTagMultiPayload(v49, v128, 0);
    v50 = sub_100154EC0();
    v51 = sub_100154974();
    _ConditionalContent<>.init(storage:)(v49, v127, v131, v50, v51);
    sub_100021A14(v47, &qword_100BE3A20);
    v52 = v43;
LABEL_13:
    v71 = v42;
    goto LABEL_14;
  }
  v123 = v17;
  v53 = v20;
  v55 = v124;
  v54 = v125;
  v57 = v128;
  v56 = v129;
  v58 = (uint64_t)v126;
  v59 = v130;
  if (*(_BYTE *)(v26 + v25[6]) == 1)
  {
    v60 = static Alignment.center.getter(v32);
    v61 = (uint64_t)v115;
    *v115 = v60;
    *(_QWORD *)(v61 + 8) = v62;
    v63 = sub_1000BA294(&qword_100BE3A88);
    sub_10043BFA4(v61 + *(int *)(v63 + 44));
    v64 = v54;
    sub_100037768(v61, v54, &qword_100BE3A08);
    swift_storeEnumTagMultiPayload(v54, v55, 1);
    sub_10007AB60((uint64_t)&unk_100BE3A70);
    v66 = v65;
    sub_10007AB60((uint64_t)&unk_100BE3A78);
    v67 = v58;
    _ConditionalContent<>.init(storage:)(v64, v53, v56, v66, v68);
    sub_100037768(v58, v59, &qword_100BE3A20);
    swift_storeEnumTagMultiPayload(v59, v57, 0);
    v69 = sub_100154EC0();
    v70 = sub_100154974();
    _ConditionalContent<>.init(storage:)(v59, v127, v131, v69, v70);
    sub_100021A14(v67, &qword_100BE3A20);
    v52 = v61;
    v71 = &qword_100BE3A08;
LABEL_14:
    sub_100021A14(v52, v71);
    return;
  }
  v72 = v26 + v25[10];
  v73 = *(_QWORD *)v72;
  v74 = *(_BYTE *)(v72 + 8);
  sub_10008D47C(*(_QWORD *)v72, v74);
  sub_100109D8C();
  v76 = v75;
  sub_1000B15F8(v73, v74);
  v77 = v127;
  if ((v76 & 0x1000000) == 0)
  {
LABEL_10:
    v85 = (char *)v19 + *(int *)(v123 + 20);
    v86 = enum case for RoundedCornerStyle.continuous(_:);
    v87 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v85, v86, v87);
    __asm { FMOV            V0.2D, #16.0 }
    *v19 = _Q0;
    if (qword_100BC21F0 != -1)
      swift_once(&qword_100BC21F0, sub_1001542A4);
    v89 = type metadata accessor for Material(0);
    v90 = sub_1000AECD4(v89, (uint64_t)qword_100CAED40);
    v91 = v113;
    sub_100080C0C((uint64_t)v19, v113, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v92 = v119;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v91 + *(int *)(v119 + 52), v90, v89);
    *(_WORD *)(v91 + *(int *)(v92 + 56)) = 256;
    sub_100441DDC((uint64_t)v19, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    v42 = &qword_100BE39E8;
    v93 = v114;
    sub_1001A7244(v91, v114, &qword_100BE39E8);
    v94 = v118;
    sub_100037768(v93, v118, &qword_100BE39E8);
    swift_storeEnumTagMultiPayload(v94, v116, 1);
    v95 = sub_100154D08();
    sub_10007AB60((uint64_t)&unk_100BE3A60);
    v96 = (uint64_t)v120;
    _ConditionalContent<>.init(storage:)(v94, v117, v92, v95, v97);
    sub_100037768(v96, v59, &qword_100BE39F8);
    swift_storeEnumTagMultiPayload(v59, v57, 1);
    v98 = sub_100154EC0();
    v99 = sub_100154974();
    _ConditionalContent<>.init(storage:)(v59, v77, v131, v98, v99);
    sub_100021A14(v96, &qword_100BE39F8);
    v52 = v93;
    goto LABEL_13;
  }
  v78 = (uint64_t *)(v26 + v25[11]);
  v79 = *v78;
  if (*v78)
  {
    v80 = swift_retain();
    v81 = WeatherVFXConditionBackground.foregroundEffectsAreAbleToRender.getter(v80);
    swift_release(v79);
    if ((v81 & 1) != 0 && (sub_10043C348() & 1) != 0)
    {
      v82 = (uint64_t)v112;
      sub_100159258();
      v83 = type metadata accessor for ForegroundEffect(0);
      v84 = _s7Weather24LocationCompositionStateOwet_0(v82, 1, v83);
      sub_100021A14(v82, &qword_100BC5B30);
      if (v84 != 1)
      {
        v100 = v111;
        sub_10043C6F8(v111);
        v42 = &qword_100BE3A00;
        v101 = v118;
        sub_100037768(v100, v118, &qword_100BE3A00);
        swift_storeEnumTagMultiPayload(v101, v116, 0);
        v102 = sub_100154D08();
        sub_10007AB60((uint64_t)&unk_100BE3A60);
        v103 = (uint64_t)v120;
        _ConditionalContent<>.init(storage:)(v101, v117, v119, v102, v104);
        sub_100037768(v103, v59, &qword_100BE39F8);
        swift_storeEnumTagMultiPayload(v59, v57, 1);
        v105 = sub_100154EC0();
        v106 = sub_100154974();
        _ConditionalContent<>.init(storage:)(v59, v77, v131, v105, v106);
        sub_100021A14(v103, &qword_100BE39F8);
        v52 = v100;
        goto LABEL_13;
      }
    }
    goto LABEL_10;
  }
  v107 = v78[1];
  v108 = type metadata accessor for WeatherVFXConditionBackground(0);
  sub_10007A100((uint64_t)&qword_100BD0870);
  EnvironmentObject.error()(0, v107, v108, v109);
  __break(1u);
}

uint64_t destroy for LocationViewerViewWeatherConditionBackground(_QWORD *a1)
{
  swift_release(*a1);
  swift_unknownObjectRelease(a1[1]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 3);
  return swift_release(a1[9]);
}

void sub_10005A4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  char *v19;
  uint64_t v20;

  v20 = type metadata accessor for Date(0);
  __chkstk_darwin(v20);
  sub_100098728();
  v4 = type metadata accessor for Location(0);
  __chkstk_darwin(v4);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  type metadata accessor for NotificationsOptInState(0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  type metadata accessor for NotificationsOptInAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  sub_100084050(a3, v16 - v15, v18);
  v19 = (char *)sub_10005A740 + 4 * word_100995420[swift_getEnumCaseMultiPayload(v17)];
  __asm { BR              X10 }
}

unsigned __int8 *sub_10005A740()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *v2;
  v6 = sub_1000C08E4();
  v9 = sub_1000BA914(v6, v7, v8, v6);
  v10 = sub_1000BC024(v9);
  sub_1000C27F8(v10);
  v11 = sub_1000D9574(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
  sub_10009D4FC(v11);
  v12 = *(_QWORD *)(v4 - 192);
  Date.init()(v13);
  _s7Weather24LocationCompositionStateOwst_0(v12, 0, 1, *(_QWORD *)(v4 - 176));
  v14 = *(_QWORD *)(v4 - 128);
  sub_1000D11F0(v5, 0, 2, 1, 2, 2, v12, v14, 3, 2, 2, 2, 2);
  sub_1000992DC(v15, (uint64_t *)&unk_100BD35A0);
  sub_1000B3B44((uint64_t)v2);
  v16 = sub_1000B47D0(v14);
  v17 = sub_1000DD950(v16);
  v18 = sub_1000CCB80(v17);
  v19 = *(_QWORD *)(v4 - 160);
  _s7Weather24LocationCompositionStateOwst_0(v19, 1, 1, v18);
  sub_1000B25D0();
  v20 = sub_1000DAEA0();
  sub_10009D358(v20, v21, v22, v1, v3, v23, v24, v25, v14, v5, (uint64_t)type metadata accessor for NotificationsOptInState, v19, v32, v33, v34, v35, v36, v37, v38,
    v39);
  sub_100099468();
  sub_1000992DC(v26, &qword_100BC5F60);
  sub_1000988A8(v27, &qword_100BC5F88);
  sub_10009518C(v28, &qword_100BC5F90);
  sub_100094EEC(v29, &qword_100BC5F98);
  sub_1000988B0(v30, &qword_100BC5FA0);
  sub_100021A14(v1, &qword_100BC5FA8);
  sub_100021A14(v0, &qword_100BC5FB0);
  return v2;
}

uint64_t sub_10005B510(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (uint64_t)a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for URL(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  swift_release(*v8);
  return swift_release(v8[1]);
}

uint64_t sub_10005B5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  Swift::String CurrentCountry;
  _OWORD *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  __n128 v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  _QWORD *v150;
  BOOL v151;
  _QWORD *v152;
  int *v153;
  char *v154;
  uint64_t v155;
  _WORD *v156;
  int *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;

  v206 = type metadata accessor for UUID(0);
  v205 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v204 = (char *)&v177 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v202);
  v208 = (char *)&v177 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v201);
  v207 = (char *)&v177 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TimeState(0);
  __chkstk_darwin(v4);
  v223 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for NotificationsOptInState(0);
  __chkstk_darwin(v200);
  v203 = (char *)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v7);
  v220 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for EnvironmentState(0);
  __chkstk_darwin(v190);
  v222 = (uint64_t)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100C16978);
  __chkstk_darwin(v10);
  v198 = (uint64_t)&v177 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100C16980);
  __chkstk_darwin(v12);
  v197 = (uint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100C16988);
  __chkstk_darwin(v14);
  v196 = (uint64_t)&v177 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100C16990);
  __chkstk_darwin(v16);
  v195 = (uint64_t)&v177 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1000BA294(&qword_100C16998);
  __chkstk_darwin(v18);
  v194 = (uint64_t)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1000BA294(&qword_100C169A0);
  __chkstk_darwin(v20);
  v193 = (uint64_t)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1000BA294(&qword_100C169A8);
  __chkstk_darwin(v22);
  v192 = (uint64_t)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1000BA294(&qword_100C169B0);
  __chkstk_darwin(v24);
  v191 = (uint64_t)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1000BA294(&qword_100C169B8);
  __chkstk_darwin(v26);
  v189 = (uint64_t)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1000BA294(&qword_100C169C0);
  __chkstk_darwin(v28);
  v218 = (uint64_t)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1000BA294(&qword_100C169C8);
  __chkstk_darwin(v30);
  v217 = (uint64_t)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1000BA294(&qword_100C169D0);
  __chkstk_darwin(v32);
  v216 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1000BA294(&qword_100C169D8);
  __chkstk_darwin(v34);
  v215 = (uint64_t)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1000BA294(&qword_100C169E0);
  __chkstk_darwin(v36);
  v214 = (uint64_t)&v177 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1000BA294(&qword_100C169E8);
  __chkstk_darwin(v38);
  v213 = (uint64_t)&v177 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1000BA294(&qword_100C169F0);
  __chkstk_darwin(v40);
  v212 = (uint64_t)&v177 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100C169F8);
  __chkstk_darwin(v42);
  v211 = (uint64_t)&v177 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1000BA294(&qword_100C16A00);
  __chkstk_darwin(v44);
  v210 = (uint64_t)&v177 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v46);
  v209 = (uint64_t)&v177 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for AppConfigurationState(0);
  v49 = __chkstk_darwin(v48);
  v221 = (uint64_t)&v177 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for WeatherCoalescedLocationResult(0, v49);
  v179 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v52 = (char *)&v177 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Location(0);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v56 = (char *)&v177 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v57);
  v186 = (uint64_t)&v177 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v187 = (char *)&v177 - v60;
  __chkstk_darwin(v61);
  v63 = (char *)&v177 - v62;
  __chkstk_darwin(v64);
  v66 = (char *)&v177 - v65;
  v67 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v67);
  v188 = (char *)&v177 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69);
  v71 = (char *)&v177 - v70;
  v73 = v0[11];
  v72 = v0[12];
  v219 = v0;
  v185 = v0 + 8;
  sub_1000DB418(v0 + 8, v73);
  dispatch thunk of LocationManagerType.currentLocation.getter(v73, v72);
  sub_1005A1770((uint64_t)v66, (uint64_t)v63);
  v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v53);
  v178 = v54;
  v177 = v56;
  v181 = v53;
  if (v74 == 1)
  {
    v75 = type metadata accessor for CurrentLocation(0);
    v76 = (uint64_t)v71;
    v77 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v56, v63, v53);
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v71, v56, v53);
    v78 = type metadata accessor for CurrentLocation(0);
    v79 = swift_storeEnumTagMultiPayload(v71, v78, 0);
    (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v56, v53, v79);
    v76 = (uint64_t)v71;
    v77 = 0;
    v75 = v78;
  }
  _s7Weather24LocationCompositionStateOwst_0(v76, v77, 1, v75);
  sub_100021AA4((uint64_t)v66, &qword_100BC35F8);
  v80 = v219;
  v81 = v219[16];
  v82 = v219[17];
  v183 = v219 + 13;
  sub_1000DB418(v219 + 13, v81);
  v83 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter(v81, v82);
  v84 = v80[21];
  v85 = v80[22];
  sub_1000DB418(v80 + 18, v84);
  v86 = dispatch thunk of LocationsOfInterestManagerType.locations.getter(v84, v85);
  v87 = v80[26];
  v88 = v80[27];
  sub_1000DB418(v80 + 23, v87);
  v199 = v71;
  v184 = v86;
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:)(v71, v83, v86, v87, v88);
  v89 = swift_bridgeObjectRelease(v83);
  v182 = WeatherCoalescedLocationResult.coalescedLocations.getter(v89);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v52, v180);
  v90 = type metadata accessor for Date(0);
  _s7Weather24LocationCompositionStateOwst_0(v209, 1, 1, v90);
  v91 = type metadata accessor for AppStoreReviewConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v210, 1, 1, v91);
  v92 = type metadata accessor for FeaturesConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v211, 1, 1, v92);
  v93 = type metadata accessor for GeocodeConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v212, 1, 1, v93);
  v94 = type metadata accessor for HistoricalFactsConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v213, 1, 1, v94);
  v95 = type metadata accessor for LocationsConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v214, 1, 1, v95);
  v96 = type metadata accessor for MapsConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v215, 1, 1, v96);
  v97 = type metadata accessor for NetworkConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v216, 1, 1, v97);
  v98 = type metadata accessor for NewsConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v217, 1, 1, v98);
  v99 = type metadata accessor for NotificationsConfiguration(0);
  _s7Weather24LocationCompositionStateOwst_0(v218, 1, 1, v99);
  v100 = type metadata accessor for PrivacyConfiguration(0);
  v101 = v189;
  _s7Weather24LocationCompositionStateOwst_0(v189, 1, 1, v100);
  v102 = type metadata accessor for WidgetPrivacyConfiguration(0);
  v103 = v191;
  _s7Weather24LocationCompositionStateOwst_0(v191, 1, 1, v102);
  v104 = type metadata accessor for ProviderAttributionConfiguration(0);
  v105 = v192;
  _s7Weather24LocationCompositionStateOwst_0(v192, 1, 1, v104);
  v106 = type metadata accessor for ReportWeatherConfiguration(0);
  v107 = v193;
  _s7Weather24LocationCompositionStateOwst_0(v193, 1, 1, v106);
  v108 = type metadata accessor for TemperatureScaleConfiguration(0);
  v109 = v194;
  _s7Weather24LocationCompositionStateOwst_0(v194, 1, 1, v108);
  v110 = type metadata accessor for UnitConfiguration(0);
  v111 = v195;
  _s7Weather24LocationCompositionStateOwst_0(v195, 1, 1, v110);
  v112 = type metadata accessor for WeatherDataConfiguration(0);
  v113 = v196;
  _s7Weather24LocationCompositionStateOwst_0(v196, 1, 1, v112);
  v114 = type metadata accessor for WeatherDataServiceConfiguration(0);
  v115 = v197;
  _s7Weather24LocationCompositionStateOwst_0(v197, 1, 1, v114);
  v116 = type metadata accessor for WidgetConfiguration(0);
  v117 = v198;
  _s7Weather24LocationCompositionStateOwst_0(v198, 1, 1, v116);
  v118 = AppConfiguration.init(lastRefreshed:appConfigRefreshTimeInterval:locationDecimalPrecision:reverseGeocodingRefreshTimeInterval:appStoreReview:endpoints:features:geocode:historicalFacts:locationsConfiguration:maps:namedNetworkConfigurations:network:news:notifications:privacy:widgetPrivacy:providerAttribution:reportWeather:temperatureScale:unitConfiguration:weatherData:weatherDataService:widget:languageConfigs:fallbackLanguage:treatmentIDs:segmentSetIDs:)(v209, 0, 1, 0, 1, 0, 1, v210, 0, v211, v212, v213, v214, v215, 0, v216, v217, v218, v101,
           v103,
           v105,
           v107,
           v109,
           v111,
           v113,
           v115,
           v117,
           0,
           0,
           0,
           0,
           0);
  v119 = (int *)v190;
  v120 = v222;
  static Locale.current.getter(v118);
  CurrentCountry = GeocodeManagerGetCurrentCountryCode()();
  LOBYTE(v113) = UIAccessibilityIsReduceMotionEnabled();
  LOBYTE(v111) = UIAccessibilityIsSwitchControlRunning();
  LOBYTE(v109) = UIAccessibilityIsVoiceOverRunning();
  sub_10005E6A8();
  *(_WORD *)v120 = 1;
  *(_BYTE *)(v120 + 2) = 3;
  *(Swift::String *)(v120 + v119[8]) = CurrentCountry;
  *(_BYTE *)(v120 + v119[9]) = v113;
  *(_BYTE *)(v120 + v119[10]) = v111;
  *(_BYTE *)(v120 + v119[11]) = v109;
  *(_BYTE *)(v120 + v119[12]) = 0;
  *(_QWORD *)(v120 + v119[13]) = 0;
  *(_BYTE *)(v120 + v119[14]) = 0;
  *(_BYTE *)(v120 + v119[15]) = 0;
  v122 = (_OWORD *)(v120 + v119[16]);
  v123 = v225;
  *v122 = v224;
  v122[1] = v123;
  v122[2] = v226;
  v124 = v80[11];
  v125 = v80[12];
  sub_1000DB418(v185, v124);
  v126 = (uint64_t)v187;
  dispatch thunk of LocationManagerType.currentLocation.getter(v124, v125);
  v127 = v186;
  sub_1005A1770(v126, v186);
  v128 = v181;
  if (_s7Weather24LocationCompositionStateOwet_0(v127, 1, v181) == 1)
  {
    v129 = type metadata accessor for CurrentLocation(0);
    v130 = (uint64_t)v188;
    v131 = 1;
  }
  else
  {
    v132 = v178;
    v133 = v177;
    (*(void (**)(char *, uint64_t, uint64_t))(v178 + 32))(v177, v127, v128);
    v134 = v188;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v188, v133, v128);
    v135 = type metadata accessor for CurrentLocation(0);
    v136 = swift_storeEnumTagMultiPayload(v134, v135, 0);
    (*(void (**)(char *, uint64_t, __n128))(v132 + 8))(v133, v128, v136);
    v130 = (uint64_t)v134;
    v131 = 0;
    v129 = v135;
  }
  _s7Weather24LocationCompositionStateOwst_0(v130, v131, 1, v129);
  sub_100021AA4(v126, &qword_100BC35F8);
  v137 = v219;
  v138 = v219[16];
  v139 = v219[17];
  sub_1000DB418(v183, v138);
  dispatch thunk of SavedLocationsManagerType.savedLocations.getter(v138, v139);
  v140 = v137[31];
  v141 = v137[32];
  sub_1000DB418(v137 + 28, v140);
  dispatch thunk of LocationDisplayContextManagerType.fetchDisplayContextByLocation()(v140, v141);
  sub_1006EA08C();
  v142 = (int *)v200;
  v143 = (uint64_t)v203;
  v145 = Date.init(timeIntervalSince1970:)(v144, 0.0);
  *(_BYTE *)v143 = 0;
  *(_QWORD *)(v143 + 8) = &_swiftEmptySetSingleton;
  *(_DWORD *)(v143 + 16) = 0;
  *(_BYTE *)(v143 + v142[11]) = 0;
  *(_BYTE *)(v143 + v142[12]) = 0;
  *(_BYTE *)(v143 + v142[13]) = 0;
  *(_BYTE *)(v143 + v142[14]) = 0;
  *(_BYTE *)(v143 + v142[15]) = 0;
  *(_BYTE *)(v143 + v142[16]) = 0;
  Date.init()(v145);
  v146 = type metadata accessor for ListViewState._Storage();
  swift_allocObject(v146, 90, 7);
  sub_100149094(0, 0, 1, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
  v148 = v147;
  v149 = (int *)v201;
  v150 = v207;
  sub_10093E2A8(v137, &v207[*(int *)(v201 + 20)]);
  v151 = sub_10093E900(v137);
  v152 = (_QWORD *)((char *)v150 + v149[8]);
  v153 = (int *)type metadata accessor for SearchViewState(0);
  v154 = (char *)v152 + v153[5];
  v155 = type metadata accessor for SearchViewState.ViewState(0);
  swift_storeEnumTagMultiPayload(v154, v155, 3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152 + v153[7], 1, 1, v128);
  *v152 = 0;
  v152[1] = 0xE000000000000000;
  *((_BYTE *)v152 + v153[6]) = 0;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 0, 1, (uint64_t)v153);
  sub_10004A000((uint64_t)v150 + v149[9]);
  v156 = (_WORD *)((char *)v150 + v149[10]);
  v157 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  v158 = (char *)v156 + v157[6];
  v159 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  v160 = type metadata accessor for WeatherMapPrecipitationOverlayKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 104))(v158, v159, v160);
  v161 = enum case for WeatherMapOverlayKind.precipitation(_:);
  v162 = type metadata accessor for WeatherMapOverlayKind(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 104))(v158, v161, v162);
  v163 = (uint64_t)v156 + v157[8];
  v164 = sub_1000BA294(&qword_100BC5FD0);
  _s7Weather24LocationCompositionStateOwst_0(v163, 3, 3, v164);
  *v156 = -32764;
  v165 = (_QWORD *)((char *)v156 + v157[7]);
  *v165 = 0;
  v165[1] = 0;
  *((_BYTE *)v156 + v157[9]) = 1;
  *v150 = v148;
  *((_BYTE *)v150 + v149[6]) = 0;
  *((_BYTE *)v150 + v149[7]) = v151;
  *((_BYTE *)v150 + v149[11]) = 0;
  v166 = (uint64_t)v208;
  swift_storeEnumTagMultiPayload(v208, v202, 6);
  type metadata accessor for LocationWeatherDataState(0);
  v219 = (_QWORD *)Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  type metadata accessor for LocationAvailableDataSetState(0);
  v167 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v168 = v204;
  v169 = UUID.init()(v167);
  v170 = UUID.uuidString.getter(v169);
  v172 = v171;
  (*(void (**)(char *, uint64_t))(v205 + 8))(v168, v206);
  type metadata accessor for WeatherCondition(0);
  v173 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  sub_100021AA4((uint64_t)v199, (uint64_t *)&unk_100C0D170);
  v174 = type metadata accessor for MainState._Storage(0);
  swift_allocObject(v174, *(unsigned int *)(v174 + 48), *(unsigned __int16 *)(v174 + 52));
  *((_QWORD *)&v176 + 1) = v172;
  *(_QWORD *)&v176 = v170;
  return sub_1000DB488((uint64_t)&_swiftEmptySetSingleton, 2, v221, v222, v220, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v143, v223, (uint64_t)v150, v166, v176, (uint64_t)v219, v167, 0, v173, (uint64_t)&_swiftEmptyDictionarySingleton);
}

uint64_t sub_10005C8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10008900C();
  v6 = v5(0);
  sub_1000C128C(v6);
  v7 = sub_1000BA294(&qword_100BC39B0);
  if (sub_100098814(v7) == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    sub_10009E908();
    v8 = sub_10003BC60();
    sub_1000987E0(v8);
  }
  else
  {
    sub_1000B4394();
  }
  sub_1000DB6F4(*(int *)(v0 + 40));
  return sub_1000B4380(v1, v3 + v4, v2 | 7);
}

uint64_t sub_10005C944()
{
  uint64_t v0;

  sub_10005C968();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10005C968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = sub_1000992C4();
  sub_10003BC44(v1);
  v2 = type metadata accessor for Logger(0);
  sub_10003BC44(v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished));
  return v0;
}

void sub_10005C9C8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  id v51;
  void *v52;
  id v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;

  v3 = type metadata accessor for WeatherDataConfiguration(0);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  v81 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppConfigurationState(0);
  __chkstk_darwin(v5);
  v80 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v7);
  v79 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BCCC50);
  __chkstk_darwin(v9);
  v78 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Location.Identifier(0);
  v76 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1000BA294(&qword_100BC35F8);
  __chkstk_darwin(v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Location(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v77 = (char *)&v74 - v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v74 - v27;
  v84 = v1;
  sub_10000E1AC((uint64_t)v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_100021A14((uint64_t)v19, &qword_100BC35F8);
    v29 = 3;
  }
  else
  {
    v74 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v75 = a1;
    v74(v28, v19, v20);
    v30 = *(_QWORD *)(v84 + 56);
    v31 = *(_QWORD *)(v84 + 64);
    sub_1000DB418((_QWORD *)(v84 + 32), v30);
    v32 = dispatch thunk of LocationManagerType.currentCLLocation.getter(v30, v31);
    if (v32)
    {
      v33 = (void *)v32;
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 16))(v24, v28, v20);
      v35 = Location.identifier.getter(v34);
      v36 = static Location.currentLocationID.getter(v35);
      v38 = v37;
      Location.Identifier.with(id:name:coordinate:)(v36);
      v39 = swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v13, v11, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v11);
      v40 = type metadata accessor for TimeZone(0);
      v41 = v78;
      _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v40);
      v42 = type metadata accessor for Date(0);
      v43 = v79;
      _s7Weather24LocationCompositionStateOwst_0(v79, 1, 1, v42);
      v44 = v77;
      Location.with(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)(v16, v41, v43, 0, 0, 0, 0, 0, 0, 0, 0);
      sub_100021A14(v43, (uint64_t *)&unk_100BD35A0);
      sub_100021A14(v41, &qword_100BCCC50);
      sub_100021A14((uint64_t)v16, &qword_100BCD680);
      v45 = *(void (**)(char *, uint64_t))(v21 + 8);
      v45(v24, v20);
      v45(v28, v20);
      v46 = (void (*)(uint64_t, char *, uint64_t))v74;
      v47 = ((uint64_t (*)(char *, char *, uint64_t))v74)(v28, v44, v20);
      v48 = Location.coordinate.getter(v47);
      Location.coordinate.getter(v49);
      v51 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v48, v50);
      v52 = v33;
      v53 = objc_msgSend(v33, "distanceFromLocation:", v51);
      v55 = v54;
      (*(void (**)(double *__return_ptr, id))(v84 + 72))(&v85, v53);
      v56 = v85;
      v57 = v80;
      sub_100084050(*(_QWORD *)&v85 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v80, type metadata accessor for AppConfigurationState);
      v58 = swift_release(*(_QWORD *)&v56);
      v59 = v81;
      AppConfiguration.weatherData.getter(v58);
      v60 = type metadata accessor for AppConfiguration(0);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v57, v60);
      v62 = WeatherDataConfiguration.currentLocationCertaintyRadius.getter(v61);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v59, v83);
      if (v62 >= v55)
      {
        a1 = v75;
        if (qword_100BC24A0 != -1)
          swift_once(&qword_100BC24A0, sub_1001596C4);
        v68 = type metadata accessor for Logger(0);
        v69 = sub_1000AECD4(v68, (uint64_t)qword_100CAF1C8);
        v70 = Logger.logObject.getter(v69);
        v71 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v70, v71))
        {
          v72 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v72 = 0;
          _os_log_impl((void *)&_mh_execute_header, v70, v71, "Current location accurate.", v72, 2u);
          swift_slowDealloc(v72, -1, -1);
        }

        v46(a1, v28, v20);
        v29 = 0;
      }
      else
      {
        a1 = v75;
        if (qword_100BC24A0 != -1)
          swift_once(&qword_100BC24A0, sub_1001596C4);
        v63 = type metadata accessor for Logger(0);
        v64 = sub_1000AECD4(v63, (uint64_t)qword_100CAF1C8);
        v65 = Logger.logObject.getter(v64);
        v66 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v65, v66))
        {
          v67 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v67 = 134217984;
          v85 = v62;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "Current location stale - greater than %fm away.", v67, 0xCu);
          swift_slowDealloc(v67, -1, -1);
        }

        v46(a1, v28, v20);
        v29 = 1;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v20);
      v29 = 3;
      a1 = v75;
    }
  }
  v73 = type metadata accessor for CurrentLocation(0);
  swift_storeEnumTagMultiPayload(a1, v73, v29);
}

void sub_10005D0C4(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;

  v43 = a1;
  v49 = a2;
  LODWORD(v48) = (a1 & 0x100) == 0;
  v6 = type metadata accessor for BlendMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Color.RGBColorSpace(0);
  v42 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1000BA294(&qword_100BCB418);
  __chkstk_darwin(v46);
  v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = type metadata accessor for RoundedCornersShape(0);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BCB420);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v42 - v20;
  v22 = sub_1000BA294(&qword_100BCB428);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v25 = static HorizontalAlignment.center.getter(v23);
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  if ((v43 & 1) != 0)
    v26 = 12;
  else
    v26 = 0;
  RoundedCornersShape.init(corners:radius:)(v26, a3);
  v27 = dbl_100988F20[v48];
  v48 = &v25[*(int *)(sub_1000BA294(&qword_100BCB430) + 44)];
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v44);
  v28 = Color.init(_:white:opacity:)(v11, 0.8, v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for BlendMode.plusLighter(_:), v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v13 + *(int *)(v46 + 36), v9, v6);
  *v13 = v28;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v29 = v45;
  v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v19, v15, v47);
  sub_10003773C((uint64_t)v13, (uint64_t)&v19[*(int *)(v16 + 52)], &qword_100BCB418);
  *(_WORD *)&v19[*(int *)(v16 + 56)] = 256;
  sub_10020BEA8((uint64_t)v13, &qword_100BCB418);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  sub_10005D468((uint64_t)v19, (uint64_t)v21);
  v31 = sub_10005D468((uint64_t)v21, (uint64_t)v48);
  v32 = static Edge.Set.horizontal.getter(v31);
  v33 = EdgeInsets.init(_all:)(a4);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v49;
  sub_10003773C((uint64_t)v25, v49, &qword_100BCB428);
  v41 = v40 + *(int *)(sub_1000BA294(&qword_100BCB438) + 36);
  *(_BYTE *)v41 = v32;
  *(double *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v35;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  sub_10020BEA8((uint64_t)v25, &qword_100BCB428);
}

uint64_t sub_10005D468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCB420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005D4B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  swift_bridgeObjectRetain(v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_1000BA294(&qword_100BD4280);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)(a2 + v12);
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)(v13 + 8) = v15;
  v16 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v17 = v16[6];
  v18 = (void *)(v13 + v17);
  v19 = (const void *)(v14 + v17);
  swift_bridgeObjectRetain(v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v10))
  {
    v20 = sub_1000BA294(&qword_100BD4280);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v18, v19, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v10);
  }
  v21 = v16[7];
  v22 = (_QWORD *)(v13 + v21);
  v23 = (_QWORD *)(v14 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_QWORD *)(v13 + v16[8]) = *(_QWORD *)(v14 + v16[8]);
  v25 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = type metadata accessor for LocationOfInterest(0);
  swift_bridgeObjectRetain(v24);
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_1000BA294(&qword_100BC3118);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v30 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[14];
  v32 = (_BYTE *)(a1 + v31);
  v33 = (_BYTE *)(a2 + v31);
  v34 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, (uint64_t)v34))
  {
    v35 = sub_1000BA294(&qword_100BCD688);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    v36 = v34[5];
    v37 = &v32[v36];
    v38 = &v33[v36];
    v39 = type metadata accessor for Location(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(&v32[v34[6]], &v33[v34[6]], v28);
    v32[v34[7]] = v33[v34[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, (uint64_t)v34);
  }
  return a1;
}

uint64_t sub_10005D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(unsigned __int8 *)(v8 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t *_s7Weather24LocationViewRowViewModelVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t sub_10005D874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const void *v135;
  int v136;
  int v137;
  size_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  const void *v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  int *v158;
  int v159;
  int v160;
  uint64_t v161;
  _BYTE *v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  void *__dst;
  uint64_t v171;
  int *v172;
  int *v173;
  int *v174;

  v5 = type metadata accessor for Location.Identifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for LocationViewModel(0);
  v9 = v8[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    v14 = sub_1000BA294(&qword_100BCD680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  v15 = v8[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  v19 = *(_QWORD *)(a1 + v15 + 8);
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(_QWORD *)(v17 + 24);
  v22 = *(_QWORD *)(v17 + 32);
  v23 = *(_QWORD *)(v17 + 40);
  v24 = *(_BYTE *)(v17 + 48);
  sub_100176D88(v20, v21, v22, v23, v24);
  v25 = *(_QWORD *)(v16 + 16);
  v26 = *(_QWORD *)(v16 + 24);
  v27 = *(_QWORD *)(v16 + 32);
  v28 = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v21;
  *(_QWORD *)(v16 + 32) = v22;
  *(_QWORD *)(v16 + 40) = v23;
  v29 = *(_BYTE *)(v16 + 48);
  *(_BYTE *)(v16 + 48) = v24;
  sub_100176DD4(v25, v26, v27, v28, v29);
  *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
  v30 = *(_QWORD *)(v17 + 64);
  v31 = *(_QWORD *)(v16 + 64);
  *(_QWORD *)(v16 + 64) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  v32 = *(_QWORD *)(v17 + 80);
  v33 = *(_QWORD *)(v16 + 80);
  *(_QWORD *)(v16 + 80) = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  v34 = *(_QWORD *)(v17 + 96);
  v35 = *(_QWORD *)(v16 + 96);
  *(_QWORD *)(v16 + 96) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  v36 = *(_QWORD *)(v17 + 112);
  v37 = *(_QWORD *)(v16 + 112);
  *(_QWORD *)(v16 + 112) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  v38 = *(_QWORD *)(v17 + 128);
  v39 = *(_QWORD *)(v16 + 128);
  *(_QWORD *)(v16 + 128) = v38;
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRelease(v39);
  *(_BYTE *)(v16 + 136) = *(_BYTE *)(v17 + 136);
  *(_BYTE *)(v16 + 137) = *(_BYTE *)(v17 + 137);
  *(_BYTE *)(v16 + 138) = *(_BYTE *)(v17 + 138);
  *(_QWORD *)(v16 + 144) = *(_QWORD *)(v17 + 144);
  v40 = *(_QWORD *)(v17 + 152);
  v41 = *(_QWORD *)(v16 + 152);
  *(_QWORD *)(v16 + 152) = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41);
  *(_BYTE *)(v16 + 160) = *(_BYTE *)(v17 + 160);
  *(_BYTE *)(v16 + 161) = *(_BYTE *)(v17 + 161);
  v42 = v8[7];
  v43 = *(_QWORD *)(a2 + v42);
  v44 = *(_QWORD *)(a1 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRelease(v44);
  v45 = v8[8];
  v46 = *(_QWORD *)(a1 + v45);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);
  v47 = v46 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  swift_release(v47);
  v48 = v8[9];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = type metadata accessor for LocationFooterViewModel(0);
  LODWORD(v47) = _s7Weather24LocationCompositionStateOwet_0(v49, 1, v51);
  v52 = _s7Weather24LocationCompositionStateOwet_0(v50, 1, v51);
  if ((_DWORD)v47)
  {
    if (!v52)
    {
      *(_BYTE *)v49 = *(_BYTE *)v50;
      *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
      *(_BYTE *)(v49 + 2) = *(_BYTE *)(v50 + 2);
      *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
      v53 = *(_QWORD *)(v50 + 16);
      *(_QWORD *)(v49 + 16) = v53;
      v54 = *(int *)(v51 + 32);
      v171 = v49;
      v55 = (void *)(v49 + v54);
      v56 = (const void *)(v50 + v54);
      v57 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v53);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
      {
        v58 = sub_1000BA294(&qword_100BD4280);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
      }
      v173 = (int *)v51;
      v69 = *(int *)(v51 + 36);
      v70 = v171 + v69;
      v71 = v50 + v69;
      *(_BYTE *)v70 = *(_BYTE *)(v50 + v69);
      v72 = *(_QWORD *)(v50 + v69 + 8);
      *(_QWORD *)(v70 + 8) = v72;
      v73 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
      v74 = v73[6];
      __dst = (void *)(v70 + v74);
      v75 = (const void *)(v71 + v74);
      swift_bridgeObjectRetain(v72);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v57))
      {
        v76 = sub_1000BA294(&qword_100BD4280);
        memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(__dst, v75, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v57);
      }
      v77 = v73[7];
      v78 = (_QWORD *)(v70 + v77);
      v79 = (_QWORD *)(v71 + v77);
      *v78 = *v79;
      v80 = v79[1];
      v78[1] = v80;
      *(_QWORD *)(v70 + v73[8]) = *(_QWORD *)(v71 + v73[8]);
      *(_BYTE *)(v171 + v173[10]) = *(_BYTE *)(v50 + v173[10]);
      v81 = v173[11];
      v82 = (void *)(v171 + v81);
      v83 = (const void *)(v50 + v81);
      v84 = type metadata accessor for LocationOfInterest(0);
      swift_bridgeObjectRetain(v80);
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
      {
        v85 = sub_1000BA294(&qword_100BC3118);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      }
      v86 = v173;
      *(_BYTE *)(v171 + v173[12]) = *(_BYTE *)(v50 + v173[12]);
      *(_BYTE *)(v171 + v173[13]) = *(_BYTE *)(v50 + v173[13]);
      v87 = v173[14];
      v88 = (_BYTE *)(v171 + v87);
      v89 = (_BYTE *)(v50 + v87);
      v90 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, (uint64_t)v90))
      {
        v91 = sub_1000BA294(&qword_100BCD688);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        *v88 = *v89;
        v92 = v90[5];
        v93 = &v88[v92];
        v94 = &v89[v92];
        v95 = type metadata accessor for Location(0);
        v96 = v93;
        v86 = v173;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v96, v94, v95);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(&v88[v90[6]], &v89[v90[6]], v84);
        v88[v90[7]] = v89[v90[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, (uint64_t)v90);
      }
      v97 = v171;
      v98 = (uint64_t)v86;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v52)
  {
    sub_1000B56C0(v49, type metadata accessor for LocationFooterViewModel);
LABEL_13:
    v59 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCD690) - 8) + 64);
    v60 = (void *)v49;
    v61 = (const void *)v50;
LABEL_14:
    memcpy(v60, v61, v59);
    goto LABEL_31;
  }
  *(_BYTE *)v49 = *(_BYTE *)v50;
  *(_BYTE *)(v49 + 1) = *(_BYTE *)(v50 + 1);
  *(_BYTE *)(v49 + 2) = *(_BYTE *)(v50 + 2);
  *(_QWORD *)(v49 + 8) = *(_QWORD *)(v50 + 8);
  v62 = *(_QWORD *)(v50 + 16);
  v63 = *(_QWORD *)(v49 + 16);
  *(_QWORD *)(v49 + 16) = v62;
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRelease(v63);
  v64 = *(int *)(v51 + 32);
  v65 = (void *)(v49 + v64);
  v66 = (const void *)(v50 + v64);
  v67 = type metadata accessor for URL(0);
  LODWORD(v63) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v67);
  v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67);
  if ((_DWORD)v63)
  {
    if (!v68)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  v127 = *(_QWORD *)(v67 - 8);
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v127 + 8))(v65, v67);
LABEL_41:
    v128 = sub_1000BA294(&qword_100BD4280);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v127 + 24))(v65, v66, v67);
LABEL_42:
  v174 = (int *)v51;
  v129 = *(int *)(v51 + 36);
  v130 = v49 + v129;
  v131 = v50 + v129;
  *(_BYTE *)v130 = *(_BYTE *)(v50 + v129);
  v132 = *(_QWORD *)(v50 + v129 + 8);
  v133 = *(_QWORD *)(v49 + v129 + 8);
  *(_QWORD *)(v130 + 8) = v132;
  swift_bridgeObjectRetain(v132);
  swift_bridgeObjectRelease(v133);
  v172 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v134 = v172[6];
  v135 = (const void *)(v131 + v134);
  v169 = v130 + v134;
  v136 = _s7Weather24LocationCompositionStateOwet_0(v130 + v134, 1, v67);
  v137 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v67);
  if (v136)
  {
    if (v137)
    {
      v138 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v139 = (void *)v169;
LABEL_47:
      memcpy(v139, v135, v138);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v169, v135, v67);
    _s7Weather24LocationCompositionStateOwst_0(v169, 0, 1, v67);
  }
  else
  {
    v140 = *(_QWORD *)(v67 - 8);
    if (v137)
    {
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v169, v67);
      v138 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v139 = (void *)v169;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v140 + 24))(v169, v135, v67);
  }
LABEL_51:
  v141 = v172[7];
  v142 = (_QWORD *)(v130 + v141);
  v143 = (_QWORD *)(v131 + v141);
  *v142 = *v143;
  v144 = v143[1];
  v145 = v142[1];
  v142[1] = v144;
  swift_bridgeObjectRetain(v144);
  swift_bridgeObjectRelease(v145);
  v146 = v172[8];
  v147 = *(_QWORD *)(v130 + v146);
  *(_QWORD *)(v130 + v146) = *(_QWORD *)(v131 + v146);
  swift_retain();
  swift_release(v147);
  *(_BYTE *)(v49 + v174[10]) = *(_BYTE *)(v50 + v174[10]);
  v148 = v174[11];
  v149 = (void *)(v49 + v148);
  v150 = (const void *)(v50 + v148);
  v151 = type metadata accessor for LocationOfInterest(0);
  LODWORD(v147) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v151);
  v152 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151);
  if ((_DWORD)v147)
  {
    if (!v152)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v151);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  v153 = *(_QWORD *)(v151 - 8);
  if (v152)
  {
    (*(void (**)(void *, uint64_t))(v153 + 8))(v149, v151);
LABEL_56:
    v154 = sub_1000BA294(&qword_100BC3118);
    memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v153 + 24))(v149, v150, v151);
LABEL_57:
  *(_BYTE *)(v49 + v174[12]) = *(_BYTE *)(v50 + v174[12]);
  *(_BYTE *)(v49 + v174[13]) = *(_BYTE *)(v50 + v174[13]);
  v155 = v174[14];
  v156 = (_BYTE *)(v49 + v155);
  v157 = (_BYTE *)(v50 + v155);
  v158 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v159 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, (uint64_t)v158);
  v160 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, (uint64_t)v158);
  if (v159)
  {
    if (!v160)
    {
      *v156 = *v157;
      v161 = v158[5];
      v162 = &v156[v161];
      v163 = &v157[v161];
      v164 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(&v156[v158[6]], &v157[v158[6]], v151);
      v156[v158[7]] = v157[v158[7]];
      v97 = (uint64_t)v156;
      v98 = (uint64_t)v158;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v97, 0, 1, v98);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v160)
  {
    sub_1000B56C0((uint64_t)v156, type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    v59 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BCD688) - 8) + 64);
    v60 = v156;
    v61 = v157;
    goto LABEL_14;
  }
  *v156 = *v157;
  v165 = v158[5];
  v166 = &v156[v165];
  v167 = &v157[v165];
  v168 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v168 - 8) + 24))(v166, v167, v168);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 24))(&v156[v158[6]], &v157[v158[6]], v151);
  v156[v158[7]] = v157[v158[7]];
LABEL_31:
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  *(_BYTE *)(a1 + v8[12]) = *(_BYTE *)(a2 + v8[12]);
  *(_BYTE *)(a1 + v8[13]) = *(_BYTE *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  v99 = v8[15];
  v100 = *(void **)(a2 + v99);
  v101 = *(void **)(a1 + v99);
  *(_QWORD *)(a1 + v99) = v100;
  v102 = v100;

  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  *(_BYTE *)(a1 + v8[18]) = *(_BYTE *)(a2 + v8[18]);
  v103 = v8[19];
  v104 = a1 + v103;
  v105 = a2 + v103;
  v106 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
  v107 = v8[20];
  v108 = (void *)(a1 + v107);
  v109 = (const void *)(a2 + v107);
  v110 = type metadata accessor for ForegroundEffect(0);
  v111 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v110);
  v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110);
  if (!v111)
  {
    v113 = *(_QWORD *)(v110 - 8);
    if (!v112)
    {
      (*(void (**)(void *, const void *, uint64_t))(v113 + 24))(v108, v109, v110);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v113 + 8))(v108, v110);
    goto LABEL_36;
  }
  if (v112)
  {
LABEL_36:
    v114 = sub_1000BA294(&qword_100BC5B30);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
LABEL_37:
  *(_BYTE *)(a1 + v8[21]) = *(_BYTE *)(a2 + v8[21]);
  v115 = v8[22];
  v116 = *(_QWORD *)(a2 + v115);
  v117 = *(_QWORD *)(a1 + v115);
  *(_QWORD *)(a1 + v115) = v116;
  swift_bridgeObjectRetain(v116);
  swift_bridgeObjectRelease(v117);
  *(_BYTE *)(a1 + v8[23]) = *(_BYTE *)(a2 + v8[23]);
  v118 = v8[24];
  v119 = a1 + v118;
  v120 = a2 + v118;
  v121 = type metadata accessor for LocationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 24))(v119, v120, v121);
  v122 = *(int *)(a3 + 20);
  v123 = (_QWORD *)(a1 + v122);
  v124 = (_QWORD *)(a2 + v122);
  *v123 = *v124;
  v125 = v123[1];
  v123[1] = v124[1];
  swift_retain();
  swift_release(v125);
  return a1;
}

uint64_t sub_10005E558(uint64_t a1)
{
  return sub_10005E578(a1, sub_10005E5A0) & 1;
}

uint64_t sub_10005E578(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_10005E5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v11 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(a1);
  v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v17;
  v18 = a1 + *(int *)(type metadata accessor for Page(0, (uint64_t)&v21) + 52);
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v24 = a6;
  type metadata accessor for AnimatableTabView(0, (uint64_t)&v21);
  v19 = type metadata accessor for State(0, a4);
  State.wrappedValue.getter(v13, v19);
  LOBYTE(a5) = dispatch thunk of static Equatable.== infix(_:_:)(v18, v13, a4, *(_QWORD *)(a6 + 8));
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, a4);
  return a5 & 1;
}

void sub_10005E6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1000986AC();
  v3 = v2;
  sub_1000BA294(qword_100BD7150);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100099864();
  sub_1000BA294(&qword_100BD7130);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100079FBC();
  sub_1000BA294(&qword_100BD7148);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  sub_1000BA294(&qword_100BD7140);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_1000BA294(&qword_100BD7138);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  v20 = type metadata accessor for UnitManager(0);
  static UnitManager.standard.getter(v20);
  UnitManager.preferredPrecipitationUnit.getter();
  sub_10009880C();
  v21 = type metadata accessor for UnitConfiguration.Precipitation(0);
  v22 = sub_100088FC8(v19, 1, v21);
  if (v23)
  {
    sub_1000DB104(v22, &qword_100BD7138);
    sub_1000DDF30();
    v44 = UnitManager.precipitationRainfall.getter();
    sub_10009880C();
  }
  else
  {
    v44 = UnitConfiguration.Precipitation.asUnit.getter(v22);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v19, v21);
  }
  sub_1000DDF30();
  UnitManager.preferredPressureUnit.getter();
  sub_10009880C();
  v24 = type metadata accessor for UnitConfiguration.Pressure(0);
  v25 = sub_100088FC8(v15, 1, v24);
  if (v23)
  {
    sub_100021AA4(v15, &qword_100BD7140);
    sub_1000DDF30();
    v26 = UnitManager.pressure.getter();
    sub_10009880C();
  }
  else
  {
    v26 = UnitConfiguration.Pressure.asUnit.getter(v25);
    sub_1000C6844();
    sub_1000BE774(v15, v27);
  }
  sub_1000DDF30();
  UnitManager.preferredTemperatureUnit.getter();
  sub_10009880C();
  v28 = sub_1000D1320();
  v29 = sub_100088FC8((uint64_t)v11, 1, v28);
  if (v23)
  {
    sub_1000DA7A4(v29, &qword_100BD7148);
    v30 = 0;
  }
  else
  {
    v30 = UnitConfiguration.Temperature.asUnit.getter(v29);
    sub_1000C6844();
    sub_1000BE774((uint64_t)v11, v31);
  }
  sub_1000DDF30();
  UnitManager.systemWideTemperatureUnit.getter();
  sub_10009880C();
  v32 = sub_100088FC8((uint64_t)v8, 1, v28);
  if (v23)
  {
    sub_100021AA4((uint64_t)v8, &qword_100BD7148);
    v33 = 0;
  }
  else
  {
    v33 = UnitConfiguration.Temperature.asUnit.getter(v32);
    sub_1000C6844();
    sub_1000BE774((uint64_t)v8, v34);
  }
  sub_1000DDF30();
  UnitManager.preferredDistanceUnit.getter();
  sub_10009880C();
  v35 = type metadata accessor for UnitConfiguration.Distance(0);
  v36 = sub_100088FC8(v1, 1, v35);
  if (v23)
  {
    sub_100021AA4(v1, &qword_100BD7130);
    sub_1000DDF30();
    v37 = UnitManager.visibility.getter();
    sub_10009880C();
  }
  else
  {
    v37 = UnitConfiguration.Distance.asUnit.getter(v36);
    sub_1000C6844();
    sub_1000BE774(v1, v38);
  }
  sub_1000DDF30();
  UnitManager.preferredWindUnit.getter();
  sub_10009880C();
  v39 = type metadata accessor for UnitConfiguration.WindSpeed(0);
  v40 = sub_100088FC8(v0, 1, v39);
  if (v23)
  {
    sub_100021AA4(v0, qword_100BD7150);
    v41 = sub_1000DDF30();
    v42 = UnitManager.windSpeed.getter();
    swift_release(v41);
  }
  else
  {
    v42 = UnitConfiguration.WindSpeed.asUnit.getter(v40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v0, v39);
  }
  *v3 = v44;
  v3[1] = v26;
  v3[2] = v30;
  v3[3] = v33;
  v3[4] = v37;
  v3[5] = v42;
  sub_100098640();
}

uint64_t sub_10005EA64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationsOptInState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005EAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NotificationsOptInState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 sub_10005EAE4@<Q0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, __n128 a13, unint64_t a14, unint64_t a15)
{
  int *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 *v41;
  __n128 result;
  uint64_t v46;

  *(_QWORD *)a9 = swift_getKeyPath(&unk_10097DF30);
  *(_BYTE *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = swift_getKeyPath(&unk_10097DF58);
  *(_BYTE *)(a9 + 24) = 0;
  v23 = (int *)type metadata accessor for LocationHeaderView(0);
  v24 = (_QWORD *)(a9 + v23[6]);
  *v24 = swift_getKeyPath(&unk_10097DF80);
  v25 = sub_1000BA294(&qword_100BC2908);
  sub_1000987D0(v25);
  v26 = (_QWORD *)(a9 + v23[7]);
  *v26 = swift_getKeyPath(&unk_10097DFB0);
  v27 = sub_1000BA294(&qword_100BC37D8);
  sub_1000987D0(v27);
  KeyPath = swift_getKeyPath(&unk_10097DFE0);
  sub_1000BD918(KeyPath);
  v29 = swift_getKeyPath(&unk_10097E010);
  sub_1000BD918(v29);
  v30 = (_QWORD *)(a9 + v23[10]);
  *v30 = swift_getKeyPath(&unk_10097E040);
  v31 = sub_1000BA294(&qword_100BC37E0);
  sub_1000987D0(v31);
  v32 = swift_getKeyPath(&unk_10097E068);
  sub_1000BD918(v32);
  v33 = (_QWORD *)(a9 + v23[12]);
  *v33 = swift_getKeyPath(&unk_10097E090);
  v34 = sub_1000BA294(&qword_100BC37E8);
  sub_1000987D0(v34);
  v35 = swift_getKeyPath(&unk_10097E0C0);
  sub_1000BD918(v35);
  v36 = a9 + v23[14];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_10097E0E8);
  *(_QWORD *)(v36 + 8) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v36 + 24) = 0;
  *(_BYTE *)(v36 + 32) = 0;
  v37 = a9 + v23[15];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_10097E110);
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(_OWORD *)(v37 + 33) = 0u;
  Text.Measurements.init()((__n128)0);
  v46 = 0x4046800000000000;
  v38 = sub_10010D1D0();
  ScaledMetric.init(wrappedValue:)(&v46, &type metadata for Double, v38);
  memcpy((void *)(a9 + v23[16]), a1, 0xA2uLL);
  v39 = a9 + v23[17];
  *(_QWORD *)v39 = a2;
  *(_QWORD *)(v39 + 8) = a3;
  *(_BYTE *)(v39 + 16) = a4 & 1;
  *(_QWORD *)(v39 + 24) = a5;
  v40 = a9 + v23[18];
  *(_QWORD *)v40 = a6;
  *(_QWORD *)(v40 + 8) = a7;
  *(_BYTE *)(v40 + 16) = a8 & 1;
  *(_QWORD *)(v40 + 24) = a12;
  v41 = (__n128 *)(a9 + v23[19]);
  result = a13;
  *v41 = a13;
  v41[1].n128_u64[0] = a14;
  v41[1].n128_u64[1] = a15;
  *(double *)(a9 + v23[20]) = a10;
  *(double *)(a9 + v23[22]) = a11;
  return result;
}

uint64_t *sub_10005ED9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain(v16);
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

void sub_10005EE6C(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_1000BA294(&qword_100C0A7C0);
  sub_100098CE0();
  __chkstk_darwin(v6);
  sub_100099864();
  if (!a1)
  {
    v7 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    v8 = 7305076;
LABEL_6:
    v9 = 0xE300000000000000;
    goto LABEL_7;
  }
  if (a1 != 1)
  {
    v7 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
    v8 = 7891315;
    goto LABEL_6;
  }
  v7 = Dictionary.init(dictionaryLiteral:)(_swiftEmptyArrayStorage);
  v8 = 1920298854;
  v9 = 0xE400000000000000;
LABEL_7:
  ShortDescription.init(name:_:)(v8, v9, v7, &unk_100B93938);
  *(_QWORD *)(a2 + 24) = v2;
  v10 = sub_10005F1A0(&qword_100C0A7C8, &qword_100C0A7C0);
  v11 = sub_1000DBE08(v10);
  sub_1000C5FB0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_10004A2A0();
}

uint64_t sub_10005EFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;

  sub_1000986AC();
  v21 = v2;
  v22 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1000BA294(&qword_100BDE508);
  sub_100098B6C();
  __chkstk_darwin(v11);
  sub_1000BCED8();
  v12 = sub_1000BA294(&qword_100BC5008);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100098728();
  v16 = v15 - v14;
  v17 = sub_10005F124(&qword_100BC5018, &qword_100BC5008, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  ((void (*)(uint64_t, uint64_t, uint64_t))static PredicateExpressions.build_Arg<A>(_:))(v7, v12, v17);
  v20 = v5;
  ((void (*)(char *, void *))static PredicateExpressions.build_Arg<A>(_:))(&v20, &type metadata for Bool);
  v9[3] = sub_1000BA294(&qword_100BDE510);
  v9[4] = sub_10005F1E0();
  sub_10005F164(v9);
  v18 = sub_10005F124(&qword_100BDE528, &qword_100BDE508, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))static PredicateExpressions.build_Equal<A, B>(lhs:rhs:))(v16, v0, v12, v10, v17, v18, &protocol witness table for Bool);
  sub_1000BD438(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_10005F124(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100075EB0(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_10005F164(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_10005F1A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100075EB0(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005F1E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDE518;
  if (!qword_100BDE518)
  {
    v1 = sub_100075EB0(&qword_100BDE510);
    sub_10005F124(&qword_100BC5010, &qword_100BC5008, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    sub_10015BC9C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDE518);
  }
  return result;
}

uint64_t sub_10005F264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD, __n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD, _QWORD, __n128);
  float v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  float v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  void (*v106)(_QWORD, _QWORD);
  uint64_t v107;
  uint64_t *v108;
  char v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char **v130;
  uint64_t v131;
  char v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  void (*v138)(char *, uint64_t);
  char *v139;
  char *v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  __n128 v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t, uint64_t);
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t result;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  char **v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char v206;
  void (*v207)(char *, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  _QWORD *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  void (*v253)(char *, uint64_t, uint64_t);
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  void (*v260)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v261;
  uint64_t ObjectType;
  uint64_t v263;
  char **v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;

  v260 = a6;
  v243 = a5;
  v250 = a4;
  v265 = (char *)a3;
  v266 = a2;
  v258 = a1;
  v6 = type metadata accessor for SkyBackgroundGradient(0);
  __chkstk_darwin(v6);
  v219 = (char *)&v211 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for VFXLoadRequest(0);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v218 = (char *)&v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000BA294(&qword_100BD6160);
  v10 = __chkstk_darwin(v9);
  v229 = (uint64_t)&v211 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v233 = (uint64_t)&v211 - v12;
  v228 = type metadata accessor for BackgroundAnimationData(0);
  v226 = *(_QWORD *)(v228 - 8);
  __chkstk_darwin(v228);
  v227 = (char *)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for BackgroundAnimationData.Model(0);
  v231 = *(_QWORD *)(v232 - 8);
  v14 = __chkstk_darwin(v232);
  v217 = (char *)&v211 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v230 = (char *)&v211 - v16;
  v239 = type metadata accessor for BackgroundAnimationKind(0);
  v238 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v237 = (char *)&v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for CollisionViewMetrics(0);
  v213 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v211 = (char *)&v211 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_1000BA294(&qword_100C13F70);
  __chkstk_darwin(v223);
  v224 = (uint64_t)&v211 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = sub_1000BA294(&qword_100C13F78);
  __chkstk_darwin(v241);
  v248 = (uint64_t)&v211 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = type metadata accessor for WeatherConditionBackgroundModel(0);
  v252 = *(_QWORD *)(v271 - 8);
  __chkstk_darwin(v271);
  v235 = (char *)&v211 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = sub_1000BA294(&qword_100C13F68);
  __chkstk_darwin(v249);
  v264 = (char **)((char *)&v211 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_1000BA294(&qword_100BC4678);
  v24 = __chkstk_darwin(v23);
  v247 = (uint64_t)&v211 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v246 = (char *)&v211 - v27;
  v28 = __chkstk_darwin(v26);
  v240 = (uint64_t)&v211 - v29;
  __chkstk_darwin(v28);
  v251 = (char *)&v211 - v30;
  v31 = sub_1000BA294(&qword_100C13D20);
  v32 = __chkstk_darwin(v31);
  v216 = (uint64_t)&v211 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v212 = (uint64_t)&v211 - v35;
  v36 = __chkstk_darwin(v34);
  v222 = (char **)((char *)&v211 - v37);
  v38 = __chkstk_darwin(v36);
  v263 = (uint64_t)&v211 - v39;
  __chkstk_darwin(v38);
  v268 = (uint64_t)&v211 - v40;
  v272 = type metadata accessor for TargetWindowSizeClass(0);
  ObjectType = *(_QWORD *)(v272 - 8);
  v41 = __chkstk_darwin(v272);
  v234 = (char *)&v211 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v259 = (char *)&v211 - v44;
  __chkstk_darwin(v43);
  v270 = (uint64_t)&v211 - v45;
  v46 = sub_1000BA294(&qword_100C0A0A0);
  v47 = __chkstk_darwin(v46);
  v215 = (uint64_t)&v211 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v47);
  v214 = (char *)&v211 - v50;
  v51 = __chkstk_darwin(v49);
  v236 = (uint64_t)&v211 - v52;
  v53 = __chkstk_darwin(v51);
  v244 = (char *)&v211 - v54;
  v55 = __chkstk_darwin(v53);
  v245 = (char **)((char *)&v211 - v56);
  v57 = __chkstk_darwin(v55);
  v59 = (char *)&v211 - v58;
  __chkstk_darwin(v57);
  v269 = (uint64_t)&v211 - v60;
  v61 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  v62 = __chkstk_darwin(v61);
  v256 = (uint64_t)&v211 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin(v62);
  v257 = (uint64_t)&v211 - v65;
  v66 = __chkstk_darwin(v64);
  v253 = (void (*)(char *, uint64_t, uint64_t))((char *)&v211 - v67);
  v68 = __chkstk_darwin(v66);
  v70 = (uint64_t *)((char *)&v211 - v69);
  v71 = __chkstk_darwin(v68);
  v73 = (char *)&v211 - v72;
  __chkstk_darwin(v71);
  v75 = (char *)&v211 - v74;
  v76 = sub_1000BA294(&qword_100C12840);
  __chkstk_darwin(v76);
  v78 = (char *)&v211 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for DynamicTypeSize(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = __chkstk_darwin(v79);
  v242 = (char *)&v211 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __chkstk_darwin(v81);
  v255 = (char *)&v211 - v84;
  __chkstk_darwin(v83);
  v86 = (char *)&v211 - v85;
  sub_100037794((uint64_t)v265, (uint64_t)v78, &qword_100C12840);
  sub_10000AB54(v273, (uint64_t)v75, type metadata accessor for WeatherConditionBackgroundModifier);
  v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79);
  v265 = v86;
  v261 = v79;
  v267 = v61;
  v254 = v80;
  if (v87 == 1)
  {
    sub_10010FD3C();
    sub_1000215BC((uint64_t)v75, type metadata accessor for WeatherConditionBackgroundModifier);
    sub_100021A14((uint64_t)v78, &qword_100C12840);
  }
  else
  {
    sub_1000215BC((uint64_t)v75, type metadata accessor for WeatherConditionBackgroundModifier);
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v86, v78, v79);
  }
  sub_100037794(v250, (uint64_t)v59, &qword_100C0A0A0);
  sub_10000AB54(v273, (uint64_t)v73, type metadata accessor for WeatherConditionBackgroundModifier);
  v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v272);
  v89 = ObjectType;
  v90 = v252;
  v91 = (uint64_t)v251;
  if (v88 == 1)
  {
    sub_10010FD70();
    sub_1000215BC((uint64_t)v73, type metadata accessor for WeatherConditionBackgroundModifier);
    sub_100021A14((uint64_t)v59, &qword_100C0A0A0);
  }
  else
  {
    sub_1000215BC((uint64_t)v73, type metadata accessor for WeatherConditionBackgroundModifier);
    v92 = v269;
    v93 = v59;
    v94 = v272;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v269, v93, v272);
    _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v94);
  }
  v95 = v268;
  sub_10000AB54(v273, (uint64_t)v70, type metadata accessor for WeatherConditionBackgroundModifier);
  v96 = v263;
  v97 = v260;
  if (v260)
  {
    v98 = *(float *)&v243;
    v99 = (uint64_t)v260;
  }
  else
  {
    v100 = *v70;
    if (!*v70)
    {
      v208 = v70[1];
      v209 = type metadata accessor for LocationViewCollisionOptions(0);
      sub_10000F1C8(&qword_100BCCB38, type metadata accessor for LocationViewCollisionOptions);
      result = EnvironmentObject.error()(0, v208, v209, v210);
      __break(1u);
      return result;
    }
    swift_retain();
    v101 = sub_10010E6C8();
    v98 = v102;
    v99 = v101;
    swift_release(v100);
    v95 = v268;
    v97 = v260;
  }
  swift_bridgeObjectRetain(v97);
  sub_1000215BC((uint64_t)v70, type metadata accessor for WeatherConditionBackgroundModifier);
  v103 = v266;
  sub_10002F620(v269, v270);
  sub_10002DB14(v273, v103, v99, v95, v98);
  v104 = swift_bridgeObjectRelease(v99);
  v105 = v271;
  v260 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v90 + 16);
  v260(v91, v103, v271, v104);
  _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v105);
  v106 = (void (*)(_QWORD, _QWORD))v264;
  v107 = (uint64_t)v264 + *(int *)(v249 + 48);
  v108 = &qword_100BC4678;
  sub_100037794(v258, (uint64_t)v264, &qword_100BC4678);
  sub_100037794(v91, v107, &qword_100BC4678);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v105) == 1)
  {
    sub_100021A14(v91, &qword_100BC4678);
    if (_s7Weather24LocationCompositionStateOwet_0(v107, 1, v271) == 1)
    {
      v109 = -1;
    }
    else
    {
      v108 = &qword_100C13F68;
      v109 = 0;
    }
  }
  else
  {
    v110 = v240;
    sub_100037794((uint64_t)v106, v240, &qword_100BC4678);
    if (_s7Weather24LocationCompositionStateOwet_0(v107, 1, v271) == 1)
    {
      sub_100021A14(v91, &qword_100BC4678);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v110, v271);
      v109 = 0;
      v108 = &qword_100C13F68;
    }
    else
    {
      v111 = v235;
      v112 = v271;
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v235, v107, v271);
      sub_10000F1C8((unint64_t *)&qword_100BC4698, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
      v109 = dispatch thunk of static Equatable.== infix(_:_:)(v110, v111, v112, v113);
      v114 = *(void (**)(char *, uint64_t))(v90 + 8);
      v114(v111, v112);
      v108 = &qword_100BC4678;
      sub_100021A14(v91, &qword_100BC4678);
      v114((char *)v110, v112);
      v95 = v268;
    }
  }
  v115 = (uint64_t)v253;
  sub_100021A14((uint64_t)v264, v108);
  sub_10000AB54(v273, v115, type metadata accessor for WeatherConditionBackgroundModifier);
  v116 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
  v117 = v259;
  v116(v259, v270, v272);
  v253 = v116;
  if ((v109 & 1) == 0)
  {
    v264 = *(char ***)(v89 + 8);
    ((void (*)(char *, uint64_t))v264)(v117, v272);
    sub_1000215BC(v115, type metadata accessor for WeatherConditionBackgroundModifier);
    v125 = v261;
    v128 = (uint64_t)v265;
    v127 = v257;
LABEL_26:
    sub_10000AB54(v273, v127, type metadata accessor for WeatherConditionBackgroundModifier);
    sub_100037794(v95, v96, &qword_100C13D20);
LABEL_27:
    sub_100021A14(v96, &qword_100C13D20);
    sub_1000215BC(v127, type metadata accessor for WeatherConditionBackgroundModifier);
    v132 = 1;
    v133 = v255;
    v134 = v254;
    v135 = v266;
    goto LABEL_28;
  }
  v118 = sub_1000BA294(&qword_100C13D40);
  v119 = v245;
  State.wrappedValue.getter(v245, v118);
  v120 = (uint64_t)v244;
  v121 = v272;
  v116(v244, (uint64_t)v117, v272);
  _s7Weather24LocationCompositionStateOwst_0(v120, 0, 1, v121);
  v122 = v248;
  v123 = v248 + *(int *)(v241 + 48);
  sub_100037794((uint64_t)v119, v248, &qword_100C0A0A0);
  sub_100037794(v120, v123, &qword_100C0A0A0);
  v124 = _s7Weather24LocationCompositionStateOwet_0(v122, 1, v121);
  v125 = v261;
  if (v124 == 1)
  {
    sub_100021A14(v120, &qword_100C0A0A0);
    sub_100021A14((uint64_t)v119, &qword_100C0A0A0);
    v126 = v272;
    v264 = *(char ***)(ObjectType + 8);
    ((void (*)(char *, uint64_t))v264)(v117, v272);
    sub_1000215BC(v115, type metadata accessor for WeatherConditionBackgroundModifier);
    if (_s7Weather24LocationCompositionStateOwet_0(v123, 1, v126) == 1)
    {
      sub_100021A14(v248, &qword_100C0A0A0);
      v127 = v257;
      sub_10000AB54(v273, v257, type metadata accessor for WeatherConditionBackgroundModifier);
      v96 = v263;
      sub_100037794(v95, v263, &qword_100C13D20);
      goto LABEL_40;
    }
    goto LABEL_25;
  }
  v129 = v236;
  sub_100037794(v122, v236, &qword_100C0A0A0);
  if (_s7Weather24LocationCompositionStateOwet_0(v123, 1, v272) == 1)
  {
    sub_100021A14((uint64_t)v244, &qword_100C0A0A0);
    sub_100021A14((uint64_t)v245, &qword_100C0A0A0);
    v130 = *(char ***)(ObjectType + 8);
    v131 = v272;
    ((void (*)(char *, uint64_t))v130)(v259, v272);
    sub_1000215BC(v115, type metadata accessor for WeatherConditionBackgroundModifier);
    v264 = v130;
    ((void (*)(uint64_t, uint64_t))v130)(v129, v131);
LABEL_25:
    v128 = (uint64_t)v265;
    v127 = v257;
    v96 = v263;
    sub_100021A14(v248, &qword_100C13F78);
    goto LABEL_26;
  }
  v187 = v115;
  v188 = ObjectType;
  v189 = v234;
  v190 = v123;
  v191 = v272;
  (*(void (**)(char *, uint64_t, uint64_t))(ObjectType + 32))(v234, v190, v272);
  sub_10000F1C8(&qword_100BC5BB0, (uint64_t (*)(uint64_t))&type metadata accessor for TargetWindowSizeClass);
  v193 = dispatch thunk of static Equatable.== infix(_:_:)(v129, v189, v191, v192);
  v194 = *(char ***)(v188 + 8);
  ((void (*)(char *, uint64_t))v194)(v189, v191);
  sub_100021A14((uint64_t)v244, &qword_100C0A0A0);
  sub_100021A14((uint64_t)v245, &qword_100C0A0A0);
  ((void (*)(char *, uint64_t))v194)(v259, v191);
  sub_1000215BC(v187, type metadata accessor for WeatherConditionBackgroundModifier);
  v264 = v194;
  ((void (*)(uint64_t, uint64_t))v194)(v129, v191);
  sub_100021A14(v122, &qword_100C0A0A0);
  v127 = v257;
  sub_10000AB54(v273, v257, type metadata accessor for WeatherConditionBackgroundModifier);
  v96 = v263;
  sub_100037794(v268, v263, &qword_100C13D20);
  v128 = (uint64_t)v265;
  if ((v193 & 1) == 0)
    goto LABEL_27;
LABEL_40:
  v195 = sub_1000BA294(&qword_100C13D48);
  v196 = v222;
  State.wrappedValue.getter(v222, v195);
  v197 = v224;
  v198 = v224 + *(int *)(v223 + 48);
  sub_100037794((uint64_t)v196, v224, &qword_100C13D20);
  sub_100037794(v96, v198, &qword_100C13D20);
  v199 = v225;
  if (_s7Weather24LocationCompositionStateOwet_0(v197, 1, v225) != 1)
  {
    v201 = v212;
    sub_100037794(v197, v212, &qword_100C13D20);
    v202 = _s7Weather24LocationCompositionStateOwet_0(v198, 1, v199);
    v135 = v266;
    if (v202 != 1)
    {
      v203 = v213;
      v204 = v211;
      (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v211, v198, v199);
      sub_10000F1C8(&qword_100C13F80, (uint64_t (*)(uint64_t))&type metadata accessor for CollisionViewMetrics);
      v206 = dispatch thunk of static Equatable.== infix(_:_:)(v201, v204, v199, v205);
      v207 = *(void (**)(char *, uint64_t))(v203 + 8);
      v207(v204, v199);
      sub_100021A14((uint64_t)v196, &qword_100C13D20);
      sub_100021A14(v263, &qword_100C13D20);
      sub_1000215BC(v257, type metadata accessor for WeatherConditionBackgroundModifier);
      v207((char *)v201, v199);
      sub_100021A14(v197, &qword_100C13D20);
      v132 = v206 ^ 1;
      v128 = (uint64_t)v265;
      goto LABEL_48;
    }
    sub_100021A14((uint64_t)v196, &qword_100C13D20);
    sub_100021A14(v263, &qword_100C13D20);
    sub_1000215BC(v257, type metadata accessor for WeatherConditionBackgroundModifier);
    (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v201, v199);
    v128 = (uint64_t)v265;
    goto LABEL_46;
  }
  sub_100021A14((uint64_t)v196, &qword_100C13D20);
  sub_100021A14(v96, &qword_100C13D20);
  sub_1000215BC(v127, type metadata accessor for WeatherConditionBackgroundModifier);
  v200 = _s7Weather24LocationCompositionStateOwet_0(v198, 1, v199);
  v128 = (uint64_t)v265;
  v135 = v266;
  if (v200 != 1)
  {
LABEL_46:
    sub_100021A14(v197, &qword_100C13F70);
    v132 = 1;
    goto LABEL_48;
  }
  sub_100021A14(v197, &qword_100C13D20);
  v132 = 0;
LABEL_48:
  v133 = v255;
  v134 = v254;
LABEL_28:
  v136 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 16);
  v136(v133, v128, v125);
  v137 = v256;
  sub_10000AB54(v273, v256, type metadata accessor for WeatherConditionBackgroundModifier);
  if ((v132 & 1) != 0)
  {
    sub_1000215BC(v137, type metadata accessor for WeatherConditionBackgroundModifier);
    v138 = *(void (**)(char *, uint64_t))(v134 + 8);
    v138(v133, v125);
  }
  else
  {
    v139 = v133;
    v140 = v242;
    sub_10010FD3C();
    sub_10000F1C8(&qword_100C0A550, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    v142 = dispatch thunk of static Equatable.== infix(_:_:)(v139, v140, v125, v141);
    v138 = *(void (**)(char *, uint64_t))(v134 + 8);
    v138(v140, v125);
    sub_1000215BC(v137, type metadata accessor for WeatherConditionBackgroundModifier);
    v138(v139, v125);
    if ((v142 & 1) != 0)
    {
LABEL_36:
      sub_100021A14(v268, &qword_100C13D20);
      ((void (*)(uint64_t, uint64_t))v264)(v270, v272);
      sub_100021A14(v269, &qword_100C0A0A0);
      v184 = (uint64_t)v265;
      v185 = v125;
      return ((uint64_t (*)(uint64_t, uint64_t))v138)(v184, v185);
    }
    v135 = v266;
  }
  v143 = (uint64_t)v246;
  v144 = v271;
  ((void (*)(char *, uint64_t, uint64_t))v260)(v246, v135, v271);
  _s7Weather24LocationCompositionStateOwst_0(v143, 0, 1, v144);
  v145 = v267;
  v146 = v247;
  sub_100037794(v143, v247, &qword_100BC4678);
  v147 = sub_1000BA294(&qword_100C13D38);
  State.wrappedValue.setter(v146, v147);
  sub_100021A14(v143, &qword_100BC4678);
  v148 = WeatherConditionBackgroundModel.canShowAnimatedBackground.getter();
  if ((v148 & 1) == 0)
    goto LABEL_36;
  v149 = v237;
  WeatherConditionBackgroundModel.animationKind.getter(v148);
  v150 = v238;
  v151 = v239;
  v152 = (*(uint64_t (**)(char *, uint64_t))(v238 + 88))(v149, v239);
  if ((_DWORD)v152 == enum case for BackgroundAnimationKind.vfx(_:))
  {
    v153 = v227;
    WeatherConditionBackgroundModel.animationData.getter(v152);
    v154 = v226;
    v155 = v228;
    if ((*(unsigned int (**)(char *, uint64_t))(v226 + 88))(v153, v228) == enum case for BackgroundAnimationData.loaded(_:))
    {
      (*(void (**)(char *, uint64_t))(v154 + 96))(v153, v155);
      v156 = v231;
      v157 = v230;
      v158 = v153;
      v159 = v232;
      (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v230, v158, v232);
      v160 = v233;
      sub_10014FA58(v258, v233);
      v161 = v145;
      v162 = (uint64_t *)(v273 + *(int *)(v145 + 44));
      v163 = v273;
      v164 = *v162;
      v165 = v162[1];
      v263 = v164;
      v271 = v165;
      ObjectType = swift_getObjectType(v164);
      v166 = *(_QWORD *)(v163 + *(int *)(v161 + 104) + 8);
      sub_100037794(v160, v229, &qword_100BD6160);
      v167 = v217;
      (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v217, v157, v159);
      v168 = v166;
      v169 = swift_retain();
      v170 = v219;
      WeatherConditionBackgroundModel.gradient.getter(v169);
      v171 = v242;
      v136(v242, (uint64_t)v265, v261);
      v172 = v234;
      v173 = v270;
      v174 = v253;
      v253(v234, v270, v272);
      v175 = v216;
      sub_100037794(v268, v216, &qword_100C13D20);
      v176 = v218;
      VFXLoadRequest.init(backgroundObserver:lastModel:model:gradient:dynamicTypeSize:targetWindowSizeClass:collisionViewMetrics:)(v168, v229, v167, v170, v171, v172, v175);
      dispatch thunk of WeatherConditionBackgroundManagerType.addLoadRequest(_:)(v176, ObjectType, v271);
      (*(void (**)(char *, uint64_t))(v220 + 8))(v176, v221);
      v177 = (uint64_t)v214;
      v178 = v173;
      v179 = v272;
      v174(v214, v173, v272);
      _s7Weather24LocationCompositionStateOwst_0(v177, 0, 1, v179);
      v180 = v215;
      sub_100037794(v177, v215, &qword_100C0A0A0);
      v181 = sub_1000BA294(&qword_100C13D40);
      State.wrappedValue.setter(v180, v181);
      sub_100021A14(v177, &qword_100C0A0A0);
      v182 = v268;
      sub_100037794(v268, v175, &qword_100C13D20);
      v183 = sub_1000BA294(&qword_100C13D48);
      State.wrappedValue.setter(v175, v183);
      sub_100021A14(v233, &qword_100BD6160);
      (*(void (**)(char *, uint64_t))(v231 + 8))(v230, v232);
      sub_100021A14(v182, &qword_100C13D20);
      ((void (*)(uint64_t, uint64_t))v264)(v178, v179);
      sub_100021A14(v269, &qword_100C0A0A0);
      v184 = (uint64_t)v265;
      v185 = v261;
      return ((uint64_t (*)(uint64_t, uint64_t))v138)(v184, v185);
    }
    sub_100021A14(v268, &qword_100C13D20);
    ((void (*)(uint64_t, uint64_t))v264)(v270, v272);
    sub_100021A14(v269, &qword_100C0A0A0);
    v138(v265, v261);
    return (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v153, v155);
  }
  else
  {
    sub_100021A14(v268, &qword_100C13D20);
    ((void (*)(uint64_t, uint64_t))v264)(v270, v272);
    sub_100021A14(v269, &qword_100C0A0A0);
    v138(v265, v261);
    return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v149, v151);
  }
}

uint64_t sub_100060AB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Location.Identifier(0);
  result = _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

unint64_t sub_100060B0C()
{
  unint64_t result;

  result = qword_100C11080;
  if (!qword_100C11080)
  {
    result = swift_getWitnessTable(&unk_1009D5D38, &type metadata for DefaultButtonStyleModifier);
    atomic_store(result, (unint64_t *)&qword_100C11080);
  }
  return result;
}

void sub_100060B48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  ValueMetadata *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  ValueMetadata *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;

  v102 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(ValueMetadata **)(a1 + 24);
  v98 = a1;
  v4 = type metadata accessor for Button(255, v2);
  v5 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for Button<A>);
  v133 = v4;
  v134 = (ValueMetadata *)v5;
  v6 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v133 = v4;
  v134 = (ValueMetadata *)v5;
  v7 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v133 = v6;
  v134 = (ValueMetadata *)v7;
  v8 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v9 = sub_1000C1190(v8, v8, (uint64_t)&type metadata for WeatherComponentButtonAccessibilityLabelModifier);
  v133 = v6;
  v134 = (ValueMetadata *)v7;
  v10 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v11 = sub_1008C64E8();
  v137 = v10;
  v138 = v11;
  v12 = sub_10007A030((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v13 = sub_10012B348();
  v133 = v9;
  v134 = &type metadata for DefaultBackgroundButtonStyle;
  v135 = v12;
  v136 = v13;
  v103 = v13;
  v14 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v15 = sub_10012FB00();
  v133 = v9;
  v134 = &type metadata for FixedBackgroundButtonStyle;
  v135 = v12;
  v136 = v15;
  v110 = v15;
  v16 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v17 = type metadata accessor for PlainButtonStyle(255);
  sub_10000F1C8((unint64_t *)&qword_100BD0908, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  v133 = v9;
  v134 = (ValueMetadata *)v17;
  v109 = v17;
  v135 = v12;
  v136 = v18;
  v108 = v18;
  v19 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v107 = type metadata accessor for _ConditionalContent(255, v16, v19);
  v20 = type metadata accessor for _ConditionalContent(0, v14, v107);
  sub_1000BBFEC(*(_QWORD *)(v20 - 8));
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_100079F7C();
  sub_10009511C(v23);
  v133 = v2;
  v134 = v3;
  v24 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v25 = type metadata accessor for ModifiedContent(255, v24, &type metadata for WeatherComponentButtonAccessibilityLabelModifier);
  v133 = v2;
  v134 = v3;
  v131 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v132 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v133 = v25;
  v134 = (ValueMetadata *)WitnessTable;
  v27 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>);
  v133 = v25;
  v134 = (ValueMetadata *)WitnessTable;
  v28 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>);
  v105 = v27;
  v133 = v27;
  v134 = (ValueMetadata *)v28;
  v104 = v28;
  v29 = sub_1000BC7B4(255, (uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v30 = type metadata accessor for ModifiedContent(0, v29, &type metadata for DefaultButtonStyleModifier);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  sub_10009883C();
  v34 = v32 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v94 - v36;
  v101 = v20;
  v100 = type metadata accessor for _ConditionalContent(0, v30, v20);
  sub_1000BA8CC(*(_QWORD *)(v100 - 8));
  __chkstk_darwin(v38);
  sub_10009511C((uint64_t)&v94 - v39);
  v40 = *(_QWORD *)v97;
  LOBYTE(v20) = *(_BYTE *)(v97 + 8);
  sub_10008D47C(*(_QWORD *)v97, v20);
  sub_100109B54();
  LOBYTE(v2) = v41;
  sub_1000B15F8(v40, v20);
  if ((v2 & 1) != 0)
  {
    v42 = sub_1000DABB8();
    sub_1008C59A8(v42, v43);
    sub_1000C4220();
    v44 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
    v45 = sub_100060B0C();
    v115 = v44;
    v116 = v45;
    v46 = sub_1000DAAB8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    sub_1000B2074(v34, v30, v46);
    v47 = *(void (**)(char *, uint64_t))(v31 + 8);
    sub_1000C68F0();
    sub_10009D900((uint64_t)v37, v30, v34);
    v133 = v9;
    v134 = &type metadata for DefaultBackgroundButtonStyle;
    v48 = v103;
    v135 = v12;
    v136 = v103;
    v49 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v50 = sub_1000DD574((uint64_t)&type metadata for FixedBackgroundButtonStyle);
    v51 = sub_10009885C(v50, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    sub_1000C333C();
    v52 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v113 = v51;
    v114 = v52;
    v53 = sub_1000DFA78((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v111 = v49;
    v112 = v53;
    sub_1000D2104((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v54 = sub_1000BD7DC();
    sub_1001589C0(v54, v55, v56, v46, v57, v58, v59, v60, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
    sub_1000C68F0();
    v47(v37, v30);
  }
  else
  {
    v61 = v96;
    v62 = sub_1000DABB8();
    sub_100064A68(v62, v63);
    v133 = v9;
    v134 = &type metadata for DefaultBackgroundButtonStyle;
    v135 = v12;
    v136 = v103;
    v64 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v65 = sub_1000DD574((uint64_t)&type metadata for FixedBackgroundButtonStyle);
    v66 = sub_10009885C(v65, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    sub_1000C333C();
    v67 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v129 = v66;
    v130 = v67;
    v68 = sub_1000DFA78((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v127 = v64;
    v128 = v68;
    v69 = v101;
    v70 = sub_1000D2104((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v71 = v95;
    sub_100099D30(v61);
    v72 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
    sub_1000DB1B0();
    sub_1000C207C(v71, v61);
    sub_1000C4220();
    v73 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
    v74 = sub_100060B0C();
    v125 = v73;
    v126 = v74;
    sub_1000DAAB8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    v75 = sub_1000BD7DC();
    sub_1000B20B0(v75, v76, v77, v78, v70, v79, v80, v81, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
    sub_1000DB1B0();
    v82 = v71;
    v48 = v103;
    v72(v82, v69);
  }
  sub_1000C4220();
  v83 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v84 = sub_100060B0C();
  v123 = v83;
  v124 = v84;
  v85 = sub_1000DAAB8((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v133 = v9;
  v134 = &type metadata for DefaultBackgroundButtonStyle;
  v135 = v12;
  v136 = v48;
  v86 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v87 = sub_1000DD574((uint64_t)&type metadata for FixedBackgroundButtonStyle);
  v88 = sub_10009885C(v87, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  sub_1000C333C();
  v89 = sub_10009885C((uint64_t)&v133, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v121 = v88;
  v122 = v89;
  v90 = sub_1000DFA78((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v119 = v86;
  v120 = v90;
  v91 = sub_1000D2104((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v117 = v85;
  v118 = v91;
  v92 = v100;
  sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v93 = v106;
  sub_1000B1100(v106, v92, v102);
  sub_100098820(v93, *(uint64_t (**)(uint64_t, uint64_t))(v99 + 8));
  sub_100098640();
}

uint64_t sub_100061264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;

  v31 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(a1);
  v6 = *(_QWORD *)(v5 + 24);
  v34 = *(_QWORD *)(v5 + 16);
  v35 = &type metadata for Bool;
  v7 = v34;
  v29 = v34;
  v36 = v6;
  v37 = &protocol witness table for Bool;
  v8 = v6;
  v28 = v6;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v34, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v10 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for _AppearanceActionModifier);
  v34 = v7;
  v35 = &type metadata for Bool;
  v36 = v8;
  v37 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v34, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v33 = &protocol witness table for _AppearanceActionModifier;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v12 = type metadata accessor for ScrollEventStateReader(0, v10, WitnessTable);
  v27 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v26 - v16;
  v18 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v18, v30, a1);
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(&unk_100B6AB00, v20 + v4, v19 | 7);
  v22 = v28;
  *(_QWORD *)(v21 + 16) = v29;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v18, a1);
  ScrollEventStateReader.init(content:)(sub_100104048, v21, v10, WitnessTable);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for ScrollEventStateReader<A>, v12);
  sub_1000B2074(v15, v12, v23);
  v24 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24(v15, v12);
  sub_1000B1100((uint64_t)v17, v12, v31);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v12);
}

uint64_t sub_1000614AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10008900C();
  sub_1000992C4();
  sub_1000DC550();
  sub_10009C0B4();
  sub_1000FCC38();
  sub_1000C4F28();
  sub_1000BA548(v0 + v1);
  v2 = sub_1000BD3C8();
  return sub_1000B4380(v2, v3, v4);
}

_QWORD *initializeBufferWithCopyOfBuffer for ExternalSearchQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_100061518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = a2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v14 = (v12 + 32 + v8) & ~v12;
  (*(void (**)(unint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (uint64_t *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (uint64_t *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v16;
  v19 = *v17;
  *v16 = *v17;
  swift_retain(v19);
  swift_release(v18);
  v20 = v16[1];
  v21 = v17[1];
  v16[1] = v21;
  swift_retain(v21);
  swift_release(v20);
  return a1;
}

void sub_100061610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v12 = type metadata accessor for Font.Leading(0);
  __chkstk_darwin(v12);
  sub_100088FDC();
  type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v10 = type metadata accessor for LayoutDirection(0);
  __chkstk_darwin(v10);
  sub_100098728();
  v5 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v5);
  sub_100098728();
  v11 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio(0);
  __chkstk_darwin(v11);
  v6 = sub_10008909C();
  v7 = type metadata accessor for LocationComponentHeaderViewModel(v6);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000BCED8();
  sub_100091B54(a1, v1);
  v9 = (char *)sub_1000617C0 + 4 * byte_1009DB258[swift_getEnumCaseMultiPayload(v1, v7)];
  __asm { BR              X10 }
}

void sub_1000617C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;

  v3 = v0[1];
  v4 = v0[6];
  *(_QWORD *)(v2 - 224) = *v0;
  *(_QWORD *)(v2 - 216) = v3;
  v5 = sub_100114EF8();
  swift_bridgeObjectRetain(v3);
  v6 = Text.init<A>(_:)(v2 - 224, &type metadata for String, v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_10009934C();
  swift_bridgeObjectRelease(v3);
  v14 = swift_bridgeObjectRelease(v4);
  if ((*(_DWORD *)(v2 - 284) & 1) != 0)
    v15 = ((uint64_t (*)(__n128))static Font.caption.getter)(v14);
  else
    v15 = static Font.footnote.getter(v13);
  v16 = v15;
  static Font.Weight.medium.getter(v15);
  v17 = Font.weight(_:)(v16);
  sub_1000C1354();
  v18 = v10 & 1;
  v19 = Text.font(_:)(v17, v6, v8, v18, v12);
  v21 = v20;
  LOBYTE(v16) = v22;
  v23 = v12;
  v25 = v24;
  swift_release(v17);
  sub_1000D31B4(v6, v8, v18);
  v26 = swift_bridgeObjectRelease(v23);
  static TypesettingLanguageAwareLineHeightRatio.disable.getter(v26);
  Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)(v1, 1, v19, v21, v16 & 1, v25);
  v27 = sub_1000C647C();
  sub_1000D31B4(v27, v21, v16 & 1);
  v28 = swift_bridgeObjectRelease(v25);
  (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v2 - 328) + 8))(v1, *(_QWORD *)(v2 - 320), v28);
  sub_100098640();
}

void sub_100061CF8()
{
  sub_100818D60();
}

uint64_t sub_100061D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v57 = v7;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v56 = v9;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100098728();
  v17 = v16 - v15;
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100098728();
  v21 = v20 - v19;
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  v25 = v24 - v23;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100098728();
  v29 = v28 - v27;
  v30 = type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100098728();
  v34 = v33 - v32;
  sub_1001182B0(a3, v55, a1, v33 - v32);
  sub_100117558(a2, a3, a1, v34, v29);
  v35 = type metadata accessor for AppConfigurationState(0);
  v38 = sub_1000BA2E8(v25, v36, v37, v35);
  v39 = type metadata accessor for EnvironmentState(v38);
  sub_10009D34C(v21, v40, v41, v39);
  sub_100080C0C(v34, v17, type metadata accessor for LocationsState);
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v30);
  v42 = type metadata accessor for NotificationsOptInState(0);
  v45 = sub_1000BA2E8(v13, v43, v44, v42);
  v46 = type metadata accessor for TimeState(v45);
  v49 = sub_1000BA2E8(v56, v47, v48, v46);
  v50 = type metadata accessor for ModalViewState(v49);
  sub_10009D34C(v57, v51, v52, v50);
  v53 = sub_1000DEBAC(0, 3, v25, v21, v17, 0, 0, 0, v13, v56, v29, v57, 0, 0, 0, 0, 0, 0, 0, a2);
  sub_100021A14(v57, &qword_100BC5F60);
  sub_100021A14(v56, &qword_100BC5F90);
  sub_100021A14(v13, &qword_100BC5F98);
  sub_100021A14(v17, &qword_100BC5FA0);
  sub_100021A14(v21, &qword_100BC5FA8);
  sub_100021A14(v25, &qword_100BC5FB0);
  sub_100021A14(v29, &qword_100BC5F88);
  sub_1000215BC(v34, type metadata accessor for LocationsState);
  return v53;
}

#error "100062040: call analysis failed (funcsize=60)"

_QWORD *sub_10006210C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v18;
  _QWORD *v19;

  v0 = type metadata accessor for MeasuredLocationViewerView.LocationTabPageModel(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocationViewerViewModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1000BF64C();
  v7 = *(_QWORD *)&v6[*(int *)(v4 + 20)];
  swift_bridgeObjectRetain(v7);
  sub_1000BF3B4();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_10011EC6C();
    v9 = v19;
    v10 = type metadata accessor for LocationModel(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v18 = v7;
    v13 = v7 + ((v12 + 32) & ~v12);
    v14 = *(_QWORD *)(v11 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v15(v3, v13, v10);
      v19 = v9;
      v16 = v9[2];
      if (v16 >= v9[3] >> 1)
      {
        sub_10011EC6C();
        v9 = v19;
      }
      v9[2] = v16 + 1;
      sub_10007802C((uint64_t)v3, (uint64_t)v9+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v16, type metadata accessor for MeasuredLocationViewerView.LocationTabPageModel);
      v13 += v14;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

uint64_t sub_1000622F0(uint64_t a1)
{
  uint64_t v1;

  return sub_10006230C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10006230C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  char v19;
  char *v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;

  v4 = type metadata accessor for Location.Identifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BCD780);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BCD680);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v24 - v14, a1, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v4);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100037794((uint64_t)v15, (uint64_t)v9, &qword_100BCD680);
  sub_100037794(a2, v16, &qword_100BCD680);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v4) == 1)
  {
    sub_100021A14((uint64_t)v15, &qword_100BCD680);
    v17 = _s7Weather24LocationCompositionStateOwet_0(v16, 1, v4);
    if (v17 == 1)
      v18 = &qword_100BCD680;
    else
      v18 = &qword_100BCD780;
    if (v17 == 1)
      v19 = -1;
    else
      v19 = 0;
  }
  else
  {
    sub_100037794((uint64_t)v9, (uint64_t)v13, &qword_100BCD680);
    if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v4) == 1)
    {
      sub_100021A14((uint64_t)v15, &qword_100BCD680);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v19 = 0;
      v18 = &qword_100BCD780;
    }
    else
    {
      v20 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v25, v16, v4);
      v21 = sub_100062598();
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v20, v4, v21);
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v20, v4);
      v18 = &qword_100BCD680;
      sub_100021A14((uint64_t)v15, &qword_100BCD680);
      v22(v13, v4);
    }
  }
  sub_100021A14((uint64_t)v9, v18);
  return v19 & 1;
}

unint64_t sub_100062598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC3640;
  if (!qword_100BC3640)
  {
    v1 = type metadata accessor for Location.Identifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Location.Identifier, v1);
    atomic_store(result, (unint64_t *)&qword_100BC3640);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LocationViewCollisionOptions.PublishedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

void sub_10006260C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t (*v87)(_QWORD);
  char *v88;
  _QWORD v89[13];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v112 = a2;
  v110 = a1;
  sub_1000BA294(&qword_100BC5F40);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v6 = sub_1000987B4(v5);
  v93 = type metadata accessor for WeatherMapOverlayKind(v6);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  sub_100088FDC();
  v8 = sub_1000987B4(v7);
  v90 = type metadata accessor for Location(v8);
  v89[5] = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v9);
  sub_100079F7C();
  v11 = sub_1000987B4(v10);
  v89[6] = type metadata accessor for LocationViewerActiveLocationState(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v13);
  sub_100079F7C();
  v15 = sub_1000987B4(v14);
  v91 = type metadata accessor for InteractiveMapViewAction(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v17);
  sub_1000BA30C();
  __chkstk_darwin(v18);
  sub_100079F7C();
  v20 = sub_1000987B4(v19);
  v103 = type metadata accessor for ModalViewState(v20);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v22);
  sub_1000BA30C();
  __chkstk_darwin(v23);
  sub_100079F7C();
  sub_10009511C(v24);
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v100 = v26;
  sub_1000BA294(&qword_100BC6000);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  sub_10009511C(v28);
  sub_1000BA294(qword_100BC6008);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v31 = sub_1000987B4(v30);
  v101 = type metadata accessor for WeatherMapPresentationState(v31);
  sub_1000B42B0();
  __chkstk_darwin(v32);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v33);
  sub_100079F7C();
  sub_10009511C(v34);
  sub_1000BA294(&qword_100BC5F68);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_100088FDC();
  v96 = v36;
  sub_1000BA294(&qword_100BC5F70);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100088FDC();
  v97 = v38;
  sub_1000BA294(&qword_100BC5F80);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_100088FDC();
  v98 = v40;
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v41);
  sub_100088FDC();
  v99 = v42;
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_100088FDC();
  v104 = v44;
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v45);
  sub_100088FDC();
  v105 = v46;
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_100088FDC();
  v106 = v48;
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v49);
  sub_100088FDC();
  v107 = v50;
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_100088FDC();
  v109 = v52;
  v94 = type metadata accessor for DisplayMetrics(0);
  sub_1000B42B0();
  __chkstk_darwin(v53);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v54);
  sub_100079F7C();
  v56 = sub_1000987B4(v55);
  type metadata accessor for DisplayMetricsChangeAction(v56);
  sub_1000B42B0();
  __chkstk_darwin(v57);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v58);
  sub_100079F7C();
  sub_10009511C(v59);
  sub_1000BA294(&qword_100BC5F78);
  sub_1000B42B0();
  __chkstk_darwin(v60);
  sub_1000986FC();
  v95 = v61;
  __chkstk_darwin(v62);
  sub_100079F7C();
  v64 = sub_1000987B4(v63);
  v102 = type metadata accessor for SearchViewState(v64);
  sub_1000B42B0();
  __chkstk_darwin(v65);
  sub_100088FDC();
  v67 = sub_1000987B4(v66);
  type metadata accessor for SearchViewAction(v67);
  sub_1000B42B0();
  __chkstk_darwin(v68);
  sub_100088FDC();
  v70 = sub_1000987B4(v69);
  v111 = type metadata accessor for ViewState(v70);
  sub_1000B42B0();
  __chkstk_darwin(v71);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v72);
  sub_1000BA30C();
  __chkstk_darwin(v73);
  sub_100079F7C();
  sub_10009511C(v74);
  sub_1000BA294(&qword_100BE0DD8);
  sub_1000B42B0();
  __chkstk_darwin(v75);
  v108 = type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v76);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v77);
  __chkstk_darwin(v78);
  v89[9] = type metadata accessor for LocationViewerViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v79);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v80);
  type metadata accessor for ListViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v81);
  type metadata accessor for ViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v82);
  __chkstk_darwin(v83);
  __chkstk_darwin(v84);
  v86 = (char *)v89 - v85;
  sub_100080C0C(a3, (uint64_t)v89 - v85, v87);
  v88 = (char *)&loc_100062CE8 + *((int *)qword_10048B680 + swift_getEnumCaseMultiPayload(v86));
  __asm { BR              X10 }
}

uint64_t sub_100062CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10007802C(v0, v1, type metadata accessor for ListViewAction);
  v3 = sub_10076B450();
  if (v3)
  {
    v4 = v3;
    sub_1000DB418((_QWORD *)(*(_QWORD *)(v2 - 296) + 16), *(_QWORD *)(*(_QWORD *)(v2 - 296) + 40));
    sub_1008570F0(v4, *(_QWORD *)(v2 - 112), v1);
    v6 = v5;
    sub_10009925C();
    sub_1000215BC(v1, type metadata accessor for ListViewAction);
  }
  else
  {
    sub_1000215BC(v1, type metadata accessor for ListViewAction);
    v6 = *(_QWORD *)(v2 - 112);
    swift_retain();
  }
  return v6;
}

void sub_100064A68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t WitnessTable;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  ValueMetadata *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  ValueMetadata *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  ValueMetadata *v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;

  v127 = a2;
  v3 = type metadata accessor for PlainButtonStyle(0);
  sub_1000BBFEC(*(_QWORD *)(v3 - 8));
  __chkstk_darwin(v4);
  sub_10009511C((uint64_t)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  v120 = a1;
  v7 = type metadata accessor for Button(255, v6);
  v8 = sub_10007A030((uint64_t)&protocol conformance descriptor for Button<A>);
  v140 = v7;
  v141 = (ValueMetadata *)v8;
  v9 = sub_1000BC7B4(255, (uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v140 = v7;
  v141 = (ValueMetadata *)v8;
  v10 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>);
  v140 = v9;
  v141 = (ValueMetadata *)v10;
  v11 = sub_1000BC7B4(255, (uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v12 = sub_1000C1190(v11, v11, (uint64_t)&type metadata for WeatherComponentButtonAccessibilityLabelModifier);
  v140 = v9;
  v141 = (ValueMetadata *)v10;
  v13 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>);
  v14 = sub_1008C64E8();
  v144 = v13;
  v145 = v14;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  sub_10000F1C8((unint64_t *)&qword_100BD0908, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  v140 = v12;
  v141 = (ValueMetadata *)v3;
  v130 = v16;
  v131 = (ValueMetadata *)v3;
  v142 = (char *)WitnessTable;
  v143 = v16;
  v17 = sub_1000BC7B4(0, (uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  sub_1000BBFEC(*(_QWORD *)(v17 - 8));
  __chkstk_darwin(v18);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v19);
  sub_100079F7C();
  sub_10009511C(v20);
  v21 = sub_10012FB00();
  v140 = v12;
  v141 = &type metadata for FixedBackgroundButtonStyle;
  v142 = (char *)WitnessTable;
  v143 = v21;
  v129 = v21;
  v22 = sub_1000BC7B4(0, (uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  sub_1000BBFEC(*(_QWORD *)(v22 - 8));
  __chkstk_darwin(v23);
  sub_10009883C();
  v26 = v24 - v25;
  __chkstk_darwin(v27);
  sub_100079F7C();
  v29 = v28;
  v116 = v30;
  v115 = v17;
  v31 = type metadata accessor for _ConditionalContent(0, v30, v17);
  sub_1000BBFEC(*(_QWORD *)(v31 - 8));
  __chkstk_darwin(v32);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v33);
  sub_100079F7C();
  sub_10009511C(v34);
  v35 = swift_checkMetadataState(0, v12);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v107 - v37;
  v39 = sub_10012B348();
  v140 = v35;
  v141 = &type metadata for DefaultBackgroundButtonStyle;
  v122 = WitnessTable;
  v142 = (char *)WitnessTable;
  v143 = v39;
  v128 = v39;
  v40 = sub_1000BC7B4(0, (uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v41 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_10009883C();
  v44 = v42 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v107 - v46;
  v126 = v31;
  v125 = type metadata accessor for _ConditionalContent(0, v40, v31);
  sub_1000BA8CC(*(_QWORD *)(v125 - 8));
  __chkstk_darwin(v48);
  sub_10009511C((uint64_t)&v107 - v49);
  if (qword_100BC22E8 != -1)
    swift_once(&qword_100BC22E8, sub_10015A4B4);
  if (byte_100CAEE88 == 1)
  {
    sub_100078800(v120, (uint64_t)v38);
    sub_100099138();
    v121 = v41;
    v50 = v128;
    View.buttonStyle<A>(_:)();
    sub_1000D9A78(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    v140 = v35;
    v141 = &type metadata for DefaultBackgroundButtonStyle;
    v142 = v47;
    v143 = v50;
    v51 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v108 = v47;
    sub_100099D30(v44);
    sub_1000C63A4(v44);
    sub_1000C207C((uint64_t)v47, v44);
    v140 = v35;
    v141 = &type metadata for FixedBackgroundButtonStyle;
    v52 = v129;
    v142 = v47;
    v143 = v129;
    v53 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    sub_1000DBF4C();
    v54 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v132 = v53;
    v133 = v54;
    v55 = v126;
    v56 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v126);
    v57 = v123;
    sub_1001589C0(v44, v40, v55, v51, v56, v58, v59, v60, v107, (uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v116);
    v61 = v44;
    v62 = v128;
    sub_1000C63A4(v61);
    sub_1000C63A4((uint64_t)v108);
  }
  else
  {
    v108 = (char *)v40;
    v63 = *(unsigned __int8 *)(v121 + 9);
    v64 = sub_100078800(v120, (uint64_t)v38);
    if (v63 == 1)
    {
      sub_100099138();
      v65 = v129;
      View.buttonStyle<A>(_:)();
      sub_1000D9A78(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
      v140 = v35;
      v141 = &type metadata for FixedBackgroundButtonStyle;
      v142 = v47;
      v143 = v65;
      v66 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
      v67 = v116;
      sub_1000B2074(v26, v116, v66);
      sub_1000C63A4(v26);
      sub_10009D900(v29, v67, v26);
      sub_1000DBF4C();
      v68 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
      v69 = v117;
      sub_1001589C0(v26, v67, v115, v66, v68, v70, v71, v72, v107, (uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v116);
      sub_1000C63A4(v26);
      sub_1000C63A4(v29);
      v73 = v47;
    }
    else
    {
      v74 = v113;
      PlainButtonStyle.init()(v64);
      v75 = v110;
      v77 = v130;
      v76 = v131;
      sub_100099138();
      View.buttonStyle<A>(_:)(v78, v79, v80, v81, v77);
      sub_100098820(v74, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8));
      v82 = v77;
      v73 = v47;
      sub_1000D9A78(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
      v140 = v35;
      v141 = v76;
      v142 = v47;
      v143 = v82;
      v83 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
      v84 = v112;
      v85 = v115;
      sub_1000B2074(v75, v115, v83);
      v86 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
      sub_1000D0EF0();
      sub_1000B1100(v84, v85, v75);
      v140 = v35;
      v141 = &type metadata for FixedBackgroundButtonStyle;
      v142 = v47;
      v143 = v129;
      v87 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
      v69 = v117;
      sub_1000B20B0(v75, v116, v85, v87, v83, v88, v89, v90, v107, (uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v116);
      sub_1000D0EF0();
      v86(v84, v85);
    }
    v57 = v123;
    v140 = v35;
    v141 = &type metadata for FixedBackgroundButtonStyle;
    v62 = v128;
    v142 = v73;
    v143 = v129;
    v91 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v140 = v35;
    v141 = v131;
    v142 = v73;
    v143 = v130;
    v92 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    v138 = v91;
    v139 = v92;
    v47 = v73;
    v93 = v126;
    v94 = sub_10007A030((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    v95 = v118;
    sub_10009D900(v69, v93, v118);
    v140 = v35;
    v141 = &type metadata for DefaultBackgroundButtonStyle;
    v142 = v47;
    v143 = v62;
    v96 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
    sub_1000B20B0(v95, (uint64_t)v108, v93, v96, v94, v97, v98, v99, v107, (uint64_t)v108, v109, v110, v111, v112, v113, v114, v115, v116);
    v100 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
    v100(v95, v93);
    v101 = v69;
    v52 = v129;
    v100(v101, v93);
  }
  v140 = v35;
  v141 = &type metadata for DefaultBackgroundButtonStyle;
  v142 = v47;
  v143 = v62;
  v102 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v140 = v35;
  v141 = &type metadata for FixedBackgroundButtonStyle;
  v142 = v47;
  v143 = v52;
  v103 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  sub_1000DBF4C();
  v104 = sub_10009885C((uint64_t)&v140, (uint64_t)&opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>);
  v136 = v103;
  v137 = v104;
  v105 = sub_10007A030((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v134 = v102;
  v135 = v105;
  v106 = v125;
  sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  sub_1000B1100(v57, v106, v127);
  sub_100098820(v57, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
  sub_100098640();
}

uint64_t sub_10006531C(uint64_t a1)
{
  uint64_t v1;

  return sub_100065338(a1, v1, 0);
}

uint64_t sub_100065338(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t result;
  _BYTE v6[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    *(_BYTE *)(result + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_resetAccumulator) = a3;
    return swift_release(result);
  }
  return result;
}

uint64_t sub_100065390()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  sub_100099CE8();
  swift_release(v0[7]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 8);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1000653C8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1000653E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1000653E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[3];
  v6 = a1[4];
  sub_1000DB418(a1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a2, a3, v5, v6);
}

void sub_10006544C()
{
  sub_10006546C();
}

void sub_10006546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1000986AC();
  v30 = v3;
  v31 = v4;
  v27 = v5;
  v28 = v6;
  v29 = v7;
  sub_1000BA294(&qword_100BE4BF0);
  sub_1000B42B0();
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v26 - v12;
  v14 = sub_1000C591C();
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_100098694();
  v16 = sub_1000D14DC();
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_10009E540();
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity);
  if (v18
    && (v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8)) != 0
    && ((v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId), v20 == v27)
      ? (v21 = v19 == v28)
      : (v21 = 0),
        v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v20, v19, 0) & 1) != 0))
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v2, enum case for WeatherNetworkActivity.Domain.weather(_:), v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v1, v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_weatherLabel, v14);
    sub_1000D91D0();
    sub_1000BA9D4((uint64_t)v13, 1);
    v22 = swift_retain();
    ((void (*)(__n128))NWActivity.token.getter)(v22);
    sub_1000BA9D4((uint64_t)v11, 0);
    v23 = v29;
    ((void (*)(uint64_t, uint64_t, char *, char *))WeatherNetworkActivity.init(domain:label:token:parentToken:))(v2, v1, v13, v11);
    swift_release(v18);
    v24 = sub_1000E74F4();
    _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v24);
    sub_100098640();
  }
  else
  {
    v25 = sub_1000E74F4();
    _s7Weather24LocationCompositionStateOwst_0(v29, 1, 1, v25);
  }
}

uint64_t sub_100065654(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  sub_1000B15F8(*(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  sub_1000B15F8(*(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  sub_1000B15F8(*(_QWORD *)(a1 + 144), *(_BYTE *)(a1 + 152));
  v4 = (_QWORD *)(a1 + a2[8]);
  v5 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  sub_1000B15F8(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  v7 = a1 + a2[10];
  v8 = sub_1000BA294(&qword_100BDD668);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_100065750(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v11 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v12;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  v15 = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  sub_10008D47C(v14, v15);
  *(_QWORD *)(a1 + 112) = v14;
  *(_BYTE *)(a1 + 120) = v15;
  v16 = *(_QWORD *)(a2 + 128);
  LOBYTE(v11) = *(_BYTE *)(a2 + 136);
  sub_10008D47C(v16, v11);
  *(_QWORD *)(a1 + 128) = v16;
  *(_BYTE *)(a1 + 136) = v11;
  v17 = *(_QWORD *)(a2 + 144);
  LOBYTE(v11) = *(_BYTE *)(a2 + 152);
  sub_10008D47C(v17, v11);
  *(_QWORD *)(a1 + 144) = v17;
  *(_BYTE *)(a1 + 152) = v11;
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
  {
    v22 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
    v23 = 1;
  }
  else
  {
    *v19 = *v20;
    swift_retain();
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v19, v21, v23);
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  sub_10008D47C(*(_QWORD *)v26, v28);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v28;
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_1000BA294(&qword_100BDD668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

void sub_100065920(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t OpaqueTypeConformance2;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (**v146)();
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (**v160)();
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __int128 v229[2];
  _QWORD v230[2];
  uint64_t v231;
  _QWORD v232[17];
  char v233;
  __int128 v234[12];
  char v235;
  _OWORD v236[14];

  v2 = (uint64_t)v1;
  v223 = a1;
  v221 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v222 = v4;
  v220 = sub_1000BA294((uint64_t *)&unk_100C09DB0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_1000986FC();
  v219 = v6;
  __chkstk_darwin(v7);
  v218 = (uint64_t)&v170 - v8;
  v9 = sub_10009876C();
  type metadata accessor for WeatherMapStatusBarColorSceneModifier(v9);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v217 = v11;
  v213 = sub_1000BA294(&qword_100C04B78);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v214 = v13;
  v14 = sub_10009876C();
  v15 = type metadata accessor for MainView(v14);
  v224 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v225 = v16;
  v215 = (uint64_t)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10009876C();
  v212 = type metadata accessor for ContentSizeCategory(v17);
  v208 = *(_QWORD *)(v212 - 8);
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v207 = v19;
  v20 = sub_10009876C();
  v199 = type metadata accessor for MainViewScenePhaseObservationViewModifier(v20);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100088FDC();
  v202 = v22;
  v23 = sub_10009876C();
  v24 = type metadata accessor for VibrantDividerStyle(v23);
  v188 = *(_QWORD *)(v24 - 8);
  v189 = v24;
  sub_10009D98C();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v187 = v26;
  v27 = sub_10009876C();
  v28 = type metadata accessor for UserInterfaceSizeClass(v27);
  v174 = *(_QWORD *)(v28 - 8);
  sub_10009D98C();
  __chkstk_darwin(v29);
  sub_100088FDC();
  v170 = v30;
  v175 = sub_1000BA294(&qword_100BC5E60);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_100098728();
  v34 = v33 - v32;
  sub_1000BA294(&qword_100BC5A68);
  sub_1000B42B0();
  __chkstk_darwin(v35);
  sub_1000986FC();
  v216 = v36;
  v38 = __chkstk_darwin(v37);
  v171 = (uint64_t)&v170 - v39;
  v40 = __chkstk_darwin(v38);
  v42 = (char *)&v170 - v41;
  __chkstk_darwin(v40);
  v173 = (char *)&v170 - v43;
  v176 = sub_1000BA294(&qword_100C09DC0);
  sub_1000B42B0();
  __chkstk_darwin(v44);
  sub_100088FDC();
  v177 = v45;
  v185 = sub_1000BA294(&qword_100C09DC8);
  v183 = *(_QWORD *)(v185 - 8);
  sub_10009D98C();
  __chkstk_darwin(v46);
  sub_100088FDC();
  v181 = v47;
  v178 = sub_1000BA294(&qword_100C09DD0);
  sub_1000B42B0();
  __chkstk_darwin(v48);
  sub_100088FDC();
  v184 = v49;
  v180 = sub_1000BA294(&qword_100C09DD8);
  sub_1000B42B0();
  __chkstk_darwin(v50);
  sub_100088FDC();
  v182 = v51;
  v179 = sub_1000BA294(&qword_100C09DE0);
  sub_1000B42B0();
  __chkstk_darwin(v52);
  sub_100088FDC();
  v186 = v53;
  v192 = sub_1000BA294(&qword_100C09DE8);
  sub_1000B42B0();
  __chkstk_darwin(v54);
  sub_100088FDC();
  v190 = v55;
  v195 = sub_1000BA294(&qword_100C09DF0);
  v193 = *(_QWORD *)(v195 - 8);
  sub_10009D98C();
  __chkstk_darwin(v56);
  sub_100088FDC();
  v226 = v57;
  v200 = sub_1000BA294(&qword_100C09DF8);
  v198 = *(_QWORD *)(v200 - 8);
  sub_10009D98C();
  __chkstk_darwin(v58);
  sub_100088FDC();
  v197 = v59;
  v194 = sub_1000BA294(&qword_100C09E00);
  sub_1000B42B0();
  __chkstk_darwin(v60);
  sub_100088FDC();
  v201 = v61;
  v196 = sub_1000BA294(&qword_100C09E08);
  sub_1000B42B0();
  __chkstk_darwin(v62);
  sub_100088FDC();
  v205 = v63;
  v203 = sub_1000BA294(&qword_100C09E10);
  sub_1000B42B0();
  __chkstk_darwin(v64);
  sub_100088FDC();
  v206 = v65;
  v204 = sub_1000BA294(&qword_100C09E18);
  sub_1000B42B0();
  __chkstk_darwin(v66);
  sub_100088FDC();
  v211 = v67;
  v209 = sub_1000BA294(&qword_100C09E20);
  sub_1000B42B0();
  __chkstk_darwin(v68);
  sub_100088FDC();
  v210 = v69;
  v230[0] = static Alignment.center.getter(v70);
  v230[1] = v71;
  sub_1007EE8F0(v1, (uint64_t)&v231);
  KeyPath = swift_getKeyPath(&unk_1009CE3D0);
  v73 = *(int *)(v15 + 52);
  v74 = Namespace.wrappedValue.getter(*(_QWORD *)(v2 + v73));
  sub_1001098C0((uint64_t)v230, (uint64_t)v232);
  v232[15] = KeyPath;
  v232[16] = v74;
  v233 = 0;
  sub_1000987A0((uint64_t)v230);
  v75 = v2 + 8;
  sub_10003B59C(v2 + 8, (uint64_t)v234);
  v76 = *(_QWORD *)(v2 + v73);
  v77 = v174;
  v172 = Namespace.wrappedValue.getter(v76);
  v78 = v15;
  v79 = (uint64_t)v173;
  v227 = v78;
  v228 = v2;
  v191 = v2 + *(int *)(v78 + 40);
  sub_10011AA68(v172);
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v42, enum case for UserInterfaceSizeClass.regular(_:), v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v28);
  v80 = v34 + *(int *)(v175 + 48);
  sub_1001098C0(v79, v34);
  sub_1001098C0((uint64_t)v42, v80);
  sub_1000C1818(v34);
  if (v82)
  {
    sub_1000987A0((uint64_t)v42);
    sub_1000987A0(v79);
    sub_1000C1818(v80);
    if (v82)
    {
      sub_100021A14(v34, &qword_100BC5A68);
LABEL_14:
      v83 = 1;
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  v81 = v171;
  sub_100037768(v34, v171, &qword_100BC5A68);
  sub_1000C1818(v80);
  if (v82)
  {
    sub_100099298((uint64_t)v42);
    sub_100099298(v79);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v81, v28);
LABEL_9:
    sub_100021A14(v34, &qword_100BC5E60);
    goto LABEL_10;
  }
  v84 = v170;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v170, v80, v28);
  sub_10000F1C8(&qword_100BC5AB8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  v86 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v84, v28, v85);
  v87 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v87(v84, v28);
  sub_1000987A0((uint64_t)v42);
  sub_1000987A0(v79);
  v87(v81, v28);
  sub_1000987A0(v34);
  if ((v86 & 1) != 0)
    goto LABEL_14;
LABEL_10:
  if (qword_100BC22D8 != -1)
    swift_once(&qword_100BC22D8, sub_1005E696C);
  v83 = byte_100CAEE78 ^ 1;
LABEL_15:
  sub_10003C800(v234, (uint64_t)v236);
  *((_QWORD *)&v236[2] + 1) = v172;
  LOBYTE(v236[3]) = v83 & 1;
  sub_1000BCF38((uint64_t)v232, (uint64_t)v234);
  v234[9] = v236[0];
  v234[10] = v236[1];
  v234[11] = v236[2];
  v235 = v236[3];
  sub_100099298((uint64_t)v232);
  v88 = v228;
  swift_retain();
  sub_1000BA294(&qword_100BC4770);
  sub_10003D2DC(&qword_100C09E40, &qword_100BC4770);
  v89 = sub_1000D92A8();
  v91 = v90;
  sub_100037768((uint64_t)v234, (uint64_t)v236, &qword_100C09E48);
  *((_QWORD *)&v236[12] + 1) = v89;
  *(_QWORD *)&v236[13] = v91;
  sub_100021A14((uint64_t)v234, &qword_100C09E48);
  sub_10003B59C(v75, (uint64_t)v229);
  v92 = *(_QWORD *)(v88 + *(int *)(v227 + 56));
  v93 = swift_getKeyPath(&unk_1009CE3F8);
  v94 = v176;
  v95 = v177;
  v96 = (uint64_t *)&v177[*(int *)(v176 + 36)];
  v97 = (uint64_t *)((char *)v96 + *(int *)(type metadata accessor for MainViewSheetViewModifier(0) + 28));
  *v97 = v93;
  v98 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  swift_storeEnumTagMultiPayload(v97, v98, 0);
  swift_retain();
  swift_retain();
  *v96 = sub_1000D92A8();
  v96[1] = v99;
  sub_10003C800(v229, (uint64_t)(v96 + 2));
  v96[7] = v92;
  v100 = memcpy(v95, v236, 0xD8uLL);
  v101 = v187;
  static DividerStyle<>.vibrant.getter(v100);
  v102 = sub_1007F5920();
  sub_10000F1C8(&qword_100C09EA8, (uint64_t (*)(uint64_t))&type metadata accessor for VibrantDividerStyle);
  v103 = v181;
  v104 = v189;
  View.dividerStyle<A>(_:)(v101, v94, v189, v102, v105);
  (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v101, v104);
  sub_100021A14((uint64_t)v95, &qword_100C09DC0);
  v106 = v228 + *(int *)(v227 + 44);
  v107 = *(_QWORD *)v106;
  LOBYTE(v104) = *(_BYTE *)(v106 + 8);
  sub_10008D47C(*(_QWORD *)v106, v104);
  sub_100109B54();
  LOBYTE(v101) = v108;
  v109 = sub_1000B15F8(v107, v104);
  if ((v101 & 1) != 0)
    v110 = static Color.black.getter(v109);
  else
    v110 = static Color.white.getter(v109);
  v111 = v110;
  v112 = swift_getKeyPath(&unk_1009CE428);
  v114 = v183;
  v113 = v184;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16))(v184, v103, v185);
  v115 = (uint64_t *)(v113 + *(int *)(v178 + 36));
  *v115 = v112;
  v115[1] = v111;
  v116 = sub_100098748(v103, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8));
  v117 = static Color.white.getter(v116);
  v118 = swift_getKeyPath(&unk_1009CE458);
  v119 = v182;
  sub_1000D0580(v113, v182);
  v120 = (uint64_t *)(v119 + *(int *)(v180 + 36));
  *v120 = v118;
  v120[1] = v117;
  sub_100098854(v113);
  v121 = v186;
  sub_1000BCF38(v119, v186);
  *(_BYTE *)(v121 + *(int *)(v179 + 36)) = 1;
  sub_100099298(v119);
  v122 = v228;
  v123 = v202;
  sub_10003B59C(v228 + 48, v202);
  v124 = (_QWORD *)(v123 + *(int *)(v199 + 20));
  *v124 = swift_getKeyPath(&unk_1009CE488);
  v125 = sub_1000BA294(&qword_100C09EB0);
  sub_1000987D0(v125);
  v126 = v190;
  sub_1000BCF38(v121, v190);
  v127 = v192;
  sub_10007802C(v123, v126 + *(int *)(v192 + 36), type metadata accessor for MainViewScenePhaseObservationViewModifier);
  sub_100099298(v121);
  v128 = v207;
  sub_100109D64();
  v129 = v215;
  sub_100080C0C(v122, v215, type metadata accessor for MainView);
  v130 = *(unsigned __int8 *)(v224 + 80);
  v131 = (v130 + 16) & ~v130;
  v202 = v131;
  v224 = v130 | 7;
  v225 += v131;
  v132 = swift_allocObject(&unk_100B92DD8, v225, v130 | 7);
  sub_10007802C(v129, v132 + v131, type metadata accessor for MainView);
  v133 = sub_1007F5BB8();
  v199 = v133;
  sub_10000F1C8(&qword_100C09EF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  v189 = v134;
  v135 = v212;
  View.onChange<A>(of:initial:_:)(v128, 0, sub_1007F5BA4, v132, v127, v212, v133, v134);
  swift_release(v132);
  sub_100098748(v128, *(uint64_t (**)(uint64_t, uint64_t))(v208 + 8));
  sub_100021A14(v126, &qword_100C09DE8);
  v136 = v214;
  sub_1001590AC();
  sub_100080C0C(v122, v129, type metadata accessor for MainView);
  v137 = swift_allocObject(&unk_100B92E00, v225, v224);
  sub_1000D14B8(v137);
  *(_QWORD *)&v236[0] = v127;
  *((_QWORD *)&v236[0] + 1) = v135;
  *(_QWORD *)&v236[1] = v199;
  *((_QWORD *)&v236[1] + 1) = v189;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v236, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v139 = sub_100155D44();
  v140 = v197;
  v141 = OpaqueTypeConformance2;
  v142 = v226;
  View.onChange<A>(of:initial:_:)(v136, 0, sub_1007F5E20, v137, v195, v213, v141, v139);
  swift_release(v137);
  sub_100021A14(v136, &qword_100C04B78);
  sub_100098748(v142, *(uint64_t (**)(uint64_t, uint64_t))(v193 + 8));
  sub_100080C0C(v228, v129, type metadata accessor for MainView);
  v143 = swift_allocObject(&unk_100B92E28, v225, v224);
  sub_1000D14B8(v143);
  v144 = v198;
  v145 = v201;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v198 + 16))(v201, v140, v200);
  v146 = (uint64_t (**)())(v145 + *(int *)(v194 + 36));
  *v146 = sub_1000D206C;
  v146[1] = (uint64_t (*)())v143;
  v146[2] = 0;
  v146[3] = 0;
  sub_100098748(v140, *(uint64_t (**)(uint64_t, uint64_t))(v144 + 8));
  v147 = swift_getKeyPath(&unk_1009CE4B8);
  v148 = v216;
  sub_10011AA68(v147);
  v149 = v205;
  v150 = (uint64_t *)(v205 + *(int *)(v196 + 36));
  v151 = sub_1000BA294(&qword_100C09F10);
  sub_100037768(v148, (uint64_t)v150 + *(int *)(v151 + 28), &qword_100BC5A68);
  *v150 = v147;
  sub_1000D0580(v145, v149);
  sub_1000C2008();
  sub_100098854(v145);
  v152 = type metadata accessor for ColorScheme(0);
  v153 = v218;
  _s7Weather24LocationCompositionStateOwst_0(v218, 1, 1, v152);
  v154 = v219;
  sub_1000C0BBC(v153);
  v155 = v217;
  State.init(wrappedValue:)(v154, v220);
  sub_100021A14(v153, (uint64_t *)&unk_100C09DB0);
  v156 = v206;
  sub_1000D0580(v149, v206);
  sub_10007802C(v155, v156 + *(int *)(v203 + 36), type metadata accessor for WeatherMapStatusBarColorSceneModifier);
  sub_100098854(v149);
  sub_10011AA68(v157);
  v158 = v211;
  v159 = v211 + *(int *)(v204 + 36);
  sub_100037768(v148, v159, &qword_100BC5A68);
  v160 = (uint64_t (**)())(v159 + *(int *)(sub_1000BA294(&qword_100C09F18) + 36));
  *v160 = sub_1007EF4C4;
  v160[1] = 0;
  sub_1000BCF38(v156, v158);
  sub_1000C2008();
  sub_100099298(v156);
  v161 = v222;
  sub_10003B59C(v228 + 88, v222);
  v162 = v221;
  v163 = (_QWORD *)(v161 + *(int *)(v221 + 20));
  *v163 = swift_getKeyPath(&unk_1009CE4E0);
  v164 = sub_1000BA294((uint64_t *)&unk_100C09F20);
  sub_1000987D0(v164);
  v165 = (_QWORD *)(v161 + *(int *)(v162 + 24));
  v166 = type metadata accessor for ExtendedAppLaunchState(0);
  v167 = swift_allocObject(v166, *(unsigned int *)(v166 + 48), *(unsigned __int16 *)(v166 + 52));
  *(_BYTE *)(v167 + 16) = 1;
  ObservationRegistrar.init()(v167);
  *(_QWORD *)&v234[0] = v167;
  State.init(wrappedValue:)(v234, v166);
  v168 = *((_QWORD *)&v236[0] + 1);
  *v165 = *(_QWORD *)&v236[0];
  v165[1] = v168;
  v169 = v210;
  sub_1000BCF38(v158, v210);
  sub_10007802C(v161, v169 + *(int *)(v209 + 36), type metadata accessor for MonitorAppLaunchStateViewModifier);
  sub_100099298(v158);
  sub_1000787D4(v169, v223, &qword_100C09E20);
  sub_100098640();
}

void sub_100066898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  type metadata accessor for ActivityAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  sub_100098728();
  sub_1000BA294(&qword_100BC5F60);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  sub_10009511C(v7);
  sub_1000BA294(&qword_100BC5F88);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  sub_10009511C(v9);
  sub_1000BA294(&qword_100BC5F90);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  sub_10009511C(v11);
  sub_1000BA294(&qword_100BC5F98);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  sub_10009511C(v13);
  sub_1000BA294(&qword_100BC5FA0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  sub_10009511C(v15);
  sub_1000BA294(&qword_100BC3340);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  sub_1000BA294(&qword_100BC5FA8);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_100088FDC();
  sub_10009511C(v18);
  sub_1000BA294(&qword_100BC5FB0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100088FDC();
  type metadata accessor for EnvironmentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100098728();
  v23 = v22 - v21;
  sub_100140510(a3, v22 - v21);
  v24 = (char *)sub_100066AB0 + 4 * word_1009BE8B0[swift_getEnumCaseMultiPayload(v23)];
  __asm { BR              X10 }
}

uint64_t sub_100066AB0()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  int v3;

  v3 = *v1;
  sub_1000DB418((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_10002BFD0(*(unsigned __int8 *)(*(_QWORD *)(v2 - 256) + 1), *(_QWORD *)(v2 - 248), v3);
}

_QWORD *sub_100067458(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1000BA294(&qword_100BD4338);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for URL(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_1000BA294(&qword_100BD4280);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v17[16] = v18[16];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000675A4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v4))
  {
    v5 = type metadata accessor for WeatherActivity(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v4);
  }
  return a1;
}

uint64_t type metadata accessor for WeatherActivity(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD45E0;
  if (!qword_100BD45E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WeatherActivity);
  return result;
}

void sub_100067674(uint64_t a1)
{
  sub_100817F0C(a1);
}

_QWORD *sub_100067688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, _QWORD *a18, uint64_t *a19)
{
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t *v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t *v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t *v124;
  _QWORD *v125;
  _QWORD v126[3];
  uint64_t *v127;
  _UNKNOWN **v128;
  _QWORD v129[3];
  uint64_t v130;
  _UNKNOWN **v131;
  _QWORD v132[3];
  uint64_t v133;
  _UNKNOWN **v134;
  _QWORD v135[3];
  uint64_t v136;
  _UNKNOWN **v137;
  _QWORD v138[3];
  uint64_t v139;
  _UNKNOWN **v140;
  _QWORD v141[3];
  uint64_t v142;
  _UNKNOWN **v143;
  _QWORD v144[3];
  uint64_t v145;
  _UNKNOWN **v146;
  _QWORD v147[3];
  uint64_t v148;
  _UNKNOWN **v149;
  _QWORD v150[3];
  uint64_t v151;
  _UNKNOWN **v152;
  _QWORD v153[3];
  uint64_t v154;
  _UNKNOWN **v155;
  _QWORD v156[3];
  uint64_t v157;
  _UNKNOWN **v158;
  _QWORD v159[3];
  uint64_t v160;
  _UNKNOWN **v161;
  _QWORD v162[3];
  uint64_t v163;
  _UNKNOWN **v164;
  _QWORD v165[3];
  uint64_t v166;
  _UNKNOWN **v167;
  _QWORD v168[3];
  uint64_t v169;
  _UNKNOWN **v170;
  _QWORD v171[3];
  uint64_t v172;
  _UNKNOWN **v173;
  _QWORD v174[3];
  uint64_t v175;
  _UNKNOWN **v176;
  _QWORD v177[3];
  uint64_t v178;
  _UNKNOWN **v179;
  _QWORD v180[3];
  uint64_t v181;
  _UNKNOWN **v182;

  v114 = a8;
  v125 = a18;
  v122 = a17;
  v121 = a16;
  v120 = a15;
  v119 = a14;
  v118 = a13;
  v117 = a12;
  v116 = a11;
  v115 = a10;
  v26 = (uint64_t *)*a19;
  v123 = a19;
  v124 = v26;
  v181 = type metadata accessor for AutomationReducer();
  v182 = &off_100B83EE0;
  v180[0] = a1;
  v178 = type metadata accessor for AppLifecycleReducer();
  v179 = &off_100B95850;
  v177[0] = a2;
  v175 = type metadata accessor for AppConfigurationReducer();
  v176 = &off_100B85FC8;
  v174[0] = a3;
  v172 = type metadata accessor for EnvironmentReducer();
  v173 = &off_100B88B30;
  v171[0] = a4;
  v170 = &off_100B844E8;
  v169 = type metadata accessor for LocationsReducer();
  v168[0] = a5;
  v167 = &off_100B83450;
  v166 = type metadata accessor for TimeReducer();
  v165[0] = a6;
  v164 = &off_100B75790;
  v163 = type metadata accessor for ViewStateReducer();
  v162[0] = a7;
  v161 = &off_100B95EB8;
  v160 = type metadata accessor for ModalViewStateReducer();
  v159[0] = v114;
  v158 = &off_100B60CA0;
  v157 = type metadata accessor for LocationViewStateReducer();
  v156[0] = a9;
  v154 = type metadata accessor for WeatherDataReducer();
  v155 = &off_100B95E70;
  v153[0] = a10;
  v151 = type metadata accessor for PerformanceTestReducer();
  v152 = &off_100B887B0;
  v150[0] = a11;
  v148 = type metadata accessor for DebugReducer();
  v149 = &off_100B680B0;
  v147[0] = a12;
  v145 = type metadata accessor for NotificationsReducer();
  v146 = &off_100B68AE0;
  v144[0] = a13;
  v142 = type metadata accessor for NotificationsOptInReducer();
  v143 = &off_100B6D878;
  v141[0] = a14;
  v139 = type metadata accessor for ConditionDetailViewStateReducer();
  v140 = &off_100B991E0;
  v138[0] = a15;
  v136 = type metadata accessor for SunriseSunsetDetailViewStateReducer();
  v137 = &off_100B88470;
  v135[0] = a16;
  v133 = type metadata accessor for MoonDetailViewStateReducer();
  v134 = &off_100B87EA0;
  v132[0] = a17;
  v130 = type metadata accessor for AveragesDetailViewStateReducer();
  v131 = &off_100B90638;
  v129[0] = a18;
  v127 = v124;
  v128 = &off_100B96730;
  v126[0] = a19;
  v27 = type metadata accessor for MainReducer();
  v125 = (_QWORD *)swift_allocObject(v27, 776, 7);
  v28 = sub_100068EB4((uint64_t)v180, v181);
  v29 = __chkstk_darwin(v28);
  v124 = (uint64_t *)((char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v31 + 16))(v29);
  v32 = sub_100068EB4((uint64_t)v177, v178);
  v33 = __chkstk_darwin(v32);
  v123 = (uint64_t *)((char *)&v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v35 + 16))(v33);
  v36 = sub_100068EB4((uint64_t)v174, v175);
  v37 = __chkstk_darwin(v36);
  v122 = (uint64_t *)((char *)&v114 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v39 + 16))(v37);
  v40 = sub_100068EB4((uint64_t)v171, v172);
  v41 = __chkstk_darwin(v40);
  v121 = (uint64_t *)((char *)&v114 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v43 + 16))(v41);
  v44 = sub_100068EB4((uint64_t)v168, v169);
  v45 = __chkstk_darwin(v44);
  v120 = (uint64_t *)((char *)&v114 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v47 + 16))(v45);
  v48 = sub_100068EB4((uint64_t)v165, v166);
  v49 = __chkstk_darwin(v48);
  v119 = (uint64_t *)((char *)&v114 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v51 + 16))(v49);
  v52 = sub_100068EB4((uint64_t)v162, v163);
  v53 = __chkstk_darwin(v52);
  v118 = (uint64_t *)((char *)&v114 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v55 + 16))(v53);
  v56 = sub_100068EB4((uint64_t)v159, v160);
  v57 = __chkstk_darwin(v56);
  v117 = (uint64_t *)((char *)&v114 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v59 + 16))(v57);
  v60 = sub_100068EB4((uint64_t)v156, v157);
  v61 = __chkstk_darwin(v60);
  v116 = (uint64_t *)((char *)&v114 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v63 + 16))(v61);
  v64 = sub_100068EB4((uint64_t)v153, v154);
  v65 = __chkstk_darwin(v64);
  v115 = (uint64_t *)((char *)&v114 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v67 + 16))(v65);
  v68 = sub_100068EB4((uint64_t)v150, v151);
  v69 = __chkstk_darwin(v68);
  v114 = (uint64_t *)((char *)&v114 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v71 + 16))(v69);
  v72 = sub_100068EB4((uint64_t)v147, v148);
  v73 = __chkstk_darwin(v72);
  v75 = (uint64_t *)((char *)&v114 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v76 + 16))(v75, v73);
  v77 = sub_100068EB4((uint64_t)v144, v145);
  v78 = __chkstk_darwin(v77);
  v80 = (uint64_t *)((char *)&v114 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v81 + 16))(v80, v78);
  v82 = sub_100068EB4((uint64_t)v141, v142);
  v83 = __chkstk_darwin(v82);
  v85 = (uint64_t *)((char *)&v114 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v86 + 16))(v85, v83);
  v87 = sub_100068EB4((uint64_t)v138, v139);
  v88 = __chkstk_darwin(v87);
  v90 = (uint64_t *)((char *)&v114 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v91 + 16))(v90, v88);
  v92 = sub_100068EB4((uint64_t)v135, v136);
  v93 = __chkstk_darwin(v92);
  v95 = (uint64_t *)((char *)&v114 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v96 + 16))(v95, v93);
  v97 = sub_100068EB4((uint64_t)v132, v133);
  v98 = __chkstk_darwin(v97);
  v100 = (uint64_t *)((char *)&v114 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v101 + 16))(v100, v98);
  v102 = sub_100068EB4((uint64_t)v129, v130);
  v103 = __chkstk_darwin(v102);
  v105 = (uint64_t *)((char *)&v114 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v106 + 16))(v105, v103);
  v107 = sub_100068EB4((uint64_t)v126, (uint64_t)v127);
  v108 = __chkstk_darwin(v107);
  v110 = (uint64_t *)((char *)&v114 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v111 + 16))(v110, v108);
  v112 = sub_10014C0F8(*v124, *v123, *v122, *v121, *v120, *v119, *v118, *v117, *v116, *v115, *v114, *v75, *v80, *v85, *v90, *v95, *v100, *v105, *v110,
           v125);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v126);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v129);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v132);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v135);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v138);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v141);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v144);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v147);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v150);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v153);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v156);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v159);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v162);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v165);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v168);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v171);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v174);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v177);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v180);
  return v112;
}

uint64_t sub_10006808C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  uint64_t **v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t **v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t **v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  uint64_t **v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  uint64_t **v140;
  uint64_t v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t **v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  _QWORD ***v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  _QWORD v154[4];
  uint64_t **v155;
  _QWORD *v156;
  uint64_t **v157;
  uint64_t **v158;
  _QWORD *v159;
  uint64_t **v160;
  _QWORD *v161;
  uint64_t *v162;
  _QWORD *v163;
  uint64_t **v164;
  _QWORD *v165;
  uint64_t *v166;
  uint64_t *v167;
  _QWORD *v168;
  uint64_t *v169;
  _QWORD *v170;
  uint64_t *v171;
  _QWORD *v172;
  uint64_t *v173;
  _QWORD *v174;
  uint64_t *v175;
  _QWORD *v176;
  uint64_t *v177;
  _QWORD *v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;
  _QWORD *v182;
  _QWORD *v183;
  _QWORD v184[3];
  uint64_t v185;
  _QWORD v186[3];
  uint64_t v187;
  _QWORD v188[3];
  uint64_t v189;
  _QWORD v190[3];
  uint64_t v191;
  _QWORD v192[3];
  uint64_t v193;
  _QWORD v194[3];
  uint64_t v195;
  _QWORD v196[3];
  uint64_t v197;
  _QWORD v198[3];
  uint64_t v199;
  _QWORD v200[3];
  uint64_t v201;
  _QWORD v202[3];
  uint64_t v203;
  _QWORD v204[3];
  uint64_t v205;
  _QWORD v206[3];
  uint64_t v207;
  _QWORD v208[3];
  uint64_t v209;
  _QWORD v210[3];
  uint64_t v211;
  _QWORD v212[3];
  uint64_t v213;
  _QWORD v214[3];
  uint64_t v215;
  _QWORD v216[3];
  uint64_t v217;
  _QWORD v218[3];
  uint64_t v219;
  _QWORD v220[3];
  uint64_t v221;
  _QWORD v222[3];
  uint64_t v223;

  v4 = a1[3];
  v5 = a1[4];
  sub_1000DB418(a1, v4);
  v6 = sub_1000BA294(&qword_100BED440);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!v223)
  {
    __break(1u);
    goto LABEL_23;
  }
  v8 = a1[3];
  v9 = a1[4];
  sub_1000DB418(a1, v8);
  v10 = sub_1000BA294(&qword_100BED4C0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v10, v10, v8, v9);
  if (!v221)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = a1[3];
  v12 = a1[4];
  sub_1000DB418(a1, v11);
  v13 = sub_1000BA294(&qword_100BED448);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v13, v13, v11, v12);
  if (!v219)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v14 = a1[3];
  v15 = a1[4];
  sub_1000DB418(a1, v14);
  v16 = sub_1000BA294(&qword_100BED450);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v16, v16, v14, v15);
  if (!v217)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = a1[3];
  v18 = a1[4];
  sub_1000DB418(a1, v17);
  v19 = sub_1000BA294(&qword_100BED458);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!v215)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v20 = a1[3];
  v21 = a1[4];
  sub_1000DB418(a1, v20);
  v22 = sub_1000BA294(&qword_100BED460);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v22, v22, v20, v21);
  if (!v213)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v23 = a1[3];
  v24 = a1[4];
  sub_1000DB418(a1, v23);
  v25 = sub_1000BA294(&qword_100BED468);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v25, v25, v23, v24);
  if (!v211)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v26 = a1[3];
  v27 = a1[4];
  sub_1000DB418(a1, v26);
  v28 = sub_1000BA294(&qword_100BED470);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v28, v28, v26, v27);
  if (!v209)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v29 = a1[3];
  v30 = a1[4];
  sub_1000DB418(a1, v29);
  v31 = sub_1000BA294(&qword_100BC43E8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (!v207)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v32 = a1[3];
  v33 = a1[4];
  sub_1000DB418(a1, v32);
  v34 = sub_1000BA294(&qword_100BED478);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v34, v34, v32, v33);
  if (!v205)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v35 = a1[3];
  v36 = a1[4];
  sub_1000DB418(a1, v35);
  v37 = sub_1000BA294(&qword_100BED480);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v37, v37, v35, v36);
  if (!v203)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v38 = a1[3];
  v39 = a1[4];
  sub_1000DB418(a1, v38);
  v40 = sub_1000BA294(&qword_100BED488);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v40, v40, v38, v39);
  if (!v201)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v41 = a1[3];
  v42 = a1[4];
  sub_1000DB418(a1, v41);
  v43 = sub_1000BA294(&qword_100BED490);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v43, v43, v41, v42);
  if (!v199)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v44 = a1[3];
  v45 = a1[4];
  sub_1000DB418(a1, v44);
  v46 = sub_1000BA294(&qword_100BED498);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v46, v46, v44, v45);
  if (!v197)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v47 = a1[3];
  v48 = a1[4];
  sub_1000DB418(a1, v47);
  v49 = sub_1000BA294(&qword_100BED4A0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v49, v49, v47, v48);
  if (!v195)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v50 = a1[3];
  v51 = a1[4];
  sub_1000DB418(a1, v50);
  v52 = sub_1000BA294(&qword_100BED4A8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v52, v52, v50, v51);
  if (!v193)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v53 = a1[3];
  v54 = a1[4];
  sub_1000DB418(a1, v53);
  v55 = sub_1000BA294(&qword_100BED4B8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v55, v55, v53, v54);
  if (!v191)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v56 = a1[3];
  v57 = a1[4];
  sub_1000DB418(a1, v56);
  v58 = sub_1000BA294(&qword_100BED4D0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v58, v58, v56, v57);
  if (!v189)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v59 = a1[3];
  v60 = a1[4];
  sub_1000DB418(a1, v59);
  v61 = sub_1000BA294(&qword_100BED4D8);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v61, v61, v59, v60);
  if (!v187)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v183 = a2;
  v62 = a1[3];
  v63 = a1[4];
  sub_1000DB418(a1, v62);
  v64 = sub_1000BA294(&qword_100BED4E0);
  result = dispatch thunk of ResolverType.resolve<A>(_:)(v64, v64, v62, v63);
  if (v185)
  {
    v65 = sub_100068EB4((uint64_t)v222, v223);
    v182 = v154;
    v66 = __chkstk_darwin(v65);
    v177 = (_QWORD *)((char *)v154 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v68 + 16))(v66);
    v69 = sub_100068EB4((uint64_t)v220, v221);
    v181 = v154;
    v70 = __chkstk_darwin(v69);
    v175 = (_QWORD *)((char *)v154 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v72 + 16))(v70);
    v73 = sub_100068EB4((uint64_t)v218, v219);
    v180 = v154;
    v74 = __chkstk_darwin(v73);
    v173 = (_QWORD *)((char *)v154 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v76 + 16))(v74);
    v77 = sub_100068EB4((uint64_t)v216, v217);
    v179 = v154;
    v78 = __chkstk_darwin(v77);
    v171 = (_QWORD *)((char *)v154 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v80 + 16))(v78);
    v81 = sub_100068EB4((uint64_t)v214, v215);
    v178 = v154;
    v82 = __chkstk_darwin(v81);
    v169 = (_QWORD *)((char *)v154 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v84 + 16))(v82);
    v85 = sub_100068EB4((uint64_t)v212, v213);
    v176 = v154;
    v86 = __chkstk_darwin(v85);
    v167 = (_QWORD *)((char *)v154 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v88 + 16))(v86);
    v89 = sub_100068EB4((uint64_t)v210, v211);
    v174 = v154;
    v90 = __chkstk_darwin(v89);
    v166 = (_QWORD *)((char *)v154 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v92 + 16))(v90);
    v93 = sub_100068EB4((uint64_t)v208, v209);
    v172 = v154;
    v94 = __chkstk_darwin(v93);
    v164 = (uint64_t **)((char *)v154 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v96 + 16))(v94);
    v97 = sub_100068EB4((uint64_t)v206, v207);
    v170 = v154;
    v98 = __chkstk_darwin(v97);
    v162 = (_QWORD *)((char *)v154 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v100 + 16))(v98);
    v101 = sub_100068EB4((uint64_t)v204, v205);
    v168 = v154;
    v102 = __chkstk_darwin(v101);
    v160 = (uint64_t **)((char *)v154 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v104 + 16))(v102);
    v105 = sub_100068EB4((uint64_t)v202, v203);
    v165 = v154;
    v106 = __chkstk_darwin(v105);
    v158 = (uint64_t **)((char *)v154 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v108 + 16))(v106);
    v109 = sub_100068EB4((uint64_t)v200, v201);
    v163 = v154;
    v110 = __chkstk_darwin(v109);
    v157 = (uint64_t **)((char *)v154 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v112 + 16))(v110);
    v113 = sub_100068EB4((uint64_t)v198, v199);
    v161 = v154;
    v114 = __chkstk_darwin(v113);
    v155 = (uint64_t **)((char *)v154 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v116 + 16))(v114);
    v117 = sub_100068EB4((uint64_t)v196, v197);
    v159 = v154;
    v118 = __chkstk_darwin(v117);
    v120 = (uint64_t **)((char *)v154 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v121 + 16))(v120, v118);
    v122 = sub_100068EB4((uint64_t)v194, v195);
    v156 = v154;
    v123 = __chkstk_darwin(v122);
    v125 = (uint64_t **)((char *)v154 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v126 + 16))(v125, v123);
    v127 = sub_100068EB4((uint64_t)v192, v193);
    v154[3] = v154;
    v128 = __chkstk_darwin(v127);
    v130 = (uint64_t **)((char *)v154 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v131 + 16))(v130, v128);
    v132 = sub_100068EB4((uint64_t)v190, v191);
    v154[2] = v154;
    v133 = __chkstk_darwin(v132);
    v135 = (uint64_t **)((char *)v154 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v136 + 16))(v135, v133);
    v137 = sub_100068EB4((uint64_t)v188, v189);
    v154[1] = v154;
    v138 = __chkstk_darwin(v137);
    v140 = (uint64_t **)((char *)v154 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v141 + 16))(v140, v138);
    v142 = sub_100068EB4((uint64_t)v186, v187);
    v154[0] = v154;
    v143 = __chkstk_darwin(v142);
    v145 = (uint64_t **)((char *)v154 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v146 + 16))(v145, v143);
    v147 = sub_100068EB4((uint64_t)v184, v185);
    v148 = __chkstk_darwin(v147);
    v150 = (_QWORD ***)((char *)v154 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(_QWORD ***, __n128))(v151 + 16))(v150, v148);
    v152 = sub_100526B78(*v177, *v175, *v173, *v171, *v169, *v167, *v166, *v164, *v162, *v160, *v158, *v157, *v155, *v120, *v125, *v130, *v135, *v140, *v145,
             *v150);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v184);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v186);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v188);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v190);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v192);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v194);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v196);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v198);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v200);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v202);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v204);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v206);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v208);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v210);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v212);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v214);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v216);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v218);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v220);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v222);
    result = type metadata accessor for LocationComponentViewModelFactory();
    v153 = v183;
    v183[3] = result;
    v153[4] = &off_100B6D6D0;
    *v153 = v152;
    return result;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100068EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100068EDC@<X0>(uint64_t (*a1)(_BYTE *)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1000BA294(&qword_100C0B2F0);
  result = a1(&a2[*(int *)(v4 + 48)]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_100068F28()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  char v23;
  void (*v24)(uint64_t, uint64_t);
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  double v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1000986AC();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for Location.Identifier(0);
  v8 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100094EC4();
  v9 = *v2;
  v10 = *(_QWORD *)(*v2 + 40);
  v12 = sub_100051B90(&qword_100BC3638, v11, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  swift_bridgeObjectRetain(v9);
  v33 = v4;
  dispatch thunk of Hashable._rawHashValue(seed:)(v10, v7, v12);
  sub_100095174();
  v15 = v14 & ~v13;
  v16 = v9;
  v17 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v30 = v2;
    v31 = v6;
    v32 = ~v13;
    v18 = v8[9];
    v19 = (void (*)(_QWORD, _QWORD, _QWORD))v8[2];
    while (1)
    {
      v20 = v16;
      v21 = v19;
      v19(v1, *(_QWORD *)(v16 + 48) + v18 * v15, v7);
      v22 = sub_100051B90((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v1, v33, v7, v22);
      v24 = (void (*)(uint64_t, uint64_t))v8[1];
      v24(v1, v7);
      if ((v23 & 1) != 0)
        break;
      v15 = (v15 + 1) & v32;
      v16 = v20;
      v19 = v21;
      if (((*(_QWORD *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease(v20);
        v2 = v30;
        v6 = v31;
        v25 = v8;
        goto LABEL_7;
      }
    }
    v29 = sub_100098738();
    ((void (*)(uint64_t, uint64_t, double))v24)(v33, v7, v29);
    v21(v31, *(_QWORD *)(*v30 + 48) + v18 * v15, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v19 = (void (*)(_QWORD, _QWORD, _QWORD))v8[2];
    v25 = v8;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v19(v1, v33, v7);
    v34 = *v2;
    *v2 = 0x8000000000000000;
    sub_100069160(v1, v15, isUniquelyReferenced_nonNull_native);
    v27 = *v2;
    *v2 = v34;
    swift_bridgeObjectRelease(v27);
    sub_100089084(v6, v33, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v25[4]);
    return 1;
  }
}

uint64_t sub_100069160(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v29 = a1;
  v6 = type metadata accessor for Location.Identifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v28 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_100601EE4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1006046D4();
      goto LABEL_12;
    }
    sub_100604F84();
  }
  v12 = *v3;
  v13 = *(_QWORD *)(*v3 + 40);
  v14 = sub_100051B90(&qword_100BC3638, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v13, v6, v14);
  v16 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v9, *(_QWORD *)(v12 + 48) + v18 * a2, v6);
      v20 = sub_100051B90((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v29, v6, v20);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v21 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v22 = v29;
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v23 + 48) + *(_QWORD *)(v7 + 72) * a2, v22, v6);
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_1000693B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  void *object;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  Swift::String v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  __int128 v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v3 = type metadata accessor for MainAction(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = 0xD000000000000017;
  v57 = 0x8000000100A0E270;
  sub_10003773C(a1, (uint64_t)&v51, (uint64_t *)&unk_100BFFA10);
  if (v52)
  {
    sub_10003C800(&v51, (uint64_t)&v53);
    v7 = v54;
    v8 = v55;
    sub_1000DB418(&v53, v54);
    dispatch thunk of ShortDescribable.shortDescription.getter(&v51, v7, v8);
    v9 = v52;
    sub_1000DB418(&v51, v52);
    v10 = dispatch thunk of ShortDescriptionType.describe(withIndentation:)(2, v9);
    v12 = v11;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v51);
    v13._countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v53);
  }
  else
  {
    sub_100021A14((uint64_t)&v51, (uint64_t *)&unk_100BFFA10);
  }
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v50[1] = v1;
    v16._countAndFlagsBits = 23328;
    v16._object = (void *)0xE200000000000000;
    String.append(_:)(v16);
    v17 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v50[0] = v14;
    swift_bridgeObjectRetain(v14);
    do
    {
      sub_1000DF3CC();
      sub_1000A1C54(&qword_100BDECA8, 255, type metadata accessor for MainAction);
      v19 = dispatch thunk of CustomStringConvertible.description.getter(v3);
      v21 = v20;
      v53._countAndFlagsBits = v19;
      v53._object = v20;
      swift_bridgeObjectRetain(v20);
      v22._countAndFlagsBits = 8236;
      v22._object = (void *)0xE200000000000000;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(v21);
      object = v53._object;
      String.append(_:)(v53);
      swift_bridgeObjectRelease(object);
      sub_10006BCFC((uint64_t)v6, type metadata accessor for MainAction);
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(v50[0]);
    v24 = v56;
    v25 = v57;
    v26 = HIBYTE(v57) & 0xF;
    if ((v57 & 0x2000000000000000) == 0)
      v26 = v56;
    v27 = 7;
    if (((v57 >> 60) & ((v56 & 0x800000000000000) == 0)) != 0)
      v27 = 11;
    v28 = v27 | (v26 << 16);
    v29 = swift_bridgeObjectRetain(v57);
    v30 = String.index(_:offsetBy:)(v28, -2, v24, v25, v29);
    swift_bridgeObjectRelease(v25);
    v31 = String.subscript.getter(15, v30);
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = swift_bridgeObjectRelease(v25);
    v39 = static String._fromSubstring(_:)(v31, v33, v35, v37, v38);
    v41 = v40;
    swift_bridgeObjectRelease(v37);
    v56 = v39;
    v57 = v41;
    v42._countAndFlagsBits = 93;
    v42._object = (void *)0xE100000000000000;
    String.append(_:)(v42);
  }
  v44 = v56;
  v43 = v57;
  swift_bridgeObjectRetain(v57);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(22, -1);
    v49 = swift_slowAlloc(32, -1);
    v53._countAndFlagsBits = v49;
    *(_DWORD *)v48 = 141558275;
    *(_QWORD *)&v51 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
    *(_WORD *)(v48 + 12) = 2081;
    swift_bridgeObjectRetain(v43);
    *(_QWORD *)&v51 = sub_1000CE1C8(v44, v43, &v53._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 8);
    swift_bridgeObjectRelease_n(v43, 3);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{private,mask.hash}s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy(v49, 1);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v43, 2);
  }

}

uint64_t sub_1000697F8(uint64_t a1)
{
  uint64_t v2;

  sub_100069830(&qword_100BDECC0, (uint64_t)&unk_10099C840);
  return ShortDescribable.description.getter(a1, v2);
}

void sub_100069830(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for MainAction(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_10004A298();
}

uint64_t sub_10006986C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t OpaqueTypeConformance2;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[16];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  void *v145;
  void *v146;
  uint64_t v147;

  v117 = a1;
  v128 = a6;
  v10 = type metadata accessor for LazyPageTabViewStyle(0);
  v115 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v114 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = a2;
  v142 = a3;
  v12 = a2;
  v143 = a4;
  v144 = a5;
  v13 = a4;
  v14 = type metadata accessor for Page(255, (uint64_t)&v141);
  v15 = type metadata accessor for Array(255, v14);
  v141 = v12;
  v142 = a3;
  v16 = v12;
  v143 = v13;
  v144 = a5;
  v17 = v13;
  v18 = type metadata accessor for PageContainer(255, (uint64_t)&v141);
  v19 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v18);
  WitnessTable = swift_getWitnessTable(&unk_1009B83C4, v18);
  v146 = &protocol witness table for EmptyView;
  v147 = WitnessTable;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  v22 = type metadata accessor for VStack(255, v19, v21);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v22);
  v141 = v22;
  v142 = a3;
  v143 = v23;
  v144 = a5;
  v24 = type metadata accessor for IDView(255);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for [A], v15);
  v141 = v15;
  v142 = a3;
  v143 = v24;
  v144 = (void *)v25;
  v145 = a5;
  v26 = type metadata accessor for ForEach(255, &v141);
  v140 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v24);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v26);
  v29 = type metadata accessor for WireframeScrollInterestView(255, v26, v27, v28);
  v120 = v29;
  v30 = swift_getWitnessTable(&unk_1009917A8, v29);
  v141 = a3;
  v142 = v29;
  v143 = (uint64_t)a5;
  v144 = (void *)v30;
  v121 = v30;
  v31 = type metadata accessor for TabView(255, &v141);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for TabView<A, B>, v31);
  v141 = v31;
  v142 = v10;
  v129 = v10;
  v143 = v32;
  v144 = &protocol witness table for LazyPageTabViewStyle;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 0);
  v111 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v34 = __chkstk_darwin(OpaqueTypeMetadata2);
  v113 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v112 = (char *)&v102 - v36;
  v110 = type metadata accessor for PageTabViewStyle.IndexDisplayMode(0);
  v109 = *(_QWORD *)(v110 - 8);
  v37 = __chkstk_darwin(v110);
  v107 = (uint64_t)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v106 = (uint64_t)&v102 - v39;
  v40 = type metadata accessor for PageTabViewStyle(0);
  v108 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v105 = (uint64_t)&v102 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for Binding(255, a3);
  v42 = type metadata accessor for Optional(0, v116);
  __chkstk_darwin(v42);
  v44 = (uint64_t *)((char *)&v102 - v43);
  v45 = swift_checkMetadataState(0, v31);
  v119 = *(_QWORD *)(v45 - 8);
  v46 = __chkstk_darwin(v45);
  v118 = (char *)&v102 - v47;
  v130 = v46;
  v141 = v46;
  v142 = v40;
  v125 = v40;
  v127 = v32;
  v143 = v32;
  v144 = &protocol witness table for PageTabViewStyle;
  v48 = swift_getOpaqueTypeMetadata2(0, &v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 0);
  v102 = *(_QWORD *)(v48 - 8);
  v49 = __chkstk_darwin(v48);
  v104 = (uint64_t)&v102 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v103 = (uint64_t)&v102 - v51;
  v122 = v52;
  v126 = OpaqueTypeMetadata2;
  v124 = type metadata accessor for _ConditionalContent(0, v52, OpaqueTypeMetadata2);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v131 = (uint64_t)&v102 - v53;
  v54 = v16;
  v141 = v16;
  v142 = a3;
  v55 = a3;
  v56 = v17;
  v143 = v17;
  v144 = a5;
  v57 = a5;
  v58 = type metadata accessor for AnimatableTabView(0, (uint64_t)&v141);
  v59 = v117;
  v60 = v117 + *(int *)(v58 + 92);
  v61 = *(_QWORD *)v60;
  LOBYTE(a5) = *(_BYTE *)(v60 + 8);
  sub_10008D47C(*(_QWORD *)v60, (char)a5);
  sub_100109B54();
  LOBYTE(v32) = v62;
  sub_1000B15F8(v61, (char)a5);
  sub_100037F88((_QWORD *)v58, v44);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v116);
  v133 = v54;
  v134 = v55;
  v135 = v56;
  v136 = v57;
  v137 = v59;
  v63 = swift_checkMetadataState(0, v120);
  if ((v32 & 1) != 0)
  {
    v64 = v118;
    v65 = TabView.init(selection:content:)(v44, sub_1001410C8, v132, v55, v63, v57, v121);
    v66 = v106;
    static PageTabViewStyle.IndexDisplayMode.never.getter(v65);
    v67 = v109;
    v68 = v107;
    v69 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v107, v66, v110);
    v70 = v105;
    PageTabViewStyle.init(indexDisplayMode:)(v68);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v69);
    v71 = v104;
    v72 = v130;
    v73 = v125;
    v74 = v127;
    View.tabViewStyle<A>(_:)(v70, v130, v125, v127, &protocol witness table for PageTabViewStyle);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v70, v73);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v64, v72);
    v141 = v72;
    v142 = v73;
    v143 = v74;
    v144 = &protocol witness table for PageTabViewStyle;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
    v76 = v103;
    v77 = v122;
    sub_1000B2074(v71, v122, OpaqueTypeConformance2);
    v78 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v78(v71, v77);
    sub_1000B1100(v76, v77, v71);
    v141 = v72;
    v79 = v129;
    v142 = v129;
    v143 = v74;
    v144 = &protocol witness table for LazyPageTabViewStyle;
    v80 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
    sub_1001589C0(v71, v77, v126, OpaqueTypeConformance2, v80, v81, v82, v83, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111);
    v84 = v71;
  }
  else
  {
    v85 = v118;
    v86 = TabView.init(selection:content:)(v44, sub_1001410C8, v132, v55, v63, v57, v121);
    v87 = v114;
    static TabViewStyle<>.lazyPage.getter(v86);
    v88 = v129;
    v89 = v130;
    v90 = (uint64_t)v113;
    v74 = v127;
    View.tabViewStyle<A>(_:)(v87, v130, v129, v127, &protocol witness table for LazyPageTabViewStyle);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v87, v88);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v85, v89);
    v141 = v89;
    v142 = v88;
    v143 = v74;
    v144 = &protocol witness table for LazyPageTabViewStyle;
    v91 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
    v76 = (uint64_t)v112;
    v77 = v126;
    sub_1000B2074(v90, v126, v91);
    v78 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v78(v90, v77);
    sub_1000B1100(v76, v77, v90);
    v73 = v125;
    v141 = v89;
    v142 = v125;
    v143 = v74;
    v144 = &protocol witness table for PageTabViewStyle;
    v92 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
    sub_1000B20B0(v90, v122, v77, v92, v91, v93, v94, v95, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111);
    v84 = v90;
    v79 = v129;
  }
  v78(v84, v77);
  v78(v76, v77);
  v96 = v130;
  v141 = v130;
  v142 = v73;
  v143 = v74;
  v144 = &protocol witness table for PageTabViewStyle;
  v97 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
  v141 = v96;
  v142 = v79;
  v143 = v74;
  v144 = &protocol witness table for LazyPageTabViewStyle;
  v98 = swift_getOpaqueTypeConformance2(&v141, &opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>, 1);
  v138 = v97;
  v139 = v98;
  v99 = v124;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v124);
  v100 = v131;
  sub_1000B1100(v131, v99, v128);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8))(v100, v99);
}

uint64_t sub_10006A1FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _BYTE v42[88];

  v37 = type metadata accessor for LocationViewComponent(0);
  v31 = *(_QWORD *)(v37 - 8);
  v4 = __chkstk_darwin(v37);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_1000BA294(&qword_100BC31F0);
  inited = swift_initStackObject(v9, v42);
  v11 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  *(_QWORD *)(inited + 32) = 1937207154;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v28 = inited;
    v30 = a2;
    v41 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(a1);
    sub_10009AAB0();
    v13 = 0;
    v29 = a1;
    v32 = a1 + 32;
    v33 = v12;
    do
    {
      v35 = v13;
      v14 = *(_QWORD *)(v32 + 8 * v13);
      if (*(_QWORD *)(v14 + 16))
      {
        v40 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v14);
        sub_10009AAB0();
        v15 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        v34 = v14;
        v36 = *(_QWORD *)(v31 + 72);
        sub_1001009A4(v14 + v15, (uint64_t)v8);
        v38 = 0;
        v39 = 0xE000000000000000;
        sub_1001009A4((uint64_t)v8, (uint64_t)v6);
        v16 = (char *)&loc_10006A3B4 + 4 * byte_1009DB67A[swift_getEnumCaseMultiPayload(v6, v37)];
        __asm { BR              X10 }
      }
      swift_bridgeObjectRetain(*(_QWORD *)(v32 + 8 * v13));
      v38 = _swiftEmptyArrayStorage;
      v17 = sub_1000BA294(&qword_100BF1280);
      v18 = sub_10006A714((unint64_t *)&qword_100BD35B0, &qword_100BF1280);
      v19 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v17, v18);
      v21 = v20;
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v22 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      {
        sub_1000DD5C4();
        v22 = v41;
      }
      v23 = v35;
      v24 = v22[2];
      if (v24 >= v22[3] >> 1)
      {
        sub_1000DD5C4();
        v23 = v35;
        v22 = v41;
      }
      v13 = v23 + 1;
      v22[2] = v24 + 1;
      v25 = &v22[2 * v24];
      v25[4] = v19;
      v25[5] = v21;
    }
    while (v13 != v33);
    swift_bridgeObjectRelease(v29);
    a2 = v30;
    v11 = v28;
  }
  else
  {
    v22 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v11 + 72) = sub_1000BA294(&qword_100BF1280);
  *(_QWORD *)(v11 + 48) = v22;
  v26 = Dictionary.init(dictionaryLiteral:)(v11);
  a2[3] = sub_1000BA294(&qword_100C15C40);
  a2[4] = sub_10006A714(&qword_100C15C48, &qword_100C15C40);
  sub_10005F164(a2);
  return ShortDescription.init(name:_:)(0xD000000000000019, 0x80000001009DB680, v26, &type metadata for LocationViewConfiguration);
}

uint64_t sub_10006A714(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1000B4444(0, a2);
    result = swift_getWitnessTable(v2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006A74C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EnvironmentState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006A788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnvironmentState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100C03DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A814(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + 11;
  swift_release(*a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4);
  v5 = (_QWORD *)((char *)a1 + a2[8]);
  v6 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)((char *)a1 + a2[9]);
  v9 = sub_1000BA294((uint64_t *)&unk_100C09CC0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LegibilityWeight(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)((char *)a1 + a2[10]);
  v12 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[11]), *((_BYTE *)a1 + a2[11] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[14]));
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)((char *)a1 + a2[15]));
}

void sub_10006A9A8()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  sub_1000986AC();
  v3 = v2;
  sub_1000D9280();
  sub_100098B6C();
  __chkstk_darwin(v4);
  sub_100099864();
  if ((v3 & 1) == 0)
  {
    sub_10009D4E0();
    static os_log_type_t.fault.getter(v5, v6, v7, v8, v9, v10, v11, v12);
    v13 = sub_1000F4190();
    if (sub_1000D0EB0(v13))
    {
      v14 = (uint8_t *)sub_100098710(12);
      v15 = sub_100098710(32);
      sub_1000ED358(v15);
      sub_1000BF2A0(4.8149e-34);
      v17 = sub_1000CE1C8(0x74616F6C464743, 0xE700000000000000, v16);
      sub_1000C58D0(v17);
      sub_10009D7A0((void *)&_mh_execute_header, v3, v0, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14);
      sub_1000988D8(v1);
      sub_1000986F0(v1);
      sub_1000986F0((uint64_t)v14);
    }

    sub_1000C10E0();
    sub_1000DB10C();
    sub_1000DF95C();
  }
  sub_100098640();
}

void sub_10006AAB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a6;
  v18 = type metadata accessor for DisplayMetrics(0);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1000BA294(&qword_100BC39D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100116C38();
  if ((v24 & 1) != 0)
  {
    v34 = a8;
    v25 = sub_1001155A4();
    sub_10016F680();
    if ((v25 & 1) != 0)
    {
      type metadata accessor for LocationHeaderView(0);
      v26 = type metadata accessor for Text.WritingMode(0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v26);
      Text.Measurements.size(of:in:writingMode:)(v35, v36, a7 & 1, v34, v23, INFINITY, INFINITY);
      sub_100021A14((uint64_t)v23, &qword_100BC39D0);
      sub_10002CD70();
    }
    else
    {
      v33 = a12;
      v30 = a11;
      v31 = a10;
      v29 = a9;
      v32 = type metadata accessor for LocationHeaderView(0);
      v27 = type metadata accessor for Text.WritingMode(0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v27);
      Text.Measurements.size(of:in:writingMode:)(a1, a2, a3 & 1, a4, v23, INFINITY, INFINITY);
      sub_100021A14((uint64_t)v23, &qword_100BC39D0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v27);
      Text.Measurements.size(of:in:writingMode:)(v35, v36, a7 & 1, v34, v23, INFINITY, INFINITY);
      sub_100021A14((uint64_t)v23, &qword_100BC39D0);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v27);
      Text.Measurements.size(of:in:writingMode:)(v29, v31, v30 & 1, v33, v23, INFINITY, INFINITY);
      sub_100021A14((uint64_t)v23, &qword_100BC39D0);
      sub_100117228(v28);
      sub_10041941C(v20);
      sub_10006BCFC((uint64_t)v20, type metadata accessor for DisplayMetrics);
    }
  }
}

uint64_t sub_10006ADC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006ADEC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t started;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD);
  __int128 v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139[8];

  v1 = v0;
  v2 = sub_1000BA294(&qword_100BD66F8);
  v135 = *(_QWORD *)(v2 - 8);
  v136 = v2;
  __chkstk_darwin(v2);
  v134 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for AppConfiguration(0);
  v130 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  *(_QWORD *)&v132 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CellularRadioAccessTechnology(0);
  v125 = *(_QWORD *)(v5 - 8);
  v126 = v5;
  __chkstk_darwin(v5);
  v124 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BD6700);
  __chkstk_darwin(v7);
  v131 = (void (*)(_QWORD))((char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v122 = type metadata accessor for LocationAccessData(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BD6708);
  __chkstk_darwin(v10);
  v138 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for StartMethod(0);
  v118 = *(_QWORD *)(started - 8);
  __chkstk_darwin(started);
  v117 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BD6710);
  __chkstk_darwin(v13);
  v137 = (uint64_t)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BD6718);
  __chkstk_darwin(v15);
  v116 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Locale.Language(0);
  v111 = *(_QWORD *)(v115 - 8);
  v17 = __chkstk_darwin(v115);
  v114 = (uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v110 = (uint64_t)&v108 - v19;
  v113 = type metadata accessor for Locale(0);
  v109 = *(_QWORD *)(v113 - 8);
  v20 = __chkstk_darwin(v113);
  v112 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v108 - v22;
  v24 = sub_1000BA294(&qword_100BC39D8);
  __chkstk_darwin(v24);
  v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Date(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TimeZone(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SessionData(0);
  v128 = *(_QWORD *)(v35 - 8);
  v129 = v35;
  v36 = __chkstk_darwin(v35);
  v123 = (char *)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v127 = (char *)&v108 - v39;
  v40 = static TimeZone.current.getter(v38);
  Date.init()(v40);
  v41 = TimeZone.secondsFromGMT(for:)(v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  if (v41 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v41 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v108 = v41;
  v43 = static Locale.current.getter(result);
  v44 = v110;
  Locale.language.getter(v43);
  v45 = *(uint64_t (**)(char *, uint64_t))(v109 + 8);
  v46 = v113;
  v47 = v45(v23, v113);
  Locale.Language.languageCode.getter(v47);
  v48 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
  v49 = v115;
  v48(v44, v115);
  v50 = type metadata accessor for Locale.LanguageCode(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v50) == 1)
  {
    sub_100021A14((uint64_t)v26, &qword_100BC39D8);
    v111 = 0xE100000000000000;
    v110 = 45;
  }
  else
  {
    v110 = Locale.LanguageCode.identifier.getter();
    v111 = v52;
    v51 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v26, v50);
  }
  v53 = v112;
  v54 = static Locale.current.getter(v51);
  v55 = v114;
  Locale.language.getter(v54);
  v56 = v45(v53, v46);
  v57 = (uint64_t)v116;
  Locale.Language.region.getter(v56);
  v48(v55, v49);
  v58 = type metadata accessor for Locale.Region(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58) == 1)
  {
    sub_100021A14(v57, &qword_100BD6718);
    v115 = 0xE100000000000000;
    v114 = 45;
  }
  else
  {
    v114 = Locale.Region.identifier.getter();
    v115 = v59;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
  }
  v60 = (char *)v1 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod, v139, 0, 0);
  v61 = v118;
  v62 = (uint64_t)v117;
  v63 = v60;
  v64 = started;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, v63, started);
  sub_10006B878(v62, (uint64_t (*)(_QWORD))&type metadata accessor for StartMethod, v137);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v64);
  v65 = v1[24];
  v66 = v1[25];
  sub_1000DB418(v1 + 21, v65);
  v67 = (uint64_t)v120;
  dispatch thunk of LocationAccessDataProviderType.locationAccessData.getter(v65, v66);
  sub_10006B878(v67, (uint64_t (*)(_QWORD))&type metadata accessor for LocationAccessData, v138);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v67, v122);
  v68 = v1[19];
  v69 = v1[20];
  sub_1000DB418(v1 + 16, v68);
  v70 = (uint64_t)v124;
  dispatch thunk of CellularRadioAccessTechnologyProviderType.cellularRadioAccessTechnology.getter(v68, v69);
  v71 = v131;
  sub_10006B878(v70, (uint64_t (*)(_QWORD))&type metadata accessor for CellularRadioAccessTechnology, (uint64_t)v131);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v70, v126);
  v72 = v1[34];
  v73 = v1[35];
  sub_1000DB418(v1 + 31, v72);
  v74 = v132;
  v75 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v72, v73);
  v76 = AppConfiguration.treatmentIDs.getter(v75);
  v77 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
  v78 = v133;
  v77(v74, v133);
  sub_10006B8E4(v76);
  v80 = v79;
  swift_bridgeObjectRelease(v76);
  v81 = v1[34];
  v82 = v1[35];
  sub_1000DB418(v1 + 31, v81);
  v83 = dispatch thunk of AppConfigurationManagerType.appConfiguration.getter(v81, v82);
  v84 = AppConfiguration.segmentSetIDs.getter(v83);
  v77(v74, v78);
  sub_10006B8E4(v84);
  v86 = v85;
  v87 = swift_bridgeObjectRelease(v84);
  v107 = v80;
  v88 = v127;
  v89 = SessionData.init(utcOffset:languageCode:countryCode:startMethod:productType:locationAccess:cellularRadioAccessTechnology:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:)(v108, v110, v111, v114, v115, v137, 0xD000000000000011, 0x80000001009F0D20, v87, v138, v71, v107, v86);
  v138 = v1[4];
  v90 = SessionManager.tracker.getter(v89);
  v91 = sub_1000BA294(&qword_100BCDC68);
  v137 = v91;
  v92 = type metadata accessor for DataEventTrait(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(unsigned __int8 *)(v93 + 80);
  v95 = (v94 + 32) & ~v94;
  v96 = v95 + *(_QWORD *)(v93 + 72);
  v133 = v94 | 7;
  v97 = swift_allocObject(v91, v96, v94 | 7);
  v132 = xmmword_10097CA50;
  *(_OWORD *)(v97 + 16) = xmmword_10097CA50;
  LODWORD(v130) = enum case for DataEventTrait.unique(_:);
  v131 = *(void (**)(_QWORD))(v93 + 104);
  v131(v97 + v95);
  sub_10000F1C8(&qword_100BD6720, (uint64_t (*)(uint64_t))&type metadata accessor for SessionData);
  v99 = v98;
  v100 = v129;
  Tracker.push<A>(data:traits:file:line:)(v88, v97, 0xD000000000000065, 0x80000001009FA420, 432, v129, v98);
  swift_release(v90);
  v101 = swift_bridgeObjectRelease(v97);
  v102 = v128;
  v103 = v123;
  (*(void (**)(char *, char *, uint64_t, __n128))(v128 + 16))(v123, v88, v100, v101);
  v104 = v134;
  SessionData.init(key:data:)(0x446E6F6973736573, 0xEB00000000617461, v103, v100, v99);
  v105 = swift_allocObject(v137, v96, v133);
  *(_OWORD *)(v105 + 16) = v132;
  ((void (*)(uint64_t, _QWORD, uint64_t))v131)(v105 + v95, v130, v92);
  SessionManager.push<A>(_:traits:file:line:)(v104, v105, 0xD000000000000065, 0x80000001009FA420, 434, v100, v99);
  v106 = swift_bridgeObjectRelease(v105);
  (*(void (**)(char *, uint64_t, __n128))(v135 + 8))(v104, v136, v106);
  return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v88, v100);
}

uint64_t sub_10006B878@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = Tracker.diagnosticSubmissionAllowed.getter();
  v7 = a2(0);
  if ((v6 & 1) != 0)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1, v7);
  v8 = sub_1000D9538();
  return sub_1000C4750(v8, v9, v10, v11);
}

void sub_10006B8E4(uint64_t a1)
{
  if ((Tracker.diagnosticSubmissionAllowed.getter() & 1) != 0)
    swift_bridgeObjectRetain(a1);
  sub_10004A298();
}

uint64_t sub_10006B91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1000B15F8(v8, v9);
  v10 = type metadata accessor for AutomationInfoProperty(0);
  if (a1 != a2)
  {
    v11 = *(int *)(v10 + 24);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_10006BD20(a1 + v11, type metadata accessor for AutomationInfo);
    v14 = type metadata accessor for AutomationInfo(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v14);
    v16 = EnumCaseMultiPayload;
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v19 = *v13;
      v20 = v13[1];
      v21 = *((_BYTE *)v13 + 16);
      sub_1000B2044(v19, v20, v21);
      *v12 = v19;
      v12[1] = v20;
      *((_BYTE *)v12 + 16) = v21;
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        v17 = type metadata accessor for AutomationCellInfo(0);
        switch(swift_getEnumCaseMultiPayload(v13, v17))
        {
          case 0u:
            goto LABEL_8;
          case 1u:
            goto LABEL_10;
          case 2u:
            *v12 = *v13;
            v18 = v13[1];
            v12[1] = v18;
            swift_bridgeObjectRetain(v18);
            goto LABEL_13;
          case 3u:
            goto LABEL_11;
          case 4u:
            *v12 = *v13;
            v29 = v13[1];
            v12[1] = v29;
            swift_bridgeObjectRetain(v29);
            v23 = v12;
            v24 = v17;
            v25 = 4;
            goto LABEL_22;
          case 5u:
            *v12 = *v13;
            v30 = v13[1];
            v12[1] = v30;
            swift_bridgeObjectRetain(v30);
            v23 = v12;
            v24 = v17;
            v25 = 5;
            goto LABEL_22;
          case 6u:
            v31 = type metadata accessor for WeatherMapOverlayKind(0);
            (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v12, v13, v31);
            v23 = v12;
            v24 = v17;
            v25 = 6;
            goto LABEL_22;
          case 7u:
            *v12 = *v13;
            v32 = v13[1];
            v12[1] = v32;
            swift_bridgeObjectRetain(v32);
            v23 = v12;
            v24 = v17;
            v25 = 7;
            goto LABEL_22;
          case 8u:
            *v12 = *v13;
            v33 = v13[1];
            v12[1] = v33;
            v12[2] = v13[2];
            v34 = v13[3];
            v12[3] = v34;
            v12[4] = v13[4];
            v35 = v13[5];
            v12[5] = v35;
            swift_bridgeObjectRetain(v33);
            swift_bridgeObjectRetain(v34);
            swift_bridgeObjectRetain(v35);
            v23 = v12;
            v24 = v17;
            v25 = 8;
            goto LABEL_22;
          case 9u:
            *v12 = *v13;
            v36 = v13[1];
            v12[1] = v36;
            v12[2] = v13[2];
            v37 = v13[3];
            v12[3] = v37;
            swift_bridgeObjectRetain(v36);
            swift_bridgeObjectRetain(v37);
            v23 = v12;
            v24 = v17;
            v25 = 9;
            goto LABEL_22;
          case 0xAu:
            *v12 = *v13;
            v38 = v13[1];
            v12[1] = v38;
            swift_bridgeObjectRetain(v38);
            v23 = v12;
            v24 = v17;
            v25 = 10;
            goto LABEL_22;
          case 0xBu:
            *v12 = *v13;
            v39 = v13[1];
            v12[1] = v39;
            v12[2] = v13[2];
            v40 = v13[3];
            v12[3] = v40;
            swift_bridgeObjectRetain(v39);
            swift_bridgeObjectRetain(v40);
            v23 = v12;
            v24 = v17;
            v25 = 11;
            goto LABEL_22;
          default:
            goto LABEL_9;
        }
      }
      v17 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload(v13, v17))
      {
        case 0u:
LABEL_8:
          *v12 = *v13;
          v22 = v13[1];
          v12[1] = v22;
          swift_bridgeObjectRetain(v22);
          v23 = v12;
          v24 = v17;
          v25 = 0;
          goto LABEL_22;
        case 1u:
LABEL_10:
          *v12 = *v13;
          v26 = v13[1];
          v12[1] = v26;
          swift_bridgeObjectRetain(v26);
          v23 = v12;
          v24 = v17;
          v25 = 1;
          goto LABEL_22;
        case 2u:
          v28 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v12, v13, v28);
LABEL_13:
          v23 = v12;
          v24 = v17;
          v25 = 2;
          goto LABEL_22;
        case 3u:
LABEL_11:
          *v12 = *v13;
          v27 = v13[1];
          v12[1] = v27;
          swift_bridgeObjectRetain(v27);
          v23 = v12;
          v24 = v17;
          v25 = 3;
LABEL_22:
          swift_storeEnumTagMultiPayload(v23, v24, v25);
          break;
        default:
LABEL_9:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  return a1;
}

void sub_10006BCFC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_1000BE9A8(a1, a2);
  sub_10003BC44(v2);
  sub_10004A298();
}

uint64_t sub_10006BD20(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10006BD5C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_1000C51C8(*(_QWORD *)(v2 - 8));
  sub_10004A298();
}

double sub_10006BD8C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  double result;

  if (a3 <= 1u)
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  return result;
}

void sub_10006BDA4()
{
  sub_10017B048();
}

void sub_10006BDC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1000BA294(&qword_100BCE2B8);
  v3 = *(_QWORD *)(type metadata accessor for LocationViewComponent(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v2, v6 + v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_10097CA50;
  sub_1001009A4(a1, v7 + v6);
  sub_1000FFCC8(v7);
  swift_setDeallocating(v7);
  sub_10006BE54();
  sub_100079F70();
}

uint64_t sub_10006BE54()
{
  return sub_1000F5474(type metadata accessor for LocationViewComponent);
}

uint64_t sub_10006BE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BE4BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_10006BEA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10011DFC4();
  sub_1000C113C();
  sub_100099774();
  sub_100818F18();
  return sub_10006BF38(v1, v7, v8, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + v4 + 16), *(_QWORD *)(v0 + v4 + 24), v0 + v6, *(_BYTE *)(v0 + v5));
}

double sub_10006BF38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a8;
  v38 = a6;
  v39 = a7;
  v32 = a5;
  v33 = a3;
  HIDWORD(v34) = a11;
  v35 = a9;
  v36 = a10;
  updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  v15 = __chkstk_darwin(updated);
  v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *a1;
  v19 = a1[1];
  v20 = static os_signpost_type_t.end.getter(v15);
  v40 = a2;
  v21 = *(_QWORD *)(a2 + 408);
  v22 = sub_1000BA294(&qword_100BC3C38);
  v23 = swift_allocObject(v22, 72, 7);
  *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
  v37 = a4;
  v24 = Location.name.getter();
  v26 = v25;
  *(_QWORD *)(v23 + 56) = &type metadata for String;
  *(_QWORD *)(v23 + 64) = sub_1000B2E24();
  *(_QWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 40) = v26;
  v31 = 2;
  v27 = v32;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v20, &_mh_execute_header, v21, "Weather:resolveCountryCode", 26, 2, v33, "location %{private}s", 20, v31, v23);
  swift_bridgeObjectRelease(v23);
  *v17 = v18;
  v17[1] = v19;
  swift_storeEnumTagMultiPayload(v17, updated, 5);
  sub_1000ED0FC(v18, v19);
  sub_1000C7114((uint64_t)v17);
  sub_1000215BC((uint64_t)v17, type metadata accessor for WeatherDataUpdateRequestLog.Event);
  v28 = 0;
  v29 = 0;
  if (v19 >= 2)
  {
    swift_bridgeObjectRetain(v19);
    v28 = v18;
    v29 = v19;
  }
  sub_1000FBA60(v37, v38, v39, v41, v35, v36, BYTE4(v34) & 1, v28, v29, v27, v32, v33, v34, v35, v36, v37, v38, v39, v40,
    v41,
    v42,
    v43);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
  return result;
}

_QWORD *sub_10006C124(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  _QWORD v103[6];

  v4 = a2[3];
  v5 = a2[4];
  sub_1000DB418(a2, v4);
  v6 = sub_1000BA294(&qword_100BF7538);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v6, v6, v4, v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v8 = result;
  sub_10001958C(a1);
  v9 = a2[3];
  v10 = a2[4];
  sub_1000DB418(a2, v9);
  v11 = sub_1000BA294(&qword_100BF75E0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v11, v11, v9, v10);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149708, v12, v103);
  swift_release(v12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v13 = a2[3];
  v14 = a2[4];
  sub_1000DB418(a2, v13);
  v15 = type metadata accessor for NotificationsStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v15, v15, v13, v14);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v16 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_10014972C, v16, v103);
  swift_release(v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v17 = a2[3];
  v18 = a2[4];
  sub_1000DB418(a2, v17);
  v19 = type metadata accessor for NotificationsOptInStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v19, v19, v17, v18);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v20 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149728, v20, v103);
  swift_release(v20);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v21 = a2[3];
  v22 = a2[4];
  sub_1000DB418(a2, v21);
  v23 = type metadata accessor for SavedLocationsStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v23, v23, v21, v22);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v24 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149724, v24, v103);
  swift_release(v24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v25 = a2[3];
  v26 = a2[4];
  sub_1000DB418(a2, v25);
  v27 = type metadata accessor for ReverseGeocodingStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v27, v27, v25, v26);
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v28 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149720, v28, v103);
  v96 = v28;
  swift_release(v28);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v29 = a2[3];
  v30 = a2[4];
  sub_1000DB418(a2, v29);
  v31 = type metadata accessor for WeatherDataStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v31, v31, v29, v30);
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v32 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_10014971C, v32, v103);
  v94 = v32;
  swift_release(v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v33 = a2[3];
  v34 = a2[4];
  sub_1000DB418(a2, v33);
  v35 = type metadata accessor for WeatherMapOverlayDataStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v35, v35, v33, v34);
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v36 = (uint64_t)result;
  v95 = v24;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149718, v36, v103);
  v93 = v36;
  swift_release(v36);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v37 = a2[3];
  v38 = a2[4];
  sub_1000DB418(a2, v37);
  v39 = type metadata accessor for WidgetReloadStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v39, v39, v37, v38);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v40 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149714, v40, v103);
  swift_release(v40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v41 = a2[3];
  v42 = a2[4];
  sub_1000DB418(a2, v41);
  v43 = type metadata accessor for LocationViewerStoreObserver(0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v43, v43, v41, v42);
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v44 = (uint64_t)result;
  v91 = v20;
  v92 = v16;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_100149710, v44, v103);
  swift_release(v44);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v45 = a2[3];
  v46 = a2[4];
  sub_1000DB418(a2, v45);
  v47 = type metadata accessor for OpenL2HandlerObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v47, v47, v45, v46);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v48 = (uint64_t)result;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_10014970C, v48, v103);
  swift_release(v48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v49 = a2[3];
  v50 = a2[4];
  sub_1000DB418(a2, v49);
  v51 = type metadata accessor for InteractionDonationStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v51, v51, v49, v50);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v52 = (uint64_t)result;
  v89 = v12;
  v90 = v8;
  swift_retain();
  sub_10006CB54(0, (uint64_t)sub_1000A4D60, v52, v103);
  swift_release(v52);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  v53 = a2[3];
  v54 = a2[4];
  sub_1000DB418(a2, v53);
  v55 = sub_1000BA294(&qword_100BF0328);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v55, v55, v53, v54);
  if (!v102)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v88 = v40;
  sub_10003C800(&v101, (uint64_t)v103);
  v56 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  v57 = (void *)static OS_dispatch_queue.main.getter(v56);
  sub_10003B59C((uint64_t)v103, (uint64_t)&v101);
  v58 = swift_allocObject(&unk_100B846E8, 56, 7);
  sub_10003C800(&v101, v58 + 16);
  sub_10006CB54(v57, (uint64_t)sub_1000A4D68, v58, &v101);

  swift_release(v58);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v101);
  v59 = a2[3];
  v60 = a2[4];
  sub_1000DB418(a2, v59);
  v61 = type metadata accessor for WeatherConditionBackgroundStoreObserver(0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v61, v61, v59, v60);
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v62 = (uint64_t)result;
  v87 = v44;
  v63 = (void *)static OS_dispatch_queue.main.getter(result);
  swift_retain();
  sub_10006CB54(v63, (uint64_t)sub_1000A4D64, v62, &v101);

  swift_release(v62);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v101);
  v65 = a2[3];
  v64 = a2[4];
  sub_1000DB418(a2, v65);
  v66 = type metadata accessor for TimeStoreObserver();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v66, v66, v65, v64);
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v67 = (uint64_t)result;
  v68 = (void *)static OS_dispatch_queue.main.getter(result);
  swift_retain();
  sub_10006CB54(v68, (uint64_t)sub_1000A4D5C, v67, &v101);

  swift_release(v67);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v101);
  v69 = a2[3];
  v70 = a2[4];
  sub_1000DB418(a2, v69);
  v71 = sub_1000BA294(&qword_100BE00B0);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v71, v71, v69, v70);
  if (!v100)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v72 = sub_10003C800(&v99, (uint64_t)&v101);
  v73 = (void *)static OS_dispatch_queue.main.getter(v72);
  sub_10003B59C((uint64_t)&v101, (uint64_t)&v99);
  v74 = swift_allocObject(&unk_100B84710, 56, 7);
  sub_10003C800(&v99, v74 + 16);
  sub_10006CB54(v73, (uint64_t)sub_1000A4D1C, v74, &v99);

  swift_release(v74);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v99);
  v75 = a2[3];
  v76 = a2[4];
  sub_1000DB418(a2, v75);
  v77 = sub_1000BA294(&qword_100BF74D8);
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v77, v77, v75, v76);
  if (!v98)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v78 = sub_10003C800(&v97, (uint64_t)&v99);
  v79 = (void *)static OS_dispatch_queue.main.getter(v78);
  sub_10003B59C((uint64_t)&v99, (uint64_t)&v97);
  v80 = swift_allocObject(&unk_100B84738, 56, 7);
  sub_10003C800(&v97, v80 + 16);
  sub_10006CB54(v79, (uint64_t)sub_100614ABC, v80, &v97);

  swift_release(v80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v97);
  v81 = a2[3];
  v82 = a2[4];
  sub_1000DB418(a2, v81);
  result = dispatch thunk of ResolverType.resolve<A>(_:name:)(&v97, &type metadata for Bool, 0xD000000000000017, 0x8000000100A0E140, &type metadata for Bool, v81, v82);
  if (v97 == 2)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if ((v97 & 1) == 0)
  {
    swift_release(v89);
    swift_release(v92);
    swift_release(v91);
    swift_release(v95);
    swift_release(v96);
    swift_release(v94);
    swift_release(v93);
    swift_release(v88);
    swift_release(v87);
    swift_release(v48);
    swift_release(v52);
    swift_release(v62);
    swift_release(v67);
    swift_release(v90);
LABEL_23:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v99);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v101);
    return (_QWORD *)_s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v103);
  }
  v83 = a2[3];
  v84 = a2[4];
  sub_1000DB418(a2, v83);
  v85 = type metadata accessor for DiagnosticManager();
  result = (_QWORD *)dispatch thunk of ResolverType.resolve<A>(_:)(v85, v85, v83, v84);
  if (result)
  {
    v86 = (uint64_t)result;
    swift_retain();
    sub_10006CB54(0, (uint64_t)sub_100614AC4, v86, &v97);
    swift_release(v89);
    swift_release(v92);
    swift_release(v91);
    swift_release(v95);
    swift_release(v96);
    swift_release(v94);
    swift_release(v93);
    swift_release(v88);
    swift_release(v87);
    swift_release(v48);
    swift_release(v52);
    swift_release(v62);
    swift_release(v67);
    swift_release(v90);
    swift_release_n(v86, 2);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(&v97);
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

void sub_10006CB54(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = sub_1000A0794(0, (unint64_t *)&qword_100BC29A0, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    if (a1)
      v16 = a1;
    else
      v16 = *(id *)(v5 + 48);
    v17 = sub_1000BA294(&qword_100BF7690);
    swift_allocObject(v17, 48, 7);
    v18 = sub_10006CD54(a2, a3, (uint64_t)v16);
    swift_unknownObjectWeakAssign(v18 + 4, v5);
    swift_beginAccess(v5 + 40, v25, 33, 0);
    v19 = a1;
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v21 = *(_QWORD *)((*(_QWORD *)(v5 + 40) & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_10006CD50(v21);
    v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
    specialized Array._endMutation()(v22);
    swift_endAccess(v25);
    a4[3] = v17;
    sub_10003D2DC(&qword_100BF7698, &qword_100BF7690);
    a4[4] = v23;
    *a4 = v18;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10006CD24(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;

  v2 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18);
  if (result + 1 > (uint64_t)(v2 >> 1))
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v2 > 1);
  return result;
}

_QWORD *sub_10006CD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_unknownObjectWeakInit(v3 + 4, 0);
  v3[2] = a1;
  v3[3] = a2;
  v3[5] = a3;
  return v3;
}

BOOL sub_10006CD98(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;

  v4 = type metadata accessor for ContentStatusBanner(0);
  __chkstk_darwin(v4);
  v6 = (unsigned __int8 *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000BA294(&qword_100BC4B48);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BC3620);
  __chkstk_darwin(v10);
  v12 = (unsigned __int8 *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v24 - v17;
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  v20 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_100037768((uint64_t)a1 + *(int *)(v20 + 20), (uint64_t)v18, &qword_100BC3620);
  sub_100037768((uint64_t)a2 + *(int *)(v20 + 20), (uint64_t)v15, &qword_100BC3620);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100037768((uint64_t)v18, (uint64_t)v9, &qword_100BC3620);
  sub_100037768((uint64_t)v15, v21, &qword_100BC3620);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v4) == 1)
  {
    sub_100021A14((uint64_t)v15, &qword_100BC3620);
    sub_100021A14((uint64_t)v18, &qword_100BC3620);
    if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) == 1)
    {
      sub_100021A14((uint64_t)v9, &qword_100BC3620);
      return 1;
    }
    goto LABEL_11;
  }
  sub_100037768((uint64_t)v9, (uint64_t)v12, &qword_100BC3620);
  if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) == 1)
  {
    sub_100021A14((uint64_t)v15, &qword_100BC3620);
    sub_100021A14((uint64_t)v18, &qword_100BC3620);
    sub_1000BF3B4();
LABEL_11:
    sub_100021A14((uint64_t)v9, &qword_100BC4B48);
    return 0;
  }
  sub_10007802C(v21, (uint64_t)v6, type metadata accessor for ContentStatusBanner);
  v22 = sub_10007BDA4(v12, v6);
  sub_1000BF3B4();
  sub_100021A14((uint64_t)v15, &qword_100BC3620);
  sub_100021A14((uint64_t)v18, &qword_100BC3620);
  sub_1000BF3B4();
  sub_100021A14((uint64_t)v9, &qword_100BC3620);
  return v22;
}

uint64_t sub_10006D088(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10006D0BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  char *v80;
  _QWORD v81[8];
  __int128 v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v93 = *v1;
  type metadata accessor for LocationsState(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100098728();
  v6 = v5 - v4;
  sub_1000BA294((uint64_t *)&unk_100C0D170);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = v9 - v8;
  v114 = type metadata accessor for WeatherDataAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_1000986FC();
  v117 = v12;
  sub_10009D2A4();
  __chkstk_darwin(v13);
  sub_100079F7C();
  v128 = v14;
  v15 = sub_10009876C();
  v113 = type metadata accessor for EnvironmentAction(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_1000986FC();
  v119 = v17;
  sub_10009D2A4();
  __chkstk_darwin(v18);
  sub_100079F7C();
  v123 = v19;
  v20 = sub_10009876C();
  v109 = type metadata accessor for Location(v20);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  sub_100088FDC();
  v106 = v21;
  v22 = sub_10009876C();
  v112 = type metadata accessor for LocationViewAction(v22);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_1000986FC();
  v118 = v24;
  sub_10009D2A4();
  __chkstk_darwin(v25);
  sub_100079F7C();
  v127 = v26;
  v27 = sub_10009876C();
  v92 = type metadata accessor for ViewState.SecondaryViewState(v27);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_100088FDC();
  v91 = v29;
  v30 = sub_10009876C();
  v102 = type metadata accessor for ModalViewState(v30);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_1000986FC();
  v96 = v32;
  sub_10009D2A4();
  __chkstk_darwin(v33);
  v90 = (char *)v81 - v34;
  sub_10009D2A4();
  __chkstk_darwin(v35);
  v88 = (char *)v81 - v36;
  sub_10009D2A4();
  __chkstk_darwin(v37);
  sub_100079F7C();
  v89 = v38;
  v39 = sub_10009876C();
  v99 = type metadata accessor for ViewState(v39);
  sub_1000B42B0();
  v41 = __chkstk_darwin(v40);
  v43 = (char *)v81 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v45 = (char *)v81 - v44;
  v111 = type metadata accessor for ModalViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  sub_1000986FC();
  v121 = v47;
  sub_10009D2A4();
  __chkstk_darwin(v48);
  sub_100079F7C();
  v125 = v49;
  v50 = sub_10009876C();
  v95 = type metadata accessor for LocationViewerViewAction(v50);
  sub_1000B42B0();
  __chkstk_darwin(v51);
  sub_1000986FC();
  v98 = v52;
  sub_10009D2A4();
  __chkstk_darwin(v53);
  sub_100079F7C();
  v100 = v54;
  v55 = sub_10009876C();
  v116 = type metadata accessor for NotificationsOptInAction(v55);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_1000986FC();
  v115 = v57;
  sub_10009D2A4();
  __chkstk_darwin(v58);
  v124 = (char *)v81 - v59;
  sub_10009D2A4();
  __chkstk_darwin(v60);
  sub_100079F7C();
  v104 = v61;
  v62 = sub_10009876C();
  v94 = type metadata accessor for ListViewAction(v62);
  sub_1000B42B0();
  __chkstk_darwin(v63);
  sub_1000986FC();
  v97 = v64;
  sub_10009D2A4();
  __chkstk_darwin(v65);
  sub_100079F7C();
  v101 = v66;
  v67 = sub_10009876C();
  v110 = type metadata accessor for ViewAction(v67);
  sub_1000B42B0();
  __chkstk_darwin(v68);
  sub_1000986FC();
  v120 = v69;
  sub_10009D2A4();
  __chkstk_darwin(v70);
  sub_100079F7C();
  v126 = v71;
  v72 = sub_10009876C();
  v73 = type metadata accessor for MainAction(v72);
  v74 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  sub_100098728();
  v77 = v76 - v75;
  v122 = v1;
  sub_10000A11C(a1);
  v108 = a1;
  result = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(result + 16))
  {
    v86 = v10;
    v87 = v6;
    v103 = v122 + 9;
    v79 = result + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
    v84 = v45;
    v83 = v45 + 8;
    v85 = v43;
    v81[6] = v43 + 8;
    v105 = result;
    swift_bridgeObjectRetain(result);
    v81[5] = 0xD000000000000013;
    v81[3] = "temperature";
    v81[4] = 0x80000001009EFA90;
    v81[2] = "authorizedWhenInUse";
    v82 = xmmword_1009890E0;
    v81[7] = (char *)&type metadata for () + 8;
    sub_100080C0C(v79, v77, type metadata accessor for MainAction);
    v80 = (char *)&loc_10006D5F8 + dword_10020BFFC[swift_getEnumCaseMultiPayload(v77, v73)];
    __asm { BR              X9 }
  }
  return result;
}

unint64_t sub_10006E924()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC9EC8;
  if (!qword_100BC9EC8)
  {
    v1 = type metadata accessor for WeatherCondition(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherCondition, v1);
    atomic_store(result, (unint64_t *)&qword_100BC9EC8);
  }
  return result;
}

void sub_10006E964(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(_QWORD);
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t (*v102)(uint64_t, _QWORD);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t (*v154)(uint64_t, _QWORD);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  void **v183;
  uint64_t v184;
  uint64_t (*v185)();
  uint64_t v186;
  _QWORD v187[2];
  char v188[8];
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v171 = *v1;
  v175 = sub_1000BA294(&qword_100BCD780);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v178 = v4;
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_1000986FC();
  v172 = v6;
  sub_10009D2A4();
  __chkstk_darwin(v7);
  v177 = (uint64_t)&v155 - v8;
  sub_10009D2A4();
  __chkstk_darwin(v9);
  v176 = (char *)&v155 - v10;
  v11 = sub_1000BA294(&qword_100BCB130);
  sub_1000B43A4(v11, (uint64_t)v188);
  v162 = v12;
  sub_10009D98C();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v15 = sub_1000987B4(v14);
  v16 = type metadata accessor for DispatchWorkItemFlags(v15);
  sub_1000B43A4(v16, (uint64_t)&v190);
  v166 = v17;
  sub_10009D98C();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v20 = sub_1000987B4(v19);
  v21 = type metadata accessor for DispatchQoS(v20);
  sub_1000B43A4(v21, (uint64_t)&v189);
  v165 = v22;
  sub_10009D98C();
  __chkstk_darwin(v23);
  sub_100088FDC();
  v164 = v24;
  v25 = sub_1000BA294(&qword_100BCB9F8);
  sub_1000B43A4(v25, (uint64_t)&v186);
  v159 = v26;
  sub_10009D98C();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v29 = sub_1000987B4(v28);
  v30 = type metadata accessor for WeatherDataModel(v29);
  sub_1000B43A4(v30, (uint64_t)&v191);
  v169 = v31;
  sub_10009D98C();
  __chkstk_darwin(v32);
  sub_100088FDC();
  v168 = v33;
  sub_1000BA294(&qword_100BC3380);
  sub_1000B42B0();
  __chkstk_darwin(v34);
  sub_1000986FC();
  v174 = v35;
  sub_10009D2A4();
  __chkstk_darwin(v36);
  v38 = (char *)&v155 - v37;
  sub_1000BA294(&qword_100BC3460);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_1000986FC();
  v170 = v40;
  sub_10009D2A4();
  __chkstk_darwin(v41);
  v43 = (char *)&v155 - v42;
  v44 = sub_100098AA0();
  v181 = *(_QWORD *)(v44 - 8);
  v182 = (void *)v44;
  v45 = *(_QWORD *)(v181 + 64);
  v46 = __chkstk_darwin(v44);
  v167 = (uint64_t)&v155 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v180 = (uint64_t)&v155 - v47;
  type metadata accessor for LocationViewerActiveLocationState(0);
  sub_1000B42B0();
  __chkstk_darwin(v48);
  sub_100098728();
  v51 = v50 - v49;
  v52 = type metadata accessor for ViewState.SecondaryViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v53);
  sub_100098728();
  v56 = (uint64_t *)(v55 - v54);
  v57 = (int *)type metadata accessor for ViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v58);
  sub_100098728();
  v61 = v60 - v59;
  v179 = a1;
  sub_100084050(*(_QWORD *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v60 - v59, v62);
  sub_100084050(v61 + v57[5], (uint64_t)v56, type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload(v56, v52) == 1)
  {
    sub_1000215BC((uint64_t)v56, type metadata accessor for ViewState.SecondaryViewState);
LABEL_3:
    sub_1000215BC(v61, type metadata accessor for ViewState);
    return;
  }
  v63 = *v56;
  if (*(_QWORD *)(v61 + v57[9] + 8) == 1)
  {
    v64 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    objc_msgSend(v64, "userInterfaceIdiom");

    if ((*(_BYTE *)(v61 + v57[7]) & 1) == 0)
    {
      swift_release(v63);
      goto LABEL_3;
    }
  }
  sub_1000215BC(v61, type metadata accessor for ViewState);
  sub_100084050(v63 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v51, type metadata accessor for LocationViewerActiveLocationState);
  v65 = (uint64_t)v182;
  sub_100088FC8(v51, 1, (uint64_t)v182);
  if (v111)
  {
    v66 = v63;
LABEL_45:
    swift_release(v66);
    return;
  }
  v157 = v63;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 32);
  v67(v180, v51, v65);
  v68 = v179;
  v69 = *(_QWORD *)(*(_QWORD *)(v179 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  sub_1000878DC();
  v70 = sub_1000C1804();
  sub_1000EED10(v70, v71, v69);
  sub_1000986C4();
  sub_10009895C();
  v156 = type metadata accessor for LocationWeatherDataState(0);
  v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v156);
  if (v72 == 1)
  {
    v73 = &qword_100BC3380;
    v74 = (uint64_t)v38;
LABEL_15:
    sub_100021A14(v74, v73);
    v82 = v173;
    v77 = (uint64_t)v182;
    goto LABEL_21;
  }
  sub_1000EADE8();
  sub_1000215BC((uint64_t)v38, type metadata accessor for LocationWeatherDataState);
  v75 = type metadata accessor for WeatherData(0);
  v76 = sub_100088FC8((uint64_t)v43, 1, v75);
  if (v111)
  {
    v73 = &qword_100BC3460;
    v74 = (uint64_t)v43;
    goto LABEL_15;
  }
  sub_1000C3FC4(v76, (uint64_t)&v43[*(int *)(v75 + 24)]);
  sub_1000215BC((uint64_t)v43, type metadata accessor for WeatherData);
  v78 = v158;
  WeatherDataModel.hourlyForecast.getter(v79);
  sub_100099254(v75, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
  v80 = Forecast.forecast.getter(v160);
  sub_1000988C4();
  sub_100099254(v78, v81);
  v82 = v173;
  swift_bridgeObjectRetain(v80);
  sub_10068D01C();
  if (v83)
  {
    swift_bridgeObjectRetain(v80);
    sub_100947FD4();
    v85 = v84;
    swift_bridgeObjectRelease_n(v80, 2);
    sub_1000986C4();
    v77 = (uint64_t)v182;
    if ((v85 & 1) != 0)
    {
      swift_bridgeObjectRelease(v80);
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v80);
    v77 = (uint64_t)v182;
  }
  v86 = sub_10009FFE0();
  v182 = (void *)static OS_dispatch_queue.main.getter(v86);
  v87 = sub_100098740((uint64_t)&unk_100B8DA10, 24);
  sub_1000E7424(v87);
  v88 = sub_100098740((uint64_t)&unk_100B8DA88, 32);
  *(_QWORD *)(v88 + 16) = v86;
  *(_QWORD *)(v88 + 24) = v80;
  v185 = sub_100739574;
  v186 = v88;
  v183 = _NSConcreteStackBlock;
  v184 = 1107296256;
  v89 = sub_1000DB0F8((uint64_t)&unk_100B8DAA0);
  swift_release(v186);
  v90 = v164;
  static DispatchQoS.unspecified.getter(v91);
  v183 = (void **)_swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v93 = v92;
  sub_1000BA294(&qword_100BD4F10);
  sub_100121014();
  sub_1000DBD3C();
  v95 = *(_QWORD *)(v94 - 256);
  dispatch thunk of SetAlgebra.init<A>(_:)(v96, v97, v98, v95, v93);
  v99 = v182;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v90, v67, v89);
  _Block_release(v89);

  v100 = sub_1000C6830();
  v68 = v179;
  v101(v100, v95);
  sub_1000988C4();
  sub_1000DA7BC(v90, v102);
LABEL_21:
  v103 = v174;
  v104 = *(_QWORD *)(*(_QWORD *)(v68 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain(v104);
  v105 = sub_1000C1804();
  sub_1000EED10(v105, v106, v104);
  sub_1000986C4();
  swift_bridgeObjectRelease(v104);
  sub_100088FC8(v103, 1, v156);
  if (v111)
  {
    v107 = &qword_100BC3380;
    v108 = v103;
LABEL_27:
    sub_100021A14(v108, v107);
    goto LABEL_28;
  }
  v109 = v170;
  sub_1000EADE8();
  sub_1000215BC(v103, type metadata accessor for LocationWeatherDataState);
  v110 = type metadata accessor for WeatherData(0);
  v112 = sub_100088FC8(v109, 1, v110);
  if (v111)
  {
    v107 = &qword_100BC3460;
    v108 = v109;
    goto LABEL_27;
  }
  sub_1000C3FC4(v112, v109 + *(int *)(v110 + 24));
  sub_1000215BC(v109, type metadata accessor for WeatherData);
  v124 = v161;
  WeatherDataModel.dailyForecast.getter();
  sub_100099254(v110, *(uint64_t (**)(uint64_t, uint64_t))(v103 + 8));
  v125 = Forecast.forecast.getter(v163);
  sub_1000988C4();
  sub_100099254(v124, v126);
  sub_1000878DC();
  sub_10068D334();
  if (v127)
  {
    sub_1000878DC();
    sub_10094A284();
    v129 = v128;
    swift_bridgeObjectRelease_n(v125, 2);
    sub_1000986C4();
    if ((v129 & 1) != 0)
    {
      sub_10009895C();
      goto LABEL_28;
    }
  }
  else
  {
    sub_10009895C();
  }
  v133 = sub_10009FFE0();
  v182 = (void *)static OS_dispatch_queue.main.getter(v133);
  v134 = sub_100098740((uint64_t)&unk_100B8DA10, 24);
  sub_1000E7424(v134);
  v135 = v181;
  v136 = v167;
  sub_1000CD1DC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 16));
  v137 = *(unsigned __int8 *)(v135 + 80);
  v138 = (v137 + 24) & ~v137;
  v139 = (v45 + v138 + 7) & 0xFFFFFFFFFFFFFFF8;
  v140 = swift_allocObject(&unk_100B8DA38, v139 + 8, v137 | 7);
  *(_QWORD *)(v140 + 16) = v133;
  sub_1000D9244(v140 + v138, v136);
  *(_QWORD *)(v140 + v139) = v125;
  v185 = sub_10073950C;
  v186 = v140;
  v183 = _NSConcreteStackBlock;
  v184 = 1107296256;
  v141 = sub_1000DB0F8((uint64_t)&unk_100B8DA50);
  swift_release(v186);
  v142 = v164;
  static DispatchQoS.unspecified.getter(v143);
  v183 = (void **)_swiftEmptyArrayStorage;
  sub_100086DA4((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v145 = v144;
  sub_1000BA294(&qword_100BD4F10);
  sub_100121014();
  sub_1000DBD3C();
  v147 = *(_QWORD *)(v146 - 256);
  dispatch thunk of SetAlgebra.init<A>(_:)(v148, v149, v150, v147, v145);
  v151 = v182;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v142, v67, v141);
  _Block_release(v141);

  v152 = sub_1000C6830();
  v153(v152, v147);
  sub_1000988C4();
  sub_1000DA7BC(v142, v154);
LABEL_28:
  v113 = (uint64_t)v176;
  sub_1000CD1DC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 16));
  sub_1000C4510(v113);
  v114 = v82 + OBJC_IVAR____TtC7Weather27LocationViewerStoreObserver_lastViewedLocationIdentifier;
  swift_beginAccess(v82 + OBJC_IVAR____TtC7Weather27LocationViewerStoreObserver_lastViewedLocationIdentifier, &v183, 0, 0);
  v115 = v178;
  v116 = v178 + *(int *)(v175 + 48);
  sub_10006F614(v113, v178);
  sub_10006F614(v114, v116);
  sub_100088FC8(v115, 1, v77);
  v117 = v177;
  if (v111)
  {
    sub_100021A14(v113, &qword_100BCD680);
    sub_100088FC8(v116, 1, v77);
    if (v111)
    {
      sub_100021A14(v115, &qword_100BCD680);
LABEL_44:
      sub_1000CFF14(v180);
      v66 = v157;
      goto LABEL_45;
    }
    goto LABEL_36;
  }
  sub_10006F614(v115, v177);
  sub_100088FC8(v116, 1, v77);
  if (v118)
  {
    sub_100021A14(v113, &qword_100BCD680);
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v117, v77);
LABEL_36:
    sub_100021A14(v115, &qword_100BCD780);
    goto LABEL_37;
  }
  v130 = v167;
  sub_1000D9244(v167, v116);
  sub_100086DA4((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t)&protocol conformance descriptor for Location.Identifier);
  v132 = dispatch thunk of static Equatable.== infix(_:_:)(v117, v130, v77, v131);
  sub_1000CFF14(v130);
  sub_100021A14(v113, &qword_100BCD680);
  sub_1000CFF14(v117);
  sub_100021A14(v115, &qword_100BCD680);
  if ((v132 & 1) != 0)
    goto LABEL_44;
LABEL_37:
  v119 = v180;
  if (qword_100BC2658 != -1)
    swift_once(&qword_100BC2658, sub_10015A9A0);
  v120 = qword_100CAF4C0;
  v187[0] = sub_1000C1804();
  v187[1] = v121;
  sub_100086DA4(&qword_100C02CC8, type metadata accessor for LocationViewerStoreObserver, (uint64_t)&unk_1009C53AC);
  Updatable.save<A>(setting:value:)(v120, v187, v171, v122);
  sub_10009895C();
  swift_release(v157);
  v123 = v172;
  sub_1000D9244(v172, v119);
  sub_1000C4510(v123);
  swift_beginAccess(v114, v187, 33, 0);
  sub_10015A18C(v123, v114);
  swift_endAccess(v187);
}

uint64_t sub_10006F614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BCD680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006F65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 10) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + 8));
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1000D31B4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  v8 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v12 = (v8 + v11 + 16) & ~v11;
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  v13 = (v12 | 7) + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v13;
  return swift_release(*(_QWORD *)(v13 & 0xFFFFFFFFFFFFF8));
}

void sub_10006F764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  _QWORD v75[4];
  __n128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;

  v83 = type metadata accessor for LocationOfInterest(0);
  v82 = *(_QWORD *)(v83 - 8);
  sub_10009D98C();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v4 = sub_1000987B4(v3);
  v91 = type metadata accessor for PreviewLocation(v4);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v7 = sub_1000987B4(v6);
  v92 = type metadata accessor for ModalViewState(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v9);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v12 = sub_1000987B4(v11);
  type metadata accessor for LocationPreviewViewState(v12);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v86 = v14;
  sub_1000BA294(&qword_100BC5F48);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v17 = sub_1000987B4(v16);
  v99 = type metadata accessor for EnvironmentAction(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v21 = sub_1000987B4(v20);
  v85 = type metadata accessor for OSSignpostID(v21);
  v84 = *(_QWORD *)(v85 - 8);
  sub_10009D98C();
  __chkstk_darwin(v22);
  sub_100088FDC();
  v24 = sub_1000987B4(v23);
  v109 = type metadata accessor for Location(v24);
  v113 = *(_QWORD *)(v109 - 8);
  sub_10009D98C();
  __chkstk_darwin(v25);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v26);
  sub_1000860D0();
  v111 = v27;
  __chkstk_darwin(v28);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v29);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v30);
  sub_100079F7C();
  v32 = sub_1000987B4(v31);
  type metadata accessor for CurrentLocation(v32);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v35 = sub_1000987B4(v34);
  v98 = type metadata accessor for LocationsAction(v35);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v37);
  sub_100079F7C();
  v39 = sub_1000987B4(v38);
  type metadata accessor for TimeState(v39);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  sub_100088FDC();
  v42 = sub_1000987B4(v41);
  v95 = type metadata accessor for ViewState.SecondaryViewState(v42);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_100088FDC();
  v45 = sub_1000987B4(v44);
  v96 = type metadata accessor for ViewState(v45);
  sub_1000B42B0();
  __chkstk_darwin(v46);
  v48 = (char *)v75 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for Location.Identifier(0);
  v89 = *(_QWORD *)(v90 - 8);
  sub_10009D98C();
  __chkstk_darwin(v49);
  sub_100088FDC();
  v88 = v50;
  v87 = *(_QWORD *)(sub_1000BA294(&qword_100BC35F8) - 8);
  sub_10009D98C();
  __chkstk_darwin(v51);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v52);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v53);
  sub_1000860D0();
  v110 = v54;
  __chkstk_darwin(v55);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v56);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v57);
  sub_1000860D0();
  sub_1000BA30C();
  __chkstk_darwin(v58);
  sub_100079F7C();
  v60 = sub_1000987B4(v59);
  v61 = type metadata accessor for MainAction(v60);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v64 = (char *)v75 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = *(_QWORD *)(a1 + 64);
  v66 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  v105 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  v68 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  v67 = *(_QWORD *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  v69 = v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  v70 = type metadata accessor for LocationsState(0);
  v71 = *(_QWORD *)(v69 + *(int *)(v70 + 32));
  v102 = a1;
  v72 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v72 + 16))
  {
    v78 = v70;
    v79 = v112 + 24;
    v114 = v72 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
    v80 = v48 + 8;
    v77 = &v115;
    swift_bridgeObjectRetain(v66);
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v67);
    v104 = v71;
    swift_bridgeObjectRetain(v71);
    v73 = swift_bridgeObjectRetain(v72);
    v81 = 0;
    v73.n128_u64[0] = 141558275;
    v76 = v73;
    v75[3] = (char *)&type metadata for Any + 8;
    v97 = v48;
    v93 = v61;
    v108 = v66;
    v106 = v68;
    v103 = v72;
    v107 = v67;
    sub_1000D1BB8();
    v100 = v64;
    v94 = v62;
    if (*(_QWORD *)(v72 + 16))
    {
      sub_100095B78(v114, (uint64_t)v64, type metadata accessor for MainAction);
      v74 = (char *)&loc_10006FD50 + *((int *)qword_1008F77E8 + swift_getEnumCaseMultiPayload(v64, v61));
      __asm { BR              X9 }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRelease(v71);
  }
}

void sub_100070FA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v51 = a2;
  v56 = a3;
  v57 = sub_1000BA294(&qword_100BED930);
  v50 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v49 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1000BA294(&qword_100BED938);
  __chkstk_darwin(v53);
  v55 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000BA294(&qword_100BED940);
  __chkstk_darwin(v54);
  v48 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UserInterfaceSizeClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1000BA294(&qword_100BC5E60);
  __chkstk_darwin(v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1000BA294(&qword_100BC5A68);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v48 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v48 - v21;
  v23 = type metadata accessor for MeasuredLocationViewerView(0);
  v52 = a1;
  sub_10011AA68(v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v20, enum case for UserInterfaceSizeClass.compact(_:), v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v7);
  v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100037768((uint64_t)v22, (uint64_t)v13, &qword_100BC5A68);
  sub_100037768((uint64_t)v20, v24, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v7) == 1)
  {
    sub_100021A14((uint64_t)v20, &qword_100BC5A68);
    sub_100021A14((uint64_t)v22, &qword_100BC5A68);
    if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v7) == 1)
    {
      sub_100021A14((uint64_t)v13, &qword_100BC5A68);
LABEL_8:
      v28 = v48;
      sub_100529B60(v51, v48);
      v29 = v55;
      sub_100037768(v28, v55, &qword_100BED940);
      swift_storeEnumTagMultiPayload(v29, v53, 0);
      v30 = sub_1005374B0();
      v31 = sub_100075EB0(&qword_100BED9E8);
      v32 = type metadata accessor for DisplayMetrics(255);
      sub_10007AB60((uint64_t)&unk_100BED9F0);
      v34 = v33;
      sub_10007A100((uint64_t)&unk_100BC5B78);
      v58 = v31;
      v59 = v32;
      v60 = v34;
      v61 = v35;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v58, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
      _ConditionalContent<>.init(storage:)(v29, v54, v57, v30, OpaqueTypeConformance2);
      sub_100021A14(v28, &qword_100BED940);
      return;
    }
    goto LABEL_6;
  }
  sub_100037768((uint64_t)v13, (uint64_t)v17, &qword_100BC5A68);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v7) == 1)
  {
    sub_100021A14((uint64_t)v20, &qword_100BC5A68);
    sub_100021A14((uint64_t)v22, &qword_100BC5A68);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
LABEL_6:
    sub_100021A14((uint64_t)v13, &qword_100BC5E60);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v24, v7);
  sub_10007A100((uint64_t)&qword_100BC5AB8);
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v10, v7, v25);
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v10, v7);
  sub_100021A14((uint64_t)v20, &qword_100BC5A68);
  sub_100021A14((uint64_t)v22, &qword_100BC5A68);
  v27(v17, v7);
  sub_100021A14((uint64_t)v13, &qword_100BC5A68);
  if ((v26 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v37 = v49;
  sub_100529E44(v51, v49);
  v38 = v50;
  v39 = v55;
  v40 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v55, v37, v57);
  swift_storeEnumTagMultiPayload(v39, v53, 1);
  v41 = sub_1005374B0();
  v42 = sub_100075EB0(&qword_100BED9E8);
  v43 = type metadata accessor for DisplayMetrics(255);
  sub_10007AB60((uint64_t)&unk_100BED9F0);
  v45 = v44;
  sub_10007A100((uint64_t)&unk_100BC5B78);
  v58 = v42;
  v59 = v43;
  v60 = v45;
  v61 = v46;
  v47 = swift_getOpaqueTypeConformance2(&v58, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  _ConditionalContent<>.init(storage:)(v39, v54, v40, v41, v47);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v40);
}

uint64_t sub_100071548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  _QWORD v47[4];

  v40 = a2;
  v39 = sub_1000BA294((uint64_t *)&unk_100C0A510);
  __chkstk_darwin(v39);
  v41 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for BorderlessButtonStyle(0);
  v44 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PrimitiveButtonStyleConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100BEE298);
  v43 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1000BA294(&qword_100BEE2A0);
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100B7E528, v17 + v8, v16 | 7);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v20 = v4;
  v21 = (uint64_t)v41;
  v19(v18 + v17, v9, v6);
  v46 = a1;
  v22 = sub_1000BA294(&qword_100BEE2A8);
  sub_100345634((uint64_t)&unk_100BEE2B0);
  v24 = Button.init(action:label:)(sub_10053FE34, v18, sub_10011DA00, v45, v22, v23);
  v25 = v42;
  BorderlessButtonStyle.init()(v24);
  sub_10007AB60((uint64_t)&unk_100BEE2C8);
  v27 = v26;
  sub_10007A100((uint64_t)&qword_100BC4FC8);
  v29 = v28;
  View.buttonStyle<A>(_:)(v25, v10, v20, v27, v28);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v20);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v10);
  v30 = enum case for DynamicTypeSize.xxLarge(_:);
  v31 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v21, v30, v31);
  sub_10007A100((uint64_t)&qword_100C0A550);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v21, v21, v31, v32);
  if ((result & 1) != 0)
  {
    v47[0] = v10;
    v47[1] = v20;
    v47[2] = v27;
    v47[3] = v29;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v47, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10007AB60((uint64_t)&qword_100BC4E30);
    v35 = v38;
    View.dynamicTypeSize<A>(_:)(v21, v38, v39, OpaqueTypeConformance2, v36);
    sub_100021A14(v21, (uint64_t *)&unk_100C0A510);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v15, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000718FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t HourPrecipitationComponentViewModel;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD v123[2];
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;

  v297 = a1;
  v247 = sub_1000BA294(&qword_100BE28E0);
  __chkstk_darwin(v247);
  v193 = (char *)v123 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for WindComponentViewModel(0);
  v186 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v188 = (char *)v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = v4;
  __chkstk_darwin(v3);
  v192 = (char *)v123 - v5;
  v244 = sub_1000BA294(&qword_100BE28E8);
  __chkstk_darwin(v244);
  v245 = (char *)v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = sub_1000BA294(&qword_100BE28F0);
  __chkstk_darwin(v276);
  v246 = (char *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = sub_1000BA294(&qword_100BE28F8);
  __chkstk_darwin(v243);
  v191 = (char *)v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = sub_1000BA294(&qword_100BE2900);
  __chkstk_darwin(v242);
  v190 = (char *)v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UVIndexComponentViewModel(0);
  v178 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v180 = (char *)v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = v12;
  __chkstk_darwin(v11);
  v189 = (char *)v123 - v13;
  v273 = sub_1000BA294(&qword_100BE2908);
  __chkstk_darwin(v273);
  v275 = (char *)v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_1000BA294(&qword_100BE2910);
  __chkstk_darwin(v238);
  v240 = (char *)v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = sub_1000BA294(&qword_100BE2918);
  __chkstk_darwin(v274);
  v241 = (char *)v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v296 = sub_1000BA294(&qword_100BE2920);
  __chkstk_darwin(v296);
  v277 = (char *)v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = sub_1000BA294(&qword_100BE2928);
  __chkstk_darwin(v237);
  v181 = (char *)v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_1000BA294(&qword_100BE2930);
  __chkstk_darwin(v236);
  v185 = (char *)v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for SunriseSunsetViewModel(0);
  v183 = *(_QWORD *)(v184 - 8);
  v20 = __chkstk_darwin(v184);
  v173 = (char *)v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = v21;
  __chkstk_darwin(v20);
  v182 = (char *)v123 - v22;
  v233 = sub_1000BA294(&qword_100BE2938);
  __chkstk_darwin(v233);
  v234 = (char *)v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_1000BA294(&qword_100BE2940);
  __chkstk_darwin(v272);
  v235 = (char *)v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_1000BA294(&qword_100BE2948);
  __chkstk_darwin(v232);
  v177 = (char *)v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for SevereAlertComponentViewModel(0);
  v164 = *(_QWORD *)(v26 - 8);
  v27 = __chkstk_darwin(v26);
  v166 = (char *)v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = v28;
  __chkstk_darwin(v27);
  v175 = (char *)v123 - v29;
  v230 = sub_1000BA294(&qword_100BE2950);
  __chkstk_darwin(v230);
  v169 = (char *)v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = sub_1000BA294(&qword_100BE2958);
  v176 = *(_QWORD *)(v239 - 8);
  v31 = __chkstk_darwin(v239);
  v167 = (char *)v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v174 = (char *)v123 - v33;
  v268 = sub_1000BA294(&qword_100BE2960);
  __chkstk_darwin(v268);
  v270 = (char *)v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_1000BA294(&qword_100BE2968);
  __chkstk_darwin(v227);
  v229 = (char *)v123 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = sub_1000BA294(&qword_100BE2970);
  __chkstk_darwin(v269);
  v231 = (char *)v123 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v287 = sub_1000BA294(&qword_100BE2978);
  __chkstk_darwin(v287);
  v271 = (char *)v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_1000BA294(&qword_100BE2980);
  __chkstk_darwin(v226);
  v171 = (char *)v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_1000BA294(&qword_100BE2988);
  __chkstk_darwin(v224);
  v170 = (char *)v123 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for PressureComponentViewModel(0);
  v157 = *(_QWORD *)(v40 - 8);
  v41 = __chkstk_darwin(v40);
  v159 = (char *)v123 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = v42;
  __chkstk_darwin(v41);
  v168 = (char *)v123 - v43;
  v221 = sub_1000BA294(&qword_100BE2990);
  __chkstk_darwin(v221);
  v222 = (char *)v123 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = sub_1000BA294(&qword_100BE2998);
  __chkstk_darwin(v267);
  v223 = (char *)v123 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_1000BA294(&qword_100BE29A0);
  __chkstk_darwin(v220);
  v156 = (char *)v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_1000BA294(&qword_100BE29A8);
  v163 = *(_QWORD *)(v228 - 8);
  v47 = __chkstk_darwin(v228);
  v155 = (char *)v123 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v162 = (char *)v123 - v49;
  v250 = type metadata accessor for ColorRenderingMode(0);
  v249 = *(_QWORD *)(v250 - 8);
  __chkstk_darwin(v250);
  v248 = (char *)v123 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_1000BA294(&qword_100BE29B0);
  __chkstk_darwin(v218);
  v154 = (char *)v123 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_1000BA294(&qword_100BE29B8);
  v161 = *(_QWORD *)(v225 - 8);
  v52 = __chkstk_darwin(v225);
  v153 = (char *)v123 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v160 = (char *)v123 - v54;
  v55 = type metadata accessor for NotificationsOptInComponentViewModel(0);
  v147 = *(_QWORD *)(v55 - 8);
  v56 = __chkstk_darwin(v55);
  v150 = (char *)v123 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = v57;
  __chkstk_darwin(v56);
  v219 = (char *)v123 - v58;
  v283 = sub_1000BA294(&qword_100BE29C0);
  __chkstk_darwin(v283);
  v285 = (char *)v123 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = sub_1000BA294(&qword_100BE29C8);
  __chkstk_darwin(v263);
  v265 = (char *)v123 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_1000BA294(&qword_100BE29D0);
  __chkstk_darwin(v215);
  v216 = (char *)v123 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = sub_1000BA294(&qword_100BE29D8);
  __chkstk_darwin(v264);
  v217 = (char *)v123 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_1000BA294(&qword_100BE29E0);
  __chkstk_darwin(v284);
  v266 = (char *)v123 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = sub_1000BA294(&qword_100BE29E8);
  __chkstk_darwin(v292);
  v286 = (char *)v123 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_1000BA294(&qword_100BE29F0);
  __chkstk_darwin(v214);
  v152 = (char *)v123 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationComponentViewModel = type metadata accessor for NextHourPrecipitationComponentViewModel(0);
  v139 = *(_QWORD *)(HourPrecipitationComponentViewModel - 8);
  v67 = __chkstk_darwin(HourPrecipitationComponentViewModel);
  v141 = (char *)v123 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = v68;
  __chkstk_darwin(v67);
  v151 = (char *)v123 - v69;
  v213 = sub_1000BA294(&qword_100BE29F8);
  __chkstk_darwin(v213);
  v149 = (char *)v123 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for NewsArticleComponentViewModel(0);
  v136 = *(_QWORD *)(v71 - 8);
  v72 = __chkstk_darwin(v71);
  v138 = (char *)v123 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = v73;
  __chkstk_darwin(v72);
  v146 = (char *)v123 - v74;
  v210 = sub_1000BA294(&qword_100BE2A00);
  __chkstk_darwin(v210);
  v211 = (char *)v123 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = sub_1000BA294(&qword_100BE2A08);
  __chkstk_darwin(v262);
  v212 = (char *)v123 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_1000BA294(&qword_100BE2A10);
  __chkstk_darwin(v209);
  v145 = (char *)v123 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for MoonComponentViewModel(0);
  v131 = *(_QWORD *)(v78 - 8);
  v79 = __chkstk_darwin(v78);
  v133 = (char *)v123 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = v80;
  __chkstk_darwin(v79);
  v144 = (char *)v123 - v81;
  v208 = sub_1000BA294(&qword_100BE2A18);
  __chkstk_darwin(v208);
  v143 = (char *)v123 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for MapComponentViewModel(0);
  v127 = *(_QWORD *)(v83 - 8);
  v84 = *(_QWORD *)(v127 + 64);
  v85 = __chkstk_darwin(v83);
  v129 = (char *)v123 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v85);
  v142 = (char *)v123 - v86;
  v258 = sub_1000BA294(&qword_100BE2A20);
  __chkstk_darwin(v258);
  v260 = (char *)v123 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_1000BA294(&qword_100BE2A28);
  __chkstk_darwin(v205);
  v206 = (char *)v123 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  v259 = sub_1000BA294(&qword_100BE2A30);
  __chkstk_darwin(v259);
  v207 = (char *)v123 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = sub_1000BA294(&qword_100BE2A38);
  __chkstk_darwin(v282);
  v261 = (char *)v123 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_1000BA294(&qword_100BE2A40);
  __chkstk_darwin(v203);
  v135 = (char *)v123 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_1000BA294(&qword_100BE2A48);
  __chkstk_darwin(v202);
  v134 = (char *)v123 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_1000BA294(&qword_100BE2A50);
  __chkstk_darwin(v199);
  v201 = (char *)v123 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = sub_1000BA294(&qword_100BE2A58);
  __chkstk_darwin(v257);
  v204 = (char *)v123 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_1000BA294(&qword_100BE2A60);
  __chkstk_darwin(v198);
  v130 = (char *)v123 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for FeelsLikeComponentViewModel(0);
  v124 = *(_QWORD *)(v96 - 8);
  v97 = *(_QWORD *)(v124 + 64);
  v98 = __chkstk_darwin(v96);
  v125 = (char *)v123 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98);
  v128 = (char *)v123 - v99;
  v100 = type metadata accessor for LocationComponentContainerContentView(0);
  v251 = *(_QWORD *)(v100 - 8);
  v101 = *(_QWORD *)(v251 + 64);
  __chkstk_darwin(v100);
  v252 = (char *)v123 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_1000BA294(&qword_100BE2A68);
  __chkstk_darwin(v197);
  v126 = (char *)v123 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for DailyForecastComponentViewModel(0);
  v123[0] = *(_QWORD *)(v103 - 8);
  v104 = *(_QWORD *)(v123[0] + 64);
  v105 = __chkstk_darwin(v103);
  v123[1] = (char *)v123 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v105);
  v200 = (char *)v123 - v106;
  v293 = sub_1000BA294(&qword_100BE2A70);
  __chkstk_darwin(v293);
  v295 = (char *)v123 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  v288 = sub_1000BA294(&qword_100BE2A78);
  __chkstk_darwin(v288);
  v290 = (char *)v123 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = sub_1000BA294(&qword_100BE2A80);
  __chkstk_darwin(v278);
  v280 = (char *)v123 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = sub_1000BA294(&qword_100BE2A88);
  __chkstk_darwin(v253);
  v255 = (char *)v123 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_1000BA294(&qword_100BE2A90);
  __chkstk_darwin(v194);
  v195 = (char *)v123 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = sub_1000BA294(&qword_100BE2A98);
  __chkstk_darwin(v254);
  v196 = (char *)v123 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = sub_1000BA294(&qword_100BE2AA0);
  __chkstk_darwin(v279);
  v256 = (char *)v123 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = sub_1000BA294(&qword_100BE2AA8);
  __chkstk_darwin(v289);
  v281 = (char *)v123 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = sub_1000BA294(&qword_100BE2AB0);
  __chkstk_darwin(v294);
  v291 = (char *)v123 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1000BA294(&qword_100BE2AB8);
  __chkstk_darwin(v116);
  v117 = type metadata accessor for LocationComponentViewModel(0);
  __chkstk_darwin(v117);
  v119 = (char *)v123 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = v298 + *(int *)(v100 + 24);
  v121 = type metadata accessor for LocationComponentContainerViewModel(0);
  sub_100080C0C(v120 + *(int *)(v121 + 20), (uint64_t)v119, type metadata accessor for LocationComponentViewModel);
  v122 = (char *)sub_100073094 + 4 * word_10099F740[swift_getEnumCaseMultiPayload(v119, v117)];
  __asm { BR              X10 }
}

void sub_100073094()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = swift_allocObject(&unk_100B745A8, 128, 7);
  memcpy((void *)(v4 + 16), v0, 0x70uLL);
  sub_10042F2D4();
  swift_release(v4);
  v5 = *(_QWORD *)(v3 - 952);
  sub_100037768(v1, v5, &qword_100BE2AB8);
  swift_storeEnumTagMultiPayload(v5, *(_QWORD *)(v3 - 960), 0);
  v6 = sub_10045133C();
  v7 = sub_10045156C();
  v8 = *(_QWORD *)(v3 - 944);
  _ConditionalContent<>.init(storage:)(v5, v2, *(_QWORD *)(v3 - 936), v6, v7);
  v9 = *(_QWORD *)(v3 - 472);
  sub_100037768(v8, v9, &qword_100BE2A98);
  swift_storeEnumTagMultiPayload(v9, *(_QWORD *)(v3 - 488), 0);
  v10 = sub_1004512D0();
  v11 = sub_10045179C();
  v12 = *(_QWORD *)(v3 - 464);
  _ConditionalContent<>.init(storage:)(v9, *(_QWORD *)(v3 - 480), *(_QWORD *)(v3 - 456), v10, v11);
  sub_100021A14(v8, &qword_100BE2A98);
  v13 = *(_QWORD *)(v3 - 272);
  sub_100037768(v12, v13, &qword_100BE2AA0);
  swift_storeEnumTagMultiPayload(v13, *(_QWORD *)(v3 - 288), 0);
  v14 = sub_100451264();
  v15 = sub_100451C68();
  v16 = *(_QWORD *)(v3 - 264);
  _ConditionalContent<>.init(storage:)(v13, *(_QWORD *)(v3 - 280), *(_QWORD *)(v3 - 256), v14, v15);
  sub_100021A14(v12, &qword_100BE2AA0);
  v17 = *(_QWORD *)(v3 - 192);
  sub_100037768(v16, v17, &qword_100BE2AA8);
  swift_storeEnumTagMultiPayload(v17, *(_QWORD *)(v3 - 208), 0);
  v18 = sub_1004511F8();
  v19 = sub_10045266C();
  v20 = *(_QWORD *)(v3 - 184);
  _ConditionalContent<>.init(storage:)(v17, *(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 176), v18, v19);
  sub_100021A14(v16, &qword_100BE2AA8);
  v21 = *(_QWORD *)(v3 - 152);
  sub_100037768(v20, v21, &qword_100BE2AB0);
  swift_storeEnumTagMultiPayload(v21, *(_QWORD *)(v3 - 168), 0);
  v22 = sub_10045118C();
  v23 = sub_100453B68();
  _ConditionalContent<>.init(storage:)(v21, *(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 144), v22, v23);
  sub_100021A14(v20, &qword_100BE2AB0);
  sub_100021A14(v1, &qword_100BE2AB8);
}

uint64_t sub_100075DC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000BA294(a3);
}

void sub_100075DD0(uint64_t a1)
{
  uint64_t *v1;

  sub_100021A14(a1, v1);
}

double sub_100075DF4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_100075DFC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1144);
}

void sub_100075E0C(Swift::UInt8 a1)
{
  Hasher._combine(_:)(a1);
}

unint64_t sub_100075E14()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_10029E1BC();
}

double sub_100075E20()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72)).n128_u64[0];
  return result;
}

uint64_t sub_100075E28()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_100075E4C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_100670A20();
}

uint64_t sub_100075E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return String.write(to:)(v2, a1, a2);
}

uint64_t sub_100075E74()
{
  uint64_t v0;

  return Dictionary.init(dictionaryLiteral:)(v0);
}

uint64_t sub_100075E98(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_100075EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 368));
}

uint64_t sub_100075EB0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100075EF4(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = (_QWORD *)(a1 + a2[6]);
  v5 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = a1 + a2[7];
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 16));
  v8 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v9 = v7 + v8[8];
  v10 = type metadata accessor for URL(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[9];
  swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
  v12 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v13 = v11 + v12[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v13, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[7] + 8));
  swift_release(*(_QWORD *)(v11 + v12[8]));
  v14 = v7 + v8[11];
  v15 = type metadata accessor for LocationOfInterest(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v7 + v8[14];
  v17 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
  {
    v18 = v16 + *(int *)(v17 + 20);
    v19 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v16 + *(int *)(v17 + 24), v15);
  }
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

void sub_1000760FC()
{
  uint64_t v0;

  v0 = sub_10011DE18();
  sub_1000C0E60(v0);
  sub_10004A298();
}

uint64_t sub_100076118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  void (*v29)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  BOOL v43;
  char v44;
  char v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v1 = type metadata accessor for Locale.Language(0);
  v48 = *(_QWORD *)(v1 - 8);
  v49 = v1;
  __chkstk_darwin(v1);
  sub_100098728();
  v4 = v3 - v2;
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  sub_1000BA294(&qword_100BC39D8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  v14 = type metadata accessor for ContentSizeCategory(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v47 - v19;
  sub_1000766F4();
  v21 = sub_1000C2448((uint64_t)&unk_100B607B0);
  if (v50 != 1)
    goto LABEL_57;
  v47 = v0;
  EnvironmentValues.sizeCategory.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v14);
  if (v22 != enum case for ContentSizeCategory.extraSmall(_:)
    && v22 != enum case for ContentSizeCategory.small(_:)
    && v22 != enum case for ContentSizeCategory.medium(_:)
    && v22 != enum case for ContentSizeCategory.large(_:)
    && v22 != enum case for ContentSizeCategory.extraLarge(_:)
    && v22 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v22 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    v29 = *(void (**)(char *, uint64_t))(v15 + 8);
    if (v22 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      sub_1000998A8();
LABEL_57:
      v45 = 0;
      return v45 & 1;
    }
    v29(v18, v14);
  }
  v34 = sub_1000998A8();
  v35 = EnvironmentValues.accessibilityVoiceOverEnabled.getter(v34);
  if ((v35 & 1) != 0)
    goto LABEL_57;
  v36 = static Locale.current.getter(v35);
  Locale.language.getter(v36);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  Locale.Language.languageCode.getter(v37);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v4, v49);
  v38 = type metadata accessor for Locale.LanguageCode(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v38) == 1)
  {
    sub_10007EB94(v13, &qword_100BC39D8);
    v39 = 0;
    v40 = 0;
  }
  else
  {
    v39 = Locale.LanguageCode.identifier.getter();
    v40 = v41;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v13, v38);
  }
  if (!sub_1000764C8())
  {
    sub_10003BC58();
    goto LABEL_55;
  }
  if (!v40)
  {
LABEL_55:
    v45 = 1;
    return v45 & 1;
  }
  v42 = v39 == 29281 && v40 == 0xE200000000000000;
  if (v42
    || (sub_10009888C(v39, v40, 29281) & 1) != 0
    || (v39 == 26984 ? (v43 = v40 == 0xE200000000000000) : (v43 = 0), v43))
  {
    sub_10003BC58();
    goto LABEL_57;
  }
  v44 = sub_10009888C(v39, v40, 26984);
  sub_10003BC58();
  v45 = v44 ^ 1;
  return v45 & 1;
}

void sub_1000764AC()
{
  _BOOL8 v0;

  v0 = sub_10011E218();
  sub_1000C0E60(v0);
  sub_10004A298();
}

BOOL sub_1000764C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  _BOOL8 v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for EnvironmentValues(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  sub_100076608();
  sub_1000C2448((uint64_t)&unk_100B60890);
  sub_10007689C();
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, v1, v2);
  if (v10 <= 320.0)
  {
    v13 = 1;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    v12 = ((uint64_t (*)(char *, char *, uint64_t))v11)(v6, v8, v2);
    v13 = v10 <= 375.0 && EnvironmentValues.displayScale.getter(v12) <= 2.0;
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v6, v2);
    v14(v8, v2);
  }
  return v13;
}

unint64_t sub_100076608()
{
  unint64_t result;

  result = qword_100BC5B08;
  if (!qword_100BC5B08)
  {
    result = swift_getWitnessTable(&unk_100980144, &unk_100B60890);
    atomic_store(result, (unint64_t *)&qword_100BC5B08);
  }
  return result;
}

void sub_100076644(_BYTE *a1@<X8>)
{
  int v2;

  v2 = sub_100076684();
  *a1 = v2 & 1;
  a1[1] = BYTE1(v2) & 1;
  a1[2] = BYTE2(v2) & 1;
  a1[3] = HIBYTE(v2) & 1;
  sub_10004A298();
}

uint64_t sub_100076684()
{
  int v0;
  int v1;
  int v2;
  unsigned __int8 v4;
  char v5;
  char v6;
  char v7;

  sub_1000766F4();
  sub_1000C2448((uint64_t)&unk_100B607B0);
  if (v7)
    v0 = 0x1000000;
  else
    v0 = 0;
  if (v6)
    v1 = 0x10000;
  else
    v1 = 0;
  if (v5)
    v2 = 256;
  else
    v2 = 0;
  return v2 | v4 | v1 | v0;
}

unint64_t sub_1000766F4()
{
  unint64_t result;

  result = qword_100BC5A70;
  if (!qword_100BC5A70)
  {
    result = swift_getWitnessTable(&unk_10097FE8C, &unk_100B607B0);
    atomic_store(result, (unint64_t *)&qword_100BC5A70);
  }
  return result;
}

void sub_100076730(uint64_t a1, uint64_t a2)
{
  int v2;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  _BYTE *v9;
  _BYTE *v10;
  char v12;
  char v13;
  _BYTE v14[32];
  _BYTE v15[32];
  _QWORD v16[3];
  char v17;
  double v18[3];
  char v19;
  char v20;
  unsigned __int8 v21;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_26;
  sub_10007695C(a1 + 8, (uint64_t)v15);
  sub_10007695C(a2 + 8, (uint64_t)v14);
  sub_10007695C((uint64_t)v15, (uint64_t)v16);
  v5 = *(double *)v16;
  if ((v17 & 1) == 0)
  {
    sub_10007695C((uint64_t)v14, (uint64_t)v18);
    if ((v19 & 1) != 0 || v5 != v18[0])
      goto LABEL_26;
LABEL_11:
    if (*(double *)(a1 + 40) != *(double *)(a2 + 40) || *(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
      goto LABEL_26;
    sub_100076A50((_BYTE *)(a1 + 49), &v13);
    sub_100076A50((_BYTE *)(a2 + 49), &v12);
    sub_100076A50(&v13, &v20);
    sub_1000D9980();
    if (v8)
    {
      sub_100076A50(v9, v10);
      if (v21 != 4)
        goto LABEL_26;
    }
    else if (v2 == 3)
    {
      sub_100076A50(v9, v10);
      if (v21 != 3)
        goto LABEL_26;
    }
    else
    {
      sub_100076A50(v9, v10);
      if (v21 - 3 < 2 || v2 != v21)
        goto LABEL_26;
    }
    if (*(double *)(a1 + 56) == *(double *)(a2 + 56))
      sub_1000D92B8();
    goto LABEL_26;
  }
  v6 = *(double *)&v16[2];
  sub_10007695C((uint64_t)v14, (uint64_t)v18);
  if (v19 == 1)
  {
    sub_1000D1B28();
    v8 = v8 && v6 == v7;
    if (v8)
      goto LABEL_11;
  }
LABEL_26:
  sub_1000CD29C();
}

void sub_10007689C()
{
  uint64_t v0;
  int v1;
  unsigned __int8 v2;
  char v3;
  _BYTE v4[32];
  _QWORD v5[3];
  char v6;

  sub_10007695C(v0 + 8, (uint64_t)v4);
  sub_1000C187C((uint64_t)v4, (uint64_t)v5);
  if (v1 == 1)
  {
    sub_100076A98();
    sub_100076A50((_BYTE *)(v0 + 49), &v3);
    sub_100076A50(&v3, &v6);
    sub_1000C4120();
    v2 = sub_1000769AC();
    sub_1000BB66C(v2);
  }
  sub_1000E74DC();
  sub_1000BCB70();
}

uint64_t sub_10007695C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ConditionDetailLegendViewModel(a2, a1);
  return a2;
}

__n128 initializeWithTake for ConditionDetailLegendViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1000769AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  char v7;

  sub_100076A50((_BYTE *)(v0 + 49), &v6);
  sub_100076A50(&v6, &v7);
  sub_1000B4E08();
  switch(v4)
  {
    case 2:
      return 0;
    case 6:
      return 2;
    case 4:
      return 1;
  }
  result = sub_1000C4F0C((uint64_t)"Fatal error", v1, v2, v3, 0x8000000100A15650, (uint64_t)"Weather/GridGeometry.swift");
  __break(1u);
  return result;
}

_BYTE *sub_100076A50(_BYTE *a1, _BYTE *a2)
{
  initializeBufferWithCopyOfBuffer for OptInUserStatus(a2, a1);
  return a2;
}

_BYTE *initializeBufferWithCopyOfBuffer for OptInUserStatus(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

double sub_100076A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  unsigned __int8 v5;

  v1 = *(unsigned __int8 *)(v0 + 48);
  sub_100076A50((_BYTE *)(v0 + 49), &v4);
  sub_100076A50(&v4, &v5);
  v2 = (2 * v5) | 1;
  if (v5 - 3 < 2)
    v2 = 0;
  return *(double *)(v0 + 40) * (double)(v2 + 2 * v1 + 1);
}

_QWORD *sub_100076B00(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = *v9;
    *v8 = *v9;
    swift_bridgeObjectRetain(v16);
    v13 = v8;
    v14 = v10;
    v15 = 1;
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    v12 = type metadata accessor for CodableError(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    v13 = v8;
    v14 = v10;
    v15 = 0;
LABEL_5:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    goto LABEL_7;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_7:
  v17 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Location(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_1000BA294(&qword_100BC35F8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_100076C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1000986AC();
  sub_100099ACC();
  sub_1000CFAB8();
  __chkstk_darwin(v4);
  sub_1000B4EDC();
  if (!v0)
    return 0;
  sub_1000DD558();
  while (1)
  {
    sub_10008611C(v1, v2);
    v5 = sub_1000DABAC();
    v6 = type metadata accessor for MainAction;
    if ((_DWORD)v5 == 6)
    {
      v7 = type metadata accessor for ViewAction(0);
      v5 = sub_10009ED24(v7);
      v6 = type metadata accessor for ViewAction;
      if ((_DWORD)v5 == 1)
      {
        v8 = type metadata accessor for LocationViewerViewAction(0);
        v5 = sub_10009ED24(v8);
        v6 = type metadata accessor for LocationViewerViewAction;
        if (!(_DWORD)v5)
          break;
      }
    }
    sub_1000998E4(v5, v6);
    v1 += v3;
    if (!--v0)
    {
      sub_10003BC58();
      return 0;
    }
  }
  sub_10003BC58();
  sub_1000998E4(v10, type metadata accessor for LocationViewerViewAction);
  return 1;
}

void sub_100076D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  type metadata accessor for AveragesDetailViewAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v0);
  sub_100088FDC();
  v1 = sub_10009876C();
  type metadata accessor for MoonDetailViewAction(v1);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100088FDC();
  v3 = sub_10009876C();
  type metadata accessor for ConditionDetailViewAction(v3);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v5 = sub_10009876C();
  type metadata accessor for DebugAction(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v7 = sub_10009876C();
  type metadata accessor for PerformanceTestAction(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v9 = sub_10009876C();
  type metadata accessor for WeatherDataAction(v9);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v11 = sub_10009876C();
  type metadata accessor for LocationViewAction(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v13 = sub_10009876C();
  type metadata accessor for ModalViewAction(v13);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v15 = sub_10009876C();
  type metadata accessor for ViewAction(v15);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v17 = sub_10009876C();
  type metadata accessor for NotificationsOptInAction(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v19 = sub_10009876C();
  type metadata accessor for NotificationsAction(v19);
  sub_1000B42B0();
  __chkstk_darwin(v20);
  sub_100088FDC();
  v21 = sub_10009876C();
  type metadata accessor for LocationsAction(v21);
  sub_1000B42B0();
  __chkstk_darwin(v22);
  sub_100098728();
  type metadata accessor for EnvironmentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v23);
  sub_100098728();
  type metadata accessor for AppConfigurationAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100098728();
  v25 = type metadata accessor for MainAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v26);
  sub_100098728();
  v29 = v28 - v27;
  v30 = sub_1000BA294(&qword_100BDECB0);
  __chkstk_darwin(v30);
  sub_100088FDC();
  sub_100080C0C(v32, v29, type metadata accessor for MainAction);
  v31 = (char *)sub_100077018 + 4 * word_10099C79C[swift_getEnumCaseMultiPayload(v29, v25)];
  __asm { BR              X10 }
}

uint64_t sub_100077018()
{
  _QWORD *v0;
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  __n128 *v4;
  __n128 *v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *v1;
  v3 = sub_1000BA294(&qword_100BC31F0);
  v4 = (__n128 *)sub_100099A0C(v3);
  v5 = sub_1000BAB80(v4, (__n128)xmmword_10097CA50);
  v5[4].n128_u64[1] = (unint64_t)&type metadata for AppLifecycleAction;
  v5[3].n128_u8[0] = v2;
  Dictionary.init(dictionaryLiteral:)(v5);
  sub_1000DDA58();
  sub_1000D9DAC(0x636566694C707061, 0xEC000000656C6379, v6);
  v7 = (_QWORD *)v0[26];
  v7[3] = v0[25];
  v7[4] = sub_100077ABC();
  sub_100077A84(v7);
  return (*(uint64_t (**)(void))(v0[24] + 32))();
}

void sub_100077A84(_QWORD *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  sub_10004A298();
}

unint64_t sub_100077ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BDECB8;
  if (!qword_100BDECB8)
  {
    v1 = sub_100075EB0(&qword_100BDECB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ShortDescription<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100BDECB8);
  }
  return result;
}

uint64_t sub_100077B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t result;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v45 = a3;
  v47 = a2;
  v43 = a1;
  updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NewsDataModel(0);
  v42 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v42 + 64);
  v8 = __chkstk_darwin(v6);
  v50 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v44 = (uint64_t)&v41 - v9;
  v49 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v49 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v49);
  v48 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - v13;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_10009FFE0();
  *v18 = static OS_dispatch_queue.main.getter(v19);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = _dispatchPreconditionTest(_:)(v18);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v20 & 1) != 0)
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41 = updated;
    v23 = v10;
    v24 = v49;
    v22(v14, v47, v49);
    v25 = v44;
    sub_100080C0C(v43, v44, type metadata accessor for NewsDataModel);
    v22(v48, (uint64_t)v14, v24);
    sub_100080C0C(v25, v50, type metadata accessor for NewsDataModel);
    v26 = *(unsigned __int8 *)(v23 + 80);
    v27 = (v26 + 24) & ~v26;
    v28 = *(unsigned __int8 *)(v42 + 80);
    v29 = (v11 + v28 + v27) & ~v28;
    v30 = swift_allocObject(&unk_100B94F48, v29 + v7, v26 | v28 | 7);
    v31 = v46;
    *(_QWORD *)(v30 + 16) = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v30 + v27, v14, v24);
    sub_10007802C(v25, v30 + v29, type metadata accessor for NewsDataModel);
    v32 = *(void (**)(uint64_t *__return_ptr, __n128))(v31 + 16);
    v33 = swift_retain();
    v32(&v51, v33);
    v34 = v51;
    LOBYTE(v29) = sub_1000EEBA0(v47, v51);
    swift_release(v34);
    *v5 = v29 & 1;
    swift_storeEnumTagMultiPayload(v5, v41, 11);
    sub_1000C7114((uint64_t)v5);
    sub_1000215BC((uint64_t)v5, type metadata accessor for WeatherDataUpdateRequestLog.Event);
    if ((v29 & 1) != 0)
    {
      sub_1000215BC(v50, type metadata accessor for NewsDataModel);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v48, v49);
      v51 = 0;
      v35 = static Animation.easeIn(duration:)(0.3);
      v36 = Transaction.animation.setter(v35);
      v37 = v51;
      __chkstk_darwin(v36);
      *(&v41 - 2) = (uint64_t)sub_100152608;
      *(&v41 - 1) = v30;
      swift_retain();
      withTransaction<A>(_:_:)(v38, sub_100152654, &v41 - 4, (char *)&type metadata for () + 8);
      swift_release(v37);
      swift_release(v30);
      return swift_release(v37);
    }
    else
    {
      v39 = (uint64_t)v48;
      v40 = v50;
      sub_100077EE4(v31, (uint64_t)v48, v50);
      swift_release(v30);
      sub_1000215BC(v40, type metadata accessor for NewsDataModel);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v39, v49);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100077EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];
  uint64_t v16;

  v5 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(uint64_t (**)(uint64_t))(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v10 = (uint64_t)v7 + *(int *)(sub_1000BA294(&qword_100BCB620) + 48);
  swift_retain();
  *v7 = Location.id.getter(v11);
  v7[1] = v12;
  sub_100080C0C(a3, v10, type metadata accessor for NewsDataModel);
  v13 = type metadata accessor for WeatherDataAction(0);
  swift_storeEnumTagMultiPayload(v7, v13, 5);
  swift_storeEnumTagMultiPayload(v7, v5, 9);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1000A5EBC((uint64_t)v7, (uint64_t)v15, v9);
  sub_100021A14((uint64_t)v15, (uint64_t *)&unk_100BFFA10);
  sub_1000215BC((uint64_t)v7, type metadata accessor for MainAction);
  return swift_release(v8);
}

void sub_100078010(uint64_t a1)
{
  sub_100203EE0(a1, &qword_100BCB200, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, &qword_100BCB208);
}

void sub_10007802C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10004A2B0(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_10004A298();
}

void sub_100078058(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_10004A2B0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_10004A298();
}

void sub_10007808C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v24 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    type metadata accessor for SavedLocation(0);
    sub_1000E7358();
    v9 = *(_QWORD *)(v8 + 72);
    v10 = swift_bridgeObjectRetain(a3);
    while (1)
    {
      v11 = a1(&v23, v4, v10);
      if (v3)
        break;
      v19 = v23;
      if (v23)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v21 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1);
        v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
        v11 = (_QWORD *)specialized Array._endMutation()(v22);
      }
      v4 += v9;
      if (!--v6)
      {
        sub_1000C61DC((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, a3);
        return;
      }
    }
    sub_1000C61DC((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, a3);
    swift_bridgeObjectRelease(v24);
  }
}

uint64_t sub_1000781AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1000781CC(a1, *(_QWORD **)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_1000781CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  char *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;

  v85 = a5;
  v94 = a3;
  v95 = a4;
  v96 = a6;
  v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v8);
  v83 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Location(0);
  v93 = *(_QWORD *)(v87 - 8);
  v10 = __chkstk_darwin(v87);
  v84 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v80 - v12;
  v86 = sub_1000BA294(&qword_100BF66B8);
  v88 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Location.Identifier(0);
  v97 = *(_QWORD *)(v16 - 8);
  v98 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SavedLocation.Placeholder(0);
  v99 = *(_QWORD **)(v19 - 8);
  v100 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SavedLocation(0);
  v90 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v91 = v24;
  v92 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v80 - v25;
  v27 = a1;
  sub_100080C0C(a1, (uint64_t)&v80 - v25, v28);
  v89 = v22;
  if (swift_getEnumCaseMultiPayload(v26, v22) == 1)
  {
    ((void (*)(char *, char *, uint64_t))v99[4])(v21, v26, v100);
    v29 = a2[15];
    v30 = a2[16];
    sub_1000DB418(a2 + 12, v29);
    SavedLocation.Placeholder.identifier.getter();
    LOBYTE(v29) = dispatch thunk of GeocodingSamplerType.canGeocodeLocation(_:)(v18, v29, v30);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v18, v98);
    v31 = *(int *)(v86 + 48);
    sub_100080C0C(v27, (uint64_t)v15, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
    v15[v31] = v29 & 1;
    v32 = v94;
    sub_1001215F8();
    v33 = *(_QWORD *)(*v32 + 16);
    sub_100121368(v33);
    v34 = *v32;
    *(_QWORD *)(v34 + 16) = v33 + 1;
    sub_100922BA8((uint64_t)v15, v34+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v33);
    v35 = a2 + 6;
    v36 = a2[9];
    v37 = a2[10];
    sub_1000DB418(v35, v36);
    v38 = dispatch thunk of GeocodeManagerType.reverseGeocode(placeholder:ignoreTimeZoneExpiration:qos:)(v21, (v29 & 1) == 0, v95, v36, v37);
    v39 = ((uint64_t (*)(char *, uint64_t))v99[1])(v21, v100);
    v40 = v96;
    v41 = v27;
    v42 = v91;
    v43 = (uint64_t)v92;
    v44 = v89;
    v45 = v90;
LABEL_10:
    v73 = (void *)zalgo.getter(v39);
    v74 = Promise.then<A>(on:closure:)(v73, sub_100028124, 0, v44);

    sub_100080C0C(v41, v43, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
    v75 = *(unsigned __int8 *)(v45 + 80);
    v76 = (v75 + 16) & ~v75;
    v77 = swift_allocObject(&unk_100B9BB40, v76 + v42, v75 | 7);
    sub_10007802C(v43, v77 + v76, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
    v79 = (void *)zalgo.getter(v78);
    v63 = Promise.recover(on:closure:)(v79, sub_100922C70, v77);
    swift_release(v74);
    swift_release(v77);

    result = swift_release(v38);
    goto LABEL_11;
  }
  v81 = v15;
  v100 = a1;
  v46 = v93;
  v47 = v87;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v13, v26, v87);
  v48 = a2[15];
  v49 = a2[16];
  v99 = a2;
  v50 = sub_1000DB418(a2 + 12, v48);
  Location.identifier.getter(v50);
  v51 = dispatch thunk of GeocodingSamplerType.canGeocodeLocation(_:)(v18, v48, v49);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v18, v98);
  v52 = v84;
  v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 16))(v84, v13, v47);
  v82 = v13;
  if ((v51 & 1) != 0)
  {
    v54 = *(void (**)(char *, uint64_t))(v93 + 8);
    v54(v52, v47);
LABEL_8:
    v59 = v95;
    v40 = v96;
    v60 = v99;
    v41 = v100;
    v61 = v94;
    goto LABEL_9;
  }
  v55 = (uint64_t)v83;
  Location.lastRefreshDate.getter(v53);
  v54 = *(void (**)(char *, uint64_t))(v93 + 8);
  v56 = v47;
  v54(v52, v47);
  v57 = type metadata accessor for Date(0);
  v58 = _s7Weather24LocationCompositionStateOwet_0(v55, 1, v57);
  sub_100021A14(v55, (uint64_t *)&unk_100BD35A0);
  if (v58 == 1)
    goto LABEL_8;
  v59 = v95;
  v40 = v96;
  v60 = v99;
  v41 = v100;
  v61 = v94;
  if ((v85 & 1) != 0)
  {
LABEL_9:
    v64 = (uint64_t)v81;
    v65 = *(int *)(v86 + 48);
    sub_100080C0C(v41, (uint64_t)v81, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
    *(_BYTE *)(v64 + v65) = v51 & 1;
    sub_1001215F8();
    v66 = *(_QWORD *)(*v61 + 16);
    sub_100121368(v66);
    v67 = *v61;
    *(_QWORD *)(v67 + 16) = v66 + 1;
    sub_100922BA8(v64, v67+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v66);
    v68 = v60 + 6;
    v69 = v60[9];
    v70 = v60[10];
    sub_1000DB418(v68, v69);
    v71 = (v51 & 1) == 0;
    v72 = v82;
    v38 = dispatch thunk of GeocodeManagerType.reverseGeocode(location:forceUpdate:ignoreTimeZoneExpiration:qos:)(v82, v85 & 1, v71, v59, v69, v70);
    v39 = ((uint64_t (*)(char *, uint64_t))v54)(v72, v87);
    v42 = v91;
    v43 = (uint64_t)v92;
    v44 = v89;
    v45 = v90;
    goto LABEL_10;
  }
  result = ((uint64_t (*)(char *, uint64_t))v54)(v82, v56);
  v63 = 0;
LABEL_11:
  *v40 = v63;
  return result;
}

void sub_1000787D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100075DC0(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_10004A298();
}

uint64_t sub_100078800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t OpaqueTypeConformance2;
  char *v90;
  char v91[16];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[2];

  v87 = a2;
  v85 = type metadata accessor for AccessibilityChildBehavior(0);
  v82 = *(_QWORD *)(v85 - 8);
  v4 = __chkstk_darwin(v85);
  v80 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v4);
  v8 = *(_QWORD *)(a1 + 16);
  v71 = *(_QWORD *)(a1 + 24);
  v9 = a1;
  v10 = type metadata accessor for Button(0, v8);
  v78 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v72 = (char *)&v67 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v10);
  v97 = v10;
  v98 = WitnessTable;
  v13 = v10;
  v74 = v10;
  v14 = WitnessTable;
  v75 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v97, &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>, 0);
  v77 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v16 = OpaqueTypeMetadata2;
  v76 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v73 = (char *)&v67 - v17;
  v97 = v13;
  v98 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v97, &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>, 1);
  v97 = v16;
  v98 = OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeMetadata2(0, &v97, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v84 = *(_QWORD *)(v18 - 8);
  v79 = v18;
  __chkstk_darwin(v18);
  v88 = (char *)&v67 - v19;
  v83 = type metadata accessor for ModifiedContent(0, v20, &type metadata for WeatherComponentButtonAccessibilityLabelModifier);
  v86 = *(_QWORD *)(v83 - 8);
  v21 = __chkstk_darwin(v83);
  v90 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v81 = (char *)&v67 - v23;
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v24 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v2;
  v69(v24, v2, v9);
  v26 = *(unsigned __int8 *)(v6 + 80);
  v27 = v6;
  v28 = (v26 + 32) & ~v26;
  v68 = v28 + v7;
  v29 = v26 | 7;
  v30 = swift_allocObject(&unk_100B98F50, v28 + v7, v26 | 7);
  v31 = v71;
  *(_QWORD *)(v30 + 16) = v8;
  *(_QWORD *)(v30 + 24) = v31;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v33 = v9;
  v32(v30 + v28, v24, v9);
  v34 = v8;
  v92 = v8;
  v93 = v31;
  v94 = v25;
  v70 = v25;
  v35 = v72;
  v36 = v30;
  v37 = v31;
  Button.init(action:label:)(sub_1008C6BB0, v36, sub_10015250C, v91, v34, v31);
  v38 = v33;
  v69(v24, v25, v33);
  v39 = swift_allocObject(&unk_100B98F78, v68, v29);
  *(_QWORD *)(v39 + 16) = v34;
  *(_QWORD *)(v39 + 24) = v37;
  v40 = v24;
  v41 = v38;
  v32(v39 + v28, v40, v38);
  v42 = v73;
  v43 = v74;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)(sub_1008C6C04, v39, LocationSearchEntityFromStringResolver.init(), 0, v74, v75, 0.5, 10.0);
  swift_release(v39);
  v44 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v35, v43);
  v45 = v80;
  static AccessibilityChildBehavior.contain.getter(v44);
  v46 = v76;
  View.accessibilityElement(children:)(v45, v76, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v45, v85);
  v47 = v46;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v46);
  v48 = v70 + *(int *)(v41 + 48);
  v49 = *(_QWORD *)v48;
  v50 = *(_QWORD *)(v48 + 8);
  LOBYTE(v42) = *(_BYTE *)(v48 + 16);
  v51 = *(_QWORD *)(v48 + 24);
  memset(v106, 0, sizeof(v106));
  sub_1000D55D4(v49, v50, (char)v42);
  v82 = v51;
  swift_bridgeObjectRetain(v51);
  v52 = sub_1000BA294(&qword_100C031F0);
  State.init(wrappedValue:)(v106, v52);
  v53 = v97;
  v54 = v98;
  v55 = v99;
  v56 = v100;
  v85 = v101;
  v97 = v49;
  v98 = v50;
  LOBYTE(v99) = (_BYTE)v42;
  v100 = v51;
  v101 = v53;
  v102 = v54;
  v103 = v55;
  v104 = v56;
  v105 = v85;
  *(_QWORD *)&v106[0] = v47;
  *((_QWORD *)&v106[0] + 1) = OpaqueTypeConformance2;
  v57 = swift_getOpaqueTypeConformance2(v106, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v58 = v79;
  v59 = v88;
  View.modifier<A>(_:)(&v97, v79, &type metadata for WeatherComponentButtonAccessibilityLabelModifier, v57);
  sub_1000D31B4(v49, v50, (char)v42);
  swift_bridgeObjectRelease(v82);
  sub_10010F9B0(v53, v54, v55, v56);
  swift_release(v85);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v58);
  v60 = sub_1008C64E8();
  v95 = v57;
  v96 = v60;
  v61 = v83;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  v63 = (uint64_t)v81;
  v64 = v90;
  sub_1000B2074(v90, v61, v62);
  v65 = *(void (**)(char *, uint64_t))(v86 + 8);
  v65(v64, v61);
  sub_1000B1100(v63, v61, v87);
  return ((uint64_t (*)(uint64_t, uint64_t))v65)(v63, v61);
}

uint64_t sub_100078E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  size_t v33;
  uint64_t v34;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 10 + a1) & ~v9;
  v11 = (v9 + 10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  LOBYTE(v8) = *(_BYTE *)(v17 + 16);
  swift_retain();
  sub_1000D55D4(v18, v19, v8);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_BYTE *)(v16 + 16) = v8;
  v20 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 24) = v20;
  v21 = (v16 + 39) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  v23 = type metadata accessor for Date(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  v26 = v25 + 23;
  v27 = v25 + 23 + v21;
  v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  v29 = v27 & v28;
  v30 = (v26 + v22) & v28;
  swift_bridgeObjectRetain(v20);
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v23))
  {
    v31 = *(_DWORD *)(v24 + 84);
    v32 = *(_QWORD *)(v24 + 64);
    if (v31)
      v33 = *(_QWORD *)(v24 + 64);
    else
      v33 = v32 + 1;
    memcpy((void *)v29, (const void *)v30, v33);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v29, v30, v23);
    _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v23);
    v31 = *(_DWORD *)(v24 + 84);
    v32 = *(_QWORD *)(v24 + 64);
  }
  if (v31)
    v34 = v32;
  else
    v34 = v32 + 1;
  *(_QWORD *)(((v29 | 7) + v34) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v30 | 7) + v34) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

void sub_100079028(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t WitnessTable;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void (*v90)(_QWORD *, uint64_t);
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  char v151[8];
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  void *v169;
  void *v170;
  uint64_t v171;

  v143 = a2;
  v2 = *(_QWORD *)(a1 + 24);
  v141 = *(_QWORD *)(v2 - 8);
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_100098728();
  sub_10009511C(v5 - v4);
  v7 = v6[2];
  v8 = v6[4];
  v9 = (void *)v6[5];
  v10 = v6;
  v125 = v6;
  v165 = v7;
  v166 = v2;
  v11 = v7;
  v167 = v8;
  v168 = v9;
  v12 = v8;
  v150 = v8;
  v13 = v9;
  v14 = sub_1000C0FAC();
  v120 = type metadata accessor for TransitionContext(v14, v15);
  v121 = type metadata accessor for Optional(0, v120);
  sub_1000BA8CC(*(_QWORD *)(v121 - 8));
  __chkstk_darwin(v16);
  sub_1000CF928();
  sub_10009511C(v17);
  v138 = (_QWORD *)*(v10 - 1);
  __chkstk_darwin(v18);
  sub_10009511C((uint64_t)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v139 = v20;
  __chkstk_darwin(v21);
  sub_10009511C((uint64_t)&v118 - v22);
  v23 = v11;
  v148 = v11;
  v165 = v11;
  v166 = v2;
  v167 = v12;
  v168 = v13;
  v25 = sub_100098F50(v24, (uint64_t)&v165);
  v165 = v23;
  v166 = v2;
  v167 = v12;
  v168 = v13;
  v26 = sub_1000C0FAC();
  v28 = type metadata accessor for PageContainer(v26, v27);
  type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v28);
  v29 = sub_1000C5738((uint64_t)&unk_1009B83C4);
  v170 = &protocol witness table for EmptyView;
  v171 = v29;
  v30 = sub_100099A04((uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  v31 = sub_100109A04(v30);
  v32 = sub_1000C5738((uint64_t)&protocol conformance descriptor for VStack<A>);
  v165 = v31;
  v166 = v2;
  v167 = v32;
  v168 = v13;
  v33 = sub_1000C6740();
  v34 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for [A]);
  v165 = v25;
  v166 = v2;
  v167 = v33;
  v168 = (void *)v34;
  v169 = v13;
  v149 = v13;
  v35 = sub_1000C0FAC();
  type metadata accessor for ForEach(v35, v36);
  v164 = sub_1000C5738((uint64_t)&protocol conformance descriptor for IDView<A, B>);
  sub_10009D4E8((uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v37 = sub_1000C6BDC();
  v41 = type metadata accessor for WireframeScrollInterestView(v37, v38, v39, v40);
  v42 = sub_10009D4E8((uint64_t)&unk_1009917A8);
  v165 = v2;
  v166 = v41;
  v167 = (uint64_t)v13;
  v168 = (void *)v42;
  v43 = sub_1000C0FAC();
  v45 = type metadata accessor for TabView(v43, v44);
  v46 = type metadata accessor for PageTabViewStyle(255);
  v47 = sub_1000C4770((uint64_t)&protocol conformance descriptor for TabView<A, B>);
  v165 = v45;
  v166 = v46;
  v167 = v47;
  v168 = &protocol witness table for PageTabViewStyle;
  sub_1000BC7B4(255, (uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>);
  v48 = type metadata accessor for LazyPageTabViewStyle(255);
  v165 = v45;
  v166 = v48;
  v167 = v47;
  v168 = &protocol witness table for LazyPageTabViewStyle;
  sub_1000BC7B4(255, (uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>);
  v49 = sub_1000C6BDC();
  v52 = type metadata accessor for _ConditionalContent(v49, v50, v51);
  v53 = type metadata accessor for Group(0, v52);
  sub_1000BA8CC(*(_QWORD *)(v53 - 8));
  __chkstk_darwin(v54);
  sub_1000CF928();
  sub_10009511C(v55);
  v56 = type metadata accessor for ModifiedContent(0, v53, &type metadata for _AllowsHitTestingModifier);
  sub_1000BA8CC(*(_QWORD *)(v56 - 8));
  __chkstk_darwin(v57);
  sub_1000CF928();
  sub_10009511C(v58);
  v59 = type metadata accessor for ModifiedContent(0, v56, &type metadata for _TransactionModifier);
  sub_1000BA8CC(*(_QWORD *)(v59 - 8));
  __chkstk_darwin(v60);
  sub_1000CF928();
  sub_10009511C(v61);
  v165 = v45;
  v166 = v46;
  v167 = v47;
  v168 = &protocol witness table for PageTabViewStyle;
  v62 = sub_10009885C((uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>);
  v165 = v45;
  v166 = v48;
  v167 = v47;
  v168 = &protocol witness table for LazyPageTabViewStyle;
  v63 = sub_10009885C((uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>);
  v162 = v62;
  v163 = v63;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v52);
  v161 = WitnessTable;
  v65 = sub_10009D4E8((uint64_t)&protocol conformance descriptor for <A> Group<A>);
  v66 = sub_1005ABD50();
  v122 = v65;
  v159 = v65;
  v160 = v66;
  v129 = v56;
  v123 = sub_100099A04((uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
  v157 = v123;
  v158 = &protocol witness table for _TransactionModifier;
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v59);
  v68 = v149;
  v69 = (void *)v149[1];
  v165 = v59;
  v166 = v2;
  v167 = v67;
  v168 = v69;
  v70 = sub_1000BC7B4(0, (uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  sub_1000BA8CC(*(_QWORD *)(v70 - 8));
  __chkstk_darwin(v71);
  sub_1000CF928();
  sub_10009511C(v72);
  v136 = v59;
  v165 = v59;
  v166 = v2;
  v126 = v67;
  v167 = v67;
  v168 = v69;
  v73 = sub_10009885C((uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  v134 = v70;
  v165 = v70;
  v166 = v2;
  v130 = v73;
  v167 = v73;
  v168 = v69;
  v146 = v69;
  v133 = sub_1000BC7B4(0, (uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  v132 = *(_QWORD *)(v133 - 8);
  sub_10009D98C();
  __chkstk_darwin(v74);
  sub_10009883C();
  v128 = v75 - v76;
  __chkstk_darwin(v77);
  sub_10009511C((uint64_t)&v118 - v78);
  v152 = v148;
  v153 = v2;
  v154 = v150;
  v155 = v68;
  v79 = v137;
  v80 = v147;
  v156 = v147;
  v81 = v124;
  v82 = WitnessTable;
  v83 = v138;
  Group<A>.init(content:)(sub_10014109C, v151, v52, v82);
  v84 = (uint64_t)v125;
  v85 = v80;
  LOBYTE(v80) = sub_10061B058((uint64_t)v125);
  v144 = (void (*)(uint64_t, uint64_t, uint64_t))v83[2];
  v144(v79, v85, v84);
  if ((v80 & 1) != 0)
  {
    ((void (*)(uint64_t, uint64_t))v83[1])(v79, v84);
    v86 = 0;
  }
  else
  {
    v87 = v121;
    v88 = type metadata accessor for State(0, v121);
    v89 = v119;
    State.wrappedValue.getter(v119, v88);
    ((void (*)(uint64_t, uint64_t))v83[1])(v79, v84);
    v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v120) == 1;
    sub_1000988C4();
    v90(v89, v87);
  }
  v91 = v127;
  View.allowsHitTesting(_:)(v86, v53, v122);
  sub_1000988C4();
  sub_100098820(v81, v92);
  v93 = v135;
  View.transaction(_:)(sub_100030BEC, 0, v129, v123);
  sub_1000988C4();
  sub_100098820(v91, v94);
  v95 = sub_100110274();
  v96 = v142;
  Binding.wrappedValue.getter(v95);
  v97 = v140;
  sub_10009D73C();
  v98 = *((unsigned __int8 *)v83 + 80);
  v99 = (v98 + 48) & ~v98;
  v139 += v99;
  v137 = v98 | 7;
  v100 = (_QWORD *)swift_allocObject(&unk_100B85060, v139, v98 | 7);
  v101 = v83;
  v102 = v100;
  v100[2] = v148;
  v100[3] = v2;
  v103 = v149;
  v100[4] = v150;
  v100[5] = v103;
  v138 = (_QWORD *)v101[4];
  ((void (*)(char *, uint64_t, uint64_t))v138)((char *)v100 + v99, v97, v84);
  View.onChange<A>(of:initial:_:)(v96, 0, sub_10014107C, v102, v136, v2, v126, v146);
  swift_release(v102);
  sub_1000E7CEC();
  sub_1000988C4();
  sub_100098820(v93, v104);
  v105 = sub_100099644();
  State.wrappedValue.getter(v96, v105);
  sub_10009D73C();
  v106 = (_QWORD *)swift_allocObject(&unk_100B85088, v139, v137);
  v106[2] = v148;
  v106[3] = v2;
  v107 = v149;
  v106[4] = v150;
  v106[5] = v107;
  ((void (*)(char *, uint64_t, uint64_t))v138)((char *)v106 + v99, v97, v84);
  v108 = v128;
  v109 = v134;
  v110 = v130;
  v111 = v146;
  v112 = v145;
  View.onChange<A>(of:initial:_:)(v96, 0, sub_100140E98, v106, v134, v2, v130, v146);
  swift_release(v106);
  sub_1000E7CEC();
  sub_1000988C4();
  v113(v112, v109);
  v165 = v109;
  v166 = v2;
  v167 = v110;
  v168 = v111;
  v114 = sub_10009885C((uint64_t)&v165, (uint64_t)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>);
  v115 = v131;
  v116 = v133;
  sub_1000B2074(v108, v133, v114);
  v117 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
  v117(v108, v116);
  sub_1000B1100(v115, v116, v143);
  v117(v115, v116);
  sub_100098640();
}

uint64_t variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral()
{
  return 0;
}

__n128 sub_10007998C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;

  v5 = v2[1].n128_u64[0];
  v6 = v2[1].n128_u64[1];
  v7 = v2[5].n128_u64[0];
  v8 = a2 + 96;
  v13 = v2[2];
  sub_100043CA8((uint64_t)&v2[5].n128_i64[1], a2 + 56);
  sub_100043CA8((uint64_t)&v2[8], v8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain(v13.n128_u64[0]);
  swift_retain();
  v9 = sub_1000BA294(&qword_100BC4650);
  v10 = sub_1001226B4();
  *(_QWORD *)a2 = ObservedObject.init(wrappedValue:)(v5, v9, v10);
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v6;
  result = v13;
  *(__n128 *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 40) = a1;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_100079A58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[2];
  __int128 v12[2];

  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  sub_100043CA8((uint64_t)(a1 + 7), (uint64_t)v12);
  sub_100043CA8((uint64_t)(a1 + 12), (uint64_t)v11);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain(v6);
  swift_retain();
  return sub_100702A1C(v4, v5, v6, v7, v8, v9, v12, v11, a2);
}

uint64_t sub_100079B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v49[12];
  int v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];

  v56 = a1;
  v57 = a2;
  v2 = sub_1000BA294(&qword_100BC3800);
  __chkstk_darwin(v2);
  v55 = (uint64_t *)&v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Location.Identifier(0);
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  __chkstk_darwin(v4);
  v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LocationViewModel(0);
  v8 = __chkstk_darwin(v7);
  v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v12 = &v49[-v11];
  v13 = (int *)type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  __chkstk_darwin(v13);
  v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v49[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100BC2550 != -1)
    swift_once(&qword_100BC2550, sub_10013AFC0);
  v20 = sub_1000AECD4(v16, (uint64_t)qword_100C00A20);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v16);
  LOBYTE(v20) = sub_10011E9F0(v20, (uint64_t)v19);
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v21 = v6;
    v51 = v6;
    v22 = v52;
    v23 = *(_QWORD *)(v52 + 8);
    swift_bridgeObjectRetain(v56);
    swift_retain();
    sub_10008D488();
    swift_release(v23);
    v24 = v53;
    v25 = v54;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v53 + 16))(v21, v12, v54);
    sub_1000215BC((uint64_t)v12, type metadata accessor for LocationViewModel);
    v26 = *(_QWORD *)(v22 + 8);
    swift_retain();
    sub_10008D488();
    swift_release(v26);
    v50 = v10[*(int *)(v7 + 68)];
    sub_1000215BC((uint64_t)v10, type metadata accessor for LocationViewModel);
    v27 = *(_QWORD *)(v22 + 16);
    KeyPath = swift_getKeyPath(&unk_1009C2360);
    v29 = (uint64_t)v55;
    *v55 = KeyPath;
    v30 = sub_1000BA294(&qword_100BC2908);
    swift_storeEnumTagMultiPayload(v29, v30, 0);
    v31 = type metadata accessor for LocationViewCollisionOptions(0);
    sub_10007A100((uint64_t)&qword_100BCCB38);
    v33 = v32;
    swift_retain();
    v34 = EnvironmentObject.init()(v31, v33);
    v36 = v35;
    *(_QWORD *)v15 = swift_getKeyPath(&unk_1009C2220);
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    v15[72] = 0;
    *(_OWORD *)(v15 + 8) = 0u;
    *((_QWORD *)v15 + 10) = v56;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(&v15[v13[6]], v51, v25);
    v15[v13[7]] = v50;
    v37 = &v15[v13[8]];
    v38 = sub_1000BA294((uint64_t *)&unk_100C0A200);
    sub_10007AB60((uint64_t)&unk_100BC4620);
    *v37 = ObservedObject.init(wrappedValue:)(v27, v38, v39);
    v37[1] = v40;
    v41 = &v15[v13[9]];
    v42 = type metadata accessor for LocationViewCollisionOptionsUpdatingViewState(0);
    v43 = swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
    *(_BYTE *)(v43 + 16) = 0;
    ObservationRegistrar.init()(v43);
    v58[0] = v43;
    State.init(wrappedValue:)(v58, v42);
    v44 = v58[2];
    *v41 = v58[1];
    v41[1] = v44;
    sub_1000787D4(v29, (uint64_t)&v15[v13[10]], &qword_100BC3800);
    v45 = (uint64_t *)&v15[v13[11]];
    *v45 = v34;
    v45[1] = v36;
    v46 = v57;
    sub_10007802C((uint64_t)v15, v57, type metadata accessor for LocationViewCollisionOptionsUpdatingView);
    v47 = 0;
  }
  else
  {
    v47 = 1;
    v46 = v57;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v46, v47, 1, (uint64_t)v13);
}

void sub_100079F9C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1000215BC(a1, v1);
}

uint64_t sub_100079FA4()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100079FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v3);
}

void sub_100079FB4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1000215BC(a1, v1);
}

uint64_t sub_100079FD4()
{
  uint64_t *v0;

  return sub_1000BA294(v0);
}

uint64_t sub_100079FDC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100079FE8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  return sub_1000A0794(0, a2, a3);
}

uint64_t sub_100079FF0()
{
  uint64_t v0;

  return Gradient.Stop.init(color:location:)(v0);
}

void sub_100079FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 200) = v0;
  *(_QWORD *)(v3 - 192) = v2;
  *(_QWORD *)(v3 - 208) = v1;
}

uint64_t sub_10007A00C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10007A020()
{
  return type metadata accessor for PreviewLocation(0);
}

uint64_t sub_10007A030(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(a1, v1);
}

uint64_t sub_10007A038@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B15F8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

double sub_10007A044()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10007A04C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10007A058(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_10007A064()
{
  return type metadata accessor for MeasuredLocationViewerView(0);
}

uint64_t sub_10007A06C(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10007A078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return String.hash(into:)(a1, v1, v2);
}

uint64_t sub_10007A084(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(255);
}

uint64_t sub_10007A0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_10007A0C4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_100095B78(a1, v2, v1);
}

double sub_10007A0D0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88)).n128_u64[0];
  return result;
}

uint64_t sub_10007A0D8(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10007A0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_10007A0F4()
{
  uint64_t v0;
  uint64_t v1;

  return swift_unknownObjectRelease(*(_QWORD *)(v1 + *(int *)(v0 + 24)));
}

void sub_10007A100(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  if (!sub_10009987C(a1))
  {
    v3 = v2(255);
    atomic_store(sub_10003BC38(v3), v1);
  }
  sub_10004A298();
}

Swift::Int sub_10007A148()
{
  return Hasher._finalize()();
}

uint64_t sub_10007A150()
{
  return 0;
}

uint64_t sub_10007A15C()
{
  return type metadata accessor for ModalViewState.MapViewModal(0);
}

uint64_t sub_10007A164()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 288))();
}

uint64_t sub_10007A170@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_10007A178()
{
  return type metadata accessor for WeatherData.WeatherStatisticsState(0);
}

uint64_t sub_10007A180()
{
  return EnvironmentValues.accessibilityEnabled.getter();
}

uint64_t sub_10007A18C()
{
  uint64_t v0;
  uint64_t v1;

  return swift_release(*(_QWORD *)(v0 + v1));
}

void sub_10007A194(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1002234B0(a1, a2, v2);
}

void sub_10007A19C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1000F9DDC(*(_QWORD *)(v3 + 440), v4, a3);
}

void sub_10007A1A8(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  id v100;
  id v101;
  uint64_t v102;
  void (**v103)(uint64_t@<X8>);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void (**v149)(uint64_t@<X8>);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char v153[8];
  void (*v154)();
  uint64_t v155;
  _OWORD v156[2];
  char v157;
  char v158[8];

  v126 = a8;
  LODWORD(v135) = a7;
  v151 = a6;
  v134 = a5;
  v133 = a4;
  v132 = a2;
  v123 = a1;
  v150 = a9;
  v127 = a10;
  v128 = a11;
  v129 = a12;
  v130 = a13;
  v148 = sub_1000BA294(&qword_100C00D38);
  __chkstk_darwin(v148);
  v149 = (void (**)(uint64_t@<X8>))((char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v118 = type metadata accessor for ScrollIndicatorVisibility(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v136 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1000BA294(&qword_100C00D10);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v152 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for LocationContentView(0);
  v20 = *(_QWORD *)(v142 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v142);
  v131 = (uint64_t)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1000BA294(&qword_100C00D40);
  v147 = *(_QWORD *)(v119 - 8);
  v22 = __chkstk_darwin(v119);
  v138 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v137 = (char *)&v114 - v25;
  __chkstk_darwin(v24);
  v146 = (char *)&v114 - v26;
  v141 = sub_1000BA294(&qword_100C00D08);
  __chkstk_darwin(v141);
  v144 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_1000BA294(&qword_100C00CF8);
  __chkstk_darwin(v143);
  v145 = (uint64_t)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1000BA294(&qword_100C00CE8);
  v114 = *(_QWORD *)(v122 - 8);
  v29 = __chkstk_darwin(v122);
  v116 = (uint64_t)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v30;
  __chkstk_darwin(v29);
  v121 = (char *)&v114 - v31;
  v124 = a3 & 1;
  v125 = v135 & 1;
  v113 = a8;
  v32 = a1;
  v33 = v132;
  v34 = v133;
  v35 = v134;
  v36 = sub_100057E5C(v13, v32, v132, a3 & 1, v133, v134, v151, v125, v113, a10, a11, a12, a13);
  v120 = v13;
  v37 = v131;
  sub_100080C0C(v13, v131, type metadata accessor for LocationContentView);
  v38 = *(unsigned __int8 *)(v20 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = (v21 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v41 + 39) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v42 + 39) & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject(&unk_100B8BE00, v43 + 32, v38 | 7);
  sub_10007802C(v37, v44 + v39, type metadata accessor for LocationContentView);
  *(double *)(v44 + v40) = v36;
  v45 = v44 + v41;
  v46 = v123;
  *(_QWORD *)v45 = v123;
  *(_QWORD *)(v45 + 8) = v33;
  v47 = v33;
  v48 = v124;
  *(_BYTE *)(v45 + 16) = v124;
  *(_QWORD *)(v45 + 24) = v34;
  v49 = v44 + v42;
  v50 = v35;
  v51 = v151;
  *(_QWORD *)v49 = v35;
  *(_QWORD *)(v49 + 8) = v51;
  LOBYTE(v37) = v125;
  *(_BYTE *)(v49 + 16) = v125;
  v52 = v126;
  *(_QWORD *)(v49 + 24) = v126;
  v53 = (uint64_t *)(v44 + v43);
  v54 = v127;
  v55 = v128;
  *v53 = v127;
  v53[1] = v55;
  LOBYTE(v40) = v129;
  v56 = v130;
  v53[2] = v129;
  v53[3] = v56;
  v154 = sub_10070DB48;
  v155 = v44;
  v135 = v44;
  sub_1000D55D4(v46, v47, v48);
  swift_bridgeObjectRetain(v34);
  sub_1000D55D4(v50, v51, v37);
  swift_bridgeObjectRetain(v52);
  sub_10010F980(v54, v55, v40, v56);
  v58 = static Axis.Set.vertical.getter(v57);
  v59 = sub_1000BA294(&qword_100C00D48);
  sub_10007AB60((uint64_t)&unk_100C00D50);
  v61 = ScrollView.init(_:showsIndicators:content:)(v58, 1, sub_10070DBD0, v153, v59, v60);
  v62 = v136;
  v63 = static ScrollIndicatorVisibility.never.getter(v61);
  v64 = static Axis.Set.vertical.getter(v63);
  v65 = static Axis.Set.horizontal.getter();
  v66 = Axis.Set.init(rawValue:)(0);
  v67 = Axis.Set.init(rawValue:)(v66);
  if (Axis.Set.init(rawValue:)(v67 & v64) != v64)
    v66 = Axis.Set.init(rawValue:)(v66 | v64);
  v68 = Axis.Set.init(rawValue:)(v66);
  if (Axis.Set.init(rawValue:)(v68 & v65) != v65)
    v66 = Axis.Set.init(rawValue:)(v66 | v65);
  v69 = v122;
  v70 = (uint64_t)v121;
  v71 = v120;
  v72 = v119;
  v73 = v118;
  v74 = v117;
  sub_10007AB60((uint64_t)&unk_100C00D18);
  v75 = v138;
  v76 = v66;
  v77 = v140;
  v78 = v152;
  View.scrollIndicators(_:axes:)(v62, v76, v140, v79);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v73);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v78, v77);
  v80 = v147;
  v81 = *(void (**)(char *, char *, uint64_t))(v147 + 32);
  v82 = v137;
  v81(v137, v75, v72);
  v83 = v146;
  v81(v146, v82, v72);
  v84 = swift_release(v135);
  LOBYTE(v81) = static Edge.Set.top.getter(v84);
  v85 = v71 + *(int *)(v142 + 64);
  v86 = *(_OWORD *)(v85 + 16);
  v156[0] = *(_OWORD *)v85;
  v156[1] = v86;
  v157 = *(_BYTE *)(v85 + 32);
  sub_1000787D4((uint64_t)v156, (uint64_t)v158, &qword_100BC3BB0);
  sub_1001171F4((uint64_t)v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D55E4);
  sub_10011740C();
  v88 = v87;
  sub_1001171F4((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000D31C4);
  v89 = EdgeInsets.init(_all:)(v88);
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v96 = (uint64_t)v144;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v144, v83, v72);
  v97 = v96 + *(int *)(v141 + 36);
  *(_BYTE *)v97 = (_BYTE)v81;
  *(double *)(v97 + 8) = v89;
  *(_QWORD *)(v97 + 16) = v91;
  *(_QWORD *)(v97 + 24) = v93;
  *(_QWORD *)(v97 + 32) = v95;
  *(_BYTE *)(v97 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v72);
  v98 = v145;
  sub_100037768(v96, v145, &qword_100C00D08);
  *(_WORD *)(v98 + *(int *)(v143 + 36)) = 0;
  sub_100021A14(v96, &qword_100C00D08);
  sub_100037768(v98, v70, &qword_100C00CF8);
  v99 = (_QWORD *)(v70 + *(int *)(v69 + 36));
  *v99 = 0xD000000000000012;
  v99[1] = 0x80000001009F11F0;
  sub_100021A14(v98, &qword_100C00CF8);
  v100 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v101 = objc_msgSend(v100, "userInterfaceIdiom");

  v102 = v69;
  if (v101)
  {
    v103 = v149;
    sub_100037768(v70, (uint64_t)v149, &qword_100C00CE8);
    v104 = 1;
  }
  else
  {
    v105 = v116;
    sub_100037768(v70, v116, &qword_100C00CE8);
    v106 = *(unsigned __int8 *)(v114 + 80);
    v107 = (v106 + 16) & ~v106;
    v108 = swift_allocObject(&unk_100B8BE28, v107 + v115, v106 | 7);
    sub_1000787D4(v105, v108 + v107, &qword_100C00CE8);
    v104 = 0;
    v103 = v149;
    *v149 = sub_10070DC88;
    v103[1] = (void (*)(uint64_t@<X8>))v108;
  }
  swift_storeEnumTagMultiPayload(v103, v148, v104);
  v109 = sub_1000BA294(&qword_100C00CD8);
  sub_10007AB60((uint64_t)&unk_100C00CD0);
  v111 = v110;
  v112 = sub_10070D788();
  _ConditionalContent<>.init(storage:)(v103, v109, v102, v111, v112);
  sub_100021A14(v70, &qword_100C00CE8);
}

void sub_10007AB60(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!sub_10009987C(a1))
  {
    v3 = sub_100075EB0(v2);
    atomic_store(sub_10003BC38(v3), v1);
  }
  sub_10004A298();
}

_QWORD *sub_10007AB90(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  _BYTE *v110;
  _QWORD *v111;
  uint64_t v112;
  void *v113;
  void *v114;
  id v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  const void *v155;
  int v156;
  size_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  const void *v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  int *v177;
  int v178;
  int v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _BYTE *v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  void *__dst;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  int *v194;
  int *v195;
  int *v196;
  _QWORD *v197;
  _QWORD *v198;

  if (a1 != a2)
  {
    sub_100021A14((uint64_t)a1, &qword_100C09EB0);
    v6 = sub_1000BA294(&qword_100C09EB0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ScenePhase(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = v13[16];
  sub_100037094(*(_QWORD *)v13, v15);
  v17 = *(_QWORD *)v12;
  v18 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  v12[16] = v16;
  sub_1000BF398(v17, v18);
  v196 = a3;
  v197 = a2;
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for Location.Identifier(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(char *, char *, uint64_t))(v23 + 24);
  v24(v20, v21, v22);
  v25 = (int *)type metadata accessor for LocationViewModel(0);
  v26 = v25[5];
  v27 = &v20[v26];
  v28 = &v21[v26];
  LODWORD(v14) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v20[v26], 1, v22);
  v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v22);
  v198 = a1;
  if ((_DWORD)v14)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v28, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v22);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
LABEL_11:
    v30 = sub_1000BA294(&qword_100BCD680);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_12;
  }
  v24(v27, v28, v22);
LABEL_12:
  v31 = v25[6];
  v32 = &v20[v31];
  v33 = &v21[v31];
  *(_QWORD *)v32 = *(_QWORD *)&v21[v31];
  v34 = *(_QWORD *)&v21[v31 + 8];
  v35 = *(_QWORD *)&v20[v31 + 8];
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  v36 = *((_QWORD *)v33 + 2);
  v37 = *((_QWORD *)v33 + 3);
  v38 = *((_QWORD *)v33 + 4);
  v39 = *((_QWORD *)v33 + 5);
  v40 = v33[48];
  sub_100176D88(v36, v37, v38, v39, v40);
  v41 = *((_QWORD *)v32 + 2);
  v42 = *((_QWORD *)v32 + 3);
  v43 = *((_QWORD *)v32 + 4);
  v44 = *((_QWORD *)v32 + 5);
  *((_QWORD *)v32 + 2) = v36;
  *((_QWORD *)v32 + 3) = v37;
  *((_QWORD *)v32 + 4) = v38;
  *((_QWORD *)v32 + 5) = v39;
  v45 = v32[48];
  v32[48] = v40;
  sub_100176DD4(v41, v42, v43, v44, v45);
  *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
  v46 = *((_QWORD *)v33 + 8);
  v47 = *((_QWORD *)v32 + 8);
  *((_QWORD *)v32 + 8) = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v47);
  *((_QWORD *)v32 + 9) = *((_QWORD *)v33 + 9);
  v48 = *((_QWORD *)v33 + 10);
  v49 = *((_QWORD *)v32 + 10);
  *((_QWORD *)v32 + 10) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
  v50 = *((_QWORD *)v33 + 12);
  v51 = *((_QWORD *)v32 + 12);
  *((_QWORD *)v32 + 12) = v50;
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRelease(v51);
  *((_QWORD *)v32 + 13) = *((_QWORD *)v33 + 13);
  v52 = *((_QWORD *)v33 + 14);
  v53 = *((_QWORD *)v32 + 14);
  *((_QWORD *)v32 + 14) = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  *((_QWORD *)v32 + 15) = *((_QWORD *)v33 + 15);
  v54 = *((_QWORD *)v33 + 16);
  v55 = *((_QWORD *)v32 + 16);
  *((_QWORD *)v32 + 16) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  v32[136] = v33[136];
  v32[137] = v33[137];
  v32[138] = v33[138];
  *((_QWORD *)v32 + 18) = *((_QWORD *)v33 + 18);
  v56 = *((_QWORD *)v33 + 19);
  v57 = *((_QWORD *)v32 + 19);
  *((_QWORD *)v32 + 19) = v56;
  swift_bridgeObjectRetain(v56);
  swift_bridgeObjectRelease(v57);
  v32[160] = v33[160];
  v32[161] = v33[161];
  v58 = v25[7];
  v59 = *(_QWORD *)&v21[v58];
  v60 = *(_QWORD *)&v20[v58];
  *(_QWORD *)&v20[v58] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v60);
  v61 = v25[8];
  v62 = *(_QWORD *)&v20[v61];
  *(_QWORD *)&v20[v61] = *(_QWORD *)&v21[v61];
  v63 = v62 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  swift_release(v63);
  v64 = v25[9];
  v65 = (uint64_t)&v20[v64];
  v66 = (uint64_t)&v21[v64];
  v67 = type metadata accessor for LocationFooterViewModel(0);
  LODWORD(v63) = _s7Weather24LocationCompositionStateOwet_0(v65, 1, v67);
  v68 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v67);
  if ((_DWORD)v63)
  {
    if (!v68)
    {
      *(_BYTE *)v65 = *(_BYTE *)v66;
      *(_BYTE *)(v65 + 1) = *(_BYTE *)(v66 + 1);
      *(_BYTE *)(v65 + 2) = *(_BYTE *)(v66 + 2);
      *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
      v69 = *(_QWORD *)(v66 + 16);
      *(_QWORD *)(v65 + 16) = v69;
      v70 = *(int *)(v67 + 32);
      v191 = v65;
      v71 = (void *)(v65 + v70);
      v72 = (const void *)(v66 + v70);
      v73 = type metadata accessor for URL(0);
      swift_bridgeObjectRetain(v69);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
      {
        v74 = sub_1000BA294(&qword_100BD4280);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      }
      v194 = (int *)v67;
      v83 = *(int *)(v67 + 36);
      v84 = v191 + v83;
      v85 = v66 + v83;
      *(_BYTE *)v84 = *(_BYTE *)(v66 + v83);
      v86 = *(_QWORD *)(v66 + v83 + 8);
      *(_QWORD *)(v84 + 8) = v86;
      v87 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
      v88 = v87[6];
      __dst = (void *)(v84 + v88);
      v89 = (const void *)(v85 + v88);
      swift_bridgeObjectRetain(v86);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v73))
      {
        v90 = sub_1000BA294(&qword_100BD4280);
        memcpy(__dst, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(__dst, v89, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v73);
      }
      v91 = v87[7];
      v92 = (_QWORD *)(v84 + v91);
      v93 = (_QWORD *)(v85 + v91);
      *v92 = *v93;
      v94 = v93[1];
      v92[1] = v94;
      *(_QWORD *)(v84 + v87[8]) = *(_QWORD *)(v85 + v87[8]);
      *(_BYTE *)(v191 + v194[10]) = *(_BYTE *)(v66 + v194[10]);
      v95 = v194[11];
      v96 = (void *)(v191 + v95);
      v97 = (const void *)(v66 + v95);
      v98 = type metadata accessor for LocationOfInterest(0);
      swift_bridgeObjectRetain(v94);
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
      {
        v99 = sub_1000BA294(&qword_100BC3118);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
      }
      v100 = (uint64_t)v194;
      *(_BYTE *)(v191 + v194[12]) = *(_BYTE *)(v66 + v194[12]);
      *(_BYTE *)(v191 + v194[13]) = *(_BYTE *)(v66 + v194[13]);
      v101 = v194[14];
      v102 = (_BYTE *)(v191 + v101);
      v103 = (_BYTE *)(v66 + v101);
      v104 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, (uint64_t)v104))
      {
        v105 = sub_1000BA294(&qword_100BCD688);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        *v102 = *v103;
        v106 = v104[5];
        v107 = &v102[v106];
        v108 = &v103[v106];
        v109 = type metadata accessor for Location(0);
        v110 = v107;
        v100 = (uint64_t)v194;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v110, v108, v109);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(&v102[v104[6]], &v103[v104[6]], v98);
        v102[v104[7]] = v103[v104[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, (uint64_t)v104);
      }
      _s7Weather24LocationCompositionStateOwst_0(v191, 0, 1, v100);
      goto LABEL_34;
    }
LABEL_18:
    v75 = sub_1000BA294(&qword_100BCD690);
    memcpy((void *)v65, (const void *)v66, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_34:
    v111 = v198;
    goto LABEL_35;
  }
  if (v68)
  {
    sub_1000215BC(v65, type metadata accessor for LocationFooterViewModel);
    goto LABEL_18;
  }
  *(_BYTE *)v65 = *(_BYTE *)v66;
  *(_BYTE *)(v65 + 1) = *(_BYTE *)(v66 + 1);
  *(_BYTE *)(v65 + 2) = *(_BYTE *)(v66 + 2);
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  v76 = *(_QWORD *)(v66 + 16);
  v77 = *(_QWORD *)(v65 + 16);
  *(_QWORD *)(v65 + 16) = v76;
  swift_bridgeObjectRetain(v76);
  swift_bridgeObjectRelease(v77);
  v78 = *(int *)(v67 + 32);
  v79 = (void *)(v65 + v78);
  v80 = (const void *)(v66 + v78);
  v81 = type metadata accessor for URL(0);
  LODWORD(v77) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v81);
  v82 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81);
  if ((_DWORD)v77)
  {
    if (!v82)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  v147 = *(_QWORD *)(v81 - 8);
  if (v82)
  {
    (*(void (**)(void *, uint64_t))(v147 + 8))(v79, v81);
LABEL_45:
    v148 = sub_1000BA294(&qword_100BD4280);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(void *, const void *, uint64_t))(v147 + 24))(v79, v80, v81);
LABEL_46:
  v195 = (int *)v67;
  v149 = *(int *)(v67 + 36);
  v150 = v65 + v149;
  v151 = v66 + v149;
  *(_BYTE *)v150 = *(_BYTE *)(v66 + v149);
  v152 = *(_QWORD *)(v66 + v149 + 8);
  v153 = *(_QWORD *)(v65 + v149 + 8);
  *(_QWORD *)(v150 + 8) = v152;
  swift_bridgeObjectRetain(v152);
  swift_bridgeObjectRelease(v153);
  v192 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v154 = v192[6];
  v155 = (const void *)(v151 + v154);
  v189 = v150 + v154;
  LODWORD(v153) = _s7Weather24LocationCompositionStateOwet_0(v150 + v154, 1, v81);
  v156 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v81);
  if ((_DWORD)v153)
  {
    if (v156)
    {
      v157 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v158 = (void *)v189;
LABEL_51:
      memcpy(v158, v155, v157);
      goto LABEL_55;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v189, v155, v81);
    _s7Weather24LocationCompositionStateOwst_0(v189, 0, 1, v81);
  }
  else
  {
    v159 = *(_QWORD *)(v81 - 8);
    if (v156)
    {
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v189, v81);
      v157 = *(_QWORD *)(*(_QWORD *)(sub_1000BA294(&qword_100BD4280) - 8) + 64);
      v158 = (void *)v189;
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v159 + 24))(v189, v155, v81);
  }
LABEL_55:
  v160 = v192[7];
  v161 = (_QWORD *)(v150 + v160);
  v162 = (_QWORD *)(v151 + v160);
  *v161 = *v162;
  v163 = v162[1];
  v164 = v161[1];
  v161[1] = v163;
  swift_bridgeObjectRetain(v163);
  swift_bridgeObjectRelease(v164);
  v165 = v192[8];
  v166 = *(_QWORD *)(v150 + v165);
  *(_QWORD *)(v150 + v165) = *(_QWORD *)(v151 + v165);
  swift_retain();
  swift_release(v166);
  *(_BYTE *)(v65 + v195[10]) = *(_BYTE *)(v66 + v195[10]);
  v167 = v195[11];
  v168 = (void *)(v65 + v167);
  v169 = (const void *)(v66 + v167);
  v170 = type metadata accessor for LocationOfInterest(0);
  LODWORD(v166) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v170);
  v171 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v170);
  v193 = v170;
  if ((_DWORD)v166)
  {
    if (!v171)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v168, v169, v170);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v170);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  v172 = *(_QWORD *)(v170 - 8);
  if (v171)
  {
    (*(void (**)(void *, uint64_t))(v172 + 8))(v168, v170);
LABEL_60:
    v173 = sub_1000BA294(&qword_100BC3118);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(void *, const void *, uint64_t))(v172 + 24))(v168, v169, v170);
LABEL_61:
  *(_BYTE *)(v65 + v195[12]) = *(_BYTE *)(v66 + v195[12]);
  *(_BYTE *)(v65 + v195[13]) = *(_BYTE *)(v66 + v195[13]);
  v174 = v195[14];
  v175 = (_BYTE *)(v65 + v174);
  v176 = (_BYTE *)(v66 + v174);
  v177 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  v178 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, (uint64_t)v177);
  v179 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, (uint64_t)v177);
  v111 = v198;
  if (v178)
  {
    if (!v179)
    {
      *v175 = *v176;
      v180 = v177[5];
      v181 = &v175[v180];
      v182 = &v176[v180];
      v183 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
      (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v193 - 8) + 16))(&v175[v177[6]], &v176[v177[6]]);
      v175[v177[7]] = v176[v177[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, (uint64_t)v177);
      goto LABEL_35;
    }
    goto LABEL_66;
  }
  if (v179)
  {
    sub_1000215BC((uint64_t)v175, type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_66:
    v184 = sub_1000BA294(&qword_100BCD688);
    memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
    goto LABEL_35;
  }
  *v175 = *v176;
  v185 = v177[5];
  v186 = &v175[v185];
  v187 = &v176[v185];
  v188 = type metadata accessor for Location(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v188 - 8) + 24))(v186, v187, v188);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v193 - 8) + 24))(&v175[v177[6]], &v176[v177[6]]);
  v175[v177[7]] = v176[v177[7]];
LABEL_35:
  v20[v25[10]] = v21[v25[10]];
  v20[v25[11]] = v21[v25[11]];
  v20[v25[12]] = v21[v25[12]];
  v20[v25[13]] = v21[v25[13]];
  v20[v25[14]] = v21[v25[14]];
  v112 = v25[15];
  v113 = *(void **)&v21[v112];
  v114 = *(void **)&v20[v112];
  *(_QWORD *)&v20[v112] = v113;
  v115 = v113;

  v20[v25[16]] = v21[v25[16]];
  v20[v25[17]] = v21[v25[17]];
  v20[v25[18]] = v21[v25[18]];
  v116 = v25[19];
  v117 = &v20[v116];
  v118 = &v21[v116];
  v119 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 24))(v117, v118, v119);
  v120 = v25[20];
  v121 = &v20[v120];
  v122 = &v21[v120];
  v123 = type metadata accessor for ForegroundEffect(0);
  LODWORD(v117) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v123);
  v124 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123);
  if (!(_DWORD)v117)
  {
    v125 = *(_QWORD *)(v123 - 8);
    if (!v124)
    {
      (*(void (**)(char *, char *, uint64_t))(v125 + 24))(v121, v122, v123);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v123);
    goto LABEL_40;
  }
  if (v124)
  {
LABEL_40:
    v126 = sub_1000BA294(&qword_100BC5B30);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
LABEL_41:
  v20[v25[21]] = v21[v25[21]];
  v127 = v25[22];
  v128 = *(_QWORD *)&v21[v127];
  v129 = *(_QWORD *)&v20[v127];
  *(_QWORD *)&v20[v127] = v128;
  swift_bridgeObjectRetain(v128);
  swift_bridgeObjectRelease(v129);
  v20[v25[23]] = v21[v25[23]];
  v130 = v25[24];
  v131 = &v20[v130];
  v132 = &v21[v130];
  v133 = type metadata accessor for LocationEntity(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 24))(v131, v132, v133);
  v134 = v196[7];
  v135 = (_QWORD *)((char *)v111 + v134);
  v136 = (_QWORD *)((char *)v197 + v134);
  v137 = *v136;
  v138 = v136[1];
  v139 = *v135;
  *v135 = *v136;
  swift_unknownObjectRetain(v137);
  swift_unknownObjectRelease(v139);
  v135[1] = v138;
  v140 = v196[8];
  v141 = (_QWORD *)((char *)v111 + v140);
  v142 = (_QWORD *)((char *)v197 + v140);
  *v141 = *v142;
  v143 = v141[1];
  v141[1] = v142[1];
  swift_retain();
  swift_release(v143);
  v144 = v196[9];
  v145 = *(_QWORD *)((char *)v111 + v144);
  *(_QWORD *)((char *)v111 + v144) = *(_QWORD *)((char *)v197 + v144);
  swift_retain();
  swift_release(v145);
  return v111;
}

uint64_t sub_10007B9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    *v11 = *v12;
    swift_retain();
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v56 = a3;
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)(a2 + v16);
  *(_WORD *)(v17 + 1) = *(_WORD *)(a2 + v16 + 1);
  v19 = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  v20 = (int *)type metadata accessor for LocationFooterViewModel(0);
  v21 = v20[8];
  v22 = (void *)(v17 + v21);
  v23 = (const void *)(v18 + v21);
  v24 = type metadata accessor for URL(0);
  swift_bridgeObjectRetain(v19);
  v57 = a2;
  v58 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_1000BA294(&qword_100BD4280);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v26 = v20[9];
  v27 = v17 + v26;
  v28 = v18 + v26;
  *(_BYTE *)v27 = *(_BYTE *)(v18 + v26);
  v29 = *(_QWORD *)(v18 + v26 + 8);
  *(_QWORD *)(v27 + 8) = v29;
  v30 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v31 = v30[6];
  v32 = (void *)(v27 + v31);
  v33 = (const void *)(v28 + v31);
  swift_bridgeObjectRetain(v29);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v24))
  {
    v34 = sub_1000BA294(&qword_100BD4280);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v32, v33, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v24);
  }
  v35 = v30[7];
  v36 = (_QWORD *)(v27 + v35);
  v37 = (_QWORD *)(v28 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_QWORD *)(v27 + v30[8]) = *(_QWORD *)(v28 + v30[8]);
  *(_BYTE *)(v17 + v20[10]) = *(_BYTE *)(v18 + v20[10]);
  v39 = v20[11];
  v40 = (void *)(v17 + v39);
  v41 = (const void *)(v18 + v39);
  v42 = type metadata accessor for LocationOfInterest(0);
  swift_bridgeObjectRetain(v38);
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    v43 = sub_1000BA294(&qword_100BC3118);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  *(_BYTE *)(v17 + v20[12]) = *(_BYTE *)(v18 + v20[12]);
  *(_BYTE *)(v17 + v20[13]) = *(_BYTE *)(v18 + v20[13]);
  v44 = v20[14];
  v45 = (_BYTE *)(v17 + v44);
  v46 = (_BYTE *)(v18 + v44);
  v47 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, (uint64_t)v47))
  {
    v48 = sub_1000BA294(&qword_100BCD688);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    *v45 = *v46;
    v49 = v47[5];
    v50 = &v45[v49];
    v51 = &v46[v49];
    v52 = type metadata accessor for Location(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(&v45[v47[6]], &v46[v47[6]], v42);
    v45[v47[7]] = v46[v47[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
  }
  v53 = *(int *)(v56 + 32);
  v54 = *(_OWORD *)(v57 + v53);
  *(_OWORD *)(v58 + v53) = v54;
  swift_unknownObjectRetain(v54);
  return v58;
}

BOOL sub_10007BDA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  _BOOL8 result;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v7 = type metadata accessor for Date(0);
  sub_100098B6C();
  __chkstk_darwin(v8);
  sub_100099864();
  v9 = sub_1000BA294(&qword_100BC4978);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100079F58();
  sub_1000BA294((uint64_t *)&unk_100BD35A0);
  sub_10009D98C();
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  if (*a1 != *a2)
    return 0;
  v20 = *((_QWORD *)a1 + 2);
  v21 = *((_QWORD *)a2 + 2);
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_14;
  }
  if (v20 == 1)
  {
    if (v21 != 1)
      return 0;
LABEL_14:
    v35 = v4;
    v27 = sub_10009985C();
    sub_10007C714((uint64_t)&a1[*(int *)(v27 + 24)], (uint64_t)v19);
    sub_10007C714((uint64_t)&a2[*(int *)(v27 + 24)], (uint64_t)v17);
    v28 = v2 + *(int *)(v9 + 48);
    sub_10007C714((uint64_t)v19, v2);
    sub_10007C714((uint64_t)v17, v28);
    sub_100098750(v2);
    if (v24)
    {
      sub_1000BC08C((uint64_t)v17);
      sub_1000BC08C((uint64_t)v19);
      sub_100098750(v28);
      if (v24)
      {
        sub_100021AA4(v2, (uint64_t *)&unk_100BD35A0);
        return 1;
      }
    }
    else
    {
      sub_10007C714(v2, (uint64_t)v14);
      sub_100098750(v28);
      v30 = v35;
      if (!v29)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v3, v28, v7);
        sub_100086DA4((unint64_t *)&qword_100BC3590, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v32 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v3, v7, v31);
        v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v33(v3, v7);
        sub_1000BC08C((uint64_t)v17);
        sub_1000BC08C((uint64_t)v19);
        v33((uint64_t)v14, v7);
        sub_1000BC08C(v2);
        return (v32 & 1) != 0;
      }
      sub_1000BC08C((uint64_t)v17);
      sub_1000BC08C((uint64_t)v19);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v7);
    }
    sub_100021AA4(v2, &qword_100BC4978);
    return 0;
  }
  if (v21 < 2)
    return 0;
  v22 = *((_QWORD *)a1 + 1);
  v23 = *((_QWORD *)a2 + 1);
  v24 = v22 == v23 && v20 == v21;
  if (v24)
    goto LABEL_14;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v20, v23, v21, 0);
  result = 0;
  if ((v25 & 1) != 0)
    goto LABEL_14;
  return result;
}

_QWORD *sub_10007C080(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _QWORD *v23;

  v3 = type metadata accessor for SavedLocation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 88) == 1)
  {
    v12 = static Logger.geocode.getter(v9);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      swift_slowDealloc(v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v16 = a1[2];
    if (v16)
    {
      v23 = _swiftEmptyArrayStorage;
      sub_10011ED3C();
      v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v18 = (uint64_t)a1 + v17;
      a1 = v23;
      v19 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_10007C294(v18, (uint64_t)v6);
        v23 = a1;
        v20 = a1[2];
        if (v20 >= a1[3] >> 1)
        {
          sub_10011ED3C();
          a1 = v23;
        }
        a1[2] = v20 + 1;
        sub_10007802C((uint64_t)v6, (uint64_t)a1 + v17 + v20 * v19, (uint64_t (*)(_QWORD))&type metadata accessor for SavedLocation);
        v18 += v19;
        --v16;
      }
      while (v16);
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRetain(a1);
  }
  return a1;
}

uint64_t sub_10007C294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a1;
  v59 = a2;
  v2 = sub_1000BA294(&qword_100BCCC50);
  __chkstk_darwin(v2);
  v56 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000BA294(&qword_100BCD680);
  __chkstk_darwin(v4);
  v54 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Location(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v9 = __chkstk_darwin(v8);
  v57 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v55 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v50 - v13;
  v50 = type metadata accessor for TimeZone(0);
  __chkstk_darwin(v50);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Location.Identifier(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for SavedLocation.Placeholder(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SavedLocation(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v58, (uint64_t)v26, v27);
  v58 = v24;
  if (swift_getEnumCaseMultiPayload(v26, v24) == 1)
  {
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v26, v20);
    v29 = SavedLocation.Placeholder.identifier.getter(v28);
    v30 = static TimeZone.current.getter(v29);
    static Date.now.getter(v30);
    v31 = type metadata accessor for Date(0);
    v32 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v31);
    v33 = SavedLocation.Placeholder.searchTitle.getter(v32);
    v35 = v34;
    v36 = SavedLocation.Placeholder.searchSubtitle.getter();
    v37 = v59;
    Location.init(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)(v19, v16, v14, v33, v35, v36, v38, 0, 0);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v39 = v37;
  }
  else
  {
    v39 = v59;
    v40 = v51;
    v41 = v52;
    v42 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v26, v53);
    v43 = v54;
    _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v17);
    v44 = v56;
    v45 = _s7Weather24LocationCompositionStateOwst_0(v56, 1, 1, v50);
    v46 = v57;
    Location.lastRefreshDate.getter(v45);
    v47 = type metadata accessor for Date(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47) == 1)
    {
      v48 = (uint64_t)v55;
      ((void (*)(void))static Date.now.getter)();
      sub_100021A14(v57, (uint64_t *)&unk_100BD35A0);
    }
    else
    {
      v48 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v55, v57, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v47);
    Location.with(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)(v43, v44, v48, 0, 0, 0, 0, 0, 0, 0, 0);
    sub_100021A14(v48, (uint64_t *)&unk_100BD35A0);
    sub_100021A14(v44, &qword_100BCCC50);
    sub_100021A14(v43, &qword_100BCD680);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  }
  return swift_storeEnumTagMultiPayload(v39, v58, 0);
}

uint64_t sub_10007C714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10007C75C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10004A2B0(a1, a2, a3);
  sub_1000B4328(v3);
  sub_10004A298();
}

void sub_10007C77C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_10004A2B0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_10004A298();
}

void sub_10007C7B0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (**v39)(uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  NSString v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  void (*v72)(uint64_t, uint64_t);
  id v73;
  NSString v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (**v78)(uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  unsigned __int8 v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;

  v2 = v1;
  v100 = a1;
  type metadata accessor for ActiveLocationModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v94 = v4;
  v99 = sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v93 = v6;
  v108 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v88 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  sub_100088FDC();
  v89 = v7;
  v92 = sub_1000C3650();
  v8 = *(_QWORD *)(v92 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v92);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1000BA294(&qword_100BCD748);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_1000BA294(&qword_100BCD750);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_100088FDC();
  v90 = v15;
  v16 = sub_1000BA294(&qword_100BCD758);
  v97 = *(_QWORD *)(v16 - 8);
  v98 = v16;
  __chkstk_darwin(v16);
  sub_100088FDC();
  v91 = v17;
  v96 = sub_1000BA294(&qword_100BCD760);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v95 = v19;
  v87 = static Color.clear.getter(v20);
  static Alignment.center.getter(v87);
  _FrameLayout.init(width:height:alignment:)(0, 0, 0, 0);
  v86 = v110;
  v85 = v111;
  v84 = v112;
  v83 = v113;
  v82 = v114;
  v81 = v115;
  sub_100098A68(v1);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = v22 + v9;
  v24 = v21 | 7;
  v80 = sub_1000D9448((uint64_t)&unk_100B65A08, v22 + v9);
  sub_1000B45D0(v80, v80 + v22);
  v101 = v1;
  sub_100098A68(v1);
  v106 = v22 + v9;
  v107 = v24;
  v25 = sub_1000D9448((uint64_t)&unk_100B65A30, v22 + v9);
  v102 = v22;
  sub_1000B45D0(v25, v25 + v22);
  v26 = (void *)objc_opt_self(NSNotificationCenter);
  v104 = v26;
  v27 = objc_msgSend(v26, "defaultCenter");
  v28 = v89;
  sub_1000E6EFC((uint64_t)UIApplicationDidEnterBackgroundNotification);

  sub_10000AB54(v2, (uint64_t)v10, type metadata accessor for LocationViewObserverView);
  v29 = sub_1000D9448((uint64_t)&unk_100B65A58, v23);
  sub_1000B45D0(v29, v29 + v22);
  v30 = v103;
  v31 = &v13[*(int *)(v103 + 52)];
  v32 = v88;
  v109 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  v33 = v28;
  v34 = v28;
  v35 = v108;
  v109(v31, v33, v108);
  v36 = v86;
  *(_QWORD *)v13 = v87;
  *((_QWORD *)v13 + 1) = v36;
  v13[16] = v85;
  *((_QWORD *)v13 + 3) = v84;
  v13[32] = v83;
  v37 = v81;
  *((_QWORD *)v13 + 5) = v82;
  *((_QWORD *)v13 + 6) = v37;
  v38 = v80;
  *((_QWORD *)v13 + 7) = sub_100153A60;
  *((_QWORD *)v13 + 8) = v38;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *((_QWORD *)v13 + 13) = sub_100153A6C;
  *((_QWORD *)v13 + 14) = v25;
  v39 = (uint64_t (**)(uint64_t))&v13[*(int *)(v30 + 56)];
  *v39 = sub_10023C5F0;
  v39[1] = (uint64_t (*)(uint64_t))v29;
  v103 = *(_QWORD *)(v32 + 8);
  ((void (*)(uint64_t, uint64_t))v103)(v34, v35);
  v40 = objc_msgSend(v26, "defaultCenter");
  sub_1000E6EFC((uint64_t)UIApplicationWillEnterForegroundNotification);

  v41 = v101;
  v79 = v10;
  sub_10000AB54(v101, (uint64_t)v10, type metadata accessor for LocationViewObserverView);
  v42 = sub_1000D8E1C((uint64_t)&unk_100B65A80);
  sub_1000B45D0(v42, v42 + v102);
  v43 = v90;
  sub_10003773C((uint64_t)v13, v90, &qword_100BCD748);
  v44 = v105;
  v45 = v108;
  v109((char *)(v43 + *(int *)(v105 + 52)), v34, v108);
  v46 = (uint64_t (**)(uint64_t))(v43 + *(int *)(v44 + 56));
  *v46 = sub_10023C600;
  v46[1] = (uint64_t (*)(uint64_t))v42;
  ((void (*)(uint64_t, uint64_t))v103)(v34, v45);
  sub_100021A14((uint64_t)v13, &qword_100BCD748);
  v47 = v41;
  v48 = *(_QWORD *)(v41 + *(int *)(v92 + 32) + 8);
  swift_retain();
  v49 = v94;
  sub_10006BDA4();
  swift_release(v48);
  v50 = v93;
  sub_100019258(v49, v93);
  v51 = (uint64_t)v79;
  sub_10000AB54(v47, (uint64_t)v79, type metadata accessor for LocationViewObserverView);
  v52 = sub_1000D8E1C((uint64_t)&unk_100B65AA8);
  v53 = v102;
  sub_1000B45D0(v52, v52 + v102);
  sub_10003D2DC(&qword_100BCD768, &qword_100BCD750);
  v55 = v54;
  v56 = sub_10015A110();
  v57 = v91;
  View.onChange<A>(of:initial:_:)(v50, 0, sub_100153B2C, v52, v105, v99, v55, v56);
  swift_release(v52);
  sub_100021A14(v50, &qword_100BCD680);
  sub_100021A14(v43, &qword_100BCD750);
  v58 = objc_msgSend(v104, "defaultCenter");
  v59 = sub_1000CC944();
  v60 = v34;
  sub_1000E6EFC((uint64_t)v59);

  v61 = v51;
  sub_10000AB54(v47, v51, type metadata accessor for LocationViewObserverView);
  v62 = swift_allocObject(&unk_100B65AD0, v106, v107);
  v63 = v53;
  sub_10007CFB8(v61, v62 + v53);
  v64 = v97;
  v65 = v95;
  v66 = v57;
  v67 = v57;
  v68 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v95, v66, v98);
  v69 = v96;
  v70 = v108;
  v109((char *)(v65 + *(int *)(v96 + 52)), v60, v108);
  v71 = (void (**)(uint64_t))(v65 + *(int *)(v69 + 56));
  *v71 = sub_10023C64C;
  v71[1] = (void (*)(uint64_t))v62;
  v72 = (void (*)(uint64_t, uint64_t))v103;
  ((void (*)(uint64_t, uint64_t))v103)(v60, v70);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v67, v68);
  v73 = objc_msgSend(v104, "defaultCenter");
  v74 = sub_1000CC944();
  sub_1000E6EFC((uint64_t)v74);

  sub_10000AB54(v101, v61, type metadata accessor for LocationViewObserverView);
  v75 = swift_allocObject(&unk_100B65AF8, v106, v107);
  sub_10007CFB8(v61, v75 + v63);
  v76 = v100;
  sub_10003773C(v65, v100, &qword_100BCD760);
  v77 = sub_1000BA294(&qword_100BCD778);
  v109((char *)(v76 + *(int *)(v77 + 52)), v60, v70);
  v78 = (void (**)(uint64_t))(v76 + *(int *)(v77 + 56));
  *v78 = sub_10023C9EC;
  v78[1] = (void (*)(uint64_t))v75;
  v72(v60, v70);
  sub_100021A14(v65, &qword_100BCD760);
}

uint64_t type metadata accessor for LocationViewObserverView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BCD6F8;
  if (!qword_100BCD6F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationViewObserverView);
  return result;
}

uint64_t sub_10007CFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationViewObserverView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CFFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  Swift::String v51;

  v1 = v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  if (*(_BYTE *)(v1 + 136) == 1)
  {
    v49 = 0x46B0C23838;
    v50 = 0xA500000000000000;
    v2 = sub_100114EF8();
    v3 = Text.init<A>(_:)(&v49, &type metadata for String, v2);
    v5 = v4;
    v7 = v6;
    v9 = v8 & 1;
    v10 = sub_100171F6C();
    v11 = Text.font(_:)(v10, v3, v5, v9, v7);
    swift_release(v10);
    v12 = v3;
    v13 = v5;
    v14 = v9;
  }
  else
  {
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v51._countAndFlagsBits = 0xD00000000000003CLL;
    v51._object = (void *)0x80000001009F11B0;
    v16._object = (void *)0x80000001009F1180;
    v16._countAndFlagsBits = 0xD000000000000024;
    v17._countAndFlagsBits = 0x3A4C202040253A48;
    v17._object = (void *)0xEA00000000004025;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v51);

    v19 = sub_1000BA294(&qword_100BC3C38);
    v20 = swift_allocObject(v19, 112, 7);
    *(_OWORD *)(v20 + 16) = xmmword_10097DA20;
    v22 = *(_QWORD *)(v1 + 104);
    v21 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v20 + 56) = &type metadata for String;
    v23 = sub_1000B2E24();
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v21;
    v24 = *(_QWORD *)(v1 + 120);
    v25 = *(_QWORD *)(v1 + 128);
    *(_QWORD *)(v20 + 96) = &type metadata for String;
    *(_QWORD *)(v20 + 104) = v23;
    *(_QWORD *)(v20 + 64) = v23;
    *(_QWORD *)(v20 + 72) = v24;
    *(_QWORD *)(v20 + 80) = v25;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v25);
    v26 = static String.localizedStringWithFormat(_:_:)(v18._countAndFlagsBits, v18._object, v20);
    v28 = v27;
    swift_bridgeObjectRelease(v18._object);
    swift_bridgeObjectRelease(v20);
    v49 = v26;
    v50 = v28;
    v29 = sub_100114EF8();
    v30 = Text.init<A>(_:)(&v49, &type metadata for String, v29);
    v32 = v31;
    v34 = v33;
    v36 = v35 & 1;
    v37 = sub_10007DBAC();
    v38 = Text.font(_:)(v37, v30, v32, v36, v34);
    v40 = v39;
    v42 = v41;
    v7 = v43;
    swift_release(v37);
    v44 = v42 & 1;
    sub_1000D31B4(v30, v32, v36);
    swift_bridgeObjectRelease(v34);
    v46 = static Color.black.getter(v45);
    v47 = Color.opacity(_:)(0.3);
    swift_release(v46);
    v11 = Text.shadow(color:radius:x:y:)(v47, v38, v40, v44, v7, 5.0, 0.0, 2.0);
    swift_release(v47);
    v12 = v38;
    v13 = v40;
    v14 = v44;
  }
  sub_1000D31B4(v12, v13, v14);
  swift_bridgeObjectRelease(v7);
  return v11;
}

void sub_10007D2EC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v70;
  char *v71;
  double v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  Swift::String v80;
  Swift::String v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  _OWORD v143[3];

  v137 = a2;
  v3 = type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  __chkstk_darwin(v3);
  v136 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Font.Context(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v129 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v127);
  v7 = (_OWORD *)((char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v130 = sub_1000BA294(&qword_100BC3B00);
  v8 = __chkstk_darwin(v130);
  v140 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v139 = (uint64_t)&v121 - v10;
  v11 = type metadata accessor for Text.Scale(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocationHeaderView(0);
  v16 = a1 + *(int *)(v15 + 64);
  v17 = *(_QWORD *)(v16 + 96);
  v128 = v16;
  v123 = v15;
  if (v17)
  {
    v18 = *(_QWORD *)(v16 + 88);
    v19 = a1 + *(int *)(v15 + 68);
    v134 = *(_QWORD *)v19;
    v133 = *(_QWORD *)(v19 + 8);
    LODWORD(v126) = *(unsigned __int8 *)(v19 + 16);
    v125 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)&v143[0] = v18;
    *((_QWORD *)&v143[0] + 1) = v17;
    v20 = sub_100114EF8();
    v138 = a1;
    v21 = v20;
    swift_bridgeObjectRetain(v17);
    v22 = Text.init<A>(_:)(v143, &type metadata for String, v21);
    v24 = v23;
    v26 = v25;
    v28 = v27 & 1;
    static Text.Scale.secondary.getter();
    v122 = Text.textScale(_:isEnabled:)(v14, 1, v22, v24, v28, v26);
    v30 = v29;
    v124 = v31;
    v135 = v7;
    v33 = v32 & 1;
    sub_1000D31B4(v22, v24, v28);
    v34 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v34);
    v35 = v122;
    v36 = v124;
    v37 = static Text.+ infix(_:_:)(v134, v133, v126, v125, v122, v30, v33, v124);
    v39 = v38;
    v41 = v40;
    v43 = v42 & 1;
    v44 = v33;
    v7 = v135;
    sub_1000D31B4(v35, v30, v44);
    swift_bridgeObjectRelease(v36);
  }
  else
  {
    v45 = a1 + *(int *)(v15 + 68);
    v37 = *(_QWORD *)v45;
    v39 = *(_QWORD *)(v45 + 8);
    v46 = *(_QWORD *)(v45 + 24);
    v43 = *(unsigned __int8 *)(v45 + 16);
    sub_1000D55D4(*(_QWORD *)v45, v39, *(_BYTE *)(v45 + 16));
    v41 = v46;
    swift_bridgeObjectRetain(v46);
  }
  v133 = v39;
  v134 = v37;
  v47 = sub_10007DBAC();
  LODWORD(v135) = v43;
  v122 = v41;
  v48 = Text.font(_:)(v47, v37, v39, v43, v41);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  swift_release(v47);
  v55 = v52 & 1;
  v57 = static Color.black.getter(v56);
  v58 = Color.opacity(_:)(0.3);
  swift_release(v57);
  v125 = Text.shadow(color:radius:x:y:)(v58, v48, v50, v55, v54, 5.0, 0.0, 2.0);
  v124 = v59;
  LOBYTE(v57) = v60;
  v126 = v61;
  swift_release(v58);
  LODWORD(v138) = v57 & 1;
  sub_1000D31B4(v48, v50, v55);
  swift_bridgeObjectRelease(v54);
  v62 = (char *)v7 + *(int *)(v127 + 20);
  v63 = enum case for RoundedCornerStyle.continuous(_:);
  v64 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v62, v63, v64);
  __asm { FMOV            V0.2D, #1.0 }
  *v7 = _Q0;
  v70 = sub_10007DBAC();
  v71 = v129;
  sub_10015905C();
  v72 = Font.capHeight(in:)(v71, v70);
  v73 = swift_release(v70);
  v74 = (*(uint64_t (**)(char *, uint64_t, __n128))(v131 + 8))(v71, v132, v73);
  static Alignment.center.getter(v74);
  ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))_FrameLayout.init(width:height:alignment:))(0x4000000000000000, 0, v72 + 2.0, 0);
  v75 = v140;
  sub_100080C0C((uint64_t)v7, v140, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v76 = (_OWORD *)(v75 + *(int *)(v130 + 36));
  v77 = v143[1];
  *v76 = v143[0];
  v76[1] = v77;
  v76[2] = v143[2];
  sub_10006BCFC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v78 = v139;
  sub_1000787D4(v75, v139, &qword_100BC3B00);
  v79 = v136;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v80);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v128 + 56));
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v81);
  v82 = LocalizedStringKey.init(stringInterpolation:)(v79);
  v86 = Text.init(_:tableName:bundle:comment:)(v82, v84, v83 & 1, v85, 0, 0, 0, "Describes the current condition.");
  v88 = v87;
  v90 = v89;
  v92 = v91 & 1;
  v93 = sub_10007DBAC();
  v94 = Text.font(_:)(v93, v86, v88, v92, v90);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  swift_release(v93);
  v101 = v98 & 1;
  sub_1000D31B4(v86, v88, v92);
  swift_bridgeObjectRelease(v90);
  v103 = static Color.black.getter(v102);
  v104 = Color.opacity(_:)(0.3);
  swift_release(v103);
  v132 = Text.shadow(color:radius:x:y:)(v104, v94, v96, v101, v100, 5.0, 0.0, 2.0);
  v131 = v105;
  LOBYTE(v92) = v106;
  v136 = v107;
  swift_release(v104);
  LOBYTE(v104) = v92 & 1;
  sub_1000D31B4(v94, v96, v101);
  swift_bridgeObjectRelease(v100);
  LOBYTE(v94) = v138;
  v142 = v138;
  v108 = v78;
  v109 = v140;
  sub_100037768(v108, v140, &qword_100BC3B00);
  v141 = v92 & 1;
  v110 = v137;
  v111 = v125;
  v112 = v124;
  *v137 = v125;
  v110[1] = v112;
  *((_BYTE *)v110 + 16) = v94;
  v113 = v126;
  v110[3] = v126;
  v114 = sub_1000BA294(&qword_100BC3B08);
  sub_100037768(v109, (uint64_t)v110 + *(int *)(v114 + 48), &qword_100BC3B00);
  v115 = (char *)v110 + *(int *)(v114 + 64);
  v116 = v132;
  v117 = v131;
  *(_QWORD *)v115 = v132;
  *((_QWORD *)v115 + 1) = v117;
  v115[16] = v104;
  v118 = v136;
  *((_QWORD *)v115 + 3) = v136;
  v119 = v111;
  v120 = v111;
  LOBYTE(v111) = v138;
  sub_1000D55D4(v120, v112, v138);
  swift_bridgeObjectRetain(v113);
  sub_1000D55D4(v116, v117, v104);
  swift_bridgeObjectRetain(v118);
  sub_1000D55D4(v119, v112, v111);
  swift_bridgeObjectRetain(v113);
  sub_1000D55D4(v116, v117, v104);
  swift_bridgeObjectRetain(v118);
  sub_1000D31B4(v134, v133, (char)v135);
  swift_bridgeObjectRelease(v122);
  sub_1000D31B4(v116, v117, v104);
  swift_bridgeObjectRelease(v118);
  sub_100021A14(v139, &qword_100BC3B00);
  sub_1000D31B4(v119, v112, v111);
  swift_bridgeObjectRelease(v113);
  sub_1000D31B4(v116, v117, v141);
  swift_bridgeObjectRelease(v118);
  sub_100021A14(v140, &qword_100BC3B00);
  sub_1000D31B4(v119, v112, v142);
  swift_bridgeObjectRelease(v113);
}

uint64_t sub_10007DBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for Font.Leading(0);
  sub_1000AE848();
  __chkstk_darwin(v5);
  sub_100099864();
  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100098694();
  sub_1000DA428();
  sub_1000C089C();
  v8 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v3 & 1) == 0)
    v8 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  v9 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v2, *v8, v6);
  static Font.Weight.medium.getter(v9);
  v10 = static Font.system(_:weight:)(v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, enum case for Font.Leading.tight(_:), v0);
  v11 = Font.leading(_:)(v1, v10);
  sub_10009880C();
  sub_100098820(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return v11;
}

void sub_10007DCC0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t *v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unsigned int *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;

  v141 = a2;
  v3 = type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin(v3);
  v123 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for BlendMode(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1000BA294(&qword_100BC3B90);
  v6 = __chkstk_darwin(v139);
  v119 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v118 = (uint64_t)&v118 - v8;
  v9 = sub_1000BA294(&qword_100BFBC90);
  v10 = __chkstk_darwin(v9);
  v140 = (uint64_t)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v138 = (uint64_t)&v118 - v12;
  v136 = type metadata accessor for AccessibilityTraits(0);
  v132 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for AccessibilityChildBehavior(0);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v15 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100BFBC98);
  __chkstk_darwin(v16);
  v18 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000BA294(&qword_100BFBCA0);
  __chkstk_darwin(v19);
  v21 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1000BA294(&qword_100BFBCA8);
  __chkstk_darwin(v124);
  v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1000BA294(&qword_100BFBCB0);
  v133 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v125 = (char *)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1000BA294(&qword_100BFBCB8);
  v25 = __chkstk_darwin(v134);
  v137 = (uint64_t)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v127 = (char *)&v118 - v28;
  v29 = __chkstk_darwin(v27);
  v130 = (char *)&v118 - v30;
  v31 = __chkstk_darwin(v29);
  v143 = (uint64_t)&v118 - v32;
  *(_QWORD *)v18 = static VerticalAlignment.center.getter(v31);
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v33 = (uint64_t)&v18[*(int *)(sub_1000BA294(&qword_100BFBCC0) + 44)];
  v126 = a1;
  sub_10001A188(a1, v33);
  v34 = (char *)a1 + *(int *)(type metadata accessor for ContentStatusBannerView(0) + 24);
  v35 = v34[32];
  v36 = *((_QWORD *)v34 + 5);
  v37 = *((_OWORD *)v34 + 1);
  v144 = *(_OWORD *)v34;
  v145 = v37;
  v146 = v35;
  v147 = v36;
  v38 = sub_1000BA294(&qword_100BFBC88);
  State.wrappedValue.getter(&v148, v38);
  v39 = v148;
  swift_release(v149);
  swift_release(v150);
  swift_release(v151);
  KeyPath = swift_getKeyPath(&unk_1009BD458);
  sub_100037794((uint64_t)v18, (uint64_t)v21, &qword_100BFBC98);
  v41 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v41 = KeyPath;
  v41[1] = v39;
  sub_100021AA4((uint64_t)v18, &qword_100BFBC98);
  v42 = v34[32];
  v43 = *((_QWORD *)v34 + 5);
  v44 = *((_OWORD *)v34 + 1);
  v144 = *(_OWORD *)v34;
  v145 = v44;
  v146 = v42;
  v147 = v43;
  v142 = v38;
  State.wrappedValue.getter(&v148, v38);
  swift_release(v148);
  v45 = v149;
  swift_release(v150);
  swift_release(v151);
  v46 = swift_getKeyPath(&unk_1009BD488);
  sub_100037794((uint64_t)v21, (uint64_t)v23, &qword_100BFBCA0);
  v47 = v124;
  v48 = (uint64_t *)&v23[*(int *)(v124 + 36)];
  *v48 = v46;
  v48[1] = v45;
  sub_100021AA4((uint64_t)v21, &qword_100BFBCA0);
  static AccessibilityChildBehavior.ignore.getter();
  v49 = sub_100156298();
  v50 = v125;
  v51 = v47;
  View.accessibilityElement(children:)(v15, v47, v49);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v15, v129);
  sub_100021AA4((uint64_t)v23, &qword_100BFBCA8);
  v52 = sub_1000BA294(&qword_100BD3BF8);
  v53 = v132;
  v54 = swift_allocObject(v52, ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72), *(unsigned __int8 *)(v132 + 80) | 7);
  *(_OWORD *)(v54 + 16) = xmmword_10097CA50;
  static AccessibilityTraits.isHeader.getter();
  *(_QWORD *)&v144 = v54;
  sub_10000F1C8((unint64_t *)&unk_100C0A5F0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  v56 = v55;
  v57 = sub_1000BA294(&qword_100BD3C00);
  sub_10003D2DC(&qword_100C0A600, &qword_100BD3C00);
  v58 = v135;
  v59 = v136;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v144, v57, v60, v136, v56);
  *(_QWORD *)&v144 = v51;
  *((_QWORD *)&v144 + 1) = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v144, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v62 = (uint64_t)v127;
  v63 = v131;
  View.accessibilityAddTraits(_:)(v58, v131, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v50, v63);
  v64 = v126;
  v65 = v126[1];
  *(_QWORD *)&v144 = *v126;
  *((_QWORD *)&v144 + 1) = v65;
  v66 = sub_100114EF8();
  v67 = (uint64_t)v130;
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v144, v134, &type metadata for String, v66);
  sub_100021AA4(v62, &qword_100BFBCB8);
  sub_1000F111C(v67, v143, &qword_100BFBCB8);
  v68 = v64[5];
  if (v68)
  {
    *(_QWORD *)&v144 = v64[4];
    *((_QWORD *)&v144 + 1) = v68;
    swift_bridgeObjectRetain(v68);
    v69 = Text.init<A>(_:)(&v144, &type metadata for String, v66);
    v71 = v70;
    v73 = v72;
    v74 = *(_QWORD *)v34;
    v130 = (char *)*((_QWORD *)v34 + 1);
    v76 = v75 & 1;
    v77 = *((_QWORD *)v34 + 3);
    v129 = *((_QWORD *)v34 + 2);
    v136 = v77;
    LODWORD(v135) = v34[32];
    v128 = *((_QWORD *)v34 + 5);
    *(_QWORD *)&v144 = v74;
    *((_QWORD *)&v144 + 1) = v130;
    v131 = v74;
    *(_QWORD *)&v145 = v129;
    *((_QWORD *)&v145 + 1) = v77;
    v146 = (char)v135;
    v147 = v128;
    State.wrappedValue.getter(&v148, v142);
    v78 = v148;
    v79 = v149;
    v80 = v150;
    swift_release(v151);
    swift_release(v79);
    swift_release(v78);
    v81 = Text.font(_:)(v80, v69, v71, v76, v73);
    v83 = v82;
    LOBYTE(v78) = v84;
    v127 = v85;
    swift_release(v80);
    v86 = v78 & 1;
    sub_1000D31B4(v69, v71, v76);
    swift_bridgeObjectRelease(v73);
    v87 = v130;
    *(_QWORD *)&v144 = v74;
    *((_QWORD *)&v144 + 1) = v130;
    v88 = v129;
    *(_QWORD *)&v145 = v129;
    *((_QWORD *)&v145 + 1) = v136;
    v146 = (char)v135;
    v89 = v128;
    v147 = v128;
    v90 = v142;
    State.wrappedValue.getter(&v148, v142);
    v91 = v148;
    v92 = v149;
    v93 = v151;
    swift_release(v150);
    swift_release(v92);
    swift_release(v91);
    v94 = v127;
    v132 = Text.foregroundColor(_:)(v93, v81, v83, v86, v127);
    v133 = v95;
    LOBYTE(v92) = v96;
    v134 = v97;
    swift_release(v93);
    v98 = v92 & 1;
    sub_1000D31B4(v81, v83, v86);
    swift_bridgeObjectRelease(v94);
    *(_QWORD *)&v144 = v131;
    *((_QWORD *)&v144 + 1) = v87;
    *(_QWORD *)&v145 = v88;
    *((_QWORD *)&v145 + 1) = v136;
    v146 = (char)v135;
    v147 = v89;
    State.wrappedValue.getter(&v148, v90);
    swift_release(v148);
    swift_release(v149);
    swift_release(v150);
    swift_release(v151);
    v99 = v121;
    if (v152)
      v100 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    else
      v100 = (unsigned int *)&enum case for BlendMode.normal(_:);
    v101 = v120;
    v102 = v122;
    (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v120, *v100, v122);
    v103 = (uint64_t)v123;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v123, v101, v102);
    v104 = v139;
    v105 = (uint64_t)v119;
    sub_10000AB54(v103, (uint64_t)&v119[*(int *)(v139 + 36)], (uint64_t (*)(_QWORD))&type metadata accessor for _BlendModeEffect);
    v106 = v132;
    v107 = v133;
    *(_QWORD *)v105 = v132;
    *(_QWORD *)(v105 + 8) = v107;
    *(_BYTE *)(v105 + 16) = v98;
    v108 = v134;
    *(_QWORD *)(v105 + 24) = v134;
    sub_1000D55D4(v106, v107, v98);
    swift_bridgeObjectRetain(v108);
    sub_1003A78C8(v103);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v102);
    sub_1000D31B4(v106, v107, v98);
    swift_bridgeObjectRelease(v108);
    v109 = v118;
    sub_1000F111C(v105, v118, &qword_100BC3B90);
    v110 = v138;
    sub_1000F111C(v109, v138, &qword_100BC3B90);
    v111 = 0;
    v112 = v104;
  }
  else
  {
    v110 = v138;
    v112 = v139;
    v111 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v110, v111, 1, v112);
  v113 = v143;
  v114 = v137;
  sub_100037794(v143, v137, &qword_100BFBCB8);
  v115 = v140;
  sub_100037794(v110, v140, &qword_100BFBC90);
  v116 = v141;
  sub_100037794(v114, v141, &qword_100BFBCB8);
  v117 = sub_1000BA294(&qword_100BFBCE0);
  sub_100037794(v115, v116 + *(int *)(v117 + 48), &qword_100BFBC90);
  sub_100021AA4(v110, &qword_100BFBC90);
  sub_100021AA4(v113, &qword_100BFBCB8);
  sub_100021AA4(v115, &qword_100BFBC90);
  sub_100021AA4(v114, &qword_100BFBCB8);
}

uint64_t sub_10007E7DC(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  v4 = a1[7];
  if (v4 >= 2)
    swift_bridgeObjectRelease(v4);
  v5 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v6 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7))
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  swift_release(*v8);
  swift_release(v8[1]);
  swift_release(v8[2]);
  swift_release(v8[3]);
  return swift_release(v8[5]);
}

_QWORD *sub_10007E8C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2 + 6;
  v10 = a2[7];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  if (v10 >= 2)
  {
    a1[6] = *v9;
    a1[7] = v10;
    swift_bridgeObjectRetain(v10);
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)v9;
  }
  v11 = *(int *)(a3 + 20);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = sub_1000BA294((uint64_t *)&unk_100C09CD0);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      v16 = sub_1000BA294(&qword_100BC5A68);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v17 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v17);
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = *((_QWORD *)v20 + 3);
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_QWORD *)v19 + 3) = v22;
  v19[32] = v20[32];
  *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for ContentStatusBannerView(uint64_t a1)
{
  uint64_t result;

  result = qword_100BFBC20;
  if (!qword_100BFBC20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentStatusBannerView);
  return result;
}

uint64_t initializeWithCopy for ContentStatusBannerViewStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

void sub_10007EB0C(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000D15A4(a1, a2);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100098728();
  v9 = v8 - v7;
  sub_10007EBC8(a1, v8 - v7, a2);
  a3();
  sub_1000DD70C(v9);
  sub_10007EB94(a1, a2);
}

void sub_10007EB94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1000D15A4(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_10004A298();
}

void sub_10007EBC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000BA294(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_10004A298();
}

uint64_t sub_10007EC08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1000BA294(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007EC4C(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  char v44;
  char v45;
  double v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[3];

  v2 = v1;
  v48 = type metadata accessor for CurrentLocation(0);
  sub_1000B42B0();
  v5 = __chkstk_darwin(v4);
  v49 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v48 - v7;
  sub_1000BA294(&qword_100C0B8D0);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100098728();
  v11 = v10 - v9;
  v12 = type metadata accessor for LocationModel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v51 = (char *)&v48 - v17;
  v18 = sub_1000BA294(&qword_100BECFA0);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_100098728();
  v22 = v21 - v20;
  v23 = sub_1000BA294(&qword_100BED048);
  UIViewRepresentableContext.coordinator.getter(v52, v23);
  v24 = v52[0];
  v25 = *v1;
  v26 = *(_QWORD *)(v52[0] + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages);
  *(_QWORD *)(v52[0] + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages) = *v2;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  type metadata accessor for LocationViewerPageControl(0);
  Binding.projectedValue.getter(v18);
  v27 = v24 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection;
  swift_beginAccess(v24 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection, v52, 33, 0);
  v28 = v22;
  v29 = a1;
  sub_100154388(v28, v27);
  swift_endAccess(v52);
  v30 = objc_msgSend(a1, "numberOfPages");
  v31 = *v2;
  if (v30 != *(id *)(*v2 + 16))
    objc_msgSend(a1, "setNumberOfPages:");
  sub_1001209E8(v31, v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12) != 1)
  {
    v34 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v51, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v34, v12);
    if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v16, v12) != enum case for LocationModel.current(_:))
    {
      objc_msgSend(a1, "setIndicatorImage:forPage:", 0, 0);
      v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v34, v12);
      v39 = ((uint64_t (*)(char *, uint64_t))v38)(v16, v12);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v35 = v50;
    sub_10009EDE8((uint64_t)v16, v50);
    v36 = v49;
    sub_1005205EC(v35, v49);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v48);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
      {
        sub_100120444();
        v40 = sub_10003CAB0(0x6E6F697461636F6CLL, 0xED00006C6C69662ELL);
        sub_1000C3CA4((uint64_t)v40, "setIndicatorImage:forPage:");

        sub_1004E4F48(v35);
        sub_1000C2BFC();
        sub_1004E4F48(v36);
LABEL_12:
        v33 = (uint64_t)&v16[*(int *)(sub_1000BA294(&qword_100BC3488) + 48)];
        v32 = &qword_100BC3118;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1004E4F48(v36);
    }
    sub_100120444();
    v41 = sub_10003CAB0(0xD000000000000013, 0x8000000100A092D0);
    sub_1000C3CA4((uint64_t)v41, "setIndicatorImage:forPage:");

    sub_1004E4F48(v35);
    sub_1000C2BFC();
    goto LABEL_12;
  }
  v32 = &qword_100C0B8D0;
  v33 = v11;
LABEL_13:
  v39 = sub_100021A68(v33, v32);
LABEL_14:
  v42 = *v2;
  __chkstk_darwin(v39);
  *(&v48 - 2) = (uint64_t)v2;
  swift_bridgeObjectRetain(v42);
  v43 = (id)sub_100120A1C((uint64_t (*)(uint64_t))sub_1001309A0, (uint64_t)(&v48 - 4), v42);
  v45 = v44;
  *(_QWORD *)&v46 = swift_bridgeObjectRelease(v42).n128_u64[0];
  if ((v45 & 1) == 0)
  {
    if (v43 != objc_msgSend(v29, "currentPage", v46))
      objc_msgSend(v29, "setCurrentPage:", v43);
    sub_10007F0D0((unint64_t)v29, (uint64_t)v43);
  }
  return swift_release(v24);
}

void sub_10007F0D0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __objc2_class_ro *v30;
  uint64_t *v31;
  id v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int EnumCaseMultiPayload;
  void (*v59)(uint64_t, uint64_t);
  id v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  unint64_t v64;
  id v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  void *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  Swift::String v86;
  Swift::String v87;

  v5 = type metadata accessor for CurrentLocation(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v75 - v9;
  v11 = sub_1000BA294(&qword_100C0B8D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocationModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v21 = (char *)&v75 - v18;
  v22 = *(_QWORD *)v2;
  if (*(_QWORD *)(*(_QWORD *)v2 + 16) <= a2)
    return;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v76 = v8;
    v79 = v19;
    v80 = v20;
    v78 = v10;
    v81 = (void *)a1;
    v82 = (uint64_t *)v2;
    v23 = v22 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v24 = *(_QWORD *)(v15 + 72);
    v83 = a2;
    v8 = *(char **)(v15 + 16);
    v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v8)((char *)&v75 - v18, v23 + v24 * a2, v14);
    v2 = LocationModel.name.getter(v25);
    v10 = v26;
    v77 = *(void (**)(char *, uint64_t))(v15 + 8);
    v77(v21, v14);
    sub_1000B2E08();
    v28 = v27;
    a1 = *(_QWORD *)(v27 + 16);
    a2 = a1 + 1;
    if (a1 < *(_QWORD *)(v27 + 24) >> 1)
      goto LABEL_4;
  }
  sub_1000B2E08();
  v28 = v71;
LABEL_4:
  *(_QWORD *)(v28 + 16) = a2;
  v29 = v28 + 16 * a1;
  *(_QWORD *)(v29 + 32) = v2;
  *(_QWORD *)(v29 + 40) = v10;
  v30 = &NetworkConnectivityMonitor;
  if (!v83)
  {
    v31 = v82;
    sub_1001209E8(*v82, (uint64_t)v13);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
    {
      sub_100021A68((uint64_t)v13, &qword_100C0B8D0);
      goto LABEL_8;
    }
    v51 = v80;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v80, v13, v14);
    v52 = v79;
    ((void (*)(uint64_t, char *, uint64_t))v8)(v79, v51, v14);
    v53 = v52;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v15 + 88))(v52, v14) != enum case for LocationModel.current(_:))
    {
      v59 = (void (*)(uint64_t, uint64_t))v77;
      v77(v51, v14);
      v59(v52, v14);
LABEL_24:
      v30 = &NetworkConnectivityMonitor;
      goto LABEL_8;
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 96))(v52, v14);
    v54 = v52;
    v55 = (uint64_t)v78;
    sub_10009EDE8(v54, (uint64_t)v78);
    v56 = v55;
    v57 = (uint64_t)v76;
    sub_1005205EC(v56, (uint64_t)v76);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v57, v5);
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
      {
        v60 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v86._countAndFlagsBits = 0xD000000000000029;
        v86._object = (void *)0x8000000100A093C0;
        v61._object = (void *)0x8000000100A093A0;
        v61._countAndFlagsBits = 0xD000000000000010;
        v62._countAndFlagsBits = 0;
        v62._object = (void *)0xE000000000000000;
        v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v86);

        v64 = *(_QWORD *)(v28 + 16);
        if (v64 >= *(_QWORD *)(v28 + 24) >> 1)
        {
          sub_1000B2E08();
          v28 = v74;
        }
        *(_QWORD *)(v28 + 16) = v64 + 1;
        *(Swift::String *)(v28 + 16 * v64 + 32) = v63;
        sub_1004E4F48((uint64_t)v78);
        v77(v80, v14);
        sub_1004E4F48((uint64_t)v76);
        goto LABEL_23;
      }
    }
    else
    {
      sub_1004E4F48(v57);
    }
    v65 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v66._countAndFlagsBits = 0xD00000000000001CLL;
    v87._countAndFlagsBits = 0xD000000000000047;
    v87._object = (void *)0x8000000100A09350;
    v66._object = (void *)0x8000000100A09330;
    v67._countAndFlagsBits = 0;
    v67._object = (void *)0xE000000000000000;
    v68 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, (Swift::String_optional)0, (NSBundle)v65, v67, v87);

    v69 = *(_QWORD *)(v28 + 16);
    if (v69 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      sub_1000B2E08();
      v28 = v73;
    }
    *(_QWORD *)(v28 + 16) = v69 + 1;
    *(Swift::String *)(v28 + 16 * v69 + 32) = v68;
    sub_1004E4F48((uint64_t)v78);
    v77(v80, v14);
LABEL_23:
    v70 = sub_1000BA294(&qword_100BC3488);
    sub_100021A68(v53 + *(int *)(v70 + 48), &qword_100BC3118);
    v31 = v82;
    goto LABEL_24;
  }
  v31 = v82;
LABEL_8:
  v32 = objc_msgSend((id)objc_opt_self(NSBundle), (SEL)v30[26].base_props);
  v85._countAndFlagsBits = 0xD000000000000036;
  v85._object = (void *)0x8000000100A092F0;
  v33._countAndFlagsBits = 0x2064252079746963;
  v33._object = (void *)0xED0000642520666FLL;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v85);

  v36 = sub_1000BA294(&qword_100BC3C38);
  v37 = swift_allocObject(v36, 112, 7);
  *(_OWORD *)(v37 + 16) = xmmword_10097DA20;
  v38 = v83 + 1;
  *(_QWORD *)(v37 + 56) = &type metadata for Int;
  *(_QWORD *)(v37 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v37 + 32) = v38;
  v39 = *(_QWORD *)(*v31 + 16);
  *(_QWORD *)(v37 + 96) = &type metadata for Int;
  *(_QWORD *)(v37 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v37 + 72) = v39;
  v40 = String.init(format:_:)(v35._countAndFlagsBits, v35._object, v37);
  v42 = v41;
  swift_bridgeObjectRelease(v35._object);
  v43 = *(_QWORD *)(v28 + 16);
  if (v43 >= *(_QWORD *)(v28 + 24) >> 1)
  {
    sub_1000B2E08();
    v28 = v72;
  }
  v44 = v81;
  *(_QWORD *)(v28 + 16) = v43 + 1;
  v45 = v28 + 16 * v43;
  *(_QWORD *)(v45 + 32) = v40;
  *(_QWORD *)(v45 + 40) = v42;
  v84 = v28;
  v46 = sub_1000BA294(&qword_100BF1280);
  v47 = sub_1000B2E60();
  v48 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v46, v47);
  v50 = v49;
  swift_bridgeObjectRelease(v28);
  sub_100026EC4(v48, v50, v44, (SEL *)&selRef_setAccessibilityValue_);
}

uint64_t sub_10007F774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];
  char v75[24];
  _OWORD v76[3];

  v72 = a2;
  v4 = (int *)type metadata accessor for LocationViewerInput(0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v62 = v6;
  v67 = sub_1000BA294(&qword_100BF1FA0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v66 = v8;
  sub_1000BA294(&qword_100BC46B8);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v10);
  sub_1000BA30C();
  __chkstk_darwin(v11);
  v65 = (char *)v58 - v12;
  v13 = (int *)type metadata accessor for LocationViewerViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_1000986FC();
  sub_1000BA30C();
  __chkstk_darwin(v15);
  v17 = (char *)v58 - v16;
  type metadata accessor for ConditionPickerMenuViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for Location.Identifier(0);
  v70 = *(_QWORD *)(v21 - 8);
  v71 = v21;
  __chkstk_darwin(v21);
  v23 = (uint64_t)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128BA8(a1, v23);
  v68 = v23;
  sub_1000135B4(a1, v20);
  v64 = sub_10007FE08(a1);
  v24 = a1 + v4[5];
  v25 = type metadata accessor for LocationModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v17, v24, v25);
  v26 = (uint64_t)&v17[v13[6]];
  v69 = v20;
  sub_100095B78((uint64_t)v20, v26, type metadata accessor for ConditionPickerMenuViewModel);
  LOBYTE(v20) = *(_BYTE *)(a1 + v4[10]);
  v27 = *(_BYTE *)(a1 + v4[6]);
  v28 = *(_BYTE *)(a1 + v4[14]);
  LOBYTE(v23) = *(_BYTE *)(a1 + v4[9]);
  v63 = *(unsigned __int8 *)(a1 + v4[15]);
  v58[1] = (uint64_t)v4;
  v29 = *(_QWORD *)(a1 + v4[16]);
  LOBYTE(v4) = *(_BYTE *)(a1 + v4[17]);
  swift_bridgeObjectRetain(v29);
  v61 = a1;
  v30 = a1;
  v31 = (uint64_t)v65;
  sub_100023374(v30, (uint64_t *)v76);
  *(_QWORD *)&v17[v13[5]] = v64;
  v17[v13[7]] = (char)v20;
  v17[v13[8]] = v27;
  v32 = v66;
  v17[v13[9]] = v28;
  v17[v13[10]] = (v23 & 1) == 0;
  v17[v13[11]] = v63;
  *(_QWORD *)&v17[v13[12]] = v29;
  v17[v13[13]] = (char)v4;
  v33 = &v17[v13[14]];
  v34 = v76[1];
  *(_OWORD *)v33 = v76[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v76[2];
  v35 = v2 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_lastViewModel;
  swift_beginAccess(v35, v75, 0, 0);
  sub_100095B78((uint64_t)v17, v31, type metadata accessor for LocationViewerViewModel);
  sub_1000BC264(v31);
  v36 = v32 + *(int *)(v67 + 48);
  sub_10003773C(v35, v32, &qword_100BC46B8);
  sub_10003773C(v31, v36, &qword_100BC46B8);
  sub_1000BA594(v32);
  if (v38)
  {
    sub_100021A14(v31, &qword_100BC46B8);
    sub_1000BA594(v36);
    if (v38)
    {
      sub_100021A14(v32, &qword_100BC46B8);
      goto LABEL_16;
    }
  }
  else
  {
    v37 = v59;
    sub_10003773C(v32, v59, &qword_100BC46B8);
    sub_1000BA594(v36);
    if (!v38)
    {
      v54 = v58[0];
      sub_10007C77C(v36, v58[0], type metadata accessor for LocationViewerViewModel);
      v55 = sub_1000317B0(v37, v54);
      sub_1000215BC(v54, type metadata accessor for LocationViewerViewModel);
      sub_100021A14(v31, &qword_100BC46B8);
      sub_1000215BC(v37, type metadata accessor for LocationViewerViewModel);
      sub_100021A14(v32, &qword_100BC46B8);
      v40 = v62;
      if ((v55 & 1) != 0)
        goto LABEL_16;
      goto LABEL_10;
    }
    sub_100021A14(v31, &qword_100BC46B8);
    sub_1000998DC(v39, type metadata accessor for LocationViewerViewModel);
  }
  sub_100021A14(v32, &qword_100BF1FA0);
  v40 = v62;
LABEL_10:
  v41 = v60;
  sub_100095B78((uint64_t)v17, v60, type metadata accessor for LocationViewerViewModel);
  sub_1000BC264(v41);
  swift_beginAccess(v35, v74, 33, 0);
  sub_10013328C(v41, v35);
  swift_endAccess(v74);
  if (qword_100BC2408 != -1)
    swift_once(&qword_100BC2408, sub_100159778);
  v42 = type metadata accessor for Logger(0);
  sub_1000AECD4(v42, (uint64_t)qword_100CAF010);
  sub_100095B78(v61, v40, type metadata accessor for LocationViewerInput);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(32, -1);
    *(_DWORD *)v46 = 141558275;
    v73 = 1752392040;
    v74[0] = v47;
    v48 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
    *(_WORD *)(v46 + 12) = 2081;
    v49 = LocationModel.id.getter(v48);
    v51 = v50;
    v73 = sub_1000CE1C8(v49, v50, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
    swift_bridgeObjectRelease(v51);
    sub_1000998DC(v52, type metadata accessor for LocationViewerInput);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Created new view model with activeLocation=%{private,mask.hash}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v47, 1);
    sub_1000986F0(v47);
    sub_1000986F0(v46);

  }
  else
  {

    sub_1000998DC(v53, type metadata accessor for LocationViewerInput);
  }
LABEL_16:
  sub_1000215BC((uint64_t)v69, type metadata accessor for ConditionPickerMenuViewModel);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v71);
  v56 = v72;
  sub_10007C77C((uint64_t)v17, v72, type metadata accessor for LocationViewerViewModel);
  return sub_1000BC264(v56);
}

uint64_t sub_10007FDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10077A99C);
}

uint64_t sub_10007FE08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t active;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v2 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for LocationViewerActiveLocationState(0);
  __chkstk_darwin(active);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100095B78(a1, (uint64_t)v7, v8);
  v9 = type metadata accessor for Location.Identifier(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9) == 1)
  {
    v10 = sub_1000BA294(&qword_100BF1FB0);
    v11 = type metadata accessor for LocationModel(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned __int8 *)(v12 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject(v10, v14 + *(_QWORD *)(v12 + 72), v13 | 7);
    *(_OWORD *)(v15 + 16) = xmmword_10097CA50;
    v16 = v15 + v14;
    v17 = v16 + *(int *)(sub_1000BA294(&qword_100BC3488) + 48);
    v18 = type metadata accessor for CurrentLocation(0);
    swift_storeEnumTagMultiPayload(v16, v18, 3);
    v19 = type metadata accessor for LocationOfInterest(0);
    _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v16, enum case for LocationModel.current(_:), v11);
    type metadata accessor for LocationViewerInput(0);
    sub_1006E9E18();
    v38 = v15;
    sub_10012129C(v20);
    return v38;
  }
  else
  {
    v22 = type metadata accessor for LocationViewerInput(0);
    v23 = a1 + *(int *)(v22 + 28);
    sub_10003773C(v23, (uint64_t)v4, (uint64_t *)&unk_100C0D170);
    v24 = type metadata accessor for CurrentLocation(0);
    v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v24);
    sub_100021A14((uint64_t)v4, (uint64_t *)&unk_100C0D170);
    if (v25 == 1 && *(unsigned __int8 *)(a1 + *(int *)(v22 + 32)) - 1 <= 1)
    {
      v26 = sub_1000BA294(&qword_100BF1FB0);
      v27 = type metadata accessor for LocationModel(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned __int8 *)(v28 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject(v26, v30 + *(_QWORD *)(v28 + 72), v29 | 7);
      *(_OWORD *)(v31 + 16) = xmmword_10097CA50;
      v32 = v31 + v30;
      v33 = v32 + *(int *)(sub_1000BA294(&qword_100BC3488) + 48);
      swift_storeEnumTagMultiPayload(v32, v24, 3);
      v34 = type metadata accessor for LocationOfInterest(0);
      _s7Weather24LocationCompositionStateOwst_0(v33, 1, 1, v34);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v32, enum case for LocationModel.current(_:), v27);
      sub_1006E9E18();
      v38 = v31;
      sub_10012129C(v35);
      v21 = v38;
    }
    else
    {
      v21 = *(_QWORD *)(v23 + *(int *)(type metadata accessor for LocationsState(0) + 24));
      swift_bridgeObjectRetain(v21);
    }
    sub_1000215BC((uint64_t)v7, type metadata accessor for LocationViewerActiveLocationState);
  }
  return v21;
}

uint64_t sub_10008012C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (uint64_t)a2 + v5;
  v8 = *(uint64_t *)((char *)a2 + v5 + 8);
  *v6 = *(uint64_t *)((char *)a2 + v5);
  v6[1] = v8;
  swift_bridgeObjectRetain(v4);
  swift_retain();
  swift_retain();
  v9 = *(int *)(sub_1000BA294(&qword_100BECFA0) + 32);
  v10 = (char *)v6 + v9;
  v11 = v7 + v9;
  v12 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void sub_1000801CC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  _BYTE v32[4];
  int v33;
  uint64_t v34;

  v4 = sub_1000CCBBC();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BD8AA8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BC3660);
  sub_1000B42B0();
  __chkstk_darwin(v14);
  sub_10009883C();
  v17 = v15 - v16;
  v19 = __chkstk_darwin(v18);
  v21 = &v32[-v20];
  __chkstk_darwin(v19);
  v23 = &v32[-v22];
  v24 = a1[1];
  v25 = a2[1];
  v26 = *a1 == *a2 && v24 == v25;
  if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)(*a1, v24, *a2, v25, 0) & 1) == 0)
    goto LABEL_17;
  v34 = v5;
  v27 = type metadata accessor for ConditionPickerMenuViewModel(0);
  sub_10008046C((uint64_t)a1 + *(int *)(v27 + 20), (uint64_t)v23);
  sub_10008046C((uint64_t)a2 + *(int *)(v27 + 20), (uint64_t)v21);
  v28 = v13 + *(int *)(v9 + 48);
  sub_10008046C((uint64_t)v23, v13);
  sub_10008046C((uint64_t)v21, v28);
  sub_100098750(v13);
  if (v26)
  {
    sub_1000BBC98((uint64_t)v21);
    sub_1000BBC98((uint64_t)v23);
    sub_100098750(v28);
    if (v26)
    {
      sub_100021A68(v13, &qword_100BC3660);
LABEL_16:
      sub_10010FEC0();
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  sub_10008046C(v13, v17);
  sub_100098750(v28);
  if (v29)
  {
    sub_100021A68((uint64_t)v21, &qword_100BC3660);
    sub_100021A68((uint64_t)v23, &qword_100BC3660);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v17, v4);
LABEL_14:
    sub_100021A68(v13, &qword_100BD8AA8);
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v8, v28, v4);
  v30 = sub_10006E924();
  v33 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v8, v4, v30);
  v31 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v31(v8, v4);
  sub_1000BBC98((uint64_t)v21);
  sub_1000BBC98((uint64_t)v23);
  v31(v17, v4);
  sub_1000BBC98(v13);
  if ((v33 & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_100098640();
}

uint64_t sub_10008046C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000804B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  _QWORD *v41;
  Swift::String v42;
  void *object;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;

  v8 = type metadata accessor for ConditionPickerMenuViewModel.Row(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_100098728();
  v70 = (uint64_t *)(v11 - v10);
  v12 = sub_1000BA294(&qword_100BD8AB0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_10009883C();
  v68 = v14 - v15;
  v17 = __chkstk_darwin(v16);
  v67 = (unint64_t *)((char *)&v55 - v18);
  __chkstk_darwin(v17);
  v71 = (uint64_t *)((char *)&v55 - v19);
  *a4 = a1;
  a4[1] = a2;
  v57 = type metadata accessor for ConditionPickerMenuViewModel(0);
  v58 = a3;
  sub_10008046C(a3, (uint64_t)a4 + *(int *)(v57 + 20));
  v20 = sub_1000BA294(&qword_100BD8AB8);
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = (v21 + 32) & ~v21;
  v65 = *(_QWORD *)(v9 + 72);
  v23 = swift_allocObject(v20, v22 + v65, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_10097CA50;
  v56 = v23;
  v64 = v22;
  v24 = (_QWORD *)(v23 + v22);
  v66 = v8;
  v25 = v23 + v22 + *(int *)(v8 + 20);
  v26 = sub_1000CCBBC();
  v27 = _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v26);
  *v24 = 0x302D776F72;
  v24[1] = 0xE500000000000000;
  v28 = static WeatherCondition.allCases.getter(v27);
  v75 = _swiftEmptyArrayStorage;
  sub_100080938();
  v29 = (uint64_t)v75;
  v30 = *(_QWORD *)(v28 + 16);
  v31 = swift_bridgeObjectRetain(v28);
  v63 = v30;
  v59 = a4;
  if (v30)
  {
    v61 = v12;
    v62 = v26;
    v32 = 0;
    v33 = v68;
    v60 = v28;
    v34 = v62;
    while (v32 < *(_QWORD *)(v28 + 16))
    {
      v35 = *(_QWORD *)(v34 - 8);
      v36 = v33 + *(int *)(v12 + 48);
      v37 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v35 + 16);
      v37(v36, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v32, v34, v31);
      v38 = (uint64_t)v67;
      v39 = (char *)v67 + *(int *)(v12 + 48);
      *v67 = v32;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
      v40(v39, v36, v34);
      v41 = v71;
      sub_1000808AC(v38, (uint64_t)v71);
      v73 = 762802034;
      v74 = 0xE400000000000000;
      if (__OFADD__(*v41, 1))
        goto LABEL_12;
      v72 = *v41 + 1;
      v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int);
      object = v42._object;
      String.append(_:)(v42);
      v44 = swift_bridgeObjectRelease(object);
      v45 = v73;
      v46 = v12;
      v69 = v74;
      v48 = v70;
      v47 = (uint64_t)v71;
      v49 = (uint64_t)v70 + *(int *)(v66 + 20);
      v50 = *(int *)(v46 + 48);
      v51 = v33 + v50;
      v37(v33 + v50, (unint64_t)v71 + v50, v34, v44);
      v40((char *)v49, v51, v34);
      _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v34);
      v52 = v69;
      *v48 = v45;
      v48[1] = v52;
      sub_100021A68(v47, &qword_100BD8AB0);
      v29 = (uint64_t)v75;
      if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) == 0)
      {
        sub_100080938();
        v29 = (uint64_t)v75;
      }
      v53 = *(_QWORD *)(v29 + 16);
      v28 = v60;
      v12 = v61;
      if (v53 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        sub_100080938();
        v29 = (uint64_t)v75;
      }
      ++v32;
      *(_QWORD *)(v29 + 16) = v53 + 1;
      sub_1000808F4((uint64_t)v70, v29 + v64 + v53 * v65);
      v33 = v68;
      if (v63 == v32)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease_n(v28, 2);
    v73 = v56;
    sub_1001211F0(v29);
    v54 = v73;
    sub_100021A68(v58, &qword_100BC3660);
    *(_QWORD *)((char *)v59 + *(int *)(v57 + 24)) = v54;
  }
}

uint64_t sub_1000808AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BD8AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000808F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConditionPickerMenuViewModel.Row(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100080938()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1006063AC();
  *v0 = v1;
}

_QWORD *sub_10008096C(void (*a1)(_QWORD *__return_ptr, uint64_t *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;

  v17 = *(_QWORD *)(a3 + 16);
  if (!v17)
    return _swiftEmptyArrayStorage;
  v4 = a3;
  swift_bridgeObjectRetain(a3);
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  v16 = v4;
  while (1)
  {
    v20 = *(_QWORD *)(v4 + 8 * v5 + 32);
    v7 = swift_bridgeObjectRetain(v20);
    a1(v19, &v20, v7);
    if (v3)
      break;
    sub_10009D2E0();
    v8 = v19[0];
    if (v19[0])
    {
      v9 = v19[1];
      v10 = v19[2];
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        sub_1000D9814();
        v6 = v13;
      }
      v11 = v6[2];
      if (v11 >= v6[3] >> 1)
      {
        sub_1000D9814();
        v6 = v14;
      }
      v6[2] = v11 + 1;
      v12 = &v6[3 * v11];
      v12[4] = v8;
      v12[5] = v9;
      v12[6] = v10;
      v4 = v16;
    }
    if (v17 == ++v5)
    {
      sub_10009895C();
      return v6;
    }
  }
  swift_bridgeObjectRelease(v6);
  sub_10009895C();
  sub_10009D2E0();
  return v6;
}

void sub_100080AC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  sub_10009E2DC();
  if ((v4 & 1) != 0)
  {
    sub_1000DD15C();
    if (v5 != v6)
    {
      sub_1000C572C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  sub_1000F3E6C();
  if (v3)
  {
    v7 = sub_1000BA294(&qword_100BCC750);
    v8 = (_QWORD *)sub_100098740(v7, 24 * v3 + 32);
    v9 = j__malloc_size(v8);
    v8[2] = v2;
    v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
  }
  if ((v1 & 1) != 0)
  {
    v10 = (char *)sub_10011E158();
    sub_10011FF10(v10, v11, v12);
    *(_QWORD *)(v0 + 16) = 0;
    sub_1000986E8();
  }
  else
  {
    v13 = sub_1000FC674();
    sub_10011F298(v13, v14, v15, v16);
  }
  sub_10004A2A0();
}

void sub_100080B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100688824(a1, a2, a3, &qword_100BC4A98, type metadata accessor for LocationComponentContainerViewModel, (void (*)(_QWORD))type metadata accessor for LocationViewComponent, (uint64_t)sub_100080BEC);
}

uint64_t sub_100080BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100080BEC()
{
  sub_1005FEB88();
}

uint64_t sub_100080C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008F2838);
}

void sub_100080C0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10004A2B0(a1, a2, a3);
  sub_100089000(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_10004A298();
}

uint64_t sub_100080C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008F28B8);
}

uint64_t sub_100080C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v21 = type metadata accessor for LocationComponentContainerViewModel(0);
  v2 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v22 = _swiftEmptyArrayStorage;
    sub_10009AAB0();
    v7 = *(unsigned __int8 *)(v2 + 80);
    v20 = a1;
    v8 = a1 + ((v7 + 32) & ~v7);
    v9 = *(_QWORD *)(v2 + 72);
    v6 = v22;
    do
    {
      sub_100080E30(v8, (uint64_t)v4);
      sub_100080E74();
      v11 = v10;
      v13 = v12;
      sub_100080DF4((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        sub_10009AAB0();
        v6 = v22;
      }
      v14 = v6[2];
      if (v14 >= v6[3] >> 1)
      {
        sub_10009AAB0();
        v6 = v22;
      }
      v6[2] = v14 + 1;
      v15 = &v6[2 * v14];
      v15[4] = v11;
      v15[5] = v13;
      v8 += v9;
      --v5;
    }
    while (v5);
    a1 = v20;
  }
  v22 = v6;
  v16 = sub_1000BA294(&qword_100BF1280);
  v17 = sub_1000B2E60();
  BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v16, v17);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_100080DF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationComponentContainerViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100080E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentContainerViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100080E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for LocationComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(v0, (uint64_t)v4, v5);
  v6 = (char *)sub_100080F14 + 4 * byte_1009CB9C0[swift_getEnumCaseMultiPayload(v4, v1)];
  __asm { BR              X10 }
}

uint64_t sub_100080F14(uint64_t a1)
{
  sub_10009C968(a1, type metadata accessor for LocationComponentViewModel);
  return 0x696C617551726961;
}

void sub_1000811E4(uint64_t a1, uint64_t a2)
{
  sub_100081204(a1, a2);
}

void sub_100081204(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];
  _QWORD *v5;

  v5 = sub_1000812C4();
  v4[2] = a1;
  v4[3] = a2;
  sub_1000BA294(&qword_100BD7C38);
  sub_1000DD93C();
  sub_100081288(&qword_100BD7C40, &qword_100BD7C38);
  sub_1000C4784((uint64_t)sub_1000653C8, (uint64_t)v4);
  swift_bridgeObjectRelease(v5);
  sub_1000C2728();
}

void sub_100081288(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_100075EB0(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }
  sub_10004A298();
}

_QWORD *sub_1000812C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  _UNKNOWN **v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v10;
  _QWORD *v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14[2];
  _BYTE v15[40];
  _BYTE v16[72];

  v1 = sub_1000BA294(&qword_100BD7C48);
  inited = swift_initStackObject(v1, v16);
  *(_OWORD *)(inited + 16) = xmmword_10097CA50;
  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v4 = type metadata accessor for LocationNetworkActivityFlow(0);
    v5 = &off_100B93A88;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 48) = 0;
  }
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = v5;
  swift_retain();
  sub_100037768(inited + 32, (uint64_t)v15, &qword_100BD7C50);
  sub_1000787D4((uint64_t)v15, (uint64_t)&v12, &qword_100BD7C50);
  if (v13)
  {
    sub_10003C800(&v12, (uint64_t)v14);
    sub_10003C800(v14, (uint64_t)&v12);
    v6 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    {
      sub_100081564(0, _swiftEmptyArrayStorage[2] + 1, 1, (uint64_t)_swiftEmptyArrayStorage);
      v6 = v10;
    }
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
    {
      sub_100081564(v7 > 1, v8 + 1, 1, (uint64_t)v6);
      v6 = v11;
    }
    v6[2] = v8 + 1;
    sub_10003C800(&v12, (uint64_t)&v6[5 * v8 + 4]);
  }
  else
  {
    sub_100021AA4((uint64_t)&v12, &qword_100BD7C50);
    v6 = _swiftEmptyArrayStorage;
  }
  swift_setDeallocating(inited);
  sub_100081480();
  return v6;
}

uint64_t sub_100081440(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  sub_1000BA294(a1);
  swift_arrayDestroy(v1 + 32, v2);
  v3 = sub_10009DB58();
  return swift_deallocClassInstance(v3, v4, v5);
}

uint64_t sub_100081480()
{
  return sub_100081440(&qword_100BD7C50);
}

void sub_10008148C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, _QWORD *, uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, _QWORD *))
{
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  size_t v20;
  _QWORD *v21;

  v12 = a1;
  if ((a3 & 1) != 0)
  {
    sub_1000DD15C();
    if (v14 != v15)
    {
      sub_1000C572C();
      if (v14)
      {
        __break(1u);
        return;
      }
      sub_1000C4CB0();
    }
  }
  else
  {
    v13 = a2;
  }
  v16 = *(_QWORD *)(a4 + 16);
  if (v13 <= v16)
    v17 = *(_QWORD *)(a4 + 16);
  else
    v17 = v13;
  if (v17)
  {
    v18 = sub_1000DBBEC(a1, a2, a3, a4, a5);
    v19 = (_QWORD *)sub_100098740(v18, 40 * v17 + 32);
    v20 = j__malloc_size(v19);
    v19[2] = v16;
    v19[3] = 2 * ((uint64_t)(v20 - 32) / 40);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
  }
  v21 = v19 + 4;
  if ((v12 & 1) != 0)
  {
    a8(a4 + 32, v16, v21);
    *(_QWORD *)(a4 + 16) = 0;
    sub_1000986E8();
  }
  else
  {
    a7(0, v16, v21, a4, a6);
  }
  sub_10009D300();
}

void sub_100081564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10008148C(a1, a2, a3, a4, &qword_100BF65C0, (uint64_t)&unk_100BF65C8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t, uint64_t))sub_100081588, (void (*)(uint64_t, uint64_t, _QWORD *))sub_100600314);
}

void sub_100081588(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1000BA698();
    sub_1000C36A8();
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  if (v6 >= a3 + 40 * v5 || v6 + 40 * v5 <= a3)
  {
    sub_1000DBBEC(a1, a2, a3, a4, a5);
    sub_1000DAD00();
    sub_1000986E8();
    sub_1000BBF54();
    return;
  }
  sub_1000BA698();
  sub_1000C25D8();
LABEL_11:
  sub_1000BBE5C(v8, v9, v10, v11, v12, v13, v14);
  __break(1u);
}

uint64_t type metadata accessor for LocationNetworkActivityFlow(uint64_t a1)
{
  uint64_t result;

  result = qword_100C0A8A8;
  if (!qword_100C0A8A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationNetworkActivityFlow);
  return result;
}

void sub_100081680(uint64_t a1, char a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _DWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v2;
  v7 = OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished;
  v8 = *(void **)(v2 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished);
  v9 = sub_100094EE4();
  Atomic.wrappedValue.getter(&v30, v9);
  sub_10009880C();
  if (v30 == 1)
  {
    v10 = sub_1000E77A0();
    Logger.logObject.getter(v10);
    v11 = sub_10009C0A4();
    if (sub_1000BDA70(v11))
    {
      v12 = (_DWORD *)sub_100098710(12);
      sub_1000C6004();
      sub_10011072C();
      *v12 = 136446210;
      v14 = *(_QWORD *)(v5 + 16);
      v13 = *(_QWORD *)(v5 + 24);
      swift_bridgeObjectRetain(v13);
      sub_1000CE1C8(v14, v13, &v30);
      sub_10009DF18();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v15, v16);
      sub_1000C6650();
      swift_bridgeObjectRelease(v13);
      sub_1000CE5D0((void *)&_mh_execute_header, v17, v18, "Unexpected success call for WeatherData Update Request, already finished before. uuid=%{public}s");
      sub_1000BF1B8();
      sub_1000986F0(v4);
      sub_1000986F0((uint64_t)v12);
    }
    else
    {
      sub_1000C6650();
    }

  }
  v19 = *(NSObject **)(v5 + v7);
  LOBYTE(v30) = 1;
  sub_100094EE4();
  Atomic.wrappedValue.setter(&v30);
  sub_10009880C();
  v20 = sub_1000E77A0();
  Logger.logObject.getter(v20);
  v21 = sub_10009C0A4();
  if (sub_1000BDA70(v21))
  {
    v22 = sub_100098710(24);
    sub_1000C6004();
    sub_10011072C();
    *(_DWORD *)v22 = 67240706;
    v25 = sub_10003BD60(v23, v24, v22 + 4, v22 + 8);
    *(_WORD *)(v22 + 8) = 1024;
    LODWORD(v29) = a2 & 1;
    sub_10003BD60(v25, v26, v22 + 10, v22 + 14);
    *(_WORD *)(v22 + 14) = 2082;
    v27 = *(_QWORD *)(v5 + 16);
    v28 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain(v28);
    v29 = sub_1000CE1C8(v27, v28, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    sub_1000C6650();
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v3, "WeatherData Update Request succeeded. didRefresh=%{BOOL,public}d, usingCachedReponse=%{BOOL}d, uuid=%{public}s", (uint8_t *)v22, 0x18u);
    sub_1000BF1B8();
    sub_1000986F0(v4);
    sub_1000986F0(v22);
  }
  else
  {
    sub_1000C6650();
  }

  sub_10009DE9C();
}

void sub_1000818D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t updated;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[2];

  v83 = a5;
  v79 = a3;
  v77 = a2;
  v75 = a1;
  v6 = type metadata accessor for NewsDataModel(0);
  v80 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v81 = v7;
  v82 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreprocessedWeatherData(0);
  v76 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v78 = v9;
  v88 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WeatherData(0);
  v73 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v74 = v11;
  v87 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Location(0);
  v84 = *(_QWORD *)(v89 - 8);
  v12 = __chkstk_darwin(v89);
  v86 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v13;
  __chkstk_darwin(v12);
  v69 = (char *)&v68 - v14;
  v15 = sub_1000BA294((uint64_t *)&unk_100C0D170);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocationsState(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for CurrentLocation(0);
  v22 = __chkstk_darwin(v21);
  v70 = (uint64_t)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v71 = (uint64_t)&v68 - v24;
  updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchPredicate(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (uint64_t *)((char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_10009FFE0();
  *v31 = static OS_dispatch_queue.main.getter(v32);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  v33 = _dispatchPreconditionTest(_:)(v31);
  (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v31, v28);
  if ((v33 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v27, updated, 29);
    v34 = v83;
    sub_1000C7114((uint64_t)v27);
    sub_1000215BC((uint64_t)v27, type metadata accessor for WeatherDataUpdateRequestLog.Event);
    v36 = a4;
    if ((Location.kind.getter(v35) & 1) == 0)
    {
LABEL_10:
      v52 = v85;
      (*(void (**)(uint64_t *__return_ptr))(v85 + 16))(v90);
      v53 = v52;
      v54 = v34;
      v55 = v90[0];
      v56 = sub_1000EEBA0(v36, v90[0]);
      swift_release(v55);
      v57 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v86, v36, v89);
      sub_100080C0C(v75, v87, type metadata accessor for WeatherData);
      sub_100080C0C(v77, v88, type metadata accessor for PreprocessedWeatherData);
      v58 = v82;
      sub_100080C0C(v79, v82, type metadata accessor for NewsDataModel);
      v59 = *(unsigned __int8 *)(v57 + 80);
      v60 = (v59 + 40) & ~v59;
      v61 = *(unsigned __int8 *)(v73 + 80);
      v79 = v36;
      v62 = (v72 + v61 + v60) & ~v61;
      v63 = *(unsigned __int8 *)(v76 + 80);
      v64 = (v74 + v63 + v62) & ~v63;
      v65 = *(unsigned __int8 *)(v80 + 80);
      v66 = (v78 + v65 + v64) & ~v65;
      v67 = swift_allocObject(&unk_100B94F70, v66 + v81, v59 | v61 | v63 | v65 | 7);
      *(_QWORD *)(v67 + 16) = v54;
      v56 &= 1u;
      *(_BYTE *)(v67 + 24) = v56;
      *(_QWORD *)(v67 + 32) = v53;
      (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v67 + v60, v86, v89);
      sub_10007802C(v87, v67 + v62, type metadata accessor for WeatherData);
      sub_10007802C(v88, v67 + v64, type metadata accessor for PreprocessedWeatherData);
      sub_10007802C(v58, v67 + v66, type metadata accessor for NewsDataModel);
      swift_retain();
      swift_retain();
      sub_100082184(v79, v56, sub_100082248, v67);
      swift_release(v67);
      return;
    }
    (*(void (**)(uint64_t *__return_ptr))(v85 + 16))(v90);
    v37 = v90[0];
    sub_100080C0C(v90[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v20, type metadata accessor for LocationsState);
    swift_release(v37);
    sub_100037768((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_100C0D170);
    sub_1000215BC((uint64_t)v20, type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v21) == 1)
    {
      sub_100021A14((uint64_t)v17, (uint64_t *)&unk_100C0D170);
      goto LABEL_10;
    }
    v38 = v71;
    sub_10007802C((uint64_t)v17, v71, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    v39 = v70;
    sub_100080C0C(v38, v70, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
    if (swift_getEnumCaseMultiPayload(v39, v21))
    {
      sub_1000215BC(v38, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      v40 = v39;
LABEL_9:
      sub_1000215BC(v40, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
      goto LABEL_10;
    }
    v41 = v84;
    v42 = v69;
    v43 = v39;
    v44 = v89;
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 32))(v69, v43, v89);
    v46 = Location.coordinate.getter(v45);
    v48 = v47;
    v50 = Location.coordinate.getter(v49);
    if ((static CLLocationCoordinate2D.== infix(_:_:)(v46, v48, v50, v51) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
      v40 = v38;
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v27, v42, v44);
    swift_storeEnumTagMultiPayload(v27, updated, 10);
    sub_1000C7114((uint64_t)v27);
    sub_1000215BC((uint64_t)v27, type metadata accessor for WeatherDataUpdateRequestLog.Event);
    sub_100081680(0, 0);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
    sub_1000215BC(v38, (uint64_t (*)(_QWORD))&type metadata accessor for CurrentLocation);
  }
  else
  {
    __break(1u);
  }
}

void sub_100081F90(uint64_t *a1@<X8>)
{
  *a1 = sub_100081FD8();
  sub_10004A298();
}

void sub_100081FB4()
{
  uint64_t v0;

  sub_100613F94((uint64_t)&v0);
}

uint64_t sub_100081FD8()
{
  return sub_100081FF8();
}

uint64_t sub_100081FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10009FFE0();
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    __chkstk_darwin(result);
    *(&v13 - 4) = (uint64_t)&unk_100B61740;
    v9 = type metadata accessor for MainAction(0);
    *(&v13 - 3) = v9;
    v10 = sub_1000A0758();
    *(&v13 - 2) = v10;
    KeyPath = swift_getKeyPath(&unk_10099EC50);
    __chkstk_darwin(KeyPath);
    *(&v13 - 4) = (uint64_t)&unk_100B61740;
    *(&v13 - 3) = v9;
    *(&v13 - 2) = v10;
    v12 = swift_getKeyPath(&unk_10099EC88);
    static Published.subscript.getter(&v14, v1, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100082184(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  if ((a2 & 1) == 0)
    return a3();
  v10[5] = 0;
  v6 = static Animation.easeIn(duration:)(0.3);
  v7 = Transaction.animation.setter(v6);
  __chkstk_darwin(v7);
  v10[2] = a3;
  v10[3] = a4;
  swift_retain();
  withTransaction<A>(_:_:)(v8, sub_100152744, v10, (char *)&type metadata for () + 8);
  swift_release(0);
  return swift_release(0);
}

uint64_t sub_100082248()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(sub_1000992C4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_1000C2148() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for PreprocessedWeatherData(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  sub_1000AE9DC();
  sub_10045B94C();
  return sub_1000A5C2C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, (uint64_t *)(v0 + v5), v0 + v8, v0 + ((v8 + v9 + v10) & ~v10));
}

uint64_t sub_1000822F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  id v80;
  uint64_t v81;
  void *v82;
  const void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  int *v102;
  uint64_t v103;

  v5 = type metadata accessor for Location.Identifier(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  v7 = (int *)type metadata accessor for LocationViewModel(0);
  v8 = v7[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v5))
  {
    v11 = sub_1000BA294(&qword_100BCD680);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v5);
  }
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(a2 + v12 + 16);
  v17 = *(_QWORD *)(a2 + v12 + 24);
  v18 = *(_QWORD *)(a2 + v12 + 32);
  v19 = *(_QWORD *)(a2 + v12 + 40);
  v20 = *(_BYTE *)(a2 + v12 + 48);
  swift_bridgeObjectRetain(v15);
  sub_100176D88(v16, v17, v18, v19, v20);
  *(_QWORD *)(v13 + 16) = v16;
  *(_QWORD *)(v13 + 24) = v17;
  *(_QWORD *)(v13 + 32) = v18;
  *(_QWORD *)(v13 + 40) = v19;
  *(_BYTE *)(v13 + 48) = v20;
  v21 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v13 + 64) = v21;
  v22 = *(_QWORD *)(v14 + 80);
  *(_QWORD *)(v13 + 72) = *(_QWORD *)(v14 + 72);
  *(_QWORD *)(v13 + 80) = v22;
  v100 = *(_QWORD *)(v14 + 96);
  *(_QWORD *)(v13 + 88) = *(_QWORD *)(v14 + 88);
  *(_QWORD *)(v13 + 96) = v100;
  v99 = *(_QWORD *)(v14 + 112);
  *(_QWORD *)(v13 + 104) = *(_QWORD *)(v14 + 104);
  *(_QWORD *)(v13 + 112) = v99;
  v23 = *(_QWORD *)(v14 + 128);
  *(_QWORD *)(v13 + 120) = *(_QWORD *)(v14 + 120);
  *(_QWORD *)(v13 + 128) = v23;
  *(_BYTE *)(v13 + 136) = *(_BYTE *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  v24 = *(_QWORD *)(v14 + 152);
  *(_QWORD *)(v13 + 144) = *(_QWORD *)(v14 + 144);
  *(_QWORD *)(v13 + 152) = v24;
  *(_BYTE *)(v13 + 160) = *(_BYTE *)(v14 + 160);
  *(_BYTE *)(v13 + 161) = *(_BYTE *)(v14 + 161);
  v25 = v7[7];
  v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v102 = v7;
  v103 = a2;
  v27 = v7[9];
  v28 = a1;
  v29 = (_BYTE *)(a1 + v27);
  v30 = (_BYTE *)(a2 + v27);
  v31 = type metadata accessor for LocationFooterViewModel(0);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v100);
  swift_bridgeObjectRetain(v99);
  v32 = v23;
  v33 = (int *)v31;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v26);
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    v34 = sub_1000BA294(&qword_100BCD690);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    v36 = v7;
    v35 = v103;
    v37 = v28;
  }
  else
  {
    *v29 = *v30;
    *(_WORD *)(v29 + 1) = *(_WORD *)(v30 + 1);
    v38 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v38;
    v39 = *(int *)(v31 + 32);
    v40 = v29;
    v41 = &v29[v39];
    v42 = &v30[v39];
    v43 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(v38);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      v44 = sub_1000BA294(&qword_100BD4280);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    v37 = v28;
    v101 = v33;
    v45 = v33[9];
    v46 = (uint64_t)v40;
    v47 = &v40[v45];
    v48 = &v30[v45];
    *v47 = v30[v45];
    v49 = *(_QWORD *)&v30[v45 + 8];
    *((_QWORD *)v47 + 1) = v49;
    v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
    v51 = v50[6];
    v52 = &v47[v51];
    v53 = &v48[v51];
    swift_bridgeObjectRetain(v49);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v43))
    {
      v54 = sub_1000BA294(&qword_100BD4280);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v52, v53, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v43);
    }
    v55 = v50[7];
    v56 = &v47[v55];
    v57 = &v48[v55];
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    *(_QWORD *)&v47[v50[8]] = *(_QWORD *)&v48[v50[8]];
    *(_BYTE *)(v46 + v101[10]) = v30[v101[10]];
    v59 = v101[11];
    v60 = (void *)(v46 + v59);
    v61 = &v30[v59];
    v62 = type metadata accessor for LocationOfInterest(0);
    swift_bridgeObjectRetain(v58);
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      v63 = sub_1000BA294(&qword_100BC3118);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, _BYTE *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    *(_BYTE *)(v46 + v101[12]) = v30[v101[12]];
    *(_BYTE *)(v46 + v101[13]) = v30[v101[13]];
    v64 = v101[14];
    v65 = (_BYTE *)(v46 + v64);
    v66 = &v30[v64];
    v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
    {
      v68 = sub_1000BA294(&qword_100BCD688);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      *v65 = *v66;
      v69 = v67[5];
      v70 = &v65[v69];
      v71 = &v66[v69];
      v72 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(&v65[v67[6]], &v66[v67[6]], v62);
      v65[v67[7]] = v66[v67[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
    }
    v36 = v102;
    _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, (uint64_t)v101);
    v35 = v103;
  }
  *(_BYTE *)(v37 + v36[10]) = *(_BYTE *)(v35 + v36[10]);
  *(_BYTE *)(v37 + v36[11]) = *(_BYTE *)(v35 + v36[11]);
  *(_BYTE *)(v37 + v36[12]) = *(_BYTE *)(v35 + v36[12]);
  *(_BYTE *)(v37 + v36[13]) = *(_BYTE *)(v35 + v36[13]);
  *(_BYTE *)(v37 + v36[14]) = *(_BYTE *)(v35 + v36[14]);
  v73 = v36[15];
  v74 = *(void **)(v35 + v73);
  *(_QWORD *)(v37 + v73) = v74;
  *(_BYTE *)(v37 + v36[16]) = *(_BYTE *)(v35 + v36[16]);
  *(_BYTE *)(v37 + v36[17]) = *(_BYTE *)(v35 + v36[17]);
  *(_BYTE *)(v37 + v36[18]) = *(_BYTE *)(v35 + v36[18]);
  v75 = v36[19];
  v76 = v37 + v75;
  v77 = v35 + v75;
  v78 = type metadata accessor for Date(0);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
  v80 = v74;
  v79(v76, v77, v78);
  v81 = v36[20];
  v82 = (void *)(v37 + v81);
  v83 = (const void *)(v35 + v81);
  v84 = type metadata accessor for ForegroundEffect(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
  {
    v85 = sub_1000BA294(&qword_100BC5B30);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v82, v83, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
  }
  *(_BYTE *)(v37 + v36[21]) = *(_BYTE *)(v35 + v36[21]);
  v86 = v36[22];
  v87 = *(_QWORD *)(v35 + v86);
  *(_QWORD *)(v37 + v86) = v87;
  *(_BYTE *)(v37 + v36[23]) = *(_BYTE *)(v35 + v36[23]);
  v88 = v36[24];
  v89 = v37 + v88;
  v90 = v35 + v88;
  v91 = type metadata accessor for LocationEntity(0);
  v92 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v91 - 8) + 16);
  v93 = swift_bridgeObjectRetain(v87);
  v92(v89, v90, v91, v93);
  v94 = *(int *)(a3 + 20);
  v95 = (_QWORD *)(v37 + v94);
  v96 = (_QWORD *)(v35 + v94);
  v97 = v96[1];
  *v95 = *v96;
  v95[1] = v97;
  swift_retain();
  return v37;
}

uint64_t sub_1000829D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100082A10(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000CEE98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release(*(_QWORD *)(a1 + a2[8] + 8));
  v6 = (_QWORD *)(a1 + a2[9]);
  swift_release(*v6);
  swift_release(v6[1]);
  v7 = (_QWORD *)(a1 + a2[10]);
  v8 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return swift_release(*(_QWORD *)(a1 + a2[11]));
}

uint64_t initializeWithCopy for LocationTipOverlayModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_10008D47C(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10008D47C(v7, v8);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_100082BE8(v9, v10, v11);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  v12 = *(_QWORD *)(a2 + 72);
  LOBYTE(v10) = *(_BYTE *)(a2 + 80);
  sub_10008D47C(v12, v10);
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v10;
  v13 = *(_QWORD *)(a2 + 88);
  LOBYTE(v10) = *(_BYTE *)(a2 + 96);
  sub_10008D47C(v13, v10);
  *(_QWORD *)(a1 + 88) = v13;
  *(_BYTE *)(a1 + 96) = v10;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

uint64_t sub_100082BE8(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t destroy for LocationTipOverlayModifier(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  sub_1000B15F8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1000B15F8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_100082C5C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1000B15F8(*(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return sub_1000B15F8(*(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
}

uint64_t sub_100082C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008E57F0);
}

uint64_t sub_100082C5C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_release(result);
  return result;
}

uint64_t sub_100082C68(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  a1();
  v1 = sub_10009E484();
  return swift_deallocClassInstance(v1, v2, v3);
}

void sub_100082C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, type metadata accessor for AppConfigurationState);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, type metadata accessor for EnvironmentState);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, type metadata accessor for LocationsState);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16));
  sub_1000986E8();
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, type metadata accessor for NotificationsOptInState);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, type metadata accessor for TimeState);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, type metadata accessor for ViewState);
  sub_1000215BC(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, type metadata accessor for ModalViewState);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24));
  sub_10003BC58();
  sub_1000986E8();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners));
  sub_100079F70();
}

void sub_100082DA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[11];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  v59 = a2;
  v3 = sub_1000BA294(&qword_100C175A8);
  v4 = __chkstk_darwin(v3);
  v40[8] = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v40[7] = (char *)v40 - v6;
  v49 = sub_1000BA294(&qword_100C175B0);
  __chkstk_darwin(v49);
  v40[10] = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1000BA294(&qword_100C175B8);
  __chkstk_darwin(v47);
  v48 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1000BA294(&qword_100C175C0);
  __chkstk_darwin(v54);
  v50 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000BA294(&qword_100C175C8);
  v11 = __chkstk_darwin(v10);
  v40[5] = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v40[4] = (char *)v40 - v13;
  v46 = sub_1000BA294(&qword_100C175D0);
  __chkstk_darwin(v46);
  v40[9] = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100C175D8);
  v16 = __chkstk_darwin(v15);
  v40[3] = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v40[2] = (char *)v40 - v18;
  v45 = sub_1000BA294(&qword_100C175E0);
  __chkstk_darwin(v45);
  v40[6] = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1000BA294(&qword_100C175E8);
  __chkstk_darwin(v57);
  v58 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1000BA294(&qword_100C175F0);
  __chkstk_darwin(v51);
  v53 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1000BA294(&qword_100C175F8);
  __chkstk_darwin(v42);
  v43 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1000BA294(&qword_100C17600);
  __chkstk_darwin(v52);
  v44 = (char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1000BA294(&qword_100C17608);
  __chkstk_darwin(v56);
  v55 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1000BA294(&qword_100C17610);
  __chkstk_darwin(v41);
  v40[1] = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v26);
  v28 = (char *)v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for LayoutDirection(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for LocationComponentHeaderView(0);
  v34 = a1 + *(int *)(v33 + 20);
  v35 = *(_QWORD *)v34;
  v36 = *(_BYTE *)(v34 + 8);
  sub_10008D47C(*(_QWORD *)v34, v36);
  sub_100109B54();
  sub_1000B15F8(v35, v36);
  sub_1001591C8();
  v37 = a1 + *(int *)(v33 + 40);
  v38 = *(_QWORD *)v37;
  LOBYTE(v33) = *(_BYTE *)(v37 + 8);
  sub_10008D47C(*(_QWORD *)v37, v33);
  sub_100109B54();
  sub_1000B15F8(v38, v33);
  sub_100061610(a1);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  sub_10000AB54(a1, (uint64_t)v28, type metadata accessor for LocationComponentHeaderViewModel);
  v39 = (char *)sub_100083384 + 4 * word_1009DD520[swift_getEnumCaseMultiPayload(v28, v26)];
  __asm { BR              X10 }
}

void sub_100083384()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 - 224) = *(_OWORD *)v0;
  *(_OWORD *)(v5 - 208) = v6;
  *(_OWORD *)(v5 - 192) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v0 + 48);
  *(_DWORD *)(v5 - 336) = v1 & 1;
  v7 = v4;
  v8 = *(_QWORD *)(v5 - 488);
  sub_100084594(v2, v3, v1 & 1, v7, v5 - 224, v8);
  sub_1001268C8((_QWORD *)(v5 - 224));
  v9 = *(_QWORD *)(v5 - 392);
  sub_100037794(v8, v9, &qword_100C17610);
  swift_storeEnumTagMultiPayload(v9, *(_QWORD *)(v5 - 400), 0);
  sub_10003D310(&qword_100C17628, &qword_100C17610, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v11 = v10;
  sub_10003D310(&qword_100C17630, &qword_100C175E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v12 = *(_QWORD *)(v5 - 384);
  _ConditionalContent<>.init(storage:)(v9, *(_QWORD *)(v5 - 408), *(_QWORD *)(v5 - 376), v11, v13);
  v14 = *(_QWORD *)(v5 - 312);
  sub_100037794(v12, v14, &qword_100C17600);
  swift_storeEnumTagMultiPayload(v14, *(_QWORD *)(v5 - 328), 0);
  v15 = sub_100154C64();
  v16 = sub_100154BC0();
  v17 = v2;
  v18 = *(_QWORD *)(v5 - 296);
  _ConditionalContent<>.init(storage:)(v14, *(_QWORD *)(v5 - 320), *(_QWORD *)(v5 - 304), v15, v16);
  sub_100021A14(v12, &qword_100C17600);
  v19 = *(_QWORD *)(v5 - 272);
  sub_100037794(v18, v19, &qword_100C17608);
  swift_storeEnumTagMultiPayload(v19, *(_QWORD *)(v5 - 280), 0);
  v20 = sub_100154884();
  _ConditionalContent<>.init(storage:)(v19, *(_QWORD *)(v5 - 288), &type metadata for Spacer, v20, &protocol witness table for Spacer);
  sub_1000D31B4(v17, v3, *(_DWORD *)(v5 - 336));
  swift_bridgeObjectRelease(v7);
  sub_100021A14(v18, &qword_100C17608);
  sub_100021A14(v8, &qword_100C17610);
}

void sub_100083DA8(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD __dst[17];

  v3 = v2;
  v5 = a1;
  v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100098728();
  v10 = (const void *)(v9 - v8);
  v11 = sub_1000878BC();
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_1000DE0F4();
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100098728();
  v19 = v18 - v17;
  if (v5)
    goto LABEL_11;
  sub_100084050(v3 + *(int *)(v11 + 20), v19, type metadata accessor for LocationComponentViewModel);
  if (swift_getEnumCaseMultiPayload(v19))
  {
    sub_1000215BC(v19, type metadata accessor for LocationComponentViewModel);
    sub_100084050(v3, (uint64_t)v10, type metadata accessor for LocationComponentHeaderViewModel);
    if (swift_getEnumCaseMultiPayload(v10) == 2)
    {
      memcpy(__dst, v10, 0x79uLL);
      v21 = __dst[2];
      v20 = __dst[3];
      v23 = __dst[6];
      v22 = __dst[7];
      v25 = __dst[8];
      v24 = __dst[9];
      v26 = __dst[11];
      v35 = __dst[10];
      v34 = __dst[12];
      v27 = __dst[14];
      v33 = __dst[13];
      swift_bridgeObjectRetain(__dst[14]);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v26);
      sub_100258860(__dst);
      *(_QWORD *)a2 = v21;
      *(_QWORD *)(a2 + 8) = v20;
      *(_QWORD *)(a2 + 16) = v23;
      *(_QWORD *)(a2 + 24) = v22;
      *(_QWORD *)(a2 + 32) = v25;
      *(_QWORD *)(a2 + 40) = v24;
      *(_QWORD *)(a2 + 48) = v35;
      *(_QWORD *)(a2 + 56) = v26;
      *(_BYTE *)(a2 + 64) = v34;
      *(_QWORD *)(a2 + 72) = v33;
      *(_QWORD *)(a2 + 80) = v27;
      *(_BYTE *)(a2 + 88) = 0;
      swift_storeEnumTagMultiPayload(a2, v6, 1);
      return;
    }
    v31 = type metadata accessor for LocationComponentHeaderViewModel;
    v32 = (uint64_t)v10;
    goto LABEL_10;
  }
  v28 = *(unsigned __int8 *)(v19 + 97);
  sub_100084050(v3, v15, type metadata accessor for LocationComponentContainerViewModel);
  if (v28 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = type metadata accessor for LocationComponentContainerViewModel;
    v32 = v15;
LABEL_10:
    sub_1000215BC(v32, v31);
    goto LABEL_11;
  }
  sub_1002584D8();
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000215BC(v15, type metadata accessor for LocationComponentContainerViewModel);
  if ((v30 & 1) != 0)
  {
    sub_100258630();
    return;
  }
LABEL_11:
  sub_100084050(v3, a2, type metadata accessor for LocationComponentHeaderViewModel);
}

void sub_100084050(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_10004A298();
}

void sub_100084090(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  v3 = type metadata accessor for LocationComponentHeaderViewModel(0);
  v4 = (char *)sub_1000840EC + 4 * byte_1009DD534[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }
}

uint64_t sub_1000840EC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v4;
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v5;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 48) = v6;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_storeEnumTagMultiPayload(v0, v3, 0);
  v7 = v2[5];
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(v5) = *(_BYTE *)(v9 + 8);
  sub_10008D47C(*(_QWORD *)v9, v5);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v5;
  v11 = v2[6];
  v12 = (_QWORD *)(v0 + v11);
  v13 = (_QWORD *)(v1 + v11);
  v14 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    *v12 = *v13;
    swift_retain();
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  v17 = v2[7];
  v18 = (_QWORD *)(v0 + v17);
  v19 = (_QWORD *)(v1 + v17);
  v20 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = v18;
    v23 = v20;
    v24 = 1;
  }
  else
  {
    *v18 = *v19;
    swift_retain();
    v22 = v18;
    v23 = v20;
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v22, v23, v24);
  v25 = v2[8];
  v26 = v0 + v25;
  v27 = v1 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_10008D47C(*(_QWORD *)v27, v29);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v29;
  v30 = v2[9];
  v31 = v0 + v30;
  v32 = v1 + v30;
  v33 = *(_QWORD *)v32;
  v34 = *(_BYTE *)(v32 + 8);
  sub_10008D47C(*(_QWORD *)v32, v34);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = v34;
  v35 = v2[10];
  v36 = v0 + v35;
  v37 = v1 + v35;
  v38 = *(_QWORD *)v37;
  v39 = *(_BYTE *)(v37 + 8);
  sub_10008D47C(*(_QWORD *)v37, v39);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = v39;
  v40 = v2[11];
  v41 = (_QWORD *)(v0 + v40);
  v42 = (_QWORD *)(v1 + v40);
  v43 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
  {
    v44 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
    v45 = 1;
  }
  else
  {
    *v41 = *v42;
    swift_retain();
    v45 = 0;
  }
  swift_storeEnumTagMultiPayload(v41, v43, v45);
  v46 = v2[12];
  v47 = v0 + v46;
  v48 = v1 + v46;
  v49 = *(_QWORD *)v48;
  v50 = *(_BYTE *)(v48 + 9);
  v51 = *(_BYTE *)(v48 + 8);
  sub_100082BE8(*(_QWORD *)v48, v51, v50);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = v51;
  *(_BYTE *)(v47 + 9) = v50;
  v52 = v2[13];
  v53 = v0 + v52;
  v54 = v1 + v52;
  v55 = sub_1000BA294(&qword_100BC37F8);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v56(v53, v54, v55);
  v56(v0 + v2[14], v1 + v2[14], v55);
  return v0;
}

void sub_100084594(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[27];
  _BYTE v101[224];
  _QWORD v102[31];

  v82 = a1;
  v83 = a5;
  v81 = a3;
  v80 = a2;
  v99 = a6;
  v8 = type metadata accessor for BlendMode(0);
  v96 = *(_QWORD *)(v8 - 8);
  v97 = v8;
  __chkstk_darwin(v8);
  v95 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for LocationComponentHeaderView(0);
  v10 = __chkstk_darwin(v87);
  v98 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v89 = (char *)&v79 - v12;
  v13 = type metadata accessor for ColorSchemeContrast(0);
  v85 = *(_QWORD *)(v13 - 8);
  v86 = v13;
  v14 = __chkstk_darwin(v13);
  v84 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v79 - v16;
  v18 = sub_1000BA294(&qword_100BC4F88);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1000BA294(&qword_100BC4F90);
  __chkstk_darwin(v21);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000BA294(&qword_100C17680);
  __chkstk_darwin(v79);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1000BA294(&qword_100C17688);
  __chkstk_darwin(v88);
  v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1000BA294(&qword_100C17690);
  __chkstk_darwin(v92);
  v91 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1000BA294(&qword_100C17698);
  v30 = __chkstk_darwin(v29);
  v94 = (uint64_t)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v90 = (char *)&v79 - v33;
  v34 = __chkstk_darwin(v32);
  v93 = (uint64_t)&v79 - v35;
  v36 = static VerticalAlignment.center.getter(v34);
  sub_100047040(v83, v6, v82, v80, v81 & 1, a4, (uint64_t)v100);
  v101[216] = 0;
  memcpy(&v101[7], v100, 0xD1uLL);
  v102[0] = v36;
  v102[1] = 0;
  LOBYTE(v102[2]) = 0;
  memcpy((char *)&v102[2] + 1, v101, 0xD8uLL);
  v37 = enum case for Text.Case.uppercase(_:);
  v38 = type metadata accessor for Text.Case(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v23, v37, v38);
  v39 = v38;
  v40 = v6;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v39);
  KeyPath = swift_getKeyPath(&unk_1009DD750);
  sub_100037794((uint64_t)v23, (uint64_t)v20 + *(int *)(v18 + 28), &qword_100BC4F90);
  *v20 = KeyPath;
  sub_100037794((uint64_t)v20, (uint64_t)&v25[*(int *)(v79 + 36)], &qword_100BC4F88);
  memcpy(v25, v102, 0xE9uLL);
  sub_100952630((uint64_t)v102);
  sub_100021A14((uint64_t)v20, &qword_100BC4F88);
  v42 = (uint64_t)v23;
  v43 = (int *)v87;
  sub_100021A14(v42, &qword_100BC4F90);
  sub_1009526C4(v100);
  sub_100114A94();
  v45 = v84;
  v44 = v85;
  v46 = v86;
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v84, enum case for ColorSchemeContrast.increased(_:), v86);
  v47 = static ColorSchemeContrast.== infix(_:_:)(v17, v45);
  v48 = *(void (**)(char *, uint64_t))(v44 + 8);
  v48(v45, v46);
  v49 = v46;
  v50 = (uint64_t)v89;
  v48(v17, v49);
  sub_10000AB54(v40, v50, type metadata accessor for LocationComponentHeaderView);
  if ((v47 & 1) != 0)
  {
    sub_1000215BC(v50, type metadata accessor for LocationComponentHeaderView);
LABEL_4:
    v56 = static HierarchicalShapeStyle.primary.getter();
    goto LABEL_6;
  }
  v51 = v50 + v43[10];
  v52 = *(_QWORD *)v51;
  v53 = *(_BYTE *)(v51 + 8);
  sub_10008D47C(*(_QWORD *)v51, v53);
  sub_100109B54();
  v55 = v54;
  sub_1000B15F8(v52, v53);
  sub_1000215BC(v50, type metadata accessor for LocationComponentHeaderView);
  if ((v55 & 1) != 0)
    goto LABEL_4;
  v56 = static HierarchicalShapeStyle.tertiary.getter();
LABEL_6:
  v57 = v56;
  v59 = (uint64_t)v91;
  v58 = v92;
  sub_100037794((uint64_t)v25, (uint64_t)v27, &qword_100C17680);
  *(_DWORD *)&v27[*(int *)(v88 + 36)] = v57;
  sub_100021A14((uint64_t)v25, &qword_100C17680);
  v61 = v95;
  v60 = v96;
  v62 = v97;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, enum case for BlendMode.plusLighter(_:), v97);
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v59 + *(int *)(v58 + 36), v61, v62);
  sub_100037794((uint64_t)v27, v59, &qword_100C17688);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  sub_100021A14((uint64_t)v27, &qword_100C17688);
  v63 = v40 + v43[8];
  v64 = *(_QWORD *)v63;
  v65 = *(_BYTE *)(v63 + 8);
  sub_10008D47C(*(_QWORD *)v63, v65);
  sub_100109B54();
  LOBYTE(v62) = v66;
  sub_1000B15F8(v64, v65);
  v67 = v98;
  sub_10000AB54(v40, v98, type metadata accessor for LocationComponentHeaderView);
  if ((v62 & 1) != 0)
  {
    v68 = 1;
  }
  else
  {
    v69 = v67 + v43[9];
    v70 = *(_QWORD *)v69;
    v71 = *(_BYTE *)(v69 + 8);
    sub_10008D47C(*(_QWORD *)v69, v71);
    sub_100109B54();
    v68 = v72;
    sub_1000B15F8(v70, v71);
  }
  sub_1000215BC(v67, type metadata accessor for LocationComponentHeaderView);
  v73 = sub_100155E44();
  v74 = (uint64_t)v90;
  View.accessibilityHidden(_:)(v68 & 1, v58, v73);
  sub_100021A14(v59, &qword_100C17690);
  v75 = v93;
  sub_1000F111C(v74, v93, &qword_100C17698);
  v76 = v94;
  sub_100037794(v75, v94, &qword_100C17698);
  v77 = v99;
  sub_100037794(v76, v99, &qword_100C17698);
  v78 = v77 + *(int *)(sub_1000BA294(&qword_100C176C8) + 48);
  *(_QWORD *)v78 = 0;
  *(_BYTE *)(v78 + 8) = 0;
  sub_100021A14(v75, &qword_100C17698);
  sub_100021A14(v76, &qword_100C17698);
}

uint64_t sub_100084C98(void *__src, const void *a2)
{
  _BYTE v4[168];
  _BYTE __dst[168];

  memcpy(v4, __src, 0xA2uLL);
  memcpy(__dst, a2, 0xA2uLL);
  return sub_100085598((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_100084CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t, uint64_t);
  int *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  char v62;
  unsigned __int8 *v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  void (*v81)(uint64_t, uint64_t);
  char v82;
  char v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 *v99;
  unsigned __int8 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[168];
  _BYTE v108[176];

  v98 = type metadata accessor for ForegroundEffect(0);
  v92 = *(_QWORD *)(v98 - 8);
  sub_10009D98C();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v91 = v7;
  v93 = sub_1000BA294(&qword_100C00218);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v97 = v9;
  sub_1000BA294(&qword_100BC5B30);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_1000986FC();
  v94 = v11;
  sub_10009D2A4();
  __chkstk_darwin(v12);
  v95 = (uint64_t)&v86 - v13;
  sub_10009D2A4();
  __chkstk_darwin(v14);
  v96 = (uint64_t)&v86 - v15;
  v104 = type metadata accessor for LocationFooterViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v16);
  sub_100088FDC();
  v99 = (unsigned __int8 *)v17;
  v101 = sub_1000BA294(&qword_100C00220);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_10009E540();
  sub_1000BA294(&qword_100BCD690);
  sub_1000B42B0();
  __chkstk_darwin(v19);
  sub_1000986FC();
  v100 = (unsigned __int8 *)v20;
  sub_10009D2A4();
  __chkstk_darwin(v21);
  v102 = (uint64_t)&v86 - v22;
  sub_10009D2A4();
  __chkstk_darwin(v23);
  v103 = (uint64_t)&v86 - v24;
  v25 = sub_100098AA0();
  v106 = *(_QWORD *)(v25 - 8);
  sub_10009D98C();
  __chkstk_darwin(v26);
  sub_100088FDC();
  v105 = v27;
  v28 = sub_1000BA294(&qword_100BCD780);
  sub_1000B42B0();
  __chkstk_darwin(v29);
  sub_100079FBC();
  sub_1000BA294(&qword_100BCD680);
  sub_1000B42B0();
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v86 - v35;
  __chkstk_darwin(v34);
  v38 = (char *)&v86 - v37;
  if ((static Location.Identifier.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_57;
  v87 = v3;
  v39 = sub_1000CFED0();
  v40 = *(int *)(v39 + 20);
  v90 = a1;
  sub_1000BDD50(a1 + v40, (uint64_t)v38);
  v88 = (int *)v39;
  v89 = a2;
  sub_1000BDD50(a2 + *(int *)(v39 + 20), (uint64_t)v36);
  v41 = v2 + *(int *)(v28 + 48);
  sub_1000BDD50((uint64_t)v38, v2);
  sub_1000BDD50((uint64_t)v36, v41);
  sub_100088FC8(v2, 1, v25);
  if (v43)
  {
    sub_1000B3B4C((uint64_t)v36);
    sub_1000B3B4C((uint64_t)v38);
    v42 = sub_100088FC8(v41, 1, v25);
    if (v43)
    {
      sub_100098898(v42, &qword_100BCD680);
      goto LABEL_13;
    }
LABEL_10:
    v44 = &qword_100BCD780;
    v45 = v2;
LABEL_11:
    sub_100021A14(v45, v44);
    goto LABEL_57;
  }
  sub_10003773C(v2, (uint64_t)v33, &qword_100BCD680);
  sub_100088FC8(v41, 1, v25);
  if (v43)
  {
    sub_100021A14((uint64_t)v36, &qword_100BCD680);
    sub_100021A14((uint64_t)v38, &qword_100BCD680);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v33, v25);
    goto LABEL_10;
  }
  v47 = v105;
  v46 = v106;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v105, v41, v25);
  sub_10000F1C8((unint64_t *)&qword_100BC3640, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier);
  v49 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v47, v25, v48);
  v50 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v50(v47, v25);
  sub_1000B3B4C((uint64_t)v36);
  sub_1000B3B4C((uint64_t)v38);
  v50((uint64_t)v33, v25);
  sub_1000B3B4C(v2);
  if ((v49 & 1) == 0)
    goto LABEL_57;
LABEL_13:
  v51 = v88;
  v52 = v90;
  sub_100099010(v107, (const void *)(v90 + v88[6]));
  v53 = v89;
  sub_100099010(v108, (const void *)(v89 + v51[6]));
  if ((sub_100085598((uint64_t)v107, (uint64_t)v108) & 1) == 0)
    goto LABEL_57;
  sub_1000859A8();
  if ((v54 & 1) == 0)
    goto LABEL_57;
  sub_100085A88(*(_QWORD *)(v52 + v51[8]));
  if ((v55 & 1) == 0)
    goto LABEL_57;
  v56 = v103;
  sub_1000BD6AC(v52 + v51[9], v103);
  v57 = v102;
  sub_1000BD6AC(v53 + v51[9], v102);
  v58 = v87;
  v59 = v87 + *(int *)(v101 + 48);
  sub_1000BD6AC(v56, v87);
  sub_1000BD6AC(v57, v59);
  v60 = v104;
  sub_100088FC8(v58, 1, v104);
  if (v43)
  {
    sub_10009E47C(v57);
    sub_10009E47C(v56);
    sub_100088FC8(v59, 1, v60);
    if (v43)
    {
      sub_100021A14(v58, &qword_100BCD690);
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  v61 = v100;
  sub_10003773C(v58, (uint64_t)v100, &qword_100BCD690);
  sub_100088FC8(v59, 1, v60);
  if (v62)
  {
    sub_100099298(v57);
    sub_100099298(v56);
    sub_1000215BC((uint64_t)v61, type metadata accessor for LocationFooterViewModel);
LABEL_24:
    v44 = &qword_100C00220;
    v45 = v58;
    goto LABEL_11;
  }
  v63 = v99;
  sub_1001334C4(v59, (uint64_t)v99);
  v64 = sub_100038130(v61, v63);
  sub_1000215BC((uint64_t)v63, type metadata accessor for LocationFooterViewModel);
  sub_100098854(v57);
  sub_100098854(v56);
  sub_1000215BC((uint64_t)v61, type metadata accessor for LocationFooterViewModel);
  sub_100098854(v58);
  if (!v64)
    goto LABEL_57;
LABEL_26:
  v65 = v90;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_10008582C(*(_BYTE *)(v65 + v51[14]));
  if ((v66 & 1) == 0)
    goto LABEL_57;
  sub_10008596C();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)(v65 + v51[15]), *(_QWORD *)(v53 + v51[15])) & 1) == 0)
    goto LABEL_57;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_1000C3F54();
  if (!v43)
    goto LABEL_57;
  sub_1000C5868();
  if (!v43)
    goto LABEL_57;
  v67 = sub_1000C0B4C(v88[19]);
  if ((static Date.== infix(_:_:)(v67, v68) & 1) == 0)
    goto LABEL_57;
  v69 = v88;
  v70 = v96;
  sub_1000BDD50(v90 + v88[20], v96);
  v71 = v95;
  sub_1000BDD50(v89 + v69[20], v95);
  v72 = v97;
  v73 = v97 + *(int *)(v93 + 48);
  sub_1000BDD50(v70, v97);
  sub_1000BDD50(v71, v73);
  sub_100088FC8(v72, 1, v98);
  if (!v43)
  {
    sub_10003773C(v97, v94, &qword_100BC5B30);
    sub_100088FC8(v73, 1, v98);
    if (!v74)
    {
      v76 = v91;
      v75 = v92;
      v77 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v91, v73, v98);
      sub_10000F1C8(&qword_100BC5B98, (uint64_t (*)(uint64_t))&type metadata accessor for ForegroundEffect);
      v78 = v94;
      v80 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v76, v77, v79);
      v81 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v81(v76, v77);
      sub_10009E47C(v95);
      sub_10009E47C(v96);
      v81(v78, v77);
      sub_10009E47C(v97);
      if ((v80 & 1) == 0)
        goto LABEL_57;
      goto LABEL_53;
    }
    sub_100099298(v95);
    sub_100099298(v96);
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v94, v98);
    goto LABEL_51;
  }
  sub_10009E47C(v95);
  sub_10009E47C(v96);
  sub_100088FC8(v73, 1, v98);
  if (!v43)
  {
LABEL_51:
    v44 = &qword_100C00218;
    v45 = v97;
    goto LABEL_11;
  }
  sub_100021A14(v97, &qword_100BC5B30);
LABEL_53:
  sub_1000C5868();
  if (v43)
  {
    sub_100085F34();
    if ((v82 & 1) != 0)
    {
      sub_1000C5868();
      if (v43)
      {
        v85 = sub_1000C0B4C(v88[24]);
        v83 = static LocationEntity.== infix(_:_:)(v85);
        return v83 & 1;
      }
    }
  }
LABEL_57:
  v83 = 0;
  return v83 & 1;
}

uint64_t sub_100085598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int8x16_t v22;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int8x16_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  char v71;
  __int128 v72;
  __int128 v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  int8x16_t v79;
  int8x16_t v80;
  char v81;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (v4 != *(_QWORD *)a2 || v5 != v6)
  {
    v8 = sub_100099264(v4, v5, *(_QWORD *)a2, v6);
    v9 = 0;
    if ((v8 & 1) == 0)
      return v9 & 1;
  }
  sub_1002C7E00((__int128 *)(a1 + 16), (uint64_t)v73);
  sub_1002C7E00((__int128 *)(a2 + 16), (uint64_t)&v72);
  v10 = sub_1002C7E00(v73, (uint64_t)&v74);
  if (v78)
  {
    if (v78 == 1)
    {
      v18 = v74;
      v19 = v75;
      v20 = v76;
      v21 = v77;
      sub_1000BCC98(v10, v11, v12, v13, v14, v15, v16, v17, v72);
      if (v81 != 1)
        goto LABEL_20;
      v22 = v80;
      if (v18 != v79.i64[0] || v19 != v79.i64[1])
      {
        v24 = sub_100099264(v18, v19, v79.i64[0], v79.i64[1]);
        v9 = 0;
        if ((v24 & 1) == 0)
          return v9 & 1;
      }
      if (v20 == v22.i64[0] && v21 == v22.i64[1])
        goto LABEL_31;
      v26 = v20;
      v27 = v21;
      v29 = v22.i64[1];
      v28 = v22.i64[0];
      goto LABEL_30;
    }
    sub_1000BCC98(v10, v11, v12, v13, v14, v15, v16, v17, v72);
    v9 = 0;
    if (v81 != 2)
      return v9 & 1;
    v33 = vorrq_s8(v79, v80);
    if (vorr_s8(*(int8x8_t *)v33.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL)))
      return v9 & 1;
  }
  else
  {
    v30 = v74;
    v31 = v75;
    sub_1000BCC98(v10, v11, v12, v13, v14, v15, v16, v17, v72);
    if (v81)
      goto LABEL_20;
    v29 = v79.i64[1];
    v28 = v79.i64[0];
    if (v30 != v79.i64[0] || v31 != v79.i64[1])
    {
      v26 = v30;
      v27 = v31;
LABEL_30:
      v35 = sub_100099264(v26, v27, v28, v29);
      v9 = 0;
      if ((v35 & 1) == 0)
        return v9 & 1;
    }
  }
LABEL_31:
  v36 = *(_QWORD *)(a1 + 56);
  v37 = *(_QWORD *)(a1 + 64);
  v38 = *(_QWORD *)(a2 + 56);
  v39 = *(_QWORD *)(a2 + 64);
  if (v36 != v38 || v37 != v39)
  {
    v41 = sub_100099264(v36, v37, v38, v39);
    v9 = 0;
    if ((v41 & 1) == 0)
      return v9 & 1;
  }
  v42 = *(_QWORD *)(a1 + 72);
  v43 = *(_QWORD *)(a1 + 80);
  v44 = *(_QWORD *)(a2 + 72);
  v45 = *(_QWORD *)(a2 + 80);
  if (v42 != v44 || v43 != v45)
  {
    v47 = sub_100099264(v42, v43, v44, v45);
    v9 = 0;
    if ((v47 & 1) == 0)
      return v9 & 1;
  }
  v48 = *(_QWORD *)(a1 + 96);
  v49 = *(_QWORD *)(a2 + 96);
  if (v48)
  {
    if (!v49)
      goto LABEL_20;
    v50 = *(_QWORD *)(a1 + 88);
    v51 = *(_QWORD *)(a2 + 88);
    if (v50 != v51 || v48 != v49)
    {
      v53 = sub_100099264(v50, v48, v51, v49);
      v9 = 0;
      if ((v53 & 1) == 0)
        return v9 & 1;
    }
  }
  else if (v49)
  {
    goto LABEL_20;
  }
  v54 = *(_QWORD *)(a1 + 104);
  v55 = *(_QWORD *)(a1 + 112);
  v56 = *(_QWORD *)(a2 + 104);
  v57 = *(_QWORD *)(a2 + 112);
  if (v54 != v56 || v55 != v57)
  {
    v59 = sub_100099264(v54, v55, v56, v57);
    v9 = 0;
    if ((v59 & 1) == 0)
      return v9 & 1;
  }
  v60 = *(_QWORD *)(a1 + 120);
  v61 = *(_QWORD *)(a1 + 128);
  v62 = *(_QWORD *)(a2 + 120);
  v63 = *(_QWORD *)(a2 + 128);
  if (v60 != v62 || v61 != v63)
  {
    v65 = sub_100099264(v60, v61, v62, v63);
    v9 = 0;
    if ((v65 & 1) == 0)
      return v9 & 1;
  }
  if (((*(unsigned __int8 *)(a1 + 136) ^ *(unsigned __int8 *)(a2 + 136)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 137) ^ *(unsigned __int8 *)(a2 + 137)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 138) ^ *(unsigned __int8 *)(a2 + 138)) & 1) != 0)
  {
LABEL_20:
    v9 = 0;
    return v9 & 1;
  }
  v66 = *(_QWORD *)(a1 + 144);
  v67 = *(_QWORD *)(a1 + 152);
  v68 = *(_QWORD *)(a2 + 144);
  v69 = *(_QWORD *)(a2 + 152);
  v70 = v66 == v68 && v67 == v69;
  if (v70 || (v71 = sub_100099264(v66, v67, v68, v69), v9 = 0, (v71 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 160) ^ *(unsigned __int8 *)(a2 + 160)) & 1) == 0)
    {
      v9 = *(_BYTE *)(a1 + 161) ^ *(_BYTE *)(a2 + 161) ^ 1;
      return v9 & 1;
    }
    goto LABEL_20;
  }
  return v9 & 1;
}

void sub_10008582C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100085874(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000858E8 + 4 * byte_1009BDF04[a2]))(0x7469577974706D65);
}

void sub_1000858E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1 == 0x7469577974706D65 && v2 == 0xED0000656D614E68)
    sub_1000CD0D4();
  else
    sub_1000BB348(a1, a2, 0x7469577974706D65);
  sub_1000986E8();
  sub_1000986C4();
  sub_100079F70();
}

unint64_t sub_10008596C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC4D48;
  if (!qword_100BC4D48)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BC4D48);
  }
  return result;
}

void sub_1000859A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_1000986AC();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = (uint64_t *)(v1 + 48);
    v4 = (uint64_t *)(v0 + 48);
    while (1)
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v7 = *(v3 - 1);
      v8 = *v3;
      sub_1000989F8();
      sub_1000878DC();
      sub_10009EF94();
      sub_1000860DC();
      sub_1000C1A00();
      sub_100086258();
      if ((v9 & 1) == 0)
        break;
      if (v5 == v7 && v6 == v8)
      {
        sub_1000986C4();
        sub_100098718(v6);
        sub_1000986E8();
      }
      else
      {
        v11 = sub_100087924();
        v13 = sub_100099264(v11, v12, v7, v8);
        sub_10009895C();
        sub_1000986C4();
        sub_10003BC58();
        sub_1000986E8();
        if ((v13 & 1) == 0)
          goto LABEL_16;
      }
      v3 += 3;
      v4 += 3;
      if (!--v2)
        goto LABEL_16;
    }
    sub_10009895C();
    sub_1000986C4();
    sub_10003BC58();
    sub_1000986E8();
  }
LABEL_16:
  sub_100098640();
}

void sub_100085A88(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100085AC8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  char v5;

  sub_1000C3A18();
  if (v2)
    return 0;
  type metadata accessor for DefaultContent._Storage(0);
  v3 = v0 & 0xFFFFFFFFFFFFFFBLL;
  swift_retain();
  swift_retain();
  sub_1001DA488();
  v5 = v4;
  swift_release(v1 & 0xFFFFFFFFFFFFFFBLL);
  swift_release(v3);
  return v5 & 1;
}

void sub_100085F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64x2_t *v20;
  unint64_t v21;
  char v22;
  char v23;
  int64x2_t v24;
  int64x2_t v25;

  sub_10009E4F0();
  if (v2 == v3)
    return;
  sub_1001FB0A0();
  if (!v4)
    return;
  v5 = 0;
  v6 = v0 + 64;
  sub_100075DD8();
  v9 = v8 & v7;
  v11 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      return;
    ++v5;
    if (!*(_QWORD *)(v6 + 8 * v14))
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v11)
        return;
      if (!*(_QWORD *)(v6 + 8 * v5))
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v11)
          return;
        if (!*(_QWORD *)(v6 + 8 * v5))
          break;
      }
    }
LABEL_20:
    sub_1000DF470();
    v9 = v17 & v16;
    v13 = v18 + (v5 << 6);
LABEL_21:
    v19 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v13);
    v20 = (int64x2_t *)(*(_QWORD *)(v0 + 56) + 32 * v13);
    v24 = v20[1];
    v25 = *v20;
    sub_1000878DC();
    v21 = sub_1000991C8(v19);
    v23 = v22;
    sub_10009895C();
    if ((v23 & 1) == 0
      || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(*(_QWORD *)(v1 + 56) + 32 * v21), v25), (int32x4_t)vceqq_s64(*(int64x2_t *)(*(_QWORD *)(v1 + 56) + 32 * v21 + 16), v24))), 0xFuLL))) & 1) == 0)
    {
      return;
    }
  }
  v15 = v14 + 3;
  if (v15 >= v11)
    return;
  if (*(_QWORD *)(v6 + 8 * v15))
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v11)
      return;
    ++v15;
    if (*(_QWORD *)(v6 + 8 * v5))
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1000860C4(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_1000860DC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

void sub_1000860E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_100080C0C(a1, v3, a3);
}

uint64_t sub_1000860EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 392))(v0, v1);
}

void sub_100086100(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_100080C0C(a1, a2, v2);
}

uint64_t sub_100086108()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[176] + 8))(v0[178], v0[179]);
}

void sub_10008611C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_100095B78(a1, a2, v2);
}

uint64_t sub_100086124()
{
  uint64_t v0;

  return swift_bridgeObjectRetain_n(v0, 2);
}

uint64_t sub_100086130(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100086154()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100086160()
{
  uint64_t v0;
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, v0);
}

uint64_t sub_1000861B0(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 384) = result;
  *(_QWORD *)(v2 - 392) = a2;
  return result;
}

uint64_t sub_1000861C4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 200);
  *(_QWORD *)(result + 16) = v1;
  *(_QWORD *)(result + 24) = v3;
  return result;
}

unint64_t sub_100086204()
{
  return sub_1006654FC();
}

uint64_t sub_10008620C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 168);
}

double sub_100086220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(a11).n128_u64[0];
  return result;
}

double sub_100086228()
{
  return sub_10000E934();
}

uint64_t sub_100086234()
{
  return type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
}

uint64_t sub_100086248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for WeatherAvailability.AvailabilityKind(0);
}

void sub_100086258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int8 *v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;

  sub_1000986AC();
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for LocationComponentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100099864();
  sub_1000BA294(&qword_100BDA950);
  sub_1000B42B0();
  __chkstk_darwin(v11);
  sub_100079FBC();
  v12 = sub_1000BA294(&qword_100C12DA0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  v14 = sub_1000992A8();
  type metadata accessor for LocationComponentContainerViewModel(v14);
  sub_1000DBFF8();
  __chkstk_darwin(v15);
  sub_1000DABE8();
  __chkstk_darwin(v16);
  sub_1000BDE34();
  v18 = *(_QWORD *)(v8 + 16);
  if (v18 == *(_QWORD *)(v6 + 16))
  {
    v48 = v9;
    if (v18)
    {
      if (v8 != v6)
      {
        v49 = v17;
        v43 = v0;
        v44 = v1;
        sub_10003BE14();
        v21 = v20 & ~v19;
        v45 = *(_QWORD *)(v22 + 72);
        v23 = v12;
        v46 = v6;
        v47 = v8;
        while (1)
        {
          sub_1000BCF30(v8 + v21, v4);
          sub_1000BCF30(v6 + v21, v3);
          sub_10009176C();
          if ((v24 & 1) == 0)
            break;
          sub_100095B98(v4 + v49[5], v3 + v49[5]);
          if ((v25 & 1) == 0)
            break;
          v26 = v49[6];
          v27 = *(unsigned __int8 *)(v4 + v26);
          v28 = *(unsigned __int8 *)(v4 + v26 + 1);
          v29 = (unsigned __int8 *)(v3 + v26);
          v30 = *v29;
          v31 = v29[1];
          if (v28 == 1)
            __asm { BR              X11 }
          if ((_DWORD)v27 != v30)
            v31 = 1;
          if ((v31 & 1) != 0)
            break;
          v32 = v2 + *(int *)(v23 + 48);
          sub_1001098C0(v4 + v49[7], v2);
          v33 = sub_1000C1A00();
          sub_1001098C0(v33, v34);
          v35 = sub_1000DC638();
          sub_100088FC8(v35, v36, v48);
          if (v38)
          {
            v37 = sub_100088FC8(v32, 1, v48);
            if (!v38)
              goto LABEL_22;
            sub_100021A14(v2, &qword_100BDA950);
            v6 = v46;
            v8 = v47;
          }
          else
          {
            sub_1001098C0(v2, v44);
            sub_100088FC8(v32, 1, v48);
            if (v38)
            {
              sub_1000215BC(v44, type metadata accessor for LocationComponentAction);
LABEL_22:
              sub_1000988A0(v37, &qword_100C12DA0);
              break;
            }
            sub_10007802C(v32, v43, type metadata accessor for LocationComponentAction);
            v39 = sub_1000C0108();
            sub_100094514(v39, v40);
            v42 = v41;
            sub_100079FB4(v44);
            sub_1000215BC(v43, type metadata accessor for LocationComponentAction);
            sub_1000987A0(v2);
            v6 = v46;
            v8 = v47;
            v23 = v12;
            if ((v42 & 1) == 0)
              break;
          }
          sub_100079F9C(v3);
          sub_100079F9C(v4);
          v21 += v45;
          if (!--v18)
            goto LABEL_24;
        }
        sub_100079F9C(v3);
        sub_100079F9C(v4);
      }
    }
  }
LABEL_24:
  sub_100098640();
}

uint64_t sub_10008656C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = a1 + a2[8];
  v5 = type metadata accessor for URL(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[9];
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8));
  v7 = (int *)type metadata accessor for LearnMoreAttributorViewModel(0);
  v8 = v6 + v7[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7] + 8));
  swift_release(*(_QWORD *)(v6 + v7[8]));
  v9 = a1 + a2[11];
  v10 = type metadata accessor for LocationOfInterest(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[14];
  v12 = type metadata accessor for HomeAndWorkRefinementRowViewModel(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v12);
  if (!(_DWORD)result)
  {
    v14 = v11 + *(int *)(v12 + 20);
    v15 = type metadata accessor for Location(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v11 + *(int *)(v12 + 24), v10);
  }
  return result;
}

void sub_1000866F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100098728();
  v9 = v8 - v7;
  UnfairLock.lock()();
  v10 = (uint64_t *)(v2 + 48);
  sub_10009922C((uint64_t)v10, (uint64_t)v27, 32);
  v11 = *v10;
  sub_100094EDC();
  sub_1000FE21C(a1, a2, v11);
  v13 = v12;
  swift_bridgeObjectRelease(a2);
  if (v13)
  {
    v25 = v6;
    sub_1000D0B94();
    sub_10009922C((uint64_t)v10, (uint64_t)v27, 33);
    sub_100094EDC();
    v14 = (void *)sub_100086A08();
    sub_1000D0B94();
    swift_bridgeObjectRelease(a2);

    objc_msgSend(v13, "invalidate");
    if (qword_100BC24E8 != -1)
      swift_once(&qword_100BC24E8, sub_10015982C);
    v15 = sub_100098720();
    sub_1000AECD4(v15, (uint64_t)qword_100CAF2A0);
    v16 = swift_bridgeObjectRetain_n(a2, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = sub_100098710(32);
      v24 = sub_100098710(64);
      *(_DWORD *)v19 = 141558531;
      v26 = 1752392040;
      v27[0] = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27);
      *(_WORD *)(v19 + 12) = 2081;
      sub_100094EDC();
      v26 = sub_1000CE1C8(a1, a2, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27);
      v20 = sub_1000C5924(a2);
      *(_WORD *)(v19 + 22) = 2080;
      Date.init()(v20);
      sub_100051B90((unint64_t *)&qword_100BC52F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v21 = dispatch thunk of CustomStringConvertible.description.getter(v5);
      v23 = v22;
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v9, v5);
      v26 = sub_1000CE1C8(v21, v23, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27);
      swift_bridgeObjectRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Stopped monitoring location load. ID=%{private,mask.hash}s, Now=%s", (uint8_t *)v19, 0x20u);
      sub_1000C62B0();
      sub_1000986F0(v24);
      sub_1000986F0(v19);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
  else
  {
    sub_1000D0B94();
  }
  UnfairLock.unlock()();
}

uint64_t sub_100086A08()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_10009BBD4();
  v2 = v1;
  sub_1000FC444();
  sub_1000991C8(v2);
  sub_1000DC334();
  if ((v0 & 1) == 0)
    return 0;
  sub_10011DC54();
  sub_1000C1270();
  v3 = sub_1000BA294(&qword_100BC35C0);
  sub_1000CFB3C(v3, v4, v5, v6, v7, v8, v9, v10, v14, v15);
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v2 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v2);
  v12 = sub_100086AC8();
  ((void (*)(uint64_t, uint64_t, _QWORD *, unint64_t, void *))_NativeDictionary._delete(at:))(v2, v16, &type metadata for String, v12, &protocol witness table for String);
  sub_1000BE700();
  return v11;
}

unint64_t sub_100086AC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100BC35C8;
  if (!qword_100BC35C8)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100BC35C8);
  }
  return result;
}

uint64_t type metadata accessor for WeatherDataUpdater()
{
  return objc_opt_self(_TtC7Weather18WeatherDataUpdater);
}

uint64_t sub_100086B24(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  BOOL v44;
  char v45;
  BOOL v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[14];
  uint64_t v57[14];
  _BYTE v58[232];
  _BYTE v59[232];
  uint64_t v60[14];
  uint64_t v61[15];

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    goto LABEL_32;
  v4 = (int *)type metadata accessor for PreprocessedWeatherData(0);
  sub_100086D8C(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5]), v5, v6, v7, v8, v9, v10, v54, v56[0], v56[1], v56[2], v56[3], v56[4], v56[5], v56[6], v56[7], v56[8], v56[9],
    v56[10]);
  if ((v11 & 1) == 0)
    goto LABEL_32;
  v12 = (uint64_t *)sub_1000D8E28(v4[6]);
  if ((sub_100682D90(v12, v13) & 1) == 0)
    goto LABEL_32;
  v14 = sub_1000D8E28(v4[7]);
  if (!sub_100086FB8(v14, v15))
    goto LABEL_32;
  v16 = (uint64_t *)sub_1000D8E28(v4[8]);
  if (!sub_100087F50(v16, v17))
    goto LABEL_32;
  sub_1000CDA88(v60, (const void *)(a1 + v4[9]));
  sub_1000CDA88(v61, (const void *)(a2 + v4[9]));
  if ((sub_100086DE0(v60, v61) & 1) == 0)
    goto LABEL_32;
  v18 = v4[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  if ((static WeatherDescription.== infix(_:_:)(a1 + v18, a2 + v18) & 1) == 0)
    goto LABEL_32;
  v21 = *(int *)(sub_1000DA830() + 20);
  v22 = *(_QWORD *)(v19 + v21);
  v23 = *(_QWORD *)(v19 + v21 + 8);
  v24 = (_QWORD *)(v20 + v21);
  v25 = v24[1];
  v26 = v22 == *v24 && v23 == v25;
  if (v26
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, *v24, v25, 0), v27 = sub_10007A150(), (v28 & 1) != 0))
  {
    v29 = v4[11];
    v30 = *(_QWORD *)(a1 + v29);
    v31 = *(_QWORD *)(a1 + v29 + 8);
    v33 = *(_QWORD *)(a1 + v29 + 16);
    v32 = *(_QWORD *)(a1 + v29 + 24);
    v34 = *(_QWORD *)(a1 + v29 + 32);
    v35 = *(_QWORD *)(a1 + v29 + 40);
    v36 = (_QWORD *)(a2 + v29);
    v37 = v36[1];
    v38 = v36[2];
    v39 = v36[3];
    v40 = v36[4];
    v41 = v36[5];
    v42 = v30 == *v36 && v31 == v37;
    if (v42
      || (v55 = v36[5],
          _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, *v36, v37, 0),
          v41 = v55,
          v27 = sub_10007A150(),
          (v43 & 1) != 0))
    {
      v44 = v33 == v38 && v32 == v39;
      if (v44
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v33, v32, v38, v39, 0), v27 = sub_10007A150(), (v45 & 1) != 0))
      {
        v46 = v34 == v40 && v35 == v41;
        if (v46
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v40, v41, 0), v27 = sub_10007A150(),
                                                                                    (v47 & 1) != 0))
        {
          v48 = sub_1000D8E28(v4[12]);
          sub_1000879A4(v48, v49);
          if ((v50 & 1) != 0)
          {
            sub_1000BF170(v58, (const void *)(a1 + v4[13]));
            sub_1000BF170(v59, (const void *)(a2 + v4[13]));
            if ((sub_100087A98((uint64_t)v58, (uint64_t)v59) & 1) != 0)
            {
              v51 = sub_1000D8E28(v4[14]);
              if (sub_1004AD4A8(v51, v52))
              {
                sub_1000CDA88(v56, (const void *)(a1 + v4[15]));
                sub_1000CDA88(v57, (const void *)(a2 + v4[15]));
                v27 = sub_100087C9C(v56, v57);
                return v27 & 1;
              }
            }
          }
LABEL_32:
          v27 = 0;
        }
      }
    }
  }
  return v27 & 1;
}

void sub_100086D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10094A2B4(a1, a2, (uint64_t)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, (uint64_t)sub_10010C890, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_100086DA4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_10004A298();
}

uint64_t sub_100086DE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;
  char v17;
  BOOL v18;
  char v19;
  BOOL v20;
  char v21;
  BOOL v22;
  char v23;
  BOOL v24;
  char v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v43 = a1[7];
  v44 = a1[6];
  v39 = a1[9];
  v40 = a1[8];
  v35 = a1[11];
  v36 = a1[10];
  v10 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[4];
  v14 = a2[5];
  v41 = a2[7];
  v42 = a2[6];
  v37 = a2[9];
  v38 = a2[8];
  v15 = v4 == *a2 && v5 == v10;
  v33 = a2[10];
  v34 = a2[11];
  if (v15 || (sub_100099264(v4, v5, *a2, v10), result = sub_10007A150(), (v17 & 1) != 0))
  {
    v18 = v6 == v11 && v7 == v12;
    if (v18 || (sub_100099264(v6, v7, v11, v12), result = sub_10007A150(), (v19 & 1) != 0))
    {
      v20 = v8 == v13 && v9 == v14;
      if (v20 || (sub_100099264(v8, v9, v13, v14), result = sub_10007A150(), (v21 & 1) != 0))
      {
        v22 = v44 == v42 && v43 == v41;
        if (v22 || (sub_100099264(v44, v43, v42, v41), result = sub_10007A150(), (v23 & 1) != 0))
        {
          v24 = v40 == v38 && v39 == v37;
          if (v24 || (sub_100099264(v40, v39, v38, v37), result = sub_10007A150(), (v25 & 1) != 0))
          {
            v26 = v36 == v33 && v35 == v34;
            if (v26 || (sub_100099264(v36, v35, v33, v34), result = sub_10007A150(), (v27 & 1) != 0))
            {
              v28 = a1[12];
              v29 = a1[13];
              v30 = a2[12];
              v31 = a2[13];
              if (v28 == v30 && v29 == v31)
                return 1;
              else
                return _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v30, v31, 0);
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_100086FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for WeatherDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100098728();
  v8 = v7 - v6;
  v9 = sub_1000BA294(&qword_100BD8EB8);
  sub_1000B42B0();
  __chkstk_darwin(v10);
  sub_100098728();
  v13 = v12 - v11;
  sub_1000BA294(&qword_100BC3368);
  sub_1000B42B0();
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v32 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v32 - v21;
  sub_100087298();
  if ((v23 & 1) == 0)
    return 0;
  v33 = v5;
  v24 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel(0);
  sub_100087250(a1 + *(int *)(v24 + 20), (uint64_t)v22);
  sub_100087250(a2 + *(int *)(v24 + 20), (uint64_t)v20);
  v25 = v13 + *(int *)(v9 + 48);
  sub_100087250((uint64_t)v22, v13);
  sub_100087250((uint64_t)v20, v25);
  sub_100098750(v13);
  if (v26)
  {
    sub_1000BBB54((uint64_t)v20);
    sub_1000BBB54((uint64_t)v22);
    sub_100098750(v25);
    if (v26)
    {
      sub_100021A68(v13, &qword_100BC3368);
      return 1;
    }
    goto LABEL_10;
  }
  sub_100087250(v13, (uint64_t)v17);
  sub_100098750(v25);
  if (v26)
  {
    sub_1000BBB54((uint64_t)v20);
    sub_1000BBB54((uint64_t)v22);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v4);
LABEL_10:
    sub_100021A68(v13, &qword_100BD8EB8);
    return 0;
  }
  v27 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v8, v25, v4);
  v28 = sub_100087964((unint64_t *)&qword_100BD8EC0, (uint64_t)&protocol conformance descriptor for WeatherDescription);
  v29 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v8, v4, v28);
  v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v30(v8, v4);
  sub_1000BBB54((uint64_t)v20);
  sub_1000BBB54((uint64_t)v22);
  v30((uint64_t)v17, v4);
  sub_1000BBB54(v13);
  return (v29 & 1) != 0;
}

uint64_t sub_100087250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BC3368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100087298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t *v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  BOOL v91;
  char v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;

  sub_1000986AC();
  v3 = v2;
  v5 = v4;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  v7 = sub_1000C1E78();
  v114 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v7);
  sub_1000B42B0();
  __chkstk_darwin(v8);
  sub_1000986FC();
  v113 = v9;
  sub_10009D2A4();
  __chkstk_darwin(v10);
  sub_100079F7C();
  v112 = v11;
  v111 = sub_1000BA294(&qword_100BE55B8);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100079F58();
  v13 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_1000DBFF8();
  __chkstk_darwin(v14);
  sub_1000BDC0C();
  v16 = __chkstk_darwin(v15);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v103 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v103 - v21;
  __chkstk_darwin(v20);
  v25 = (char *)&v103 - v24;
  v26 = *(_QWORD *)(v5 + 16);
  if (v26 != *(_QWORD *)(v3 + 16) || !v26 || v5 == v3)
  {
LABEL_83:
    sub_100098640();
    return;
  }
  v104 = v1;
  v105 = v23;
  v27 = 0;
  sub_1000C700C();
  v109 = v3 + v28;
  v110 = v29;
  v30 = v5 + v28;
  v108 = *(_QWORD *)(v31 + 72);
  v106 = v13;
  v107 = v32;
  while (1)
  {
    v33 = v108 * v27;
    sub_1000DC370(v30 + v108 * v27, (uint64_t)v25);
    sub_1000DC370(v109 + v33, (uint64_t)v22);
    v34 = v0 + *(int *)(v111 + 48);
    sub_1000DC370((uint64_t)v25, v0);
    sub_1000DC370((uint64_t)v22, v34);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0, v13);
    if (!EnumCaseMultiPayload)
      break;
    if (EnumCaseMultiPayload == 1)
    {
      v36 = v110;
      sub_100080C0C(v0, v110, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (sub_10011DDB8() == 1)
      {
        v37 = v113;
        sub_10007802C(v34, v113, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        if ((sub_10094F85C(v36) & 1) == 0)
          goto LABEL_78;
        if ((static TimeZone.== infix(_:_:)(v110 + v114[5], v113 + v114[5]) & 1) == 0)
          goto LABEL_78;
        v38 = *(uint64_t **)(v110 + v114[6]);
        sub_10011E364();
        if (!v43)
          goto LABEL_78;
        if (v34 && v38 != (uint64_t *)v37)
        {
          v39 = v38[4];
          v40 = v38[5];
          v41 = *(_QWORD *)(v37 + 32);
          v42 = *(_QWORD *)(v37 + 40);
          v43 = v39 == v41 && v40 == v42;
          if (!v43 && (sub_100099264(v39, v40, v41, v42) & 1) == 0)
            goto LABEL_78;
          if (v34 != 1)
          {
            v44 = (uint64_t *)(v37 + 56);
            v45 = v38 + 7;
            while (1)
            {
              v46 = *(v45 - 1);
              v47 = *v45;
              v48 = *(v44 - 1);
              v49 = *v44;
              v50 = v46 == v48 && v47 == v49;
              if (!v50 && (sub_100099264(v46, v47, v48, v49) & 1) == 0)
                break;
              sub_10094F834();
              if (v43)
                goto LABEL_28;
            }
LABEL_78:
            sub_1000BD95C(v113);
            v101 = v110;
LABEL_80:
            sub_1000BD95C(v101);
LABEL_81:
            sub_1000215BC(v0, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
LABEL_82:
            sub_100079F9C((uint64_t)v22);
            sub_100079F9C((uint64_t)v25);
            goto LABEL_83;
          }
        }
LABEL_28:
        v51 = sub_1000C024C(v114[7]);
        v55 = v43 && v52 == v54;
        if (!v55 && (sub_100099264(v51, v52, v53, v54) & 1) == 0)
          goto LABEL_78;
        v56 = v113;
        v57 = v114[8];
        v58 = v110;
        v60 = *(_QWORD *)(v110 + v57);
        v59 = *(_QWORD *)(v110 + v57 + 8);
        v61 = (uint64_t *)(v113 + v57);
        v62 = v61[1];
        if (v60 != *v61 || v59 != v62)
        {
          v64 = sub_100099264(v60, v59, *v61, v62);
          v56 = v113;
          v58 = v110;
          if ((v64 & 1) == 0)
            goto LABEL_78;
        }
        goto LABEL_73;
      }
      v102 = v36;
LABEL_86:
      sub_1000215BC(v102, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
LABEL_88:
      sub_100021A14(v0, &qword_100BE55B8);
      goto LABEL_82;
    }
    v93 = v25;
    v94 = v22;
    v95 = v30;
    v96 = v19;
    v97 = v105;
    sub_100080C0C(v0, v105, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (sub_10011DDB8() != 2)
    {
      sub_1000215BC(v97, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      v22 = v94;
      v25 = v93;
      goto LABEL_88;
    }
    v98 = v104;
    sub_10007802C(v34, v104, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    sub_100087DD8(v97, v98);
    v100 = v99;
    sub_10009D37C(v98);
    sub_10009D37C(v97);
    v19 = v96;
    v30 = v95;
    v22 = v94;
    v25 = v93;
    if ((v100 & 1) == 0)
      goto LABEL_81;
LABEL_76:
    ++v27;
    sub_10009DA28(v0);
    sub_10009DA28((uint64_t)v22);
    sub_10009DA28((uint64_t)v25);
    if (v27 == v107)
      goto LABEL_83;
  }
  sub_1000DC370(v0, (uint64_t)v19);
  if (sub_10011DDB8())
  {
    v102 = (uint64_t)v19;
    goto LABEL_86;
  }
  v65 = v112;
  sub_10007802C(v34, v112, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
  if ((sub_10094F85C((uint64_t)v19) & 1) == 0)
    goto LABEL_79;
  if ((static TimeZone.== infix(_:_:)(&v19[v114[5]], v112 + v114[5]) & 1) == 0)
    goto LABEL_79;
  v66 = *(uint64_t **)&v19[v114[6]];
  sub_10011E364();
  if (!v43)
    goto LABEL_79;
  if (v34)
    v67 = v66 == (uint64_t *)v65;
  else
    v67 = 1;
  if (v67)
    goto LABEL_63;
  v68 = v66[4];
  v69 = v66[5];
  v70 = *(_QWORD *)(v65 + 32);
  v71 = *(_QWORD *)(v65 + 40);
  v72 = v68 == v70 && v69 == v71;
  if (!v72 && (sub_100099264(v68, v69, v70, v71) & 1) == 0)
  {
LABEL_79:
    sub_1000BD95C(v112);
    v101 = (uint64_t)v19;
    goto LABEL_80;
  }
  if (v34 == 1)
  {
LABEL_63:
    v80 = v114[7];
    v81 = *(_QWORD *)&v19[v80];
    v82 = *(_QWORD *)&v19[v80 + 8];
    v83 = (uint64_t *)(v112 + v80);
    v84 = v83[1];
    v85 = v81 == *v83 && v82 == v84;
    if (!v85 && (sub_100099264(v81, v82, *v83, v84) & 1) == 0)
      goto LABEL_79;
    v86 = v114[8];
    v88 = *(_QWORD *)&v19[v86];
    v87 = *(_QWORD *)&v19[v86 + 8];
    v56 = v112;
    v89 = (uint64_t *)(v112 + v86);
    v90 = v89[1];
    v91 = v88 == *v89 && v87 == v90;
    v58 = (uint64_t)v19;
    if (!v91)
    {
      v92 = sub_100099264(v88, v87, *v89, v90);
      v56 = v112;
      v58 = (uint64_t)v19;
      if ((v92 & 1) == 0)
        goto LABEL_79;
    }
LABEL_73:
    sub_10009D37C(v56);
    sub_10009D37C(v58);
    v13 = v106;
    goto LABEL_76;
  }
  v73 = (uint64_t *)(v65 + 56);
  v74 = v66 + 7;
  while (v34 > 1)
  {
    v75 = *(v74 - 1);
    v76 = *v74;
    v77 = *(v73 - 1);
    v78 = *v73;
    v79 = v75 == v77 && v76 == v78;
    if (!v79 && (sub_100099264(v75, v76, v77, v78) & 1) == 0)
      goto LABEL_79;
    sub_10094F834();
    if (v43)
      goto LABEL_63;
  }
  __break(1u);
}

uint64_t sub_1000878AC()
{
  uint64_t *v0;

  return sub_1000BA294(v0);
}

void sub_1000878B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1000215BC(v2, a2);
}

uint64_t sub_1000878BC()
{
  return type metadata accessor for LocationComponentContainerViewModel(0);
}

uint64_t sub_1000878C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000878D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000878DC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1000878E4()
{
  uint64_t v0;
  double v1;
  double v2;

  return Double.nearestMultiple(of:roundingRule:)(v0, v1, v2);
}

uint64_t sub_1000878F4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_100087904()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_10029DF28();
}

double sub_100087910()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56)).n128_u64[0];
  return result;
}

uint64_t sub_100087918(char *a1)
{
  return sub_1002A1E60(*a1);
}

uint64_t sub_100087924()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100087930()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100087944()
{
  return type metadata accessor for Precipitation(0);
}

uint64_t sub_100087950(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100087964(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WeatherDescription(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000879A4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;

  if ((sub_100087A7C(a1, a2) & 1) == 0)
    goto LABEL_23;
  v4 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel(0);
  v5 = sub_1000BA7EC(v4[5]);
  v9 = v9 && v6 == v8;
  if ((v9 || (sub_100099264(v5, v6, v7, v8) & 1) != 0)
    && ((v10 = sub_1000BA7EC(v4[6]), v9) ? (v14 = v11 == v13) : (v14 = 0),
        (v14 || (sub_100099264(v10, v11, v12, v13) & 1) != 0)
     && ((v15 = sub_1000BA7EC(v4[7]), v9) ? (v19 = v16 == v18) : (v19 = 0),
         (v19 || (sub_100099264(v15, v16, v17, v18) & 1) != 0)
      && *(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8])
      && ((v20 = sub_1000BA7EC(v4[9]), v9) ? (v24 = v21 == v23) : (v24 = 0), !v24))))
  {
    _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, v22, v23, 0);
  }
  else
  {
LABEL_23:
    sub_100079F70();
  }
}

uint64_t sub_100087A7C(uint64_t a1, uint64_t a2)
{
  return sub_10068A5D4(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for PressureTrend, &qword_100BFC660, (uint64_t)&protocol conformance descriptor for PressureTrend);
}

uint64_t sub_100087A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7 || (sub_100099264(v4, v5, *(_QWORD *)a2, v6), result = sub_10007A150(), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(a1 + 16);
    v11 = *(_QWORD *)(a1 + 24);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (sub_100099264(v10, v11, v12, v13), result = sub_10007A150(), (v15 & 1) != 0))
    {
      v16 = *(_QWORD *)(a1 + 32);
      v17 = *(_QWORD *)(a1 + 40);
      v18 = *(_QWORD *)(a2 + 32);
      v19 = *(_QWORD *)(a2 + 40);
      v20 = v16 == v18 && v17 == v19;
      if (v20 || (sub_100099264(v16, v17, v18, v19), result = sub_10007A150(), (v21 & 1) != 0))
      {
        v22 = *(_QWORD *)(a1 + 48);
        v23 = *(_QWORD *)(a1 + 56);
        v24 = *(_QWORD *)(a2 + 48);
        v25 = *(_QWORD *)(a2 + 56);
        v26 = v22 == v24 && v23 == v25;
        if (v26 || (sub_100099264(v22, v23, v24, v25), result = sub_10007A150(), (v27 & 1) != 0))
        {
          v28 = *(_QWORD *)(a1 + 64);
          v29 = *(_QWORD *)(a1 + 72);
          v30 = *(_QWORD *)(a2 + 64);
          v31 = *(_QWORD *)(a2 + 72);
          v32 = v28 == v30 && v29 == v31;
          if (v32 || (sub_100099264(v28, v29, v30, v31), result = sub_10007A150(), (v33 & 1) != 0))
          {
            v34 = *(_QWORD *)(a1 + 80);
            v35 = *(_QWORD *)(a1 + 88);
            v36 = *(_QWORD *)(a2 + 80);
            v37 = *(_QWORD *)(a2 + 88);
            v38 = v34 == v36 && v35 == v37;
            if (v38 || (sub_100099264(v34, v35, v36, v37), result = sub_10007A150(), (v39 & 1) != 0))
            {
              v40 = *(_QWORD *)(a1 + 96);
              v41 = *(_QWORD *)(a1 + 104);
              v42 = *(_QWORD *)(a2 + 96);
              v43 = *(_QWORD *)(a2 + 104);
              v44 = v40 == v42 && v41 == v43;
              if (v44 || (sub_100099264(v40, v41, v42, v43), result = sub_10007A150(), (v45 & 1) != 0))
              {
                v46 = *(_QWORD *)(a1 + 112);
                v47 = *(_QWORD *)(a1 + 120);
                v48 = *(_QWORD *)(a2 + 112);
                v49 = *(_QWORD *)(a2 + 120);
                v50 = v46 == v48 && v47 == v49;
                if (v50 || (sub_100099264(v46, v47, v48, v49), result = sub_10007A150(), (v51 & 1) != 0))
                {
                  v52 = *(_QWORD *)(a1 + 128);
                  v53 = *(_QWORD *)(a1 + 136);
                  v54 = *(_QWORD *)(a2 + 128);
                  v55 = *(_QWORD *)(a2 + 136);
                  v56 = v52 == v54 && v53 == v55;
                  if (v56 || (sub_100099264(v52, v53, v54, v55), result = sub_10007A150(), (v57 & 1) != 0))
                  {
                    v58 = *(_QWORD *)(a1 + 144);
                    v59 = *(_QWORD *)(a1 + 152);
                    v60 = *(_QWORD *)(a2 + 144);
                    v61 = *(_QWORD *)(a2 + 152);
                    v62 = v58 == v60 && v59 == v61;
                    if (v62 || (sub_100099264(v58, v59, v60, v61), result = sub_10007A150(), (v63 & 1) != 0))
                    {
                      v64 = *(_QWORD *)(a1 + 160);
                      v65 = *(_QWORD *)(a1 + 168);
                      v66 = *(_QWORD *)(a2 + 160);
                      v67 = *(_QWORD *)(a2 + 168);
                      v68 = v64 == v66 && v65 == v67;
                      if (v68 || (sub_100099264(v64, v65, v66, v67), result = sub_10007A150(), (v69 & 1) != 0))
                      {
                        v70 = *(_QWORD *)(a1 + 176);
                        v71 = *(_QWORD *)(a1 + 184);
                        v72 = *(_QWORD *)(a2 + 176);
                        v73 = *(_QWORD *)(a2 + 184);
                        v74 = v70 == v72 && v71 == v73;
                        if (v74 || (sub_100099264(v70, v71, v72, v73), result = sub_10007A150(), (v75 & 1) != 0))
                        {
                          v76 = *(_QWORD *)(a1 + 192);
                          v77 = *(_QWORD *)(a1 + 200);
                          v78 = *(_QWORD *)(a2 + 192);
                          v79 = *(_QWORD *)(a2 + 200);
                          v80 = v76 == v78 && v77 == v79;
                          if (v80 || (sub_100099264(v76, v77, v78, v79), result = sub_10007A150(), (v81 & 1) != 0))
                          {
                            if (*(double *)(a1 + 208) == *(double *)(a2 + 208))
                            {
                              v82 = *(_QWORD *)(a1 + 216);
                              v83 = *(_QWORD *)(a1 + 224);
                              v84 = *(_QWORD *)(a2 + 216);
                              v85 = *(_QWORD *)(a2 + 224);
                              if (v82 == v84 && v83 == v85)
                                return 1;
                              else
                                return _stringCompareWithSmolCheck(_:_:expecting:)(v82, v83, v84, v85, 0);
                            }
                            else
                            {
                              return 0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100087C9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 != *a2 || v5 != v6)
  {
    sub_100099264(v4, v5, *a2, v6);
    result = sub_10007A150();
    if ((v9 & 1) == 0)
      return result;
  }
  v10 = a1[3];
  v11 = a2[3];
  if (v10)
  {
    if (v11)
    {
      v12 = a1[2];
      v13 = a2[2];
      if (v12 != v13 || v10 != v11)
      {
        sub_100099264(v12, v10, v13, v11);
        result = sub_10007A150();
        if ((v15 & 1) == 0)
          return result;
      }
      goto LABEL_17;
    }
    return 0;
  }
  if (v11)
    return 0;
LABEL_17:
  v16 = a1[4];
  v17 = a1[5];
  v18 = a2[4];
  v19 = a2[5];
  v20 = v16 == v18 && v17 == v19;
  if (v20 || (sub_100099264(v16, v17, v18, v19), result = sub_10007A150(), (v21 & 1) != 0))
  {
    v22 = a1[6];
    v23 = a1[7];
    v24 = a2[6];
    v25 = a2[7];
    v26 = v22 == v24 && v23 == v25;
    if (v26 || (sub_100099264(v22, v23, v24, v25), result = sub_10007A150(), (v27 & 1) != 0))
    {
      v28 = a1[8];
      v29 = a1[9];
      v30 = a2[8];
      v31 = a2[9];
      v32 = v28 == v30 && v29 == v31;
      if (v32 || (sub_100099264(v28, v29, v30, v31), result = sub_10007A150(), (v33 & 1) != 0))
      {
        v34 = a1[10];
        v35 = a1[11];
        v36 = a2[10];
        v37 = a2[11];
        v38 = v34 == v36 && v35 == v37;
        if (v38 || (sub_100099264(v34, v35, v36, v37), result = sub_10007A150(), (v39 & 1) != 0))
        {
          v40 = a1[13];
          v41 = a2[13];
          if (v40)
          {
            if (v41)
            {
              v42 = a1[12];
              v43 = a2[12];
              v44 = v42 == v43 && v40 == v41;
              if (v44 || (sub_100099264(v42, v40, v43, v41) & 1) != 0)
                return 1;
            }
          }
          else if (!v41)
          {
            return 1;
          }
          return 0;
        }
      }
    }
  }
  return result;
}

void sub_100087DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    goto LABEL_37;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    if (!v5)
      goto LABEL_11;
LABEL_37:
    sub_100079F70();
    return;
  }
  if (!v5)
    goto LABEL_37;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = v6 == v7 && v4 == v5;
  if (!v8 && (sub_100099264(v6, v4, v7, v5) & 1) == 0)
    goto LABEL_37;
LABEL_11:
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = v9 == v11 && v10 == v12;
  if (!v13 && (sub_100099264(v9, v10, v11, v12) & 1) == 0)
    goto LABEL_37;
  if (*(double *)(a1 + 40) != *(double *)(a2 + 40))
    goto LABEL_37;
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
    goto LABEL_37;
  v14 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  if ((sub_100087F34(a1 + v14[9], a2 + v14[9]) & 1) == 0)
    goto LABEL_37;
  v15 = sub_1000BA7EC(v14[10]);
  v19 = v8 && v16 == v18;
  if (!v19 && (sub_100099264(v15, v16, v17, v18) & 1) == 0)
    goto LABEL_37;
  v20 = sub_1000BA7EC(v14[11]);
  v24 = v8 && v21 == v23;
  if (!v24 && (sub_100099264(v20, v21, v22, v23) & 1) == 0)
    goto LABEL_37;
  v25 = sub_1000BA7EC(v14[12]);
  v29 = v8 && v26 == v28;
  if (!v29 && (sub_100099264(v25, v26, v27, v28) & 1) == 0
    || (static Date.== infix(_:_:)(a1 + v14[13], a2 + v14[13]) & 1) == 0
    || (sub_10054C578(v14[14]) & 1) == 0
    || *(unsigned __int8 *)(a1 + v14[15]) != *(unsigned __int8 *)(a2 + v14[15]))
  {
    goto LABEL_37;
  }
  sub_10009B4AC(*(_QWORD **)(a1 + v14[16]), *(_QWORD **)(a2 + v14[16]));
}

uint64_t sub_100087F34(uint64_t a1, uint64_t a2)
{
  return sub_10068A5D4(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Precipitation, &qword_100BCE780, (uint64_t)&protocol conformance descriptor for Precipitation);
}

BOOL sub_100087F50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (!v7 && (sub_100099264(v4, v5, *a2, v6) & 1) == 0)
    return 0;
  v8 = a1[3];
  v9 = a2[3];
  if (v8)
  {
    if (!v9)
      return 0;
    v10 = a1[2];
    v11 = a2[2];
    v12 = v10 == v11 && v8 == v9;
    if (!v12 && (sub_100099264(v10, v8, v11, v9) & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v13 = a1[4];
  v14 = a1[5];
  v15 = a2[4];
  v16 = a2[5];
  v17 = v13 == v15 && v14 == v16;
  if (v17 || (sub_100099264(v13, v14, v15, v16) & 1) != 0)
  {
    v18 = a1[6];
    v19 = a1[7];
    v20 = a2[6];
    v21 = a2[7];
    v22 = v18 == v20 && v19 == v21;
    if (v22 || (sub_100099264(v18, v19, v20, v21) & 1) != 0)
    {
      v23 = *(int *)(type metadata accessor for ListPreprocessedDataModel(0) + 32);
      return sub_1004AD4A8((uint64_t)a1 + v23, (uint64_t)a2 + v23);
    }
  }
  return 0;
}

uint64_t sub_100088020(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Settings.TappableModulesTipStore();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008805C(uint64_t a1, uint64_t a2)
{
  return sub_10068A5D4(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, &qword_100BFC668, (uint64_t)&protocol conformance descriptor for WeatherCondition);
}

void sub_100088078(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;

  v35 = a2;
  v36 = a3;
  v37 = a4;
  v38 = a5;
  v11 = sub_100098F50(a1, (uint64_t)&v35);
  v35 = a2;
  v36 = a3;
  v37 = a4;
  v38 = a5;
  v12 = type metadata accessor for PageContainer(255, (uint64_t)&v35);
  v13 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v12);
  v14 = sub_1000C4770((uint64_t)&unk_1009B83C4);
  v40 = &protocol witness table for EmptyView;
  v41 = v14;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v13);
  v16 = type metadata accessor for VStack(255, v13, WitnessTable);
  v17 = sub_1000C4770((uint64_t)&protocol conformance descriptor for VStack<A>);
  v35 = v16;
  v36 = a3;
  v37 = v17;
  v38 = a5;
  v18 = sub_1000C6740();
  v19 = sub_1000DAAB8((uint64_t)&protocol conformance descriptor for [A]);
  v35 = v11;
  v36 = a3;
  v37 = v18;
  v38 = v19;
  v39 = a5;
  v20 = type metadata accessor for ForEach(255, &v35);
  v34 = sub_1000C4770((uint64_t)&protocol conformance descriptor for IDView<A, B>);
  v21 = sub_1000DAAB8((uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  v23 = type metadata accessor for WireframeScrollInterestView(0, v20, v21, v22);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_10009883C();
  v27 = v25 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v34 - v29;
  v35 = a2;
  v36 = a3;
  v37 = a4;
  v38 = a5;
  v31 = type metadata accessor for AnimatableTabView(0, (uint64_t)&v35);
  sub_10008826C(v31, v27);
  v32 = sub_1000DAAB8((uint64_t)&unk_1009917A8);
  sub_1000B2074(v27, v23, v32);
  v33 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v33(v27, v23);
  sub_1000B1100((uint64_t)v30, v23, a6);
  v33((uint64_t)v30, v23);
  sub_100098640();
}

uint64_t sub_10008826C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;

  v48 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = (_QWORD *)__chkstk_darwin(a1);
  v7 = v5[3];
  v8 = v5[4];
  v9 = v5[5];
  v50 = v5[2];
  v6 = v50;
  v51 = v7;
  v52 = v8;
  v53 = v9;
  v10 = type metadata accessor for Page(255, (uint64_t)&v50);
  v11 = type metadata accessor for Array(255, v10);
  v47 = v6;
  v50 = v6;
  v51 = v7;
  v45 = v8;
  v52 = v8;
  v53 = v9;
  v12 = type metadata accessor for PageContainer(255, (uint64_t)&v50);
  v13 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v12);
  WitnessTable = swift_getWitnessTable(&unk_1009B83C4, v12);
  v55 = &protocol witness table for EmptyView;
  v56 = WitnessTable;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v13);
  v16 = type metadata accessor for VStack(255, v13, v15);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v16);
  v50 = v16;
  v51 = v7;
  v52 = v17;
  v53 = v9;
  v18 = type metadata accessor for IDView(255);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for [A], v11);
  v50 = v11;
  v51 = v7;
  v46 = v7;
  v52 = v18;
  v53 = v19;
  v43 = v9;
  v54 = v9;
  v20 = type metadata accessor for ForEach(255, &v50);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v18);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v20);
  v22 = type metadata accessor for WireframeScrollInterestView(0, v20, v41, v21);
  v42 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v25 = &v39[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v27 = &v39[-v26];
  if (qword_100BC1EF8 != -1)
    swift_once(&qword_100BC1EF8, sub_100131F04);
  v40 = byte_100CAE580;
  v28 = *(_QWORD *)(v44 + *(int *)(a1 + 64));
  (*(void (**)(_BYTE *))(v3 + 16))(&v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v29 = *(unsigned __int8 *)(v3 + 80);
  v30 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = v3;
  v32 = (v29 + 48) & ~v29;
  v33 = (char *)swift_allocObject(&unk_100B85100, v32 + v4, v29 | 7);
  v34 = v46;
  *((_QWORD *)v33 + 2) = v47;
  *((_QWORD *)v33 + 3) = v34;
  v35 = v43;
  *((_QWORD *)v33 + 4) = v45;
  *((_QWORD *)v33 + 5) = v35;
  (*(void (**)(char *, _BYTE *, uint64_t))(v31 + 32))(&v33[v32], v30, a1);
  swift_retain();
  sub_10001A004(6447476, 0xE300000000000000, v40, v28, (void (*)(__n128))sub_10061EC30, (uint64_t)v33, v20, v41, (uint64_t)v25);
  v36 = swift_getWitnessTable(&unk_1009917A8, v22);
  sub_1000B2074(v25, v22, v36);
  v37 = *(void (**)(_BYTE *, uint64_t))(v42 + 8);
  v37(v25, v22);
  sub_1000B1100((uint64_t)v27, v22, v48);
  return ((uint64_t (*)(_BYTE *, uint64_t))v37)(v27, v22);
}

uint64_t sub_1000885B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v3 = a1;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v3 &= 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v3 + 24));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (_QWORD *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v6);
  return swift_release(v6[1]);
}

uint64_t sub_10008862C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t WitnessTable;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;

  v54 = a4;
  v7 = type metadata accessor for WireframeScrollInterestView(0, a2, a3, a3);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v43 - v11;
  v47 = *(_QWORD *)(a2 - 8);
  v13 = v47;
  __chkstk_darwin(v10);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v15;
  v58 = a2;
  v59 = &type metadata for Bool;
  v60 = a3;
  v61 = &protocol witness table for Bool;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v58, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v52 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v49 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v55 = (char *)&v43 - v17;
  v51 = type metadata accessor for ModifiedContent(0, v18, &type metadata for _AppearanceActionModifier);
  v53 = *(_QWORD *)(v51 - 8);
  v19 = __chkstk_darwin(v51);
  v48 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v50 = (char *)&v43 - v21;
  v22 = *(int *)(v7 + 44);
  v46 = a1;
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + v22, a2);
  LOBYTE(v58) = ScrollEventState.isScrolling.getter(v23) & 1;
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v24 = v12;
  v45(v12, a1, v7);
  v25 = *(unsigned __int8 *)(v8 + 80);
  v26 = (v25 + 32) & ~v25;
  v43 = v26 + v9;
  v27 = v25 | 7;
  v28 = swift_allocObject(&unk_100B6AB28, v26 + v9, v25 | 7);
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = a3;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v30 = v24;
  v29(v28 + v26, v24, v7);
  v31 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  v32 = v44;
  View.onChange<A>(of:initial:_:)(&v58, v31 & 1, sub_1002BF66C, v28, a2, &type metadata for Bool, a3, &protocol witness table for Bool);
  swift_release(v28);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, a2);
  v45(v30, v46, v7);
  v33 = swift_allocObject(&unk_100B6AB50, v43, v27);
  *(_QWORD *)(v33 + 16) = a2;
  *(_QWORD *)(v33 + 24) = a3;
  v29(v33 + v26, v30, v7);
  v58 = a2;
  v59 = &type metadata for Bool;
  v60 = a3;
  v61 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v58, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v36 = v48;
  v35 = v49;
  v37 = v55;
  View.onDisappear(perform:)(sub_10012C5CC, v33, v49, OpaqueTypeConformance2);
  swift_release(v33);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v35);
  v56 = OpaqueTypeConformance2;
  v57 = &protocol witness table for _AppearanceActionModifier;
  v38 = v51;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v51);
  v40 = (uint64_t)v50;
  sub_1000B2074(v36, v38, WitnessTable);
  v41 = *(void (**)(char *, uint64_t))(v53 + 8);
  v41(v36, v38);
  sub_1000B1100(v40, v38, v54);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v40, v38);
}

uint64_t sub_1000889EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(unint64_t, unint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  v10 = (v8 + 32 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  v11 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + 7;
  v13 = (_QWORD *)((v12 + v9) & 0xFFFFFFFFFFFFFFF8);
  v14 = (uint64_t *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v14;
  *v13 = *v14;
  v16 = v14[1];
  v13[1] = v16;
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

uint64_t sub_100088AB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[24];
  _QWORD v69[4];

  v3 = v2;
  v65 = a2;
  v5 = a1[2];
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000986FC();
  v60 = v8;
  v10 = __chkstk_darwin(v9);
  v63 = (char *)&v57 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v57 - v13;
  v67 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v12);
  sub_1000986FC();
  v66 = v15;
  __chkstk_darwin(v16);
  v64 = (char *)&v57 - v17;
  v18 = v3[10];
  v19 = v3[11];
  v20 = *((unsigned __int8 *)v3 + 96);
  v21 = a1[3];
  v22 = a1[4];
  v69[0] = v5;
  v69[1] = v21;
  v69[2] = v5;
  v69[3] = v22;
  v23 = type metadata accessor for ModuleView.Cache(0, (uint64_t)v69);
  swift_getWitnessTable(&unk_1009A4694, v23);
  v58 = v19;
  v59 = v18;
  v24 = sub_1000BAE00(v18, v19, v20, v23);
  v25 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 112);
  swift_beginAccess(v25, v69, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v14, v25, v6);
  swift_release(v24);
  v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v5);
  v61 = v7;
  v62 = v6;
  if (v26 == 1)
  {
    v59 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
  else
  {
    v27 = v67;
    v28 = *(void (**)(uint64_t, char *, uint64_t))(v67 + 32);
    v28(v66, v14, v5);
    v29 = sub_1000BAE00(v59, v58, v20, v23);
    v30 = (_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 120));
    v31 = *v30;
    v32 = v30[1];
    swift_bridgeObjectRetain(*v30);
    swift_bridgeObjectRetain(v32);
    swift_release(v29);
    sub_10011CDF0(v32, v3[9]);
    LOBYTE(v29) = v33;
    swift_bridgeObjectRelease(v32);
    v34 = swift_bridgeObjectRelease(v31);
    if ((v29 & 1) != 0)
    {
      v35 = v64;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v28)(v64, v66, v5, v34);
      v36 = v27;
LABEL_8:
      ((void (*)(char *))v3[1])(v35);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v5);
    }
    v59 = v23;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v66, v5);
  }
  v37 = v3[6];
  v38 = v3[7];
  sub_1000DB418(v3 + 3, v37);
  v39 = *v3;
  v40 = v3[8];
  v41 = v3[9];
  v42 = swift_allocObject(&unk_100B76FD8, 32, 7);
  *(_QWORD *)(v42 + 16) = v40;
  *(_QWORD *)(v42 + 24) = v41;
  swift_bridgeObjectRetain(v40);
  v43 = swift_bridgeObjectRetain(v41);
  v44 = (uint64_t)v63;
  dispatch thunk of ResolverType.resolve<A>(_:with:)(v39, sub_10014D364, v42, v5, v37, v38, v43);
  v45 = v44;
  swift_release(v42);
  result = _s7Weather24LocationCompositionStateOwet_0(v44, 1, v5);
  if ((_DWORD)result != 1)
  {
    v36 = v67;
    v35 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v64, v45, v5);
    v47 = v59;
    v48 = sub_1000BAE00(v3[10], v3[11], *((unsigned __int8 *)v3 + 96), v59);
    v49 = v60;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v60, v35, v5);
    _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v5);
    v50 = v48 + *(_QWORD *)(*(_QWORD *)v48 + 112);
    swift_beginAccess(v50, v68, 33, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 40))(v50, v49, v62);
    swift_endAccess(v68);
    swift_release(v48);
    v51 = sub_1000BAE00(v3[10], v3[11], *((unsigned __int8 *)v3 + 96), v47);
    v52 = v3[8];
    v53 = v3[9];
    v54 = (uint64_t *)(v51 + *(_QWORD *)(*(_QWORD *)v51 + 120));
    v55 = *v54;
    v56 = v54[1];
    *v54 = v52;
    v54[1] = v53;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v53);
    swift_release(v51);
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v55);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100088ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v6 - 8);
  v9 = swift_retain();
  v8(a1 + 24, v5, v7, v9);
  v10 = *(_QWORD *)(v2 + 64);
  v11 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  v12 = *(_QWORD *)(v2 + 80);
  v13 = *(_QWORD *)(v2 + 88);
  LOBYTE(v2) = *(_BYTE *)(v2 + 96);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  sub_100037094(v12, v13);
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_BYTE *)(a1 + 96) = v2;
  return a1;
}

uint64_t sub_100088F7C(uint64_t a1)
{
  void (*v1)(__n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(void (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return sub_1000BB22C(v2);
}

void sub_100088FA4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 16) + 16))(v0 + 24);
  sub_10004A298();
}

uint64_t sub_100088FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, a3);
}

uint64_t sub_100089000@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_100089020()
{
  uint64_t v0;

  return swift_release(v0);
}

double sub_100089034()
{
  return 0.0;
}

uint64_t sub_100089084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_10008908C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_100089094()
{
  return type metadata accessor for WeatherDescription(0);
}

uint64_t sub_10008909C()
{
  return 0;
}

uint64_t sub_1000890B8()
{
  uint64_t v0;

  return v0;
}

void sub_1000890C4(uint64_t a1)
{
  sub_100316FC4(a1);
}

void sub_1000890D0(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  char v3;
  char v4;
  char v5;

  *(_BYTE *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 56) = a2;
  *(__n128 *)(a1 + 72) = a3;
  *(_BYTE *)(a1 + 88) = v5;
}

uint64_t sub_1000890E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000890F4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_100089108()
{
  return 0;
}

void sub_100089124()
{
  uint64_t v0;

  sub_100492FA8(v0);
}

_QWORD *sub_100089130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = a1;
  return sub_10005F164((_QWORD *)(v2 - 120));
}

uint64_t sub_10008915C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 216))(a1, a2, v2);
}

uint64_t sub_100089168@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_100089170()
{
  uint64_t v0;
  uint64_t v1;

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((_QWORD *)(v1 + *(int *)(v0 + 36)));
  return type metadata accessor for DisplayMetrics(0);
}

uint64_t sub_100089190()
{
  return 0x72656874616577;
}

uint64_t sub_1000891A8()
{
  return type metadata accessor for LocationContentView(0);
}

uint64_t sub_1000891B0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 32) = a2;
  *(_QWORD *)(result + 40) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_1000891C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000CE1C8(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t sub_1000891C8()
{
  _QWORD *v0;

  return swift_release(*v0);
}

uint64_t sub_1000891D0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_1000891E4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_100089200@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_100089214()
{
  return type metadata accessor for ApparentPrecipitationIntensity(0);
}

uint64_t sub_100089220()
{
  uint64_t v0;

  return v0;
}

void sub_100089230(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100488174(v1, a1);
}

uint64_t sub_100089238()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 8));
}

uint64_t sub_100089240()
{
  uint64_t v0;

  return dispatch thunk of CustomStringConvertible.description.getter(v0);
}

uint64_t sub_100089248()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1000BA294(&qword_100C18678) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

double sub_10008928C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = (uint64_t)(a1 + 1);
  v2 = *a1;
  v3 = (char *)a1 + *(int *)(sub_1000BA294(&qword_100C18678) + 64);
  return sub_1000896A8(v2, v1, v3);
}

void sub_1000892D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;

  v4 = v1;
  v6 = sub_1000BA294(&qword_100C18678);
  sub_10009D98C();
  __chkstk_darwin(v7);
  sub_100079FBC();
  v8 = sub_100098778();
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10009E540();
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock + 24);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock + 32);
  sub_1000DB418((_QWORD *)(v1 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock), v10);
  dispatch thunk of Clock.time.getter(v10, v11);
  v12 = sub_1000DB418((_QWORD *)(v4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_queue), *(_QWORD *)(v4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_queue + 24));
  v13 = (char *)v2 + *(int *)(v6 + 64);
  *v2 = v4;
  sub_100037768(a1, (uint64_t)(v2 + 1), &qword_100BC43C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v3, v8);
  v14 = *v12;
  swift_retain();
  sub_10008940C((uint64_t)v2, (uint64_t)sub_10008928C, 0, v14);
  sub_100021A14((uint64_t)v2, &qword_100C18678);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v8);
  sub_100098640();
}

double sub_10008940C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v33 = a4;
  v29 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000BA294(&qword_100C18678);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - v17;
  sub_100037768(a1, (uint64_t)&v29 - v17, &qword_100C18678);
  sub_100037768((uint64_t)v18, (uint64_t)v15, &qword_100C18678);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(&unk_100B9E968, v20 + v14, v19 | 7);
  *(_QWORD *)(v21 + 16) = v29;
  *(_QWORD *)(v21 + 24) = a3;
  sub_1000787D4((uint64_t)v15, v21 + v20, &qword_100C18678);
  aBlock[4] = sub_100089248;
  v36 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100088F7C;
  aBlock[3] = &unk_100B9E980;
  v22 = _Block_copy(aBlock);
  v23 = swift_retain();
  static DispatchQoS.unspecified.getter(v23);
  v34 = _swiftEmptyArrayStorage;
  sub_10000F1C8((unint64_t *)&qword_100BFFA20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v25 = v24;
  v26 = sub_1000BA294(&qword_100BD4F10);
  sub_10003D2DC((unint64_t *)&qword_100BFFA30, &qword_100BD4F10);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v6, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  sub_100021A14((uint64_t)v18, &qword_100C18678);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

double sub_1000896A8(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = type metadata accessor for MainAction(0);
  *(_QWORD *)&result = __chkstk_darwin(v5).n128_u64[0];
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + 40));
    do
    {
      sub_100080C0C(v12, (uint64_t)v9, type metadata accessor for MainAction);
      sub_100089794((uint64_t)v9, *(void (**)(_BYTE *, _BYTE *, uint64_t))(a2 + 64), a3);
      sub_1000215BC((uint64_t)v9, type metadata accessor for MainAction);
      v12 += v13;
      --v11;
    }
    while (v11);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_100089794(uint64_t a1, void (*a2)(_BYTE *, _BYTE *, uint64_t), _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;

  v6 = type metadata accessor for WeatherDataAction(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ViewAction(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModalViewAction(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EnvironmentAction(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MainAction(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080C0C(a1, (uint64_t)v20, v21);
  switch(swift_getEnumCaseMultiPayload(v20))
  {
    case 0u:
      sub_10014F3A0(*v20, (uint64_t)a2, a3);
      return;
    case 2u:
      v24 = type metadata accessor for EnvironmentAction;
      sub_10007802C((uint64_t)v20, (uint64_t)v17, type metadata accessor for EnvironmentAction);
      sub_10014F4BC((uint64_t)v17, (uint64_t)a2, a3);
      v23 = (uint64_t)v17;
      goto LABEL_7;
    case 6u:
      v24 = type metadata accessor for ViewAction;
      sub_10007802C((uint64_t)v20, (uint64_t)v11, type metadata accessor for ViewAction);
      sub_100968BC0((uint64_t)v11, (uint64_t)a2, a3);
      v23 = (uint64_t)v11;
      goto LABEL_7;
    case 7u:
      v24 = type metadata accessor for ModalViewAction;
      sub_10007802C((uint64_t)v20, (uint64_t)v14, type metadata accessor for ModalViewAction);
      sub_1009686D8((uint64_t)v14, (uint64_t)a2, a3);
      v23 = (uint64_t)v14;
LABEL_7:
      v22 = v24;
      break;
    case 9u:
      sub_10007802C((uint64_t)v20, (uint64_t)v8, type metadata accessor for WeatherDataAction);
      sub_100089A14((uint64_t)v8, a2, a3);
      v23 = (uint64_t)v8;
      v22 = type metadata accessor for WeatherDataAction;
      break;
    default:
      v22 = type metadata accessor for MainAction;
      v23 = (uint64_t)v20;
      break;
  }
  sub_1000215BC(v23, v22);
}

void sub_100089A14(uint64_t a1, void (*a2)(_BYTE *, _BYTE *, uint64_t), _BYTE *a3)
{
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t (*v48)(_QWORD);
  int EnumCaseMultiPayload;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  unint64_t v57;
  int *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (**v89)(_BYTE *, uint64_t);
  _BYTE *v90;
  uint64_t v91;
  double v92;
  char v93;
  double v94;
  double v95;
  void (*v96)(_BYTE *, uint64_t);
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  int v102;
  _BOOL4 v103;
  void (**v104)(_BYTE *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  void (*v108)(_BYTE *, uint64_t);
  _BYTE *v109;
  uint64_t v110;
  double v111;
  char v112;
  double v113;
  double v114;
  void (*v115)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(_BYTE *, uint64_t);
  void (*v124)(_QWORD, _QWORD, _QWORD);
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  void (*v128)(_BYTE *, uint64_t);
  _BYTE *v129;
  void (*v130)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  _BYTE *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(_BYTE *, uint64_t);
  _BYTE *v146;
  void (*v147)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v148;
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  _BYTE *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE v158[12];
  int v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  _BYTE *v173;
  _BYTE *v174;
  _BYTE *v175;
  _BYTE *v176;
  _BYTE *v177;
  void (*v178)(_QWORD, _QWORD);
  uint64_t v179;
  uint64_t v180;
  void (*v181)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v182;
  uint64_t v183[3];
  _BYTE v184[32];

  v181 = a2;
  v175 = a3;
  v164 = type metadata accessor for VisibleLocationFailedLoadingEvent(0);
  v163 = *(_QWORD *)(v164 - 8);
  v4 = __chkstk_darwin(v164);
  v162 = &v158[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v168 = type metadata accessor for VisibleLocationFinishedLoadingEvent.EndReason(0, v4);
  v167 = *(_QWORD *)(v168 - 8);
  v6 = __chkstk_darwin(v168);
  v169 = &v158[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for VisibleLocationFinishedLoadingEvent(0, v6);
  v170 = *(_QWORD *)(v8 - 8);
  v171 = v8;
  __chkstk_darwin(v8);
  v173 = &v158[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Date(0);
  v178 = *(void (**)(_QWORD, _QWORD))(v10 - 8);
  v179 = v10;
  __chkstk_darwin(v10);
  v161 = &v158[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v172 = &v158[-v13];
  __chkstk_darwin(v14);
  v174 = &v158[-v15];
  __chkstk_darwin(v16);
  v177 = &v158[-v17];
  __chkstk_darwin(v18);
  v166 = &v158[-v19];
  __chkstk_darwin(v20);
  v165 = &v158[-v21];
  __chkstk_darwin(v22);
  v24 = &v158[-v23];
  __chkstk_darwin(v25);
  v27 = &v158[-v26];
  __chkstk_darwin(v28);
  v30 = &v158[-v29];
  __chkstk_darwin(v31);
  v33 = &v158[-v32];
  v34 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  __chkstk_darwin(v34);
  v36 = &v158[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v37);
  v39 = &v158[-v38];
  __chkstk_darwin(v40);
  v176 = &v158[-v41];
  __chkstk_darwin(v42);
  v44 = &v158[-v43];
  v45 = type metadata accessor for WeatherDataAction(0);
  __chkstk_darwin(v45);
  v47 = (uint64_t *)&v158[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100080C0C(a1, (uint64_t)v47, v48);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v47);
  if (EnumCaseMultiPayload == 4)
  {
    v172 = v30;
    v174 = v33;
    v56 = *v47;
    v57 = v47[1];
    v58 = (int *)sub_1000BA294(&qword_100BCB630);
    v59 = (char *)v47 + v58[12];
    v177 = (char *)v47 + v58[16];
    v60 = (uint64_t)v47 + v58[20];
    v61 = sub_10008AA98((uint64_t)v181);
    if (!v62)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      sub_1000215BC(v60, type metadata accessor for NewsDataModel);
      sub_1000215BC((uint64_t)v177, type metadata accessor for PreprocessedWeatherData);
      v65 = type metadata accessor for WeatherData;
      v66 = (uint64_t)v59;
      goto LABEL_55;
    }
    if (v56 == v61 && v62 == v57)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v57, v61, v62, 0);
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0)
        goto LABEL_17;
    }
    v164 = (uint64_t)v59;
    v84 = v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
    swift_beginAccess(v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime, v184, 0, 0);
    sub_100037768(v84, (uint64_t)v39, (uint64_t *)&unk_100BD35A0);
    v85 = v179;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v179) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100021A14((uint64_t)v39, (uint64_t *)&unk_100BD35A0);
    }
    else
    {
      v109 = v174;
      (*((void (**)(_BYTE *, _BYTE *, uint64_t))v178 + 4))(v174, v39, v85);
      *(double *)&v110 = COERCE_DOUBLE(sub_10002DD88(v56, v57, (uint64_t)v181));
      if ((v112 & 1) == 0)
      {
        v113 = *(double *)&v110;
        v114 = v111;
        v163 = v60;
        v115 = (void (*)(_BYTE *, _BYTE *, uint64_t))*((_QWORD *)v178 + 2);
        v116 = v172;
        v115(v172, v175, v85);
        v115(v27, v109, v85);
        v181 = v115;
        v115(v24, v116, v85);
        swift_bridgeObjectRetain(v57);
        v118 = Logger.logObject.getter(v117);
        v119 = static os_log_type_t.default.getter();
        v120 = v119;
        if (os_log_type_enabled(v118, v119))
        {
          v121 = swift_slowAlloc(32, -1);
          v122 = swift_slowAlloc(32, -1);
          v175 = (_BYTE *)v122;
          *(_DWORD *)v121 = 141558531;
          v182 = 1752392040;
          v183[0] = v122;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
          *(_WORD *)(v121 + 12) = 2081;
          LODWORD(v162) = v120;
          swift_bridgeObjectRetain(v57);
          v182 = sub_1000CE1C8(v56, v57, v183);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
          swift_bridgeObjectRelease_n(v57, 3);
          *(_WORD *)(v121 + 22) = 2048;
          v182 = Date.distance(to:)(v24);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
          v123 = (void (*)(_BYTE *, uint64_t))*((_QWORD *)v178 + 1);
          v123(v27, v85);
          v123(v24, v85);
          _os_log_impl((void *)&_mh_execute_header, v118, (os_log_type_t)v162, "%{private,mask.hash}s finished loading while displayed. User witnessed %fs of loading.", (uint8_t *)v121, 0x20u);
          v124 = (void (*)(_QWORD, _QWORD, _QWORD))v175;
          swift_arrayDestroy(v175, 1);
          swift_slowDealloc(v124, -1, -1);
          v125 = v121;
          v126 = v174;
          swift_slowDealloc(v125, -1, -1);

        }
        else
        {
          v126 = v109;
          swift_bridgeObjectRelease_n(v57, 2);

          v123 = (void (*)(_BYTE *, uint64_t))*((_QWORD *)v178 + 1);
          v123(v27, v85);
          v123(v24, v85);
        }
        v146 = v165;
        v147 = v181;
        v181(v165, v126, v85);
        v148 = v166;
        v149 = v172;
        v147(v166, v172, v85);
        v150 = v169;
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v167 + 104))(v169, enum case for VisibleLocationFinishedLoadingEvent.EndReason.loadCompleted(_:), v168);
        v151 = v180;
        v152 = v126;
        v153 = v173;
        VisibleLocationFinishedLoadingEvent.init(location:startTime:endTime:endReason:loadingBeganDuringObservation:)(v146, v148, v150, *(unsigned __int8 *)(v180+ OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_loadBeganDuringObservation), v113, v114);
        v154 = v176;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 1, 1, v85);
        swift_beginAccess(v84, v183, 33, 0);
        sub_10015BADC((uint64_t)v154, v84);
        swift_endAccess(v183);
        v155 = (_QWORD *)(v151 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend);
        v156 = *(_QWORD *)(v151 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend + 24);
        v157 = v155[4];
        sub_1000DB418(v155, v156);
        dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)(v153, v156, v157);
        (*(void (**)(_BYTE *, uint64_t))(v170 + 8))(v153, v171);
        v123(v149, v85);
        v123(v152, v85);
        v127 = v163;
        goto LABEL_54;
      }
      (*((void (**)(_BYTE *, uint64_t))v178 + 1))(v109, v85);
      swift_bridgeObjectRelease();
    }
    v127 = v60;
LABEL_54:
    sub_1000215BC(v127, type metadata accessor for NewsDataModel);
    sub_1000215BC((uint64_t)v177, type metadata accessor for PreprocessedWeatherData);
    v65 = type metadata accessor for WeatherData;
    v66 = v164;
    goto LABEL_55;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (!EnumCaseMultiPayload)
    {
      v51 = *v47;
      v50 = v47[1];
      v52 = sub_10008AA98((uint64_t)v181);
      if (v53)
      {
        if (v51 == v52 && v53 == v50)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v50, v52, v53, 0);
          swift_bridgeObjectRelease();
          if ((v55 & 1) == 0)
            goto LABEL_45;
        }
        v75 = v180;
        v76 = v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
        swift_beginAccess(v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime, v184, 0, 0);
        sub_100037768(v76, (uint64_t)v44, (uint64_t *)&unk_100BD35A0);
        v77 = v179;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v179) == 1)
        {
          sub_100021A14((uint64_t)v44, (uint64_t *)&unk_100BD35A0);
          v78 = v176;
          (*((void (**)(_BYTE *, _BYTE *, uint64_t))v178 + 2))(v176, v175, v77);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v77);
          swift_beginAccess(v76, v183, 33, 0);
          sub_10015BADC((uint64_t)v78, v76);
          swift_endAccess(v183);
          *(_BYTE *)(v75
                   + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_loadBeganDuringObservation) = 0;
          swift_bridgeObjectRetain(v50);
          v80 = Logger.logObject.getter(v79);
          v81 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v80, v81))
          {
            v82 = swift_slowAlloc(22, -1);
            v83 = swift_slowAlloc(32, -1);
            *(_DWORD *)v82 = 141558275;
            v182 = 1752392040;
            v183[0] = v83;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
            *(_WORD *)(v82 + 12) = 2081;
            swift_bridgeObjectRetain(v50);
            v182 = sub_1000CE1C8(v51, v50, v183);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
            swift_bridgeObjectRelease_n(v50, 3);
            _os_log_impl((void *)&_mh_execute_header, v80, v81, "%{private,mask.hash}s started loading while displayed.", (uint8_t *)v82, 0x16u);
            swift_arrayDestroy(v83, 1);
            swift_slowDealloc(v83, -1, -1);
            swift_slowDealloc(v82, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v50, 2);
          }

          return;
        }
        swift_bridgeObjectRelease();
        v88 = (uint64_t)v44;
LABEL_40:
        sub_100021A14(v88, (uint64_t *)&unk_100BD35A0);
        return;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
    v65 = type metadata accessor for WeatherDataAction;
    v66 = (uint64_t)v47;
LABEL_55:
    sub_1000215BC(v66, v65);
    return;
  }
  v68 = *v47;
  v67 = v47[1];
  v70 = (void (*)(_BYTE *, _BYTE *, uint64_t))v47[2];
  v69 = v47[3];
  v71 = sub_10008AA98((uint64_t)v181);
  if (!v72)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if (v68 == v71 && v72 == v67)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v74 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v67, v71, v72, 0);
    swift_bridgeObjectRelease();
    if ((v74 & 1) == 0)
      goto LABEL_24;
  }
  v86 = v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
  swift_beginAccess(v180 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime, v184, 0, 0);
  sub_100037768(v86, (uint64_t)v36, (uint64_t *)&unk_100BD35A0);
  v87 = v179;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v179) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88 = (uint64_t)v36;
    goto LABEL_40;
  }
  v90 = v177;
  v89 = (void (**)(_BYTE *, uint64_t))v178;
  (*((void (**)(_BYTE *, _BYTE *, uint64_t))v178 + 4))(v177, v36, v87);
  *(double *)&v91 = COERCE_DOUBLE(sub_10002DD88(v68, v67, (uint64_t)v181));
  if ((v93 & 1) != 0)
  {
    v89[1](v90, v87);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v181 = v70;
  v94 = *(double *)&v91;
  v95 = v92;
  v96 = v89[2];
  v97 = v174;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v96)(v174, v175, v87);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v96)(v172, v90, v87);
  v98 = v161;
  v175 = v96;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v96)(v161, v97, v87);
  swift_bridgeObjectRetain_n(v69, 2);
  swift_bridgeObjectRetain(v67);
  v100 = Logger.logObject.getter(v99);
  v101 = static os_log_type_t.default.getter();
  v102 = v101;
  v103 = os_log_type_enabled(v100, v101);
  v104 = v89;
  v160 = v86;
  if (v103)
  {
    v105 = swift_slowAlloc(42, -1);
    v106 = swift_slowAlloc(64, -1);
    *(_DWORD *)v105 = 141558787;
    v182 = 1752392040;
    v183[0] = v106;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
    *(_WORD *)(v105 + 12) = 2081;
    v159 = v102;
    swift_bridgeObjectRetain(v67);
    v182 = sub_1000CE1C8(v68, v67, v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
    swift_bridgeObjectRelease_n(v67, 3);
    *(_WORD *)(v105 + 22) = 2048;
    v107 = v172;
    v182 = Date.distance(to:)(v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
    v108 = v104[1];
    v108(v107, v179);
    v178 = (void (*)(_QWORD, _QWORD))v108;
    v108(v98, v179);
    *(_WORD *)(v105 + 32) = 2080;
    swift_bridgeObjectRetain(v69);
    v182 = sub_1000CE1C8((uint64_t)v181, v69, v183);
    v87 = v179;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, v183);
    swift_bridgeObjectRelease_n(v69, 3);
    _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v159, "%{private,mask.hash}s failed loading while displayed. User witnessed %fs of loading. Error=%s", (uint8_t *)v105, 0x2Au);
    swift_arrayDestroy(v106, 2);
    swift_slowDealloc(v106, -1, -1);
    swift_slowDealloc(v105, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(v67, 2);

    v128 = v89[1];
    v128(v172, v87);
    v178 = (void (*)(_QWORD, _QWORD))v128;
    v128(v98, v87);
    swift_bridgeObjectRelease_n(v69, 2);
  }
  v129 = v165;
  v130 = (void (*)(_BYTE *, _BYTE *, uint64_t))v175;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v175)(v165, v177, v87);
  v131 = v166;
  v130(v166, v174, v87);
  v132 = v169;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v167 + 104))(v169, enum case for VisibleLocationFinishedLoadingEvent.EndReason.loadFailed(_:), v168);
  v133 = v180;
  v134 = v173;
  VisibleLocationFinishedLoadingEvent.init(location:startTime:endTime:endReason:loadingBeganDuringObservation:)(v129, v131, v132, *(unsigned __int8 *)(v180+ OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_loadBeganDuringObservation), v94, v95);
  v135 = (_QWORD *)(v133 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend);
  v136 = v87;
  v137 = v135[3];
  v138 = v135[4];
  sub_1000DB418(v135, v137);
  dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)(v134, v137, v138);
  v130(v129, v177, v136);
  v139 = v174;
  v130(v131, v174, v136);
  v140 = v162;
  VisibleLocationFailedLoadingEvent.init(location:startTime:endTime:errorDescription:)(v129, v131, v181, v69, v94, v95);
  v141 = v176;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 1, 1, v136);
  v142 = v160;
  swift_beginAccess(v160, v183, 33, 0);
  sub_10015BADC((uint64_t)v141, v142);
  swift_endAccess(v183);
  v143 = v135[3];
  v144 = v135[4];
  sub_1000DB418(v135, v143);
  dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)(v140, v143, v144);
  (*(void (**)(_BYTE *, uint64_t))(v163 + 8))(v140, v164);
  (*(void (**)(_BYTE *, uint64_t))(v170 + 8))(v173, v171);
  v145 = (void (*)(_BYTE *, uint64_t))v178;
  v178(v139, v136);
  v145(v177, v136);
}

uint64_t sub_10008AA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t active;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  v2 = sub_1000BA294(&qword_100BC5F40);
  __chkstk_darwin(v2);
  v49 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v50 = (char *)&v48 - v5;
  v53 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v53);
  v51 = (uint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v52);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1000BA294(&qword_100BC5F58);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v48 - v19;
  v21 = sub_1000BA294(&qword_100BC5F48);
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PreviewLocation(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008B054(a1, (uint64_t)v23);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24) == 1)
  {
    v27 = (int *)v52;
    sub_100021A14((uint64_t)v23, &qword_100BC5F48);
    sub_100080C0C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v14, type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload(v14) == 4)
    {
      sub_1000787D4((uint64_t)v14, (uint64_t)v20, &qword_100BC5F58);
      sub_100037768((uint64_t)v20, (uint64_t)v17, &qword_100BC5F58);
      v28 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v28) != 1)
      {
        sub_10007802C((uint64_t)v17, (uint64_t)v11, type metadata accessor for LocationPreviewViewState);
        sub_10062F880();
        v30 = v38;
        sub_1000215BC((uint64_t)v11, type metadata accessor for LocationPreviewViewState);
        sub_100021A14((uint64_t)v20, &qword_100BC5F58);
        return v30;
      }
      sub_100021A14((uint64_t)v20, &qword_100BC5F58);
      sub_100021A14((uint64_t)v17, &qword_100BC5F58);
    }
    else
    {
      sub_1000215BC((uint64_t)v14, type metadata accessor for ModalViewState);
    }
    v33 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    v34 = v27[10];
    v35 = (uint64_t *)(v33 + v34 + *(int *)(type metadata accessor for WeatherMapPresentationState(0) + 28));
    if (v35[1])
    {
      v30 = *v35;
      swift_bridgeObjectRetain(v35[1]);
      return v30;
    }
    v36 = (uint64_t)v8;
    sub_100080C0C(v33, (uint64_t)v8, type metadata accessor for ViewState);
    v37 = v51;
    sub_100080C0C((uint64_t)&v8[v27[5]], (uint64_t)v51, type metadata accessor for ViewState.SecondaryViewState);
    if (swift_getEnumCaseMultiPayload(v37) == 1)
    {
      sub_1000215BC((uint64_t)v37, type metadata accessor for ViewState.SecondaryViewState);
    }
    else
    {
      v39 = *v37;
      if (*(_QWORD *)&v8[v27[9] + 8] != 1
        || (v40 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
            objc_msgSend(v40, "userInterfaceIdiom"),
            v40,
            v36 = (uint64_t)v8,
            (v8[v27[7]] & 1) != 0))
      {
LABEL_17:
        v41 = (uint64_t)v49;
        v42 = (uint64_t)v50;
        sub_1000215BC(v36, type metadata accessor for ViewState);
        if (v39)
        {
          sub_100080C0C(v39 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v42, type metadata accessor for LocationViewerActiveLocationState);
          active = type metadata accessor for LocationViewerActiveLocationState(0);
          v44 = v42;
          v45 = 0;
        }
        else
        {
          active = type metadata accessor for LocationViewerActiveLocationState(0);
          v44 = v42;
          v45 = 1;
        }
        _s7Weather24LocationCompositionStateOwst_0(v44, v45, 1, active);
        sub_100037768(v42, v41, &qword_100BC5F40);
        type metadata accessor for LocationViewerActiveLocationState(0);
        if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, active) == 1)
        {
          sub_100021A14(v42, &qword_100BC5F40);
          swift_release(v39);
          sub_100021A14(v41, &qword_100BC5F40);
          return 0;
        }
        sub_10008B21C();
        v30 = v47;
        swift_release(v39);
        sub_100021A14(v42, &qword_100BC5F40);
        v32 = type metadata accessor for LocationViewerActiveLocationState;
        v31 = v41;
        goto LABEL_6;
      }
      swift_release(v39);
    }
    v39 = 0;
    goto LABEL_17;
  }
  sub_10007802C((uint64_t)v23, (uint64_t)v26, type metadata accessor for PreviewLocation);
  sub_10062F880();
  v30 = v29;
  v31 = (uint64_t)v26;
  v32 = type metadata accessor for PreviewLocation;
LABEL_6:
  sub_1000215BC(v31, v32);
  return v30;
}

void sub_10008B054(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1000BD65C();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  sub_1000DB174();
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - v10;
  type metadata accessor for LocationPreviewViewState(0);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100098728();
  v15 = v14 - v13;
  sub_100095B78(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v11, type metadata accessor for ModalViewState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11);
  if (EnumCaseMultiPayload == 4)
  {
    sub_100095B78((uint64_t)v11, (uint64_t)v7, type metadata accessor for ModalViewState);
    v17 = type metadata accessor for ModalViewState.MapViewModal(0);
    sub_100088FC8((uint64_t)v7, 1, v17);
    if (!v18)
      goto LABEL_8;
    sub_100021A14((uint64_t)v7, &qword_100BC5F58);
LABEL_7:
    v19 = type metadata accessor for PreviewLocation(0);
    v20 = sub_1000C132C(v19);
    sub_10009BC18(v20, type metadata accessor for ModalViewState);
    return;
  }
  if (EnumCaseMultiPayload)
    goto LABEL_7;
  sub_100095B78((uint64_t)v11, v2, type metadata accessor for ModalViewState);
  v7 = (char *)v2;
LABEL_8:
  sub_10007C77C((uint64_t)v7, v15, type metadata accessor for LocationPreviewViewState);
  sub_10009BC18(v21, type metadata accessor for ModalViewState);
  sub_10009D8F8(v15, v22, type metadata accessor for PreviewLocation);
  sub_1000215BC(v15, type metadata accessor for LocationPreviewViewState);
  v23 = type metadata accessor for PreviewLocation(0);
  _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v23);
}

void sub_10008B21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_100098AA0();
  sub_100098CE0();
  __chkstk_darwin(v2);
  sub_1000BCED8();
  type metadata accessor for LocationViewerActiveLocationState(0);
  sub_10009D98C();
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F0D1C(v0, (uint64_t)v5);
  v6 = sub_1000B489C((uint64_t)v5);
  if (v7)
  {
    static Location.currentLocationID.getter(v6);
  }
  else
  {
    v8 = sub_1000992E4(v0, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
    Location.Identifier.id.getter(v8);
    sub_100098820(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_10004A2A0();
}

uint64_t sub_10008B2E0(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 64;
  if ((a1 & 1) == 0)
    v2 = 72;
  return swift_retain(*(_QWORD *)(v1 + v2));
}

void sub_10008B2F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_1000992C4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_1000BAD84();
  sub_1000FD990();
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_10008B398(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_BYTE *)(v0 + v3), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8), *(_QWORD *)(v0 + v5 + 16), *(_QWORD *)(v0 + v5 + 24));
}

void sub_10008B398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t Strong;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  __n128 v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char v105[24];
  char v106[24];

  v98 = a7;
  v99 = a8;
  v93 = a5;
  v100 = a2;
  v17 = type metadata accessor for Location(0);
  v96 = *(_QWORD *)(v17 - 8);
  v97 = v17;
  __chkstk_darwin(v17);
  v94 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v18;
  v19 = type metadata accessor for TimeZone(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v104 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for OSSignpostID(0);
  v102 = *(_QWORD *)(v25 - 8);
  v103 = v25;
  v26 = *(_QWORD *)(v102 + 64);
  v27 = __chkstk_darwin(v25);
  v101 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v78 - v28;
  v30 = a1 + 16;
  swift_beginAccess(v30, v106, 0, 0);
  Strong = swift_weakLoadStrong(v30);
  if (Strong)
  {
    v92 = a13;
    v91 = a12;
    v90 = a11;
    LODWORD(v81) = a4 & 1;
    v85 = a10;
    v89 = a9;
    v83 = v26;
    v32 = Strong;
    v33 = Location.coordinate.getter(Strong);
    Location.coordinate.getter(v34);
    v88 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v33, v35);
    v36 = *(void **)(v32 + 408);
    v82 = v32;
    v37 = v36;
    v79 = updated;
    v38 = v29;
    v39 = OSSignpostID.init(log:)();
    v40 = static os_signpost_type_t.begin.getter(v39);
    v86 = a6;
    v41 = v40;
    v42 = sub_1000BA294(&qword_100BC3C38);
    v43 = swift_allocObject(v42, 72, 7);
    v87 = v19;
    v44 = (_QWORD *)v43;
    *(_OWORD *)(v43 + 16) = xmmword_10097CA50;
    v45 = v37;
    v46 = Location.name.getter();
    v84 = v20;
    v48 = v47;
    v44[7] = &type metadata for String;
    v44[8] = sub_1000B2E24();
    v44[4] = v46;
    v44[5] = v48;
    v49 = v41;
    v50 = v38;
    v80 = v38;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v49, &_mh_execute_header, v45, "Weather:fetchAvailableDataSets", 30, 2, v38, "location %{private}s", 20, 2, v44);

    swift_bridgeObjectRelease(v44);
    swift_storeEnumTagMultiPayload(v24, v79, 22);
    v51 = v100;
    sub_1000C7114((uint64_t)v24);
    sub_1000215BC((uint64_t)v24, type metadata accessor for WeatherDataUpdateRequestLog.Event);
    v81 = sub_10008B2E0(v81);
    v52 = Location.timeZone.getter();
    v93 = AppConfiguration.locationDecimalPrecision.getter(v52);
    v53 = swift_allocObject(&unk_100B94C50, 24, 7);
    swift_beginAccess(v30, v105, 0, 0);
    v54 = swift_weakLoadStrong(v30);
    swift_weakInit(v53 + 16, v54);
    swift_release(v54);
    v55 = v94;
    v57 = v96;
    v56 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v94, a3, v97);
    v58 = v102;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v101, v50, v103);
    v59 = *(unsigned __int8 *)(v57 + 80);
    v60 = (v59 + 32) & ~v59;
    v61 = (v95 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = *(unsigned __int8 *)(v58 + 80);
    v63 = (v62 + v61 + 32) & ~v62;
    v64 = (v83 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = swift_allocObject(&unk_100B952B8, v64 + 16, v59 | v62 | 7);
    *(_QWORD *)(v65 + 16) = v53;
    *(_QWORD *)(v65 + 24) = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v65 + v60, v55, v56);
    v66 = (_QWORD *)(v65 + v61);
    v67 = v90;
    *v66 = v85;
    v66[1] = v67;
    v68 = v92;
    v66[2] = v91;
    v66[3] = v68;
    v69 = v65 + v63;
    v70 = v102;
    v71 = v103;
    (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v69, v101, v103);
    v72 = (_QWORD *)(v65 + v64);
    v73 = v89;
    *v72 = v99;
    v72[1] = v73;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v74 = swift_retain();
    v75 = v88;
    v76 = v104;
    v77 = v81;
    WeatherService.fetchAvailableDataSets(for:timeZone:locationDecimalPrecision:countryCode:completion:)(v88, v104, v93, 0, v86, v98, sub_10081893C, v65, v74);
    swift_release(v82);

    swift_release(v77);
    swift_release(v65);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v76, v87);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v80, v71);
    swift_release(v53);
  }
  else
  {
    sub_1004F148C(0xD000000000000022, 0x8000000100A15E30);
  }
}

uint64_t sub_10008B954@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (**v31)();
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v68;
  char *v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD v94[4];
  char v95[9];

  v3 = v2;
  v77 = a1;
  v89 = type metadata accessor for LocationViewModel(0);
  __chkstk_darwin(v89);
  v88 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PinnedScrollableViews(0);
  v87 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v80 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for LocationContentView(0);
  v8 = *(_QWORD *)(v90 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v90);
  v10 = (int *)sub_1000BA294(&qword_100C00E78);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1000BA294(&qword_100C00EF0);
  v85 = *(_QWORD *)(v13 - 8);
  v86 = v13;
  __chkstk_darwin(v13);
  v81 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1000BA294(&qword_100C00E70);
  __chkstk_darwin(v84);
  v82 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000BA294(&qword_100C00E58);
  __chkstk_darwin(v16);
  v83 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1000BA294(&qword_100C00E50);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v92 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v3;
  v20 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v20;
  sub_100080C0C(v19, (uint64_t)v20, type metadata accessor for LocationContentView);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v93 = v22 + v9;
  v91 = v21 | 7;
  v23 = (v22 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_100B8BE78, v23 + 8, v21 | 7);
  sub_10007802C((uint64_t)v20, v24 + v22, type metadata accessor for LocationContentView);
  *(double *)(v24 + v23) = a2;
  v26 = static HorizontalAlignment.center.getter(v25);
  LODWORD(v94[0]) = 0;
  sub_10007A100((uint64_t)&qword_100BE18E8);
  v27 = v80;
  dispatch thunk of OptionSet.init(rawValue:)(v94, v6, v28);
  v29 = (char *)v12 + v10[11];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_1009C2390);
  v29[8] = 0;
  v30 = (char *)v12 + v10[12];
  *(_QWORD *)v30 = swift_getKeyPath(&unk_1009C2220);
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *(_OWORD *)(v30 + 40) = 0u;
  *(_OWORD *)(v30 + 56) = 0u;
  v30[72] = 0;
  *v12 = v26;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))((char *)v12 + v10[9], v27, v6);
  v31 = (void (**)())((char *)v12 + v10[10]);
  *v31 = sub_10070E4AC;
  v31[1] = (void (*)())v24;
  sub_10007AB60((uint64_t)&unk_100C00E80);
  v33 = v32;
  v34 = v81;
  v35 = v10;
  v36 = (uint64_t)v78;
  View.navigationDestinationScope()(v35, v33);
  sub_100021A14((uint64_t)v12, &qword_100C00E78);
  KeyPath = swift_getKeyPath(&unk_1009C2220);
  v39 = v85;
  v38 = v86;
  v40 = (uint64_t)v82;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v34, v86);
  v41 = v40 + *(int *)(v84 + 36);
  *(_QWORD *)v41 = KeyPath;
  *(_OWORD *)(v41 + 8) = 0u;
  *(_OWORD *)(v41 + 24) = 0u;
  *(_OWORD *)(v41 + 40) = 0u;
  *(_OWORD *)(v41 + 56) = 0u;
  *(_BYTE *)(v41 + 72) = 0;
  v42 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v34, v38);
  v43 = static Alignment.center.getter(v42);
  v45 = v44;
  v46 = (uint64_t)v83;
  v47 = (uint64_t)&v83[*(int *)(v16 + 36)];
  v48 = v79;
  sub_1000377B4(v47);
  v49 = (uint64_t *)(v47 + *(int *)(sub_1000BA294(&qword_100C00E98) + 36));
  *v49 = v43;
  v49[1] = v45;
  sub_1000787D4(v40, v46, &qword_100C00E70);
  v50 = *(_QWORD *)(v48 + 8);
  swift_retain();
  v51 = (uint64_t)v88;
  sub_10008D488();
  swift_release(v50);
  v52 = *(_QWORD *)(v51 + *(int *)(v89 + 28));
  swift_bridgeObjectRetain(v52);
  sub_1000215BC(v51, type metadata accessor for LocationViewModel);
  v94[0] = v52;
  sub_100080C0C(v48, v36, type metadata accessor for LocationContentView);
  v53 = swift_allocObject(&unk_100B8BEA0, v93, v91);
  v89 = v22;
  sub_10007802C(v36, v53 + v22, type metadata accessor for LocationContentView);
  v54 = sub_1000BA294(&qword_100BFA9A0);
  v55 = sub_10070E1FC();
  sub_1005D17C0((uint64_t)&qword_100BFACC0);
  v57 = v56;
  View.onChange<A>(of:initial:_:)(v94, 0, sub_10013B088, v53, v16, v54, v55, v56);
  v58 = v53;
  v59 = v48;
  swift_release(v58);
  swift_bridgeObjectRelease(v94[0]);
  sub_100021A14(v46, &qword_100C00E58);
  v60 = (uint64_t *)(v48 + *(int *)(v90 + 80));
  v61 = *v60;
  if (*v60)
  {
    v62 = type metadata accessor for TipCoordinator(0);
    swift_retain();
    ObservableResolver.resolve<A>(_:)(v62, v62);
    swift_release(v61);
    v63 = v94[0];
    if (v94[0])
    {
      sub_100028CC8();
      v65 = v64;
      swift_release(v63);
      v95[0] = v65 & 1;
      sub_100080C0C(v59, v36, type metadata accessor for LocationContentView);
      v66 = swift_allocObject(&unk_100B8BEC8, v93, v91);
      sub_10007802C(v36, v66 + v89, type metadata accessor for LocationContentView);
      v94[0] = v16;
      v94[1] = v54;
      v94[2] = v55;
      v94[3] = v57;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v94, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
      v68 = v76;
      v69 = v92;
      View.onChange<A>(of:initial:_:)(v95, 0, sub_10070E4E4, v66, v76, &type metadata for Bool, OpaqueTypeConformance2, &protocol witness table for Bool);
      swift_release(v66);
      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v69, v68);
    }
    __break(1u);
  }
  v71 = v60[1];
  v72 = type metadata accessor for ObservableResolver(0);
  sub_10007A100((uint64_t)&qword_100BD0930);
  result = EnvironmentObject.error()(0, v71, v72, v73);
  __break(1u);
  return result;
}

void sub_10008C080(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  char *v61;
  uint64_t v62;
  void *v63;
  Swift::String v64;
  Swift::String v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD v171[18];

  v3 = v1;
  v159 = a1;
  v138 = sub_1000891A8();
  v134 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = v4;
  v140 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA294(&qword_100C00BD0);
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100088FDC();
  v135 = v6;
  v154 = sub_1000BA294(&qword_100C00BD8);
  sub_1000B42B0();
  __chkstk_darwin(v7);
  sub_100088FDC();
  v137 = v8;
  v9 = sub_1000BA294(&qword_100C00BE0);
  v141 = *(_QWORD *)(v9 - 8);
  v142 = v9;
  __chkstk_darwin(v9);
  sub_100088FDC();
  v139 = v10;
  v11 = sub_1000BA294(&qword_100C00BE8);
  v144 = *(_QWORD *)(v11 - 8);
  v145 = v11;
  __chkstk_darwin(v11);
  sub_100088FDC();
  v143 = v12;
  v146 = sub_1000BA294(&qword_100C00BF0);
  sub_1000B42B0();
  __chkstk_darwin(v13);
  sub_100088FDC();
  v147 = v14;
  v148 = sub_1000BA294(&qword_100C00BF8);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v149 = v16;
  v158 = sub_1000BA294(&qword_100C00C00);
  sub_1000B42B0();
  __chkstk_darwin(v17);
  sub_1000986FC();
  v151 = v18;
  sub_10009D2A4();
  __chkstk_darwin(v19);
  sub_100079F7C();
  v150 = v20;
  v21 = sub_10009876C();
  v22 = type metadata accessor for Location.Identifier(v21);
  v129 = *(_QWORD *)(v22 - 8);
  v130 = v22;
  __chkstk_darwin(v22);
  sub_100088FDC();
  v128 = v23;
  v24 = sub_10009876C();
  type metadata accessor for WeatherActivity(v24);
  sub_1000B42B0();
  __chkstk_darwin(v25);
  sub_100088FDC();
  v133 = v26;
  v27 = sub_10009876C();
  type metadata accessor for AutomationInfoViewModifier(v27);
  sub_1000B42B0();
  __chkstk_darwin(v28);
  sub_100088FDC();
  v121 = v29;
  v30 = sub_10009876C();
  v124 = type metadata accessor for AutomationInfo(v30);
  sub_1000B42B0();
  __chkstk_darwin(v31);
  sub_1000986FC();
  v126 = v32;
  sub_10009D2A4();
  __chkstk_darwin(v33);
  v123 = (uint64_t)&v121 - v34;
  sub_10009D2A4();
  __chkstk_darwin(v35);
  sub_100079F7C();
  v125 = v36;
  sub_1000BA294(&qword_100C00C08);
  sub_1000B42B0();
  __chkstk_darwin(v37);
  sub_100088FDC();
  v127 = v38;
  v155 = sub_1000BA294(&qword_100C00C10);
  sub_1000B42B0();
  __chkstk_darwin(v39);
  sub_1000986FC();
  v131 = v40;
  sub_10009D2A4();
  __chkstk_darwin(v41);
  sub_100079F7C();
  v132 = (char *)v42;
  v157 = sub_1000BA294(&qword_100C00C18);
  sub_1000B42B0();
  __chkstk_darwin(v43);
  sub_100088FDC();
  v156 = v44;
  v45 = sub_10009876C();
  v46 = type metadata accessor for LocationViewModel(v45);
  sub_1000B42B0();
  __chkstk_darwin(v47);
  sub_1000C24A0();
  __chkstk_darwin(v48);
  v122 = (uint64_t)&v121 - v49;
  sub_10009D2A4();
  v51 = __chkstk_darwin(v50);
  v53 = (char *)&v121 - v52;
  __chkstk_darwin(v51);
  v55 = (char *)&v121 - v54;
  type metadata accessor for LocalizedStringKey.StringInterpolation(0);
  sub_1000B42B0();
  __chkstk_darwin(v56);
  sub_100098728();
  v59 = v58 - v57;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v60);
  sub_100094EE4();
  sub_1000DC51C();
  sub_10009880C();
  v61 = &v55[*(int *)(v46 + 24)];
  v62 = *((_QWORD *)v61 + 9);
  v63 = (void *)*((_QWORD *)v61 + 10);
  swift_bridgeObjectRetain(v63);
  sub_100079FB4((uint64_t)v55);
  v64._countAndFlagsBits = v62;
  v64._object = v63;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v64);
  swift_bridgeObjectRelease(v63);
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v65);
  v66 = LocalizedStringKey.init(stringInterpolation:)(v59);
  v167 = Text.init(_:tableName:bundle:comment:)(v66, v68, v67 & 1, v69, 0, 0, 0, "Describes the current temperature.");
  v168 = v70;
  v153 = v71;
  v169 = v72;
  sub_100094EE4();
  sub_1000DC51C();
  sub_10009880C();
  v73 = &v55[*(int *)(v46 + 24)];
  v75 = *(_QWORD *)v73;
  v74 = *((_QWORD *)v73 + 1);
  sub_1000989F8();
  sub_100079FB4((uint64_t)v55);
  v171[0] = v75;
  v171[1] = v74;
  v76 = sub_100114EF8();
  v160 = Text.init<A>(_:)(v171, &type metadata for String, v76);
  v161 = v77;
  v152 = v78;
  v163 = v79;
  v162 = sub_10001E254(v3);
  v164 = v80;
  v165 = v81;
  v166 = v82;
  sub_100094EE4();
  sub_10008D488();
  sub_10009880C();
  LODWORD(v75) = v53[*(int *)(v46 + 56)];
  sub_100079FB4((uint64_t)v53);
  v170 = v3;
  sub_100094EE4();
  if ((_DWORD)v75 != 2)
  {
    sub_10008D488();
    sub_10009880C();
    v111 = *(unsigned __int8 *)(v2 + *(int *)(v46 + 56));
    sub_1000215BC(v2, type metadata accessor for LocationViewModel);
    v132 = v55;
    v133 = v46;
    __asm { BR              X9 }
  }
  sub_1000DC51C();
  sub_10009880C();
  v83 = &v55[*(int *)(v46 + 24)];
  v85 = *(_QWORD *)v83;
  v84 = *((_QWORD *)v83 + 1);
  sub_1000989F8();
  sub_1000215BC((uint64_t)v55, type metadata accessor for LocationViewModel);
  v86 = v125;
  *v125 = v85;
  v86[1] = v84;
  v87 = type metadata accessor for AutomationViewInfo(0);
  sub_1000916FC((uint64_t)v86, v87);
  sub_1000916FC((uint64_t)v86, v124);
  v88 = v123;
  sub_100086100((uint64_t)v86, v123);
  v89 = v88;
  v90 = v126;
  sub_1000BEC60(v89, v126);
  v91 = v121;
  *v121 = 0;
  v91[1] = 0xE000000000000000;
  v91[2] = swift_getKeyPath(&unk_1009C2248);
  *((_BYTE *)v91 + 24) = 0;
  v92 = type metadata accessor for AutomationInfoProperty(0);
  sub_1000BEC60(v90, (uint64_t)v91 + *(int *)(v92 + 24));
  v93 = v127;
  sub_100080C0C((uint64_t)v91, v127, type metadata accessor for AutomationInfoViewModifier);
  sub_1000215BC((uint64_t)v91, type metadata accessor for AutomationInfoViewModifier);
  sub_1000215BC((uint64_t)v86, type metadata accessor for AutomationInfo);
  sub_100094EE4();
  v94 = v122;
  sub_10008D488();
  sub_10009880C();
  v96 = v128;
  v95 = v129;
  v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16);
  v98 = v130;
  v97(v128, v94, v130);
  sub_1000215BC(v94, type metadata accessor for LocationViewModel);
  v100 = Location.Identifier.kind.getter(v99) & 1;
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v96, v98);
  v101 = Location.Identifier.Kind.rawValue.getter(v100);
  v103 = v102;
  v104 = Location.Identifier.Kind.rawValue.getter(1);
  if (v101 == v104 && v103 == v105)
  {
    v110 = 2;
    swift_bridgeObjectRelease_n(v103, 2);
    v109 = v133;
  }
  else
  {
    v107 = v105;
    v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, v103, v104, v105, 0);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v107);
    v109 = v133;
    if ((v108 & 1) != 0)
    {
      v110 = 2;
    }
    else
    {
      sub_100094EE4();
      sub_1000DC51C();
      sub_10009880C();
      v97(v109, (uint64_t)v55, v98);
      sub_1000215BC((uint64_t)v55, type metadata accessor for LocationViewModel);
      v110 = 0;
    }
  }
  _s7Weather24LocationCompositionStateOwst_0(v109, v110, 2, v98);
  v112 = v155;
  v113 = v131;
  sub_100086100(v109, v131 + *(int *)(v155 + 36));
  sub_100037768(v93, v113, &qword_100C00C08);
  sub_1000215BC(v109, type metadata accessor for WeatherActivity);
  sub_100021A14(v93, &qword_100C00C08);
  v114 = (uint64_t)v132;
  sub_1000787D4(v113, (uint64_t)v132, &qword_100C00C10);
  v115 = sub_100156CFC();
  v116 = sub_10070D588();
  v117 = v156;
  sub_1001589C0(v114, v112, v158, v115, v116, v118, v119, v120, (uint64_t)v121, v122, v123, v124, (uint64_t)v125, v126, v127, v128, v129, v130);
  sub_1000D31B4(v167, v168, v153 & 1);
  swift_bridgeObjectRelease(v169);
  sub_1000D31B4(v160, v161, v152 & 1);
  swift_bridgeObjectRelease(v163);
  sub_1000DC2A0();
  sub_100099298(v114);
  sub_10070D630();
  sub_1000B1100(v117, v157, v159);
  sub_100021A14(v117, &qword_100C00C18);
}

uint64_t sub_10008CED0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 72);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v4);
  return a1;
}

void sub_10008CF20(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = sub_10011E7D8(a1);
  v2(v1);
  sub_100089028();
}

void sub_10008CF58()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1000986AC();
  v4 = v3;
  v5 = sub_1000D9280();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100079FBC();
  v7 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 72) == 1)
  {
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_DWORD *)(v0 + 32);
    v11 = *(_QWORD *)(v0 + 24);
    *(_QWORD *)v4 = v7;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v0 + 8);
    *(_QWORD *)(v4 + 24) = v11;
    *(_BYTE *)(v4 + 32) = v10 & 1;
    *(_QWORD *)(v4 + 40) = v9;
    *(_WORD *)(v4 + 48) = v8;
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(v0 + 56);
  }
  else
  {
    v12 = sub_10008CED0(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000D4FF4);
    static os_log_type_t.fault.getter(v12, v13, v14, v15, v16, v17, v18, v19);
    v20 = sub_10009F814();
    if (sub_1000BD064(v20))
    {
      v21 = (uint8_t *)sub_100098710(12);
      v27 = v7;
      v22 = sub_100098710(32);
      v28 = v22;
      sub_10009C068(4.8149e-34);
      v23 = sub_1000CE1C8(0x6D6F654764697247, 0xEC00000079727465, &v28);
      v24 = sub_100099A3C(v23);
      sub_10011AC64(v24, v25);
      sub_10009D7A0((void *)&_mh_execute_header, v20, v2, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21);
      sub_1000988D8(v22);
      v26 = v22;
      v7 = v27;
      sub_1000986F0(v26);
      sub_1000986F0((uint64_t)v21);
    }

    sub_100110580();
    swift_getAtKeyPath(v1, v7);
    sub_10008CED0(v0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1000CEE98);
    sub_1000BEA30(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  sub_100098640();
}

uint64_t type metadata accessor for LocationContentView(uint64_t a1)
{
  return sub_100098190(a1, qword_100C00B50, (uint64_t)&nominal type descriptor for LocationContentView);
}

uint64_t sub_10008D108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v72;
  __int128 v74;
  int *v75;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v74 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v74;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2 + 56;
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain(v74);
  v12 = swift_retain();
  v11(a1 + 56, v8, v10, v12);
  v13 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 96, a2 + 96);
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  LOBYTE(v7) = *(_BYTE *)(a2 + 152);
  swift_retain();
  sub_10008D47C(v14, v7);
  *(_QWORD *)(a1 + 144) = v14;
  *(_BYTE *)(a1 + 152) = v7;
  v15 = a3[13];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_BYTE *)(v16 + 16) = *(_BYTE *)(v17 + 16);
    *(_BYTE *)(v16 + 17) = *(_BYTE *)(v17 + 17);
    *(_BYTE *)(v16 + 18) = *(_BYTE *)(v17 + 18);
    v19 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v20 = v16 + v19;
    v21 = v17 + v19;
    v22 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = 1;
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    swift_retain();
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v23);
  v24 = a3[14];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  sub_10008D47C(*(_QWORD *)v26, v28);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v28;
  v29 = a3[15];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
    v34 = 1;
  }
  else
  {
    *v30 = *v31;
    swift_retain();
    v34 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v32, v34);
  v35 = a3[16];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)v37;
  v39 = *(_QWORD *)(v37 + 8);
  v40 = *(_QWORD *)(v37 + 16);
  v41 = *(_QWORD *)(v37 + 24);
  v42 = *(_BYTE *)(v37 + 32);
  sub_1000D55E4(*(_QWORD *)v37, v39, v40, v41, v42);
  *(_QWORD *)v36 = v38;
  *(_QWORD *)(v36 + 8) = v39;
  *(_QWORD *)(v36 + 16) = v40;
  *(_QWORD *)(v36 + 24) = v41;
  *(_BYTE *)(v36 + 32) = v42;
  v43 = a3[17];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(_QWORD *)v45;
  LOBYTE(v39) = *(_BYTE *)(v45 + 8);
  sub_10008D47C(*(_QWORD *)v45, v39);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = v39;
  v47 = a3[18];
  v75 = a3;
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = *(_QWORD *)v49;
  v51 = *(_QWORD *)(v49 + 8);
  v52 = *(_QWORD *)(v49 + 16);
  v53 = *(_QWORD *)(v49 + 24);
  v54 = *(_QWORD *)(v49 + 32);
  v55 = *(_QWORD *)(v49 + 40);
  v56 = *(_BYTE *)(v49 + 48);
  sub_1000D55F0(*(_QWORD *)v49, v51, v52, v53, v54, v55, v56);
  *(_QWORD *)v48 = v50;
  *(_QWORD *)(v48 + 8) = v51;
  *(_QWORD *)(v48 + 16) = v52;
  *(_QWORD *)(v48 + 24) = v53;
  *(_QWORD *)(v48 + 32) = v54;
  *(_QWORD *)(v48 + 40) = v55;
  *(_BYTE *)(v48 + 48) = v56;
  v57 = v75[19];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = *(_QWORD *)v59;
  v61 = *(_QWORD *)(v59 + 8);
  LOBYTE(v52) = *(_BYTE *)(v59 + 16);
  sub_100037094(*(_QWORD *)v59, v61);
  *(_QWORD *)v58 = v60;
  *(_QWORD *)(v58 + 8) = v61;
  *(_BYTE *)(v58 + 16) = v52;
  v62 = v75[20];
  v63 = v75[21];
  v64 = (_QWORD *)(a1 + v62);
  v65 = (uint64_t *)(a2 + v62);
  v67 = *v65;
  v66 = v65[1];
  *v64 = v67;
  v64[1] = v66;
  v68 = a1 + v63;
  v69 = a2 + v63;
  v70 = type metadata accessor for Text.Measurements(0);
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v70 - 8) + 16);
  v72 = swift_retain();
  v71(v68, v69, v70, v72);
  return a1;
}

uint64_t sub_10008D47C(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

void sub_10008D488()
{
  sub_10017B048();
}

uint64_t sub_10008D4AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  if (a1 != a2)
  {
    sub_100441DDC(a1, type metadata accessor for LocationComponentHeaderViewModel);
    v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    v7 = (char *)&loc_10008D524 + 4 * byte_10099F7F9[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }
  v8 = type metadata accessor for LocationComponentContainerViewModel(0);
  *(_WORD *)(a1 + *(int *)(v8 + 24)) = *(_WORD *)(a2 + *(int *)(v8 + 24));
  v9 = *(int *)(v8 + 28);
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = type metadata accessor for LocationComponentAction(0);
  v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      switch(swift_getEnumCaseMultiPayload(v11, v12))
      {
        case 0u:
          v15 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
          v16 = sub_1000BA294(&qword_100BC5FE8);
          v10[*(int *)(v16 + 48)] = v11[*(int *)(v16 + 48)];
          v17 = v10;
          v18 = v12;
          v19 = 0;
          goto LABEL_18;
        case 1u:
          v26 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v11, v26);
          v17 = v10;
          v18 = v12;
          v19 = 1;
          goto LABEL_18;
        case 2u:
          v27 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v10, v11, v27);
          v28 = sub_1000BA294(&qword_100BC5FF8);
          v10[*(int *)(v28 + 48)] = v11[*(int *)(v28 + 48)];
          v17 = v10;
          v18 = v12;
          v19 = 2;
          goto LABEL_18;
        case 4u:
          *v10 = *v11;
          v29 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v30 = &v10[v29];
          v31 = &v11[v29];
          v32 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
          v17 = v10;
          v18 = v12;
          v19 = 4;
LABEL_18:
          swift_storeEnumTagMultiPayload(v17, v18, v19);
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      goto LABEL_25;
    }
    goto LABEL_9;
  }
  if (v14)
  {
    sub_100441DDC((uint64_t)v10, type metadata accessor for LocationComponentAction);
LABEL_9:
    v20 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_10:
    memcpy(v10, v11, *(_QWORD *)(v20 + 64));
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_100441DDC((uint64_t)v10, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v11, v12))
    {
      case 0u:
        v21 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v10, v11, v21);
        v22 = sub_1000BA294(&qword_100BC5FE8);
        v10[*(int *)(v22 + 48)] = v11[*(int *)(v22 + 48)];
        v23 = v10;
        v24 = v12;
        v25 = 0;
        break;
      case 1u:
        v33 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v10, v11, v33);
        v23 = v10;
        v24 = v12;
        v25 = 1;
        break;
      case 2u:
        v34 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v10, v11, v34);
        v35 = sub_1000BA294(&qword_100BC5FF8);
        v10[*(int *)(v35 + 48)] = v11[*(int *)(v35 + 48)];
        v23 = v10;
        v24 = v12;
        v25 = 2;
        break;
      case 4u:
        *v10 = *v11;
        v36 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v37 = &v10[v36];
        v38 = &v11[v36];
        v39 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        v23 = v10;
        v24 = v12;
        v25 = 4;
        break;
      default:
        v20 = *(_QWORD *)(v12 - 8);
        goto LABEL_10;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
  }
LABEL_25:
  v40 = a3[5];
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  v44 = v42[1];
  v45 = *v41;
  *v41 = *v42;
  swift_unknownObjectRetain(v43);
  swift_unknownObjectRelease(v45);
  v41[1] = v44;
  sub_100094D04((_QWORD *)(a1 + a3[6]), (_QWORD *)(a2 + a3[6]));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v46 = a3[8];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  v50 = a3[9];
  v51 = *(_QWORD *)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);
  swift_retain();
  swift_release(v51);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v52 = a3[12];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  *v53 = *v54;
  v53[1] = v54[1];
  v55 = a3[13];
  v56 = a1 + v55;
  v57 = (__int128 *)(a2 + v55);
  v58 = *v57;
  *(_BYTE *)(v56 + 16) = *((_BYTE *)v57 + 16);
  *(_OWORD *)v56 = v58;
  v59 = *(_QWORD *)(v56 + 24);
  *(_QWORD *)(v56 + 24) = *((_QWORD *)v57 + 3);
  swift_retain();
  swift_release(v59);
  v60 = a3[14];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = *(_QWORD *)v62;
  v64 = *(_QWORD *)(v62 + 8);
  LOBYTE(v44) = *(_BYTE *)(v62 + 16);
  sub_100037094(*(_QWORD *)v62, v64);
  v65 = *(_QWORD *)v61;
  v66 = *(_QWORD *)(v61 + 8);
  *(_QWORD *)v61 = v63;
  *(_QWORD *)(v61 + 8) = v64;
  *(_BYTE *)(v61 + 16) = v44;
  sub_1000BF398(v65, v66);
  v67 = a3[15];
  v68 = a1 + v67;
  v69 = a2 + v67;
  v70 = *(_QWORD *)v69;
  v71 = *(_QWORD *)(v69 + 8);
  LOBYTE(v44) = *(_BYTE *)(v69 + 16);
  sub_100037094(*(_QWORD *)v69, v71);
  v72 = *(_QWORD *)v68;
  v73 = *(_QWORD *)(v68 + 8);
  *(_QWORD *)v68 = v70;
  *(_QWORD *)(v68 + 8) = v71;
  *(_BYTE *)(v68 + 16) = v44;
  sub_1000BF398(v72, v73);
  v74 = a3[16];
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = *(_QWORD *)v76;
  v78 = *(_QWORD *)(v76 + 8);
  LOBYTE(v44) = *(_BYTE *)(v76 + 16);
  sub_100037094(*(_QWORD *)v76, v78);
  v79 = *(_QWORD *)v75;
  v80 = *(_QWORD *)(v75 + 8);
  *(_QWORD *)v75 = v77;
  *(_QWORD *)(v75 + 8) = v78;
  *(_BYTE *)(v75 + 16) = v44;
  sub_1000BF398(v79, v80);
  v81 = a3[17];
  v82 = a1 + v81;
  v83 = a2 + v81;
  *(_BYTE *)v82 = *(_BYTE *)v83;
  v84 = *(_QWORD *)(v82 + 8);
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  swift_retain();
  swift_release(v84);
  if (a1 != a2)
  {
    v85 = a3[18];
    v86 = (_QWORD *)(a1 + v85);
    v87 = (_QWORD *)(a2 + v85);
    sub_100021A14(a1 + v85, &qword_100BC2908);
    v88 = sub_1000BA294(&qword_100BC2908);
    if (swift_getEnumCaseMultiPayload(v87, v88) == 1)
    {
      v89 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v86, v87, v89);
      v90 = 1;
    }
    else
    {
      *v86 = *v87;
      swift_retain();
      v90 = 0;
    }
    swift_storeEnumTagMultiPayload(v86, v88, v90);
  }
  v91 = a3[19];
  v92 = a1 + v91;
  v93 = a2 + v91;
  v94 = *(_QWORD *)v93;
  v95 = *(_BYTE *)(v93 + 8);
  sub_10008D47C(*(_QWORD *)v93, v95);
  v96 = *(_QWORD *)v92;
  v97 = *(_BYTE *)(v92 + 8);
  *(_QWORD *)v92 = v94;
  *(_BYTE *)(v92 + 8) = v95;
  sub_1000B15F8(v96, v97);
  v98 = a3[20];
  v99 = a1 + v98;
  v100 = a2 + v98;
  v101 = *(_QWORD *)v100;
  v102 = *(_BYTE *)(v100 + 8);
  sub_10008D47C(*(_QWORD *)v100, v102);
  v103 = *(_QWORD *)v99;
  v104 = *(_BYTE *)(v99 + 8);
  *(_QWORD *)v99 = v101;
  *(_BYTE *)(v99 + 8) = v102;
  sub_1000B15F8(v103, v104);
  if (a1 != a2)
  {
    v105 = a3[21];
    v106 = (_QWORD *)(a1 + v105);
    v107 = (_QWORD *)(a2 + v105);
    sub_100021A14(a1 + v105, &qword_100BC37D8);
    v108 = sub_1000BA294(&qword_100BC37D8);
    if (swift_getEnumCaseMultiPayload(v107, v108) == 1)
    {
      v109 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v106, v107, v109);
      v110 = 1;
    }
    else
    {
      *v106 = *v107;
      swift_retain();
      v110 = 0;
    }
    swift_storeEnumTagMultiPayload(v106, v108, v110);
  }
  v111 = a3[22];
  v112 = a1 + v111;
  v113 = a2 + v111;
  v114 = *(_QWORD *)v113;
  v115 = *(_BYTE *)(v113 + 8);
  sub_10008D47C(*(_QWORD *)v113, v115);
  v116 = *(_QWORD *)v112;
  v117 = *(_BYTE *)(v112 + 8);
  *(_QWORD *)v112 = v114;
  *(_BYTE *)(v112 + 8) = v115;
  sub_1000B15F8(v116, v117);
  v118 = a3[23];
  v119 = a1 + v118;
  v120 = a2 + v118;
  v121 = *(_QWORD *)v120;
  v122 = *(_BYTE *)(v120 + 8);
  sub_10008D47C(*(_QWORD *)v120, v122);
  v123 = *(_QWORD *)v119;
  v124 = *(_BYTE *)(v119 + 8);
  *(_QWORD *)v119 = v121;
  *(_BYTE *)(v119 + 8) = v122;
  sub_1000B15F8(v123, v124);
  v125 = a3[24];
  v126 = a1 + v125;
  v127 = a2 + v125;
  v128 = *(_QWORD *)v127;
  v129 = *(_BYTE *)(v127 + 8);
  sub_10008D47C(*(_QWORD *)v127, v129);
  v130 = *(_QWORD *)v126;
  v131 = *(_BYTE *)(v126 + 8);
  *(_QWORD *)v126 = v128;
  *(_BYTE *)(v126 + 8) = v129;
  sub_1000B15F8(v130, v131);
  v132 = a3[25];
  v133 = a1 + v132;
  v134 = a2 + v132;
  v135 = *(_QWORD *)v134;
  v136 = *(_BYTE *)(v134 + 8);
  sub_10008D47C(*(_QWORD *)v134, v136);
  v137 = *(_QWORD *)v133;
  v138 = *(_BYTE *)(v133 + 8);
  *(_QWORD *)v133 = v135;
  *(_BYTE *)(v133 + 8) = v136;
  sub_1000B15F8(v137, v138);
  v139 = a3[26];
  v140 = a1 + v139;
  v141 = a2 + v139;
  v142 = *(_QWORD *)v141;
  v143 = *(_BYTE *)(v141 + 8);
  sub_10008D47C(*(_QWORD *)v141, v143);
  v144 = *(_QWORD *)v140;
  v145 = *(_BYTE *)(v140 + 8);
  *(_QWORD *)v140 = v142;
  *(_BYTE *)(v140 + 8) = v143;
  sub_1000B15F8(v144, v145);
  v146 = a3[27];
  v147 = a1 + v146;
  v148 = a2 + v146;
  v149 = *(_QWORD *)v148;
  v150 = *(_BYTE *)(v148 + 8);
  sub_10008D47C(*(_QWORD *)v148, v150);
  v151 = *(_QWORD *)v147;
  v152 = *(_BYTE *)(v147 + 8);
  *(_QWORD *)v147 = v149;
  *(_BYTE *)(v147 + 8) = v150;
  sub_1000B15F8(v151, v152);
  if (a1 != a2)
  {
    v153 = a3[28];
    v154 = a1 + v153;
    v155 = a2 + v153;
    sub_100021A14(a1 + v153, &qword_100BC37E0);
    v156 = sub_1000BA294(&qword_100BC37E0);
    if (swift_getEnumCaseMultiPayload(v155, v156) == 1)
    {
      *(_QWORD *)v154 = *(_QWORD *)v155;
      *(_QWORD *)(v154 + 8) = *(_QWORD *)(v155 + 8);
      *(_BYTE *)(v154 + 16) = *(_BYTE *)(v155 + 16);
      *(_BYTE *)(v154 + 17) = *(_BYTE *)(v155 + 17);
      *(_BYTE *)(v154 + 18) = *(_BYTE *)(v155 + 18);
      v157 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
      v158 = v154 + v157;
      v159 = v155 + v157;
      v160 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
      v161 = 1;
    }
    else
    {
      *(_QWORD *)v154 = *(_QWORD *)v155;
      swift_retain();
      v161 = 0;
    }
    swift_storeEnumTagMultiPayload(v154, v156, v161);
  }
  v162 = a3[29];
  v163 = a1 + v162;
  v164 = a2 + v162;
  v165 = *(_QWORD *)(a1 + v162);
  *(_QWORD *)(a1 + v162) = *(_QWORD *)(a2 + v162);
  swift_retain();
  swift_release(v165);
  *(_QWORD *)(v163 + 8) = *(_QWORD *)(v164 + 8);
  v166 = a3[30];
  v167 = a1 + v166;
  v168 = a2 + v166;
  v169 = *(_QWORD *)(a2 + v166);
  v170 = *(_QWORD *)(a1 + v166);
  *(_QWORD *)(a1 + v166) = v169;
  swift_retain();
  swift_release(v170);
  v171 = *(_QWORD *)(v167 + 8);
  *(_QWORD *)(v167 + 8) = *(_QWORD *)(v168 + 8);
  swift_retain();
  swift_release(v171);
  return a1;
}

void sub_10008F324(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  void (**v41)(char);
  _BYTE *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  void (**v65)();
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t *v71;
  uint64_t v72;
  _BYTE v73[4];
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  int v79;
  _BYTE *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v2 = v1;
  v97 = a1;
  v95 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v95);
  v81 = &v73[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v82 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
  v4 = __chkstk_darwin(v82);
  v80 = &v73[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v78 = &v73[-v6];
  v84 = type metadata accessor for LocationComponentContainerView(0);
  v77 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v8 = v7;
  v96 = &v73[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (int *)sub_1000BA294(&qword_100BE2358);
  __chkstk_darwin(v9);
  v11 = &v73[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = sub_1000BA294(&qword_100BD94E0);
  __chkstk_darwin(v83);
  v86 = &v73[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1000BA294(&qword_100BD94E8);
  __chkstk_darwin(v13);
  v87 = &v73[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v85 = sub_1000BA294(&qword_100BDE370);
  __chkstk_darwin(v85);
  v89 = &v73[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = sub_1000BA294(&qword_100BDE360);
  __chkstk_darwin(v88);
  v93 = &v73[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1000BA294(&qword_100BDE350);
  __chkstk_darwin(v17);
  v94 = &v73[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v91 = sub_1000BA294(&qword_100BDE320);
  __chkstk_darwin(v91);
  v92 = &v73[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1000BA294(&qword_100BE2338);
  __chkstk_darwin(v20);
  v90 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for LocationComponentViewModel(0);
  v23 = __chkstk_darwin(v22);
  v25 = &v73[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = __chkstk_darwin(v23);
  v28 = &v73[-v27];
  __chkstk_darwin(v26);
  v30 = &v73[-v29];
  v31 = v2 + *(int *)(type metadata accessor for LocationComponentContainerViewModel(0) + 20);
  sub_100080C0C(v31, (uint64_t)v30, type metadata accessor for LocationComponentViewModel);
  if (swift_getEnumCaseMultiPayload(v30, v22) == 1)
  {
    v79 = 6;
  }
  else
  {
    sub_100080C0C(v31, (uint64_t)v28, type metadata accessor for LocationComponentViewModel);
    v79 = sub_10000B29C((uint64_t)v28);
  }
  sub_100441DDC((uint64_t)v30, type metadata accessor for LocationComponentViewModel);
  sub_100080C0C(v31, (uint64_t)v25, type metadata accessor for LocationComponentViewModel);
  v74 = ((swift_getEnumCaseMultiPayload(v25, v22) - 1) & 0xFFFFFFF7) == 0;
  sub_100441DDC((uint64_t)v25, type metadata accessor for LocationComponentViewModel);
  v32 = v96;
  sub_100080C0C(v2, (uint64_t)v96, type metadata accessor for LocationComponentContainerView);
  v33 = *(unsigned __int8 *)(v77 + 80);
  v76 = ((v33 + 16) & ~v33) + v8;
  v34 = (v33 + 16) & ~v33;
  v77 = v34;
  v75 = v33 | 7;
  v35 = swift_allocObject(&unk_100B73E88, v76, v33 | 7);
  sub_10007C75C((uint64_t)v32, v35 + v34, type metadata accessor for LocationComponentContainerView);
  *(_QWORD *)v11 = swift_getKeyPath(&unk_1009A0410);
  v11[8] = 0;
  v36 = &v11[v9[13]];
  LOBYTE(v98) = 0;
  State.init(wrappedValue:)(&v98, &type metadata for Bool);
  v37 = v100;
  *v36 = v99;
  *((_QWORD *)v36 + 1) = v37;
  v38 = type metadata accessor for Date(0);
  v39 = v78;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 1, 1, v38);
  v40 = v80;
  sub_100037768((uint64_t)v39, (uint64_t)v80, (uint64_t *)&unk_100BD35A0);
  State.init(wrappedValue:)(v40, v82);
  sub_100021A14((uint64_t)v39, (uint64_t *)&unk_100BD35A0);
  sub_10042CF10(v2, (uint64_t)&v11[v9[10]]);
  v41 = (void (**)(char))&v11[v9[11]];
  *v41 = sub_100444F58;
  v41[1] = (void (*)(char))v35;
  v11[9] = v74;
  v42 = &v11[v9[12]];
  *(_OWORD *)v42 = xmmword_10099F720;
  v42[16] = 0;
  *((_QWORD *)v42 + 3) = _swiftEmptyArrayStorage;
  v43 = (uint64_t *)(v2 + *(int *)(v84 + 120));
  v45 = *v43;
  v44 = v43[1];
  v99 = v45;
  v100 = v44;
  v46 = sub_1000BA294(&qword_100BE2360);
  State.wrappedValue.getter(&v98, v46);
  v47 = v98;
  v48 = *(_QWORD *)(v98 + 16);
  swift_retain();
  swift_release(v47);
  v49 = v86;
  sub_100037768((uint64_t)v11, (uint64_t)v86, &qword_100BE2358);
  *(_QWORD *)&v49[*(int *)(v83 + 36)] = v48;
  sub_100021A14((uint64_t)v11, &qword_100BE2358);
  sub_100080E74();
  v50 = (uint64_t)v81;
  *v81 = v51;
  *(_QWORD *)(v50 + 8) = v52;
  *(_BYTE *)(v50 + 16) = 0;
  swift_storeEnumTagMultiPayload(v50, v95, 2);
  v53 = (uint64_t)v87;
  sub_1003353D8();
  sub_100441DDC(v50, type metadata accessor for AutomationInfo);
  sub_100021A14((uint64_t)v49, &qword_100BD94E0);
  sub_100080E74();
  v55 = v54;
  v57 = v56;
  v58 = v89;
  sub_100037768(v53, (uint64_t)v89, &qword_100BD94E8);
  v59 = &v58[*(int *)(v85 + 52)];
  *v59 = v55;
  v59[1] = v57;
  sub_100021A14(v53, &qword_100BD94E8);
  sub_100080C0C(v2, (uint64_t)v32, type metadata accessor for LocationComponentContainerView);
  v60 = v76;
  v61 = v75;
  v62 = swift_allocObject(&unk_100B73EB0, v76, v75);
  v63 = v77;
  sub_10007C75C((uint64_t)v32, v62 + v77, type metadata accessor for LocationComponentContainerView);
  v64 = v93;
  sub_100037768((uint64_t)v58, (uint64_t)v93, &qword_100BDE370);
  v65 = (void (**)())&v64[*(int *)(v88 + 36)];
  *v65 = sub_100128F58;
  v65[1] = (void (*)())v62;
  sub_100021A14((uint64_t)v58, &qword_100BDE370);
  sub_100080C0C(v2, (uint64_t)v32, type metadata accessor for LocationComponentContainerView);
  v66 = swift_allocObject(&unk_100B73ED8, v60, v61);
  sub_10007C75C((uint64_t)v32, v66 + v63, type metadata accessor for LocationComponentContainerView);
  v67 = v94;
  sub_10042DE3C((uint64_t)sub_1004455D0, v66, (uint64_t)v94, 0.5, 1.0);
  swift_release(v66);
  sub_100021A14((uint64_t)v64, &qword_100BDE360);
  v69 = qword_100BE1F10;
  v68 = off_100BE1F18;
  v70 = v92;
  sub_100037768((uint64_t)v67, (uint64_t)v92, &qword_100BDE350);
  v71 = (uint64_t *)&v70[*(int *)(v91 + 36)];
  *v71 = v69;
  v71[1] = (uint64_t)v68;
  swift_bridgeObjectRetain(v68);
  sub_100021A14((uint64_t)v67, &qword_100BDE350);
  v72 = (uint64_t)v90;
  sub_1003BD5BC(v79);
  sub_100021A14((uint64_t)v70, &qword_100BDE320);
  sub_1001A7244(v72, v97, &qword_100BE2338);
}

uint64_t sub_10008FB8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_10008D47C(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1000B15F8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_10008D47C(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_1000B15F8(v12, v13);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  if (a1 != a2)
  {
    sub_100441DDC(a1 + v14, type metadata accessor for LocationComponentHeaderViewModel);
    v17 = type metadata accessor for LocationComponentHeaderViewModel(0);
    v18 = (char *)&loc_10008FC68 + 4 * byte_10099FA8D[swift_getEnumCaseMultiPayload(v16, v17)];
    __asm { BR              X10 }
  }
  v19 = type metadata accessor for LocationComponentContainerViewModel(0);
  *(_WORD *)(v15 + *(int *)(v19 + 24)) = *(_WORD *)(v16 + *(int *)(v19 + 24));
  v20 = *(int *)(v19 + 28);
  v21 = (_BYTE *)(v15 + v20);
  v22 = (_BYTE *)(v16 + v20);
  v23 = type metadata accessor for LocationComponentAction(0);
  v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23);
  v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
  if (v24)
  {
    if (!v25)
    {
      switch(swift_getEnumCaseMultiPayload(v22, v23))
      {
        case 0u:
          v26 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
          v27 = sub_1000BA294(&qword_100BC5FE8);
          v21[*(int *)(v27 + 48)] = v22[*(int *)(v27 + 48)];
          v28 = v21;
          v29 = v23;
          v30 = 0;
          goto LABEL_18;
        case 1u:
          v37 = type metadata accessor for WeatherMapOverlayKind(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v21, v22, v37);
          v28 = v21;
          v29 = v23;
          v30 = 1;
          goto LABEL_18;
        case 2u:
          v38 = type metadata accessor for DetailCondition(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v21, v22, v38);
          v39 = sub_1000BA294(&qword_100BC5FF8);
          v21[*(int *)(v39 + 48)] = v22[*(int *)(v39 + 48)];
          v28 = v21;
          v29 = v23;
          v30 = 2;
          goto LABEL_18;
        case 4u:
          *v21 = *v22;
          v40 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
          v41 = &v21[v40];
          v42 = &v22[v40];
          v43 = type metadata accessor for Location(0);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          v28 = v21;
          v29 = v23;
          v30 = 4;
LABEL_18:
          swift_storeEnumTagMultiPayload(v28, v29, v30);
          break;
        default:
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
      goto LABEL_25;
    }
    goto LABEL_9;
  }
  if (v25)
  {
    sub_100441DDC((uint64_t)v21, type metadata accessor for LocationComponentAction);
LABEL_9:
    v31 = *(_QWORD *)(sub_1000BA294(&qword_100BDA950) - 8);
LABEL_10:
    memcpy(v21, v22, *(_QWORD *)(v31 + 64));
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_100441DDC((uint64_t)v21, type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload(v22, v23))
    {
      case 0u:
        v32 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v21, v22, v32);
        v33 = sub_1000BA294(&qword_100BC5FE8);
        v21[*(int *)(v33 + 48)] = v22[*(int *)(v33 + 48)];
        v34 = v21;
        v35 = v23;
        v36 = 0;
        break;
      case 1u:
        v44 = type metadata accessor for WeatherMapOverlayKind(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v21, v22, v44);
        v34 = v21;
        v35 = v23;
        v36 = 1;
        break;
      case 2u:
        v45 = type metadata accessor for DetailCondition(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
        v46 = sub_1000BA294(&qword_100BC5FF8);
        v21[*(int *)(v46 + 48)] = v22[*(int *)(v46 + 48)];
        v34 = v21;
        v35 = v23;
        v36 = 2;
        break;
      case 4u:
        *v21 = *v22;
        v47 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
        v48 = &v21[v47];
        v49 = &v22[v47];
        v50 = type metadata accessor for Location(0);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
        v34 = v21;
        v35 = v23;
        v36 = 4;
        break;
      default:
        v31 = *(_QWORD *)(v23 - 8);
        goto LABEL_10;
    }
    swift_storeEnumTagMultiPayload(v34, v35, v36);
  }
LABEL_25:
  v51 = a3[7];
  v52 = (uint64_t *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  v54 = *v53;
  v55 = v53[1];
  v56 = *v52;
  *v52 = *v53;
  swift_unknownObjectRetain(v54);
  swift_unknownObjectRelease(v56);
  v52[1] = v55;
  v57 = a3[8];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  v60 = v59[1];
  v61 = v58[1];
  *v58 = *v59;
  v58[1] = v60;
  swift_retain();
  swift_release(v61);
  v62 = a3[9];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  *v63 = *v64;
  v65 = v63[1];
  v63[1] = v64[1];
  swift_retain();
  swift_release(v65);
  v66 = a3[10];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = *(_QWORD *)(a1 + v66);
  *(_QWORD *)(a1 + v66) = *(_QWORD *)(a2 + v66);
  swift_retain();
  swift_release(v69);
  v70 = *(_QWORD *)(v67 + 8);
  *(_QWORD *)(v67 + 8) = *(_QWORD *)(v68 + 8);
  swift_retain();
  swift_release(v70);
  v71 = *(_OWORD *)(v68 + 16);
  *(_BYTE *)(v67 + 32) = *(_BYTE *)(v68 + 32);
  *(_OWORD *)(v67 + 16) = v71;
  return a1;
}

double sub_1000915F4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  double result;
  _QWORD *v4;
  uint64_t v5;

  v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
    case 4u:
      goto LABEL_5;
    case 1u:
      swift_bridgeObjectRelease(v2[1]);
      swift_bridgeObjectRelease(v2[3]);
      swift_bridgeObjectRelease(v2[5]);
      swift_bridgeObjectRelease(v2[7]);
      v4 = v2 + 10;
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease(v2[1]);
      swift_bridgeObjectRelease(v2[3]);
      swift_bridgeObjectRelease(v2[5]);
      swift_bridgeObjectRelease(v2[7]);
      swift_bridgeObjectRelease(v2[9]);
      swift_bridgeObjectRelease(v2[11]);
      v4 = v2 + 14;
      goto LABEL_6;
    case 3u:
      v5 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
      v2 = (_QWORD *)((char *)v2
                    + *(int *)(type metadata accessor for LocationComponentHeaderViewModel.Description(0) + 20));
LABEL_5:
      swift_bridgeObjectRelease(v2[1]);
      swift_bridgeObjectRelease(v2[3]);
      v4 = v2 + 6;
LABEL_6:
      *(_QWORD *)&result = swift_bridgeObjectRelease(*v4).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentContainerView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE2078, (uint64_t)&nominal type descriptor for LocationComponentContainerView);
}

uint64_t sub_1000916FC(uint64_t a1, uint64_t a2)
{
  return swift_storeEnumTagMultiPayload(a1, a2, 0);
}

uint64_t sub_100091704@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 96) = a2;
  return KeyedEncodingContainer.encode(_:forKey:)(a1, v3 - 96, v2);
}

uint64_t sub_10009171C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

double sub_100091728()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 - 88)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for LocationComponentContainerBackgroundView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE2580, (uint64_t)&nominal type descriptor for LocationComponentContainerBackgroundView);
}

uint64_t type metadata accessor for LocationComponentContainerContentView(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE26D0, (uint64_t)&nominal type descriptor for LocationComponentContainerContentView);
}

void sub_10009176C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[38];

  sub_1000986AC();
  v2 = v1;
  v4 = v3;
  v19[1] = sub_1000C5BE4();
  sub_1000B42B0();
  __chkstk_darwin(v5);
  sub_100098728();
  v19[2] = v7 - v6;
  v8 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  v10 = __chkstk_darwin(v9);
  v11 = __chkstk_darwin(v10);
  v19[3] = (char *)v19 - v12;
  v13 = __chkstk_darwin(v11);
  v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  sub_1000BA294(&qword_100BCF0B0);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_1000BCED8();
  v17 = v0 + *(int *)(v16 + 48);
  sub_100091B54(v4, v0);
  sub_100091B54(v2, v17);
  v18 = (char *)sub_1000918C4 + 4 * byte_10098BDA3[swift_getEnumCaseMultiPayload(v0, v8)];
  __asm { BR              X10 }
}

void sub_1000918C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  sub_100091B54(v1, v2);
  v3 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)v2;
  *(_OWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v2 + 48);
  if (sub_1000BA678())
  {
    sub_100091E10(v0 + 32);
    sub_100258820(v1);
  }
  else
  {
    v4 = sub_1000C4600();
    sub_100092144(v4);
    sub_100091E10(v0 + 32);
    sub_100091E10(v0 + 160);
    sub_1000D8E58(v5, type metadata accessor for LocationComponentHeaderViewModel);
  }
  sub_100098640();
}

uint64_t sub_100091B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentHeaderViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100091B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_100091BE8 + 4 * byte_10098BD8A[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_100091BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 8) = v3;
  v4 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

void sub_100091E10(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  sub_1000986C4();
  sub_10003BC58();
  sub_100079F70();
}

uint64_t type metadata accessor for LocationComponentHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_100C17540;
  if (!qword_100C17540)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LocationComponentHeaderView);
  return result;
}

uint64_t sub_100091E80(_QWORD *a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v20)(char *, uint64_t);

  v4 = type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload(a1, v4))
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease(a1[1]);
      swift_bridgeObjectRelease(a1[3]);
      v5 = a1 + 6;
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease(a1[1]);
      swift_bridgeObjectRelease(a1[3]);
      swift_bridgeObjectRelease(a1[5]);
      swift_bridgeObjectRelease(a1[7]);
      v5 = a1 + 10;
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease(a1[1]);
      swift_bridgeObjectRelease(a1[3]);
      swift_bridgeObjectRelease(a1[5]);
      swift_bridgeObjectRelease(a1[7]);
      swift_bridgeObjectRelease(a1[9]);
      swift_bridgeObjectRelease(a1[11]);
      v5 = a1 + 14;
      goto LABEL_6;
    case 3u:
      v6 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v7 = (_QWORD *)((char *)a1
                    + *(int *)(type metadata accessor for LocationComponentHeaderViewModel.Description(0) + 20));
      swift_bridgeObjectRelease(v7[1]);
      swift_bridgeObjectRelease(v7[3]);
      v5 = v7 + 6;
LABEL_6:
      swift_bridgeObjectRelease(*v5);
      break;
    default:
      break;
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[5]), *((_BYTE *)a1 + a2[5] + 8));
  v8 = (_QWORD *)((char *)a1 + a2[6]);
  v9 = sub_1000BA294(&qword_100BC2908);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)((char *)a1 + a2[7]);
  v12 = sub_1000BA294(&qword_100BC37D8);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[8]), *((_BYTE *)a1 + a2[8] + 8));
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[9]), *((_BYTE *)a1 + a2[9] + 8));
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[10]), *((_BYTE *)a1 + a2[10] + 8));
  v14 = (_QWORD *)((char *)a1 + a2[11]);
  v15 = sub_1000BA294(&qword_100BC68C8);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  sub_1000D31DC(*(_QWORD *)((char *)a1 + a2[12]), *((unsigned __int8 *)a1 + a2[12] + 8), *((_BYTE *)a1 + a2[12] + 9));
  v17 = (char *)a1 + a2[13];
  v18 = sub_1000BA294(&qword_100BC37F8);
  v20 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v20(v17, v18);
  return ((uint64_t (*)(char *, uint64_t))v20)((char *)a1 + a2[14], v18);
}

void sub_100092144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1000BBE30(a1);
  v7 = v7 && v4 == v6;
  if (v7 || (sub_100099264(v3, v4, v5, v6) & 1) != 0)
  {
    v8 = *(_QWORD *)(v2 + 16);
    v9 = *(_QWORD *)(v2 + 24);
    v10 = *(_QWORD *)(v1 + 16);
    v11 = *(_QWORD *)(v1 + 24);
    v12 = v8 == v10 && v9 == v11;
    if ((v12 || (sub_100099264(v8, v9, v10, v11) & 1) != 0)
      && ((*(unsigned __int8 *)(v2 + 32) ^ *(unsigned __int8 *)(v1 + 32)) & 1) == 0)
    {
      v13 = *(_QWORD *)(v2 + 48);
      v14 = *(_QWORD *)(v1 + 48);
      if (v13)
      {
        if (v14)
        {
          v15 = *(_QWORD *)(v2 + 40);
          v16 = *(_QWORD *)(v1 + 40);
          if (v15 != v16 || v13 != v14)
            sub_100099264(v15, v13, v16, v14);
        }
      }
    }
  }
  sub_10004A298();
}

uint64_t sub_1000921E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t HourPrecipitationChartViewModel;
  void (*v90)(char *, char *, uint64_t, __n128);
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  int *v149;
  void (*v150)(char *, char *, uint64_t, __n128);
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t, __n128);
  __n128 v175;
  int *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t, __n128);
  __n128 v200;
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  void (*v208)(char *, char *, uint64_t, __n128);
  __n128 v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  _QWORD *v226;
  uint64_t v227;
  int EnumCaseMultiPayload;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  _QWORD *v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  __int128 v270;
  void (*v272)(char *, char *, uint64_t, __n128);
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(char *, char *, uint64_t, __n128);
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  int *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  int *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  int *v311;
  int *v312;
  int *v313;
  int *v314;
  int *v315;
  int *v316;

  v6 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
    *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
    v7 = *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = 1;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, v6, v11);
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_10008D47C(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_10008D47C(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  v22 = a3[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v24, v25))
  {
    case 0u:
      *v23 = *v24;
      *(_OWORD *)(v23 + 1) = *(_OWORD *)(v24 + 1);
      *(_OWORD *)(v23 + 3) = *(_OWORD *)(v24 + 3);
      v26 = v24[5];
      v27 = v24[6];
      v23[5] = v26;
      v23[6] = v27;
      v29 = v24[7];
      v28 = v24[8];
      v23[7] = v29;
      v23[8] = v28;
      v31 = v24[9];
      v30 = v24[10];
      v23[9] = v31;
      v23[10] = v30;
      v32 = v24[11];
      v23[11] = v32;
      *((_WORD *)v23 + 48) = *((_WORD *)v24 + 48);
      v33 = v24[13];
      v23[13] = v33;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v33);
      v34 = v23;
      v35 = v25;
      v36 = 0;
      goto LABEL_63;
    case 1u:
      v37 = *v24;
      *v23 = *v24;
      v38 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v39 = v38[5];
      v40 = (char *)v23 + v39;
      v301 = v25;
      v41 = (char *)v24 + v39;
      swift_bridgeObjectRetain(v37);
      v42 = sub_1000BA294(&qword_100BC4E68);
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      v43(v40, v41, v42);
      v43((char *)v23 + v38[6], (char *)v24 + v38[6], v42);
      v43((char *)v23 + v38[7], (char *)v24 + v38[7], v42);
      v44 = v38[8];
      v45 = (_QWORD *)((char *)v23 + v44);
      v46 = (_QWORD *)((char *)v24 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = v38[9];
      v49 = (_QWORD *)((char *)v23 + v48);
      v50 = (_QWORD *)((char *)v24 + v48);
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRetain(v51);
      v34 = v23;
      v35 = v301;
      v36 = 1;
      goto LABEL_63;
    case 2u:
      v302 = v25;
      v310 = a3;
      v52 = v24[1];
      *v23 = *v24;
      v23[1] = v52;
      v53 = v24[3];
      v23[2] = v24[2];
      v23[3] = v53;
      v54 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v55 = *(int *)(v54 + 24);
      v56 = (_QWORD *)((char *)v23 + v55);
      v57 = (_QWORD *)((char *)v24 + v55);
      v58 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v53);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        v59 = sub_1000BA294(&qword_100BC3360);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v169 = v57[1];
        *v56 = *v57;
        v56[1] = v169;
        v170 = *(int *)(v58 + 20);
        v171 = (char *)v56 + v170;
        v172 = (char *)v57 + v170;
        v292 = (uint64_t)v56;
        v299 = v54;
        v173 = type metadata accessor for TemperatureScaleConfiguration(0);
        v174 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v173 - 8) + 16);
        v175 = swift_bridgeObjectRetain(v169);
        v174(v171, v172, v173, v175);
        v54 = v299;
        v176 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v171[v176[5]] = *(_QWORD *)&v172[v176[5]];
        *(_QWORD *)&v171[v176[6]] = *(_QWORD *)&v172[v176[6]];
        *(_QWORD *)&v171[v176[7]] = *(_QWORD *)&v172[v176[7]];
        v177 = v176[8];
        v178 = &v171[v177];
        v179 = &v172[v177];
        v181 = *(_QWORD *)v179;
        v180 = *((_QWORD *)v179 + 1);
        *(_QWORD *)v178 = v181;
        *((_QWORD *)v178 + 1) = v180;
        v171[v176[9]] = v172[v176[9]];
        swift_bridgeObjectRetain(v180);
        _s7Weather24LocationCompositionStateOwst_0(v292, 0, 1, v58);
      }
      a3 = v310;
      v182 = *(int *)(v54 + 28);
      v183 = (_QWORD *)((char *)v23 + v182);
      v184 = (_QWORD *)((char *)v24 + v182);
      v185 = v184[1];
      *v183 = *v184;
      v183[1] = v185;
      swift_bridgeObjectRetain(v185);
      v34 = v23;
      v35 = v302;
      v36 = 2;
      goto LABEL_63;
    case 3u:
      v60 = *v24;
      *v23 = *v24;
      swift_bridgeObjectRetain(v60);
      v34 = v23;
      v35 = v25;
      v36 = 3;
      goto LABEL_63;
    case 4u:
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v61 = v24[2];
      v23[2] = v61;
      swift_bridgeObjectRetain(v61);
      v34 = v23;
      v35 = v25;
      v36 = 4;
      goto LABEL_63;
    case 5u:
      v311 = a3;
      v62 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v23, v24, v62);
      v63 = (int *)type metadata accessor for MapComponentViewModel(0);
      v64 = v63[5];
      v65 = (char *)v23 + v64;
      v66 = (char *)v24 + v64;
      v67 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
      v68 = v63[6];
      v69 = (_QWORD *)((char *)v23 + v68);
      v70 = (_QWORD *)((char *)v24 + v68);
      v71 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
      {
        v72 = sub_1000BA294(&qword_100BC3460);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        a3 = v311;
        goto LABEL_62;
      }
      v293 = v63;
      v300 = (int *)v71;
      v309 = v25;
      v186 = v70[1];
      *v69 = *v70;
      v69[1] = v186;
      v187 = *(int *)(v71 + 20);
      v188 = v69;
      v189 = (char *)v69 + v187;
      v190 = (char *)v70 + v187;
      v191 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v186);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v191))
      {
        v192 = sub_1000BA294(&qword_100BC3340);
        memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v189, v190, v191);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v191);
      }
      v214 = v300[6];
      v215 = (char *)v188 + v214;
      v216 = (char *)v70 + v214;
      v217 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v215, v216, v217);
      v218 = v300[7];
      v219 = (char *)v188 + v218;
      v220 = (char *)v70 + v218;
      v221 = sub_1000BA294(&qword_100BC3348);
      v63 = v293;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221))
      {
        v222 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
      }
      else
      {
        v223 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v219, v220, v223);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v221);
      }
      v224 = v300[8];
      v225 = (_QWORD *)((char *)v188 + v224);
      v226 = (_QWORD *)((char *)v70 + v224);
      v227 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v226, v227);
      if (EnumCaseMultiPayload == 1)
      {
        v233 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v225, v226, v233);
        v230 = v225;
        v231 = v227;
        v232 = 1;
        goto LABEL_50;
      }
      if (!EnumCaseMultiPayload)
      {
        v229 = v226[1];
        *v225 = *v226;
        v225[1] = v229;
        swift_bridgeObjectRetain(v229);
        v230 = v225;
        v231 = v227;
        v232 = 0;
LABEL_50:
        swift_storeEnumTagMultiPayload(v230, v231, v232);
        goto LABEL_52;
      }
      memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
LABEL_52:
      v234 = (uint64_t)v300;
      v25 = v309;
      v235 = v300[9];
      v287 = (uint64_t)v188;
      v236 = (char *)v188 + v235;
      v237 = (char *)v70 + v235;
      v238 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
      {
        v239 = sub_1000BA294(&qword_100BC3350);
        memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
        a3 = v311;
        v240 = v287;
      }
      else
      {
        v283 = v238;
        v241 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v241))
        {
          v242 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v236, v237, v241);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v241);
        }
        v240 = v287;
        v243 = *(int *)(v283 + 20);
        v288 = (uint64_t)v236;
        v244 = &v236[v243];
        v245 = &v237[v243];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v237[v243], 1, v241))
        {
          v246 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v244, v245, v241);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v244, 0, 1, v241);
        }
        a3 = v311;
        _s7Weather24LocationCompositionStateOwst_0(v288, 0, 1, v283);
        v234 = (uint64_t)v300;
        v25 = v309;
      }
      _s7Weather24LocationCompositionStateOwst_0(v240, 0, 1, v234);
LABEL_62:
      v247 = v63[7];
      v248 = (_QWORD *)((char *)v23 + v247);
      v249 = (_QWORD *)((char *)v24 + v247);
      v250 = v249[1];
      *v248 = *v249;
      v248[1] = v250;
      swift_bridgeObjectRetain(v250);
      v34 = v23;
      v35 = v25;
      v36 = 5;
LABEL_63:
      swift_storeEnumTagMultiPayload(v34, v35, v36);
LABEL_64:
      v251 = a3[8];
      v252 = a1 + v251;
      v253 = a2 + v251;
      v254 = *(_QWORD *)v253;
      v255 = *(_BYTE *)(v253 + 8);
      sub_10008D47C(*(_QWORD *)v253, v255);
      *(_QWORD *)v252 = v254;
      *(_BYTE *)(v252 + 8) = v255;
      v256 = a3[9];
      v257 = (_QWORD *)(a1 + v256);
      v258 = (_QWORD *)(a2 + v256);
      v259 = sub_1000BA294(&qword_100BE21F0);
      if (swift_getEnumCaseMultiPayload(v258, v259) == 1)
      {
        v260 = type metadata accessor for LocationComponentHeaderViewModel(0);
        v261 = (char *)&loc_10009334C + 4 * byte_10099F96E[swift_getEnumCaseMultiPayload(v258, v260)];
        __asm { BR              X10 }
      }
      *v257 = *v258;
      swift_retain();
      swift_storeEnumTagMultiPayload(v257, v259, 0);
      v262 = a3[11];
      *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
      v263 = a1 + v262;
      v264 = a2 + v262;
      v265 = type metadata accessor for Location.Identifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(v263, v264, v265);
      v266 = a3[13];
      *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
      *(_QWORD *)(a1 + v266) = *(_QWORD *)(a2 + v266);
      v267 = a3[14];
      v268 = a1 + v267;
      v269 = a2 + v267;
      v270 = *(_OWORD *)(v269 + 16);
      *(_OWORD *)v268 = *(_OWORD *)v269;
      *(_OWORD *)(v268 + 16) = v270;
      *(_BYTE *)(v268 + 32) = *(_BYTE *)(v269 + 32);
      swift_retain();
      return a1;
    case 6u:
      v73 = v24[1];
      *v23 = *v24;
      v23[1] = v73;
      v74 = *((unsigned __int8 *)v24 + 32);
      swift_bridgeObjectRetain(v73);
      v312 = a3;
      v303 = v25;
      if (v74 == 255)
      {
        *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
        *((_BYTE *)v23 + 32) = *((_BYTE *)v24 + 32);
      }
      else
      {
        v75 = v24[2];
        v76 = v24[3];
        sub_100121DEC(v75, v76, v74);
        v23[2] = v75;
        v23[3] = v76;
        *((_BYTE *)v23 + 32) = v74;
      }
      v193 = v24[5];
      v23[5] = v193;
      v194 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v195 = v194[7];
      v196 = (char *)v23 + v195;
      v197 = (char *)v24 + v195;
      v198 = type metadata accessor for Date(0);
      v199 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v198 - 8) + 16);
      v200 = swift_bridgeObjectRetain(v193);
      v199(v196, v197, v198, v200);
      *((_BYTE *)v23 + v194[8]) = *((_BYTE *)v24 + v194[8]);
      *(_QWORD *)((char *)v23 + v194[9]) = *(_QWORD *)((char *)v24 + v194[9]);
      swift_storeEnumTagMultiPayload(v23, v303, 6);
      a3 = v312;
      goto LABEL_64;
    case 7u:
      v77 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v24, v77) == 1)
      {
        v294 = v77;
        v304 = v25;
        v313 = a3;
        v78 = v24[1];
        *v23 = *v24;
        v23[1] = v78;
        v79 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v80 = v79[5];
        v81 = (char *)v23 + v80;
        v82 = (char *)v24 + v80;
        v83 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v78);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          v84 = sub_1000BA294(&qword_100BD4280);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        v201 = v79[6];
        v202 = (_QWORD *)((char *)v23 + v201);
        v203 = (_QWORD *)((char *)v24 + v201);
        v204 = v203[1];
        *v202 = *v203;
        v202[1] = v204;
        v205 = v79[7];
        v206 = (char *)v23 + v205;
        v207 = (char *)v24 + v205;
        v208 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v83 - 8) + 16);
        v209 = swift_bridgeObjectRetain(v204);
        v208(v206, v207, v83, v209);
        v210 = v79[8];
        v211 = (char *)v23 + v210;
        v212 = (char *)v24 + v210;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24 + v210, 1, v83))
        {
          v213 = sub_1000BA294(&qword_100BD4280);
          memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v208)(v211, v212, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, v83);
        }
        v25 = v304;
        *((_BYTE *)v23 + v79[9]) = *((_BYTE *)v24 + v79[9]);
        swift_storeEnumTagMultiPayload(v23, v294, 1);
        a3 = v313;
      }
      else
      {
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      v34 = v23;
      v35 = v25;
      v36 = 7;
      goto LABEL_63;
    case 8u:
      v85 = v24[1];
      *v23 = *v24;
      v23[1] = v85;
      v86 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v87 = (char *)v23 + v86;
      v88 = (char *)v24 + v86;
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      v90 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                   + 16);
      v91 = swift_bridgeObjectRetain(v85);
      v90(v87, v88, HourPrecipitationChartViewModel, v91);
      v34 = v23;
      v35 = v25;
      v36 = 8;
      goto LABEL_63;
    case 9u:
      v92 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v23, v24, v92);
      v93 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      *((_BYTE *)v23 + *(int *)(v93 + 20)) = *((_BYTE *)v24 + *(int *)(v93 + 20));
      v34 = v23;
      v35 = v25;
      v36 = 9;
      goto LABEL_63;
    case 0xAu:
      v94 = v24[1];
      *v23 = *v24;
      v23[1] = v94;
      v95 = v24[3];
      v23[2] = v24[2];
      v23[3] = v95;
      v96 = v24[5];
      v23[4] = v24[4];
      v23[5] = v96;
      v97 = v24[7];
      v23[6] = v24[6];
      v23[7] = v97;
      v98 = v25;
      v99 = v24[9];
      v23[8] = v24[8];
      v23[9] = v99;
      v100 = v24[10];
      v101 = v24[11];
      v23[10] = v100;
      v23[11] = v101;
      swift_bridgeObjectRetain(v94);
      swift_bridgeObjectRetain(v95);
      swift_bridgeObjectRetain(v96);
      swift_bridgeObjectRetain(v97);
      swift_bridgeObjectRetain(v99);
      swift_bridgeObjectRetain(v101);
      v34 = v23;
      v35 = v98;
      v36 = 10;
      goto LABEL_63;
    case 0xBu:
      v102 = type metadata accessor for PressureTrend(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v23, v24, v102);
      v103 = (int *)type metadata accessor for PressureComponentViewModel(0);
      v104 = v103[5];
      v105 = (_QWORD *)((char *)v23 + v104);
      v106 = (_QWORD *)((char *)v24 + v104);
      v108 = *v106;
      v107 = v106[1];
      *v105 = v108;
      v105[1] = v107;
      v109 = v103[6];
      v110 = (_QWORD *)((char *)v23 + v109);
      v111 = (_QWORD *)((char *)v24 + v109);
      v112 = v111[1];
      *v110 = *v111;
      v110[1] = v112;
      v113 = v103[7];
      v114 = (_QWORD *)((char *)v23 + v113);
      v115 = (_QWORD *)((char *)v24 + v113);
      v116 = v115[1];
      *v114 = *v115;
      v114[1] = v116;
      *(_QWORD *)((char *)v23 + v103[8]) = *(_QWORD *)((char *)v24 + v103[8]);
      v117 = v103[9];
      v118 = (_QWORD *)((char *)v23 + v117);
      v119 = (_QWORD *)((char *)v24 + v117);
      v120 = v119[1];
      *v118 = *v119;
      v118[1] = v120;
      swift_bridgeObjectRetain(v107);
      swift_bridgeObjectRetain(v112);
      swift_bridgeObjectRetain(v116);
      swift_bridgeObjectRetain(v120);
      v34 = v23;
      v35 = v25;
      v36 = 11;
      goto LABEL_63;
    case 0xDu:
      v121 = v24[1];
      *v23 = *v24;
      v23[1] = v121;
      v122 = v24[3];
      v23[2] = v24[2];
      v23[3] = v122;
      v124 = v24[4];
      v123 = v24[5];
      v23[4] = v124;
      v23[5] = v123;
      v305 = v25;
      v126 = v24[6];
      v125 = v24[7];
      v23[6] = v126;
      v23[7] = v125;
      v314 = a3;
      v127 = v24[8];
      v23[8] = v127;
      v128 = type metadata accessor for SevereAlertComponentViewModel(0);
      v129 = *(int *)(v128 + 36);
      v289 = (char *)v23 + v129;
      v295 = v128;
      v284 = (char *)v24 + v129;
      v130 = type metadata accessor for WeatherAlert.Prominence(0);
      v280 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v130 - 8) + 16);
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRetain(v122);
      swift_bridgeObjectRetain(v124);
      swift_bridgeObjectRetain(v126);
      v131 = v127;
      a3 = v314;
      v132 = swift_bridgeObjectRetain(v131);
      v280(v289, v284, v130, v132);
      v35 = v305;
      *(_QWORD *)((char *)v23 + *(int *)(v295 + 40)) = *(_QWORD *)((char *)v24 + *(int *)(v295 + 40));
      v34 = v23;
      v36 = 13;
      goto LABEL_63;
    case 0xEu:
      v133 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v23, v24, v133);
      v34 = v23;
      v35 = v25;
      v36 = 14;
      goto LABEL_63;
    case 0xFu:
      v134 = v24[1];
      *v23 = *v24;
      v23[1] = v134;
      v135 = v24[3];
      v23[2] = v24[2];
      v23[3] = v135;
      v136 = v24[5];
      v23[4] = v24[4];
      v23[5] = v136;
      v137 = v24[7];
      v23[6] = v24[6];
      v23[7] = v137;
      v138 = v24[9];
      v23[8] = v24[8];
      v23[9] = v138;
      v306 = v25;
      v139 = v24[11];
      v23[10] = v24[10];
      v23[11] = v139;
      v315 = a3;
      v140 = v24[13];
      v23[12] = v24[12];
      v23[13] = v140;
      v296 = v24[15];
      v23[14] = v24[14];
      v23[15] = v296;
      v290 = v24[17];
      v23[16] = v24[16];
      v23[17] = v290;
      v285 = v24[19];
      v23[18] = v24[18];
      v23[19] = v285;
      v281 = v24[21];
      v23[20] = v24[20];
      v23[21] = v281;
      v278 = v24[23];
      v23[22] = v24[22];
      v23[23] = v278;
      v141 = v24[24];
      v142 = v24[25];
      v23[24] = v141;
      v23[25] = v142;
      swift_bridgeObjectRetain(v134);
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRetain(v136);
      swift_bridgeObjectRetain(v137);
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRetain(v139);
      v143 = v140;
      a3 = v315;
      swift_bridgeObjectRetain(v143);
      swift_bridgeObjectRetain(v296);
      swift_bridgeObjectRetain(v290);
      swift_bridgeObjectRetain(v285);
      swift_bridgeObjectRetain(v281);
      swift_bridgeObjectRetain(v278);
      swift_bridgeObjectRetain(v142);
      v34 = v23;
      v35 = v306;
      v36 = 15;
      goto LABEL_63;
    case 0x10u:
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v144 = v24[3];
      v23[2] = v24[2];
      v23[3] = v144;
      v145 = type metadata accessor for UVIndexComponentViewModel(0);
      v146 = *(int *)(v145 + 28);
      v297 = (char *)v23 + v146;
      v147 = (char *)v24 + v146;
      v307 = v25;
      v148 = type metadata accessor for WeatherDescription(0);
      v149 = a3;
      v150 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v148 - 8) + 16);
      v151 = swift_bridgeObjectRetain(v144);
      v150(v297, v147, v148, v151);
      a3 = v149;
      v152 = *(int *)(v145 + 32);
      v153 = *(_QWORD *)((char *)v24 + v152);
      *(_QWORD *)((char *)v23 + v152) = v153;
      swift_bridgeObjectRetain(v153);
      v34 = v23;
      v35 = v307;
      v36 = 16;
      goto LABEL_63;
    case 0x11u:
      v154 = v24[1];
      *v23 = *v24;
      v23[1] = v154;
      v155 = v24[3];
      v23[2] = v24[2];
      v23[3] = v155;
      v156 = v24[5];
      v23[4] = v24[4];
      v23[5] = v156;
      swift_bridgeObjectRetain(v154);
      swift_bridgeObjectRetain(v155);
      swift_bridgeObjectRetain(v156);
      v34 = v23;
      v35 = v25;
      v36 = 17;
      goto LABEL_63;
    case 0x12u:
      v157 = v24[1];
      *v23 = *v24;
      v23[1] = v157;
      v158 = v24[3];
      v23[2] = v24[2];
      v23[3] = v158;
      v308 = v25;
      v159 = v24[5];
      v23[4] = v24[4];
      v23[5] = v159;
      v316 = a3;
      v160 = v24[7];
      v23[6] = v24[6];
      v23[7] = v160;
      v161 = v24[9];
      v23[8] = v24[8];
      v23[9] = v161;
      v291 = v24[11];
      v23[10] = v24[10];
      v23[11] = v291;
      v286 = v24[13];
      v23[12] = v24[12];
      v23[13] = v286;
      v282 = v24[15];
      v23[14] = v24[14];
      v23[15] = v282;
      v279 = v24[17];
      v23[16] = v24[16];
      v23[17] = v279;
      v277 = v24[19];
      v23[18] = v24[18];
      v23[19] = v277;
      v162 = v24[21];
      v23[20] = v24[20];
      v23[21] = v162;
      *((_OWORD *)v23 + 11) = *((_OWORD *)v24 + 11);
      v275 = v24[24];
      v276 = v162;
      v23[24] = v275;
      v298 = type metadata accessor for WindComponentViewModel(0);
      v163 = *(int *)(v298 + 68);
      v273 = (char *)v24 + v163;
      v274 = (char *)v23 + v163;
      v164 = type metadata accessor for WindComponentCompassViewModel(0);
      v272 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v164 - 8) + 16);
      swift_bridgeObjectRetain(v157);
      swift_bridgeObjectRetain(v158);
      swift_bridgeObjectRetain(v159);
      v165 = v160;
      a3 = v316;
      swift_bridgeObjectRetain(v165);
      swift_bridgeObjectRetain(v161);
      swift_bridgeObjectRetain(v291);
      swift_bridgeObjectRetain(v286);
      swift_bridgeObjectRetain(v282);
      swift_bridgeObjectRetain(v279);
      swift_bridgeObjectRetain(v277);
      swift_bridgeObjectRetain(v276);
      v166 = swift_bridgeObjectRetain(v275);
      v272(v274, v273, v164, v166);
      v167 = *(int *)(v298 + 72);
      v168 = *(_QWORD *)((char *)v24 + v167);
      *(_QWORD *)((char *)v23 + v167) = v168;
      swift_bridgeObjectRetain(v168);
      v34 = v23;
      v35 = v308;
      v36 = 18;
      goto LABEL_63;
    default:
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      goto LABEL_64;
  }
}

uint64_t type metadata accessor for LocationComponentBackground(uint64_t a1)
{
  return sub_100098190(a1, qword_100BE3668, (uint64_t)&nominal type descriptor for LocationComponentBackground);
}

uint64_t sub_1000935C4(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
  sub_1000B15F8(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  swift_release(*(_QWORD *)(a1 + a2[11]));
  v5 = (_QWORD *)(a1 + a2[12]);
  v6 = sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v5, v6) != 1)
    return swift_release(*v5);
  v7 = type metadata accessor for ForegroundEffect(0);
  result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  return result;
}

uint64_t sub_1000936B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  swift_retain();
  sub_10008D47C(v20, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)v24;
  v26 = *(_BYTE *)(v24 + 8);
  sub_10008D47C(*(_QWORD *)v24, v26);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v26;
  v27 = a3[11];
  v28 = a3[12];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (uint64_t *)(a2 + v27);
  v31 = *v30;
  v32 = v30[1];
  *v29 = v31;
  v29[1] = v32;
  v33 = (_QWORD *)(a1 + v28);
  v34 = (_QWORD *)(a2 + v28);
  swift_retain();
  v35 = sub_1000BA294(&qword_100BD86C0);
  if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
  {
    v36 = type metadata accessor for ForegroundEffect(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
    {
      v37 = sub_1000BA294(&qword_100BC5B30);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v38 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v38 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
    }
  }
  else
  {
    *v33 = *v34;
    swift_retain();
    v38 = 0;
  }
  swift_storeEnumTagMultiPayload(v33, v35, v38);
  return a1;
}

uint64_t sub_100093884(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  int v36;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  void (*v43)(char *, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  v4 = sub_1000BA294(&qword_100BC37E0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = (char *)a1 + *(int *)(type metadata accessor for DisplayMetrics(0) + 36);
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*a1);
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[5]), *((_BYTE *)a1 + a2[5] + 8));
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[6]), *((_BYTE *)a1 + a2[6] + 8));
  v7 = (char *)a1 + a2[7];
  v8 = type metadata accessor for LocationComponentViewModel(0);
  switch(swift_getEnumCaseMultiPayload(v7, v8))
  {
    case 0u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 5));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 7));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 9));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 11));
      v9 = *((_QWORD *)v7 + 13);
      goto LABEL_48;
    case 1u:
      swift_bridgeObjectRelease(*(_QWORD *)v7);
      v10 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v11 = &v7[v10[5]];
      v12 = sub_1000BA294(&qword_100BC4E68);
      v13 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
      v13(v11, v12);
      v13(&v7[v10[6]], v12);
      v13(&v7[v10[7]], v12);
      v14 = v10[8];
      goto LABEL_31;
    case 2u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      v15 = (int *)type metadata accessor for FeelsLikeComponentViewModel(0);
      v16 = (uint64_t)&v7[v15[6]];
      v17 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
        v18 = v16 + *(int *)(v17 + 20);
        v19 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        v20 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease(*(_QWORD *)(v18 + *(int *)(v20 + 32) + 8));
      }
      goto LABEL_46;
    case 3u:
      v9 = *(_QWORD *)v7;
      goto LABEL_48;
    case 4u:
      v9 = *((_QWORD *)v7 + 2);
      goto LABEL_48;
    case 5u:
      v21 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v7, v21);
      v15 = (int *)type metadata accessor for MapComponentViewModel(0);
      v22 = &v7[v15[5]];
      v23 = type metadata accessor for Location(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v24 = (uint64_t)&v7[v15[6]];
      v25 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, (uint64_t)v25))
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8));
        v26 = v24 + v25[5];
        v27 = type metadata accessor for Locale(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
        v28 = v24 + v25[6];
        v29 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
        v30 = v24 + v25[7];
        v31 = sub_1000BA294(&qword_100BC3348);
        if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31))
        {
          v32 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v30, v32);
        }
        v33 = v24 + v25[8];
        v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v34);
        if (EnumCaseMultiPayload == 1)
        {
          v54 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v33, v54);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease(*(_QWORD *)(v33 + 8));
        }
        v55 = v24 + v25[9];
        v56 = type metadata accessor for WeatherDataOverrides(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v56))
        {
          v57 = type metadata accessor for Date(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v57))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);
          v58 = v55 + *(int *)(v56 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v58, 1, v57))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v58, v57);
        }
      }
LABEL_46:
      v46 = v15[7];
      goto LABEL_47;
    case 6u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      v36 = v7[32];
      if (v36 != 255)
        sub_100121E04(*((_QWORD *)v7 + 2), *((_QWORD *)v7 + 3), v36);
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 5));
      v7 += *(int *)(type metadata accessor for MoonComponentViewModel(0) + 28);
      HourPrecipitationChartViewModel = type metadata accessor for Date(0);
      goto LABEL_34;
    case 7u:
      v38 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v7, v38) == 1)
      {
        swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
        v39 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v40 = (uint64_t)&v7[v39[5]];
        v41 = type metadata accessor for URL(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v41))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        v42 = swift_bridgeObjectRelease(*(_QWORD *)&v7[v39[6] + 8]);
        v43 = *(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v41 - 8) + 8);
        v43(&v7[v39[7]], v41, v42);
        v44 = (uint64_t)&v7[v39[8]];
        if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v41))
          ((void (*)(uint64_t, uint64_t))v43)(v44, v41);
      }
      break;
    case 8u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      v7 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      goto LABEL_34;
    case 9u:
      HourPrecipitationChartViewModel = type metadata accessor for Location(0);
      goto LABEL_34;
    case 0xAu:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 5));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 7));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 9));
      v9 = *((_QWORD *)v7 + 11);
      goto LABEL_48;
    case 0xBu:
      v45 = type metadata accessor for PressureTrend(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v7, v45);
      v10 = (int *)type metadata accessor for PressureComponentViewModel(0);
      swift_bridgeObjectRelease(*(_QWORD *)&v7[v10[5] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v7[v10[6] + 8]);
      v14 = v10[7];
LABEL_31:
      swift_bridgeObjectRelease(*(_QWORD *)&v7[v14 + 8]);
      v46 = v10[9];
LABEL_47:
      v9 = *(_QWORD *)&v7[v46 + 8];
      goto LABEL_48;
    case 0xDu:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 4));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 6));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 8));
      v7 += *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 36);
      HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence(0);
      goto LABEL_34;
    case 0xEu:
      HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel(0);
LABEL_34:
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8))(v7, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 5));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 7));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 9));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 11));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 13));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 15));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 17));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 19));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 21));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 23));
      v9 = *((_QWORD *)v7 + 25);
      goto LABEL_48;
    case 0x10u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      v47 = type metadata accessor for UVIndexComponentViewModel(0);
      v48 = &v7[*(int *)(v47 + 28)];
      v49 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      v50 = *(int *)(v47 + 32);
      goto LABEL_39;
    case 0x11u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      v9 = *((_QWORD *)v7 + 5);
      goto LABEL_48;
    case 0x12u:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 5));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 7));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 9));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 11));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 13));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 15));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 17));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 19));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 21));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 24));
      v51 = type metadata accessor for WindComponentViewModel(0);
      v52 = &v7[*(int *)(v51 + 68)];
      v53 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
      v50 = *(int *)(v51 + 72);
LABEL_39:
      v9 = *(_QWORD *)&v7[v50];
LABEL_48:
      swift_bridgeObjectRelease(v9);
      break;
    default:
      break;
  }
  sub_1000B15F8(*(_QWORD *)((char *)a1 + a2[8]), *((_BYTE *)a1 + a2[8] + 8));
  v59 = (_QWORD *)((char *)a1 + a2[9]);
  v60 = sub_1000BA294(&qword_100BE21F0);
  if (swift_getEnumCaseMultiPayload(v59, v60) == 1)
  {
    v61 = type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload(v59, v61))
    {
      case 0u:
      case 4u:
        goto LABEL_55;
      case 1u:
        swift_bridgeObjectRelease(v59[1]);
        swift_bridgeObjectRelease(v59[3]);
        swift_bridgeObjectRelease(v59[5]);
        swift_bridgeObjectRelease(v59[7]);
        v62 = v59[10];
        goto LABEL_56;
      case 2u:
        swift_bridgeObjectRelease(v59[1]);
        swift_bridgeObjectRelease(v59[3]);
        swift_bridgeObjectRelease(v59[5]);
        swift_bridgeObjectRelease(v59[7]);
        swift_bridgeObjectRelease(v59[9]);
        swift_bridgeObjectRelease(v59[11]);
        v62 = v59[14];
        goto LABEL_56;
      case 3u:
        v63 = type metadata accessor for WeatherDescription(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v59, v63);
        v59 = (_QWORD *)((char *)v59
                       + *(int *)(type metadata accessor for LocationComponentHeaderViewModel.Description(0) + 20));
LABEL_55:
        swift_bridgeObjectRelease(v59[1]);
        swift_bridgeObjectRelease(v59[3]);
        v62 = v59[6];
LABEL_56:
        swift_bridgeObjectRelease(v62);
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release(*v59);
  }
  v64 = (char *)a1 + a2[11];
  v65 = type metadata accessor for Location.Identifier(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
  return swift_release(*(_QWORD *)((char *)a1 + a2[12]));
}

BOOL sub_100094184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  int *v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  _BYTE v30[16];

  type metadata accessor for LocationComponentAction(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100098728();
  v7 = v6 - v5;
  v8 = sub_1000BA294(&qword_100C12DA0);
  sub_1000B42B0();
  __chkstk_darwin(v9);
  sub_100098728();
  v12 = v11 - v10;
  sub_1000BA294(&qword_100BDA950);
  sub_1000B42B0();
  v14 = __chkstk_darwin(v13);
  v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v30[-v18];
  __chkstk_darwin(v17);
  v21 = &v30[-v20];
  sub_10009176C();
  if ((v22 & 1) == 0)
    return 0;
  v23 = (int *)sub_1000878BC();
  sub_100095B98(a1 + v23[5], a2 + v23[5]);
  if ((v24 & 1) == 0
    || (sub_100094C34(*(unsigned __int8 *)(a1 + v23[6]) | (unsigned __int16)(*(unsigned __int8 *)(a1 + v23[6] + 1) << 8), *(unsigned __int8 *)(a2 + v23[6]) | (unsigned __int16)(*(unsigned __int8 *)(a2 + v23[6] + 1) << 8)) & 1) == 0)
  {
    return 0;
  }
  sub_10009442C(a1 + v23[7], (uint64_t)v21);
  sub_10009442C(a2 + v23[7], (uint64_t)v19);
  v25 = v12 + *(int *)(v8 + 48);
  sub_10009442C((uint64_t)v21, v12);
  sub_10009442C((uint64_t)v19, v25);
  sub_100098750(v12);
  if (v26)
  {
    sub_10009E47C((uint64_t)v19);
    sub_10009E47C((uint64_t)v21);
    sub_100098750(v25);
    if (v26)
    {
      sub_100021A14(v12, &qword_100BDA950);
      return 1;
    }
    goto LABEL_12;
  }
  sub_10009442C(v12, (uint64_t)v16);
  sub_100098750(v25);
  if (v26)
  {
    sub_100021A14((uint64_t)v19, &qword_100BDA950);
    sub_100021A14((uint64_t)v21, &qword_100BDA950);
    sub_1000215BC((uint64_t)v16, type metadata accessor for LocationComponentAction);
LABEL_12:
    sub_100021A14(v12, &qword_100C12DA0);
    return 0;
  }
  sub_100094CC0(v25, v7);
  sub_100094514((uint64_t)v16, v7);
  v28 = v27;
  sub_1000215BC(v7, type metadata accessor for LocationComponentAction);
  sub_10009E47C((uint64_t)v19);
  sub_10009E47C((uint64_t)v21);
  sub_1000215BC((uint64_t)v16, type metadata accessor for LocationComponentAction);
  sub_10009E47C(v12);
  return (v28 & 1) != 0;
}

uint64_t sub_10009442C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1000BA294(&qword_100BDA950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      v4 = type metadata accessor for URL(0);
      goto LABEL_6;
    case 1:
      v4 = type metadata accessor for WeatherMapOverlayKind(0);
      goto LABEL_6;
    case 2:
      v4 = type metadata accessor for DetailCondition(0);
      goto LABEL_6;
    case 4:
      v2 += *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
      v4 = type metadata accessor for Location(0);
LABEL_6:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

void sub_100094514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[6];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = type metadata accessor for Location(0);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  sub_10009D98C();
  __chkstk_darwin(v3);
  sub_1000986FC();
  v26[2] = v4;
  __chkstk_darwin(v5);
  v26[3] = (char *)v26 - v6;
  v7 = type metadata accessor for DetailCondition(0);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  sub_10009D98C();
  __chkstk_darwin(v8);
  sub_100088FDC();
  v26[1] = v9;
  v28 = type metadata accessor for WeatherMapOverlayKind(0);
  v26[5] = *(_QWORD *)(v28 - 8);
  sub_10009D98C();
  __chkstk_darwin(v10);
  sub_100088FDC();
  v26[0] = v11;
  v27 = type metadata accessor for URL(0);
  v26[4] = *(_QWORD *)(v27 - 8);
  sub_10009D98C();
  __chkstk_darwin(v12);
  sub_100098728();
  v13 = type metadata accessor for LocationComponentAction(0);
  sub_10009D98C();
  v15 = __chkstk_darwin(v14);
  v16 = __chkstk_darwin(v15);
  v17 = __chkstk_darwin(v16);
  v18 = __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  sub_1000BA294(&qword_100BCDC38);
  sub_10009D98C();
  __chkstk_darwin(v19);
  sub_100098728();
  v22 = v21 - v20;
  v24 = v21 - v20 + *(int *)(v23 + 48);
  sub_1000A6594(v33, v21 - v20, type metadata accessor for LocationComponentAction);
  sub_1000A6594(v34, v24, type metadata accessor for LocationComponentAction);
  v25 = (char *)sub_100094738 + 4 * byte_10098A9DE[swift_getEnumCaseMultiPayload(v22, v13)];
  __asm { BR              X10 }
}

void sub_100094738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  sub_1000A6594(v0, v2, type metadata accessor for LocationComponentAction);
  sub_1000BA294(&qword_100BC5FE8);
  if (sub_1000BA64C())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 160) + 8))(v2, *(_QWORD *)(v4 - 144));
    sub_1002419B0(v0);
  }
  else
  {
    v5 = *(_QWORD *)(v4 - 160);
    v6 = *(_QWORD *)(v4 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v6);
    static URL.== infix(_:_:)(v2, v1);
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v1, v6);
    v7(v2, v6);
    sub_1000C4580();
  }
  sub_100098640();
}

_BYTE *sub_100094A70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = sub_1000BA294(&qword_100BC5FE8);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      v8 = a1;
      v9 = a3;
      v10 = 0;
      goto LABEL_7;
    case 1u:
      v11 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 1;
      goto LABEL_7;
    case 2u:
      v12 = type metadata accessor for DetailCondition(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = sub_1000BA294(&qword_100BC5FF8);
      a1[*(int *)(v13 + 48)] = a2[*(int *)(v13 + 48)];
      v8 = a1;
      v9 = a3;
      v10 = 2;
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      v14 = *(int *)(sub_1000BA294(&qword_100BC5FF0) + 48);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = type metadata accessor for Location(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v8 = a1;
      v9 = a3;
      v10 = 4;
LABEL_7:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_100094BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationComponentAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100094C34(__int16 a1, __int16 a2)
{
  if ((a1 & 0x100) != 0)
    return ((uint64_t (*)(void))((char *)&loc_100094C60 + 4 * byte_1009D7ACE[a1]))();
  if ((a2 & 0x100) != 0)
    return 0;
  return a1 == a2;
}

uint64_t sub_100094C80(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x100) == 0 || a2 != 1)
    JUMPOUT(0x100094C3CLL);
  return 1;
}

uint64_t sub_100094C94(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x100) == 0 || a2 != 2)
    JUMPOUT(0x100094C3CLL);
  return 1;
}

void sub_100094CA8(uint64_t a1, __int16 a2)
{
  if ((a2 & 0x100) != 0 && a2 > 2u)
    JUMPOUT(0x100094CB8);
  JUMPOUT(0x100094C3CLL);
}

uint64_t sub_100094CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationComponentAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100094D04(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

double sub_100094E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  double result;

  v4 = type metadata accessor for WeatherDescription(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5[6]).n128_u64[0];
  return result;
}

uint64_t sub_100094EDC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100094EE4()
{
  uint64_t v0;

  return swift_retain(v0);
}

void sub_100094EEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

uint64_t sub_100094EF4()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

double sub_100094EFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  *(_QWORD *)(v2 + 32) = a2;
  *(_QWORD *)(v2 + 40) = a1;
  result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  return result;
}

uint64_t sub_100094F10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_100094F18@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

double sub_100094F48()
{
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(0xEA00000000007974).n128_u64[0];
  return result;
}

uint64_t sub_100094F54()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100094F5C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[169] + 8))(v0[168], v0[170]);
}

uint64_t sub_100094F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_100094F7C@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(_QWORD *)(a1 - 256));
}

uint64_t sub_100094F84()
{
  uint64_t v0;
  uint64_t v1;

  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_100094FAC(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, a1);
}

uint64_t sub_100094FB8()
{
  return sub_1008869C8();
}

void sub_100094FC4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a2;
  sub_100077A84(a1);
}

double sub_100094FCC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + a1)).n128_u64[0];
  return result;
}

double sub_100094FD4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72)).n128_u64[0];
  return result;
}

uint64_t sub_100094FDC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 - 256) = a1;
  return swift_release(v2);
}

uint64_t sub_100094FE8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_100095008()
{
  return 0;
}

uint64_t sub_10009501C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return KeyedDecodingContainer.decode<A>(_:forKey:)(a1, a2, v3, v2);
}

uint64_t sub_10009502C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for Logger(0);
}

uint64_t sub_10009503C()
{
  return 0x6465696E6564;
}

uint64_t sub_100095050()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10009505C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003BD328(a1, *(_QWORD *)(a2 - 256));
}

uint64_t sub_100095080()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10009508C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(v10 + a1, a10);
}

void sub_1000950A4()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1000215BC(v1, v0);
}

uint64_t sub_1000950B0()
{
  return type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
}

uint64_t sub_1000950CC()
{
  uint64_t v0;
  uint64_t v1;

  return static Date.== infix(_:_:)(v1, v0);
}

uint64_t sub_1000950D8(uint64_t (*a1)(void))
{
  return a1();
}

double sub_1000950F4()
{
  return 0.0;
}

uint64_t sub_100095100(uint64_t a1)
{
  _QWORD *v1;

  return String.write(to:)(a1, *v1, v1[1]);
}

uint64_t sub_100095108()
{
  uint64_t v0;

  return v0;
}

void sub_10009511C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_100095128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return KeyedEncodingContainer.encode<A>(_:forKey:)(v4 - 72, a2, v3, v2, a1);
}

double sub_100095150@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024D6A8(a1, a2);
}

uint64_t sub_100095158()
{
  return type metadata accessor for LocationComponentAction(0);
}

uint64_t sub_100095180(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

void sub_10009518C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

__n128 sub_100095194@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 272);
  *a1 = result;
  return result;
}

_BYTE *sub_1000951D4@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_1000951E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

double sub_1000951F0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40)).n128_u64[0];
  return result;
}

void sub_1000951F8()
{
  sub_1000BF3B4();
}

uint64_t sub_100095204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return String.hash(into:)(v2 - 152, v0, v1);
}

uint64_t sub_100095214@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_10009525C(uint64_t a1, uint64_t a2)
{
  return swift_storeEnumTagMultiPayload(a1, a2, 1);
}

uint64_t sub_100095264()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100095288@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t sub_100095290()
{
  uint64_t v0;

  return Array<A>.maxSecondValue.getter(*(_QWORD *)(v0 + 1328));
}

uint64_t sub_1000952AC(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, a1);
}

uint64_t sub_1000952CC(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

double sub_1000952D8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24)).n128_u64[0];
  return result;
}

double sub_1000952E0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120)).n128_u64[0];
  return result;
}

void sub_1000952E8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1000979AC(v0, v1);
}

uint64_t sub_1000952F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t))
{
  uint64_t v14;

  return a14(v14);
}

uint64_t sub_100095320()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 424);
}

uint64_t sub_100095338@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), *(_QWORD *)(v2 - 168));
}

void sub_100095360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  sub_1000986AC();
  sub_1000C5BE4();
  sub_1000B42B0();
  __chkstk_darwin(v2);
  sub_100098728();
  v3 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100079FBC();
  sub_100091B54(v0, v1);
  v5 = (char *)sub_1000953F8 + 4 * byte_10098BD94[swift_getEnumCaseMultiPayload(v1, v3)];
  __asm { BR              X10 }
}

void sub_1000953F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_10006BD20(v1, type metadata accessor for LocationComponentHeaderViewModel);
  *v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  v0[5] = 0;
  v0[6] = 0;
  sub_100098640();
}

uint64_t sub_100095508()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100095510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return dispatch thunk of Decoder.container<A>(keyedBy:)(a1, a1, a3, v3, v4);
}

uint64_t sub_100095528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v1);
  return v0;
}

uint64_t sub_10009554C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_100095568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  int64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[4];

  v2 = type metadata accessor for WeatherMapOverlayKind(0);
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  __chkstk_darwin(v2);
  sub_100088FDC();
  v70 = v3;
  sub_1000DA2EC();
  sub_1000B42B0();
  __chkstk_darwin(v4);
  sub_100088FDC();
  v73 = v5;
  v77 = sub_1000DE0F4();
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_1000986FC();
  v75 = v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - v9;
  v76 = type metadata accessor for LocationComponentContainerViewModel(0);
  v62 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  sub_100088FDC();
  v78 = v11;
  v12 = sub_1000270C4();
  if (v12 != 6)
  {
    v57 = v12;
    sub_1000986C4();
    v58 = sub_1000BA294(&qword_100BF67C8);
    v59 = sub_1000DFA44(v58);
    *(_OWORD *)(v59 + 16) = xmmword_10097CA50;
    *(_BYTE *)(v59 + 32) = v57;
LABEL_50:
    sub_100098640();
    return;
  }
  v64 = *(_QWORD *)(a1 + 16);
  if (!v64)
  {
    sub_1000986C4();
    goto LABEL_50;
  }
  v63 = a1 + 32;
  v69 = enum case for WeatherMapOverlayKind.wind(_:);
  v61 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  v14 = _swiftEmptyArrayStorage;
  v15 = v75;
  v74 = v10;
  v16 = v70;
  while (1)
  {
    v17 = (_QWORD *)(v63 + 24 * v13);
    v18 = *v17;
    v19 = *(_QWORD *)(*v17 + 16);
    if (v19)
    {
      v67 = v14;
      v68 = v13;
      v20 = v17[2];
      v21 = v62;
      v22 = v18 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
      v66 = v18;
      swift_bridgeObjectRetain_n(v18, 3);
      v65 = v20;
      swift_bridgeObjectRetain(v20);
      v23 = *(_QWORD *)(v21 + 72);
      v24 = _swiftEmptyArrayStorage;
      while (1)
      {
        v25 = v78;
        sub_100080C0C(v22, v78, type metadata accessor for LocationComponentContainerViewModel);
        sub_100086100(v25 + *(int *)(v76 + 20), (uint64_t)v10);
        sub_100086100((uint64_t)v10, (uint64_t)v15);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v77);
        if (!EnumCaseMultiPayload)
        {
          sub_1000979AC((uint64_t)v10, type metadata accessor for LocationComponentViewModel);
          v36 = v15[7];
          v37 = v15[9];
          v38 = v15;
          v39 = v15[11];
          swift_bridgeObjectRelease(v38[13]);
          swift_bridgeObjectRelease(v39);
          swift_bridgeObjectRelease(v36);
          sub_1000986C4();
          swift_bridgeObjectRelease(v37);
          v27 = 1;
          goto LABEL_23;
        }
        if (EnumCaseMultiPayload == 18)
          break;
        switch(EnumCaseMultiPayload)
        {
          case 5:
            v28 = (uint64_t)v15;
            v29 = v73;
            sub_10007802C(v28, v73, type metadata accessor for MapComponentViewModel);
            v30 = v71;
            v31 = v29;
            v32 = v72;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v16, v31, v72);
            v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 88))(v16, v32);
            if (v33 == v69)
            {
              if (qword_100BC2030 != -1)
                swift_once(&qword_100BC2030, sub_10014CE48);
              v34 = sub_1000BA294(&qword_100BC3130);
              v35 = sub_1000AECD4(v34, (uint64_t)&unk_100CAE7C8);
              sub_1000C5FF8(v35, (uint64_t)v79 + 1);
              Tips.Parameter.wrappedValue.getter(v79, v34);
              LODWORD(v34) = LOBYTE(v79[0]);
              swift_endAccess((char *)v79 + 1);
              sub_1000979AC((uint64_t)v10, type metadata accessor for LocationComponentViewModel);
              sub_1000979AC(v73, type metadata accessor for MapComponentViewModel);
              if ((_DWORD)v34)
                v27 = 2;
              else
                v27 = 3;
            }
            else
            {
              sub_1000979AC((uint64_t)v10, type metadata accessor for LocationComponentViewModel);
              sub_1000979AC(v73, type metadata accessor for MapComponentViewModel);
              (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
              v27 = 2;
            }
            goto LABEL_23;
          case 16:
            sub_1000BA74C((uint64_t)v10);
            sub_1000BA74C((uint64_t)v15);
            v27 = 4;
            goto LABEL_23;
          case 1:
            sub_1000BA74C((uint64_t)v10);
            sub_1000BA74C((uint64_t)v15);
            v27 = 0;
LABEL_23:
            sub_100099100();
            if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
            {
              sub_10011EF60();
              v24 = v42;
            }
            v41 = v24[2];
            v40 = v24[3];
            if (v41 >= v40 >> 1)
            {
              sub_1000C67D4(v40);
              sub_10011EF60();
              v24 = v43;
            }
            v24[2] = v41 + 1;
            *((_BYTE *)v24 + v41 + 32) = v27;
            v10 = v74;
            v15 = v75;
            goto LABEL_28;
        }
        sub_1000BA74C((uint64_t)v10);
        sub_1000BA74C((uint64_t)v15);
        sub_100099100();
LABEL_28:
        v22 += v23;
        if (!--v19)
        {
          swift_bridgeObjectRelease(v65);
          swift_bridgeObjectRelease_n(v66, 3);
          v14 = v67;
          v13 = v68;
          goto LABEL_31;
        }
      }
      sub_1000BA74C((uint64_t)v10);
      sub_1000BA74C((uint64_t)v15);
      v27 = 5;
      goto LABEL_23;
    }
    v24 = _swiftEmptyArrayStorage;
LABEL_31:
    v44 = v24[2];
    v45 = v14[2];
    if (__OFADD__(v45, v44))
      break;
    v46 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    v48 = v46;
    if (!isUniquelyReferenced_nonNull_native || v45 + v44 > v46[3] >> 1)
    {
      sub_10011EF60();
      v48 = v49;
    }
    v15 = v75;
    if (v24[2])
    {
      v50 = v48[2];
      if ((v48[3] >> 1) - v50 < v44)
        goto LABEL_53;
      v51 = (char *)v48 + v50 + 32;
      if (v24 + 4 < (_QWORD *)&v51[v44] && v51 < (char *)v24 + v44 + 32)
        goto LABEL_55;
      v53 = v48;
      memcpy(v51, v24 + 4, v44);
      if (v44)
      {
        v54 = v53[2];
        v55 = __OFADD__(v54, v44);
        v56 = v54 + v44;
        if (v55)
          goto LABEL_54;
        v53[2] = v56;
      }
    }
    else
    {
      v53 = v48;
      if (v44)
        goto LABEL_52;
    }
    ++v13;
    swift_bridgeObjectRelease(v24);
    v14 = v53;
    if (v13 == v64)
    {
      swift_bridgeObjectRelease_n(v61, 2);
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25);
  __break(1u);
}

void sub_100095B78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_10004A2B0(a1, a2, a3);
  sub_10009D2C8(v3);
  sub_10004A298();
}

void sub_100095B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD v77[33];
  uint64_t v78;
  uint64_t v79;

  v78 = a1;
  v79 = a2;
  type metadata accessor for WindComponentViewModel(0);
  sub_1000B42B0();
  __chkstk_darwin(v3);
  sub_100088FDC();
  v77[15] = v4;
  v5 = sub_10009876C();
  v77[1] = type metadata accessor for UVIndexComponentViewModel(v5);
  sub_1000B42B0();
  __chkstk_darwin(v6);
  sub_100088FDC();
  v77[16] = v7;
  v8 = sub_10009876C();
  v9 = type metadata accessor for SunriseSunsetViewModel(v8);
  v77[31] = *(_QWORD *)(v9 - 8);
  v77[32] = v9;
  __chkstk_darwin(v9);
  sub_100088FDC();
  v77[14] = v10;
  v11 = sub_10009876C();
  type metadata accessor for SevereAlertComponentViewModel(v11);
  sub_1000B42B0();
  __chkstk_darwin(v12);
  sub_100088FDC();
  v77[12] = v13;
  v14 = sub_10009876C();
  type metadata accessor for PressureComponentViewModel(v14);
  sub_1000B42B0();
  __chkstk_darwin(v15);
  sub_100088FDC();
  v77[11] = v16;
  v17 = sub_10009876C();
  v77[2] = type metadata accessor for NotificationsOptInComponentViewModel(v17);
  sub_1000B42B0();
  __chkstk_darwin(v18);
  sub_100088FDC();
  v77[13] = v19;
  v20 = sub_10009876C();
  v77[3] = type metadata accessor for NextHourPrecipitationComponentViewModel(v20);
  sub_1000B42B0();
  __chkstk_darwin(v21);
  sub_100088FDC();
  v77[10] = v22;
  v23 = sub_10009876C();
  type metadata accessor for NewsArticleComponentViewModel(v23);
  sub_1000B42B0();
  __chkstk_darwin(v24);
  sub_100088FDC();
  v77[8] = v25;
  v26 = sub_10009876C();
  type metadata accessor for MoonComponentViewModel(v26);
  sub_1000B42B0();
  __chkstk_darwin(v27);
  sub_100088FDC();
  v77[7] = v28;
  v29 = sub_10009876C();
  type metadata accessor for MapComponentViewModel(v29);
  sub_1000B42B0();
  __chkstk_darwin(v30);
  sub_100088FDC();
  v77[6] = v31;
  v32 = sub_10009876C();
  type metadata accessor for FeelsLikeComponentViewModel(v32);
  sub_1000B42B0();
  __chkstk_darwin(v33);
  sub_100088FDC();
  v77[5] = v34;
  v35 = sub_10009876C();
  v77[4] = type metadata accessor for DailyForecastComponentViewModel(v35);
  sub_1000B42B0();
  __chkstk_darwin(v36);
  sub_100088FDC();
  v77[9] = v37;
  v38 = sub_10009876C();
  v39 = type metadata accessor for LocationComponentViewModel(v38);
  sub_1000B42B0();
  __chkstk_darwin(v40);
  v77[29] = (char *)v77 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009D2A4();
  __chkstk_darwin(v42);
  sub_1000860D0();
  v77[25] = v43;
  sub_10009D2A4();
  __chkstk_darwin(v44);
  sub_1000860D0();
  v77[30] = v45;
  sub_10009D2A4();
  __chkstk_darwin(v46);
  sub_1000860D0();
  v77[22] = v47;
  sub_10009D2A4();
  __chkstk_darwin(v48);
  sub_1000860D0();
  v77[26] = v49;
  sub_10009D2A4();
  __chkstk_darwin(v50);
  sub_1000860D0();
  v77[23] = v51;
  sub_10009D2A4();
  __chkstk_darwin(v52);
  sub_1000860D0();
  v77[20] = v53;
  sub_10009D2A4();
  __chkstk_darwin(v54);
  sub_1000860D0();
  v77[21] = v55;
  sub_10009D2A4();
  __chkstk_darwin(v56);
  sub_1000860D0();
  v77[18] = v57;
  sub_10009D2A4();
  __chkstk_darwin(v58);
  sub_1000860D0();
  v77[27] = v59;
  sub_10009D2A4();
  __chkstk_darwin(v60);
  sub_1000860D0();
  v77[24] = v61;
  sub_10009D2A4();
  __chkstk_darwin(v62);
  sub_1000860D0();
  v77[19] = v63;
  sub_10009D2A4();
  __chkstk_darwin(v64);
  sub_1000860D0();
  v77[17] = v65;
  sub_10009D2A4();
  v67 = __chkstk_darwin(v66);
  v68 = __chkstk_darwin(v67);
  v69 = __chkstk_darwin(v68);
  v70 = __chkstk_darwin(v69);
  __chkstk_darwin(v70);
  sub_1000860D0();
  v77[28] = v71;
  sub_10009D2A4();
  __chkstk_darwin(v72);
  sub_1000BA294(&qword_100C08978);
  sub_1000B42B0();
  __chkstk_darwin(v73);
  sub_100094EC4();
  v75 = v2 + *(int *)(v74 + 48);
  sub_100080C0C(v78, v2, type metadata accessor for LocationComponentViewModel);
  v78 = v75;
  sub_100080C0C(v79, v75, type metadata accessor for LocationComponentViewModel);
  v79 = v2;
  v76 = (char *)sub_100095FD4 + 4 * word_1009CB9D4[swift_getEnumCaseMultiPayload(v2, v39)];
  __asm { BR              X10 }
}

void sub_100095FD4()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);

  v4 = sub_1000DD3F0();
  sub_100080C0C(v4, (uint64_t)v3, v5);
  memcpy((void *)(v0 + 280), v3, 0x70uLL);
  if (sub_1000C31B8())
  {
    sub_1000982EC((_QWORD *)(v0 + 280));
    sub_1007C6E8C(v2);
  }
  else
  {
    memcpy((void *)(v0 + 488), v1, 0x70uLL);
    sub_100098520(v0 + 280, v0 + 488);
    sub_1000982EC((_QWORD *)(v0 + 280));
    sub_1000982EC((_QWORD *)(v0 + 488));
    sub_1000979AC(v2, type metadata accessor for LocationComponentViewModel);
  }
  sub_100098640();
}

_QWORD *sub_100096A60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t HourPrecipitationChartViewModel;
  void (*v70)(char *, char *, uint64_t, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t, __n128);
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t, __n128);
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t, __n128);
  __n128 v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  void (*v182)(char *, char *, uint64_t, __n128);
  __n128 v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  void (*v191)(char *, char *, uint64_t, __n128);
  __n128 v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  _QWORD *v209;
  uint64_t v210;
  int EnumCaseMultiPayload;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  _QWORD *v230;
  uint64_t v231;
  void (*v233)(char *, char *, uint64_t, __n128);
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int *v251;

  v3 = a3;
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      v6 = a2[5];
      v7 = a2[6];
      a1[5] = v6;
      a1[6] = v7;
      v9 = a2[7];
      v8 = a2[8];
      a1[7] = v9;
      a1[8] = v8;
      v11 = a2[9];
      v10 = a2[10];
      a1[9] = v11;
      a1[10] = v10;
      v12 = a2[11];
      a1[11] = v12;
      *((_WORD *)a1 + 48) = *((_WORD *)a2 + 48);
      v13 = a2[13];
      a1[13] = v13;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v14 = a1;
      v15 = v3;
      v16 = 0;
      goto LABEL_60;
    case 1u:
      v17 = *a2;
      *a1 = *a2;
      v18 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v19 = v18[5];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      swift_bridgeObjectRetain(v17);
      v22 = sub_1000BA294(&qword_100BC4E68);
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v23(v20, v21, v22);
      v23((char *)a1 + v18[6], (char *)a2 + v18[6], v22);
      v23((char *)a1 + v18[7], (char *)a2 + v18[7], v22);
      v24 = v18[8];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v18[9];
      v29 = (_QWORD *)((char *)a1 + v28);
      v30 = (_QWORD *)((char *)a2 + v28);
      v31 = v30[1];
      *v29 = *v30;
      v29[1] = v31;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v31);
      v14 = a1;
      v15 = v3;
      v16 = 1;
      goto LABEL_60;
    case 2u:
      v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      v33 = a2[3];
      a1[2] = a2[2];
      a1[3] = v33;
      v34 = type metadata accessor for FeelsLikeComponentViewModel(0);
      v35 = *(int *)(v34 + 24);
      v36 = (_QWORD *)((char *)a1 + v35);
      v37 = (_QWORD *)((char *)a2 + v35);
      v38 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v33);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        v39 = sub_1000BA294(&qword_100BC3360);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v151 = v37[1];
        *v36 = *v37;
        v36[1] = v151;
        v152 = *(int *)(v38 + 20);
        v153 = (char *)v36 + v152;
        v154 = (char *)v37 + v152;
        v250 = v3;
        v155 = type metadata accessor for TemperatureScaleConfiguration(0);
        v156 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v155 - 8) + 16);
        v157 = swift_bridgeObjectRetain(v151);
        v158 = v155;
        v3 = v250;
        v156(v153, v154, v158, v157);
        v159 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(_QWORD *)&v153[v159[5]] = *(_QWORD *)&v154[v159[5]];
        *(_QWORD *)&v153[v159[6]] = *(_QWORD *)&v154[v159[6]];
        *(_QWORD *)&v153[v159[7]] = *(_QWORD *)&v154[v159[7]];
        v160 = v159[8];
        v161 = &v153[v160];
        v162 = &v154[v160];
        v164 = *(_QWORD *)v162;
        v163 = *((_QWORD *)v162 + 1);
        *(_QWORD *)v161 = v164;
        *((_QWORD *)v161 + 1) = v163;
        v153[v159[9]] = v154[v159[9]];
        swift_bridgeObjectRetain(v163);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      v165 = *(int *)(v34 + 28);
      v166 = (_QWORD *)((char *)a1 + v165);
      v167 = (_QWORD *)((char *)a2 + v165);
      v168 = v167[1];
      *v166 = *v167;
      v166[1] = v168;
      swift_bridgeObjectRetain(v168);
      v14 = a1;
      v15 = v3;
      v16 = 2;
      goto LABEL_60;
    case 3u:
      v40 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v40);
      v14 = a1;
      v15 = v3;
      v16 = 3;
      goto LABEL_60;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v41 = a2[2];
      a1[2] = v41;
      swift_bridgeObjectRetain(v41);
      v14 = a1;
      v15 = v3;
      v16 = 4;
      goto LABEL_60;
    case 5u:
      v42 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
      v43 = (int *)type metadata accessor for MapComponentViewModel(0);
      v44 = v43[5];
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = type metadata accessor for Location(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      v48 = v43[6];
      v49 = (_QWORD *)((char *)a1 + v48);
      v50 = (_QWORD *)((char *)a2 + v48);
      v51 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, (uint64_t)v51))
      {
        v52 = sub_1000BA294(&qword_100BC3460);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        goto LABEL_59;
      }
      v251 = v43;
      v169 = v3;
      v170 = v50[1];
      *v49 = *v50;
      v49[1] = v170;
      v171 = v51[5];
      v172 = (char *)v49 + v171;
      v173 = (char *)v50 + v171;
      v174 = type metadata accessor for Locale(0);
      swift_bridgeObjectRetain(v170);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
      {
        v175 = sub_1000BA294(&qword_100BC3340);
        memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v172, v173, v174);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
      }
      v197 = v51[6];
      v198 = (char *)v49 + v197;
      v199 = (char *)v50 + v197;
      v200 = type metadata accessor for WeatherDataModel(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v198, v199, v200);
      v201 = v51[7];
      v202 = (char *)v49 + v201;
      v203 = (char *)v50 + v201;
      v204 = sub_1000BA294(&qword_100BC3348);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
      {
        v205 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
      }
      else
      {
        v206 = type metadata accessor for Date(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v202, v203, v206);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
      }
      v207 = v51[8];
      v208 = (_QWORD *)((char *)v49 + v207);
      v209 = (_QWORD *)((char *)v50 + v207);
      v210 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v209, v210);
      if (EnumCaseMultiPayload == 1)
      {
        v216 = type metadata accessor for WeatherStatisticsModel(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v208, v209, v216);
        v213 = v208;
        v214 = v210;
        v215 = 1;
        goto LABEL_47;
      }
      if (!EnumCaseMultiPayload)
      {
        v212 = v209[1];
        *v208 = *v209;
        v208[1] = v212;
        swift_bridgeObjectRetain(v212);
        v213 = v208;
        v214 = v210;
        v215 = 0;
LABEL_47:
        swift_storeEnumTagMultiPayload(v213, v214, v215);
        goto LABEL_49;
      }
      memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
LABEL_49:
      v3 = v169;
      v217 = v51[9];
      v218 = (char *)v49 + v217;
      v219 = (char *)v50 + v217;
      v220 = type metadata accessor for WeatherDataOverrides(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v220))
      {
        v221 = sub_1000BA294(&qword_100BC3350);
        memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
      }
      else
      {
        v222 = type metadata accessor for Date(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v222))
        {
          v223 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v218, v219, v222);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v222);
        }
        v224 = *(int *)(v220 + 20);
        v225 = &v218[v224];
        v226 = &v219[v224];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v222))
        {
          v227 = sub_1000BA294((uint64_t *)&unk_100BD35A0);
          memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v225, v226, v222);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v222);
        }
        v3 = v169;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v220);
      }
      v43 = v251;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
LABEL_59:
      v228 = v43[7];
      v229 = (_QWORD *)((char *)a1 + v228);
      v230 = (_QWORD *)((char *)a2 + v228);
      v231 = v230[1];
      *v229 = *v230;
      v229[1] = v231;
      swift_bridgeObjectRetain(v231);
      v14 = a1;
      v15 = v3;
      v16 = 5;
LABEL_60:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 6u:
      v53 = a2[1];
      *a1 = *a2;
      a1[1] = v53;
      v54 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain(v53);
      if (v54 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      }
      else
      {
        v55 = a2[2];
        v56 = a2[3];
        sub_100121DEC(v55, v56, v54);
        a1[2] = v55;
        a1[3] = v56;
        *((_BYTE *)a1 + 32) = v54;
      }
      v176 = a2[5];
      a1[5] = v176;
      v177 = (int *)type metadata accessor for MoonComponentViewModel(0);
      v178 = v177[7];
      v179 = (char *)a1 + v178;
      v180 = (char *)a2 + v178;
      v181 = type metadata accessor for Date(0);
      v182 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v181 - 8) + 16);
      v183 = swift_bridgeObjectRetain(v176);
      v182(v179, v180, v181, v183);
      *((_BYTE *)a1 + v177[8]) = *((_BYTE *)a2 + v177[8]);
      *(_QWORD *)((char *)a1 + v177[9]) = *(_QWORD *)((char *)a2 + v177[9]);
      v14 = a1;
      v15 = v3;
      v16 = 6;
      goto LABEL_60;
    case 7u:
      v57 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(a2, v57) == 1)
      {
        v58 = a2[1];
        *a1 = *a2;
        a1[1] = v58;
        v59 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v60 = v59[5];
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = type metadata accessor for URL(0);
        swift_bridgeObjectRetain(v58);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
        {
          v64 = sub_1000BA294(&qword_100BD4280);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
        }
        v184 = v59[6];
        v185 = (_QWORD *)((char *)a1 + v184);
        v186 = (_QWORD *)((char *)a2 + v184);
        v187 = v186[1];
        *v185 = *v186;
        v185[1] = v187;
        v188 = v59[7];
        v189 = (char *)a1 + v188;
        v190 = (char *)a2 + v188;
        v191 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v63 - 8) + 16);
        v192 = swift_bridgeObjectRetain(v187);
        v191(v189, v190, v63, v192);
        v193 = v59[8];
        v194 = (char *)a1 + v193;
        v195 = (char *)a2 + v193;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v193, 1, v63))
        {
          v196 = sub_1000BA294(&qword_100BD4280);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v191)(v194, v195, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v63);
        }
        *((_BYTE *)a1 + v59[9]) = *((_BYTE *)a2 + v59[9]);
        swift_storeEnumTagMultiPayload(a1, v57, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      v14 = a1;
      v15 = v3;
      v16 = 7;
      goto LABEL_60;
    case 8u:
      v65 = a2[1];
      *a1 = *a2;
      a1[1] = v65;
      v66 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      v70 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(HourPrecipitationChartViewModel - 8)
                                                                   + 16);
      v71 = swift_bridgeObjectRetain(v65);
      v70(v67, v68, HourPrecipitationChartViewModel, v71);
      v14 = a1;
      v15 = v3;
      v16 = 8;
      goto LABEL_60;
    case 9u:
      v72 = type metadata accessor for Location(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(a1, a2, v72);
      v73 = type metadata accessor for NotificationsOptInComponentViewModel(0);
      *((_BYTE *)a1 + *(int *)(v73 + 20)) = *((_BYTE *)a2 + *(int *)(v73 + 20));
      v14 = a1;
      v15 = v3;
      v16 = 9;
      goto LABEL_60;
    case 0xAu:
      v74 = a2[1];
      *a1 = *a2;
      a1[1] = v74;
      v75 = a2[3];
      a1[2] = a2[2];
      a1[3] = v75;
      v76 = a2[5];
      a1[4] = a2[4];
      a1[5] = v76;
      v77 = a2[7];
      a1[6] = a2[6];
      a1[7] = v77;
      v78 = a2[9];
      a1[8] = a2[8];
      a1[9] = v78;
      v79 = a2[10];
      v80 = a2[11];
      a1[10] = v79;
      a1[11] = v80;
      swift_bridgeObjectRetain(v74);
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRetain(v76);
      swift_bridgeObjectRetain(v77);
      swift_bridgeObjectRetain(v78);
      swift_bridgeObjectRetain(v80);
      v14 = a1;
      v15 = v3;
      v16 = 10;
      goto LABEL_60;
    case 0xBu:
      v81 = type metadata accessor for PressureTrend(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(a1, a2, v81);
      v82 = (int *)type metadata accessor for PressureComponentViewModel(0);
      v83 = v82[5];
      v84 = (_QWORD *)((char *)a1 + v83);
      v85 = (_QWORD *)((char *)a2 + v83);
      v87 = *v85;
      v86 = v85[1];
      *v84 = v87;
      v84[1] = v86;
      v88 = v82[6];
      v89 = (_QWORD *)((char *)a1 + v88);
      v90 = (_QWORD *)((char *)a2 + v88);
      v91 = v90[1];
      *v89 = *v90;
      v89[1] = v91;
      v92 = v82[7];
      v93 = (_QWORD *)((char *)a1 + v92);
      v94 = (_QWORD *)((char *)a2 + v92);
      v95 = v94[1];
      *v93 = *v94;
      v93[1] = v95;
      *(_QWORD *)((char *)a1 + v82[8]) = *(_QWORD *)((char *)a2 + v82[8]);
      v96 = v82[9];
      v97 = (_QWORD *)((char *)a1 + v96);
      v98 = (_QWORD *)((char *)a2 + v96);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      swift_bridgeObjectRetain(v86);
      swift_bridgeObjectRetain(v91);
      swift_bridgeObjectRetain(v95);
      swift_bridgeObjectRetain(v99);
      v14 = a1;
      v15 = v3;
      v16 = 11;
      goto LABEL_60;
    case 0xDu:
      v100 = a2[1];
      *a1 = *a2;
      a1[1] = v100;
      v101 = a2[3];
      a1[2] = a2[2];
      a1[3] = v101;
      v103 = a2[4];
      v102 = a2[5];
      a1[4] = v103;
      a1[5] = v102;
      v105 = a2[6];
      v104 = a2[7];
      a1[6] = v105;
      a1[7] = v104;
      v106 = a2[8];
      a1[8] = v106;
      v107 = type metadata accessor for SevereAlertComponentViewModel(0);
      v108 = *(int *)(v107 + 36);
      v241 = (char *)a2 + v108;
      v244 = (char *)a1 + v108;
      v109 = type metadata accessor for WeatherAlert.Prominence(0);
      v247 = v3;
      v110 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v109 - 8) + 16);
      swift_bridgeObjectRetain(v100);
      swift_bridgeObjectRetain(v101);
      swift_bridgeObjectRetain(v103);
      swift_bridgeObjectRetain(v105);
      v111 = swift_bridgeObjectRetain(v106);
      v110(v244, v241, v109, v111);
      *(_QWORD *)((char *)a1 + *(int *)(v107 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v107 + 40));
      v14 = a1;
      v15 = v247;
      v16 = 13;
      goto LABEL_60;
    case 0xEu:
      v112 = type metadata accessor for SunriseSunsetViewModel(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(a1, a2, v112);
      v14 = a1;
      v15 = v3;
      v16 = 14;
      goto LABEL_60;
    case 0xFu:
      v113 = a2[1];
      *a1 = *a2;
      a1[1] = v113;
      v114 = a2[3];
      a1[2] = a2[2];
      a1[3] = v114;
      v115 = a2[5];
      a1[4] = a2[4];
      a1[5] = v115;
      v116 = a2[7];
      a1[6] = a2[6];
      a1[7] = v116;
      v117 = a2[9];
      a1[8] = a2[8];
      a1[9] = v117;
      v118 = a2[11];
      a1[10] = a2[10];
      a1[11] = v118;
      v119 = a2[13];
      a1[12] = a2[12];
      a1[13] = v119;
      v120 = a2[15];
      a1[14] = a2[14];
      a1[15] = v120;
      v248 = v3;
      v121 = a2[17];
      a1[16] = a2[16];
      a1[17] = v121;
      v245 = a2[19];
      a1[18] = a2[18];
      a1[19] = v245;
      v242 = a2[21];
      a1[20] = a2[20];
      a1[21] = v242;
      v239 = a2[23];
      a1[22] = a2[22];
      a1[23] = v239;
      v122 = a2[24];
      v123 = a2[25];
      a1[24] = v122;
      a1[25] = v123;
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRetain(v114);
      swift_bridgeObjectRetain(v115);
      swift_bridgeObjectRetain(v116);
      swift_bridgeObjectRetain(v117);
      swift_bridgeObjectRetain(v118);
      swift_bridgeObjectRetain(v119);
      swift_bridgeObjectRetain(v120);
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRetain(v245);
      swift_bridgeObjectRetain(v242);
      swift_bridgeObjectRetain(v239);
      swift_bridgeObjectRetain(v123);
      v14 = a1;
      v15 = v248;
      v16 = 15;
      goto LABEL_60;
    case 0x10u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v124 = a2[3];
      a1[2] = a2[2];
      a1[3] = v124;
      v125 = type metadata accessor for UVIndexComponentViewModel(0);
      v126 = *(int *)(v125 + 28);
      v127 = (char *)a1 + v126;
      v128 = (char *)a2 + v126;
      v129 = type metadata accessor for WeatherDescription(0);
      v130 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v129 - 8) + 16);
      v131 = swift_bridgeObjectRetain(v124);
      v130(v127, v128, v129, v131);
      v132 = *(int *)(v125 + 32);
      v133 = *(_QWORD *)((char *)a2 + v132);
      *(_QWORD *)((char *)a1 + v132) = v133;
      swift_bridgeObjectRetain(v133);
      v14 = a1;
      v15 = v3;
      v16 = 16;
      goto LABEL_60;
    case 0x11u:
      v134 = a2[1];
      *a1 = *a2;
      a1[1] = v134;
      v135 = a2[3];
      a1[2] = a2[2];
      a1[3] = v135;
      v136 = a2[4];
      v137 = a2[5];
      a1[4] = v136;
      a1[5] = v137;
      swift_bridgeObjectRetain(v134);
      swift_bridgeObjectRetain(v135);
      swift_bridgeObjectRetain(v137);
      v14 = a1;
      v15 = v3;
      v16 = 17;
      goto LABEL_60;
    case 0x12u:
      v138 = a2[1];
      *a1 = *a2;
      a1[1] = v138;
      v139 = a2[3];
      a1[2] = a2[2];
      a1[3] = v139;
      v140 = a2[5];
      a1[4] = a2[4];
      a1[5] = v140;
      v141 = a2[7];
      a1[6] = a2[6];
      a1[7] = v141;
      v142 = a2[9];
      a1[8] = a2[8];
      a1[9] = v142;
      v249 = v3;
      v143 = a2[11];
      a1[10] = a2[10];
      a1[11] = v143;
      v144 = a2[13];
      a1[12] = a2[12];
      a1[13] = v144;
      v243 = a2[15];
      a1[14] = a2[14];
      a1[15] = v243;
      v240 = a2[17];
      a1[16] = a2[16];
      a1[17] = v240;
      v238 = a2[19];
      a1[18] = a2[18];
      a1[19] = v238;
      v145 = a2[21];
      a1[20] = a2[20];
      a1[21] = v145;
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      v236 = a2[24];
      v237 = v145;
      a1[24] = v236;
      v246 = type metadata accessor for WindComponentViewModel(0);
      v146 = *(int *)(v246 + 68);
      v234 = (char *)a2 + v146;
      v235 = (char *)a1 + v146;
      v147 = type metadata accessor for WindComponentCompassViewModel(0);
      v233 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v147 - 8) + 16);
      swift_bridgeObjectRetain(v138);
      swift_bridgeObjectRetain(v139);
      swift_bridgeObjectRetain(v140);
      swift_bridgeObjectRetain(v141);
      swift_bridgeObjectRetain(v142);
      swift_bridgeObjectRetain(v143);
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRetain(v243);
      swift_bridgeObjectRetain(v240);
      swift_bridgeObjectRetain(v238);
      swift_bridgeObjectRetain(v237);
      v148 = swift_bridgeObjectRetain(v236);
      v233(v235, v234, v147, v148);
      v149 = *(int *)(v246 + 72);
      v150 = *(_QWORD *)((char *)a2 + v149);
      *(_QWORD *)((char *)a1 + v149) = v150;
      swift_bridgeObjectRetain(v150);
      v14 = a1;
      v15 = v249;
      v16 = 18;
      goto LABEL_60;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
      return a1;
  }
}

void sub_1000979AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_10004A298();
}

double sub_1000979E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  int v31;
  uint64_t HourPrecipitationChartViewModel;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, __n128);

  v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 88));
      v4 = *(_QWORD *)(v2 + 104);
      goto LABEL_47;
    case 1u:
      swift_bridgeObjectRelease(*(_QWORD *)v2);
      v5 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      v6 = v2 + v5[5];
      v7 = sub_1000BA294(&qword_100BC4E68);
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
      v8(v6, v7);
      v8(v2 + v5[6], v7);
      v8(v2 + v5[7], v7);
      v9 = v5[8];
      goto LABEL_28;
    case 2u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      v10 = (int *)type metadata accessor for FeelsLikeComponentViewModel(0);
      v11 = v2 + v10[6];
      v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
        v13 = v11 + *(int *)(v12 + 20);
        v14 = type metadata accessor for TemperatureScaleConfiguration(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        v15 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease(*(_QWORD *)(v13 + *(int *)(v15 + 32) + 8));
      }
      goto LABEL_45;
    case 3u:
      v4 = *(_QWORD *)v2;
      goto LABEL_47;
    case 4u:
      v4 = *(_QWORD *)(v2 + 16);
      goto LABEL_47;
    case 5u:
      v16 = type metadata accessor for WeatherMapOverlayKind(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v2, v16);
      v10 = (int *)type metadata accessor for MapComponentViewModel(0);
      v17 = v2 + v10[5];
      v18 = type metadata accessor for Location(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v19 = v2 + v10[6];
      v20 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, (uint64_t)v20))
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8));
        v21 = v19 + v20[5];
        v22 = type metadata accessor for Locale(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        v23 = v19 + v20[6];
        v24 = type metadata accessor for WeatherDataModel(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        v25 = v19 + v20[7];
        v26 = sub_1000BA294(&qword_100BC3348);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
        {
          v27 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
        }
        v28 = v19 + v20[8];
        v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v29);
        if (EnumCaseMultiPayload == 1)
        {
          v51 = type metadata accessor for WeatherStatisticsModel(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v28, v51);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease(*(_QWORD *)(v28 + 8));
        }
        v52 = v19 + v20[9];
        v53 = type metadata accessor for WeatherDataOverrides(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v53))
        {
          v54 = type metadata accessor for Date(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v54))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
          v55 = v52 + *(int *)(v53 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v54))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v55, v54);
        }
      }
LABEL_45:
      v40 = v10[7];
      goto LABEL_46;
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      v31 = *(unsigned __int8 *)(v2 + 32);
      if (v31 != 255)
        sub_100121E04(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v31);
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
      v2 += *(int *)(type metadata accessor for MoonComponentViewModel(0) + 28);
      HourPrecipitationChartViewModel = type metadata accessor for Date(0);
      goto LABEL_31;
    case 7u:
      v33 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload(v2, v33) != 1)
        return result;
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      v34 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v35 = v2 + v34[5];
      v36 = type metadata accessor for URL(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      v37 = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v34[6] + 8));
      v56 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v36 - 8) + 8);
      v56(v2 + v34[7], v36, v37);
      v38 = v2 + v34[8];
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v36))
        return result;
      v43 = v38;
      v41 = v36;
      v42 = (void (*)(uint64_t, uint64_t))v56;
      goto LABEL_32;
    case 8u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      v2 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel(0) + 20);
      HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel(0);
      goto LABEL_31;
    case 9u:
      HourPrecipitationChartViewModel = type metadata accessor for Location(0);
      goto LABEL_31;
    case 0xAu:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
      v4 = *(_QWORD *)(v2 + 88);
      goto LABEL_47;
    case 0xBu:
      v39 = type metadata accessor for PressureTrend(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v2, v39);
      v5 = (int *)type metadata accessor for PressureComponentViewModel(0);
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + v5[5] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + v5[6] + 8));
      v9 = v5[7];
LABEL_28:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + v9 + 8));
      v40 = v5[9];
LABEL_46:
      v4 = *(_QWORD *)(v2 + v40 + 8);
      goto LABEL_47;
    case 0xDu:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 48));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 64));
      v2 += *(int *)(type metadata accessor for SevereAlertComponentViewModel(0) + 36);
      HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence(0);
      goto LABEL_31;
    case 0xEu:
      HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel(0);
LABEL_31:
      v41 = HourPrecipitationChartViewModel;
      v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(HourPrecipitationChartViewModel - 8) + 8);
      v43 = v2;
LABEL_32:
      v42(v43, v41);
      return result;
    case 0xFu:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 88));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 104));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 120));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 136));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 152));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 168));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 184));
      v4 = *(_QWORD *)(v2 + 200);
      goto LABEL_47;
    case 0x10u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      v44 = type metadata accessor for UVIndexComponentViewModel(0);
      v45 = v2 + *(int *)(v44 + 28);
      v46 = type metadata accessor for WeatherDescription(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
      v47 = *(int *)(v44 + 32);
      goto LABEL_37;
    case 0x11u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      v4 = *(_QWORD *)(v2 + 40);
      goto LABEL_47;
    case 0x12u:
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 72));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 88));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 104));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 120));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 136));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 152));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 168));
      swift_bridgeObjectRelease(*(_QWORD *)(v2 + 192));
      v48 = type metadata accessor for WindComponentViewModel(0);
      v49 = v2 + *(int *)(v48 + 68);
      v50 = type metadata accessor for WindComponentCompassViewModel(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
      v47 = *(int *)(v48 + 72);
LABEL_37:
      v4 = *(_QWORD *)(v2 + v47);
LABEL_47:
      *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100C08710;
  if (!qword_100C08710)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NextHourPrecipitationComponentViewModel);
  return result;
}

uint64_t type metadata accessor for NotificationsOptInComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BCB068;
  if (!qword_100BCB068)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NotificationsOptInComponentViewModel);
  return result;
}

uint64_t sub_100098190(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t type metadata accessor for SevereAlertComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BE3D28;
  if (!qword_100BE3D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SevereAlertComponentViewModel);
  return result;
}

uint64_t type metadata accessor for NewsArticleComponentViewModel(uint64_t a1)
{
  return sub_100098190(a1, qword_100BCEA88, (uint64_t)&nominal type descriptor for NewsArticleComponentViewModel);
}

uint64_t type metadata accessor for PressureComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100C0B7A8;
  if (!qword_100C0B7A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PressureComponentViewModel);
  return result;
}

uint64_t type metadata accessor for UVIndexComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100C12B30;
  if (!qword_100C12B30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UVIndexComponentViewModel);
  return result;
}

uint64_t type metadata accessor for MoonComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD3658;
  if (!qword_100BD3658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoonComponentViewModel);
  return result;
}

uint64_t type metadata accessor for MapComponentViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_100BD4BF8;
  if (!qword_100BD4BF8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MapComponentViewModel);
  return result;
}

_QWORD *sub_1000982EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[9];
  v5 = a1[11];
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

double sub_100098354(char *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = &a1[a2[5]];
  v5 = sub_1000BA294(&qword_100BC4E68);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(&a1[a2[6]], v5);
  v6(&a1[a2[7]], v5);
  swift_bridgeObjectRelease(*(_QWORD *)&a1[a2[8] + 8]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)&a1[a2[9] + 8]).n128_u64[0];
  return result;
}

uint64_t sub_1000983F4(double *a1, double *a2)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v9;
  double *v10;
  double *v11;
  _BOOL8 v12;
  double *v13;
  double *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;

  v2 = *((_QWORD *)a1 + 2);
  if (v2 != *((_QWORD *)a2 + 2))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[5];
  v6 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a2 + 4);
  v8 = a2[5];
  swift_retain(v6);
  swift_retain(v7);
  v9 = static Gradient.Stop.== infix(_:_:)(v6, v7, v5, v8);
  swift_release(v6);
  swift_release(v7);
  if ((v9 & 1) == 0)
    return 0;
  v10 = a2 + 7;
  v11 = a1 + 7;
  do
  {
    v12 = --v2 == 0;
    if (!v2)
      break;
    v13 = v10 + 2;
    v14 = v11 + 2;
    v15 = *v11;
    v16 = *((_QWORD *)v11 - 1);
    v17 = *((_QWORD *)v10 - 1);
    v18 = *v10;
    swift_retain(v16);
    swift_retain(v17);
    v19 = static Gradient.Stop.== infix(_:_:)(v16, v17, v15, v18);
    swift_release(v16);
    swift_release(v17);
    v11 = v14;
    v10 = v13;
  }
  while ((v19 & 1) != 0);
  return v12;
}

uint64_t sub_100098520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = v4 == v6 && v5 == v7;
  if (!v8 && (sub_100099264(v4, v5, v6, v7) & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = v9 == v11 && v10 == v12;
  if (!v13 && (sub_100099264(v9, v10, v11, v12) & 1) == 0)
    return 0;
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a2 + 72);
  if (v14)
  {
    if (!v15)
      return 0;
    v16 = *(_QWORD *)(a1 + 64);
    v17 = *(_QWORD *)(a2 + 64);
    v18 = v16 == v17 && v14 == v15;
    if (!v18 && (sub_100099264(v16, v14, v17, v15) & 1) == 0)
      return 0;
  }
  else if (v15)
  {
    return 0;
  }
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 88);
  v23 = v19 == v21 && v20 == v22;
  if (!v23 && (sub_100099264(v19, v20, v21, v22) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 97) ^ *(unsigned __int8 *)(a2 + 97)) & 1) != 0)
  {
    return 0;
  }
  return sub_1000983F4(*(double **)(a1 + 104), *(double **)(a2 + 104));
}

void sub_100098658(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100098678(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_1000986C4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

void sub_1000986CC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_1000986E8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_1000986F0(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

uint64_t sub_100098710(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_100098718(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2);
}

uint64_t sub_100098720()
{
  return type metadata accessor for Logger(0);
}

double sub_100098738()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_100098740(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7);
}

uint64_t sub_100098748@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100098750(uint64_t a1)
{
  uint64_t v1;

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10009876C()
{
  return 0;
}

uint64_t sub_100098778()
{
  return type metadata accessor for Date(0);
}

uint64_t sub_100098780()
{
  return type metadata accessor for LocationViewerActiveLocationState(0);
}

uint64_t sub_100098790(uint64_t a1)
{
  uint64_t v1;

  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

void sub_1000987A0(uint64_t a1)
{
  uint64_t *v1;

  sub_100021A14(a1, v1);
}

uint64_t sub_1000987A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1000987B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_1000987C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, a4);
}

uint64_t sub_1000987D0(uint64_t a1)
{
  uint64_t v1;

  return swift_storeEnumTagMultiPayload(v1, a1, 0);
}

uint64_t sub_1000987E0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10009880C()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100098814(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v1, a1);
}

uint64_t sub_100098820@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_100098828()
{
  return 0;
}

uint64_t sub_100098834()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_10009884C()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 24));
}

void sub_100098854(uint64_t a1)
{
  uint64_t *v1;

  sub_100021A14(a1, v1);
}

uint64_t sub_10009885C(uint64_t a1, uint64_t a2)
{
  return swift_getOpaqueTypeConformance2(a1, a2, 1);
}

uint64_t sub_100098864()
{
  return Location.timeZone.getter();
}

uint64_t sub_10009888C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, 0xE200000000000000, 0);
}

void sub_100098898(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

void sub_1000988A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

void sub_1000988A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

void sub_1000988B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100021A14(v2, a2);
}

uint64_t sub_1000988B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1000988D0(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(a1, v1);
}

uint64_t sub_1000988D8(uint64_t a1)
{
  return swift_arrayDestroy(a1, 1);
}

uint64_t sub_1000988E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return swift_allocObject(a1, v1, v2);
}

uint64_t sub_1000988EC()
{
  return type metadata accessor for Location(0);
}

uint64_t sub_1000988FC()
{
  return type metadata accessor for Locale(0);
}

uint64_t sub_100098904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, v2, a1);
}

uint64_t sub_100098924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = a1;
  return KeyedDecodingContainer.decode<A>(_:forKey:)(v1, v3 - 82, v2, v1);
}

uint64_t sub_10009894C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

double sub_10009895C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

double sub_100098964()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_10009896C()
{
  return type metadata accessor for URL(0);
}

uint64_t sub_100098974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, a4);
}

void sub_100098980()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;

  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t sub_10009898C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_100098994(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000CE1C8(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t sub_1000989A0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1000989B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 - 568) + a1;
}

uint64_t sub_1000989D4(uint64_t a1)
{
  return swift_allocObject(a1, 48, 7);
}

void sub_1000989E0()
{
  int64_t v0;
  uint64_t v1;

  sub_100214794(1, v0, 2, v1);
}

uint64_t sub_1000989F8()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100098A00()
{
  return type metadata accessor for Date(0);
}

id sub_100098A10(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_100098A1C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_100095B78(a1, a2, v2);
}

__n128 sub_100098A24(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

__n128 sub_100098A38(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

