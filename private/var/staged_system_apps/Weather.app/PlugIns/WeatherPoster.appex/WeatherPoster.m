UIImage *sub_100004800()
{
  void *v0;
  void *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  id v6;
  double v7;
  CGFloat v8;
  uint64_t v9;
  UIImage *v10;
  CGSize v12;

  v1 = objc_autoreleasePoolPush();
  sub_100005D14((uint64_t)v1, "bounds");
  v3 = v2;
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v6, "scale");
  v8 = v7;

  v12.width = v3;
  v12.height = v5;
  UIGraphicsBeginImageContextWithOptions(v12, 0, v8);
  sub_100005D14(v9, "bounds");
  objc_msgSend(v0, "drawViewHierarchyInRect:afterScreenUpdates:", 0);
  v10 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  objc_autoreleasePoolPop(v1);
  return v10;
}

id sub_1000048D4(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;

  v5 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  sub_10000586C(a1, a2, v5);
  v6 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 15.0);
  objc_msgSend(v5, "setFont:", v6);

  objc_msgSend(v5, "setNumberOfLines:", 0);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  sub_100005D7C(v5, "setTextColor:");

  v8 = v5;
  v9 = sub_100005D34((uint64_t)v8, "blackColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.3);

  sub_100005D7C(v8, "setBackgroundColor:");
  objc_msgSend(v8, "sizeToFit");
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "addSubview:", v8);
  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_100005350(&qword_10005BBA0);
  v13 = swift_allocObject(v12, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1000452A0;
  v14 = sub_100005D84(v13, "leadingAnchor");
  v15 = sub_100005D14((uint64_t)v14, "safeAreaLayoutGuide");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = sub_100005D54();
  *(_QWORD *)(v13 + 32) = v17;
  v19 = sub_100005D84(v18, "trailingAnchor");
  v20 = sub_100005D14((uint64_t)v19, "safeAreaLayoutGuide");
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = sub_100005D54();
  *(_QWORD *)(v13 + 40) = v22;
  v24 = sub_100005D84(v23, "bottomAnchor");
  v25 = sub_100005D14((uint64_t)v24, "safeAreaLayoutGuide");
  v26 = objc_msgSend(v25, "bottomAnchor");

  v27 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:constant:", v26, -200.0);
  *(_QWORD *)(v13 + 48) = v27;
  sub_100005D64(v28, v29);
  sub_100005DAC();
  isa = sub_100005DA0().super.isa;
  sub_100005D2C();
  sub_100005D7C(v11, "activateConstraints:");

  return v8;
}

char *sub_100004C10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for SkyBackgroundGradient(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  v6 = objc_allocWithZone((Class)type metadata accessor for GradientView(0));
  v7 = sub_100022714((uint64_t)v4);
  sub_100004CB0(v7, 1);
  return v7;
}

void sub_100004CB0(void *a1, char a2)
{
  void *v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;

  v6 = objc_msgSend(a1, "layer");
  objc_msgSend(v6, "setZPosition:", sub_10003D6CC(a2));

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "addSubview:", a1);
  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_100005350(&qword_10005BBA0);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1000452B0;
  v10 = sub_100005D34(v9, "leadingAnchor");
  v11 = sub_100005D14((uint64_t)v10, "leadingAnchor");
  v12 = sub_100005D1C();
  sub_100005D98();

  *(_QWORD *)(v9 + 32) = v3;
  v14 = sub_100005D34(v13, "trailingAnchor");
  v15 = sub_100005D14((uint64_t)v14, "trailingAnchor");
  v16 = sub_100005D1C();
  sub_100005D98();

  *(_QWORD *)(v9 + 40) = v3;
  v18 = sub_100005D34(v17, "topAnchor");
  v19 = sub_100005D14((uint64_t)v18, "topAnchor");
  v20 = sub_100005D1C();
  sub_100005D98();

  *(_QWORD *)(v9 + 48) = v3;
  v22 = sub_100005D34(v21, "bottomAnchor");
  v23 = sub_100005D14((uint64_t)v22, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v9 + 56) = v24;
  sub_100005D64(v25, v26);
  sub_100005DAC();
  isa = sub_100005DA0().super.isa;
  sub_100005D2C();
  objc_msgSend(v7, "activateConstraints:", isa);

}

uint64_t sub_100004ED4(uint64_t result, CGFloat a2, double a3, double a4)
{
  void *v4;
  id v8;
  uint64_t v9;
  CGFloat v10;
  uint64_t v11;
  CGFloat v12;
  CGAffineTransform v13;
  CGAffineTransform v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  if (a2 > 0.0)
  {
    sub_100005D14(result, "bounds");
    v18.origin.x = 0.0;
    v18.origin.y = 0.0;
    v18.size.width = 0.0;
    v18.size.height = 0.0;
    result = CGRectEqualToRect(v15, v18);
    if ((result & 1) == 0)
    {
      v8 = sub_100005D14(result, "layer");
      objc_msgSend(v8, "setAnchorPoint:", a3, a4);

      sub_100005D14(v9, "bounds");
      v10 = 1.0 / a2 * (a3 + -0.5) * CGRectGetWidth(v16);
      sub_100005D14(v11, "bounds");
      v12 = 1.0 / a2 * (a4 + -0.5) * CGRectGetHeight(v17);
      CGAffineTransformMakeScale(&v14, a2, a2);
      CGAffineTransformTranslate(&v13, &v14, v10, v12);
      v14 = v13;
      return (uint64_t)objc_msgSend(v4, "setTransform:", &v14);
    }
  }
  return result;
}

uint64_t variable initialization expression of PosterUpdater.descriptorVersion()
{
  return 3;
}

uint64_t variable initialization expression of WeatherIntentResponse.code()
{
  return 0;
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BB90, (uint64_t)&unk_100055DB0);
}

__n128 initializeBufferWithCopyOfBuffer for UnlockState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BB98, (uint64_t)&unk_100055E28);
}

uint64_t sub_100005058(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  NSString v5;
  uint64_t v6;
  uint64_t v7;

  sub_100005D44(a1, a2);
  v6 = 0;
  v7 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(v3, &v6);
  if (v7)
  {
    v5 = String._bridgeToObjectiveC()();
    result = sub_100005D2C();
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

uint64_t sub_1000050BC(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  sub_100005D44(a1, a2);
  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *v2 = v6;
  return v4 & 1;
}

void sub_10000512C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v2 = v1;
  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  sub_100005D3C();
}

uint64_t sub_10000515C(uint64_t a1, id *a2)
{
  return sub_100005058(a1, a2);
}

uint64_t sub_100005170(uint64_t a1, id *a2)
{
  return sub_1000050BC(a1, a2) & 1;
}

void sub_100005188()
{
  uint64_t *v0;

  sub_1000051EC(*v0, (void (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_1000051A8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_10000512C(a1);
  *a2 = v3;
}

void sub_1000051CC()
{
  uint64_t *v0;

  sub_1000051EC(*v0, (void (*)(uint64_t))&String.hashValue.getter);
}

void sub_1000051EC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  a2(v3);
  sub_100005D2C();
  sub_100005D3C();
}

uint64_t sub_10000521C(uint64_t a1)
{
  uint64_t *v1;

  return sub_100005234(a1, *v1);
}

uint64_t sub_100005234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100005D70(a1, a2);
  v5 = v4;
  String.hash(into:)(v2, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000526C(uint64_t a1)
{
  uint64_t *v1;

  return sub_100005284(a1, *v1);
}

Swift::Int sub_100005284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = sub_100005D70(a1, a2);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return v5;
}

BOOL sub_1000052EC(uint64_t *a1, uint64_t *a2)
{
  return sub_10000BEE8(*a1, *a2);
}

void sub_1000052F8(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_100005328();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_100005330()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_100005D8C();
  *v0 = WeatherIntentResponseCode.rawValue.getter(v1);
  sub_100005D3C();
}

uint64_t sub_100005350(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100005390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005BBA8;
  if (!qword_10005BBA8)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005BBA8);
  }
  return result;
}

id sub_1000053CC()
{
  id *v0;

  return *v0;
}

uint64_t sub_1000053D4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1000053DC()
{
  _QWORD *v0;

  return sub_100022FE4(*v0);
}

void sub_1000053E4(int a1)
{
  Swift::UInt *v1;

  sub_10001F420(a1, *v1);
}

uint64_t sub_1000053EC(uint64_t a1)
{
  _QWORD *v1;

  return sub_10001F7A0(a1, *v1);
}

uint64_t sub_1000053F4(_QWORD *a1, _QWORD *a2)
{
  return sub_10000BEF4(*a1, *a2);
}

uint64_t sub_100005404()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(kCLErrorDomain);
}

uint64_t sub_100005414(uint64_t a1)
{
  uint64_t v2;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100005454(uint64_t a1)
{
  uint64_t v2;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100005494(void *a1, uint64_t a2)
{
  uint64_t v4;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000054F8()
{
  void **v0;

  return sub_100005500(*v0);
}

uint64_t sub_100005500(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_100005530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100005580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_1000055E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000059B4(&qword_10005BCD0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000458D4);
  v3 = v2;
  sub_1000059B4(&qword_10005BCD8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000454C8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100005668@<X0>(_QWORD *a1@<X8>)
{
  NSString v2;
  uint64_t result;

  v2 = String._bridgeToObjectiveC()();
  result = sub_100005D2C();
  *a1 = v2;
  return result;
}

void sub_1000056A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100005D8C();
  *v0 = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  v0[1] = v2;
  sub_100005D3C();
}

uint64_t sub_1000056CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1000059B4(&qword_10005BCC0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100045918);
  v3 = v2;
  sub_1000059B4(&qword_10005BCC8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000455DC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100005750(uint64_t a1)
{
  uint64_t v2;

  sub_1000059B4(&qword_10005BC70, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_100045890);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100005790(uint64_t a1)
{
  uint64_t v2;

  sub_1000059B4(&qword_10005BC70, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_100045890);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000057D4(uint64_t a1)
{
  uint64_t v2;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100005814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

void sub_10000586C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "setText:", v4);

}

void type metadata accessor for Code(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BC10, (uint64_t)&unk_100055E50);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BC18, (uint64_t)&unk_100055E70);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BC20, (uint64_t)&unk_100055E98);
}

uint64_t sub_1000058EC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000590C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BC28, (uint64_t)&unk_100055F18);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_100005AE0(a1, &qword_10005BC30, (uint64_t)&unk_100055F40);
}

void sub_10000595C()
{
  sub_1000059B4(&qword_10005BC38, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&unk_1000453F8);
}

void sub_100005988()
{
  sub_1000059B4(&qword_10005BC40, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10004548C);
}

void sub_1000059B4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }
  sub_100005D3C();
}

void sub_1000059F0()
{
  sub_1000059B4(&qword_10005BC48, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100045460);
}

void sub_100005A1C()
{
  sub_1000059B4(&qword_10005BC50, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_1000455A0);
}

void sub_100005A48()
{
  sub_1000059B4(&qword_10005BC58, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100045574);
}

void sub_100005A74()
{
  sub_1000059B4(&qword_10005BC60, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100045698);
}

void sub_100005AA0()
{
  sub_1000059B4(&qword_10005BC68, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004573C);
}

void type metadata accessor for CLError(uint64_t a1)
{
  sub_100005AE0(a1, (unint64_t *)&unk_10005BCE0, (uint64_t)&unk_100055F60);
}

void sub_100005AE0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_100005B24()
{
  sub_1000059B4(&qword_10005BC70, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_100045890);
}

void sub_100005B50()
{
  sub_1000059B4(&qword_10005BC78, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_100045818);
}

void sub_100005B7C()
{
  sub_1000059B4((unint64_t *)&unk_10005BC80, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_1000457A8);
}

void sub_100005BA8()
{
  sub_1000059B4((unint64_t *)&qword_10005D950, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100045700);
}

void sub_100005BD4()
{
  sub_1000059B4(&qword_10005BC90, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1000456C4);
}

unint64_t sub_100005C04()
{
  unint64_t result;

  result = qword_10005BC98;
  if (!qword_10005BC98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10005BC98);
  }
  return result;
}

void sub_100005C40()
{
  sub_1000059B4(&qword_10005BCA0, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_1000457EC);
}

void sub_100005C6C()
{
  sub_1000059B4(&qword_10005BCA8, (uint64_t (*)(uint64_t))type metadata accessor for CLError, (uint64_t)&unk_10004584C);
}

void sub_100005C98()
{
  sub_1000059B4(&qword_10005BCB0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000454FC);
}

void sub_100005CC4()
{
  sub_1000059B4(&qword_10005BCB8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100045610);
}

id sub_100005D14(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_100005D1C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2424), v1);
}

uint64_t sub_100005D2C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_100005D34(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_100005D44(uint64_t a1, id *a2)
{

}

id sub_100005D54()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, *(SEL *)(v2 + 2424), v1);
}

uint64_t sub_100005D64(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_100005D70(uint64_t a1, uint64_t a2)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
}

id sub_100005D7C(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_100005D84(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_100005D8C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_100005D98()
{
  void *v0;

}

NSArray sub_100005DA0()
{
  return Array._bridgeToObjectiveC()();
}

unint64_t sub_100005DAC()
{
  return sub_100005390();
}

uint64_t getEnumTagSinglePayload for UnlockState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && a1[16])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnlockState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnlockState()
{
  return &type metadata for UnlockState;
}

void sub_100005E44(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int sub_100005E68(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

Swift::Int sub_100005EAC()
{
  unsigned __int8 *v0;

  return sub_100005E68(*v0);
}

void sub_100005EB4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_100005E44(a1, *v1);
}

Swift::Int sub_100005EBC()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100005EFC(char a1)
{
  if (!a1)
    return 0x64656B636F6CLL;
  if (a1 == 1)
    return 0x64656B636F6C6E75;
  return 0x697469736E617274;
}

uint64_t sub_100005F5C()
{
  char *v0;

  return sub_100005EFC(*v0);
}

uint64_t sub_100005F64(char a1, double a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  _QWORD v11[2];

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v11, "screenState:");
  HIWORD(v11[1]) = -5120;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x64656B636F6C6E75;
    else
      v4 = 0x697469736E617274;
    if (a1 == 1)
      v5 = 0xE800000000000000;
    else
      v5 = 0xED0000676E696E6FLL;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x64656B636F6CLL;
  }
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  v7._countAndFlagsBits = 0x6572676F7270202CLL;
  v7._object = (void *)0xEB000000003A7373;
  String.append(_:)(v7);
  v8._countAndFlagsBits = Double.description.getter(a2);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  return v11[0];
}

BOOL sub_100006084(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_100006094(char a1, char a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

uint64_t sub_1000060AC()
{
  uint64_t v0;

  return sub_100005F64(*(_BYTE *)v0, *(double *)(v0 + 8));
}

BOOL sub_1000060B8(char *a1, char *a2)
{
  return sub_100006084(*a1, *a2);
}

BOOL sub_1000060C4(uint64_t a1, uint64_t a2)
{
  return sub_100006094(*(_BYTE *)a1, *(_BYTE *)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

_BYTE *initializeBufferWithCopyOfBuffer for UnlockState.ScreenState(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for UnlockState.ScreenState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UnlockState.ScreenState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000061B8 + 4 * byte_10004597D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000061EC + 4 * asc_100045978[v4]))();
}

uint64_t sub_1000061EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000061F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000061FCLL);
  return result;
}

uint64_t sub_100006208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100006210);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100006214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000621C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100006228(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100006230(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for UnlockState.ScreenState()
{
  return &type metadata for UnlockState.ScreenState;
}

unint64_t sub_10000624C()
{
  unint64_t result;

  result = qword_10005BE70;
  if (!qword_10005BE70)
  {
    result = swift_getWitnessTable(&unk_1000459C4, &type metadata for UnlockState.ScreenState);
    atomic_store(result, (unint64_t *)&qword_10005BE70);
  }
  return result;
}

_QWORD *sub_100006288(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    v7 = type metadata accessor for Location(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for WeatherCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for CloudAltitudeKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = a3[10];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    if (sub_100006580((uint64_t)a2 + v22, 1, v11))
    {
      v25 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v12(v23, v24, v11);
      sub_10000658C((uint64_t)v23, 0, 1, v11);
    }
    v27 = a3[11];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    if (sub_100006580((uint64_t)a2 + v27, 1, v11))
    {
      v30 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v12(v28, v29, v11);
      sub_10000658C((uint64_t)v28, 0, 1, v11);
    }
    v31 = a3[12];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = type metadata accessor for Elevation(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    v35 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for BackgroundMoonData(0);
    if (sub_100006580((uint64_t)v37, 1, v38))
    {
      v39 = sub_100005350(&qword_10005BE78);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
      sub_10000658C((uint64_t)v36, 0, 1, v38);
    }
    v40 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    v43 = type metadata accessor for TargetWindowSizeClass(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[17];
    v45 = a3[18];
    v46 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)a1 + v44) = v46;
    v47 = *(void **)((char *)a2 + v45);
    *(_QWORD *)((char *)a1 + v45) = v47;
    v48 = v46;
    v49 = v47;
  }
  return a1;
}

uint64_t sub_100006580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_10000658C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_100006598(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + a2[6];
  v9 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[9];
  v11 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[10];
  if (!sub_100006580(v12, 1, v6))
    v7(v12, v6);
  v13 = a1 + a2[11];
  if (!sub_100006580(v13, 1, v6))
    v7(v13, v6);
  v14 = a1 + a2[12];
  v15 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = a1 + a2[14];
  v17 = type metadata accessor for BackgroundMoonData(0);
  if (!sub_100006580(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = a1 + a2[16];
  v19 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);

}

uint64_t sub_10000673C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = a3[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  if (sub_100006580(a2 + v21, 1, v10))
  {
    v24 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v11(v22, v23, v10);
    sub_10000658C((uint64_t)v22, 0, 1, v10);
  }
  v25 = a3[11];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (sub_100006580(a2 + v25, 1, v10))
  {
    v28 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v11(v26, v27, v10);
    sub_10000658C((uint64_t)v26, 0, 1, v10);
  }
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  v33 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = type metadata accessor for BackgroundMoonData(0);
  if (sub_100006580((uint64_t)v35, 1, v36))
  {
    v37 = sub_100005350(&qword_10005BE78);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
    sub_10000658C((uint64_t)v34, 0, 1, v36);
  }
  v38 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  v42 = a3[17];
  v43 = a3[18];
  v44 = *(void **)(a2 + v42);
  *(_QWORD *)(a1 + v42) = v44;
  v45 = *(void **)(a2 + v43);
  *(_QWORD *)(a1 + v43) = v45;
  v46 = v44;
  v47 = v45;
  return a1;
}

uint64_t sub_100006A08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = a3[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_100006580(a1 + v21, 1, v10);
  v25 = sub_100006580((uint64_t)v23, 1, v10);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v22, v23, v10);
      sub_10000658C((uint64_t)v22, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v22, v10);
LABEL_6:
    v26 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v12(v22, v23, v10);
LABEL_7:
  v27 = a3[11];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = sub_100006580(a1 + v27, 1, v10);
  v31 = sub_100006580((uint64_t)v29, 1, v10);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v28, v29, v10);
      sub_10000658C((uint64_t)v28, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v28, v10);
LABEL_12:
    v32 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  v12(v28, v29, v10);
LABEL_13:
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v37 = a3[14];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = type metadata accessor for BackgroundMoonData(0);
  v41 = sub_100006580((uint64_t)v38, 1, v40);
  v42 = sub_100006580((uint64_t)v39, 1, v40);
  if (!v41)
  {
    v43 = *(_QWORD *)(v40 - 8);
    if (!v42)
    {
      (*(void (**)(void *, const void *, uint64_t))(v43 + 24))(v38, v39, v40);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
    goto LABEL_18;
  }
  if (v42)
  {
LABEL_18:
    v44 = sub_100005350(&qword_10005BE78);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  sub_10000658C((uint64_t)v38, 0, 1, v40);
LABEL_19:
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v45 = a3[16];
  v46 = a1 + v45;
  v47 = a2 + v45;
  v48 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
  v49 = a3[17];
  v50 = *(void **)(a1 + v49);
  v51 = *(void **)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v51;
  v52 = v51;

  v53 = a3[18];
  v54 = *(void **)(a1 + v53);
  v55 = *(void **)(a2 + v53);
  *(_QWORD *)(a1 + v53) = v55;
  v56 = v55;

  return a1;
}

uint64_t sub_100006DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  if (sub_100006580(a2 + v21, 1, v10))
  {
    v24 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v11(v22, v23, v10);
    sub_10000658C((uint64_t)v22, 0, 1, v10);
  }
  v25 = a3[11];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  if (sub_100006580(a2 + v25, 1, v10))
  {
    v28 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v11(v26, v27, v10);
    sub_10000658C((uint64_t)v26, 0, 1, v10);
  }
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  v33 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = type metadata accessor for BackgroundMoonData(0);
  if (sub_100006580((uint64_t)v35, 1, v36))
  {
    v37 = sub_100005350(&qword_10005BE78);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    sub_10000658C((uint64_t)v34, 0, 1, v36);
  }
  v38 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  v42 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  return a1;
}

uint64_t sub_100007090(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;

  v6 = type metadata accessor for Location(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_100006580(a1 + v22, 1, v10);
  v26 = sub_100006580((uint64_t)v24, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v23, v24, v10);
      sub_10000658C((uint64_t)v23, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v23, v10);
LABEL_6:
    v27 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v12(v23, v24, v10);
LABEL_7:
  v28 = a3[11];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = sub_100006580(a1 + v28, 1, v10);
  v32 = sub_100006580((uint64_t)v30, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v29, v30, v10);
      sub_10000658C((uint64_t)v29, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v29, v10);
LABEL_12:
    v33 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  v12(v29, v30, v10);
LABEL_13:
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  v38 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  v41 = type metadata accessor for BackgroundMoonData(0);
  v42 = sub_100006580((uint64_t)v39, 1, v41);
  v43 = sub_100006580((uint64_t)v40, 1, v41);
  if (!v42)
  {
    v44 = *(_QWORD *)(v41 - 8);
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 40))(v39, v40, v41);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v39, v41);
    goto LABEL_18;
  }
  if (v43)
  {
LABEL_18:
    v45 = sub_100005350(&qword_10005BE78);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  sub_10000658C((uint64_t)v39, 0, 1, v41);
LABEL_19:
  v46 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  v50 = a3[17];
  v51 = *(void **)(a1 + v50);
  *(_QWORD *)(a1 + v50) = *(_QWORD *)(a2 + v50);

  v52 = a3[18];
  v53 = *(void **)(a1 + v52);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);

  return a1;
}

uint64_t sub_100007440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000744C);
}

uint64_t sub_10000744C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v25;
  int v26;

  sub_100008944();
  sub_100008874();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return sub_100006580(v8, a2, v7);
  }
  sub_1000088F4();
  sub_100008874();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_25:
    v8 = a1 + v11;
    return sub_100006580(v8, a2, v7);
  }
  sub_100008934();
  sub_100008874();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_25;
  }
  sub_10000892C();
  sub_100008874();
  if (v14)
  {
    v7 = v15;
    v11 = a3[9];
    goto LABEL_25;
  }
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008874();
  if (v16)
  {
    v7 = v17;
    v11 = a3[10];
    goto LABEL_25;
  }
  sub_10000893C();
  sub_100008874();
  if (v18)
  {
    v7 = v19;
    v11 = a3[12];
    goto LABEL_25;
  }
  sub_100005350(&qword_10005BE78);
  sub_100008874();
  if (v20)
  {
    v7 = v21;
    v11 = a3[14];
    goto LABEL_25;
  }
  sub_100008984();
  sub_100008874();
  if (v22)
  {
    v7 = v23;
    v11 = a3[16];
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(a1 + a3[17]);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  v26 = v25 - 1;
  if (v26 < 0)
    v26 = -1;
  return (v26 + 1);
}

uint64_t sub_100007580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000758C);
}

void sub_10000758C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  sub_100008944();
  sub_100008884();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1000088F4();
    sub_100008884();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_100008934();
      sub_100008884();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        sub_10000892C();
        sub_100008884();
        if (v15)
        {
          v8 = v16;
          v12 = a4[9];
        }
        else
        {
          sub_100005350((uint64_t *)&unk_10005C4C0);
          sub_100008884();
          if (v17)
          {
            v8 = v18;
            v12 = a4[10];
          }
          else
          {
            sub_10000893C();
            sub_100008884();
            if (v19)
            {
              v8 = v20;
              v12 = a4[12];
            }
            else
            {
              sub_100005350(&qword_10005BE78);
              sub_100008884();
              if (v21)
              {
                v8 = v22;
                v12 = a4[14];
              }
              else
              {
                sub_100008984();
                sub_100008884();
                if (!v23)
                {
                  *(_QWORD *)(a1 + a4[17]) = a2;
                  return;
                }
                v8 = v24;
                v12 = a4[16];
              }
            }
          }
        }
      }
    }
    v9 = a1 + v12;
  }
  sub_10000658C(v9, a2, a2, v8);
}

uint64_t type metadata accessor for PosterAnimationViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10005BED8;
  if (!qword_10005BED8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterAnimationViewModel);
  return result;
}

void sub_1000076E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;

  v2 = type metadata accessor for Location(319);
  if (v3 <= 0x3F)
  {
    v18[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v18[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for WeatherCondition(319);
      if (v7 <= 0x3F)
      {
        v18[2] = *(_QWORD *)(v6 - 8) + 64;
        v18[3] = (char *)&value witness table for Builtin.Int64 + 64;
        v18[4] = (char *)&value witness table for Builtin.Int64 + 64;
        v8 = type metadata accessor for CloudAltitudeKind(319);
        if (v9 <= 0x3F)
        {
          v18[5] = *(_QWORD *)(v8 - 8) + 64;
          sub_100007858(319, (unint64_t *)&qword_10005BEE8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
          if (v11 <= 0x3F)
          {
            v19 = *(_QWORD *)(v10 - 8) + 64;
            v20 = v19;
            v12 = type metadata accessor for Elevation(319);
            if (v13 <= 0x3F)
            {
              v21 = *(_QWORD *)(v12 - 8) + 64;
              v22 = &unk_100045AF0;
              sub_100007858(319, (unint64_t *)&unk_10005BEF0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
              if (v15 <= 0x3F)
              {
                v23 = *(_QWORD *)(v14 - 8) + 64;
                v24 = &unk_100045AF0;
                v16 = type metadata accessor for TargetWindowSizeClass(319);
                if (v17 <= 0x3F)
                {
                  v25 = *(_QWORD *)(v16 - 8) + 64;
                  v26 = &unk_100045B08;
                  v27 = &unk_100045B08;
                  swift_initStructMetadata(a1, 256, 15, v18, a1 + 16);
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100007858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1000078A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v22 = sub_100008984();
  v51 = *(_QWORD *)(v22 - 8);
  v52 = v22;
  sub_100008894();
  __chkstk_darwin(v23);
  sub_100008850();
  v42 = v24;
  v25 = sub_100008910();
  v48 = type metadata accessor for Location(v25);
  v50 = *(_QWORD *)(v48 - 8);
  sub_10000894C(v50);
  v26 = (int *)type metadata accessor for PosterAnimationViewModel(0);
  v27 = a9 + v26[5];
  v43 = sub_1000088F4();
  v46 = *(_QWORD *)(v43 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v27, a2, v43);
  v28 = a9 + v26[6];
  v38 = sub_100008934();
  v40 = *(_QWORD *)(v38 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v28, a3, v38);
  *(double *)(a9 + v26[7]) = a10;
  *(double *)(a9 + v26[8]) = a11;
  v29 = a9 + v26[9];
  v30 = sub_10000892C();
  v37 = *(_QWORD *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v29, a4, v30);
  sub_1000088D0(a5, a9 + v26[10]);
  sub_1000088D0(a6, a9 + v26[11]);
  v31 = a9 + v26[12];
  v32 = sub_10000893C();
  v33 = *(_QWORD *)(v32 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v31, a7, v32);
  *(_BYTE *)(a9 + v26[13]) = a8;
  sub_1000087A8(a12, a9 + v26[14], &qword_10005BE78);
  *(_BYTE *)(a9 + v26[15]) = a15;
  *(_QWORD *)(a9 + v26[17]) = a13;
  *(_QWORD *)(a9 + v26[18]) = a14;
  sub_100032D88(v42);
  sub_1000087DC(a12, &qword_10005BE78);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(a7, v32);
  sub_1000088D8(a6);
  sub_1000088D8(a5);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(a4, v30);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a3, v38);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(a2, v43);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(a1, v48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(a9 + v26[16], v42, v52);
}

uint64_t sub_100007B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void (*v43)(uint64_t, uint64_t);
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  int *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  char v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  char v82;
  _BYTE v83[12];
  int v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v95 = type metadata accessor for BackgroundMoonData(0);
  v90 = *(_QWORD *)(v95 - 8);
  sub_100008894();
  ((void (*)(void))__chkstk_darwin)();
  sub_100008850();
  v89 = v4;
  v5 = sub_100005350(&qword_10005BF58);
  sub_100008864();
  ((void (*)(void))__chkstk_darwin)();
  v94 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100005350(&qword_10005BE78);
  sub_100008864();
  ((void (*)(void))__chkstk_darwin)();
  sub_1000088BC();
  v91 = v7;
  sub_10000896C();
  ((void (*)(void))__chkstk_darwin)();
  v92 = &v83[-v8];
  sub_10000896C();
  ((void (*)(void))__chkstk_darwin)();
  v93 = &v83[-v9];
  v10 = sub_1000088F4();
  v99 = *(_QWORD *)(v10 - 8);
  v100 = v10;
  sub_100008894();
  ((void (*)(void))__chkstk_darwin)();
  sub_100008850();
  v97 = v11;
  v12 = sub_100005350(&qword_10005BF60);
  sub_100008864();
  ((void (*)(void))__chkstk_darwin)();
  sub_1000088BC();
  v98 = v13;
  sub_10000896C();
  ((void (*)(void))__chkstk_darwin)();
  v15 = &v83[-v14];
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  ((void (*)(void))__chkstk_darwin)();
  sub_1000088BC();
  v96 = v16;
  sub_10000896C();
  v17 = ((uint64_t (*)(void))__chkstk_darwin)();
  v19 = &v83[-v18];
  v20 = __chkstk_darwin(v17);
  v22 = &v83[-v21];
  v23 = __chkstk_darwin(v20);
  v25 = &v83[-v24];
  v26 = __chkstk_darwin(v23);
  v28 = &v83[-v27];
  __chkstk_darwin(v26);
  v30 = &v83[-v29];
  if ((static Location.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v88 = v5;
  v31 = (int *)type metadata accessor for PosterAnimationViewModel(0);
  if ((static Date.== infix(_:_:)(a1 + v31[5], a2 + v31[5]) & 1) == 0
    || (sub_10000C20C(a1 + v31[6], a2 + v31[6]) & 1) == 0
    || *(double *)(a1 + v31[7]) != *(double *)(a2 + v31[7])
    || *(double *)(a1 + v31[8]) != *(double *)(a2 + v31[8])
    || (static CloudAltitudeKind.== infix(_:_:)(a1 + v31[9], a2 + v31[9]) & 1) == 0)
  {
    return 0;
  }
  v32 = v31[10];
  v86 = a1;
  sub_1000087A8(a1 + v32, (uint64_t)v30, (uint64_t *)&unk_10005C4C0);
  v85 = v31;
  v33 = v31[10];
  v87 = a2;
  sub_1000087A8(a2 + v33, (uint64_t)v28, (uint64_t *)&unk_10005C4C0);
  v34 = (uint64_t)&v15[*(int *)(v12 + 48)];
  sub_1000088D0((uint64_t)v30, (uint64_t)v15);
  sub_1000088D0((uint64_t)v28, v34);
  v35 = v100;
  if (sub_100006580((uint64_t)v15, 1, v100) == 1)
  {
    sub_1000088EC((uint64_t)v28);
    sub_1000088EC((uint64_t)v30);
    sub_1000088A0(v34);
    if (!v49)
      goto LABEL_14;
    sub_1000087DC((uint64_t)v15, (uint64_t *)&unk_10005C4C0);
LABEL_16:
    v44 = v85;
    sub_100008924(v86 + v85[11], (uint64_t)v22);
    sub_100008924(v87 + v44[11], (uint64_t)v19);
    v45 = *(int *)(v12 + 48);
    v46 = v98;
    v47 = v98 + v45;
    sub_100008924((uint64_t)v22, v98);
    sub_100008924((uint64_t)v19, v47);
    sub_1000088A0(v46);
    if (v49)
    {
      sub_1000088FC((uint64_t)v19);
      sub_1000088FC((uint64_t)v22);
      sub_1000088A0(v47);
      if (v49)
      {
        sub_1000087DC(v46, (uint64_t *)&unk_10005C4C0);
        goto LABEL_29;
      }
    }
    else
    {
      v48 = v96;
      sub_1000087A8(v46, v96, (uint64_t *)&unk_10005C4C0);
      sub_1000088A0(v47);
      if (!v49)
      {
        v51 = v99;
        v52 = v97;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v97, v47, v35);
        sub_1000059B4(&qword_10005BF78, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v54 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v52, v35, v53);
        v55 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        v55(v52, v35);
        sub_1000088FC((uint64_t)v19);
        sub_1000088FC((uint64_t)v22);
        v55(v48, v35);
        sub_1000088FC(v46);
        if ((v54 & 1) == 0)
          return 0;
LABEL_29:
        v57 = v85;
        v56 = v86;
        v58 = v87;
        if ((static Elevation.== infix(_:_:)(v86 + v85[12], v87 + v85[12]) & 1) == 0
          || *(unsigned __int8 *)(v56 + v57[13]) != *(unsigned __int8 *)(v58 + v57[13]))
        {
          return 0;
        }
        v59 = v93;
        sub_1000088D0(v56 + v57[14], (uint64_t)v93);
        v60 = v92;
        sub_1000088D0(v58 + v57[14], (uint64_t)v92);
        v61 = v94;
        v62 = (uint64_t)&v94[*(int *)(v88 + 48)];
        sub_1000088D0((uint64_t)v59, (uint64_t)v94);
        sub_1000088D0((uint64_t)v60, v62);
        v63 = v95;
        if (sub_100006580((uint64_t)v61, 1, v95) == 1)
        {
          sub_1000088D8((uint64_t)v60);
          sub_1000088D8((uint64_t)v59);
          if (sub_100006580(v62, 1, v63) == 1)
          {
            sub_1000087DC((uint64_t)v61, &qword_10005BE78);
            goto LABEL_38;
          }
        }
        else
        {
          v64 = v91;
          sub_1000087A8((uint64_t)v61, v91, &qword_10005BE78);
          if (sub_100006580(v62, 1, v63) != 1)
          {
            v66 = v89;
            v65 = v90;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v89, v62, v63);
            sub_1000059B4(&qword_10005BF70, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
            v68 = dispatch thunk of static Equatable.== infix(_:_:)(v64, v66, v63, v67);
            v69 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
            v69(v66, v63);
            sub_1000088D8((uint64_t)v60);
            sub_1000088D8((uint64_t)v59);
            v69(v64, v63);
            sub_1000088D8((uint64_t)v61);
            if ((v68 & 1) == 0)
              return 0;
LABEL_38:
            v71 = v85;
            v70 = v86;
            v72 = v87;
            if (*(unsigned __int8 *)(v86 + v85[15]) != *(unsigned __int8 *)(v87 + v85[15])
              || (sub_10000C5E0(v86 + v85[16], v87 + v85[16]) & 1) == 0)
            {
              return 0;
            }
            v73 = v71[17];
            v74 = *(void **)(v70 + v73);
            v75 = *(void **)(v72 + v73);
            if (v74)
            {
              if (!v75)
                return 0;
              sub_100008814();
              v76 = v75;
              v77 = sub_100008978((uint64_t)v74);

              if ((v77 & 1) == 0)
                return 0;
            }
            else if (v75)
            {
              return 0;
            }
            v78 = v85[18];
            v79 = *(void **)(v86 + v78);
            v80 = *(void **)(v87 + v78);
            if (v79)
            {
              if (!v80)
                return 0;
              sub_100008814();
              v81 = v80;
              v82 = sub_100008978((uint64_t)v79);

              if ((v82 & 1) == 0)
                return 0;
            }
            else if (v80)
            {
              return 0;
            }
            return 1;
          }
          sub_1000088EC((uint64_t)v60);
          sub_1000088EC((uint64_t)v59);
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v64, v63);
        }
        v36 = &qword_10005BF58;
        v37 = (uint64_t)v61;
        goto LABEL_25;
      }
      sub_1000088EC((uint64_t)v19);
      sub_1000088EC((uint64_t)v22);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v48, v35);
    }
    v36 = &qword_10005BF60;
    v37 = v46;
    goto LABEL_25;
  }
  sub_1000087A8((uint64_t)v15, (uint64_t)v25, (uint64_t *)&unk_10005C4C0);
  sub_1000088A0(v34);
  if (!v49)
  {
    v38 = v34;
    v39 = v99;
    v40 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v97, v38, v35);
    sub_1000059B4(&qword_10005BF78, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v42 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v40, v100, v41);
    v35 = v100;
    v84 = v42;
    v43 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v43(v40, v100);
    sub_10000898C((uint64_t)v28);
    sub_10000898C((uint64_t)v30);
    v43((uint64_t)v25, v35);
    sub_10000898C((uint64_t)v15);
    if ((v84 & 1) == 0)
      return 0;
    goto LABEL_16;
  }
  sub_1000087DC((uint64_t)v28, (uint64_t *)&unk_10005C4C0);
  sub_1000087DC((uint64_t)v30, (uint64_t *)&unk_10005C4C0);
  (*(void (**)(_BYTE *, uint64_t))(v99 + 8))(v25, v35);
LABEL_14:
  v36 = &qword_10005BF60;
  v37 = (uint64_t)v15;
LABEL_25:
  sub_1000087DC(v37, v36);
  return 0;
}

uint64_t sub_100008420@<X0>(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v63 = a3;
  v61 = a2;
  v62 = a1;
  v64 = a4;
  sub_100005350(&qword_10005BE78);
  sub_100008864();
  __chkstk_darwin(v4);
  v60 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008910();
  type metadata accessor for Elevation(v6);
  sub_100008864();
  __chkstk_darwin(v7);
  sub_100008850();
  v59 = v8;
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v9);
  sub_1000088BC();
  v58 = v10;
  sub_10000896C();
  __chkstk_darwin(v11);
  v57 = (char *)&v51 - v12;
  v13 = sub_100008910();
  v14 = type metadata accessor for CloudAltitudeKind(v13);
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  sub_100008894();
  __chkstk_darwin(v15);
  sub_100008850();
  v66 = v16;
  v17 = sub_100008910();
  v18 = type metadata accessor for WeatherCondition(v17);
  v52 = *(_QWORD *)(v18 - 8);
  v53 = v18;
  sub_100008894();
  __chkstk_darwin(v19);
  sub_100008850();
  v65 = v20;
  v21 = sub_100008910();
  v22 = type metadata accessor for Calendar(v21);
  __chkstk_darwin(v22);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008944();
  sub_100008864();
  __chkstk_darwin(v25);
  v54 = (uint64_t)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1000088F4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v29);
  v34 = (char *)&v51 - v33;
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v51 - v36;
  v38 = Date.init()(v35);
  Date.startOfDay.getter(v38);
  v39 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  v40 = v39(v34, v27);
  v51 = v39;
  static Location.cupertino.getter(v40);
  sub_10000891C();
  sub_100008904(9);
  sub_1000088E0();
  sub_10000891C();
  Date.wc_addMinutes(_:calendar:)(41, v24);
  sub_1000088E0();
  v39(v31, v27);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v65, enum case for WeatherCondition.mostlyClear(_:), v53);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v66, enum case for CloudAltitudeKind.low(_:), v56);
  sub_10000891C();
  v41 = (uint64_t)v57;
  sub_100008904(7);
  sub_1000088E0();
  sub_10000895C(v41);
  sub_10000891C();
  v42 = v58;
  sub_100008904(19);
  sub_1000088E0();
  sub_10000895C(v42);
  v43 = v59;
  Elevation.init(_:isPM:)(0, 52.0);
  v44 = type metadata accessor for BackgroundMoonData(0);
  v45 = v60;
  sub_10000658C(v60, 1, 1, v44);
  v46 = (uint64_t)v61;
  v47 = v61;
  v48 = (uint64_t)v62;
  v49 = v62;
  sub_1000078A4(v54, (uint64_t)v34, v65, v66, v41, v42, v43, 1, v64, 0.0, 0.0, v45, v48, v46, v63);
  return v51(v37, v27);
}

void sub_1000087A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100005350(a3);
  sub_10000894C(*(_QWORD *)(v3 - 8));
  sub_100005D3C();
}

void sub_1000087DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100005350(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_100005D3C();
}

unint64_t sub_100008814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005BF68;
  if (!qword_10005BF68)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005BF68);
  }
  return result;
}

uint64_t sub_1000088A0(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

void sub_1000088D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1000087A8(a1, a2, v2);
}

void sub_1000088D8(uint64_t a1)
{
  uint64_t *v1;

  sub_1000087DC(a1, v1);
}

uint64_t sub_1000088E0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

void sub_1000088EC(uint64_t a1)
{
  uint64_t *v1;

  sub_1000087DC(a1, v1);
}

uint64_t sub_1000088F4()
{
  return type metadata accessor for Date(0);
}

void sub_1000088FC(uint64_t a1)
{
  uint64_t *v1;

  sub_1000087DC(a1, v1);
}

uint64_t sub_100008904(uint64_t a1)
{
  uint64_t v1;

  return Date.wc_addHours(_:calendar:)(a1, v1);
}

uint64_t sub_100008910()
{
  return 0;
}

uint64_t sub_10000891C()
{
  return static Calendar.current.getter();
}

void sub_100008924(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1000087A8(a1, a2, v2);
}

uint64_t sub_10000892C()
{
  return type metadata accessor for CloudAltitudeKind(0);
}

uint64_t sub_100008934()
{
  return type metadata accessor for WeatherCondition(0);
}

uint64_t sub_10000893C()
{
  return type metadata accessor for Elevation(0);
}

uint64_t sub_100008944()
{
  return type metadata accessor for Location(0);
}

uint64_t sub_10000894C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(v1, v2);
}

uint64_t sub_10000895C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(a1, 0, 1, v1);
}

uint64_t sub_100008978(uint64_t a1)
{
  uint64_t v1;

  return static NSObject.== infix(_:_:)(a1, v1);
}

uint64_t sub_100008984()
{
  return type metadata accessor for TargetWindowSizeClass(0);
}

void sub_10000898C(uint64_t a1)
{
  uint64_t *v1;

  sub_1000087DC(a1, v1);
}

uint64_t sub_100008994(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v3;
  v9 = sub_100005350(&qword_10005C920);
  __chkstk_darwin(v9);
  v10 = sub_10000B3B8();
  v11 = type metadata accessor for DispatchPredicate(v10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000A818();
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v15 = _dispatchPreconditionTest(_:)(v14);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v17 = sub_10000B5B0((uint64_t)&unk_100056280, 24);
    swift_weakInit(v17 + 16, v5);
    v18 = (_QWORD *)sub_10000B5B0((uint64_t)&unk_1000562A8, 40);
    v18[2] = v17;
    v18[3] = a2;
    v18[4] = a3;
    v19 = *(_QWORD *)(v5 + 40);
    swift_retain(a3);
    if (v19)
    {
      swift_retain(v19);
      Task.cancel()();
      swift_release(v19);
    }
    v20 = type metadata accessor for TaskPriority(0);
    sub_10000B3FC(v4, v21, v22, v20);
    v23 = (_QWORD *)sub_10000B5B0((uint64_t)&unk_1000562D0, 64);
    v23[2] = 0;
    v23[3] = 0;
    v23[4] = sub_10000A8A4;
    v23[5] = v18;
    v23[6] = v5;
    v23[7] = a1;
    swift_retain(v5);
    v24 = a1;
    v25 = sub_10000A15C(v4, (uint64_t)&unk_10005C048, (uint64_t)v23);
    v26 = *(_QWORD *)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v25;
    return swift_release(v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100008B84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v13[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = *(_QWORD *)(Strong + 40);
    *(_QWORD *)(Strong + 40) = 0;
    swift_release(Strong);
    Strong = swift_release(v7);
  }
  if ((static Task<>.isCancelled.getter(Strong) & 1) != 0)
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_10000AADC(v8, (uint64_t)qword_1000608C8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Task was cancelled before it completed. Call to completion will be skipped.", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
  else
  {
    a3(a1);
  }
}

uint64_t sub_100008CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7[2] = a4;
  v7[3] = a5;
  v9 = type metadata accessor for PosterData(0);
  v10 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[4] = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_10005C064);
  v7[5] = v11;
  *v11 = v7;
  v11[1] = sub_100008D3C;
  return sub_100008E4C(v10, a7);
}

uint64_t sub_100008D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  sub_10000B5B8();
  return swift_task_switch(v1, v2, v3);
}

uint64_t sub_100008D8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 48) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return sub_10000B140();
}

uint64_t sub_100008DF0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void (**)(uint64_t))(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 48));
  v2(v1);
  sub_10000AB38(v1, type metadata accessor for PosterData);
  sub_10000B2A0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100008E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Options;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  v4 = type metadata accessor for Elevation(0);
  v3[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[17] = v5;
  v3[18] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CloudAltitudeKind(0);
  v3[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[20] = v7;
  v3[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Wind(0);
  v3[22] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[23] = v9;
  v3[24] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005350(&qword_10005C068);
  v3[25] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v3[26] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v12);
  v3[28] = swift_task_alloc(v12);
  v13 = type metadata accessor for WeatherCondition(0);
  v3[29] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[30] = v14;
  v3[31] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100005350((uint64_t *)&unk_10005C4C0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v15);
  v3[33] = swift_task_alloc(v15);
  v16 = type metadata accessor for PosterDataModel(0);
  v3[34] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[35] = swift_task_alloc(v17);
  v3[36] = swift_task_alloc(v17);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100005350(&qword_10005BE78) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[37] = swift_task_alloc(v18);
  v3[38] = swift_task_alloc(v18);
  v19 = type metadata accessor for Date(0);
  v3[39] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v3[40] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[41] = swift_task_alloc(v21);
  v3[42] = swift_task_alloc(v21);
  v22 = type metadata accessor for CLLocationCoordinate2D.SolarEvents(0);
  v3[43] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v3[44] = v23;
  v3[45] = swift_task_alloc((*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TimeZone(0);
  v3[46] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v3[47] = v25;
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[48] = swift_task_alloc(v26);
  v3[49] = swift_task_alloc(v26);
  v27 = sub_100005350(&qword_10005C070);
  v3[50] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v3[51] = v28;
  v3[52] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100005350(&qword_10005C078);
  v3[53] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v3[54] = v30;
  v3[55] = swift_task_alloc((*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100005350(&qword_10005C080);
  v3[56] = v31;
  v3[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100005350(&qword_10005C088);
  v3[58] = v32;
  v3[59] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v32 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for WeatherServiceCaching.Options(0);
  v3[60] = v33;
  v3[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v33 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100005350(&qword_10005C090);
  v3[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v34 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100005350(&qword_10005C098);
  v3[63] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v35 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100005350(&qword_10005C0A0);
  v3[64] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  Options = type metadata accessor for WeatherServiceFetchOptions(0);
  v3[65] = Options;
  v38 = *(_QWORD *)(Options - 8);
  v3[66] = v38;
  v3[67] = swift_task_alloc((*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for CurrentWeather(0);
  v3[68] = v39;
  v40 = *(_QWORD *)(v39 - 8);
  v3[69] = v40;
  v41 = (*(_QWORD *)(v40 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[70] = swift_task_alloc(v41);
  v3[71] = swift_task_alloc(v41);
  return swift_task_switch(sub_100009230, 0, 0);
}

#error "1000093F4: call analysis failed (funcsize=219)"

uint64_t sub_1000095CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 600) = v0;
  swift_task_dealloc();
  sub_10000B2A0();
  sub_10000B5B8();
  return sub_10000B140();
}

#error "100009694: call analysis failed (funcsize=222)"

uint64_t sub_1000099D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 432);
  v3 = *(_QWORD *)(*v1 + 440);
  v6 = *(_QWORD *)(*v1 + 416);
  v5 = *(_QWORD *)(*v1 + 424);
  v7 = *(_QWORD *)(*v1 + 400);
  v8 = *(_QWORD *)(*v1 + 408);
  *(_QWORD *)(*v1 + 616) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (!v0)
    sub_10000AB60(*(_QWORD *)(v2 + 456), &qword_10005C080);
  sub_10000B5B8();
  return sub_10000B140();
}

#error "100009AB4: call analysis failed (funcsize=210)"

uint64_t sub_100009DF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_10000B618(*(_QWORD *)(v0 + 528));
  sub_10000B548();
  v1 = sub_10000B548();
  v2 = (void *)Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter();
  if (sub_10000B518(v3))
  {
    v4 = sub_10000B0C8(12);
    v12 = sub_10000B0C8(32);
    sub_10000B1D4(4.8751e-34);
    v5 = sub_10000B5DC();
    v7 = sub_10000B5F4(v5, v6);
    sub_10000B19C(v7);
    sub_100005D2C();
    sub_10000B0C0();
    sub_10000B0C0();
    sub_10000B390((void *)&_mh_execute_header, v8, v9, "Update task failed to fetch current weather; error=%{public}s");
    sub_10000B528((uint64_t)&type metadata for Any);
    sub_10000AFFC(v12);
    sub_10000AFFC(v4);

    sub_10000B0C0();
  }
  else
  {
    sub_10000B0C0();
    sub_10000B0C0();
    sub_10000B0C0();

  }
  v10 = sub_10000B444();
  sub_10000B590(v10);
  sub_10000AE7C();
  sub_10000B4C0();
  sub_10000B2A0();
  sub_10000B510();
  sub_10000B580();
  sub_10000B578();
  sub_10000B560();
  sub_10000B498();
  sub_10000B558();
  sub_10000B588();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_10000B0FC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100009FB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_10000B548();
  v1 = sub_10000B548();
  v2 = (void *)Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter();
  if (sub_10000B518(v3))
  {
    v4 = sub_10000B0C8(12);
    v12 = sub_10000B0C8(32);
    sub_10000B1D4(4.8751e-34);
    v5 = sub_10000B5DC();
    v7 = sub_10000B5F4(v5, v6);
    sub_10000B19C(v7);
    sub_100005D2C();
    sub_10000B0C0();
    sub_10000B0C0();
    sub_10000B390((void *)&_mh_execute_header, v8, v9, "Update task failed to fetch current weather; error=%{public}s");
    sub_10000B528((uint64_t)&type metadata for Any);
    sub_10000AFFC(v12);
    sub_10000AFFC(v4);

    sub_10000B0C0();
  }
  else
  {
    sub_10000B0C0();
    sub_10000B0C0();
    sub_10000B0C0();

  }
  v10 = sub_10000B444();
  sub_10000B590(v10);
  sub_10000AE7C();
  sub_10000B4C0();
  sub_10000B2A0();
  sub_10000B510();
  sub_10000B580();
  sub_10000B578();
  sub_10000B560();
  sub_10000B498();
  sub_10000B558();
  sub_10000B588();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_10000B0FC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10000A15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  if (sub_100006580(a1, 1, v6) == 1)
  {
    sub_10000AB60(a1, &qword_10005C920);
    v7 = 7168;
  }
  else
  {
    v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = v8 | 0x1C00;
  }
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
    v14 = v13;
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = swift_allocObject(&unk_1000562F8, 32, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v18[0] = 0;
    v18[1] = 0;
    v16 = v18;
    v18[2] = v12;
    v18[3] = v14;
  }
  else
  {
    v16 = 0;
  }
  return swift_task_create(v7, v16, (char *)&type metadata for () + 8, &unk_10005C058, v15);
}

double sub_10000A2A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_10000B3B8();
  sub_10000A818();
  *v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v3);
  v5 = _dispatchPreconditionTest(_:)(v1);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v3);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_10005BB58, sub_100042334);
    goto LABEL_4;
  }
  v3 = *(_QWORD *)(v2 + 40);
  if (!v3)
    return result;
  v7 = qword_10005BB58;
  swift_retain(*(_QWORD *)(v2 + 40));
  if (v7 != -1)
    goto LABEL_9;
LABEL_4:
  v8 = type metadata accessor for Logger(0);
  v9 = sub_10000AADC(v8, (uint64_t)qword_1000608C8);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Canceling task to update poster data", v12, 2u);
    sub_10000AFFC((uint64_t)v12);
  }

  Task.cancel()();
  swift_release(v3);
  v13 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

_QWORD *sub_10000A430()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return v0;
}

uint64_t sub_10000A464()
{
  uint64_t v0;

  sub_10000A430();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for PosterDataUpdater()
{
  return objc_opt_self(_TtC13WeatherPoster17PosterDataUpdater);
}

void sub_10000A4A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for WeatherService(0);
  v0[2] = sub_10002B428();
  v1 = type metadata accessor for MoonDataProvider(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v0[3] = MoonDataProvider.init()();
  if (qword_10005BB20 != -1)
    swift_once(&qword_10005BB20, sub_10001936C);
  v2 = qword_100060828;
  v0[4] = qword_100060828;
  v0[5] = 0;
  swift_retain(v2);
  sub_100005D3C();
}

uint64_t sub_10000A52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a3;
  v26 = a4;
  v5 = sub_100005350(&qword_10005C0C8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005350(&qword_10005C070);
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  __chkstk_darwin();
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005350(&qword_10005C078);
  v21 = *(_QWORD *)(v12 - 8);
  v22 = v12;
  __chkstk_darwin();
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CurrentWeather(0);
  static WeatherQuery.current.getter();
  v16 = sub_100005350(&qword_10005C080);
  static WeatherQuery.minute.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_100056320, v18 + v7, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19 + v18, v8, v5);
  WeatherService.fetchWeather<A, B>(for:including:_:options:completion:)(v25, v14, v11, v26, sub_10000AD00, v19, v15, v16);
  swift_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v22);
}

uint64_t sub_10000A6F4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_100005350(&qword_10005C088);
  __chkstk_darwin();
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005350(&qword_10005C0D0);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000AD40(a1, (uint64_t)v6, &qword_10005C0D0);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    v11 = *v6;
    v7 = sub_100005350(&qword_10005C0C8);
    return CheckedContinuation.resume(throwing:)(&v11, v7);
  }
  else
  {
    sub_10000AD6C((uint64_t)v6, (uint64_t)v3, &qword_10005C088);
    v9 = sub_100005350(&qword_10005C0C8);
    return CheckedContinuation.resume(returning:)(v3, v9);
  }
}

unint64_t sub_10000A818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C038;
  if (!qword_10005C038)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_10005C038);
  }
  return result;
}

uint64_t sub_10000A854()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000A878()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10000A8A4(uint64_t a1)
{
  uint64_t v1;

  sub_100008B84(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10000A8B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10000A8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = (_QWORD *)swift_task_alloc(dword_10005C044);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000A96C;
  sub_10000B620();
  return sub_100008CB0(v4, v5, v6, v7, v8, v9, v2);
}

uint64_t sub_10000A96C()
{
  uint64_t v0;

  sub_10000B008();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000A998(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000A9FC;
  return v6(a1);
}

uint64_t sub_10000A9FC()
{
  uint64_t v0;

  sub_10000B008();
  return sub_10000B24C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10000AA24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000AA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10005C054);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AAB8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10005C050 + dword_10005C050))(a1, v4);
}

uint64_t sub_10000AAB8()
{
  uint64_t v0;

  sub_10000B008();
  return sub_10000B24C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10000AADC(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_10000AAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10000AB38(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_10000B41C(v2);
  sub_100005D3C();
}

void sub_10000AB60(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_100005350(a2);
  sub_10000B41C(v2);
  sub_100005D3C();
}

uint64_t sub_10000AB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterDataModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000ABCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C0B0;
  if (!qword_10005C0B0)
  {
    v1 = type metadata accessor for WeatherServiceCaching.Options(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherServiceCaching.Options, v1);
    atomic_store(result, (unint64_t *)&qword_10005C0B0);
  }
  return result;
}

unint64_t sub_10000AC0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C0C0;
  if (!qword_10005C0C0)
  {
    v1 = sub_10000AC50(&qword_10005C0B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10005C0C0);
  }
  return result;
}

uint64_t sub_10000AC50(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000AC94(uint64_t a1)
{
  uint64_t *v1;

  return sub_10000A52C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10000ACA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_100005350(&qword_10005C0C8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = ((v2 + 16) & ~v2) + *(_QWORD *)(v1 + 64);
  v4 = v2 | 7;
  sub_10000B618(v1);
  return swift_deallocObject(v0, v3, v4);
}

uint64_t sub_10000AD00(uint64_t a1)
{
  sub_100005350(&qword_10005C0C8);
  return sub_10000A6F4(a1);
}

void sub_10000AD40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_10000B568(a1, a2, a3);
  sub_10000B634(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100005D3C();
}

void sub_10000AD6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_10000B568(a1, a2, a3);
  sub_10000B634(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100005D3C();
}

uint64_t sub_10000AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18 = v16[48];
  *(_QWORD *)(v17 - 160) = v16[47];
  *(_QWORD *)(v17 - 152) = v18;
  v19 = v16[45];
  *(_QWORD *)(v17 - 168) = v16[46];
  v25 = v16[41];
  v24 = v16[40];
  v23 = v16[38];
  *(_QWORD *)(v17 - 144) = v16[37];
  v22 = v16[36];
  v20 = v16[32];
  *(_QWORD *)(v17 - 200) = v16[33];
  *(_QWORD *)(v17 - 192) = v20;
  *(_QWORD *)(v17 - 176) = v16[31];
  return static TimeZone.current.getter(a1, a2, a3, a4, a5, a6, a7, a8, a9, v19, v16[24], v16[27], v16[23], a14, v16[22], a16, v16[25], v16[28], v16[26],
           v22,
           v23,
           v16[21],
           v24,
           v16[18],
           v25,
           v16[30],
           v16[20]);
}

uint64_t sub_10000AE7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[71];
  v3 = v0[21];
  *(_QWORD *)(v1 - 104) = v0[24];
  *(_QWORD *)(v1 - 96) = v3;
  *(_QWORD *)(v1 - 88) = v0[18];
  return swift_task_dealloc(v2);
}

uint64_t sub_10000AF10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[71];
  v3 = v0[32];
  *(_QWORD *)(v1 - 200) = v0[33];
  *(_QWORD *)(v1 - 192) = v3;
  v4 = v0[28];
  *(_QWORD *)(v1 - 184) = v0[31];
  *(_QWORD *)(v1 - 176) = v4;
  v5 = v0[24];
  *(_QWORD *)(v1 - 168) = v0[27];
  *(_QWORD *)(v1 - 160) = v5;
  v6 = v0[18];
  *(_QWORD *)(v1 - 152) = v0[21];
  *(_QWORD *)(v1 - 144) = v6;
  return swift_task_dealloc(v2);
}

uint64_t sub_10000AFA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[71];
  v3 = v0[69];
  *(_QWORD *)(v1 - 152) = v0[68];
  *(_QWORD *)(v1 - 144) = v2;
  *(_QWORD *)(v1 - 168) = v0[49];
  *(_QWORD *)(v1 - 160) = v3;
  v4 = v0[46];
  *(_QWORD *)(v1 - 184) = v0[47];
  *(_QWORD *)(v1 - 176) = v4;
  *(_QWORD *)(v1 - 192) = v0[45];
  *(_QWORD *)(v1 - 200) = v0[43];
  return swift_slowAlloc(32, -1);
}

uint64_t sub_10000AFFC(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

uint64_t sub_10000B008()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_10000B028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_BYTE *)(v34 + *(int *)(v32 + 40)) = v33 & 1;
  *(_QWORD *)a20 = 49;
  *((_QWORD *)a20 + 1) = 0xE100000000000000;
  *((_QWORD *)a20 + 2) = v36;
  *((_QWORD *)a20 + 3) = v37;
  return (*(uint64_t (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v35 - 160) + 32))(&a20[*(int *)(a32 + 24)], *(_QWORD *)(v35 - 152), *(_QWORD *)(v35 - 168));
}

void sub_10000B064()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[71];
  v4 = v1[69];
  *(_QWORD *)(v2 - 152) = v1[68];
  *(_QWORD *)(v2 - 144) = v3;
  *(_QWORD *)(v2 - 168) = v1[49];
  *(_QWORD *)(v2 - 160) = v4;

}

uint64_t sub_10000B098(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10000B0C0()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_10000B0C8(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_10000B0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v31 + v29[6]) = v32;
  *(_QWORD *)(v31 + v29[7]) = v33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a27 + 32))(v31 + v29[8], v30, a29);
}

uint64_t sub_10000B0FC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10000B118(uint64_t a1)
{
  uint64_t v1;

  return swift_allocObject(v1, ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) | 7);
}

uint64_t sub_10000B140()
{
  return swift_task_switch();
}

uint64_t sub_10000B148()
{
  uint64_t v0;
  uint64_t v1;

  return MoonDataProvider.weatherBackgroundMoonData(for:timeZone:coordinate:)(v0, v1);
}

uint64_t sub_10000B164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  double v15;
  double v16;

  return static GeoHandler.getElevation(for:timeZone:on:)(a14, v14, v15, v16);
}

uint64_t sub_10000B180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a23 + 32))(v23, v24, v25);
}

uint64_t sub_10000B19C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 48) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56, v3, v2);
}

uint64_t sub_10000B1B8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 16))(*(_QWORD *)(v1 - 152), v0, *(_QWORD *)(v1 - 168));
}

uint64_t sub_10000B1D4(float a1)
{
  uint64_t v1;
  uint64_t v2;
  float *v3;
  uint64_t v4;

  *v3 = a1;
  return swift_getErrorValue(v1, v4, v2);
}

uint64_t sub_10000B1F0(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  a1[1] = a9;
  return CurrentWeather.date.getter(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14);
}

uint64_t sub_10000B20C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 56) = 1752392040;
  *(_QWORD *)(v2 - 136) = result;
  return result;
}

uint64_t sub_10000B230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a26 + 32))(v29 + *(int *)(v28 + 20), *(_QWORD *)(v30 - 176), a28);
}

uint64_t sub_10000B24C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10000B258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return CurrentWeather.date.getter(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_10000B270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 16) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v4, v3 + 24, v2, v1 + 32);
}

uint64_t sub_10000B288()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2082;
  return sub_10002821C();
}

uint64_t sub_10000B2A0()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v34 + *(int *)(v33 + 40)) = a21;
  return sub_10000AAF4(v34, a33);
}

uint64_t sub_10000B2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 8) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5, v4, v1, v2 + 22);
}

uint64_t sub_10000B2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return Measurement<>.converted(to:)(a1, a17);
}

uint64_t sub_10000B2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a30 + 32))(v33 + *(int *)(v31 + 36), v32, a31);
}

id sub_10000B308(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_10000B310(float a1)
{
  float *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v3, v1 + 1, v1 + 3);
}

uint64_t sub_10000B328()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;

  return CLLocationCoordinate2D.solarEvents(referenceDate:timeZone:)(v0, v1, v2, v3);
}

uint64_t sub_10000B340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, a35);
}

uint64_t sub_10000B354()
{
  return CurrentWeather.predominateCloudAltitudeKind.getter();
}

uint64_t sub_10000B368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a19 + 8))(v20, v19);
}

uint64_t sub_10000B37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return CurrentWeather.date.getter(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

void sub_10000B390(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10000B3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a13 + 8))(v15, a15);
}

uint64_t sub_10000B3B8()
{
  return 0;
}

uint64_t sub_10000B3D4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return swift_arrayDestroy(a26, 2, a1 + 8);
}

void sub_10000B3E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_10000AD6C(*(_QWORD *)(v3 - 192), v2 + *(int *)(v0 + 32), v1);
}

uint64_t sub_10000B3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000658C(a1, 1, 1, a4);
}

uint64_t sub_10000B408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;

  return a16(v35, a35);
}

uint64_t sub_10000B41C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void sub_10000B430(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0x20u);
}

uint64_t sub_10000B444()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 104) = 3;
  return type metadata accessor for PosterData(0);
}

uint64_t sub_10000B458()
{
  uint64_t v0;

  return sub_10000AB88(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 104));
}

uint64_t sub_10000B468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_10000B478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return CurrentWeather.date.getter(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

BOOL sub_10000B488(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10000B498()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a35 + 8))(*(_QWORD *)(v35 - 192), *(_QWORD *)(v35 - 200));
}

uint64_t sub_10000B4B0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_10000B4C0()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

id sub_10000B4F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  const char *v3;

  v3 = *(const char **)(v1 + 2616);
  *(_QWORD *)(v2 - 184) = v0;
  return objc_msgSend(v0, v3);
}

uint64_t sub_10000B500()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 152));
}

uint64_t sub_10000B510()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

BOOL sub_10000B518(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10000B528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1 + 8);
}

uint64_t sub_10000B538()
{
  return Wind.speed.getter();
}

uint64_t sub_10000B548()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_10000B550(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t sub_10000B558()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B560()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B568(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_100005350(a3);
}

uint64_t sub_10000B578()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B580()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B588()
{
  uint64_t v0;

  return swift_task_dealloc(v0);
}

uint64_t sub_10000B590(uint64_t a1)
{
  uint64_t v1;

  return swift_storeEnumTagMultiPayload(v1, a1, 0);
}

uint64_t sub_10000B5A0(uint64_t a1)
{
  uint64_t v1;

  return swift_storeEnumTagMultiPayload(v1, a1, 1);
}

uint64_t sub_10000B5B0(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7);
}

void sub_10000B5C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_10000AD40(v3, *(_QWORD *)(v4 - 144), a3);
}

uint64_t sub_10000B5D0()
{
  return type metadata accessor for PosterDataModel.DataPoint(0);
}

uint64_t sub_10000B5DC()
{
  uint64_t v0;

  return Error.logSafeDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10000B5E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  sub_10000AD6C(*(_QWORD *)(v3 - 200), a2, v2);
}

uint64_t sub_10000B5F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t sub_10000B600()
{
  uint64_t v0;

  return Measurement.value.getter(v0);
}

uint64_t sub_10000B60C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_10000B618@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_10000B634@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_10000B640()
{
  return CurrentWeather.wind.getter();
}

uint64_t sub_10000B64C()
{
  return CLLocationCoordinate2D.SolarEvents.sunrise.getter();
}

uint64_t storeEnumTagSinglePayload for WakeState.ScreenState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10000B6A4 + 4 * byte_100045BA9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10000B6D8 + 4 * asc_100045BA4[v4]))();
}

uint64_t sub_10000B6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000B6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000B6E8);
  return result;
}

uint64_t sub_10000B6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000B6FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10000B700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000B708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WakeState.ScreenState()
{
  return &type metadata for WakeState.ScreenState;
}

ValueMetadata *type metadata accessor for WakeState()
{
  return &type metadata for WakeState;
}

unint64_t sub_10000B738()
{
  unint64_t result;

  result = qword_10005C0D8;
  if (!qword_10005C0D8)
  {
    result = swift_getWitnessTable(&unk_100045C30, &type metadata for WakeState.ScreenState);
    atomic_store(result, (unint64_t *)&qword_10005C0D8);
  }
  return result;
}

uint64_t sub_10000B774(char a1, uint64_t a2, double a3)
{
  unsigned int v3;

  if (*(double *)&a2 == a3)
    v3 = 3;
  else
    v3 = *(double *)&a2 >= a3;
  if (a1 == 3)
    return 3;
  else
    return v3;
}

uint64_t sub_10000B79C(char a1)
{
  if (!a1)
    return 28271;
  if (a1 == 1)
    return 6710895;
  return 0x697469736E617274;
}

uint64_t sub_10000B7EC()
{
  char *v0;

  return sub_10000B79C(*v0);
}

uint64_t sub_10000B7F4(char a1, double a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  _QWORD v11[2];

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v11, "screenState:");
  HIWORD(v11[1]) = -5120;
  if (a1)
  {
    if (a1 == 1)
      v4 = 6710895;
    else
      v4 = 0x697469736E617274;
    if (a1 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xED0000676E696E6FLL;
  }
  else
  {
    v5 = 0xE200000000000000;
    v4 = 28271;
  }
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  v7._countAndFlagsBits = 0x6572676F7270202CLL;
  v7._object = (void *)0xEB000000003A7373;
  String.append(_:)(v7);
  v8._countAndFlagsBits = Double.description.getter(a2);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  return v11[0];
}

uint64_t sub_10000B904()
{
  uint64_t v0;

  return sub_10000B7F4(*(_BYTE *)v0, *(double *)(v0 + 8));
}

uint64_t *sub_10000B910(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    v12 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
    v13 = v11;
  }
  return a1;
}

void sub_10000B9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_10000BA10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v11 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  v12 = v10;
  return a1;
}

uint64_t sub_10000BAA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10000BB44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v9) = *(_DWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_10000BBD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10000BC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000BC74);
}

uint64_t sub_10000BC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for UUID(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_100006580(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_10000BCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000BCF8);
}

uint64_t sub_10000BCF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for UUID(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_10000658C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for DynamicRotationAnimationState(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C138;
  if (!qword_10005C138)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicRotationAnimationState);
  return result;
}

uint64_t sub_10000BDA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[6] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_10000BE3C(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  int *v10;
  id v11;
  CFAbsoluteTime Current;
  int v13;

  v10 = (int *)type metadata accessor for DynamicRotationAnimationState(0);
  *(_QWORD *)(a4 + v10[7]) = a1;
  *(_QWORD *)(a4 + v10[5]) = a2;
  *(_QWORD *)(a4 + v10[6]) = a3;
  v11 = a1;
  UUID.init()(v11);
  Current = CFAbsoluteTimeGetCurrent();

  *(CFAbsoluteTime *)(a4 + v10[8]) = Current;
  *(float *)(a4 + v10[9]) = sub_100019234(a2, a3, a5);
  *(_DWORD *)(a4 + v10[10]) = v13;
}

BOOL sub_10000BEE8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_10000BEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7)
    sub_1000139EC();
  else
    sub_100013978(v3, v7, v6);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

void sub_10000BF5C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_10002EB54(a1);
  v5 = v4;
  v6 = sub_10002EB54(a2);
  if (v3 == v6 && v5 == v7)
    sub_1000139EC();
  else
    sub_100013978(v3, v7, v6);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

void sub_10000BFC0(char a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656E696C66666FLL;
  else
    v3 = 0x6C62616863616572;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656E696C66666FLL;
  else
    v5 = 0x6C62616863616572;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE900000000000065;
  if (v3 == v5 && v4 == v6)
    sub_1000139EC();
  else
    sub_100013978(v3, a2, v5);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

void sub_10000C044(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10000C09C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10000C14C + 4 * byte_100045CD7[a2]))(0x616E6964726F6F63);
}

void sub_10000C14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1 == 0x616E6964726F6F63 && v2 == 0xEA00000000006574)
    sub_1000139EC();
  else
    sub_100013978(a1, a2, 0x616E6964726F6F63);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

uint64_t sub_10000C20C(uint64_t a1, uint64_t a2)
{
  return sub_10000C5FC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, &qword_10005C368);
}

void sub_10000C228(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10000C270(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10000C354 + 4 * byte_100045CE6[a2]))(0x6F697469646E6F63);
}

void sub_10000C354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1 == 0x6F697469646E6F63 && v2 == 0xE90000000000006ELL)
    sub_1000139EC();
  else
    sub_100013978(a1, a2, 0x6F697469646E6F63);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

void sub_10000C448(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10000C49C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10000C4FC + 4 * byte_100045CF2[a2]))(0x4F6B726F7774656ELL);
}

void sub_10000C4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1 == 0x4F6B726F7774656ELL && v2 == 0xEE00656E696C6666)
    sub_1000139EC();
  else
    sub_100013978(a1, a2, 0x4F6B726F7774656ELL);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

void sub_10000C56C(char a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 0x726F727265;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1635017060;
  else
    v5 = 0x726F727265;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    sub_1000139EC();
  else
    sub_100013978(v3, a2, v5);
  sub_1000139C8();
  sub_100005D2C();
  sub_100013994();
}

uint64_t sub_10000C5E0(uint64_t a1, uint64_t a2)
{
  return sub_10000C5FC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for TargetWindowSizeClass, &qword_10005C360);
}

uint64_t sub_10000C5FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a3;
  a3(0);
  sub_1000134F8(a4, v5);
  sub_100013CAC();
  sub_100013CAC();
  if (v11 == v9 && v12 == v10)
    sub_1000139EC();
  else
    LOBYTE(v5) = sub_100013978(v11, v6, v9);
  sub_1000139C8();
  sub_100005D2C();
  return v5 & 1;
}

void sub_10000C6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_100013B60();
  v2 = v1;
  v4 = v3;
  sub_100005350(&qword_10005C3A8);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_100013B40();
  v6 = type metadata accessor for WeatherCondition(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  sub_100013BBC(v11, (unint64_t *)&qword_10005C3A0, NSUserDefaults_ptr);
  v14 = static NSUserDefaults.weatherSharedInternal.getter();
  if (!v14)
    goto LABEL_5;
  v15 = (void *)v14;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "stringForKey:", v16);

  if (!v17)
    goto LABEL_5;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  WeatherCondition.init(rawValue:)(v18, v20);
  if (sub_100006580(v0, 1, v6) == 1)
  {
    sub_10000AB60(v0, &qword_10005C3A8);
LABEL_5:
    v21 = sub_100013A1C();
    sub_100013AF8(v4, v2 + *(int *)(v21 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    goto LABEL_6;
  }
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  v22(v13, v0, v6);
  if (qword_10005BB50 != -1)
    swift_once(&qword_10005BB50, sub_100042308);
  v23 = sub_100013AD0();
  sub_10000AADC(v23, (uint64_t)qword_1000608B0);
  v24 = sub_100013AF8((uint64_t)v10, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)sub_10000B0C8(12);
    v28 = sub_10000B0C8(32);
    v36 = v22;
    v29 = v28;
    v39 = v28;
    v37 = v4;
    *(_DWORD *)v27 = 136446210;
    v35 = v27 + 4;
    v30 = WeatherCondition.rawValue.getter();
    v38 = sub_1000210CC(v30, v31, &v39);
    v4 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v35, v27 + 12);
    sub_100005D2C();
    sub_100013BA4();
    sub_100013C98((void *)&_mh_execute_header, v25, v26, "Rendering overridden weather condition=%{public}s", v27);
    sub_100013C90(v29, v32, (uint64_t)&type metadata for Any + 8);
    v33 = v29;
    v22 = v36;
    sub_10000AFFC(v33);
    sub_10000AFFC((uint64_t)v27);
  }
  else
  {
    sub_100013BA4();
  }

  v22((char *)v4, (uint64_t)v13, v6);
LABEL_6:
  sub_1000139A8();
}

void sub_10000C988(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  NSString v3;

  sub_100013BBC(a1, (unint64_t *)&qword_10005C3A0, NSUserDefaults_ptr);
  v1 = static NSUserDefaults.weatherSharedInternal.getter();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "BOOLForKey:", v3);

  }
  sub_100013994();
}

uint64_t sub_10000CA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);

  v2 = v0;
  v3 = sub_100013AD0();
  __chkstk_darwin(v3);
  v4 = sub_100013A88();
  v5 = type metadata accessor for WeatherConditionGradientManager(v4);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_QWORD *)(v0 + 64) = 0;
  sub_100013A7C(v5);
  *(_QWORD *)(v0 + 72) = WeatherConditionGradientManager.init()();
  v6 = type metadata accessor for WeatherConditionConfigurationManager(0);
  sub_100013A7C(v6);
  *(_QWORD *)(v0 + 80) = WeatherConditionConfigurationManager.init()();
  v7 = type metadata accessor for VFXLightningManager();
  v8 = sub_10000B5B0(v7, 25);
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 24) = 0;
  *(_QWORD *)(v0 + 88) = v8;
  v9 = type metadata accessor for VFXSimulationManager();
  v10 = sub_10000B5B0(v9, 25);
  *(_QWORD *)(v10 + 16) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v10 + 24) = 0;
  *(_QWORD *)(v0 + 96) = v10;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_QWORD *)(v0 + 144) = 0;
  v11 = v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel;
  v12 = type metadata accessor for BackgroundAnimationData.Model(0);
  sub_10000B3FC(v11, v13, v14, v12);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel) = 0;
  v15 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  v16 = sub_100013A1C();
  sub_10000B3FC(v15, v17, v18, v16);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer) = 0;
  v19 = (_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
  *v19 = 0;
  v19[1] = 0;
  v20 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation;
  v21 = sub_1000139C0();
  sub_10000B3FC(v20, v22, v23, v21);
  v24 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime;
  v25 = sub_1000088F4();
  sub_10000B3FC(v24, v26, v27, v25);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastPauseAnimationTimerDuration) = 0;
  v28 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState;
  v29 = type metadata accessor for DynamicRotationState(0);
  sub_10000B3FC(v28, v30, v31, v29);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_deviceRotationTimer) = 0;
  v32 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate;
  *(_QWORD *)(v32 + 8) = 0;
  swift_unknownObjectWeakInit(v32, 0);
  sub_100013CB8(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_logger);
  sub_100013CB8(v1);
  v33 = type metadata accessor for VFXSnapshotRenderer(0);
  sub_100013A7C(v33);
  v34 = sub_1000390D8(v1);
  v35 = sub_100013B78();
  v36(v35);
  *(_QWORD *)(v2 + 104) = v34;
  return v2;
}

void sub_10000CC40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t Strong;
  uint64_t v52;
  Class isa;
  uint64_t ObjectType;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  char v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  char v101;
  os_log_type_t v102;
  os_log_type_t v103;
  uint8_t *v104;
  void **v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  os_log_type_t v115;
  uint64_t v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  NSObject *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD v141[3];
  uint64_t v142;

  sub_100013B60();
  v1 = v0;
  v133 = v2;
  v4 = v3;
  v126 = sub_100013AD0();
  v125 = *(_QWORD *)(v126 - 8);
  sub_100008894();
  __chkstk_darwin(v5);
  sub_100008850();
  v129 = v6;
  v7 = sub_100008910();
  v128 = type metadata accessor for SkyBackgroundGradient(v7);
  v132 = *(_QWORD *)(v128 - 8);
  sub_100008894();
  __chkstk_darwin(v8);
  sub_100008850();
  v124 = v9;
  sub_100005350(&qword_10005C370);
  sub_100008864();
  __chkstk_darwin(v10);
  sub_1000088BC();
  v127 = v11;
  sub_10000896C();
  __chkstk_darwin(v12);
  v131 = (char *)&v124 - v13;
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v14);
  sub_100008850();
  v136 = v15;
  v16 = sub_100013A1C();
  sub_100008864();
  __chkstk_darwin(v17);
  sub_1000088BC();
  v138 = v18;
  sub_10000896C();
  __chkstk_darwin(v19);
  sub_100013C74();
  v139 = v20;
  sub_10000896C();
  __chkstk_darwin(v21);
  sub_100013C74();
  v130 = v22;
  sub_10000896C();
  __chkstk_darwin(v23);
  v25 = (char *)&v124 - v24;
  v26 = sub_100005350(&qword_10005C4E0);
  sub_100008864();
  __chkstk_darwin(v27);
  sub_100013B18();
  v30 = v29 - v28;
  v31 = (uint64_t (*)(uint64_t))&qword_10005C320;
  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v32);
  sub_1000088BC();
  v135 = v33;
  sub_10000896C();
  __chkstk_darwin(v34);
  sub_100013C74();
  v134 = v35;
  sub_10000896C();
  __chkstk_darwin(v36);
  sub_100013C74();
  v137 = v37;
  sub_10000896C();
  v39 = __chkstk_darwin(v38);
  v41 = ((char *)&v124 - v40);
  __chkstk_darwin(v39);
  v43 = (char *)&v124 - v42;
  v44 = v4;
  sub_10001352C(v4, (uint64_t)&v124 - v42, type metadata accessor for PosterAnimationViewModel);
  sub_100013B84((uint64_t)v43);
  v45 = v1;
  v46 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  sub_1000139A0(v46, (uint64_t)&v142, 0);
  v47 = v30 + *(int *)(v26 + 48);
  sub_10000AD40((uint64_t)v43, v30, &qword_10005C320);
  sub_10000AD40(v46, v47, &qword_10005C320);
  sub_1000139D0(v30);
  if (v49)
  {
    sub_10000AB60((uint64_t)v43, &qword_10005C320);
    sub_1000139D0(v47);
    if (v49)
    {
      sub_10000AB60(v30, &qword_10005C320);
      v48 = v44;
LABEL_18:
      v81 = v48;
      v82 = v138;
      sub_10001352C(v81, v138, type metadata accessor for PosterAnimationViewModel);
      Logger.logObject.getter(v83);
      v84 = sub_100013BB4();
      if (sub_100013B08(v84))
      {
        v68 = (uint8_t *)sub_10000B0C8(12);
        v69 = sub_10000B0C8(32);
        v141[0] = v69;
        *(_DWORD *)v68 = 136446210;
        v85 = sub_1000088F4();
        sub_1000134F8((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
        v87 = dispatch thunk of CustomStringConvertible.description.getter(v85, v86);
        v89 = sub_100013CA0(v87, v88);
        v90 = sub_100013C38(v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v90, v91, v68 + 4, v68 + 12);
        sub_100005D2C();
        sub_10000AB38(v82, type metadata accessor for PosterAnimationViewModel);
        v77 = "Animation already reflects the view model with weather data at date=%{public}s";
        goto LABEL_20;
      }

      v93 = v82;
      goto LABEL_23;
    }
    goto LABEL_9;
  }
  sub_10000AD40(v30, (uint64_t)v41, &qword_10005C320);
  sub_1000139D0(v47);
  if (v49)
  {
    sub_10000AB60((uint64_t)v43, &qword_10005C320);
    sub_10000AB38((uint64_t)v41, type metadata accessor for PosterAnimationViewModel);
LABEL_9:
    sub_10000AB60(v30, &qword_10005C4E0);
    v50 = v45;
    v48 = v44;
    goto LABEL_10;
  }
  v31 = type metadata accessor for PosterAnimationViewModel;
  sub_1000134CC(v47, (uint64_t)v25, type metadata accessor for PosterAnimationViewModel);
  v78 = sub_100007B88((uint64_t)v41, (uint64_t)v25);
  v79 = sub_100013B78();
  sub_10000AB38(v79, v80);
  sub_10000AB60((uint64_t)v43, &qword_10005C320);
  sub_10000AB38((uint64_t)v41, type metadata accessor for PosterAnimationViewModel);
  sub_10000AB60(v30, &qword_10005C320);
  v50 = v45;
  v48 = v44;
  if ((v78 & 1) != 0)
    goto LABEL_18;
LABEL_10:
  v41 = (v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate);
  Strong = swift_unknownObjectWeakLoadStrong(v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate);
  if (!Strong
    || (v52 = Strong,
        isa = v41[1].isa,
        ObjectType = swift_getObjectType(Strong),
        v41 = (*((uint64_t (**)(uint64_t, Class))isa + 1))(ObjectType, isa),
        swift_unknownObjectRelease(v52),
        (v41 & 1) == 0))
  {
    v65 = v139;
    sub_10001352C(v48, v139, type metadata accessor for PosterAnimationViewModel);
    Logger.logObject.getter(v66);
    v67 = sub_100013BB4();
    if (sub_100013B08(v67))
    {
      v68 = (uint8_t *)sub_10000B0C8(12);
      v69 = sub_10000B0C8(32);
      v141[0] = v69;
      *(_DWORD *)v68 = 136446210;
      v70 = sub_1000088F4();
      sub_1000134F8((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
      v72 = dispatch thunk of CustomStringConvertible.description.getter(v70, v71);
      v74 = sub_100013CA0(v72, v73);
      v75 = sub_100013C38(v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v75, v76, v68 + 4, v68 + 12);
      sub_100005D2C();
      sub_10000AB38(v65, type metadata accessor for PosterAnimationViewModel);
      v77 = "Animation was not granted a render session; Skipping render of weather data at date=%{public}s";
LABEL_20:
      sub_100013C98((void *)&_mh_execute_header, v41, (os_log_type_t)v31, v77, v68);
      sub_100013C90(v69, v92, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v69);
      sub_10000AFFC((uint64_t)v68);

      goto LABEL_49;
    }

    v93 = v65;
LABEL_23:
    sub_10000AB38(v93, type metadata accessor for PosterAnimationViewModel);
    goto LABEL_49;
  }
  v55 = &qword_10005C320;
  v56 = v137;
  sub_10000AD40(v46, v137, &qword_10005C320);
  v57 = v134;
  sub_10001352C(v48, v134, type metadata accessor for PosterAnimationViewModel);
  sub_100013B84(v57);
  sub_100013988(v46, (uint64_t)v141);
  sub_100013120(v57, v46, &qword_10005C320);
  v58 = swift_endAccess(v141);
  v59 = v136;
  Date.init()(v58);
  v60 = sub_1000088F4();
  sub_10000658C(v59, 0, 1, v60);
  sub_100013988(v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime, (uint64_t)v141);
  sub_100013AC0(v59, v61, (uint64_t *)&unk_10005C4C0);
  swift_endAccess(v141);
  v62 = v135;
  sub_10000AD40(v56, v135, &qword_10005C320);
  sub_1000139D0(v62);
  if (v49)
  {
    v63 = &qword_10005C320;
    v64 = v62;
  }
  else
  {
    v94 = v130;
    sub_1000134CC(v62, v130, type metadata accessor for PosterAnimationViewModel);
    v96 = *(int *)(v16 + 68);
    v97 = *(void **)(v94 + v96);
    v55 = *(NSObject **)(v48 + v96);
    if (v97)
    {
      v99 = (uint64_t)v131;
      v98 = v132;
      if (v55)
      {
        sub_100013BBC(v95, (unint64_t *)&qword_10005BF68, UIView_ptr);
        v55 = v55;
        v100 = v97;
        v101 = static NSObject.== infix(_:_:)(v100, v55);

        if ((v101 & 1) != 0)
          goto LABEL_40;
      }
    }
    else
    {
      v99 = (uint64_t)v131;
      v98 = v132;
      if (!v55)
      {
LABEL_40:
        sub_100013B00(v95, type metadata accessor for PosterAnimationViewModel);
        goto LABEL_41;
      }
    }
    v102 = v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_logger;
    Logger.logObject.getter(v95);
    v103 = sub_100013BB4();
    if (sub_100013AD8(v103))
    {
      v104 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v104 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v102, "Resetting views due to change in background view", v104, 2u);
      sub_10000AFFC((uint64_t)v104);
    }

    v105 = (void **)(v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView);
    v106 = 1;
    sub_1000139A0(v50 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView, (uint64_t)v141, 1);
    v107 = *v105;
    if (*v105)
    {
      v108 = (uint64_t)v107 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient;
      sub_1000139A0((uint64_t)v107 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient, (uint64_t)&v140, 0);
      v109 = v128;
      sub_100013AF8(v99, v108, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 16));
      v106 = 0;
    }
    else
    {
      v109 = v128;
    }
    sub_10000658C(v99, v106, 1, v109);
    v110 = *v105;
    *v105 = 0;

    sub_100013BCC(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
    sub_100013BCC(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel);
    v111 = v127;
    sub_10000AD40(v99, v127, &qword_10005C370);
    if (sub_100006580(v111, 1, v109) != 1)
    {
      v55 = v124;
      sub_100013AF8((uint64_t)v124, v111, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 32));
      if ((*(_BYTE *)(v94 + *(int *)(v16 + 60)) & 1) == 0)
        sub_10000D66C((uint64_t)v55);
      (*(void (**)(NSObject *, uint64_t))(v98 + 8))(v55, v109);
      sub_10000AB60(v99, &qword_10005C370);
      goto LABEL_40;
    }
    v55 = &qword_10005C370;
    sub_10000AB60(v99, &qword_10005C370);
    sub_100013B00(v112, type metadata accessor for PosterAnimationViewModel);
    v64 = v111;
    v63 = &qword_10005C370;
  }
  sub_10000AB60(v64, v63);
LABEL_41:
  if (*(_BYTE *)(v48 + *(int *)(v16 + 60)) == 1)
  {
    v113 = sub_10000DE68(v50);
    WeatherConditionBackgroundManager.sceneWillEnterForeground()();
    if ((v133 & 1) != 0)
    {
      v115 = v129;
      v116 = static Logger.vfx.getter(v114);
      Logger.logObject.getter(v116);
      v117 = sub_100013BB4();
      if (sub_100013AD8(v117))
      {
        v118 = (uint8_t *)sub_10000B0C8(2);
        *(_WORD *)v118 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v115, "VFX animation should start paused, freezing the scene", v118, 2u);
        sub_10000AFFC((uint64_t)v118);
      }

      v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 8))(v129, v126);
      v120 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v119);
      dispatch thunk of VFXScene.isFrozen.setter(1);

      v122 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v121);
      dispatch thunk of VFXScene.timeScale.setter(0.0);

    }
    v123 = sub_10000E064(v50);
    sub_10000EF14(v48, v113, v123);
    swift_release(v113);
    sub_100013C88();
  }
  else
  {
    sub_10000D970();
  }
  sub_10000AB60(v56, &qword_10005C320);
LABEL_49:
  sub_1000139A8();
}

void sub_10000D66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void **v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  v2 = v1;
  v4 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SkyBackgroundGradient(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, v36, 0, 0);
  v15 = type metadata accessor for PosterAnimationViewModel(0);
  if (!sub_100006580(v14, 1, v15))
  {
    v16 = *(void **)(v14 + *(int *)(v15 + 68));
    if (v16)
    {
      v32 = v9;
      v17 = (void **)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView);
      swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView, v35, 1, 0);
      v18 = *v17;
      if (*v17)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
        v19 = v16;
        v20 = v18;
        sub_1000222B4((uint64_t)v13);

        return;
      }
      v21 = v16;
      v22 = sub_100004C10(a1);
      v23 = *v17;
      *v17 = v22;

      v24 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState;
      swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState, v34, 0, 0);
      sub_10000AD40(v24, (uint64_t)v6, &qword_10005C308);
      if (sub_100006580((uint64_t)v6, 1, v7) == 1)
      {

        sub_10000AB60((uint64_t)v6, &qword_10005C308);
        return;
      }
      v25 = (uint64_t)v32;
      sub_1000134CC((uint64_t)v6, (uint64_t)v32, type metadata accessor for DynamicRotationState);
      v26 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
      v27 = objc_msgSend(v26, "userInterfaceIdiom");

      if (v27 == (id)1)
      {
        swift_beginAccess(v17, v33, 32, 0);
        v28 = *v17;
        if (*v17)
        {
          swift_endAccess(v33);
          v29 = v28;
          v30 = (uint64_t)v32;
          sub_100022174((uint64_t)v32);

          sub_10000AB38(v30, type metadata accessor for DynamicRotationState);
          return;
        }
        sub_10000AB38((uint64_t)v32, type metadata accessor for DynamicRotationState);
        swift_endAccess(v33);
      }
      else
      {
        sub_10000AB38(v25, type metadata accessor for DynamicRotationState);
      }

    }
  }
}

void sub_10000D970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 aBlock;
  __int128 v57;
  uint64_t (*v58)();
  uint64_t v59;
  _BYTE v60[32];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  __chkstk_darwin(v2);
  v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  __chkstk_darwin(v4);
  v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v49 - 8);
  v7 = __chkstk_darwin(v49);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v48 = (char *)&v46 - v10;
  v11 = sub_100005350(&qword_10005C320);
  v47 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v47 + 64);
  v13 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v46 - v16;
  v18 = Logger.logObject.getter(v15);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Skipping showing vfx because the poster should not show animation", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView;
  v22 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
  if (v22)
  {
    objc_msgSend(v22, "removeFromSuperview");
    v23 = *(void **)(v1 + v21);
  }
  else
  {
    v23 = 0;
  }
  *(_QWORD *)(v1 + v21) = 0;

  v24 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = 0;
  swift_release(v24);
  v58 = 0;
  aBlock = 0u;
  v57 = 0u;
  swift_beginAccess(v1 + 112, v60, 33, 0);
  sub_100013120((uint64_t)&aBlock, v1 + 112, &qword_10005C328);
  swift_endAccess(v60);
  v25 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;
  swift_release(v25);
  if (qword_10005BB28 != -1)
    swift_once(&qword_10005BB28, sub_10002BE38);
  v26 = type metadata accessor for SkyBackgroundGradient(0);
  v27 = sub_10000AADC(v26, (uint64_t)qword_100060838);
  sub_10000D66C(v27);
  v28 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, v60, 0, 0);
  sub_10000AD40(v28, (uint64_t)v17, &qword_10005C320);
  sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
  v29 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  v30 = v48;
  + infix(_:_:)(v9, 0.25);
  v46 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31 = v49;
  v46(v9, v49);
  v32 = swift_allocObject(&unk_100056510, 24, 7);
  swift_weakInit(v32 + 16, v1);
  sub_10000AD40((uint64_t)v17, (uint64_t)v14, &qword_10005C320);
  v33 = *(unsigned __int8 *)(v47 + 80);
  v34 = (v33 + 24) & ~v33;
  v35 = swift_allocObject(&unk_100056718, v34 + v12, v33 | 7);
  *(_QWORD *)(v35 + 16) = v32;
  sub_100013680((uint64_t)v14, v35 + v34);
  v58 = sub_1000138F8;
  v59 = v35;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v57 = sub_10001279C;
  *((_QWORD *)&v57 + 1) = &unk_100056730;
  v36 = _Block_copy(&aBlock);
  v37 = swift_release(v59);
  v38 = v50;
  static DispatchQoS.unspecified.getter(v37);
  *(_QWORD *)&aBlock = &_swiftEmptyArrayStorage;
  sub_1000134F8((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  v40 = v39;
  v41 = sub_100005350(&qword_10005C350);
  sub_100013648((unint64_t *)&qword_10005C358, &qword_10005C350);
  v42 = v53;
  v43 = v41;
  v44 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v43, v45, v55, v40);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v30, v38, v42, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
  v46(v30, v31);
  sub_10000AB60((uint64_t)v17, &qword_10005C320);
}

uint64_t sub_10000DE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[40];
  __int128 v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[24];
  _QWORD v19[5];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    swift_beginAccess(a1 + 24, v18, 0, 0);
    sub_10000AD40(a1 + 24, (uint64_t)&v15, &qword_10005C330);
    if (v16)
    {
      sub_100013770(&v15, (uint64_t)v19);
    }
    else
    {
      v4 = type metadata accessor for VFXSceneTemplateManager(0);
      swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
      v5 = VFXSceneTemplateManager.init()();
      v19[3] = v4;
      v19[4] = &protocol witness table for VFXSceneTemplateManager;
      v19[0] = v5;
      sub_10000AB60((uint64_t)&v15, &qword_10005C330);
    }
    sub_10001370C((uint64_t)v19, (uint64_t)&v15);
    swift_beginAccess(a1 + 24, v14, 33, 0);
    sub_100013120((uint64_t)&v15, a1 + 24, &qword_10005C330);
    v6 = swift_endAccess(v14);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Initial rendering of animation, creating background manager", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = *(_QWORD *)(a1 + 80);
    v16 = type metadata accessor for WeatherConditionConfigurationManager(0);
    v17 = &protocol witness table for WeatherConditionConfigurationManager;
    *(_QWORD *)&v15 = v10;
    sub_10001370C((uint64_t)v19, (uint64_t)v14);
    v11 = type metadata accessor for WeatherConditionBackgroundManager(0);
    swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    swift_retain(v10);
    v3 = WeatherConditionBackgroundManager.init(configurationManager:templateManager:)(&v15, v14);
    sub_100013750(v19);
    v12 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v3;
    swift_retain(v3);
    swift_release(v12);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_10000E064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _QWORD v30[5];

  v2 = sub_100005350(&qword_10005C3B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005350(&qword_10005C3B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005350(&qword_10005C3C0);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 64);
  if (v12)
  {
    v13 = *(_QWORD *)(a1 + 64);
  }
  else
  {
    v28 = v9;
    v14 = type metadata accessor for WeatherVFXConditionBackground();
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v13 = WeatherVFXConditionBackground.init()();
    v15 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = v13;
    swift_retain(v13);
    v16 = swift_release(v15);
    v17 = WeatherVFXConditionBackground.$isLoaded.getter(v16);
    WeatherVFXConditionBackground.$backgroundEffectModel.getter(v17);
    sub_100013648(&qword_10005C3C8, &qword_10005C3B8);
    v19 = v18;
    sub_100013648(&qword_10005C3D0, &qword_10005C3B0);
    Publishers.CombineLatest.init(_:_:)(v7, v4, v5, v2, v19, v20);
    v21 = swift_allocObject(&unk_100056510, 24, 7);
    swift_weakInit(v21 + 16, a1);
    v22 = swift_allocObject(&unk_100056650, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_100013618;
    *(_QWORD *)(v22 + 24) = v21;
    sub_100013648(&qword_10005C3D8, &qword_10005C3C0);
    v24 = Publisher<>.sink(receiveValue:)(sub_100013640, v22, v8, v23);
    swift_release(v22);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    v30[3] = type metadata accessor for AnyCancellable(0);
    v30[4] = &protocol witness table for AnyCancellable;
    v30[0] = v24;
    v25 = a1 + 112;
    swift_beginAccess(v25, v29, 33, 0);
    sub_100013120((uint64_t)v30, v25, &qword_10005C328);
    swift_endAccess(v29);
    v12 = 0;
  }
  swift_retain(v12);
  return v13;
}

uint64_t sub_10000E308(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    sub_10000E378(a1 & 1, a2);
    return swift_release(v7);
  }
  return result;
}

void sub_10000E378(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  double v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint8_t *v66;
  uint64_t (*v67)(char *, uint64_t);
  void *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  float v79;
  id v80;
  char *v81;
  double v82;
  _BOOL4 v83;
  uint64_t v84;
  void *v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  void **aBlock;
  _QWORD v132[4];
  uint64_t v133;
  char v134[16];
  char v135[8];

  v130 = (void *)a2;
  v119 = type metadata accessor for DispatchWorkItemFlags(0);
  v127 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v120 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v125 = *(_QWORD *)(v5 - 8);
  v126 = v5;
  __chkstk_darwin(v5);
  v124 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for DispatchTime(0);
  v116 = *(_QWORD *)(v129 - 8);
  v7 = __chkstk_darwin(v129);
  v121 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v123 = (char *)&v106 - v9;
  v10 = sub_100005350(&qword_10005C320);
  v117 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v117 + 64);
  v12 = __chkstk_darwin(v10);
  v118 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v122 = (uint64_t)&v106 - v13;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v106 - v19;
  v21 = sub_100005350((uint64_t *)&unk_10005C4C0);
  v22 = __chkstk_darwin(v21);
  v113 = (uint64_t)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v106 - v24;
  v128 = type metadata accessor for Date(0);
  v26 = *(_QWORD *)(v128 - 8);
  v27 = __chkstk_darwin(v128);
  v114 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v115 = (char *)&v106 - v29;
  v30 = sub_100005350(&qword_10005C3E8);
  __chkstk_darwin(v30);
  v32 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for WeatherVFXViewModel(0);
  v34 = __chkstk_darwin(v33);
  v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_100011DEC();
    return;
  }
  v110 = v37;
  v109 = v35;
  v111 = v34;
  v112 = v2;
  v38 = v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(v38, v135, 0, 0);
  v39 = type metadata accessor for PosterAnimationViewModel(0);
  v40 = sub_100006580(v38, 1, v39);
  if (!(_DWORD)v40 && *(_BYTE *)(v38 + *(int *)(v39 + 60)) == 1)
  {
    v108 = v38;
    sub_10000AD40((uint64_t)v130, (uint64_t)v32, &qword_10005C3E8);
    v41 = v111;
    if (sub_100006580((uint64_t)v32, 1, v111) == 1)
    {
      sub_10000AB60((uint64_t)v32, &qword_10005C3E8);
      return;
    }
    v45 = (uint64_t)v110;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v110, v32, v41);
    v46 = v45;
    v47 = v112;
    sub_100011E34(v46);
    v48 = v47 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime;
    swift_beginAccess(v47 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime, v134, 0, 0);
    sub_10000AD40(v48, (uint64_t)v25, (uint64_t *)&unk_10005C4C0);
    v49 = v128;
    if (sub_100006580((uint64_t)v25, 1, v128) == 1)
    {
      sub_10000AB60((uint64_t)v25, (uint64_t *)&unk_10005C4C0);
      v50 = v119;
      v51 = v120;
      v52 = (uint64_t)v118;
      v53 = v117;
      v54 = v116;
      v55 = v108;
LABEL_32:
      v90 = v122;
      sub_10000AD40(v55, v122, &qword_10005C320);
      sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
      v130 = (void *)static OS_dispatch_queue.main.getter();
      v91 = v121;
      static DispatchTime.now()();
      v92 = v123;
      + infix(_:_:)(v91, 0.25);
      v93 = *(void (**)(char *, uint64_t))(v54 + 8);
      v93(v91, v129);
      v94 = swift_allocObject(&unk_100056510, 24, 7);
      swift_weakInit(v94 + 16, v47);
      sub_10000AD40(v90, v52, &qword_10005C320);
      v95 = *(unsigned __int8 *)(v53 + 80);
      v96 = (v95 + 24) & ~v95;
      v97 = swift_allocObject(&unk_100056678, v96 + v11, v95 | 7);
      *(_QWORD *)(v97 + 16) = v94;
      sub_100013680(v52, v97 + v96);
      v132[3] = sub_1000136C8;
      v133 = v97;
      aBlock = _NSConcreteStackBlock;
      v132[0] = 1107296256;
      v132[1] = sub_10001279C;
      v132[2] = &unk_100056690;
      v98 = _Block_copy(&aBlock);
      v99 = swift_release(v133);
      v100 = v124;
      static DispatchQoS.unspecified.getter(v99);
      aBlock = (void **)&_swiftEmptyArrayStorage;
      sub_1000134F8((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v102 = v101;
      v103 = sub_100005350(&qword_10005C350);
      sub_100013648((unint64_t *)&qword_10005C358, &qword_10005C350);
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v103, v104, v50, v102);
      v105 = v130;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v92, v100, v51, v98);
      _Block_release(v98);

      (*(void (**)(char *, uint64_t))(v127 + 8))(v51, v50);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v100, v126);
      v93(v92, v129);
      sub_10000AB60(v90, &qword_10005C320);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
      return;
    }
    v130 = (void *)v48;
    v56 = v115;
    v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v115, v25, v49);
    v58 = v114;
    Date.init()(v57);
    v59 = Date.timeIntervalSince(_:)(v56);
    v60 = *(uint64_t (**)(char *, uint64_t))(v26 + 8);
    v61 = v60(v58, v49);
    v62 = static Logger.vfx.getter(v61);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v65 = 134217984;
      aBlock = *(void ***)&v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v132, v65 + 4, v65 + 12);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "VFX animation took %fs to load", v65, 0xCu);
      v66 = v65;
      v49 = v128;
      swift_slowDealloc(v66, -1, -1);
    }

    v67 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v68 = (void *)v67(v20, v14);
    v69 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer;
    v47 = v112;
    if (*(_QWORD *)(v112 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer) && v59 < 0.3)
    {
      v107 = v60;
      static Logger.vfx.getter(v68);
      v70 = swift_retain(v47);
      v71 = Logger.logObject.getter(v70);
      v72 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v73 = 134349056;
        aBlock = *(void ***)(v47 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastPauseAnimationTimerDuration);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v132, v73 + 4, v73 + 12);
        swift_release(v47);
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "VFX animation loaded quickly, restarting pause timer after %{public}fs", v73, 0xCu);
        v74 = v73;
        v49 = v128;
        swift_slowDealloc(v74, -1, -1);

      }
      else
      {

        swift_release(v47);
      }
      v67(v18, v14);
      sub_100010558(*(double *)(v47 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastPauseAnimationTimerDuration));
      v60 = v107;
    }
    v75 = *(_QWORD *)(v47 + 16);
    if (v75
      && (v76 = swift_retain(*(_QWORD *)(v47 + 16)),
          v77 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v76),
          v78 = swift_release(v75),
          v79 = dispatch thunk of VFXScene.timeScale.getter(v78),
          v77,
          v79 == 1.0))
    {
      v68 = *(void **)(v47 + v69);
      if (v68)
      {
        v80 = objc_msgSend(v68, "fireDate");
        v81 = v114;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v82 = Date.timeIntervalSinceNow.getter();
        v68 = (void *)v60(v81, v49);
        v83 = v82 > 0.4;
      }
      else
      {
        v83 = 1;
      }
    }
    else
    {
      v83 = 0;
    }
    v84 = WeatherVFXViewModel.effect.getter(v68);
    if (v84)
    {
      v85 = (void *)v84;
      if ((*(_BYTE *)(*(_QWORD *)(v47 + 88) + 24) & 1) == 0 || !v83)
      {
        v60(v115, v49);

        goto LABEL_31;
      }
      sub_10001326C(0.1, 0.4);
      sub_100041CE8((uint64_t)v85, v86);

    }
    v60(v115, v49);
LABEL_31:
    v87 = v119;
    v52 = (uint64_t)v118;
    v53 = v117;
    v54 = v116;
    v88 = v113;
    sub_10000658C(v113, 1, 1, v49);
    v89 = (uint64_t)v130;
    swift_beginAccess(v130, &aBlock, 33, 0);
    sub_100013120(v88, v89, (uint64_t *)&unk_10005C4C0);
    swift_endAccess(&aBlock);
    v55 = v108;
    v51 = v120;
    v50 = v87;
    goto LABEL_32;
  }
  v42 = Logger.logObject.getter(v40);
  v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "VFX finished loading, but skipping showing VFX because the poster is no longer showing animation", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

}

uint64_t sub_10000EEC8(unsigned __int8 *a1, uint64_t (*a2)(uint64_t, unsigned __int8 *))
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = sub_100005350(&qword_10005C3E0);
  return a2(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_10000EF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  double v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  void *v74;
  id v75;
  uint64_t v76;
  double v77;
  void (*v78)(_QWORD);
  char *v79;
  char *v80;
  char *v81;
  void *v82;
  id v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  double v95;
  double v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  BOOL IsReduceMotionEnabled;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  void (*v144)(char *);
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  _QWORD *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  char v202[8];
  char v203[8];
  char v204[8];

  v4 = v3;
  v195 = a3;
  v201 = a2;
  v157 = a1;
  v137 = type metadata accessor for VFXOverrideModel(0);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v135 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for VFXDeviceRotationState(0);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v7);
  v138 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for DynamicRotationState(0);
  v9 = __chkstk_darwin(v139);
  v130 = (uint64_t)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v131 = (uint64_t)&v130 - v11;
  v12 = sub_100005350(&qword_10005C378);
  __chkstk_darwin(v12);
  v176 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for TargetWindowSizeClass(0);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v173 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for DynamicTypeSize(0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005350((uint64_t *)&unk_10005C4C0);
  v17 = __chkstk_darwin(v16);
  v166 = (uint64_t)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v165 = (uint64_t)&v130 - v19;
  v163 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v161 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v158 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for VFXEffectViewID(0);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v181 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for WeatherConditionBackgroundOptions(0);
  __chkstk_darwin(v23);
  v164 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005350(&qword_10005BE78);
  __chkstk_darwin(v25);
  v194 = (uint64_t)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100005350(&qword_10005C068);
  __chkstk_darwin(v27);
  v193 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for Date(0);
  v154 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v192 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for Location(0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v191 = (char *)&v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for BackgroundAnimationData.Model(0);
  v179 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v184 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100005350(&qword_10005C318);
  __chkstk_darwin(v32);
  v198 = (uint64_t)&v130 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for VFXLoadRequest(0);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v183 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = (_QWORD *)type metadata accessor for CloudAltitudeKind(0);
  v187 = *(v190 - 1);
  __chkstk_darwin(v190);
  v188 = (char *)&v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(0);
  v148 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (char *)&v130 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for Elevation(0);
  v151 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v199 = (char *)&v130 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for WeatherConditionGradientModel(0);
  v149 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v146 = (char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for SkyBackgroundGradient(0);
  v197 = *(_QWORD *)(v182 - 8);
  v39 = __chkstk_darwin(v182);
  v155 = (char *)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v200 = (char *)&v130 - v41;
  v42 = type metadata accessor for WeatherCondition(0);
  v43 = *(_QWORD *)(v42 - 8);
  v196 = v42;
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v130 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v48 = (char *)&v130 - v47;
  v49 = sub_100005350(&qword_10005C310);
  __chkstk_darwin(v49);
  v51 = (char *)&v130 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for SimulationReason(0);
  v53 = __chkstk_darwin(v52);
  v55 = (char *)&v130 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v53);
  swift_storeEnumTagMultiPayload(v55, v52, 0);
  sub_10001B4CC((uint64_t)v55, v201);
  v167 = v55;
  sub_10001352C((uint64_t)v55, (uint64_t)v51, type metadata accessor for SimulationReason);
  sub_10000658C((uint64_t)v51, 0, 1, v52);
  v56 = v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation;
  swift_beginAccess(v56, v204, 33, 0);
  sub_100013120((uint64_t)v51, v56, &qword_10005C310);
  swift_endAccess(v204);
  v57 = v157;
  v58 = v4;
  sub_10000C6AC();
  v140 = *(_QWORD *)(v4 + 72);
  v169 = v43;
  v142 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  v59 = v46;
  v142(v46, v48, v42);
  v60 = (int *)type metadata accessor for PosterAnimationViewModel(0);
  v143 = v57 + v60[12];
  v144 = *(void (**)(char *))(v151 + 16);
  v61 = v199;
  v144(v199);
  v151 = v60[13];
  v62 = *(unsigned __int8 *)(v57 + v151);
  v63 = v57;
  v64 = enum case for WeatherConditionGradientModel.AnimationContext.vfx(_:);
  v65 = type metadata accessor for WeatherConditionGradientModel.AnimationContext(0);
  v66 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v147, v64, v65);
  v67 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v148 + 104))(v66, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v150);
  v150 = v60[8];
  v68 = *(double *)(v63 + v150);
  v141 = v63 + v60[9];
  v148 = *(_QWORD *)(v187 + 16);
  v69 = v188;
  ((void (*)(char *))v148)(v188);
  v70 = v146;
  v145 = v59;
  WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)(v59, v61, v62, v67, v69, v68);
  v71 = (uint64_t)v200;
  WeatherConditionGradientManager.load(for:)(v70);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v70, v156);
  sub_10000D66C(v71);
  v187 = v58;
  v72 = v58 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel;
  swift_beginAccess(v187 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel, v204, 0, 0);
  v156 = v72;
  sub_10000AD40(v72, v198, &qword_10005C318);
  (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v191, v63, v153);
  (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v192, v63 + v60[5], v168);
  v168 = (uint64_t)v48;
  v142(v59, v48, v196);
  v73 = *(double *)(v63 + v60[7]);
  v74 = (void *)objc_opt_self(NSUnitSpeed);
  swift_retain(v195);
  v75 = objc_msgSend(v74, "milesPerHour");
  v76 = sub_1000135E0(0, &qword_10005C380, NSUnitSpeed_ptr);
  Measurement.init(value:unit:)(v75, v76, v73);
  v77 = *(double *)(v63 + v150);
  ((void (*)(char *, uint64_t, _QWORD *))v148)(v69, v141, v190);
  ((void (*)(char *, uint64_t, uint64_t))v144)(v199, v143, v189);
  sub_10000AD40(v63 + v60[14], v194, &qword_10005BE78);
  v78 = *(void (**)(_QWORD))(v185 + 104);
  v79 = v181;
  LODWORD(v189) = enum case for VFXEffectViewID.poster(_:);
  v190 = v78;
  v78(v181);
  v80 = v158;
  (*(void (**)(char *, _QWORD, uint64_t))(v159 + 104))(v158, enum case for WeatherConditionBackgroundConfig.CameraPositionType.default(_:), v160);
  v81 = v161;
  (*(void (**)(char *, _QWORD, uint64_t))(v162 + 104))(v161, enum case for WeatherConditionBackgroundOptions.DisplayLocation.poster(_:), v163);
  v82 = (void *)objc_opt_self(UIScreen);
  v83 = objc_msgSend(v82, "mainScreen");
  objc_msgSend(v83, "bounds");
  v85 = v84;
  v87 = v86;
  v89 = v88;
  v91 = v90;

  v92 = (uint64_t)v184;
  v93 = v182;
  v94 = objc_msgSend(v82, "mainScreen");
  objc_msgSend(v94, "scale");
  v96 = v95;

  v128 = 1;
  v97 = v164;
  WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)(&_swiftEmptyArrayStorage, 0, 0, v79, 0, v80, v81, 0, v85, v87, v89, v91, v96, v128);
  LOBYTE(v94) = *(_BYTE *)(v63 + v151);
  v98 = v63;
  v99 = v165;
  sub_10000AD40(v63 + v60[10], v165, (uint64_t *)&unk_10005C4C0);
  v100 = v166;
  sub_10000AD40(v63 + v60[11], v166, (uint64_t *)&unk_10005C4C0);
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  v127 = (char)v94;
  BackgroundAnimationData.Model.init(location:date:conditionKind:windSpeed:cloudCover:cloudKind:elevation:moonData:options:isDayTime:sunrise:sunset:isReduceMotionEnabled:)(v191, v192, v145, v193, v188, v199, v194, v97, v77, v127, v99, v100, IsReduceMotionEnabled);
  v101 = v93;
  (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v155, v200, v93);
  (*(void (**)(char *, _QWORD, uint64_t))(v171 + 104))(v170, enum case for DynamicTypeSize.large(_:), v172);
  v102 = v183;
  (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v173, v98 + v60[16], v175);
  v103 = type metadata accessor for CollisionViewMetrics(0);
  sub_10000658C(v176, 1, 1, v103);
  v104 = v198;
  VFXLoadRequest.init(backgroundObserver:lastModel:model:gradient:dynamicTypeSize:targetWindowSizeClass:collisionViewMetrics:)(v195);
  WeatherConditionBackgroundManager.addLoadRequest(_:)(v102);
  v105 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v106 = objc_msgSend(v105, "userInterfaceIdiom");

  if (v106 == (id)1)
  {
    v107 = v187 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState;
    swift_beginAccess(v187 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState, v202, 0, 0);
    v108 = v138;
    sub_10000AD40(v107, v138, &qword_10005C308);
    v109 = v139;
    if (sub_100006580(v108, 1, v139) == 1)
    {
      sub_10000AB60(v108, &qword_10005C308);
    }
    else
    {
      v110 = v108;
      v111 = v131;
      sub_1000134CC(v110, v131, type metadata accessor for DynamicRotationState);
      v112 = v130;
      sub_10001352C(v111, v130, type metadata accessor for DynamicRotationState);
      v113 = v132;
      VFXDeviceRotationState.init(degrees:progress:)(*(float *)(v112 + *(int *)(v109 + 20)), *(float *)(v112 + *(int *)(v109 + 24)));
      sub_10000AB38(v112, type metadata accessor for DynamicRotationState);
      v114 = v133;
      v115 = v135;
      v116 = v134;
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v135, v113, v134);
      v117 = v136;
      v118 = v137;
      (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v115, enum case for VFXOverrideModel.deviceRotation(_:), v137);
      v119 = v181;
      v120 = v186;
      ((void (*)(char *, _QWORD, uint64_t))v190)(v181, v189, v186);
      WeatherConditionBackgroundManager.addOverride(_:for:)(v115, v119);
      (*(void (**)(char *, uint64_t))(v185 + 8))(v119, v120);
      v121 = *(void (**)(char *, uint64_t))(v117 + 8);
      v92 = (uint64_t)v184;
      v122 = v115;
      v102 = v183;
      v121(v122, v118);
      v123 = v113;
      v104 = v198;
      v101 = v182;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v123, v116);
      sub_10000AB38(v111, type metadata accessor for DynamicRotationState);
    }
  }
  type metadata accessor for WeatherConditionBackgroundManager(0);
  sub_1000134F8(&qword_10005C388, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundManager);
  WeatherConditionBackgroundManagerType.executeRequests()();
  ((void (*)(void))VFXLoadRequest.model.getter)();
  v124 = v180;
  sub_10000658C(v104, 0, 1, v180);
  v125 = v156;
  swift_beginAccess(v156, v203, 33, 0);
  sub_100013120(v104, v125, &qword_10005C318);
  v126 = swift_endAccess(v203);
  VFXLoadRequest.model.getter(v126);
  sub_100012A80(v92);
  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v92, v124);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v102, v178);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v200, v101);
  (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v168, v196);
  sub_10000AB38((uint64_t)v167, type metadata accessor for SimulationReason);
}

void sub_100010190(NSObject *a1, uint64_t a2)
{
  sub_100037D64(a1, a2);
}

void sub_1000101B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  double v12;

  sub_1000139C0();
  sub_100008864();
  __chkstk_darwin(v1);
  sub_100013B18();
  v4 = v3 - v2;
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    v5 = sub_100013B78();
    swift_storeEnumTagMultiPayload(v5, v6, 3);
    swift_retain(*(_QWORD *)(v0 + 16));
    v7 = sub_100013B78();
    sub_10001B4CC(v7, v8);
    sub_100013C04();
    sub_10000AB38(v4, type metadata accessor for SimulationReason);
    if (*(_QWORD *)(v0 + 16))
    {
      sub_100013A14();
      WeatherConditionBackgroundManager.play(_:)(0);
      sub_100013AC8();
    }
    v9 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
    if (v9 && (v10 = objc_msgSend(v9, "effect")) != 0)
    {
      v11 = v10;
      sub_10001326C(0.0, 0.4);
      sub_100041CE8((uint64_t)v11, v12);

    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(v0 + 88) + 24) = 1;
    }
  }
  sub_100013994();
}

uint64_t sub_1000102A8(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  double v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v16;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = v4;
  v9 = a4;
  *(double *)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastPauseAnimationTimerDuration) = a4;
  v10 = sub_10000B5B0((uint64_t)&unk_100056510, 24);
  swift_weakInit(v10 + 16, v5);
  v11 = (uint64_t (*)())sub_10000B5B0((uint64_t)&unk_100056600, 40);
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = v10;
  swift_retain(v10);
  sub_100013BE0();
  if ((a1 & 1) != 0 && !UIAccessibilityIsReduceMotionEnabled())
  {
    sub_100013C04();
    v17 = (uint64_t (**)())(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
    v18 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
    v19 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion + 8);
    *v17 = sub_1000134B8;
    v17[1] = v11;
    sub_100013C80();
    sub_100013110(v18, v19);
    if (!*(_QWORD *)(v5 + 64)
      || (v20 = sub_100013A14(),
          v21 = WeatherVFXConditionBackground.isLoaded.getter(v20),
          sub_100013AC8(),
          (v21 & 1) == 0))
    {
      v9 = v9 + 0.3;
    }
    sub_100010558(v9);
    v16 = v11;
  }
  else
  {
    sub_100041E2C();
    v12 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer;
    v13 = *(void **)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer);
    if (v13)
    {
      objc_msgSend(v13, "invalidate");
      v14 = *(void **)(v5 + v12);
    }
    else
    {
      v14 = 0;
    }
    *(_QWORD *)(v5 + v12) = 0;

    sub_100013C0C((uint64_t *)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion));
    if (*(_QWORD *)(v5 + 16))
    {
      sub_100013C80();
      sub_100013A14();
      WeatherConditionBackgroundManager.pause(_:completion:)(0, sub_1000134B8, v11);
      sub_100013C04();
      sub_100013AC8();
      return swift_release_n(v11, 2);
    }
    sub_100010468(a2, a3, v10);
    sub_100013C88();
    v16 = (_QWORD *)v10;
  }
  return swift_release(v16);
}

uint64_t sub_100010468(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v5 = type metadata accessor for SimulationReason(0);
  __chkstk_darwin(v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v13, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v9 = Strong;
    swift_storeEnumTagMultiPayload(v7, v5, 3);
    v10 = *(_QWORD *)(v9 + 16);
    swift_retain(v10);
    sub_10001BB6C((uint64_t)v7, v10);
    swift_release(v10);
    sub_10000AB38((uint64_t)v7, type metadata accessor for SimulationReason);
    Strong = swift_release(v9);
  }
  return a1(Strong);
}

void sub_100010558(double a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer);
  if (v4)
    objc_msgSend(v4, "invalidate");
  v5 = (void *)objc_opt_self(NSTimer);
  v6 = swift_allocObject(&unk_100056510, 24, 7);
  swift_weakInit(v6 + 16, v1);
  v10[4] = sub_1000134C4;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100011DA4;
  v10[3] = &unk_100056618;
  v7 = _Block_copy(v10);
  swift_release(v11);
  v8 = objc_msgSend(v5, "scheduledTimerWithTimeInterval:repeats:block:", 0, v7, a1);
  _Block_release(v7);
  v9 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = v8;

}

void sub_100010664(int a1, void (*a2)(uint64_t), uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t IsReduceMotionEnabled;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  int v35;

  v5 = v4;
  v10 = sub_1000139C0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - v15;
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  if ((IsReduceMotionEnabled & 1) == 0)
  {
    v35 = a1;
    v18 = *(_QWORD *)(v5 + 16);
    if (v18)
    {
      v19 = *(void **)(v5 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
      if (v19)
      {
        sub_100013BE0();
        v20 = objc_msgSend(v19, "effect");
        if (v20)
        {
          v34 = v20;
          UUID.init()(v20);
          swift_storeEnumTagMultiPayload(v16, v10, 1);
          sub_100013BE0();
          sub_10001B4CC((uint64_t)v16, v18);
          v21 = sub_100013BE8();
          if (v35 == 2)
          {
            v22 = 0;
            v23 = 0;
          }
          else
          {
            v24 = sub_10000B5B0((uint64_t)&unk_100056510, 24);
            sub_100013C2C(v24);
            sub_10001352C((uint64_t)v16, (uint64_t)v14, type metadata accessor for SimulationReason);
            v25 = *(unsigned __int8 *)(v11 + 80);
            v26 = (v25 + 24) & ~v25;
            v23 = swift_allocObject(&unk_100056538, v26 + v12, v25 | 7);
            *(_QWORD *)(v23 + 16) = v24;
            sub_1000134CC((uint64_t)v14, v23 + v26, type metadata accessor for SimulationReason);
            v22 = sub_1000131E4;
          }
          v27 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v21);
          v28 = sub_10000B5B0((uint64_t)&unk_100056510, 24);
          sub_100013C2C(v28);
          v29 = sub_10000B5B0((uint64_t)&unk_100056560, 80);
          *(_QWORD *)(v29 + 16) = v22;
          *(_QWORD *)(v29 + 24) = v23;
          *(_QWORD *)(v29 + 32) = a2;
          *(_QWORD *)(v29 + 40) = a3;
          v30 = v34;
          *(_QWORD *)(v29 + 48) = v28;
          *(_QWORD *)(v29 + 56) = v30;
          *(_BYTE *)(v29 + 64) = v35;
          *(double *)(v29 + 72) = a4;
          sub_10001325C((uint64_t)v22, v23);
          v31 = sub_100013B78();
          sub_10001325C(v31, v32);
          swift_retain(v28);
          v33 = v30;
          dispatch thunk of VFXScene.performTransaction(_:)(sub_100013244, v29);

          swift_release(v29);
          sub_100013110((uint64_t)v22, v23);
          sub_100013BE8();
          sub_10000AB38((uint64_t)v16, type metadata accessor for SimulationReason);
          swift_release(v28);
          goto LABEL_10;
        }
        IsReduceMotionEnabled = sub_100013BE8();
      }
    }
  }
  if (a2)
    a2(IsReduceMotionEnabled);
LABEL_10:
  sub_1000139F8();
}

uint64_t sub_1000108D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 96);
    v7 = *(_QWORD *)(result + 16);
    swift_retain(v7);
    swift_retain(v6);
    sub_10001BB6C(a2, v7);
    swift_release(v5);
    swift_release(v6);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_100010960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  __int128 v22;
  float v23;
  __int128 v24;
  uint64_t v25;
  uint64_t inited;
  float v27;
  float32x4_t v28;
  __int128 v29;
  uint64_t (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  void (*v52)(char *, uint64_t);
  uint64_t (*v53)(char *, _QWORD, uint64_t);
  __int128 v54;
  float v55[6];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float v59[6];
  void *v60;
  _BYTE v61[48];
  _BYTE v62[32];

  v56 = a6;
  v57 = a1;
  v58 = a2;
  v11 = type metadata accessor for BoundPropertyName(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BoundEntity(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v62, 0, 0);
  Strong = swift_weakLoadStrong(a5);
  v20 = swift_release(Strong);
  if (Strong)
  {
    v21 = (void *)dispatch thunk of VFXEffect.scene.getter(v20);

    if (v21)
    {
      *(float *)&v22 = a7;
      *(_OWORD *)v55 = v22;
      v23 = 1.0 - *(float *)&v22;
      sub_100013370((uint64_t)&off_100055848);
      v54 = v24;
      v25 = sub_100005350(&qword_10005C338);
      inited = swift_initStackObject(v25, v61);
      *(_OWORD *)(inited + 16) = xmmword_100045E00;
      v27 = v55[0];
      v28 = (float32x4_t)v54;
      *(float32x2_t *)(inited + 32) = vmul_n_f32(*(float32x2_t *)&v54, v55[0]);
      *(float *)(inited + 40) = vmuls_lane_f32(v27, v28, 2) + 100.0;
      sub_100013370(inited);
      v51 = v29;
      *(_QWORD *)v55 = a4;
      v30 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v16 + 104);
      v31 = v30(v18, enum case for BoundEntity.camera(_:), v15);
      v50 = BoundEntity.rawValue.getter(v31);
      v33 = v32;
      *(_QWORD *)&v54 = a3;
      v34 = *(void (**)(char *, uint64_t))(v16 + 8);
      v34(v18, v15);
      v53 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104);
      v35 = v53(v14, enum case for BoundPropertyName.cameraPosition(_:), v11);
      v36 = BoundPropertyName.rawValue.getter(v35);
      v38 = v37;
      v52 = *(void (**)(char *, uint64_t))(v12 + 8);
      v52(v14, v11);
      v60 = (void *)sub_100005350(&qword_10005C340);
      *(_QWORD *)v59 = swift_allocObject(&unk_100056588, 32, 15);
      *(_OWORD *)(*(_QWORD *)v59 + 16) = v51;
      dispatch thunk of VFXEffect.setParameter(of:named:_:)(v50, v33, v36, v38, v59);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v38);
      sub_100013750(v59);
      v39 = v30(v18, enum case for BoundEntity.lightning(_:), v15);
      v40 = BoundEntity.rawValue.getter(v39);
      v42 = v41;
      v34(v18, v15);
      a3 = v54;
      v43 = v53(v14, enum case for BoundPropertyName.lightningFadeProgress(_:), v11);
      v44 = BoundPropertyName.rawValue.getter(v43);
      v46 = v45;
      v52(v14, v11);
      v60 = &type metadata for Float;
      v59[0] = v23;
      dispatch thunk of VFXEffect.setParameter(of:named:_:)(v40, v42, v44, v46, v59);
      v47 = v42;
      a4 = *(_QWORD *)v55;
      swift_bridgeObjectRelease(v47);
      swift_bridgeObjectRelease(v46);
      sub_100013750(v59);
    }
  }
  return sub_100010CC8(v57, v58, a3, a4);
}

uint64_t sub_100010CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = __chkstk_darwin(v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 | a3)
  {
    v29 = result;
    sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
    v28 = v9;
    v27 = static OS_dispatch_queue.main.getter();
    v17 = (_QWORD *)swift_allocObject(&unk_1000565B0, 48, 7);
    v17[2] = a1;
    v17[3] = a2;
    v17[4] = a3;
    v17[5] = a4;
    aBlock[4] = sub_100013440;
    v31 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001279C;
    aBlock[3] = &unk_1000565C8;
    v18 = _Block_copy(aBlock);
    v19 = v31;
    sub_10001325C(a3, a4);
    sub_10001325C(a1, a2);
    v20 = swift_release(v19);
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1000134F8((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    v22 = v21;
    v23 = sub_100005350(&qword_10005C350);
    sub_100013648((unint64_t *)&qword_10005C358, &qword_10005C350);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v8, v22);
    v25 = (void *)v27;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v11, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v29);
  }
  return result;
}

void sub_100010F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void **v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];

  v4 = v1;
  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_100008850();
  v52 = v7;
  v8 = sub_100008910();
  v9 = type metadata accessor for VFXEffectViewID(v8);
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  sub_100008894();
  __chkstk_darwin(v10);
  v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008910();
  v13 = type metadata accessor for VFXOverrideModel(v12);
  v49 = *(_QWORD *)(v13 - 8);
  sub_100008894();
  __chkstk_darwin(v14);
  v47 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008910();
  v17 = type metadata accessor for DynamicRotationState(v16);
  sub_100008864();
  __chkstk_darwin(v18);
  v19 = sub_100013A88();
  v20 = type metadata accessor for VFXDeviceRotationState(v19);
  v53 = *(_QWORD *)(v20 - 8);
  sub_100008894();
  __chkstk_darwin(v21);
  sub_100008850();
  v23 = v22;
  v24 = sub_1000139C0();
  sub_100008864();
  __chkstk_darwin(v25);
  sub_100013B28();
  v26 = sub_100013BC4();
  v27 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v3, a1, v26);
  swift_storeEnumTagMultiPayload(v3, v24, 2);
  v28 = *(_QWORD *)(v4 + 16);
  swift_retain(v28);
  sub_10001B4CC(v3, v28);
  swift_release(v28);
  v54 = v4;
  if (*(_QWORD *)(v4 + 16))
  {
    v45 = v27;
    sub_10001352C(v27, v2, type metadata accessor for DynamicRotationState);
    v29 = *(float *)(v2 + *(int *)(v17 + 20));
    v30 = *(float *)(v2 + *(int *)(v17 + 24));
    sub_100013A14();
    v31 = v23;
    v44 = v23;
    VFXDeviceRotationState.init(degrees:progress:)(v29, v30);
    sub_10000AB38(v2, type metadata accessor for DynamicRotationState);
    v32 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v47, v31, v20);
    v43 = v20;
    v33 = v49;
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v32, enum case for VFXOverrideModel.deviceRotation(_:), v13);
    v42 = v13;
    v34 = v48;
    sub_100013AE8();
    WeatherConditionBackgroundManager.addOverride(_:for:)(v32, v34);
    v46 = v17;
    sub_100013BF8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v42);
    sub_100013AE8();
    WeatherConditionBackgroundManager.executeOverrides(for:)(v34);
    sub_100013AC8();
    sub_100013BF8();
    v27 = v45;
    v17 = v46;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v44, v43);
  }
  v35 = (void **)(v54 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView);
  v36 = sub_1000139A0(v54 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView, (uint64_t)v55, 32);
  v37 = *v35;
  if (v37)
  {
    sub_100013BD8();
    v38 = v37;
    sub_100022174(v27);

    sub_100013B00(v39, type metadata accessor for SimulationReason);
  }
  else
  {
    sub_100013B00(v36, type metadata accessor for SimulationReason);
    sub_100013BD8();
  }
  v40 = v52;
  sub_10001352C(v27, v52, type metadata accessor for DynamicRotationState);
  sub_10000658C(v40, 0, 1, v17);
  v41 = v54 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState;
  sub_100013988(v54 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState, (uint64_t)v55);
  sub_100013120(v40, v41, &qword_10005C308);
  sub_100013BD8();
  sub_1000139F8();
}

void sub_100011254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_1000139C0();
  sub_100008864();
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100013BC4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  swift_storeEnumTagMultiPayload(v6, v3, 2);
  v8 = *(_QWORD *)(v1 + 16);
  sub_100013C80();
  sub_10001BB6C((uint64_t)v6, v8);
  sub_100013C88();
  sub_10000AB38((uint64_t)v6, type metadata accessor for SimulationReason);
}

void sub_100011310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  char v19;
  uint8_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void **v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[24];
  uint64_t v80[5];
  uint64_t v81;
  uint64_t v82;

  sub_100013B60();
  v3 = v0;
  v5 = v4;
  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_100013B18();
  v9 = v8 - v7;
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v10);
  v78 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005350(&qword_10005C310);
  sub_100008864();
  __chkstk_darwin(v12);
  v77 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005350(&qword_10005C318);
  sub_100008864();
  __chkstk_darwin(v14);
  sub_100013B40();
  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v15);
  sub_100013B28();
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v76 = v9;
    v19 = v5;
    v20 = (uint8_t *)sub_10000B0C8(12);
    v21 = sub_10000B0C8(32);
    v80[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v22 = v19;
    if (v19)
    {
      if (v19 == 1)
        v23 = 0xD000000000000011;
      else
        v23 = 0x646564616F6C6E75;
      if (v19 == 1)
        v24 = 0x80000001000475D0;
      else
        v24 = 0xE800000000000000;
    }
    else
    {
      v23 = 0xD000000000000013;
      v24 = 0x80000001000475F0;
    }
    v81 = sub_1000210CC(v23, v24, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease(v24);
    sub_100013C98((void *)&_mh_execute_header, v17, v18, "Invalidating animation for reason=%{public}s", v20);
    sub_100013C90(v21, v25, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v21);
    sub_10000AFFC((uint64_t)v20);

    v5 = v22;
    v9 = v76;
  }
  else
  {

  }
  v26 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView;
  v27 = *(void **)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
  if (v27)
    sub_100013C6C(v27);
  v28 = (void **)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView);
  sub_1000139A0(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView, (uint64_t)&v81, 1);
  if (*v28)
    sub_100013C6C(*v28);
  v29 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel;
  v30 = *(void **)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel);
  if (v30)
    sub_100013C6C(v30);
  v31 = sub_100013A1C();
  sub_10000B3FC(v2, v32, v33, v31);
  v34 = v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  sub_100013988(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, (uint64_t)v80);
  sub_100013120(v2, v34, &qword_10005C320);
  sub_100013A74();
  v35 = type metadata accessor for BackgroundAnimationData.Model(0);
  sub_10000B3FC(v1, v36, v37, v35);
  v38 = v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel;
  sub_100013988(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel, (uint64_t)v80);
  sub_100013120(v1, v38, &qword_10005C318);
  sub_100013A74();
  v39 = *(void **)(v3 + v26);
  *(_QWORD *)(v3 + v26) = 0;

  v40 = *v28;
  *v28 = 0;

  v41 = *(void **)(v3 + v29);
  *(_QWORD *)(v3 + v29) = 0;

  sub_100013C58();
  sub_100013988(v3 + 112, v42);
  sub_100013AC0((uint64_t)v80, v43, &qword_10005C328);
  swift_endAccess(v79);
  v44 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v3 + 64) = 0;
  swift_release(v44);
  v45 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer;
  v46 = *(void **)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer);
  if (v46)
  {
    objc_msgSend(v46, "invalidate");
    v47 = *(void **)(v3 + v45);
  }
  else
  {
    v47 = 0;
  }
  *(_QWORD *)(v3 + v45) = 0;

  sub_100013C0C((uint64_t *)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion));
  v48 = sub_1000139C0();
  v49 = v77;
  sub_10000B3FC(v77, v50, v51, v48);
  sub_100013988(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation, (uint64_t)v80);
  sub_100013AC0(v49, v52, &qword_10005C310);
  sub_100013A74();
  v53 = sub_1000088F4();
  v54 = v78;
  sub_10000B3FC(v78, v55, v56, v53);
  sub_100013988(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime, (uint64_t)v80);
  sub_100013AC0(v54, v57, (uint64_t *)&unk_10005C4C0);
  sub_100013A74();
  sub_100041E2C();
  v58 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0;
  swift_release(v58);
  sub_10001C170();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastPauseAnimationTimerDuration) = 0;
  v59 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_deviceRotationTimer;
  v60 = *(void **)(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_deviceRotationTimer);
  if (v60)
  {
    objc_msgSend(v60, "invalidate");
    v61 = *(void **)(v3 + v59);
  }
  else
  {
    v61 = 0;
  }
  *(_QWORD *)(v3 + v59) = 0;

  v62 = type metadata accessor for DynamicRotationState(0);
  sub_10000B3FC(v9, v63, v64, v62);
  sub_100013988(v3 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState, (uint64_t)v80);
  sub_100013AC0(v9, v65, &qword_10005C308);
  sub_100013A74();
  sub_100038F50();
  v66 = (unint64_t)"editorInvalidated";
  if (v5)
  {
    if (v5 == 1)
    {
      v67 = 0x80000001000475D0;
      v68 = 0xD000000000000011;
    }
    else
    {
      v67 = 0xE800000000000000;
      v68 = sub_100013C18();
    }
    v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v67, 0xD000000000000013, v66 | 0x8000000000000000, 0);
    sub_100005D2C();
    if ((v70 & 1) != 0)
      goto LABEL_34;
    v69 = 0x80000001000475D0;
    if (v5 == 2)
    {
      v71 = sub_100013C18();
      v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, 0xE800000000000000, 0xD000000000000011, v72, 0);
      swift_bridgeObjectRelease(0xE800000000000000);
      if ((v73 & 1) == 0)
        goto LABEL_35;
      goto LABEL_34;
    }
  }
  else
  {
    v69 = 0x80000001000475F0;
  }
  swift_bridgeObjectRelease(v69);
LABEL_34:
  v74 = v3 + 24;
  sub_100013C58();
  sub_100013988(v74, v75);
  sub_100013120((uint64_t)v80, v74, &qword_10005C330);
  swift_endAccess(v79);
LABEL_35:
  sub_1000139A8();
}

void sub_1000118BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_100013BF0();
  sub_10000AB60((uint64_t)(v0 + 3), &qword_10005C330);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  swift_release(v0[12]);
  swift_release(v0[13]);
  sub_10000AB60((uint64_t)(v0 + 14), &qword_10005C328);
  sub_10000AB60((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_lastModel, &qword_10005C318);
  sub_100013A38(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
  sub_100013A38(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_gradientView);
  sub_100013A38(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel);
  sub_10000AB60((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, &qword_10005C320);
  sub_100013A38(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer);
  sub_100013110(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion + 8));
  sub_10000AB60((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation, &qword_10005C310);
  sub_10000AB60((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_renderStartTime, (uint64_t *)&unk_10005C4C0);
  sub_10000AB60((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rotationState, &qword_10005C308);
  sub_100013A38(OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_deviceRotationTimer);
  v1 = sub_100013AD0();
  sub_10000B41C(v1);
  sub_100013934((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate);
  sub_100005D3C();
}

uint64_t sub_100011A14()
{
  uint64_t v0;

  sub_1000118BC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100011A38()
{
  return type metadata accessor for VFXAnimation(0);
}

uint64_t type metadata accessor for VFXAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C1B0;
  if (!qword_10005C1B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VFXAnimation);
  return result;
}

void sub_100011A78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[23];

  v14[0] = "\b";
  v14[1] = &unk_100045D70;
  v14[2] = "\b";
  v14[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[8] = &unk_100045D70;
  sub_100007858(319, &qword_10005C1C0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundAnimationData.Model);
  if (v3 <= 0x3F)
  {
    v14[9] = *(_QWORD *)(v2 - 8) + 64;
    v14[10] = "\b";
    v14[11] = "\b";
    v14[12] = "\b";
    sub_100007858(319, (unint64_t *)&qword_10005C1C8, type metadata accessor for PosterAnimationViewModel);
    if (v5 <= 0x3F)
    {
      v14[13] = *(_QWORD *)(v4 - 8) + 64;
      v14[14] = "\b";
      v14[15] = &unk_100045D88;
      sub_100007858(319, &qword_10005C1D0, type metadata accessor for SimulationReason);
      if (v7 <= 0x3F)
      {
        v14[16] = *(_QWORD *)(v6 - 8) + 64;
        sub_100007858(319, (unint64_t *)&qword_10005BEE8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
        if (v9 <= 0x3F)
        {
          v14[17] = *(_QWORD *)(v8 - 8) + 64;
          v14[18] = (char *)&value witness table for Builtin.Int64 + 64;
          sub_100007858(319, (unint64_t *)&qword_10005C1D8, type metadata accessor for DynamicRotationState);
          if (v11 <= 0x3F)
          {
            v14[19] = *(_QWORD *)(v10 - 8) + 64;
            v14[20] = "\b";
            v12 = type metadata accessor for Logger(319);
            if (v13 <= 0x3F)
            {
              v14[21] = *(_QWORD *)(v12 - 8) + 64;
              v14[22] = &unk_100045DA0;
              swift_updateClassMetadata2(a1, 256, 23, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100011C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_100011C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer;
    v6 = *(void **)(result + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimer);
    if (v6)
    {
      objc_msgSend(v6, "invalidate");
      v7 = *(void **)(v4 + v5);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v4 + v5) = 0;

    v8 = *(_QWORD *)(v4 + 88);
    swift_retain(v8);
    sub_100041E2C();
    swift_release(v8);
    v9 = *(_QWORD *)(v4 + 16);
    if (v9)
    {
      v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
      v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion + 8);
      swift_retain(*(_QWORD *)(v4 + 16));
      sub_10001325C(v10, v11);
      WeatherConditionBackgroundManager.pause(_:completion:)(1, v10, v11);
      sub_100013110(v10, v11);
      swift_release(v9);
    }
    else
    {
      v12 = *(void (**)(uint64_t))(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
      if (v12)
      {
        v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion + 8);
        v14 = swift_retain(v13);
        v12(v14);
        sub_100013110((uint64_t)v12, v13);
      }
    }
    v15 = (_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
    v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion);
    v17 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_freezeTimerCompletion + 8);
    *v15 = 0;
    v15[1] = 0;
    sub_100013110(v16, v17);
    return swift_release(v4);
  }
  return result;
}

void sub_100011DA4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_100013A14();
  v4 = a2;
  v3();
  sub_100013AC8();

}

void sub_100011DEC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
  if (v1)
  {
    v2 = v1;
    sub_100012FC4(v2, 0.0);

  }
}

void sub_100011E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  _BYTE v16[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(v4, v16, 0, 0);
  v5 = type metadata accessor for PosterAnimationViewModel(0);
  if (!sub_100006580(v4, 1, v5))
  {
    v6 = *(void **)(v4 + *(int *)(v5 + 68));
    if (v6)
    {
      v7 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView;
      v8 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_vfxView);
      if (v8)
      {
        v9 = v6;
        v10 = v8;
      }
      else
      {
        v11 = objc_allocWithZone((Class)VFXView);
        v12 = v6;
        v13 = objc_msgSend(v11, "init");
        objc_msgSend(v13, "setAlpha:", 0.0);
        sub_100004CB0(v13, 0);
        v14 = *(void **)(v2 + v7);
        *(_QWORD *)(v2 + v7) = v13;
        v10 = v13;

        v8 = 0;
      }
      v15 = v8;
      VFXView.setupView(with:)(a1);
      sub_100012FC4(v10, 1.0);

    }
  }
}

void sub_100011F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];

  v4 = sub_100005350(&qword_10005C310);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v45 = (uint64_t)&v42 - v8;
  v9 = type metadata accessor for SimulationReason(0);
  __chkstk_darwin(v9);
  v44 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005350(&qword_10005C4E0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005350(&qword_10005C320);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v42 - v21;
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (!Strong)
    return;
  v24 = Strong;
  v42 = v7;
  v43 = v9;
  v25 = Strong + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(Strong + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, v48, 0, 0);
  sub_10000AD40(v25, (uint64_t)v22, &qword_10005C320);
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_10000AD40((uint64_t)v22, (uint64_t)v16, &qword_10005C320);
  sub_10000AD40(a2, v26, &qword_10005C320);
  if (sub_100006580((uint64_t)v16, 1, v11) == 1)
  {
    sub_10000AB60((uint64_t)v22, &qword_10005C320);
    if (sub_100006580(v26, 1, v11) == 1)
    {
      sub_10000AB60((uint64_t)v16, &qword_10005C320);
LABEL_12:
      v32 = v24 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation;
      swift_beginAccess(v24 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_activeRenderSimulation, v47, 0, 0);
      v33 = v45;
      sub_10000AD40(v32, v45, &qword_10005C310);
      v34 = v43;
      if (sub_100006580(v33, 1, v43) == 1)
      {
        sub_10000AB60(v33, &qword_10005C310);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Completed rendering of weather data, but there was no active render simulation.", v38, 2u);
          swift_slowDealloc(v38, -1, -1);
        }

      }
      else
      {
        v39 = v44;
        sub_1000134CC(v33, v44, type metadata accessor for SimulationReason);
        v40 = *(_QWORD *)(v24 + 16);
        swift_retain(v40);
        sub_10001BB6C(v39, v40);
        swift_release(v40);
        sub_10000AB38(v39, type metadata accessor for SimulationReason);
        v41 = (uint64_t)v42;
        sub_10000658C((uint64_t)v42, 1, 1, v34);
        swift_beginAccess(v32, v46, 33, 0);
        sub_100013120(v41, v32, &qword_10005C310);
        swift_endAccess(v46);
      }
      sub_1000124B4();
      swift_release(v24);
      return;
    }
    goto LABEL_7;
  }
  sub_10000AD40((uint64_t)v16, (uint64_t)v20, &qword_10005C320);
  if (sub_100006580(v26, 1, v11) == 1)
  {
    sub_10000AB60((uint64_t)v22, &qword_10005C320);
    sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
LABEL_7:
    sub_10000AB60((uint64_t)v16, &qword_10005C4E0);
    goto LABEL_8;
  }
  sub_1000134CC(v26, (uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
  v31 = sub_100007B88((uint64_t)v20, (uint64_t)v13);
  sub_10000AB38((uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
  sub_10000AB60((uint64_t)v22, &qword_10005C320);
  sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
  sub_10000AB60((uint64_t)v16, &qword_10005C320);
  if ((v31 & 1) != 0)
    goto LABEL_12;
LABEL_8:
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Skipping notifying of completion because a newer request is inflight that will notify instead", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }
  swift_release(v24);

}

void sub_1000124B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29[3];

  v1 = v0;
  v2 = sub_100005350(&qword_10005C320);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_retain_n(v0, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v26 = v4;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v29[0] = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = v0 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, v28, 0, 0);
    v15 = type metadata accessor for PosterAnimationViewModel(0);
    if (sub_100006580(v14, 1, v15))
    {
      v16 = 0;
      v17 = 0xE000000000000000;
    }
    else
    {
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14 + *(int *)(v15 + 20), v5);
      v16 = Date.description.getter(v18);
      v17 = v19;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    v27 = sub_1000210CC(v16, v17, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v12 + 4, v12 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Completed rendering of weather data at date=%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    v4 = v26;
  }
  else
  {
    swift_release_n(v0, 2);

  }
  v20 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_rendererDelegate);
  if (Strong)
  {
    v22 = Strong;
    v23 = *(_QWORD *)(v20 + 8);
    ObjectType = swift_getObjectType(Strong);
    v25 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
    swift_beginAccess(v25, v29, 0, 0);
    sub_10000AD40(v25, (uint64_t)v4, &qword_10005C320);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v4, ObjectType, v23);
    swift_unknownObjectRelease(v22);
    sub_10000AB60((uint64_t)v4, &qword_10005C320);
  }
}

uint64_t sub_10001279C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = sub_100013A14();
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1000127C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v4 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100005350(&qword_10005C4E0);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100005350(&qword_10005C320);
  v11 = __chkstk_darwin(v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v21[-v14];
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v17 = result;
    v18 = result + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
    swift_beginAccess(result + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel, v21, 0, 0);
    sub_10000AD40(v18, (uint64_t)v15, &qword_10005C320);
    v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_10000AD40(a2, (uint64_t)v9, &qword_10005C320);
    sub_10000AD40((uint64_t)v15, v19, &qword_10005C320);
    if (sub_100006580((uint64_t)v9, 1, v4) == 1)
    {
      sub_10000AB60((uint64_t)v15, &qword_10005C320);
      if (sub_100006580(v19, 1, v4) == 1)
      {
        sub_10000AB60((uint64_t)v9, &qword_10005C320);
LABEL_9:
        sub_1000124B4();
        return swift_release(v17);
      }
    }
    else
    {
      sub_10000AD40((uint64_t)v9, (uint64_t)v13, &qword_10005C320);
      if (sub_100006580(v19, 1, v4) != 1)
      {
        sub_1000134CC(v19, (uint64_t)v6, type metadata accessor for PosterAnimationViewModel);
        v20 = sub_100007B88((uint64_t)v13, (uint64_t)v6);
        sub_10000AB38((uint64_t)v6, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v15, &qword_10005C320);
        sub_10000AB38((uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v9, &qword_10005C320);
        if ((v20 & 1) != 0)
          goto LABEL_9;
        return swift_release(v17);
      }
      sub_10000AB60((uint64_t)v15, &qword_10005C320);
      sub_10000AB38((uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
    }
    sub_10000AB60((uint64_t)v9, &qword_10005C4E0);
    return swift_release(v17);
  }
  return result;
}

void sub_100012A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v21;
  id v22;
  uint64_t v23;
  Class isa;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  Swift::String v39;
  char *v40;
  Class v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  Swift::String v53;
  void *object;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  char v76[32];

  v71 = a1;
  v2 = type metadata accessor for Elevation(0);
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  __chkstk_darwin(v2);
  v68 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin(v4);
  v65 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for WeatherCondition(0);
  v6 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Location(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v1;
  v17 = v1 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_posterViewModel;
  swift_beginAccess(v17, v76, 0, 0);
  v18 = type metadata accessor for PosterAnimationViewModel(0);
  if (!sub_100006580(v17, 1, v18))
  {
    v19 = *(void **)(v17 + *(int *)(v18 + 72));
    if (v19)
    {
      v20 = v19;
      sub_10000C988((uint64_t)v20);
      if ((v21 & 1) != 0)
      {
        v63 = v20;
        v22 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
        v23 = BackgroundAnimationData.Model.location.getter();
        Location.timeZone.getter(v23);
        v62 = *(void (**)(char *, uint64_t))(v14 + 8);
        v62(v16, v13);
        isa = TimeZone._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        objc_msgSend(v22, "setTimeZone:", isa);

        objc_msgSend(v22, "setTimeStyle:", 1);
        objc_msgSend(v22, "setDateStyle:", 1);
        v25 = (void *)0xE000000000000000;
        v74 = 0;
        v75 = 0xE000000000000000;
        _StringGuts.grow(_:)(49);
        v26._countAndFlagsBits = 0x6F697469646E6F43;
        v26._object = (void *)0xEB00000000203A6ELL;
        String.append(_:)(v26);
        v27 = BackgroundAnimationData.Model.conditionKind.getter();
        v28 = WeatherCondition.rawValue.getter(v27);
        v30 = v29;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v64);
        v31._countAndFlagsBits = v28;
        v31._object = v30;
        String.append(_:)(v31);
        swift_bridgeObjectRelease(v30);
        v32._countAndFlagsBits = 0x6F697461636F4C0ALL;
        v32._object = (void *)0xEB00000000203A6ELL;
        String.append(_:)(v32);
        v33 = BackgroundAnimationData.Model.location.getter();
        v34 = Location.coordinate.getter(v33);
        v36 = v35;
        v62(v16, v13);
        v37 = v22;
        *(double *)v73 = v34;
        v73[1] = v36;
        type metadata accessor for CLLocationCoordinate2D(0);
        _print_unlocked<A, B>(_:_:)(v73, &v74, v38, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v39._countAndFlagsBits = 0x203A657461440ALL;
        v39._object = (void *)0xE700000000000000;
        String.append(_:)(v39);
        v40 = v65;
        BackgroundAnimationData.Model.date.getter();
        v41 = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v67);
        v42 = objc_msgSend(v22, "stringForObjectValue:", v41);

        if (v42)
        {
          v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          v25 = v44;

        }
        else
        {
          v43 = 0;
        }
        v45 = v72;
        v46._countAndFlagsBits = v43;
        v46._object = v25;
        String.append(_:)(v46);
        swift_bridgeObjectRelease(v25);
        v47._countAndFlagsBits = 0x69746176656C450ALL;
        v47._object = (void *)0xEC000000203A6E6FLL;
        String.append(_:)(v47);
        v48 = sub_100005350(&qword_10005C390);
        v49 = swift_allocObject(v48, 72, 7);
        *(_OWORD *)(v49 + 16) = xmmword_100045B60;
        v50 = v68;
        v51 = BackgroundAnimationData.Model.elevation.getter();
        v52 = Elevation.degrees.getter(v51);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v70);
        *(_QWORD *)(v49 + 56) = &type metadata for CGFloat;
        *(_QWORD *)(v49 + 64) = sub_100013558();
        *(double *)(v49 + 32) = v52;
        v53._countAndFlagsBits = String.init(format:_:)(1714564645, 0xE400000000000000, v49);
        object = v53._object;
        String.append(_:)(v53);
        swift_bridgeObjectRelease(object);
        v56 = v74;
        v55 = v75;
        v57 = OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel;
        v58 = *(void **)(v45 + OBJC_IVAR____TtC13WeatherPoster12VFXAnimation_debugLabel);
        v20 = v63;
        if (v58)
        {
          v59 = v58;
          sub_100013594(v56, v55, v59);

        }
        else
        {
          v60 = sub_1000048D4(v74, v75);

          swift_bridgeObjectRelease(v55);
          v20 = *(id *)(v45 + v57);
          *(_QWORD *)(v45 + v57) = v60;
        }
      }

    }
  }
}

id sub_100012FC4(void *a1, double a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v4 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v4, "begin");
  if (qword_10005BB40 != -1)
    swift_once(&qword_10005BB40, sub_100035C10);
  objc_msgSend(v4, "setAnimationTimingFunction:", qword_100060880);
  v5 = (void *)objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_1000566C8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(double *)(v6 + 24) = a2;
  v11[4] = sub_1000136F8;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10001279C;
  v11[3] = &unk_1000566E0;
  v7 = _Block_copy(v11);
  v8 = v12;
  v9 = a1;
  swift_release(v8);
  objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.25);
  _Block_release(v7);
  return objc_msgSend(v4, "commit");
}

uint64_t sub_100013110(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

void sub_100013120(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_10000B568(a1, a2, a3);
  sub_10000B634(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_100005D3C();
}

uint64_t sub_10001314C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100013170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1000139C0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_100013BF0();
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) <= 2)
  {
    v6 = sub_100013BC4();
    sub_10000B41C(v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1000131E4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1000139C0();
  v0 = sub_100013AA4();
  return sub_1000108D0(v0, v1);
}

uint64_t sub_1000131FC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    sub_100013B58();
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100013244()
{
  uint64_t v0;

  return sub_100010960(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(double *)(v0 + 72));
}

uint64_t sub_10001325C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

void sub_10001326C(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0)
    sub_1000132E8(0x20000000000001uLL);
  else
    __break(1u);
}

unint64_t sub_1000132E8(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100013370(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  __int128 v3;
  int v4;
  uint64_t result;
  __int128 v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0uLL;
    do
    {
      if (v1 - 4 < 0xFFFFFFFFFFFFFFFDLL)
      {
        __break(1u);
        goto LABEL_8;
      }
      v4 = *(_DWORD *)(a1 + 4 * v2 + 32);
      v6 = v3;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v4;
      v3 = v6;
      ++v2;
    }
    while (v1 != v2);
    result = swift_bridgeObjectRelease(a1);
    if (v1 < 3)
      goto LABEL_9;
  }
  else
  {
LABEL_8:
    result = swift_bridgeObjectRelease(a1);
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000133F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 15);
}

uint64_t sub_100013408()
{
  _QWORD *v0;

  if (v0[2])
    sub_100013B58();
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_100013440()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);

  v1 = *(void (**)(void))(v0 + 16);
  v2 = *(void (**)(void))(v0 + 32);
  if (v1)
    v1();
  if (v2)
    v2();
  sub_100013994();
}

uint64_t sub_100013478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100013488(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100013490()
{
  uint64_t v0;

  sub_100013B58();
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000134B8()
{
  uint64_t v0;

  return sub_100010468(*(uint64_t (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1000134C4(uint64_t a1)
{
  uint64_t v1;

  return sub_100011C68(a1, v1);
}

void sub_1000134CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_100013B94(a1, a2, a3);
  sub_10000B634(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_100005D3C();
}

void sub_1000134F8(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = a2(255);
    atomic_store(sub_100013C4C(v3), a1);
  }
  sub_100005D3C();
}

void sub_10001352C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_100013B94(a1, a2, a3);
  sub_10000B634(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_100005D3C();
}

unint64_t sub_100013558()
{
  unint64_t result;

  result = qword_10005C398;
  if (!qword_10005C398)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10005C398);
  }
  return result;
}

void sub_100013594(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4;

  v4 = String._bridgeToObjectiveC()();
  sub_100005D2C();
  objc_msgSend(a3, "setText:", v4);

}

uint64_t sub_1000135E0(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100013618(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10000E308(a1, a2, v2);
}

uint64_t sub_100013620()
{
  uint64_t v0;

  sub_100013B58();
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100013640(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10000EEC8(a1, *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16));
}

void sub_100013648(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_10000AC50(a2);
    atomic_store(sub_100013C4C(v3), a1);
  }
  sub_100005D3C();
}

uint64_t sub_100013680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000136C8()
{
  return sub_100013904((uint64_t (*)(uint64_t))sub_100011F68);
}

uint64_t sub_1000136D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000136F8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", *(double *)(v0 + 24));
}

uint64_t sub_10001370C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100013750(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100013770(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10001378C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_100013B60();
  v1 = *(_QWORD *)(sub_100005350(&qword_10005C320) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100013BF0();
  v5 = v0 + v3;
  v6 = (int *)sub_100013A1C();
  if (!sub_100006580(v0 + v3, 1, (uint64_t)v6))
  {
    v7 = type metadata accessor for Location(0);
    sub_10000B41C(v7);
    sub_1000088F4();
    sub_100013A40();
    v8 = type metadata accessor for WeatherCondition(0);
    sub_100013A60(v8);
    v9 = type metadata accessor for CloudAltitudeKind(0);
    sub_100013A60(v9);
    if (!sub_100013A24(v6[10]))
      sub_100013A40();
    if (!sub_100013A24(v6[11]))
      sub_100013A40();
    v10 = type metadata accessor for Elevation(0);
    sub_100013A4C(v10);
    v11 = v5 + v6[14];
    v12 = type metadata accessor for BackgroundMoonData(0);
    if (!sub_100006580(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = type metadata accessor for TargetWindowSizeClass(0);
    sub_100013A4C(v13);

  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000138F8()
{
  return sub_100013904((uint64_t (*)(uint64_t))sub_1000127C4);
}

uint64_t sub_100013904(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  sub_100005350(&qword_10005C320);
  v1 = sub_100013AA4();
  return a1(v1);
}

uint64_t sub_100013934(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_100013978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0);
}

uint64_t sub_100013988(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33, 0);
}

uint64_t sub_1000139A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0);
}

uint64_t sub_1000139C0()
{
  return type metadata accessor for SimulationReason(0);
}

uint64_t sub_1000139C8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000139D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

uint64_t sub_100013A14()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100013A1C()
{
  return type metadata accessor for PosterAnimationViewModel(0);
}

uint64_t sub_100013A24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_100006580(v1 + a1, 1, v2);
}

void sub_100013A38(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_100013A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_100013A4C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_100013A60(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_100013A74()
{
  uint64_t v0;

  return swift_endAccess(v0 - 144);
}

uint64_t sub_100013A7C(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_100013A88()
{
  return 0;
}

uint64_t sub_100013AA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void sub_100013AC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_100013120(a1, v3, a3);
}

uint64_t sub_100013AC8()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100013AD0()
{
  return type metadata accessor for Logger(0);
}

BOOL sub_100013AD8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100013AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t sub_100013AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void sub_100013B00(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_10000AB38(v2, a2);
}

BOOL sub_100013B08(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100013B58()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 24));
}

uint64_t sub_100013B78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100013B84(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(a1, 0, 1, v1);
}

uint64_t sub_100013B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_100013BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_100013BB4()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100013BBC(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  return sub_1000135E0(0, a2, a3);
}

uint64_t sub_100013BC4()
{
  return type metadata accessor for UUID(0);
}

void sub_100013BCC(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + a1);
  *(_QWORD *)(v1 + a1) = 0;

}

uint64_t sub_100013BD8()
{
  uint64_t v0;

  return swift_endAccess(v0 - 120);
}

uint64_t sub_100013BE0()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100013BE8()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100013BF0()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100013BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_100013C04()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100013C0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  *a1 = 0;
  a1[1] = 0;
  return sub_100013110(v1, v2);
}

uint64_t sub_100013C18()
{
  return 0x646564616F6C6E75;
}

uint64_t sub_100013C2C(uint64_t a1)
{
  uint64_t v1;

  return swift_weakInit(a1 + 16, v1);
}

uint64_t sub_100013C38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_100013C4C(uint64_t a1)
{
  uint64_t v1;

  return swift_getWitnessTable(v1, a1);
}

double sub_100013C58()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 112) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

id sub_100013C6C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2632));
}

uint64_t sub_100013C80()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_100013C88()
{
  uint64_t v0;

  return swift_release(v0);
}

uint64_t sub_100013C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 1, a3);
}

void sub_100013C98(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_100013CA0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t sub_100013CAC()
{
  uint64_t v0;
  uint64_t v1;

  return dispatch thunk of RawRepresentable.rawValue.getter(v1, v0);
}

uint64_t sub_100013CB8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

id sub_100013CC4(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  objc_class *v40;
  objc_super v41;

  v40 = (objc_class *)sub_100019218();
  v4 = sub_100013AD0();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1000190BC();
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer] = 0;
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData];
  v10 = sub_1000190F4();
  sub_10000B3FC(v9, v11, v12, v10);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastRenderedAnimationViewModel];
  v14 = type metadata accessor for PosterAnimationViewModel(0);
  sub_10000B3FC(v13, v15, v16, v14);
  *(_OWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState] = xmmword_100045E10;
  *(_OWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState] = xmmword_100045E10;
  v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastWakeTransitionDirection] = 3;
  v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_isRenderRequiredOnUpdate] = 0;
  v17 = qword_10005BB68;
  v18 = v1;
  if (v17 != -1)
    swift_once(&qword_10005BB68, sub_100042380);
  v19 = sub_10000AADC(v4, (uint64_t)qword_1000608F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v19, v4);
  v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_deviceSupportsVFX] = a1 & 1;
  sub_100019190();
  if ((a1 & 1) != 0)
  {
    v20 = type metadata accessor for VFXAnimation(0);
    sub_100013A7C(v20);
    v21 = sub_10000CA10();
    v22 = &off_1000564A8;
  }
  else
  {
    v23 = type metadata accessor for MicaAnimation(0);
    sub_100013A7C(v23);
    v21 = (uint64_t)sub_10003973C(v2);
    v22 = &off_100057568;
  }
  v24 = (uint64_t *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation];
  *v24 = v21;
  v24[1] = (uint64_t)v22;
  v25 = objc_allocWithZone((Class)type metadata accessor for PosterDataManager());
  *(_QWORD *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_dataManager] = sub_10003DB7C(0);
  v26 = type metadata accessor for RenderingSessionManager(0);
  sub_100013A7C(v26);
  v27 = sub_10002F62C();
  v28 = OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderingSessionManager;
  *(_QWORD *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderingSessionManager] = v27;
  if ((a1 & 1) != 0)
  {
    v29 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v30 = objc_msgSend(v29, "userInterfaceIdiom");

    v31 = v30 != (id)1;
    v32 = *(_QWORD *)&v18[v28];
  }
  else
  {
    v32 = v27;
    v31 = 0;
  }
  v33 = type metadata accessor for AnimationUnloadManager();
  swift_allocObject(v33, 34, 7);
  *(_QWORD *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unloadManager] = sub_100032974(v31, v32);
  sub_100019190();
  v34 = type metadata accessor for PosterLabelManager(0);
  sub_100013A7C(v34);
  sub_100035F18(v2);
  *(_QWORD *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_labelManager] = v35;
  v36 = type metadata accessor for DynamicRotationManager(0);
  sub_100013A7C(v36);
  swift_retain(v32);
  v37 = sub_10002D818();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *(_QWORD *)&v18[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_rotationManager] = v37;

  v41.receiver = v18;
  v41.super_class = v40;
  return objc_msgSendSuper2(&v41, "init");
}

void sub_100013FD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  char **p_name;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[5];
  uint64_t v84;

  sub_100019164();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_1000190A0(v7, v75);
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v8);
  v80 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v10);
  sub_100019060(v11, v75);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v75 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v75 - v16;
  if (qword_10005BB68 != -1)
    swift_once(&qword_10005BB68, sub_100042380);
  v18 = sub_100013AD0();
  v19 = sub_10000AADC(v18, (uint64_t)qword_1000608F8);
  v20 = swift_unknownObjectRetain_n(v3, 2);
  v78 = (uint64_t)v19;
  Logger.logObject.getter(v20);
  v21 = sub_100019080();
  p_name = &stru_100059FF8.name;
  if (os_log_type_enabled(v19, v21))
  {
    v23 = sub_10000B0C8(24);
    v24 = sub_10000B0C8(32);
    v76 = v15;
    v25 = v24;
    v83[0] = v24;
    *(_DWORD *)v23 = 67240706;
    v26 = sub_100005D34(v24, "isPreview");
    LODWORD(v82) = (_DWORD)v26;
    v28 = sub_1000190FC((uint64_t)v26, v27, v23 + 4, v23 + 8);
    *(_WORD *)(v23 + 8) = 1026;
    v29 = sub_100005D34(v28, "isSnapshot");
    LODWORD(v82) = (_DWORD)v29;
    sub_1000190FC((uint64_t)v29, v30, v23 + 10, v23 + 14);
    *(_WORD *)(v23 + 14) = 2082;
    v31 = sub_1000192C8((uint64_t)objc_msgSend(v3, "deviceOrientation"));
    v33 = v32;
    v34 = sub_1000191F4(v31, v32);
    v35 = sub_1000191D4(v34);
    p_name = (char **)(&stru_100059FF8 + 8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v35, v36, v23 + 16, v37);
    sub_100019118((uint64_t)v3);
    swift_bridgeObjectRelease(v33);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "Did initialize; isPreview=%{BOOL,public}d, isSnapshot=%{BOOL,public}d, orientation=%{public}s",
      (uint8_t *)v23,
      0x18u);
    sub_100013C90(v25, v38, (uint64_t)&type metadata for Any + 8);
    v39 = v25;
    v15 = v76;
    sub_10000AFFC(v39);
    sub_10000AFFC(v23);

  }
  else
  {

    sub_100019118((uint64_t)v3);
  }
  v40 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer) = v5;

  v41 = v5;
  sub_10002DCD8();
  sub_100019088(*(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_rotationManager)+ OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate, (uint64_t)&off_100056768);
  v42 = sub_100005350((uint64_t *)&unk_10005D400);
  v43 = swift_allocObject(v42, 64, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100045E20;
  v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation);
  v45 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8) + 8);
  *(_QWORD *)(v43 + 32) = v44;
  *(_QWORD *)(v43 + 40) = v45;
  v46 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_labelManager);
  *(_QWORD *)(v43 + 48) = v46;
  *(_QWORD *)(v43 + 56) = &off_100057530;
  swift_unknownObjectRetain(v44);
  swift_retain(v46);
  sub_10002BF50(v43);
  swift_bridgeObjectRelease(v43);
  sub_10002BFD8((uint64_t)objc_msgSend(v3, p_name[352]));
  v83[4] = (uint64_t)sub_1000146F8;
  v84 = 0;
  v83[0] = (uint64_t)_NSConcreteStackBlock;
  v83[1] = 1107296256;
  v83[2] = (uint64_t)sub_1000146FC;
  v83[3] = (uint64_t)&unk_1000567E8;
  v47 = _Block_copy(v83);
  objc_msgSend(v41, "updatePreferences:", v47, swift_release(v84).n128_f64[0]);
  _Block_release(v47);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(0, "", 80, 132, 36, 1);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v49 = (uint64_t)sub_100005D34(isEscapingClosureAtFileLocation, "isPreview");
    if ((v49 & 1) == 0)
    {
      v50 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_dataManager);
      sub_10003D6E0(v17);
      v51 = (uint64_t)v80;
      sub_100019210((uint64_t)v17, (uint64_t)v80);
      sub_10000658C(v51, 0, 1, v79);
      v52 = v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData;
      sub_1000139A0(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData, (uint64_t)v83, 33);
      sub_100018E58(v51, v52);
      swift_endAccess(v83);
      sub_100019210((uint64_t)v17, (uint64_t)v15);
      v53 = v81;
      sub_100019210((uint64_t)v17, v81);
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, (os_log_type_t)v56))
      {
        LODWORD(v79) = v56;
        v80 = v17;
        v57 = sub_10000B0C8(32);
        v78 = sub_10000B0C8(64);
        v83[0] = v78;
        *(_DWORD *)v57 = 136446723;
        v58 = sub_1000258AC();
        v82 = sub_1000191F4(v58, v59);
        sub_10001922C((uint64_t)&v82, (uint64_t)v83, v60, v57 + 12);
        sub_100005D2C();
        sub_10000AB38((uint64_t)v15, type metadata accessor for PosterData);
        *(_WORD *)(v57 + 12) = 2160;
        v82 = 1752392040;
        sub_1000190FC(v61, v62, v57 + 14, v57 + 22);
        *(_WORD *)(v57 + 22) = 2081;
        v63 = v77;
        sub_100025800(v77);
        v64 = sub_1000191FC();
        if (sub_100006580(v63, 1, v64) == 1)
        {
          sub_10000AB60(v63, &qword_10005C4A0);
          v66 = 7104878;
        }
        else
        {
          sub_10000AB38(v63, type metadata accessor for PosterDataModel);
          v66 = sub_100019094();
        }
        v67 = sub_1000191CC(v66, v65, v83);
        v68 = sub_1000191D4(v67);
        sub_10001922C(v68, v69, v70, v71);
        sub_100005D2C();
        sub_10000AB38(v81, type metadata accessor for PosterData);
        _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v79, "Initializing with data=%{public}s, location=%{private,mask.hash}s", (uint8_t *)v57, 0x20u);
        v72 = v78;
        sub_1000191BC(v78, v73, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v72);
        sub_10000AFFC(v57);

        v17 = v80;
      }
      else
      {
        sub_10000AB38((uint64_t)v15, type metadata accessor for PosterData);
        sub_10000AB38(v53, type metadata accessor for PosterData);

      }
      sub_100019088(v50 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate, (uint64_t)&off_1000567B0);
      sub_100019088(v50 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate, (uint64_t)&off_100056798);
      sub_10003D904();
      sub_10000AB38((uint64_t)v17, type metadata accessor for PosterData);
    }
    v74 = sub_100005D34(v49, "isPreview");
    sub_10001474C(v41, v74);
    sub_100015950(v3, v41, 0);
    sub_1000139F8();
  }
}

void sub_100014698(void *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(a1, "setPreferredProminentColor:", v2);

}

uint64_t sub_1000146FC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, id);
  id v6;

  v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_unknownObjectRetain(a2);
  v6 = a3;
  v5(a2, v6);

  return swift_unknownObjectRelease(a2);
}

void sub_10001474C(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  id v40;
  int EnumCaseMultiPayload;
  ClassDescriptor **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  id v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  int v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  Swift::String v110;
  void *object;
  unint64_t v112;
  uint64_t v113;
  uint64_t ObjectType;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint8_t *v125;
  id v126;
  uint64_t v127;
  unsigned __int8 v128;
  int v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  _QWORD *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  _BYTE *v165;
  uint64_t v166;
  int v167;
  id v168;
  id v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  char v175[8];
  uint64_t v176;
  _QWORD v177[3];
  char v178;
  uint64_t v179[4];
  char v180;

  v3 = v2;
  v167 = a2;
  v171 = a1;
  v145 = type metadata accessor for TargetWindowSizeClass(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (uint64_t)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005350(&qword_10005BE78);
  __chkstk_darwin(v5);
  v142 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for Elevation(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v141 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = type metadata accessor for CloudAltitudeKind(0);
  v154 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v160 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for WeatherCondition(0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v159 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for Date(0);
  v151 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v150 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005350((uint64_t *)&unk_10005C4C0);
  v12 = __chkstk_darwin(v11);
  v149 = (uint64_t)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v147 = (uint64_t)&v137 - v14;
  v138 = (void (*)(char *, char *, uint64_t))type metadata accessor for TimeZone(0);
  v137 = *((_QWORD *)v138 - 1);
  __chkstk_darwin(v138);
  v140 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for Location(0);
  v146 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v158 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005350((uint64_t *)&unk_10005D940);
  __chkstk_darwin(v17);
  v19 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for PosterDataModel.DataPoint(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for PosterDataModel(0);
  v24 = __chkstk_darwin(v23);
  v139 = (uint64_t *)((char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  v162 = (uint64_t)&v137 - v26;
  v157 = type metadata accessor for PosterAnimationViewModel(0);
  v27 = __chkstk_darwin(v157);
  v164 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v166 = (uint64_t)&v137 - v29;
  v30 = sub_100005350((uint64_t *)&unk_10005C4B0);
  __chkstk_darwin(v30);
  v32 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for PosterData(0);
  v34 = __chkstk_darwin(v33);
  v36 = (unsigned __int8 *)&v137 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v137 - v37;
  v170 = v3;
  v39 = v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData;
  swift_beginAccess(v39, v175, 0, 0);
  sub_100018EF0(v39, (uint64_t)v32, (uint64_t *)&unk_10005C4B0);
  if (sub_100006580((uint64_t)v32, 1, v33) == 1)
  {
    *v38 = 2;
    swift_storeEnumTagMultiPayload(v38, v33, 0);
    sub_10000AB60((uint64_t)v32, (uint64_t *)&unk_10005C4B0);
  }
  else
  {
    sub_100018F64((uint64_t)v32, (uint64_t)v38, type metadata accessor for PosterData);
  }
  v40 = v171;
  v169 = objc_msgSend(v171, "backgroundView");
  v168 = objc_msgSend(v40, "foregroundView");
  sub_100018ED0((uint64_t)v38, (uint64_t)v36, type metadata accessor for PosterData);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v33);
  v42 = &off_10005B000;
  v165 = v38;
  if (EnumCaseMultiPayload == 1)
  {
    v43 = (uint64_t)v36;
    v44 = v162;
    sub_100018F64(v43, v162, type metadata accessor for PosterDataModel);
    v45 = v170;
    sub_100035EA0();
    *(_BYTE *)(*(_QWORD *)(v45 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unloadManager) + 32) = 0;
    sub_100018DC0(*(_QWORD *)(v44 + v23[10]), (uint64_t)v19);
    if (sub_100006580((uint64_t)v19, 1, (uint64_t)v20) == 1)
    {
      sub_10000AB60((uint64_t)v19, (uint64_t *)&unk_10005D940);
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v46 = type metadata accessor for Logger(0);
      sub_10000AADC(v46, (uint64_t)qword_1000608F8);
      v47 = (void (*)(_QWORD, _QWORD, _QWORD))v139;
      sub_100018ED0(v44, (uint64_t)v139, type metadata accessor for PosterDataModel);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.error.getter(v49);
      v51 = os_log_type_enabled(v49, v50);
      v52 = v171;
      if (v51)
      {
        v53 = (uint8_t *)swift_slowAlloc(12, -1);
        v54 = swift_slowAlloc(32, -1);
        v179[0] = v54;
        *(_DWORD *)v53 = 136446210;
        v55 = sub_10002821C();
        v57 = v56;
        v176 = sub_1000210CC(v55, v56, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, v177, v53 + 4, v53 + 12);
        swift_bridgeObjectRelease(v57);
        sub_10000AB38((uint64_t)v47, type metadata accessor for PosterDataModel);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Poster has data but no recent weather; model=%{public}s",
          v53,
          0xCu);
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        v58 = v54;
        v42 = &off_10005B000;
        swift_slowDealloc(v58, -1, -1);
        v59 = v53;
        v52 = v171;
        swift_slowDealloc(v59, -1, -1);
      }
      else
      {
        sub_10000AB38((uint64_t)v47, type metadata accessor for PosterDataModel);
      }

      v82 = v166;
      v92 = (uint64_t)v164;
      sub_100008420(v169, v168, 1, v166);
      sub_10000AB38(v44, type metadata accessor for PosterDataModel);
    }
    else
    {
      sub_100018F64((uint64_t)v19, (uint64_t)v22, type metadata accessor for PosterDataModel.DataPoint);
      v66 = v140;
      (*(void (**)(char *, uint64_t, _QWORD *))(v137 + 16))(v140, v44 + v23[6], v138);
      v67 = *(double *)(v44 + 16);
      v68 = *(double *)(v44 + 24);
      v69 = v147;
      v70 = v163;
      sub_10000658C(v147, 1, 1, v163);
      Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)(0, 0xE000000000000000, 0, 0xE000000000000000, v66, v69, 0, 0, v67, v68, 0, 0, 0, 0);
      v140 = *(char **)(v151 + 16);
      v71 = v150;
      ((void (*)(char *, char *, uint64_t))v140)(v150, v22, v70);
      v72 = &v22[v20[5]];
      v139 = *(_QWORD **)(v152 + 16);
      v73 = v153;
      ((void (*)(char *, char *, uint64_t))v139)(v159, v72, v153);
      v74 = *(_QWORD *)&v22[v20[6]];
      v75 = *(_QWORD *)&v22[v20[7]];
      v76 = &v22[v20[8]];
      v138 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
      v138(v160, v76, v161);
      sub_100018EF0(v44 + v23[7], v69, (uint64_t *)&unk_10005C4C0);
      sub_100018EF0(v44 + v23[8], v149, (uint64_t *)&unk_10005C4C0);
      v77 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
      v78 = v141;
      v77(v141, &v22[v20[9]], v156);
      LODWORD(v137) = v22[v20[10]];
      v79 = v142;
      sub_100018EF0(v44 + v23[9], v142, &qword_10005BE78);
      v80 = v166;
      (*(void (**)(uint64_t, char *, uint64_t))(v146 + 16))(v166, v158, v148);
      v81 = (int *)v157;
      ((void (*)(uint64_t, char *, uint64_t))v140)(v80 + *(int *)(v157 + 20), v71, v70);
      v42 = &off_10005B000;
      ((void (*)(uint64_t, char *, uint64_t))v139)(v80 + v81[6], v159, v73);
      v82 = v80;
      *(_QWORD *)(v80 + v81[7]) = v74;
      *(_QWORD *)(v80 + v81[8]) = v75;
      v138((char *)(v80 + v81[9]), v160, v161);
      v83 = v80 + v81[10];
      v84 = v147;
      sub_100018EF0(v147, v83, (uint64_t *)&unk_10005C4C0);
      v85 = v149;
      sub_100018EF0(v149, v82 + v81[11], (uint64_t *)&unk_10005C4C0);
      v86 = v156;
      v77((char *)(v82 + v81[12]), v78, v156);
      *(_BYTE *)(v82 + v81[13]) = v137;
      sub_100018EF0(v79, v82 + v81[14], &qword_10005BE78);
      *(_BYTE *)(v82 + v81[15]) = 1;
      v87 = v169;
      *(_QWORD *)(v82 + v81[17]) = v169;
      v88 = v168;
      *(_QWORD *)(v82 + v81[18]) = v168;
      v89 = v87;
      v90 = v88;
      v91 = v143;
      sub_100032D88(v143);
      sub_10000AB60(v79, &qword_10005BE78);
      (*(void (**)(char *, uint64_t))(v155 + 8))(v78, v86);
      sub_10000AB60(v85, (uint64_t *)&unk_10005C4C0);
      sub_10000AB60(v84, (uint64_t *)&unk_10005C4C0);
      (*(void (**)(char *, uint64_t))(v154 + 8))(v160, v161);
      (*(void (**)(char *, uint64_t))(v152 + 8))(v159, v153);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v150, v163);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v158, v148);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v144 + 32))(v82 + v81[16], v91, v145);
      sub_10000AB38((uint64_t)v22, type metadata accessor for PosterDataModel.DataPoint);
      sub_10000AB38(v162, type metadata accessor for PosterDataModel);
      v52 = v171;
      v92 = (uint64_t)v164;
    }
  }
  else
  {
    v60 = *v36;
    LODWORD(v162) = *v36;
    if ((v167 & 1) != 0)
    {
      v61 = 0;
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 0;
    }
    else
    {
      sub_10002B7CC(v60, 0, (uint64_t)&v176);
      v61 = v176;
      v62 = v177[0];
      v63 = v177[1];
      v64 = v177[2];
      v65 = v178;
    }
    v179[0] = v61;
    v179[1] = v62;
    v179[2] = v63;
    v179[3] = v64;
    v94 = v169;
    v93 = v170;
    v180 = v65;
    v95 = *(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState);
    v96 = *(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState + 8);
    v97 = v169;
    v98 = v94;
    v99 = v97;
    sub_100035E20((uint64_t)v179, v98, v95, v96);
    sub_100018EA0(v61, v62, v63, v64);

    v100 = *(_QWORD *)(v93 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unloadManager);
    v101 = v162;
    if ((_DWORD)v162 == 2)
    {
      *(_BYTE *)(v100 + 32) = 0;
    }
    else
    {
      *(_BYTE *)(v100 + 32) = 1;
      sub_100032318();
    }
    v82 = v166;
    v92 = (uint64_t)v164;
    v42 = &off_10005B000;
    sub_100008420(v99, v168, v101 == 2, v166);
    v52 = v171;
  }
  if ((v167 & 1) != 0)
  {
    v102 = objc_msgSend(v52, "environment");
    v103 = objc_msgSend(v102, "deviceOrientation");
    swift_unknownObjectRelease(v102);
    if (v42[365] != (ClassDescriptor *)-1)
      swift_once(&qword_10005BB68, sub_100042380);
    v104 = type metadata accessor for Logger(0);
    v105 = sub_10000AADC(v104, (uint64_t)qword_1000608F8);
    v106 = Logger.logObject.getter(v105);
    v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc(12, -1);
      v109 = swift_slowAlloc(32, -1);
      *(_DWORD *)v108 = 136446210;
      v172 = 0x2D7972656C6C6167;
      v173 = 0xE800000000000000;
      v174 = v109;
      v110._countAndFlagsBits = sub_1000192C8((uint64_t)v103);
      object = v110._object;
      String.append(_:)(v110);
      swift_bridgeObjectRelease(object);
      v112 = v173;
      v172 = sub_1000210CC(v172, v173, &v174);
      v82 = v166;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v172, &v173, v108 + 4, v108 + 12);
      swift_bridgeObjectRelease(v112);
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Rendering poster snapshot for kind=%{public}s", v108, 0xCu);
      swift_arrayDestroy(v109, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v109, -1, -1);
      swift_slowDealloc(v108, -1, -1);
    }

    v113 = *(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation));
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v113 + 48))(v82, v103, ObjectType, v113);
  }
  else
  {
    if (v42[365] != (ClassDescriptor *)-1)
      swift_once(&qword_10005BB68, sub_100042380);
    v115 = type metadata accessor for Logger(0);
    sub_10000AADC(v115, (uint64_t)qword_1000608F8);
    sub_100018ED0(v82, v92, type metadata accessor for PosterAnimationViewModel);
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v117, v118))
    {
      v119 = (uint8_t *)swift_slowAlloc(12, -1);
      v120 = swift_slowAlloc(32, -1);
      v172 = v120;
      *(_DWORD *)v119 = 136446210;
      sub_1000059B4((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v122 = dispatch thunk of CustomStringConvertible.description.getter(v163, v121);
      v124 = v123;
      v174 = sub_1000210CC(v122, v123, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, v175, v119 + 4, v119 + 12);
      swift_bridgeObjectRelease(v124);
      sub_10000AB38(v92, type metadata accessor for PosterAnimationViewModel);
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Rendering poster with live animation of weather data at date=%{public}s", v119, 0xCu);
      swift_arrayDestroy(v120, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v120, -1, -1);
      v125 = v119;
      v52 = v171;
      swift_slowDealloc(v125, -1, -1);
    }
    else
    {
      sub_10000AB38(v92, type metadata accessor for PosterAnimationViewModel);
    }

    v126 = objc_msgSend(v52, "environment");
    v127 = swift_getObjectType(v126);
    sub_100032BA4(v127);
    v129 = v128;
    swift_unknownObjectRelease(v126);
    if (v129)
    {
      v130 = 1;
    }
    else
    {
      v131 = objc_msgSend(v52, "environment");
      v130 = (uint64_t)objc_msgSend(v131, "isSnapshot");
      swift_unknownObjectRelease(v131);
    }
    v132 = v170;
    v133 = *(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
    v134 = swift_getObjectType(*(_QWORD *)(v170 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation));
    v135 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v133 + 24);
    v136 = swift_unknownObjectRetain(v132);
    v135(v136, &off_100056780, v134, v133);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 40))(v82, v130, v134, v133);
  }

  sub_10000AB38(v82, type metadata accessor for PosterAnimationViewModel);
  sub_10000AB38((uint64_t)v165, type metadata accessor for PosterData);
}

void sub_100015950(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType;
  unsigned __int8 v7;
  double v8;
  uint64_t v9;
  double v10;

  ObjectType = swift_getObjectType(a1);
  if ((objc_msgSend(a1, "isPreview") & 1) == 0 && (objc_msgSend(a1, "isSnapshot") & 1) == 0)
  {
    sub_10002C43C((uint64_t)objc_msgSend(a1, "deviceOrientation"), a3);
    sub_100032C10(ObjectType);
    sub_1000174E0(v7, a2, v8);
    sub_100032BA4(ObjectType);
    sub_100017954(v9, a2, v10);
  }
}

void sub_100015A84(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  int v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  if (qword_10005BB68 != -1)
    swift_once(&qword_10005BB68, sub_100042380);
  v8 = sub_100013AD0();
  v9 = sub_10000AADC(v8, (uint64_t)qword_1000608F8);
  v10 = swift_unknownObjectRetain_n(a2, 2);
  Logger.logObject.getter(v10);
  v11 = sub_100019080();
  if (os_log_type_enabled(v9, v11))
  {
    v12 = sub_10000B0C8(24);
    v34 = a3;
    v13 = sub_10000B0C8(32);
    v36 = v13;
    *(_DWORD *)v12 = 67240706;
    v14 = sub_100019204();
    LODWORD(v35) = (_DWORD)v14;
    sub_1000191E8((uint64_t)v14, v15, v12 + 4, v12 + 8, v16, v17);
    *(_WORD *)(v12 + 8) = 1026;
    v18 = objc_msgSend(a2, "isSnapshot");
    LODWORD(v35) = (_DWORD)v18;
    sub_1000191E8((uint64_t)v18, v19, v12 + 10, v12 + 14, v20, v21);
    *(_WORD *)(v12 + 14) = 2082;
    v22 = sub_1000192C8((uint64_t)objc_msgSend(a2, "deviceOrientation"));
    v24 = v23;
    v35 = sub_1000210CC(v22, v23, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v12 + 16, v12 + 24);
    sub_100019118((uint64_t)a2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "Did update; isPreview=%{BOOL,public}d, isSnapshot=%{BOOL,public}d, orientation=%{public}s",
      (uint8_t *)v12,
      0x18u);
    sub_100013C90(v13, v25, (uint64_t)&type metadata for Any + 8);
    v26 = v13;
    a3 = v34;
    sub_10000AFFC(v26);
    sub_10000AFFC(v12);

  }
  else
  {

    sub_100019118((uint64_t)a2);
  }
  v27 = sub_10002DCD8();
  v28 = OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_isRenderRequiredOnUpdate;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_isRenderRequiredOnUpdate) == 1)
  {
    v29 = v9;
    Logger.logObject.getter(v27);
    v30 = sub_100019080();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v31 = 0;
      sub_100019040((void *)&_mh_execute_header, v29, v30, "Rendering poster data update that was postponed", v31);
      sub_10000AFFC((uint64_t)v31);
    }

    *(_BYTE *)(v4 + v28) = 0;
    v32 = sub_100019204();
    sub_10001474C(a1, v32);
  }
  v33 = objc_msgSend(a3, "animationSettings");
  sub_100015950(a2, a1, v33);

}

double sub_100015DC0()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _BYTE v17[24];

  v1 = v0;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v2);
  sub_100013B18();
  v5 = v4 - v3;
  if (qword_10005BB68 != -1)
    swift_once(&qword_10005BB68, sub_100042380);
  v6 = sub_100013AD0();
  sub_10001902C(v6, (uint64_t)qword_1000608F8);
  v7 = sub_100019080();
  if (os_log_type_enabled(v0, v7))
  {
    v8 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v8 = 0;
    sub_100019040((void *)&_mh_execute_header, v0, v7, "Invalidated", v8);
    sub_10000AFFC((uint64_t)v8);
  }

  sub_10003D93C();
  sub_10002C2D0();
  v9 = *(uint64_t *)((char *)&v0[1].isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation);
  v10 = sub_100019218();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 80))(0, v10, v9);
  sub_100032318();
  sub_10002DD6C();
  sub_100035D88();
  v11 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer) = 0;

  v12 = sub_1000190F4();
  sub_10000B3FC(v5, v13, v14, v12);
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData;
  sub_1000139A0((uint64_t)v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData, (uint64_t)v17, 33);
  sub_100018E58(v5, v15);
  swift_endAccess(v17);
  *(_QWORD *)&result = 3;
  *(_OWORD *)((char *)&v1->isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState) = xmmword_100045E10;
  *(_OWORD *)((char *)&v1->isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState) = xmmword_100045E10;
  *((_BYTE *)&v1->isa + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_isRenderRequiredOnUpdate) = 0;
  return result;
}

void sub_100015FEC()
{
  _swift_stdlib_reportUnimplementedInitializer("WeatherPoster.PosterRenderer", 28, "init()", 6, 0);
  __break(1u);
}

id sub_100016024()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100019218();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100016100()
{
  return type metadata accessor for PosterRenderer(0);
}

uint64_t type metadata accessor for PosterRenderer(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C480;
  if (!qword_10005C480)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterRenderer);
  return result;
}

void sub_100016140(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[14];

  v6[0] = "\b";
  sub_100007858(319, (unint64_t *)&qword_10005C490, type metadata accessor for PosterData);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007858(319, (unint64_t *)&qword_10005C1C8, type metadata accessor for PosterAnimationViewModel);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_100045E90;
      v6[4] = &unk_100045E90;
      v6[5] = &unk_100045EA8;
      v6[6] = &unk_100045EC0;
      v6[7] = &unk_100045ED8;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[10] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[11] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[12] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[13] = &unk_100045EC0;
      swift_updateClassMetadata2(a1, 256, 14, v6, a1 + 80);
    }
  }
}

void sub_100016240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  const char *v62;
  uint64_t v63;
  os_log_type_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[3];
  uint64_t v83;

  sub_100019164();
  v3 = v2;
  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v4);
  sub_1000190A0(v5, v74);
  sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v6);
  sub_100019060(v7, v74);
  v9 = __chkstk_darwin(v8);
  v77 = (char *)&v74 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v74 - v11;
  v13 = sub_100005350(&qword_10005C4A8);
  sub_100008864();
  __chkstk_darwin(v14);
  sub_100013B18();
  v17 = v16 - v15;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v18);
  sub_1000190D8();
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v74 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v74 - v23;
  v78 = v3;
  sub_100018ED0(v3, (uint64_t)&v74 - v23, type metadata accessor for PosterData);
  sub_10001913C((uint64_t)v24);
  v79 = v0;
  v25 = v0 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData;
  sub_1000139A0(v0 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData, (uint64_t)&v83, 0);
  v26 = v17 + *(int *)(v13 + 48);
  sub_100018EF0((uint64_t)v24, v17, (uint64_t *)&unk_10005C4B0);
  sub_100018EF0(v25, v26, (uint64_t *)&unk_10005C4B0);
  sub_100019120(v17);
  if (v27)
  {
    sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
    sub_100019120(v26);
    if (v27)
    {
      sub_10000AB60(v17, (uint64_t *)&unk_10005C4B0);
      goto LABEL_27;
    }
    goto LABEL_9;
  }
  sub_100018EF0(v17, (uint64_t)v22, (uint64_t *)&unk_10005C4B0);
  sub_100019120(v26);
  if (v27)
  {
    sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
    sub_10000AB38((uint64_t)v22, type metadata accessor for PosterData);
LABEL_9:
    sub_10000AB60(v17, &qword_10005C4A8);
    v28 = v80;
    goto LABEL_10;
  }
  sub_100018F64(v26, (uint64_t)v12, type metadata accessor for PosterData);
  sub_10002851C((uint64_t)v22, (uint64_t)v12);
  v58 = v57;
  sub_10000AB38((uint64_t)v12, type metadata accessor for PosterData);
  sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
  sub_10000AB38((uint64_t)v22, type metadata accessor for PosterData);
  sub_10000AB60(v17, (uint64_t *)&unk_10005C4B0);
  v28 = v80;
  if ((v58 & 1) != 0)
  {
LABEL_27:
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v59 = sub_100013AD0();
    v39 = sub_10001902C(v59, (uint64_t)qword_1000608F8);
    v60 = static os_log_type_t.default.getter();
    if (sub_100019180(v60))
    {
      v61 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v61 = 0;
      v62 = "Poster data updated, but did not change";
LABEL_35:
      sub_100019040((void *)&_mh_execute_header, v39, (os_log_type_t)v22, v62, v61);
      sub_10000AFFC((uint64_t)v61);
      goto LABEL_40;
    }
    goto LABEL_40;
  }
LABEL_10:
  v29 = v78;
  sub_100018ED0(v78, v1, type metadata accessor for PosterData);
  sub_10001913C(v1);
  sub_1000139A0(v25, (uint64_t)v82, 33);
  sub_100018E58(v1, v25);
  swift_endAccess(v82);
  v30 = *(void **)(v79 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  if (v30)
  {
    v31 = *(unsigned __int8 *)(v79 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState);
    v32 = 0xE200000000000000;
    v33 = 28271;
    v34 = 0xE300000000000000;
    v35 = 6710895;
    if ((_DWORD)v31 != 1)
    {
      v35 = 0x697469736E617274;
      v34 = 0xED0000676E696E6FLL;
    }
    if (*(_BYTE *)(v79 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState))
    {
      v33 = v35;
      v32 = v34;
    }
    if (v31 == 3)
      v36 = 0x6E776F6E6B6E75;
    else
      v36 = v33;
    if (v31 == 3)
      v37 = 0xE700000000000000;
    else
      v37 = v32;
    v38 = qword_10005BB68;
    v39 = v30;
    v40 = (uint64_t)v77;
    if (v38 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v41 = sub_100013AD0();
    sub_10000AADC(v41, (uint64_t)qword_1000608F8);
    sub_100018ED0(v29, v40, type metadata accessor for PosterData);
    sub_100018ED0(v29, v28, type metadata accessor for PosterData);
    v42 = swift_bridgeObjectRetain(v37);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      LODWORD(v78) = v44;
      v80 = v36;
      v45 = v40;
      v46 = sub_10000B0C8(42);
      v75 = sub_10000B0C8(96);
      v82[0] = v75;
      *(_DWORD *)v46 = 136446979;
      v47 = sub_1000258AC();
      v49 = sub_1000191F4(v47, v48);
      v50 = sub_10001914C(v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v50, v51, v46 + 4, v52);
      sub_100005D2C();
      sub_10000AB38(v45, type metadata accessor for PosterData);
      *(_WORD *)(v46 + 12) = 2160;
      v81 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, type metadata accessor for PosterData, v46 + 14, v46 + 22);
      *(_WORD *)(v46 + 22) = 2081;
      v53 = v76;
      sub_100025800(v76);
      v54 = sub_1000191FC();
      if (sub_100006580(v53, 1, v54) == 1)
      {
        sub_10000AB60(v53, &qword_10005C4A0);
        v55 = 0xE300000000000000;
        v56 = 7104878;
      }
      else
      {
        sub_10000AB38(v53, type metadata accessor for PosterDataModel);
        v56 = sub_100019094();
        v55 = v65;
      }
      v66 = v80;
      v67 = sub_1000210CC(v56, v55, v82);
      v68 = sub_10001914C(v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v68, v69, v46 + 24, v70);
      swift_bridgeObjectRelease(v55);
      sub_10000AB38(v28, type metadata accessor for PosterData);
      *(_WORD *)(v46 + 32) = 2082;
      swift_bridgeObjectRetain(v37);
      v81 = sub_1000210CC(v66, v37, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, type metadata accessor for PosterData, v46 + 34, v46 + 42);
      swift_bridgeObjectRelease_n(v37, 3);
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v78, "Updating to reflect the latest data; data=%{public}s, location=%{private,mask.hash}s, screen=%{public}s",
        (uint8_t *)v46,
        0x2Au);
      v71 = v75;
      swift_arrayDestroy(v75, 3, (char *)&type metadata for Any + 8);
      sub_10000AFFC(v71);
      sub_10000AFFC(v46);

    }
    else
    {
      sub_10000AB38(v40, type metadata accessor for PosterData);
      sub_10000AB38(v28, type metadata accessor for PosterData);

      swift_bridgeObjectRelease_n(v37, 2);
    }
    v72 = -[NSObject environment](v39, "environment");
    v73 = objc_msgSend(v72, "isPreview");
    swift_unknownObjectRelease(v72);
    sub_10001474C(v39, v73);
  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v63 = sub_100013AD0();
    v39 = sub_10001902C(v63, (uint64_t)qword_1000608F8);
    v64 = static os_log_type_t.error.getter(v39);
    if (sub_100019180(v64))
    {
      v61 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v61 = 0;
      v62 = "Poster data updated, but unable to render new data because renderer does not exist.";
      goto LABEL_35;
    }
  }
LABEL_40:

  sub_1000139F8();
}

uint64_t sub_10001697C(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  void *v4;
  id v5;
  char v6;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1000191A0(a1);

    return v6 & 1;
  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v8 = sub_100013AD0();
    sub_10001902C(v8, (uint64_t)qword_1000608F8);
    v9 = sub_1000191C4();
    if (os_log_type_enabled(v1, v9))
    {
      v10 = (uint8_t *)sub_10000B0C8(12);
      v11 = sub_10000B0C8(32);
      v17 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = sub_10002EB54(a1);
      v14 = v13;
      v16 = sub_1000210CC(v12, v13, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v1, v9, "Unable to extend session for %{public}s because renderer does not exist", v10, 0xCu);
      sub_100013C90(v11, v15, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v11);
      sub_10000AFFC((uint64_t)v10);
    }

    return 0;
  }
}

void sub_100016B04(uint64_t a1)
{
  sub_10002E8C8(a1);
}

uint64_t sub_100016B30()
{
  NSObject *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  id v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  NSObject *v38;
  uint64_t v39;
  _BYTE v40[24];
  uint64_t v41[13];
  uint64_t v42;
  uint64_t v43;

  sub_100019164();
  v42 = v3;
  v43 = v4;
  v5 = v1;
  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_100013B18();
  v9 = v8 - v7;
  sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v10);
  sub_1000190D8();
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  v14 = *(void **)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer];
  if (v14)
  {
    v15 = v14;
    if ((sub_1000191A0(1) & 1) != 0)
    {

      return 1;
    }
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v20 = sub_100013AD0();
    v21 = sub_10000AADC(v20, (uint64_t)qword_1000608F8);
    v22 = v5;
    Logger.logObject.getter(v22);
    v23 = sub_100019080();
    if (!os_log_type_enabled(v21, (os_log_type_t)v23))
    {

LABEL_21:
      result = 0;
      *((_BYTE *)v22 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_isRenderRequiredOnUpdate) = 1;
      return result;
    }
    v37 = v23;
    v38 = v21;
    v24 = sub_10000B0C8(32);
    v36 = sub_10000B0C8(64);
    v41[0] = v36;
    *(_DWORD *)v24 = 136446723;
    v25 = (uint64_t)v22 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData;
    sub_1000139A0((uint64_t)v22 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_posterData, (uint64_t)v40, 0);
    if (sub_100019108())
    {
      v27 = 7104878;
    }
    else
    {
      sub_100018ED0(v25, (uint64_t)v13, type metadata accessor for PosterData);
      v27 = sub_1000258AC();
      sub_10000AB38((uint64_t)v13, type metadata accessor for PosterData);
    }
    v39 = sub_1000191CC(v27, v26, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v24 + 4, v24 + 12);

    sub_100005D2C();
    *(_WORD *)(v24 + 12) = 2160;
    v39 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v24 + 14, v24 + 22);
    *(_WORD *)(v24 + 22) = 2081;
    if (!sub_100019108())
    {
      sub_100018ED0(v25, v2, type metadata accessor for PosterData);
      sub_100025800(v9);
      sub_10000AB38(v2, type metadata accessor for PosterData);
      v29 = sub_1000191FC();
      if (sub_100006580(v9, 1, v29) != 1)
      {
        sub_10000AB38(v9, type metadata accessor for PosterDataModel);
        v33 = sub_100019094();
        v30 = v38;
        v31 = v37;
        v32 = v36;
        goto LABEL_20;
      }
      sub_10000AB60(v9, &qword_10005C4A0);
    }
    v30 = v38;
    v31 = v37;
    v32 = v36;
    v33 = 7104878;
LABEL_20:
    v39 = sub_1000191CC(v33, v28, v41);
    sub_10001922C((uint64_t)&v39, (uint64_t)v40, v34, v24 + 32);

    sub_100005D2C();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Render was postponed because extended session was not granted; data=%{public}s, location=%{private,mask.hash}s",
      (uint8_t *)v24,
      0x20u);
    sub_1000191BC(v32, v35, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v32);
    sub_10000AFFC(v24);

    goto LABEL_21;
  }
  if (qword_10005BB68 != -1)
    swift_once(&qword_10005BB68, sub_100042380);
  v17 = sub_100013AD0();
  sub_10001902C(v17, (uint64_t)qword_1000608F8);
  v18 = sub_1000191C4();
  if (sub_100013AD8(v18))
  {
    v19 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v19 = 0;
    sub_100019040((void *)&_mh_execute_header, v0, (os_log_type_t)v1, "Unable to extend session for 'weatherRendering' because renderer does not exist", v19);
    sub_10000AFFC((uint64_t)v19);
  }

  return 0;
}

void sub_100016F54(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t v36;
  int v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40[3];
  char v41[24];

  v3 = v1;
  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_1000190BC();
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - v7;
  sub_10002E8C8(1);
  v9 = *(void **)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer];
  if (v9)
  {
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation];
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8];
    v12 = v9;
    sub_1000328A4(v12, v10, v11);
    objc_msgSend(sub_1000191A8(), "isPreview");
    sub_100019220();
    if ((v10 & 1) == 0)
    {
      objc_msgSend(sub_1000191A8(), "isSnapshot");
      sub_100019220();
      v13 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastRenderedAnimationViewModel];
      sub_1000139A0((uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastRenderedAnimationViewModel], (uint64_t)v41, 0);
      sub_100018EF0(v13, (uint64_t)v8, &qword_10005C320);
      v14 = sub_100018630((uint64_t)v8, v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_deviceSupportsVFX]);
      sub_10000AB60((uint64_t)v8, &qword_10005C320);
      if ((v14 & 1) != 0)
      {
        if (qword_10005BB68 != -1)
          swift_once(&qword_10005BB68, sub_100042380);
        v15 = sub_100013AD0();
        v16 = sub_10000AADC(v15, (uint64_t)qword_1000608F8);
        sub_100018EF0(a1, v2, &qword_10005C320);
        v17 = v3;
        Logger.logObject.getter(v17);
        v18 = sub_100019080();
        v19 = v18;
        if (os_log_type_enabled(v16, v18))
        {
          v20 = sub_10000B0C8(22);
          v37 = v19;
          v21 = v20;
          v38 = sub_10000B0C8(64);
          v40[0] = (uint64_t)v38;
          *(_DWORD *)v21 = 136446466;
          v35 = v21 + 4;
          sub_100018EF0(v13, (uint64_t)v8, &qword_10005C320);
          v36 = v16;
          v22 = sub_100018A84();
          v24 = v23;
          sub_10000AB60((uint64_t)v8, &qword_10005C320);
          v39 = sub_1000210CC(v22, v24, v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v35, v21 + 12);

          swift_bridgeObjectRelease(v24);
          *(_WORD *)(v21 + 12) = 2082;
          v25 = sub_100018A84();
          v39 = sub_1000210CC(v25, v26, v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v21 + 14, v21 + 22);
          sub_100005D2C();
          sub_10000AB60(v2, &qword_10005C320);
          v27 = v36;
          _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v37, "Render content has significantly changed; from='%{public}s', to='%{public}s'",
            (uint8_t *)v21,
            0x16u);
          v28 = v38;
          sub_1000191BC((uint64_t)v38, v29, (uint64_t)&type metadata for Any + 8);
          sub_10000AFFC((uint64_t)v28);
          sub_10000AFFC(v21);

        }
        else
        {

          sub_10000AB60(v2, &qword_10005C320);
        }
        objc_msgSend(v12, "noteContentSignificantlyChanged");
      }
    }

    v33 = (uint64_t)v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastRenderedAnimationViewModel;
    sub_1000139A0((uint64_t)v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastRenderedAnimationViewModel, (uint64_t)v40, 33);
    sub_100018F1C(a1, v33);
    swift_endAccess(v40);
  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v30 = sub_100013AD0();
    v38 = sub_10001902C(v30, (uint64_t)qword_1000608F8);
    v31 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v31))
    {
      v32 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v32 = 0;
      sub_100019040((void *)&_mh_execute_header, v38, v31, "Unable to handle render completion because renderer does not exist", v32);
      sub_10000AFFC((uint64_t)v32);
    }

  }
}

uint64_t sub_1000173AC()
{
  NSObject *v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  if (v2)
  {
    v0 = v2;
    v3 = sub_1000191A0(4);
  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v4 = sub_100013AD0();
    sub_10001902C(v4, (uint64_t)qword_1000608F8);
    v5 = sub_1000191C4();
    if (sub_100013AD8(v5))
    {
      v6 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v6 = 0;
      sub_100019040((void *)&_mh_execute_header, v0, (os_log_type_t)v1, "Unable to extend session for device rotation because renderer does not exist", v6);
      sub_10000AFFC((uint64_t)v6);
    }
    v3 = 0;
  }

  return v3 & 1;
}

id sub_10001748C()
{
  uint64_t v0;
  id result;

  sub_10002E8C8(4);
  result = *(id *)(v0 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer);
  if (result)
    return objc_msgSend(result, "noteContentSignificantlyChanged");
  return result;
}

void sub_1000174E0(unsigned __int8 a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned __int8 v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  BOOL v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v8 = v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState);
  v10 = *(uint64_t *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState + 8);
  v11 = v9;
  if (v9 == 3 || (v9 == a1 ? (v12 = *(double *)&v10 == a3) : (v12 = 0), !v12))
  {
    v13 = sub_10000B774(v9, v10, a3);
    v14 = OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastWakeTransitionDirection;
    v15 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_lastWakeTransitionDirection);
    v16 = v15 == 3;
    v18 = v15 != 3 && v15 == v13;
    if (v13 == 3)
      v19 = v16;
    else
      v19 = v18;
    if (v11 != 1 && a1 == 1)
    {
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_10000AADC(v21, (uint64_t)qword_1000608F8);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = v14;
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Screen is off, pausing animation", v26, 2u);
        v27 = v26;
        v14 = v25;
        swift_slowDealloc(v27, -1, -1);
      }

      sub_100018000(1, a2);
    }
    if (v13)
      v28 = 1;
    else
      v28 = v19;
    if ((v28 & 1) == 0 && !*(_BYTE *)(v4 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState))
    {
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v29 = type metadata accessor for Logger(0);
      v30 = sub_10000AADC(v29, (uint64_t)qword_1000608F8);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = v14;
        v34 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Screen was turned on and settled on lock screen, starting animation", v34, 2u);
        v35 = v34;
        v14 = v33;
        swift_slowDealloc(v35, -1, -1);
      }

      sub_100018000(2, a2);
    }
    v36 = a1;
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_10000AADC(v37, (uint64_t)qword_1000608F8);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v48 = v14;
      v41 = swift_slowAlloc(22, -1);
      v42 = swift_slowAlloc(64, -1);
      v50 = v42;
      *(_DWORD *)v41 = 136446466;
      v43 = sub_10000B7F4(a1, a3);
      v45 = v44;
      v49 = sub_1000210CC(v43, v44, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v41 + 4, v41 + 12);
      swift_bridgeObjectRelease(v45);
      *(_WORD *)(v41 + 12) = 2082;
      if (v13 == 3)
      {
        v46 = 0xE300000000000000;
        v47 = 7104878;
      }
      else if (v13)
      {
        if (v13 == 1)
        {
          v46 = 0xE300000000000000;
          v47 = 6710895;
        }
        else
        {
          v46 = 0xED0000676E696E6FLL;
          v47 = 0x697469736E617274;
        }
      }
      else
      {
        v46 = 0xE200000000000000;
        v47 = 28271;
      }
      v49 = sub_1000210CC(v47, v46, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v41 + 14, v41 + 22);
      swift_bridgeObjectRelease(v46);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Setting wake state to %{public}s; transitionDirection=%{public}s",
        (uint8_t *)v41,
        0x16u);
      swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      v36 = a1;
      v14 = v48;
    }
    else
    {

    }
    *(_QWORD *)v8 = v36;
    *(double *)(v8 + 8) = a3;
    *(_BYTE *)(v4 + v14) = v13;
  }
}

void sub_100017954(uint64_t a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  unsigned __int8 v40;
  void (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v7 = a1;
  v8 = (double *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState);
  v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState);
  if (v9 == 3 || ((_DWORD)v9 == a1 ? (v10 = v8[1] == a3) : (v10 = 0), !v10))
  {
    if ((sub_10002E064(a2) & 1) != 0)
    {
      v49 = *(unsigned __int8 *)v8;
      if (v49 != 3)
      {
        if (!*(_BYTE *)v8 && (_BYTE)v7)
        {
          if (qword_10005BB68 != -1)
            swift_once(&qword_10005BB68, sub_100042380);
          v11 = type metadata accessor for Logger(0);
          v12 = sub_10000AADC(v11, (uint64_t)qword_1000608F8);
          v13 = Logger.logObject.getter(v12);
          v14 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v13, v14))
          {
            v16 = 1;
            goto LABEL_28;
          }
          v15 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v15 = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting to move from lock screen to home screen, pausing animation", v15, 2u);
          v16 = 1;
          goto LABEL_26;
        }
        if (!*(_BYTE *)v8)
          goto LABEL_29;
      }
      if ((_BYTE)v7 || *(_BYTE *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_wakeState))
      {
LABEL_29:
        if (qword_10005BB68 != -1)
          swift_once(&qword_10005BB68, sub_100042380);
        v29 = type metadata accessor for Logger(0);
        v30 = sub_10000AADC(v29, (uint64_t)qword_1000608F8);
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(12, -1);
          v50 = v7;
          v34 = swift_slowAlloc(32, -1);
          v52 = v34;
          *(_DWORD *)v33 = 136446210;
          v35 = sub_100005F64(v50, a3);
          v37 = v36;
          v51 = sub_1000210CC(v35, v36, &v52);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v33 + 4, v33 + 12);
          swift_bridgeObjectRelease(v37);
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Setting unlock progress to %{public}s", v33, 0xCu);
          swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
          v38 = v34;
          v7 = v50;
          swift_slowDealloc(v38, -1, -1);
          swift_slowDealloc(v33, -1, -1);
        }

        *(_QWORD *)v8 = v7;
        v8[1] = a3;
        if ((sub_100032344() & 1) != 0)
        {
          v39 = objc_msgSend(a2, "environment");
          v40 = objc_msgSend(v39, "isPreview");
          swift_unknownObjectRelease(v39);
          if ((v40 & 1) == 0)
          {
            sub_100032368(a3);
            if (v7 == 1)
            {
              if (v49 != 1)
              {
                v45 = sub_10002E198(2, a2);
                if ((v45 & 1) != 0)
                {
                  v42 = swift_allocObject(&unk_1000567D0, 24, 7);
                  swift_unknownObjectWeakInit(v42 + 16, v4);
                  v41 = sub_100019004;
                  goto LABEL_36;
                }
                v46 = Logger.logObject.getter(v45);
                v47 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v46, v47))
                {
                  v48 = (uint8_t *)swift_slowAlloc(2, -1);
                  *(_WORD *)v48 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v46, v47, "Skipping unloading because renderer failed to get extended session", v48, 2u);
                  swift_slowDealloc(v48, -1, -1);
                }

              }
            }
            else if (v49 == 1 && !UIAccessibilityIsReduceMotionEnabled())
            {
              sub_10001474C(a2, 0);
            }
          }
        }
        v41 = 0;
        v42 = 0;
LABEL_36:
        v43 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation));
        (*(void (**)(uint64_t, void (*)(), uint64_t, uint64_t, uint64_t, double))(v43 + 72))(v7, v41, v42, ObjectType, v43, a3);
        sub_100035EE0(a3);
        sub_100013110((uint64_t)v41, v42);
        return;
      }
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v26 = type metadata accessor for Logger(0);
      v27 = sub_10000AADC(v26, (uint64_t)qword_1000608F8);
      v13 = Logger.logObject.getter(v27);
      v28 = static os_log_type_t.default.getter();
      v16 = 2;
      if (!os_log_type_enabled(v13, v28))
      {
LABEL_28:

        sub_100018000(v16, a2);
        goto LABEL_29;
      }
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v28, "Settling on lock screen from home screen and screen is on, restarting animation", v15, 2u);
LABEL_26:
      swift_slowDealloc(v15, -1, -1);
      goto LABEL_28;
    }
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_10000AADC(v17, (uint64_t)qword_1000608F8);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v52 = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = sub_100005F64(v7, a3);
      v25 = v24;
      v51 = sub_1000210CC(v23, v24, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to get extended session for unlock, skipping unlock update; unlockState=%{public}s",
        v21,
        0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

    *(_QWORD *)v8 = v7;
    v8[1] = a3;
  }
}

uint64_t sub_100018000(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(BOOL, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  if ((sub_10002E198(0, a2) & 1) != 0)
  {
    if (a1 == 2)
    {
      v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation));
      (*(void (**)(uint64_t, uint64_t))(v5 + 56))(ObjectType, v5);
    }
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation);
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
    v9 = 0.0;
    if (a1 != 1)
      v9 = sub_10003599C();
    v10 = swift_getObjectType(v7);
    v11 = swift_allocObject(&unk_1000567D0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16, v3);
    v12 = *(void (**)(BOOL, uint64_t (*)(), uint64_t, uint64_t, uint64_t, double))(v8 + 64);
    swift_retain(v11);
    v12(a1 != 1, sub_10001900C, v11, v10, v8, v9);
    return swift_release_n(v11, 2);
  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000AADC(v14, (uint64_t)qword_1000608F8);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v26 = v19;
      *(_DWORD *)v18 = 136446210;
      if (a1)
      {
        if (a1 == 1)
          v20 = 0xD000000000000010;
        else
          v20 = 0x6E65685479616C70;
        if (a1 == 1)
          v21 = 0x8000000100047AB0;
        else
          v21 = 0xED00006573756150;
      }
      else
      {
        v21 = 0xE500000000000000;
        v20 = 0x6573756170;
      }
      v25 = sub_1000210CC(v20, v21, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Skipping %{public}s animation because no render session was granted", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation);
    v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation + 8);
    v24 = swift_getObjectType(v23);
    return (*(uint64_t (**)(_QWORD, uint64_t (*)(_QWORD), _QWORD, uint64_t, uint64_t, double))(v22 + 64))(0, WeatherIntentResponseCode.rawValue.getter, 0, v24, v22, 0.0);
  }
}

void sub_1000182EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10001833C();

  }
}

void sub_10001833C()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  if ((sub_100032344() & 1) != 0 && v0[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState] == 1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderer];
    v3 = &v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation];
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_animation];
    v5 = *((_QWORD *)v3 + 1);
    v16 = v2;
    sub_10003242C(v2, v4, v5);

  }
  else
  {
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v6 = type metadata accessor for Logger(0);
    sub_10000AADC(v6, (uint64_t)qword_1000608F8);
    v7 = v0;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(18, -1);
      v11 = swift_slowAlloc(32, -1);
      v18 = v11;
      *(_DWORD *)v10 = 67240450;
      LOBYTE(v17) = sub_100032344() & 1;
      LODWORD(v17) = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, (char *)&v17 + 4, v10 + 4, v10 + 8);
      *(_WORD *)(v10 + 8) = 2082;
      v12 = v7[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState];
      if (v12 == 3)
      {
        v13 = 0xE300000000000000;
        v14 = 7104878;
      }
      else
      {
        v14 = sub_100005F64(v12, *(double *)&v7[OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_unlockState + 8]);
        v13 = v15;
      }
      v17 = sub_1000210CC(v14, v13, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 10, v10 + 18);

      swift_bridgeObjectRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Skipping unloading because state changed; unloadingEnabled=%{BOOL,public}d unlockState=%{public}s",
        (uint8_t *)v10,
        0x12u);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    sub_10002E8C8(2);
  }
}

uint64_t sub_1000185C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (void *)result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC13WeatherPoster14PosterRenderer_renderingSessionManager);
    swift_retain(v4);
    sub_10002E8C8(0);

    return swift_release(v4);
  }
  return result;
}

uint64_t sub_100018630(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char v36;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v3 = v2;
  v42 = a2;
  v43 = sub_100005350(&qword_10005C4E0);
  __chkstk_darwin(v43);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005350(&qword_10005C320);
  v8 = __chkstk_darwin(v7);
  v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v40 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  v15 = (int *)type metadata accessor for PosterAnimationViewModel(0);
  v16 = __chkstk_darwin(v15);
  v40 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v40 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v40 - v21;
  v23 = v3;
  sub_100018EF0(v3, (uint64_t)v14, &qword_10005C320);
  if (sub_100006580((uint64_t)v14, 1, (uint64_t)v15) == 1)
  {
    v12 = v14;
LABEL_5:
    v25 = v43;
    sub_10000AB60((uint64_t)v12, &qword_10005C320);
    v26 = (uint64_t)&v6[*(int *)(v25 + 48)];
    sub_100018EF0(a1, (uint64_t)v6, &qword_10005C320);
    sub_100018EF0(v23, v26, &qword_10005C320);
    if (sub_100006580((uint64_t)v6, 1, (uint64_t)v15) == 1)
    {
      if (sub_100006580(v26, 1, (uint64_t)v15) == 1)
      {
        sub_10000AB60((uint64_t)v6, &qword_10005C320);
        v27 = 0;
        return v27 & 1;
      }
    }
    else
    {
      v28 = v41;
      sub_100018EF0((uint64_t)v6, v41, &qword_10005C320);
      if (sub_100006580(v26, 1, (uint64_t)v15) != 1)
      {
        v35 = v40;
        sub_100018F64(v26, v40, type metadata accessor for PosterAnimationViewModel);
        v36 = sub_100007B88(v28, v35);
        sub_10000AB38(v35, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB38(v28, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v6, &qword_10005C320);
        v27 = v36 ^ 1;
        return v27 & 1;
      }
      sub_10000AB38(v28, type metadata accessor for PosterAnimationViewModel);
    }
    sub_10000AB60((uint64_t)v6, &qword_10005C4E0);
LABEL_16:
    v27 = 1;
    return v27 & 1;
  }
  v24 = v42;
  sub_100018F64((uint64_t)v14, (uint64_t)v22, type metadata accessor for PosterAnimationViewModel);
  sub_100018EF0(a1, (uint64_t)v12, &qword_10005C320);
  if (sub_100006580((uint64_t)v12, 1, (uint64_t)v15) == 1)
  {
    sub_10000AB38((uint64_t)v22, type metadata accessor for PosterAnimationViewModel);
    goto LABEL_5;
  }
  sub_100018F64((uint64_t)v12, (uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
  v29 = v15[6];
  v30 = &v22[v29];
  v31 = &v20[v29];
  v32 = type metadata accessor for WeatherCondition(0);
  sub_1000059B4(&qword_10005C4E8, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v30, v31, v32, v33) & 1) == 0)
  {
    sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
    sub_10000AB38((uint64_t)v22, type metadata accessor for PosterAnimationViewModel);
    goto LABEL_16;
  }
  if ((v24 & 1) != 0)
  {
    v34 = Date.timeIntervalSince(_:)(&v20[v15[5]]);
    sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
    sub_10000AB38((uint64_t)v22, type metadata accessor for PosterAnimationViewModel);
    v27 = v34 >= 900.0;
  }
  else
  {
    v38 = v22[v15[13]];
    sub_10000AB38((uint64_t)v22, type metadata accessor for PosterAnimationViewModel);
    v39 = v20[v15[13]];
    sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
    v27 = v38 ^ v39;
  }
  return v27 & 1;
}

uint64_t sub_100018A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  uint64_t v23;
  unint64_t v24;

  v1 = v0;
  v2 = sub_100005350(&qword_10005C320);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018EF0(v1, (uint64_t)v4, &qword_10005C320);
  if (sub_100006580((uint64_t)v4, 1, v5) == 1)
  {
    sub_10000AB60((uint64_t)v4, &qword_10005C320);
    return 7104878;
  }
  else
  {
    sub_100018F64((uint64_t)v4, (uint64_t)v7, type metadata accessor for PosterAnimationViewModel);
    v23 = 0;
    v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(38);
    v9 = swift_bridgeObjectRelease(v24);
    v23 = 0x697469646E6F637BLL;
    v24 = 0xEB000000003D6E6FLL;
    v10._countAndFlagsBits = WeatherCondition.rawValue.getter(v9);
    object = v10._object;
    String.append(_:)(v10);
    swift_bridgeObjectRelease(object);
    v12._countAndFlagsBits = 0x3D65746164202CLL;
    v12._object = (void *)0xE700000000000000;
    String.append(_:)(v12);
    v13 = type metadata accessor for Date(0);
    sub_1000059B4((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    v16 = v15._object;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v16);
    v17._countAndFlagsBits = 0x6C7961447369202CLL;
    v17._object = (void *)0xED00003D74686769;
    String.append(_:)(v17);
    if (v7[*(int *)(v5 + 52)])
      v18 = 1702195828;
    else
      v18 = 0x65736C6166;
    if (v7[*(int *)(v5 + 52)])
      v19 = 0xE400000000000000;
    else
      v19 = 0xE500000000000000;
    v20 = v19;
    String.append(_:)(*(Swift::String *)&v18);
    swift_bridgeObjectRelease(v19);
    v21._countAndFlagsBits = 125;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    v8 = v23;
    sub_10000AB38((uint64_t)v7, type metadata accessor for PosterAnimationViewModel);
  }
  return v8;
}

uint64_t sub_100018CD8()
{
  void *v0;
  NSString v1;
  id v2;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForUserInfoKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100018F98((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      return v4;
  }
  else
  {
    sub_10000AB60((uint64_t)v6, &qword_10005C4F0);
  }
  return 0;
}

uint64_t sub_100018DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = type metadata accessor for PosterDataModel.DataPoint(0);
    sub_100018ED0(a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a2, type metadata accessor for PosterDataModel.DataPoint);
    v7 = a2;
    v8 = 0;
    v9 = v6;
  }
  else
  {
    v9 = type metadata accessor for PosterDataModel.DataPoint(0);
    v7 = a2;
    v8 = 1;
  }
  return sub_10000658C(v7, v8, 1, v9);
}

uint64_t sub_100018E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350((uint64_t *)&unk_10005C4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_100018ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_100013B94(a1, a2, a3);
  sub_100019048(v3);
  sub_100005D3C();
}

void sub_100018EF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_100005350(a3);
  sub_100019048(v3);
  sub_100005D3C();
}

uint64_t sub_100018F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100018F64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_100013B94(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_100005D3C();
}

uint64_t sub_100018F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018FE0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100019004()
{
  uint64_t v0;

  sub_1000182EC(v0);
}

uint64_t sub_10001900C()
{
  uint64_t v0;

  return sub_1000185C0(v0);
}

uint64_t sub_100019014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100019024(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10001902C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_10000AADC(a1, a2);
  return Logger.logObject.getter(v2);
}

void sub_100019040(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_100019048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void sub_100019060(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100019080()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100019088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 8) = a2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_100019094()
{
  double v0;
  double v1;

  return CLLocationCoordinate2D.debugDescription.getter(v0, v1);
}

void sub_1000190A0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000190F4()
{
  return type metadata accessor for PosterData(0);
}

uint64_t sub_1000190FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 152, v4, a3, a4);
}

uint64_t sub_100019108()
{
  uint64_t v0;
  uint64_t v1;

  return sub_100006580(v0, 1, v1);
}

uint64_t sub_100019118(uint64_t a1)
{
  return swift_unknownObjectRelease_n(a1, 2);
}

uint64_t sub_100019120(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

uint64_t sub_10001913C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(a1, 0, 1, v1);
}

uint64_t sub_10001914C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return v1 - 152;
}

BOOL sub_100019180(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100019190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t sub_1000191A0(uint64_t a1)
{
  void *v1;

  return sub_10002E198(a1, v1);
}

id sub_1000191A8()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2776));
}

uint64_t sub_1000191B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_release(*(_QWORD *)(v1 + a1));
}

uint64_t sub_1000191BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_arrayDestroy(a1, 2, a3);
}

uint64_t sub_1000191C4()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1000191CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1000210CC(a1, v3, a3);
}

uint64_t sub_1000191D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return v1 - 152;
}

uint64_t sub_1000191E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, v6, a3, a4);
}

uint64_t sub_1000191F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_1000191FC()
{
  return type metadata accessor for PosterDataModel(0);
}

id sub_100019204()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2784));
}

void sub_100019210(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_100018ED0(a1, a2, v2);
}

uint64_t sub_100019218()
{
  uint64_t v0;

  return swift_getObjectType(v0);
}

uint64_t sub_100019220()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_10001922C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

float sub_100019234(uint64_t a1, unint64_t a2, float result)
{
  float v3;

  v3 = 0.0;
  if (a2 - 2 <= 2)
    v3 = flt_100045F3C[a2 - 2];
  switch(a1)
  {
    case 0:
    case 1:
      if (a2 == 4)
        goto LABEL_5;
      break;
    case 2:
      if (a2 == 3)
        goto LABEL_5;
      break;
    case 3:
      if (a2 < 2)
        goto LABEL_5;
      break;
    case 4:
      if (a2 == 2)
      {
LABEL_5:
        if (v3 > result)
          result = result + 360.0;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000192C8(uint64_t a1)
{
  unint64_t result;

  result = 0x7469617274726F70;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      result = 0x70616373646E616CLL;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_10001936C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for PosterDataCacheManager(0);
  v1 = sub_100013A7C(v0);
  result = sub_10001A64C();
  qword_100060828 = v1;
  return result;
}

uint64_t sub_1000193A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = sub_100005350(&qword_10005C5F8);
  v4 = __chkstk_darwin(v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v12[-v7];
  v9 = v1 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager____lazy_storage___posterDataURL;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager____lazy_storage___posterDataURL, v13, 0, 0);
  sub_10000AD40(v9, (uint64_t)v8, &qword_10005C5F8);
  v10 = sub_100005350((uint64_t *)&unk_10005C558);
  if (sub_100006580((uint64_t)v8, 1, v10) != 1)
    return sub_10001A770((uint64_t)v8, a1);
  sub_1000087DC((uint64_t)v8, &qword_10005C5F8);
  sub_100019504(a1);
  sub_10000AD40(a1, (uint64_t)v6, (uint64_t *)&unk_10005C558);
  sub_10000658C((uint64_t)v6, 0, 1, v10);
  swift_beginAccess(v9, v12, 33, 0);
  sub_100013120((uint64_t)v6, v9, &qword_10005C5F8);
  return swift_endAccess(v12);
}

uint64_t sub_100019504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_100005350((uint64_t *)&unk_10005C558);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v14 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v9 = objc_msgSend(v8, "URLsForDirectory:inDomains:", 9, 1);

  v10 = type metadata accessor for URL(0);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  sub_10002FC9C(v11, (uint64_t)v7);
  swift_bridgeObjectRelease(v11);
  sub_10000AD40((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_10005C558);
  if (sub_100006580((uint64_t)v5, 1, v10) == 1)
  {
    sub_1000087DC((uint64_t)v7, (uint64_t *)&unk_10005C558);
    sub_1000087DC((uint64_t)v5, (uint64_t *)&unk_10005C558);
    v12 = 1;
  }
  else
  {
    URL.appendingPathComponent(_:)(0xD000000000000019, 0x8000000100047BB0);
    sub_1000087DC((uint64_t)v7, (uint64_t *)&unk_10005C558);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
    v12 = 0;
  }
  return sub_10000658C(a1, v12, 1, v10);
}

void sub_1000196B0(_BYTE *a1@<X8>)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = v1;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  v6 = __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v16[-v9];
  v11 = v3 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_posterData;
  sub_1000139A0(v3 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_posterData, (uint64_t)v17, 0);
  sub_10000AD40(v11, (uint64_t)v10, (uint64_t *)&unk_10005C4B0);
  v12 = sub_1000190F4();
  if (sub_100006580((uint64_t)v10, 1, v12) == 1)
  {
    sub_1000087DC((uint64_t)v10, (uint64_t *)&unk_10005C4B0);
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v13 = sub_100013AD0();
    sub_10000AADC(v13, (uint64_t)qword_1000608C8);
    sub_10001A82C();
    v14 = sub_100019080();
    if (sub_10001A810(v14))
    {
      v15 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v2, "Decoding cached poster data from disk", v15, 2u);
      sub_10000AFFC((uint64_t)v15);
    }

    sub_10001989C(a1);
    sub_10001352C((uint64_t)a1, (uint64_t)v8, type metadata accessor for PosterData);
    sub_10000658C((uint64_t)v8, 0, 1, v12);
    sub_1000139A0(v11, (uint64_t)v16, 33);
    sub_100013120((uint64_t)v8, v11, (uint64_t *)&unk_10005C4B0);
    swift_endAccess(v16);
  }
  else
  {
    sub_1000134CC((uint64_t)v10, (uint64_t)a1, type metadata accessor for PosterData);
  }
}

uint64_t sub_10001989C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000193A0((uint64_t)v4);
  if (sub_100006580((uint64_t)v4, 1, v5) == 1)
  {
    sub_1000087DC((uint64_t)v4, (uint64_t *)&unk_10005C558);
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_10000AADC(v9, (uint64_t)qword_1000608C8);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to read cached poster data from disk due to missing file path", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    *a1 = 2;
    v19 = type metadata accessor for PosterData(0);
    return swift_storeEnumTagMultiPayload(a1, v19, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v14 = Data.init(contentsOf:options:)(v8, 0);
    v16 = v15;
    v17 = type metadata accessor for PosterData(0);
    sub_10001A7B8(&qword_10005C600, (uint64_t)&unk_100046518);
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v17, v14, v16, v17, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return sub_10001A6F0(v14, v16);
  }
}

void sub_100019CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t isa_low;
  uint64_t v48;
  os_log_type_t v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];

  type metadata accessor for PosterDataModel(0);
  sub_100008864();
  v4 = __chkstk_darwin(v3);
  v51 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v52 = (uint64_t)&v51 - v6;
  v7 = sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v8);
  sub_100013B18();
  v53 = (v10 - v9);
  sub_100005350((uint64_t *)&unk_10005C558);
  sub_100008864();
  __chkstk_darwin(v11);
  sub_100013B18();
  v14 = v13 - v12;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_100013B18();
  v19 = v18 - v17;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v20);
  sub_100013B18();
  v23 = v22 - v21;
  sub_10001352C(a1, v22 - v21, type metadata accessor for PosterData);
  sub_10000658C(v23, 0, 1, v7);
  v24 = v1 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_posterData;
  sub_1000139A0(v1 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_posterData, (uint64_t)v56, 33);
  sub_100013120(v23, v24, (uint64_t *)&unk_10005C4B0);
  swift_endAccess(v56);
  sub_1000193A0(v14);
  if (sub_100006580(v14, 1, v15) == 1)
  {
    sub_1000087DC(v14, (uint64_t *)&unk_10005C558);
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v25 = sub_100013AD0();
    sub_10000AADC(v25, (uint64_t)qword_1000608C8);
    v26 = sub_10001A82C();
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to save poster data to disk due to missing file path", v28, 2u);
      sub_10000AFFC((uint64_t)v28);
    }

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v14, v15);
    sub_10001A7B8(&qword_10005C5F0, (uint64_t)&unk_1000464F0);
    v30 = v16;
    v31 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(a1, v7, v29);
    v33 = v32;
    Data.write(to:options:)(v19, 268435457, v31, v32);
    sub_10001A6F0(v31, v33);
    v34 = v53;
    sub_10001352C(a1, (uint64_t)v53, type metadata accessor for PosterData);
    if (swift_getEnumCaseMultiPayload(v34, v7) == 1)
    {
      v35 = v52;
      sub_1000134CC((uint64_t)v34, v52, type metadata accessor for PosterDataModel);
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v36 = sub_100013AD0();
      v37 = sub_10000AADC(v36, (uint64_t)qword_1000608C8);
      v38 = v51;
      sub_10001352C(v35, v51, type metadata accessor for PosterDataModel);
      Logger.logObject.getter(v39);
      v40 = sub_100019080();
      if (sub_10001A810(v40))
      {
        v41 = sub_10000B0C8(22);
        v42 = sub_10000B0C8(32);
        v56[0] = v42;
        *(_DWORD *)v41 = 141558275;
        v53 = v19;
        v54 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v41 + 4, v41 + 12);
        *(_WORD *)(v41 + 12) = 2081;
        v43 = CLLocationCoordinate2D.debugDescription.getter(*(double *)(v38 + 16), *(double *)(v38 + 24));
        v54 = sub_10001A820(v43, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v41 + 14, v41 + 22);
        swift_bridgeObjectRelease(v7);
        sub_10001A734(v38);
        _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)a1, "Successfully saved poster data of type 'data' to disk; location=%{private,mask.hash}s",
          (uint8_t *)v41,
          0x16u);
        sub_100013C90(v42, v45, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v42);
        sub_10000AFFC(v41);

        sub_10001A734(v52);
        (*(void (**)(NSObject *, uint64_t))(v30 + 8))(v53, v15);
      }
      else
      {

        sub_10001A734(v38);
        sub_10001A734(v35);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
      }
    }
    else
    {
      v46 = v19;
      isa_low = LOBYTE(v34->isa);
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v48 = sub_100013AD0();
      sub_10000AADC(v48, (uint64_t)qword_1000608C8);
      sub_10001A82C();
      v49 = sub_100019080();
      if (os_log_type_enabled(v34, v49))
      {
        v50 = (_DWORD *)sub_10000B0C8(12);
        v56[0] = sub_10000B0C8(32);
        *v50 = 136446210;
        __asm { BR              X9 }
      }

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v46, v15);
    }
  }
}

uint64_t sub_10001A440()
{
  uint64_t v0;

  sub_1000087DC(v0 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_posterData, (uint64_t *)&unk_10005C4B0);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_decoder));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_serializer));
  sub_1000087DC(v0 + OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager____lazy_storage___posterDataURL, &qword_10005C5F8);
  return v0;
}

uint64_t sub_10001A4A4()
{
  uint64_t v0;

  sub_10001A440();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10001A4C8()
{
  return type metadata accessor for PosterDataCacheManager(0);
}

uint64_t type metadata accessor for PosterDataCacheManager(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C540;
  if (!qword_10005C540)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterDataCacheManager);
  return result;
}

void sub_10001A508(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_10001A5A0(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_10001A5F4(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_10001A5A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005C490)
  {
    v2 = type metadata accessor for PosterData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005C490);
  }
}

void sub_10001A5F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005C550)
  {
    v2 = sub_10000AC50((uint64_t *)&unk_10005C558);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005C550);
  }
}

uint64_t sub_10001A64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1000190F4();
  sub_10001A7FC(v2);
  v3 = OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_decoder;
  v4 = type metadata accessor for PropertyListDecoder(0);
  sub_100013A7C(v4);
  *(_QWORD *)(v0 + v3) = PropertyListDecoder.init()();
  v5 = OBJC_IVAR____TtC13WeatherPoster22PosterDataCacheManager_serializer;
  v6 = type metadata accessor for PropertyListEncoder(0);
  sub_100013A7C(v6);
  v7 = PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter(200);
  *(_QWORD *)(v1 + v5) = v7;
  v8 = sub_100005350((uint64_t *)&unk_10005C558);
  sub_10001A7FC(v8);
  return v1;
}

uint64_t sub_10001A6F0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10001A734(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PosterDataModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001A770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350((uint64_t *)&unk_10005C558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10001A7B8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for PosterData(255);
    atomic_store(swift_getWitnessTable(a2, v4), a1);
  }
  sub_100005D3C();
}

uint64_t sub_10001A7F4()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_10001A7FC(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(v1, 1, 1, a1);
}

BOOL sub_10001A810(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10001A820(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_10001A82C()
{
  return Logger.logObject.getter();
}

uint64_t sub_10001A834()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_10001A83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  uint64_t ObjectType;
  char v14;
  _QWORD v16[5];
  _QWORD *v17;

  if (a1)
  {
    v5 = swift_unknownObjectRetain(a1);
    sub_10001A9A0(v5, a2);
    v6 = (void *)objc_opt_self(NSTimer);
    v7 = swift_allocObject(&unk_100056840, 24, 7);
    swift_weakInit(v7 + 16, v2);
    v8 = (_QWORD *)swift_allocObject(&unk_100056868, 40, 7);
    v8[2] = v7;
    v8[3] = a1;
    v8[4] = a2;
    v16[4] = sub_10001AC80;
    v17 = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100011DA4;
    v16[3] = &unk_100056880;
    v9 = _Block_copy(v16);
    v10 = v17;
    swift_unknownObjectRetain(a1);
    swift_release(v10);
    v11 = objc_msgSend(v6, "scheduledTimerWithTimeInterval:repeats:block:", 0, v9, 5.0);
    _Block_release(v9);
    v12 = *(void **)(v2 + 24);
    *(_QWORD *)(v2 + 24) = v11;

    ObjectType = swift_getObjectType(a1);
    v14 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2 + 8))(*(unsigned __int8 *)(v2 + 16), ObjectType, a2);
    swift_unknownObjectRelease(a1);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

void sub_10001A9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  void *v5;

  if (a1)
  {
    ObjectType = swift_getObjectType(a1);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(a2 + 16))(*(unsigned __int8 *)(v2 + 16), ObjectType, a2);
  }
  v5 = *(void **)(v2 + 24);
  if (v5)
  {
    objc_msgSend(v5, "invalidate");
    v5 = *(void **)(v2 + 24);
  }
  *(_QWORD *)(v2 + 24) = 0;

}

uint64_t sub_10001AA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v9 = type metadata accessor for Logger(0);
    sub_10000AADC(v9, (uint64_t)qword_1000608C8);
    v10 = swift_retain_n(v8, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v19 = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = sub_10002EB54(*(_BYTE *)(v8 + 16));
      v17 = v16;
      v18 = sub_1000210CC(v15, v16, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4, v13 + 12);
      swift_release_n(v8, 2);
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Extended session for %{public}s timed out before its task was completed", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_release_n(v8, 2);
    }
    sub_10001A9A0(a3, a4);
    return swift_release(v8);
  }
  return result;
}

uint64_t sub_10001ABEC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for RenderSessionExtender()
{
  return objc_opt_self(_TtC13WeatherPoster21RenderSessionExtender);
}

uint64_t sub_10001AC30()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001AC54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001AC80(uint64_t a1)
{
  uint64_t *v1;

  return sub_10001AA04(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10001AC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001AC9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10001ACA4()
{
  uint64_t result;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  char v10;

  sub_10001B424();
  result = static NSUserDefaults.weatherSharedInternal.getter();
  if (!result)
    return DeviceSupportsVFX(result);
  v1 = (void *)result;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "stringForKey:", v2);

  if (!v3)
    return DeviceSupportsVFX(result);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  if (v4 == 7890550 && v6 == 0xE300000000000000)
  {
    v8 = 0xE300000000000000;
    goto LABEL_10;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7890550, 0xE300000000000000, v4, v6, 0) & 1) != 0)
  {
    v8 = v6;
LABEL_10:
    swift_bridgeObjectRelease(v8);
    return 1;
  }
  if (v4 == 1633905005 && v6 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 0;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(1633905005, 0xE400000000000000, v4, v6, 0);
  swift_bridgeObjectRelease(v6);
  result = 0;
  if ((v10 & 1) == 0)
    return DeviceSupportsVFX(result);
  return result;
}

uint64_t sub_10001ADE8()
{
  char v0;

  v0 = sub_10001ACA4();
  objc_msgSend((id)objc_opt_self(AMSEphemeralDefaults), "setSuppressEngagement:", 1);
  return v0 & 1;
}

double sub_10001AE28(char a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PosterUpdater()), "init");
  v3 = swift_allocObject(&unk_100056938, 17, 7);
  *(_BYTE *)(v3 + 16) = a1;
  v4 = sub_100005350(&qword_10005C6C0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = PRProviderConfiguration.init(updatingDelegate:content:)(v2, sub_10001B3C4, v3);
  v8 = v5;
  sub_10001B484(&qword_10005C6C8);
  static _SceneBuilder.buildBlock<A>(_:)(&v8, v4, v6);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_10001AF04(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_allocObject(&unk_100056960, 17, 7);
  *(_BYTE *)(v4 + 16) = a1;
  v5 = type metadata accessor for PRRenderingConfiguration(0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = PRRenderingConfiguration.init(_:)(sub_10001B3D0, v4);
  v7 = swift_allocObject(&unk_100056988, 17, 7);
  *(_BYTE *)(v7 + 16) = a1;
  v8 = type metadata accessor for PREditingConfiguration(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = PREditingConfiguration.init(_:)(sub_10001B3FC, v7);
  v10 = sub_10001B020(v6, v9);
  swift_release(v6);
  swift_release(v9);
  *a2 = v10;
}

void sub_10001AFE8(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(uint64_t))
{
  id v5;

  v5 = objc_allocWithZone((Class)a2(0));
  a3(a1);
  sub_100005D3C();
}

uint64_t sub_10001B020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100005350(&qword_10005C6D0);
  v5 = *(_QWORD *)(type metadata accessor for _AnySceneConfiguration(0) - 8);
  v6 = swift_allocObject(v4, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 2 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100045E20;
  v14 = a1;
  v7 = type metadata accessor for PRRenderingConfiguration(0);
  sub_1000134F8(&qword_10005C6D8, (uint64_t (*)(uint64_t))&type metadata accessor for PRRenderingConfiguration);
  v9 = v8;
  swift_retain(a1);
  _AnySceneConfiguration.init<A>(erasing:)(&v14, v7, v9);
  v14 = a2;
  v10 = type metadata accessor for PREditingConfiguration(0);
  sub_1000134F8(&qword_10005C6E0, (uint64_t (*)(uint64_t))&type metadata accessor for PREditingConfiguration);
  v12 = v11;
  swift_retain(a2);
  _AnySceneConfiguration.init<A>(erasing:)(&v14, v10, v12);
  return v6;
}

uint64_t sub_10001B150@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_10001ADE8();
  *a1 = result & 1;
  return result;
}

double sub_10001B178()
{
  char *v0;

  return sub_10001AE28(*v0);
}

int main(int argc, const char **argv, const char **envp)
{
  sub_10001B1F8();
  sub_10001B484(&qword_10005C6B8);
  static _AppExtension<>.main()();
  return 0;
}

unint64_t sub_10001B1F8()
{
  unint64_t result;

  result = qword_10005C6B0;
  if (!qword_10005C6B0)
  {
    result = swift_getWitnessTable(&unk_100045FF8, &type metadata for WeatherPosterExtension);
    atomic_store(result, (unint64_t *)&qword_10005C6B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherPosterExtension(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherPosterExtension(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10001B318 + 4 * byte_100045FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10001B34C + 4 * asc_100045FD0[v4]))();
}

uint64_t sub_10001B34C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001B354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001B35CLL);
  return result;
}

uint64_t sub_10001B368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001B370);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10001B374(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001B37C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherPosterExtension()
{
  return &type metadata for WeatherPosterExtension;
}

uint64_t sub_10001B398(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100049538, 1) + 8) + 8);
}

void sub_10001B3C4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_10001AF04(*(_BYTE *)(v1 + 16), a1);
}

void sub_10001B3D0()
{
  uint64_t v0;

  sub_10001AFE8(*(unsigned __int8 *)(v0 + 16), type metadata accessor for PosterRenderer, (void (*)(uint64_t))sub_100013CC4);
}

void sub_10001B3FC()
{
  uint64_t v0;

  sub_10001AFE8(*(unsigned __int8 *)(v0 + 16), type metadata accessor for PosterEditor, (void (*)(uint64_t))sub_10003300C);
}

unint64_t sub_10001B424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C3A0;
  if (!qword_10005C3A0)
  {
    v1 = objc_opt_self(NSUserDefaults);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005C3A0);
  }
  return result;
}

void sub_10001B460()
{
  sub_10001B484(&qword_10005C6E8);
}

void sub_10001B484(unint64_t *a1)
{
  uint64_t v2;

  if (!*a1)
  {
    v2 = sub_10000AC50(&qword_10005C6C0);
    atomic_store(sub_100013C4C(v2), a1);
  }
  sub_100005D3C();
}

uint64_t sub_10001B4BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10001B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int v33;
  int v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  int64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[16];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[4];
  _BYTE v106[32];

  v5 = v2;
  v8 = type metadata accessor for Logger(0);
  v93 = *(_QWORD *)(v8 - 8);
  v94 = v8;
  sub_100008894();
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_100013C74();
  v92 = v13;
  sub_10000896C();
  __chkstk_darwin(v14);
  v98 = (char *)&v90 - v15;
  v101 = *(_QWORD *)(sub_1000139C0() - 8);
  sub_100008894();
  __chkstk_darwin(v16);
  sub_10001F2B4();
  __chkstk_darwin(v17);
  sub_100013C74();
  v91 = v18;
  sub_10000896C();
  __chkstk_darwin(v19);
  sub_10001F38C();
  __chkstk_darwin(v20);
  sub_10001F2E8();
  __chkstk_darwin(v21);
  v23 = (char *)&v90 - v22;
  v24 = v2 + 16;
  sub_10001F414(v24, (uint64_t)v106);
  v25 = *(_QWORD *)(v5 + 16);
  v103 = a1;
  sub_10001F3F4();
  v26 = sub_10001E11C((uint64_t)sub_10001F1E8, (uint64_t)v102, v25);
  v27 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = v26;
  swift_bridgeObjectRelease(v27);
  v28 = sub_10001F0DC(a1, v4);
  sub_10001F2D8(v28, (uint64_t)v105);
  v100 = v4;
  sub_10001D270((uint64_t)v23, v4);
  swift_endAccess(v105);
  v99 = v23;
  v29 = sub_10001C8D0((uint64_t)v23);
  v95 = a2;
  if (!a2)
  {
    static Logger.vfx.getter(v29);
    v48 = sub_10001F308(a1);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, (os_log_type_t)v50))
    {
      v51 = (uint8_t *)sub_10000B0C8(12);
      v52 = sub_10000B0C8(32);
      v105[0] = v52;
      *(_DWORD *)v51 = 136446210;
      sub_10001C3A4();
      v55 = sub_10001F27C(v53, v54);
      v56 = sub_1000191D4(v55);
      sub_10001F408(v56, v57);
      sub_100005D2C();
      sub_10001C8D0(v3);
      sub_100013C98((void *)&_mh_execute_header, v49, (os_log_type_t)v50, "VFX simulation for '%{public}s' started; Failed to unfreeze scene because manager was nil.",
        v51);
      sub_100013C90(v52, v58, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v52);
      sub_10000AFFC((uint64_t)v51);
    }
    else
    {
      sub_10001C8D0(v3);
    }

    (*(void (**)(char *, uint64_t))(v93 + 8))(v12, v94);
    goto LABEL_28;
  }
  if ((*(_BYTE *)(v5 + 24) & 1) == 0)
  {
    v59 = sub_10001F384();
    static Logger.vfx.getter(v59);
    v60 = sub_10001F338(a1);
    Logger.logObject.getter(v60);
    v61 = sub_10001F348();
    if (sub_10001F2F8(v61))
    {
      v62 = (uint8_t *)sub_10000B0C8(12);
      v63 = sub_10000B0C8(32);
      v105[0] = v63;
      *(_DWORD *)v62 = 136446210;
      sub_10001C3A4();
      v66 = sub_10001F27C(v64, v65);
      v67 = sub_1000191D4(v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v67, v68, v62 + 4, v62 + 12);
      sub_100005D2C();
      sub_10001F330();
      sub_100013C98((void *)&_mh_execute_header, 0, (os_log_type_t)a2, "VFX simulation for '%{public}s' started. Unfreezing the scene to start rendering.", v62);
      sub_100013C90(v63, v69, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v63);
      sub_10000AFFC((uint64_t)v62);
    }
    else
    {
      sub_10001F330();
    }

    sub_10001F2A8(v93);
    *(_BYTE *)(v5 + 24) = 1;
    v71 = v95;
    WeatherConditionBackgroundManager.sceneWillEnterForeground()();
    v73 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v72);
    dispatch thunk of VFXScene.isFrozen.setter(0);
    swift_release(v71);

LABEL_28:
    sub_1000139A8();
    return;
  }
  v30 = *(_QWORD *)v24;
  v31 = *(_QWORD *)(*(_QWORD *)v24 + 16);
  if (!v31)
  {
    v70 = sub_10001F384();
    v41 = &_swiftEmptyArrayStorage;
LABEL_24:
    v74 = v92;
    static Logger.vfx.getter(v70);
    sub_10001F0DC(a1, v91);
    v75 = swift_bridgeObjectRetain(v41);
    Logger.logObject.getter(v75);
    v76 = sub_10001F348();
    if (sub_10001F2F8(v76))
    {
      v77 = sub_10000B0C8(22);
      v78 = sub_10000B0C8(64);
      v105[0] = v78;
      *(_DWORD *)v77 = 136446466;
      sub_10001C3A4();
      v104 = sub_10001F27C(v79, v80);
      sub_10001F3B4((uint64_t)&v104, v81, v82, v77 + 12);
      sub_100005D2C();
      sub_10001F320();
      *(_WORD *)(v77 + 12) = 2082;
      v83 = swift_bridgeObjectRetain(v41);
      Array.description.getter(v83, &type metadata for String);
      v85 = v84;
      v86 = swift_bridgeObjectRelease(v41);
      v104 = sub_10001F3D8(v86, v87, v105);
      sub_10001F3A8((uint64_t)&v104, v88, v89, v77 + 22);
      sub_10001F3CC();
      swift_bridgeObjectRelease(v85);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v30, (os_log_type_t)a2, "VFX simulation for '%{public}s' started, and scene was already unfrozen; activeSimulations=%{public}s",
        (uint8_t *)v77,
        0x16u);
      swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
      sub_10000AFFC(v78);
      sub_10000AFFC(v77);

      swift_release(v95);
    }
    else
    {
      swift_release(v95);
      sub_10001F320();

      sub_10001F3CC();
    }
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v74, v94);
    goto LABEL_28;
  }
  v105[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_10001F384();
  sub_10001F3F4();
  sub_10001F310();
  v32 = sub_10001F05C(v30);
  v34 = v33;
  v36 = v35 & 1;
  v97 = a1;
  v98 = (char *)(v30 + 56);
  v96 = v30;
  while ((v32 & 0x8000000000000000) == 0 && v32 < 1 << *(_BYTE *)(v30 + 32))
  {
    if (((*(_QWORD *)&v98[((unint64_t)v32 >> 3) & 0xFFFFFFFFFFFFF8] >> v32) & 1) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(v30 + 36) != v34)
      goto LABEL_31;
    v37 = (uint64_t)v99;
    sub_10001F3EC(*(_QWORD *)(v30 + 48) + *(_QWORD *)(v101 + 72) * v32);
    sub_10001F120(v37, v100);
    sub_10001C3A4();
    v39 = v38;
    a2 = v40;
    sub_10001F2D0();
    v41 = (_QWORD *)v105[0];
    if ((swift_isUniquelyReferenced_nonNull_native(v105[0]) & 1) == 0)
    {
      sub_10001F340(0, v41[2] + 1);
      v41 = (_QWORD *)v105[0];
    }
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
    {
      sub_10001F340((char *)(v42 > 1), v43 + 1);
      v41 = (_QWORD *)v105[0];
    }
    v41[2] = v43 + 1;
    v44 = (char *)&v41[2 * v43];
    *((_QWORD *)v44 + 4) = v39;
    *((_QWORD *)v44 + 5) = a2;
    v30 = v96;
    v45 = sub_10001EF78(v32, v34, v36 & 1, v96);
    v32 = v45;
    v34 = v46;
    v36 = v47 & 1;
    --v31;
    a1 = v97;
    if (!v31)
    {
      sub_10001F164(v45, v46, v47 & 1);
      v70 = swift_bridgeObjectRelease(v30);
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_10001BB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int v27;
  int v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83[2];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];

  v91 = *(_QWORD *)(sub_1000139C0() - 8);
  sub_100008894();
  __chkstk_darwin(v6);
  sub_1000088BC();
  v83[0] = v7;
  sub_10000896C();
  __chkstk_darwin(v8);
  sub_100013C74();
  v90 = v9;
  sub_10000896C();
  __chkstk_darwin(v10);
  sub_100013C74();
  v89 = v11;
  sub_10000896C();
  __chkstk_darwin(v12);
  sub_10001F38C();
  __chkstk_darwin(v13);
  v15 = (char *)v83 - v14;
  v16 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v16 - 8);
  v85 = v16;
  sub_100008894();
  __chkstk_darwin(v17);
  sub_1000088BC();
  v83[1] = v18;
  sub_10000896C();
  __chkstk_darwin(v19);
  sub_10001F2E8();
  __chkstk_darwin(v20);
  sub_100005350(&qword_10005C310);
  sub_100008864();
  __chkstk_darwin(v21);
  sub_10001F230();
  sub_10001F2D8(v22, (uint64_t)v93);
  v86 = a1;
  sub_10001E908(a1, v3);
  swift_endAccess(v93);
  v23 = sub_10001F1B4(v3, &qword_10005C310);
  v24 = *(_QWORD *)(v2 + 16);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v93[0] = (uint64_t)&_swiftEmptyArrayStorage;
    sub_10001F3F4();
    sub_10001F310();
    v26 = sub_10001F05C(v24);
    v28 = v27;
    v30 = v29 & 1;
    v87 = v24;
    v88 = v24 + 56;
    do
    {
      if (v26 < 0 || v26 >= 1 << *(_BYTE *)(v24 + 32))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (((*(_QWORD *)(v88 + (((unint64_t)v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        goto LABEL_28;
      if (*(_DWORD *)(v24 + 36) != v28)
        goto LABEL_29;
      v31 = v89;
      sub_10001F3E4(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v91 + 72) * v26);
      sub_10001F120(v31, v90);
      sub_10001C3A4();
      v33 = v32;
      v35 = v34;
      sub_10001F2D0();
      v36 = v93[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v93[0]) & 1) == 0)
      {
        sub_10001F340(0, *(_QWORD *)(v36 + 16) + 1);
        v36 = v93[0];
      }
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_10001F340((char *)(v37 > 1), v38 + 1);
        v36 = v93[0];
      }
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = v36 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v33;
      *(_QWORD *)(v39 + 40) = v35;
      v24 = v87;
      v40 = sub_10001EF78(v26, v28, v30 & 1, v87);
      v26 = v40;
      v28 = v41;
      v30 = v42 & 1;
      --v25;
    }
    while (v25);
    sub_10001F164(v40, v41, v42 & 1);
    v43 = swift_bridgeObjectRelease(v24);
    static Logger.vfx.getter(v43);
    sub_10001F0DC(v86, v83[0]);
    v44 = swift_retain(v36);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter();
    if (sub_100013B08(v46))
    {
      v47 = sub_10000B0C8(22);
      v48 = sub_10000B0C8(64);
      v93[0] = v48;
      *(_DWORD *)v47 = 136446466;
      sub_10001C3A4();
      v92 = sub_10001F288(v49, v50);
      sub_10001F3B4((uint64_t)&v92, v51, v52, v47 + 12);
      sub_100005D2C();
      sub_10001F320();
      *(_WORD *)(v47 + 12) = 2082;
      v53 = swift_bridgeObjectRetain(v36);
      Array.description.getter(v53, &type metadata for String);
      v55 = v54;
      v56 = swift_release(v36);
      v92 = sub_10001F3D8(v56, v57, v93);
      sub_10001F3A8((uint64_t)&v92, v58, v59, v47 + 22);
      sub_10001F3C0();
      swift_bridgeObjectRelease(v55);
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "VFX simulation for '%{public}s' ended; Remaining simulations = %{public}s",
        (uint8_t *)v47,
        0x16u);
      v60 = (char *)&type metadata for Any + 8;
      v61 = v48;
      v62 = 2;
      goto LABEL_14;
    }
    sub_10001F320();

    sub_10001F3C0();
  }
  else
  {
    if (a2)
    {
      v63 = swift_retain(a2);
      static Logger.vfx.getter(v63);
      v64 = sub_10001F0DC(v86, (uint64_t)v15);
      Logger.logObject.getter(v64);
      v65 = sub_10001F348();
      if (os_log_type_enabled((os_log_t)v24, v65))
      {
        v66 = (uint8_t *)sub_10000B0C8(12);
        v67 = sub_10000B0C8(32);
        v93[0] = v67;
        v91 = a2;
        *(_DWORD *)v66 = 136446210;
        sub_10001C3A4();
        v70 = sub_10001F288(v68, v69);
        v71 = sub_10001F350(v70);
        a2 = v91;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, v72, v66 + 4, v66 + 12);
        sub_100005D2C();
        sub_10001C8D0((uint64_t)v15);
        sub_100013C98((void *)&_mh_execute_header, v24, v65, "VFX simulation for '%{public}s' ended; Freezing scene as no simulations remain.",
          v66);
        sub_100013C90(v67, v73, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v67);
        sub_10000AFFC((uint64_t)v66);
      }
      else
      {
        sub_10001C8D0((uint64_t)v15);
      }

      v81 = sub_10001F2A8(v84);
      *(_BYTE *)(v2 + 24) = 0;
      v82 = (void *)WeatherConditionBackgroundManager.vfxScene.getter(v81);
      dispatch thunk of VFXScene.isFrozen.setter(1);

      WeatherConditionBackgroundManager.sceneDidEnterBackground()();
      swift_release(a2);
      goto LABEL_25;
    }
    static Logger.vfx.getter(v23);
    v74 = sub_10001F338(v86);
    v45 = Logger.logObject.getter(v74);
    v75 = static os_log_type_t.error.getter();
    if (sub_100013B08(v75))
    {
      v47 = sub_10000B0C8(12);
      v48 = sub_10000B0C8(32);
      v93[0] = v48;
      *(_DWORD *)v47 = 136446210;
      sub_10001C3A4();
      v78 = sub_10001F288(v76, v77);
      v79 = sub_10001F350(v78);
      sub_10001F408(v79, v80);
      sub_100005D2C();
      sub_10001F330();
      sub_100013C98((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "VFX simulation for '%{public}s' ended; Failed to freeze scene because manager was nil.",
        (uint8_t *)v47);
      v60 = (char *)&type metadata for Any + 8;
      v61 = v48;
      v62 = 1;
LABEL_14:
      swift_arrayDestroy(v61, v62, v60);
      sub_10000AFFC(v48);
      sub_10000AFFC(v47);
    }
    else
    {
      sub_10001F330();
    }

  }
  sub_10001F378(v84);
LABEL_25:
  sub_1000139A8();
}

uint64_t sub_10001C170()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  *(_BYTE *)(v0 + 24) = 0;
  sub_10001F414(v0 + 16, (uint64_t)v3);
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease(v1);
}

void sub_10001C1AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v3 = sub_1000139C0();
  sub_100008864();
  __chkstk_darwin(v4);
  sub_10001F2B4();
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  sub_100005350(&qword_10005C868);
  sub_100008864();
  __chkstk_darwin(v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001F3EC(v1);
  sub_10001F3E4(a1);
  v10 = (char *)sub_10001C28C + 4 * byte_100046050[swift_getEnumCaseMultiPayload(v9, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10001C28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  sub_10001F338(v0);
  v3 = sub_10001F248();
  sub_100013BC4();
  if (v3)
  {
    sub_10001F3A0(v2);
    sub_10001F1B4(v0, &qword_10005C868);
    return 0;
  }
  else
  {
    sub_10001F3A0(v1);
    sub_10001F3A0(v2);
    sub_10001C8D0(v0);
    return 1;
  }
}

void sub_10001C3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v2 = sub_100013BC4();
  __chkstk_darwin(v2);
  v3 = sub_10001F254();
  sub_100008864();
  __chkstk_darwin(v4);
  sub_10001F230();
  sub_10001F308(v0);
  v5 = (char *)sub_10001C44C + 4 * byte_100046054[swift_getEnumCaseMultiPayload(v1, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10001C44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t v7;

  sub_10001F220(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  *(_QWORD *)(v2 - 80) = 0x287265646E6572;
  *(_QWORD *)(v2 - 72) = 0xE700000000000000;
  v3 = sub_10001F174(&qword_10005C848, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v4._countAndFlagsBits = ((uint64_t (*)(uint64_t, uint64_t))dispatch thunk of CustomStringConvertible.description.getter)(v0, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7 = *(_QWORD *)(v2 - 80);
  sub_10001F3FC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return v7;
}

uint64_t sub_10001C520()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for VFXSimulationManager()
{
  return objc_opt_self(_TtC13WeatherPoster20VFXSimulationManager);
}

uint64_t *sub_10001C564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v13);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v14 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v10 = a1;
      v11 = a3;
      v12 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_10001C684(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if (result <= 2)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_10001C6D0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void *sub_10001C7C8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10001C8D0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10001C8D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SimulationReason(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SimulationReason(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C808;
  if (!qword_10005C808)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SimulationReason);
  return result;
}

void *sub_10001C944(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    v8 = a1;
    v9 = a3;
    v10 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void *sub_10001CA3C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10001C8D0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v11 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_10001CB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10001CB60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_10001CBC8()
{
  return sub_10001F174(&qword_10005C840, type metadata accessor for SimulationReason, (uint64_t)&unk_1000460E4);
}

void sub_10001CBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[4];

  v4 = sub_100013BC4();
  v19[2] = *(_QWORD *)(v4 - 8);
  v19[3] = v4;
  sub_100008894();
  __chkstk_darwin(v5);
  sub_1000088BC();
  v19[1] = v6;
  sub_10000896C();
  v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = sub_1000139C0();
  sub_100008864();
  __chkstk_darwin(v10);
  sub_10001F2E8();
  v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  sub_100005350(&qword_10005C868);
  sub_100008864();
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_10001F3E4(a1);
  sub_10001F0DC(a2, v17);
  v18 = (char *)sub_10001CD48 + 4 * byte_100046058[swift_getEnumCaseMultiPayload(v16, v9)];
  __asm { BR              X10 }
}

uint64_t sub_10001CD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10001F338(v0);
  if (sub_10001F270())
  {
    sub_10001F378(*(_QWORD *)(v4 - 96));
    sub_10001F1B4(v0, &qword_10005C868);
    LOBYTE(v1) = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_QWORD *)(v4 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v1, v6);
    ((void (*)(uint64_t, uint64_t))static UUID.== infix(_:_:))(v3, v2);
    sub_10001F294();
    ((void (*)(uint64_t, uint64_t))v5)(v3, v6);
    sub_10001F2D0();
  }
  return v1 & 1;
}

void sub_10001CEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v2 = sub_100013BC4();
  __chkstk_darwin(v2);
  v3 = sub_10001F254();
  sub_100008864();
  __chkstk_darwin(v4);
  sub_10001F230();
  sub_10001F308(v0);
  v5 = (char *)sub_10001CF2C + 4 * byte_10004605C[swift_getEnumCaseMultiPayload(v1, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10001CF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10001F220(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  Hasher._combine(_:)(1uLL);
  v3 = sub_10001F174(&qword_10005C858, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v1, v0, v3);
  return sub_10001F3FC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

Swift::Int sub_10001CFBC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_10001CEA0();
  return Hasher._finalize()();
}

Swift::Int sub_10001D004()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_10001CEA0();
  return Hasher._finalize()();
}

char *sub_10001D03C(char *__src, uint64_t a2, char *__dst)
{
  char v4;

  if (a2 < 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_10001D0C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (a2 < 0)
  {
    v9 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else if (a3 < a1
         || (result = type metadata accessor for PosterDataModel.DataPoint(0),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    type metadata accessor for PosterDataModel.DataPoint(0);
    v8 = sub_10001F364();
    return swift_arrayInitWithTakeFrontToBack(v8);
  }
  else if (a3 != a1)
  {
    v7 = sub_10001F364();
    return swift_arrayInitWithTakeBackToFront(v7);
  }
  return result;
}

uint64_t sub_10001D1A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy(a3, a1);
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001D270(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[9];

  v3 = v2;
  v6 = type metadata accessor for SimulationReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  Hasher.init(_seed:)(v22);
  swift_bridgeObjectRetain(v10);
  sub_10001CEA0();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v21 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_10001F0DC(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9);
      sub_10001CBF4((uint64_t)v9, a2);
      v17 = v16;
      sub_10001C8D0((uint64_t)v9);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
        a1 = v21;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v10);
    sub_10001C8D0(a2);
    sub_10001F0DC(*(_QWORD *)(*v3 + 48) + v15 * v13, v21);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_10001F0DC(a2, (uint64_t)v9);
    v22[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_10001D8DC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    v19 = *v3;
    *v3 = v22[0];
    swift_bridgeObjectRelease(v19);
    sub_10001F120(a2, a1);
    return 1;
  }
}

uint64_t sub_10001D43C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  int64_t v27;
  _QWORD *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[10];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SimulationReason(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v26 - v10;
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v13 = a1;
  else
    v13 = *(_QWORD *)(*v2 + 24);
  sub_100005350(&qword_10005C860);
  v14 = static _SetStorage.resize(original:capacity:move:)(v12, v13, 1);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_28;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v28 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v26 = v2;
  v27 = (unint64_t)(v15 + 63) >> 6;
  swift_retain(v12);
  v29 = v11;
  v30 = v9;
  if (v18)
  {
    v19 = __clz(__rbit64(v18));
    goto LABEL_23;
  }
  if (v27 > 1)
  {
    v20 = v28[1];
    v21 = 1;
    if (v20)
      goto LABEL_22;
    v21 = 2;
    if (v27 > 2)
    {
      v20 = v28[2];
      if (v20)
        goto LABEL_22;
      v21 = 3;
      if (v27 > 3)
      {
        v20 = v28[3];
        if (!v20)
        {
          v22 = 4;
          if (v27 > 4)
          {
            v20 = v28[4];
            if (v20)
            {
              v21 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
              {
                __break(1u);
                JUMPOUT(0x10001D8CCLL);
              }
              if (v21 >= v27)
                break;
              v20 = v28[v21];
              ++v22;
              if (v20)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v19 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_23:
        sub_10001F120(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v34 + 72) * v19, (uint64_t)v11);
        Hasher.init(_seed:)(v36);
        sub_10001F0DC((uint64_t)v11, (uint64_t)v9);
        v23 = (char *)&loc_10001D69C + dword_10001D8CC[swift_getEnumCaseMultiPayload(v9, v35)];
        __asm { BR              X9 }
      }
    }
  }
LABEL_24:
  swift_release(v12);
  v2 = v26;
  v24 = 1 << *(_BYTE *)(v12 + 32);
  if (v24 > 63)
    sub_10001DA98(0, (unint64_t)(v24 + 63) >> 6, v28);
  else
    *v28 = -1 << v24;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_28:
  result = swift_release(v12);
  *v2 = v14;
  return result;
}

uint64_t sub_10001D8DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v4 = v3;
  v8 = type metadata accessor for SimulationReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10001D43C(v14);
  }
  else
  {
    if (v13 > v12)
    {
      sub_10001DAB4();
      goto LABEL_12;
    }
    sub_10001DCB0(v14);
  }
  v15 = *v4;
  Hasher.init(_seed:)(v28);
  sub_10001CEA0();
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v27 = v8;
    v18 = ~v17;
    v19 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_10001F0DC(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11);
      sub_10001CBF4((uint64_t)v11, a1);
      v21 = v20;
      sub_10001C8D0((uint64_t)v11);
      if ((v21 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v22 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_10001F120(a1, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v9 + 72) * a2);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v27);
  __break(1u);
  return result;
}

uint64_t sub_10001DA98(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_10001DAB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for SimulationReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005350(&qword_10005C860);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v6);
    *v1 = v8;
    return result;
  }
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = *(_QWORD *)(v6 + 56);
  v16 = -1;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  v17 = v16 & v15;
  v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v24 = *(_QWORD *)(v3 + 72) * i;
    sub_10001F0DC(*(_QWORD *)(v6 + 48) + v24, (uint64_t)v5);
    result = (void *)sub_10001F120((uint64_t)v5, *(_QWORD *)(v8 + 48) + v24);
    if (v17)
      goto LABEL_11;
LABEL_12:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v18)
    goto LABEL_28;
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10001DCB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t *v26;
  _QWORD *v27;
  int64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[10];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v33 = v5;
  __chkstk_darwin(v4);
  v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SimulationReason(0);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  v13 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v14 = a1;
  else
    v14 = *(_QWORD *)(*v2 + 24);
  sub_100005350(&qword_10005C860);
  v15 = static _SetStorage.resize(original:capacity:move:)(v13, v14, 0);
  if (!*(_QWORD *)(v13 + 16))
  {
    result = swift_release(v13);
    goto LABEL_26;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v26 = v2;
  v27 = (_QWORD *)(v13 + 56);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v28 = (unint64_t)(v16 + 63) >> 6;
  swift_retain(v13);
  v29 = v10;
  v30 = v13;
  if (v19)
  {
    v20 = __clz(__rbit64(v19));
    goto LABEL_23;
  }
  if (v28 > 1)
  {
    v21 = v27[1];
    v22 = 1;
    if (v21)
      goto LABEL_22;
    v22 = 2;
    if (v28 > 2)
    {
      v21 = v27[2];
      if (v21)
        goto LABEL_22;
      v22 = 3;
      if (v28 > 3)
      {
        v21 = v27[3];
        if (!v21)
        {
          v23 = 4;
          if (v28 > 4)
          {
            v21 = v27[4];
            if (v21)
            {
              v22 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
              {
                __break(1u);
                JUMPOUT(0x10001E10CLL);
              }
              if (v22 >= v28)
                break;
              v21 = v27[v22];
              ++v23;
              if (v21)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v20 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_23:
        sub_10001F0DC(*(_QWORD *)(v13 + 48) + *(_QWORD *)(v34 + 72) * v20, (uint64_t)v12);
        Hasher.init(_seed:)(v36);
        sub_10001F0DC((uint64_t)v12, (uint64_t)v10);
        v24 = (char *)&loc_10001DF0C + dword_10001E10C[swift_getEnumCaseMultiPayload(v10, v35)];
        __asm { BR              X9 }
      }
    }
  }
LABEL_24:
  result = swift_release_n(v13, 2);
  v2 = v26;
LABEL_26:
  *v2 = v15;
  return result;
}

void *sub_10001E11C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(char *);
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  void *v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v16;

  v5 = (uint64_t (*)(char *))isStackAllocationSafe;
  v6 = *(_BYTE *)(a3 + 32);
  v7 = v6 & 0x3F;
  v8 = (1 << v6) + 63;
  v9 = v8 >> 6;
  v10 = 8 * (v8 >> 6);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v8 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    v11 = (unint64_t *)((char *)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_10001DA98(0, v9, v11);
    v12 = sub_10001E2A4(v11, v9, a3, v5);
    v13 = swift_release(a3);
    if (v3)
      swift_willThrow(v13);
  }
  else
  {
    v14 = (unint64_t *)swift_slowAlloc(v10, -1);
    sub_10001DA98(0, v9, v14);
    v12 = sub_10001E2A4(v14, v9, a3, v5);
    swift_release(a3);
    swift_slowDealloc(v14, -1, -1);
  }
  return v12;
}

void *sub_10001E2A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(char *);

  v31 = a4;
  v26 = a2;
  v27 = a1;
  v6 = type metadata accessor for SimulationReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (void *)__chkstk_darwin(v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v28 = 0;
  v29 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v30 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v18 = v17 | (v11 << 6);
LABEL_17:
    sub_10001F0DC(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v7 + 72) * v18, (uint64_t)v10);
    v22 = v31(v10);
    result = (void *)sub_10001C8D0((uint64_t)v10);
    if (v4)
      return result;
    if ((v22 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = __OFADD__(v28++, 1);
      if (v19)
        goto LABEL_30;
    }
  }
  v19 = __OFADD__(v11++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v11);
  if (v20)
  {
LABEL_16:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_17;
  }
  v21 = v11 + 1;
  if (v11 + 1 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v11 + 2;
  if (v11 + 2 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v11 + 3;
  if (v11 + 3 >= v30)
  {
LABEL_27:
    v23 = v26;
    v24 = v28;
    swift_retain(v12);
    return sub_10001E4E0(v27, v23, v24, v12);
  }
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v11 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v30)
      goto LABEL_27;
    v20 = *(_QWORD *)(v29 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10001E4E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[10];

  v8 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  __chkstk_darwin(v8);
  v28 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SimulationReason(0);
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  if (!a3)
  {
    swift_release(a4);
    return &_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    sub_100005350(&qword_10005C860);
    v16 = static _SetStorage.allocate(capacity:)(a3);
    v24 = a1;
    v25 = a2;
    if (a2 < 1)
      v17 = 0;
    else
      v17 = *a1;
    v26 = v15;
    v27 = v13;
    v31 = a4;
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      goto LABEL_23;
    }
    if (v25 > 1)
    {
      v19 = v24[1];
      v20 = 1;
      if (v19)
        goto LABEL_22;
      v20 = 2;
      if (v25 <= 2)
        goto LABEL_24;
      v19 = v24[2];
      if (v19)
        goto LABEL_22;
      v20 = 3;
      if (v25 <= 3)
        goto LABEL_24;
      v19 = v24[3];
      if (v19)
      {
LABEL_22:
        v18 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_23:
        sub_10001F0DC(*(_QWORD *)(a4 + 48) + *(_QWORD *)(v32 + 72) * v18, (uint64_t)v15);
        Hasher.init(_seed:)(v34);
        sub_10001F0DC((uint64_t)v15, (uint64_t)v13);
        v22 = (char *)&loc_10001E70C + *((int *)qword_10001E8F8 + swift_getEnumCaseMultiPayload(v13, v33));
        __asm { BR              X9 }
      }
      v21 = 4;
      if (v25 > 4)
      {
        v19 = v24[4];
        if (v19)
        {
          v20 = 4;
          goto LABEL_22;
        }
        while (1)
        {
          v20 = v21 + 1;
          if (__OFADD__(v21, 1))
          {
            __break(1u);
            JUMPOUT(0x10001E8F8);
          }
          if (v20 >= v25)
            break;
          v19 = v24[v20];
          ++v21;
          if (v19)
            goto LABEL_22;
        }
      }
    }
LABEL_24:
    swift_release(a4);
    return (void *)v16;
  }
  return (void *)a4;
}

uint64_t sub_10001E908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = v2;
  v6 = type metadata accessor for SimulationReason(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  Hasher.init(_seed:)(v26);
  swift_bridgeObjectRetain(v10);
  sub_10001CEA0();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v24 = v6;
    v25 = a2;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_10001F0DC(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9);
      sub_10001CBF4((uint64_t)v9, a1);
      v17 = v16;
      sub_10001C8D0((uint64_t)v9);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
        v18 = 1;
        v6 = v24;
        a2 = v25;
        return sub_10000658C(a2, v18, 1, v6);
      }
    }
    swift_bridgeObjectRelease(v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    v26[0] = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10001DAB4();
      v20 = v26[0];
    }
    a2 = v25;
    sub_10001F120(*(_QWORD *)(v20 + 48) + v15 * v13, v25);
    sub_10001EAD8(v13);
    v21 = *v3;
    *v3 = v26[0];
    swift_bridgeObjectRelease(v21);
    v18 = 0;
    v6 = v24;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v18 = 1;
  }
  return sub_10000658C(a2, v18, 1, v6);
}

uint64_t sub_10001EAD8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[9];

  v3 = type metadata accessor for UUID(0);
  v23[5] = *(_QWORD *)(v3 - 8);
  v23[6] = v3;
  __chkstk_darwin(v3);
  v23[4] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SimulationReason(0);
  v5 = __chkstk_darwin(v24);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v5);
  v11 = (char *)v23 - v10;
  v12 = *v1;
  v13 = *v1 + 56;
  v14 = -1 << *(_BYTE *)(*v1 + 32);
  v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    v25 = v9;
    v23[0] = v1;
    v16 = ~v14;
    swift_retain(v12);
    v17 = _HashTable.previousHole(before:)(a1, v13, v16);
    if ((*(_QWORD *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      v25 = *(_QWORD *)(v25 + 72);
      v23[2] = v16;
      v23[3] = v13;
      v23[1] = (v17 + 1) & v16;
      sub_10001F0DC(*(_QWORD *)(v12 + 48) + v25 * v15, (uint64_t)v11);
      Hasher.init(_seed:)(v26);
      sub_10001F0DC((uint64_t)v11, (uint64_t)v7);
      v18 = (char *)&loc_10001EC54 + dword_10001EE6C[swift_getEnumCaseMultiPayload(v7, v24)];
      __asm { BR              X9 }
    }
    *(_QWORD *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release(v12);
    v1 = (uint64_t *)v23[0];
  }
  else
  {
    *(_QWORD *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *v1;
  v20 = *(_QWORD *)(*v1 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x10001EE6CLL);
  }
  *(_QWORD *)(v19 + 16) = v22;
  ++*(_DWORD *)(v19 + 36);
  return result;
}

char *sub_10001EE7C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_10001EE98(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_10001EE98(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005350(&qword_10005C850);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_10001D03C(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10001D1A4((unint64_t)v14, v8, (unint64_t)v13);
  }
  swift_release(a4);
  return v11;
}

int64_t sub_10001EF78(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10001F05C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_10001F0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SimulationReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001F120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SimulationReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001F164(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10001F174(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001F1B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100005350(a2);
  sub_10001F2A8(*(_QWORD *)(v3 - 8));
  return a1;
}

BOOL sub_10001F1E8()
{
  uint64_t v0;
  char v1;

  sub_10001C1AC(*(_QWORD *)(v0 + 16));
  return (v1 & 1) == 0;
}

uint64_t sub_10001F220@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t sub_10001F248()
{
  uint64_t v0;
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t sub_10001F254()
{
  return type metadata accessor for SimulationReason(0);
}

uint64_t sub_10001F270()
{
  uint64_t v0;
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(v0, v1);
}

uint64_t sub_10001F27C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_10001F288(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_10001F294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_10001F2A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_10001F2D0()
{
  uint64_t v0;

  return sub_10001C8D0(v0);
}

uint64_t sub_10001F2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_beginAccess(v2, a2, 33, 0);
}

BOOL sub_10001F2F8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10001F308(uint64_t a1)
{
  uint64_t v1;

  return sub_10001F0DC(a1, v1);
}

char *sub_10001F310()
{
  int64_t v0;

  return sub_10001EE7C(0, v0, 0);
}

uint64_t sub_10001F320()
{
  uint64_t v0;

  return sub_10001C8D0(v0);
}

uint64_t sub_10001F328(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_10001F330()
{
  uint64_t v0;

  return sub_10001C8D0(v0);
}

uint64_t sub_10001F338(uint64_t a1)
{
  uint64_t v1;

  return sub_10001F0DC(a1, v1);
}

char *sub_10001F340(char *a1, int64_t a2)
{
  return sub_10001EE7C(a1, a2, 1);
}

uint64_t sub_10001F348()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10001F350(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_10001F364()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10001F378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_10001F384()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 - 232));
}

uint64_t sub_10001F3A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_10001F3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v5, v4, a4);
}

uint64_t sub_10001F3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, v5, v4, a4);
}

uint64_t sub_10001F3C0()
{
  uint64_t v0;

  return swift_release_n(v0, 2);
}

uint64_t sub_10001F3CC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_10001F3D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_1000210CC(v3, v4, a3);
}

uint64_t sub_10001F3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10001F0DC(a1, v1);
}

uint64_t sub_10001F3EC(uint64_t a1)
{
  uint64_t v1;

  return sub_10001F0DC(a1, v1);
}

uint64_t sub_10001F3F4()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10001F3FC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_10001F408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_10001F414(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 1, 0);
}

void sub_10001F420(int a1, Swift::UInt a2)
{
  sub_10002215C(a1, a2);
}

uint64_t sub_10001F43C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_10002EB54(a2);
  v5 = v4;
  sub_100022108(a1, v4, v3);
  return sub_100021F9C(v5);
}

uint64_t sub_10001F470(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x656E696C66666FLL;
  else
    v3 = 0x6C62616863616572;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xE700000000000000;
  sub_100021FF4(a1, v3);
  return sub_100021F9C(v4);
}

void sub_10001F4C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10001F504(uint64_t a1)
{
  sub_100021FF4(a1, 0x616E6964726F6F63);
  return sub_100021F9C(0xEA00000000006574);
}

void sub_10001F5B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10001F5E8(uint64_t a1)
{
  sub_100021FF4(a1, 0x6F697469646E6F63);
  return sub_100021F9C(0xE90000000000006ELL);
}

void sub_10001F6C0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10001F704(uint64_t a1)
{
  sub_100021FF4(a1, 0x4F6B726F7774656ELL);
  return sub_100021F9C(0xEE00656E696C6666);
}

uint64_t sub_10001F75C(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 0x726F727265;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  sub_100021FF4(a1, v3);
  return sub_100021F9C(v4);
}

void sub_10001F7A4(uint64_t a1, char a2)
{
  uint64_t v3;
  _BYTE v4[72];

  sub_10002205C(a1);
  if ((a2 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 0x726F727265;
  sub_100021FF4((uint64_t)v4, v3);
  sub_1000139C8();
  sub_100022054();
  sub_100021FBC();
}

void sub_10001F7FC(uint64_t a1, char a2)
{
  _BYTE v3[72];

  sub_10002205C(a1);
  sub_10001F6C0((uint64_t)v3, a2);
  sub_100022054();
  sub_100021FBC();
}

void sub_10001F82C(uint64_t a1, uint64_t a2)
{
  sub_10001F8B8(a1, a2, (uint64_t (*)(uint64_t))sub_100026FE0);
}

void sub_10001F838(uint64_t a1, uint64_t a2)
{
  sub_10001F8B8(a1, a2, (uint64_t (*)(uint64_t))sub_100027D5C);
}

void sub_10001F844(uint64_t a1, char a2)
{
  uint64_t v3;
  _BYTE v4[72];

  sub_10002205C(a1);
  if ((a2 & 1) != 0)
    v3 = 0x656E696C66666FLL;
  else
    v3 = 0x6C62616863616572;
  sub_100021FF4((uint64_t)v4, v3);
  sub_1000139C8();
  sub_100022054();
  sub_100021FBC();
}

void sub_10001F8AC(uint64_t a1, uint64_t a2)
{
  sub_10001F8B8(a1, a2, (uint64_t (*)(uint64_t))sub_10002EB54);
}

void sub_10001F8B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  _BYTE v6[72];

  sub_10002205C(a1);
  v5 = a3(a2);
  sub_100021FF4((uint64_t)v6, v5);
  sub_1000139C8();
  sub_100022054();
  sub_100021FBC();
}

void sub_10001F900(uint64_t a1, Swift::UInt a2)
{
  sub_10002205C(a1);
  Hasher._combine(_:)(a2);
  sub_100022054();
  sub_100021FBC();
}

id PosterUpdater.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

uint64_t PosterUpdater.updateDescriptors(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return sub_100022048((uint64_t)sub_10001F960);
}

uint64_t sub_10001F960()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  char v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v63;
  uint64_t v64;
  unint64_t *v65;
  unint64_t *v66;
  uint64_t v67;
  NSObject v68;
  uint64_t v69;

  v2 = v1;
  if (qword_10005BB70 != -1)
    swift_once(&qword_10005BB70, sub_1000423A8);
  v3 = sub_100013AD0();
  v4 = sub_10000AADC(v3, (uint64_t)qword_100060910);
  Logger.logObject.getter(v4);
  v5 = sub_100019080();
  if (sub_100022080(v5))
  {
    v6 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v0, "Received request to update descriptors", v6, 2u);
    sub_10000AFFC((uint64_t)v6);
  }
  v63 = (uint64_t *)(v1 + 16);

  v68.isa = (Class)&_swiftEmptyArrayStorage;
  v7 = 2;
  v64 = v1;
  v8 = *(_QWORD *)(v1 + 24);
  v67 = v2 + 24;
  v9 = (unint64_t *)&off_1000558C8;
  do
  {
    v10 = *(v9 - 1);
    v11 = *v9;
    v12 = *(_QWORD *)(v8 + 16);
    sub_100022064();
    if (v12)
    {
      sub_100022064();
      v13 = sub_10002213C();
      v15 = sub_100021894(v13, v14);
      if ((v16 & 1) != 0)
      {
        v17 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v15);
        sub_1000220E8();
        v18 = sub_10001FED4();
        if ((v19 & 1) == 0 && v18 == 3)
        {
          v65 = v9;
          v20 = *(id *)(v2 + 32);
          sub_100022064();
          v21 = v20;
          sub_1000220D8();
          v22 = sub_100019080();
          v23 = os_log_type_enabled(v20, v22);
          v24 = *(void **)(v2 + 32);
          if (v23)
          {
            v25 = sub_10000B0C8(22);
            v26 = sub_10000B0C8(32);
            v69 = v26;
            *(_DWORD *)v25 = 136446466;
            sub_100022064();
            v27 = sub_10002213C();
            *(_QWORD *)(v25 + 4) = sub_1000210CC(v27, v28, v29);
            sub_1000220FC();
            *(_WORD *)(v25 + 12) = 2050;

            *(_QWORD *)(v25 + 14) = 3;
            sub_100022134((void *)&_mh_execute_header, v20, v22, "Reusing current descriptor with identifier=%{public}s version=%{public}ld", (uint8_t *)v25);
            swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
            v30 = v26;
            v2 = v64;
            sub_10000AFFC(v30);
            sub_10000AFFC(v25);
          }
          else
          {

            sub_1000220F0();
          }

          v50 = v17;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
          sub_100022120();
          v9 = v65;
          if (v47)
            sub_10002206C(v51);
          v52 = sub_100022090();
          specialized Array._endMutation()(v52, v53);

          goto LABEL_23;
        }

      }
      else
      {
        sub_1000220E8();
      }
    }
    v31 = *(NSObject **)(v2 + 32);
    swift_bridgeObjectRetain_n(v11, 2);
    v32 = v31;
    sub_1000220D8();
    v33 = sub_100019080();
    v34 = os_log_type_enabled(v31, v33);
    v35 = *(void **)(v2 + 32);
    if (v34)
    {
      v36 = sub_10000B0C8(22);
      v66 = v9;
      v37 = sub_10000B0C8(32);
      v69 = v37;
      *(_DWORD *)v36 = 136446466;
      sub_100022064();
      *v63 = sub_1000210CC(v10, v11, &v69);
      v2 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v63, v67, v36 + 4, v36 + 12);
      sub_1000220FC();
      *(_WORD *)(v36 + 12) = 2050;

      *v63 = 3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v63, v67, v36 + 14, v36 + 22);

      sub_100022134((void *)&_mh_execute_header, v31, v33, "Creating new descriptor with identifier=%{public}s version=%{public}ld", (uint8_t *)v36);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      v38 = v37;
      v9 = v66;
      sub_10000AFFC(v38);
      sub_10000AFFC(v36);
    }
    else
    {

      sub_1000220F0();
    }

    if (v10 != 0xD000000000000014 || v11 != 0x80000001000473A0)
    {
      v39 = sub_10002213C();
      _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 0xD000000000000014, v41, 0);
    }
    v42 = sub_10002213C();
    sub_1000204B0(v42, v43, v44);
    v45 = sub_1000220E8();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
    sub_100022120();
    if (v47)
      sub_10002206C(v46);
    v48 = sub_100022090();
    specialized Array._endMutation()(v48, v49);
LABEL_23:
    v9 += 2;
    --v7;
  }
  while (v7);
  sub_1000220D8();
  v54 = sub_100019080();
  if (os_log_type_enabled(&v68, v54))
  {
    v56 = (uint8_t *)sub_10000B0C8(12);
    v57 = sub_10000B0C8(32);
    v69 = v57;
    *(_DWORD *)v56 = 136446210;
    v58 = Array.description.getter(&off_1000558A0, &type metadata for String);
    v60 = v59;
    *(_QWORD *)(v64 + 16) = sub_1000210CC(v58, v59, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v63, v64 + 24, v56 + 4, v56 + 12);
    swift_bridgeObjectRelease(v60);
    _os_log_impl((void *)&_mh_execute_header, &v68, v54, "Returning descriptors for %{public}s", v56, 0xCu);
    swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
    sub_10000AFFC(v57);
    v61 = (uint64_t)v56;
    v2 = v64;
    sub_10000AFFC(v61);
  }

  return (*(uint64_t (**)(Class))(v2 + 8))(v68.isa);
}

uint64_t sub_10001FED4()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForUserInfoKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100018F98((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_100021DC8((uint64_t)v6, &qword_10005C4F0);
    return 0;
  }
}

uint64_t sub_10001FFDC(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = sub_1000135E0(0, (unint64_t *)&unk_10005C968, PRPosterDescriptor_ptr);
  v3[4] = v6;
  v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a1, &type metadata for String, v6, &protocol witness table for String);
  v3[5] = v7;
  v8 = dword_10005C874;
  a3;
  v9 = (_QWORD *)swift_task_alloc(v8);
  v3[6] = v9;
  *v9 = v3;
  v9[1] = sub_100020090;
  return PosterUpdater.updateDescriptors(_:)(v7);
}

uint64_t sub_100020090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Class isa;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  _QWORD *v11;

  v2 = v0;
  v3 = *(_QWORD **)v1;
  v11 = v3;
  v4 = v3[5];
  v5 = (void *)v3[2];
  sub_100022114(v3[6], &v11);

  swift_bridgeObjectRelease(v4);
  if (v0)
  {
    v6 = _convertErrorToNSError(_:)(v0);
    swift_errorRelease(v2);
    isa = 0;
    v8 = (void *)v6;
  }
  else
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    sub_100005D2C();
    v6 = 0;
    v8 = isa;
  }
  v9 = (void (**)(_QWORD, _QWORD, _QWORD))v3[3];
  ((void (**)(_QWORD, Class, uint64_t))v9)[2](v9, isa, v6);

  _Block_release(v9);
  return sub_100021FE0(*(uint64_t (**)(void))(v1 + 8));
}

double sub_100020148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v4 = sub_100005350(&qword_10005C920);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  sub_10000658C((uint64_t)v6, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject(&unk_100056A48, 48, 7);
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  v9 = (_QWORD *)swift_allocObject(&unk_100056A70, 48, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_10005C930;
  v9[5] = v8;
  v10 = sub_100020F88((uint64_t)v6, (uint64_t)&unk_10005C940, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t PosterUpdater.updateConfiguration(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_100022048((uint64_t)sub_100020234);
}

uint64_t sub_100020234()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  id v7;
  uint64_t (*v9)(_QWORD);

  if (qword_10005BB70 != -1)
    swift_once(&qword_10005BB70, sub_1000423A8);
  v2 = sub_100013AD0();
  v3 = sub_10000AADC(v2, (uint64_t)qword_100060910);
  Logger.logObject.getter(v3);
  v4 = sub_100019080();
  if (sub_100022080(v4))
  {
    v5 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v0, "Received request to update configuration", v5, 2u);
    sub_10000AFFC((uint64_t)v5);
  }
  v6 = *(void **)(v1 + 16);

  v9 = *(uint64_t (**)(_QWORD))(v1 + 8);
  v7 = v6;
  return v9(*(_QWORD *)(v1 + 16));
}

double sub_10002031C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;

  v10 = _Block_copy(aBlock);
  v11 = (_QWORD *)sub_10000B5B0(a5, 40);
  v11[2] = a3;
  v11[3] = v10;
  v11[4] = a1;
  v12 = a3;
  v13 = a1;
  return sub_100020148(a6, (uint64_t)v11);
}

uint64_t sub_100020388(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_10005C87C;
  v7 = a1;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_100020400;
  return PosterUpdater.updateConfiguration(_:)((uint64_t)v7);
}

uint64_t sub_100020400(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  void *v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;
  _QWORD *v11;

  v3 = v1;
  v5 = *(_QWORD **)v2;
  v11 = v5;
  v7 = (void *)v5[2];
  v6 = (void *)v5[3];
  sub_100022114(v5[5], &v11);

  v8 = (void (**)(_QWORD, _QWORD, _QWORD))v5[4];
  if (v3)
  {
    v9 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return sub_100021FE0(*(uint64_t (**)(void))(v2 + 8));
}

void *sub_1000204B0(uint64_t a1, uint64_t a2, char a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  uint64_t v19;
  Class v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  unsigned int v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  Swift::String v154;

  sub_1000135E0(0, (unint64_t *)&unk_10005C980, PRMutablePosterDescriptor_ptr);
  swift_bridgeObjectRetain(a2);
  v134 = a1;
  v137 = a2;
  v6 = sub_100020C78(a1, a2);
  v7 = sub_100005350(&qword_10005BBA0);
  v8 = sub_10000B5B0(v7, 40);
  *(_OWORD *)(v8 + 16) = xmmword_100046150;
  v9 = objc_msgSend((id)objc_opt_self(PRPosterColor), "vibrantMaterialColor");
  *(_QWORD *)(v8 + 32) = v9;
  v11 = sub_100022014((uint64_t)v9, v10);
  sub_1000220A4(v11, &qword_10005C990);
  isa = sub_1000220CC().super.isa;
  v13 = sub_1000139C8();
  sub_1000220B8(v13, "setPreferredTitleColors:");

  v14 = sub_10000B5B0(v7, 40);
  *(_OWORD *)(v14 + 16) = xmmword_100046150;
  v15 = objc_msgSend(objc_allocWithZone((Class)PRTimeFontConfiguration), "initWithTimeFontIdentifier:", PRTimeFontIdentifierSoft);
  *(_QWORD *)(v14 + 32) = v15;
  v17 = sub_100022014((uint64_t)v15, v16);
  sub_1000220A4(v17, &qword_10005C998);
  v18 = sub_1000220CC().super.isa;
  v19 = sub_1000139C8();
  sub_1000220B8(v19, "setPreferredTimeFontConfigurations:");

  v20 = Int._bridgeToObjectiveC()().super.super.isa;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setObject:forUserInfoKey:", v20, v21);

  v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WeatherIntent()), "init");
  v23 = type metadata accessor for WeatherLocation();
  if (qword_10005BB38 != -1)
    swift_once(&qword_10005BB38, sub_100032270);
  v150 = v6;
  v24 = static WeatherLocation.currentLocationID;
  v25 = *(_QWORD *)algn_100060868;
  v26 = qword_10005BB30;
  swift_bridgeObjectRetain(*(_QWORD *)algn_100060868);
  if (v26 != -1)
    swift_once(&qword_10005BB30, sub_10002BEFC);
  v27 = (id)qword_100060850;
  v154._countAndFlagsBits = 0xD000000000000049;
  v154._object = (void *)0x8000000100048080;
  v28._countAndFlagsBits = 0x7461636F4C20794DLL;
  v28._object = (void *)0xEB000000006E6F69;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v154);

  v31 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v23));
  v32 = sub_100020D68(v24, v25, v30._countAndFlagsBits, (uint64_t)v30._object);
  objc_msgSend(v22, "setLocation:", v32);

  v33 = objc_msgSend(objc_allocWithZone((Class)ATXPosterDescriptorGalleryOptions), "init");
  objc_msgSend(v33, "setHero:", a3 & 1);
  objc_msgSend(v33, "setAllowsSystemSuggestedComplications:", 0);
  objc_msgSend(v33, "setFeaturedConfidenceLevel:", 1);
  v34 = sub_10000B5B0(v7, 56);
  *(_OWORD *)(v34 + 16) = xmmword_1000452A0;
  v35 = (id)INIntentWithTypedIntent(v22);
  sub_10002200C();
  v149 = v22;
  *(_QWORD *)(v34 + 32) = sub_100020DF8(0xD000000000000018, 0x80000001000480D0, 0xD000000000000011, 0x80000001000480F0, 0xD000000000000011, 0x80000001000480F0, 1, v35, 5u);
  sub_10002200C();
  *(_QWORD *)(v34 + 40) = sub_100021FA4(0xD000000000000018, 0x80000001000480D0, 0xD000000000000023, 0x8000000100048110, v36, v37, v38, v39, 5u);
  sub_10002200C();
  v44 = sub_100021FA4(0xD000000000000018, 0x80000001000480D0, 0xD000000000000026, 0x8000000100048140, v40, v41, v42, v43, 5u);
  *(_QWORD *)(v34 + 48) = v44;
  sub_100022014((uint64_t)v44, v45);
  sub_100021F20((uint64_t)v153, v33, (SEL *)&selRef_setModularLandscapeComplications_);
  v46 = sub_10000B5B0(v7, 56);
  *(_OWORD *)(v46 + 16) = xmmword_1000452A0;
  sub_10002200C();
  v47 = sub_100021FC8();
  *(_QWORD *)(v46 + 32) = sub_100020DF8(v47, v48, v49, v50, v51, v52, 11, 0, 5u);
  sub_10002200C();
  v53 = sub_100022148();
  *(_QWORD *)(v46 + 40) = sub_100021FA4(v53, v54, 0xD000000000000023, 0x8000000100048110, v55, v56, v57, v58, v126);
  sub_10002200C();
  v59 = sub_100022148();
  v65 = sub_100021FA4(v59, v60, 0xD000000000000026, 0x8000000100048140, v61, v62, v63, v64, v127);
  *(_QWORD *)(v46 + 48) = v65;
  sub_100022014((uint64_t)v65, v66);
  sub_100021F20((uint64_t)v153, v33, (SEL *)&selRef_setModularComplications_);
  sub_10002200C();
  v67 = sub_100021FC8();
  v73 = sub_100020DF8(v67, v68, v69, v70, v71, v72, 12, 0, 5u);
  objc_msgSend(v33, "setInlineComplication:", v73);

  v153 = 0;
  v74 = objc_msgSend(v150, "storeGalleryOptions:error:", v33, &v153);
  v75 = v153;
  if (v74)
  {
    v76 = v153;

    sub_1000220E0(v77, v78, v79, v80, v81, v82, v83, v84, v128, v131, v134, v137, 0x8000000100048110, 0xD000000000000023, 3, 7, v148, v22);
  }
  else
  {
    v85 = v153;
    v86 = _convertNSErrorToError(_:)(v75);

    swift_willThrow(v87);
    if (qword_10005BB70 != -1)
      swift_once(&qword_10005BB70, sub_1000423A8);
    v88 = sub_100013AD0();
    sub_10000AADC(v88, (uint64_t)qword_100060910);
    v89 = v137;
    sub_1000220C4();
    sub_10002209C();
    sub_1000220C4();
    v90 = sub_10002209C();
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = sub_10000B0C8(22);
      v94 = (void *)sub_10000B0C8(64);
      v153 = v94;
      *(_DWORD *)v93 = 136315394;
      sub_1000220C4();
      v151 = sub_1000210CC(v134, v137, (uint64_t *)&v153);
      sub_100022168(v151, (uint64_t)&v152, v95, v93 + 12, v96, v97, v98, v99, v128, v131, v134, v137, 0x8000000100048110, 0xD000000000000023, 3, 7);
      swift_bridgeObjectRelease_n(v89, 3);
      *(_WORD *)(v93 + 12) = 2082;
      v151 = v86;
      sub_10002209C();
      v100 = sub_100005350(&qword_10005C9A0);
      v101 = String.init<A>(describing:)(&v151, v100);
      v103 = v102;
      v151 = sub_1000210CC(v101, v102, (uint64_t *)&v153);
      sub_100022168(v151, (uint64_t)&v152, v104, v93 + 22, v105, v106, v107, v108, v129, v132, v135, v138, v140, v142, v144, v146);
      swift_bridgeObjectRelease(v103);
      sub_100022040();
      sub_100022040();
      sub_100022134((void *)&_mh_execute_header, v91, v92, "Failed to store gallery options when updating descriptor; identifier=%s, error=%{public}s",
        (uint8_t *)v93);
      swift_arrayDestroy(v94, 2, (char *)&type metadata for Any + 8);
      sub_10000AFFC((uint64_t)v94);
      sub_10000AFFC(v93);

      v109 = sub_100022040();
      sub_1000220E0(v109, v110, v111, v112, v113, v114, v115, v116, v130, v133, v136, v139, v141, v143, v145, v147, v148, v149);

    }
    else
    {

      sub_1000220E0(v117, v118, v119, v120, v121, v122, v123, v124, v128, v131, v134, v137, 0x8000000100048110, 0xD000000000000023, 3, 7, v148, v149);
      sub_100022040();
      swift_bridgeObjectRelease_n(v89, 2);
      sub_100022040();
      sub_100022040();

    }
  }
  return v150;
}

id sub_100020C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "mutableDescriptorWithIdentifier:", v4);

  return v5;
}

id PosterUpdater.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13WeatherPoster13PosterUpdater_descriptorVersion] = 3;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PosterUpdater();
  return objc_msgSendSuper2(&v2, "init");
}

id PosterUpdater.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PosterUpdater();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100020D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  NSString v7;
  NSString v8;
  id v9;

  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v9 = objc_msgSend(v4, "initWithIdentifier:displayString:", v7, v8);

  return v9;
}

id sub_100020DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, unsigned int a9)
{
  void *v9;
  void *v10;
  NSString v16;
  NSString v17;
  NSString v18;
  id v19;

  v10 = v9;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(v10, "initWithExtensionBundleIdentifier:kind:containerBundleIdentifier:widgetFamily:intent:source:", v16, v17, v18, a7, a8, a9);

  return v19;
}

uint64_t sub_100020EE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_100021F98;
  return v6();
}

uint64_t sub_100020F34(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_100021F98;
  return v7();
}

uint64_t sub_100020F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  if (sub_100006580(a1, 1, v6) == 1)
  {
    sub_100021DC8(a1, &qword_10005C920);
    v7 = 7168;
  }
  else
  {
    v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = v8 | 0x1C00;
  }
  v9 = *(_QWORD *)(a3 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
    v14 = v13;
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = swift_allocObject(&unk_100056A98, 32, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v18[0] = 0;
    v18[1] = 0;
    v16 = v18;
    v18[2] = v12;
    v18[3] = v14;
  }
  else
  {
    v16 = 0;
  }
  return swift_task_create(v7, v16, (char *)&type metadata for () + 8, &unk_10005C950, v15);
}

uint64_t sub_1000210CC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  void *ObjectType;

  v6 = sub_10002119C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_100021E04((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_100021E04((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100013750(v12);
  return v7;
}

_QWORD *sub_10002119C(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  _QWORD *result;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1000212F0((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1000213B4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (_QWORD *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

void *sub_1000212F0(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory with negative count", 60, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1170, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, 2, 1173, 0);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000213B4(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_100021448(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_10002161C(0, v2[2] + 1, 1, (uint64_t)v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_10002161C((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 0;
  return v2;
}

_QWORD *sub_100021448(uint64_t a1, unint64_t a2)
{
  Swift::Int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v4 = String.UTF8View._foreignCount()();
    if (v4)
      goto LABEL_6;
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return &_swiftEmptyArrayStorage;
LABEL_6:
  v5 = sub_1000215B8(v4, 0);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, 2, 71, 0);
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    goto LABEL_15;
  }
  if (v7 == v4)
    return v6;
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, 2, 1122, 0);
LABEL_15:
  __break(1u);
  return result;
}

_QWORD *sub_1000215B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_100005350(&qword_10005C978);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

char *sub_10002161C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005350(&qword_10005C978);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1000217B4(v14, v8, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000216F0(v14, v8, v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_1000216F0(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) != 0)
  {
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
  }
  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst)
      return memcpy(__dst, __src, __n);
    result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  }
  __break(1u);
  return result;
}

char *sub_1000217B4(char *__src, size_t __len, char *__dst)
{
  char v4;

  if ((__len & 0x8000000000000000) != 0)
  {
    v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v4, 1046, 0);
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_100021834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _BYTE v7[72];

  sub_10002205C(*(_QWORD *)(v1 + 40));
  v3 = sub_10002EB54(a1);
  sub_100022108((uint64_t)v7, v4, v3);
  sub_100005D2C();
  v5 = sub_100022054();
  return sub_100021918(a1, v5);
}

unint64_t sub_100021894(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_100021E40(a1, a2, v4);
}

uint64_t type metadata accessor for PosterUpdater()
{
  return objc_opt_self(_TtC13WeatherPoster13PosterUpdater);
}

uint64_t sub_100021918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_100021B48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1000220B0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100022020(v1, (uint64_t)sub_100021F98);
  return sub_100021FFC(v2, v3, v4, v5);
}

uint64_t sub_100021B90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10005C92C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_100021F98;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10005C928 + dword_10005C928))(v2, v3, v4);
}

uint64_t sub_100021C0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100021C38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10005C93C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100021F98;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10005C938 + dword_10005C938))(a1, v4, v5, v6);
}

uint64_t sub_100021CBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100021CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)sub_1000220B0();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AAB8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10005C948 + dword_10005C948))(a1, v4);
}

uint64_t sub_100021D50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100021D84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1000220B0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_100022020(v1, (uint64_t)sub_10000A96C);
  return sub_100021FFC(v2, v3, v4, v5);
}

uint64_t sub_100021DC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100005350(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100021E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100021E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

void sub_100021F20(uint64_t a1, void *a2, SEL *a3)
{
  Class isa;

  sub_1000135E0(0, &qword_10005C9A8, ATXComplication_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  objc_msgSend(a2, *a3, isa);

}

uint64_t sub_100021F9C(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

id sub_100021FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  uint64_t v9;

  return sub_100020DF8(a1, a2, a3, a4, 0xD000000000000011, v9, 10, 0, a9);
}

uint64_t sub_100021FC8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100021FE0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100021FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return String.hash(into:)(a1, a2, v2);
}

uint64_t sub_100021FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

id sub_10002200C()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 584));
}

uint64_t sub_100022014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = v2;
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_100022020@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_100022040()
{
  uint64_t v0;

  return swift_errorRelease(v0);
}

uint64_t sub_100022048(uint64_t a1)
{
  return swift_task_switch(a1, 0, 0);
}

Swift::Int sub_100022054()
{
  return Hasher._finalize()();
}

_QWORD *sub_10002205C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return Hasher.init(_seed:)((uint64_t *)va);
}

uint64_t sub_100022064()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10002206C@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;

  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a1 > 1, v1 + 1, 1);
}

BOOL sub_100022080(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100022090()
{
  uint64_t v0;
  uint64_t v1;

  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
}

uint64_t sub_10002209C()
{
  uint64_t v0;

  return swift_errorRetain(v0);
}

uint64_t sub_1000220A4(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;

  return sub_1000135E0(0, a2, v2);
}

uint64_t sub_1000220B0()
{
  uint64_t v0;

  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

id sub_1000220B8(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1000220C4()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(v0);
}

NSArray sub_1000220CC()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1000220D8()
{
  return Logger.logObject.getter();
}

void sub_1000220E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{

}

uint64_t sub_1000220E8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000220F0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 2);
}

uint64_t sub_1000220FC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease_n(v0, 3);
}

uint64_t sub_100022108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return String.hash(into:)(a1, a3, v3);
}

uint64_t sub_100022114@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2;
  return swift_task_dealloc(a1);
}

void sub_100022134(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_10002213C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100022148()
{
  uint64_t v0;

  return v0;
}

void sub_10002215C(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
}

uint64_t sub_100022168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(va, a2, v16, a4);
}

id sub_100022174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  CGPoint v9;
  CGPoint v10;
  CGAffineTransform v12;
  __n128 v13;
  CGPoint v14;
  CGPoint v15;

  v3 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100022CA0(a1, (uint64_t)v5);
  v6 = sub_100022F04();
  sub_10000658C((uint64_t)v5, 0, 1, v6);
  v7 = v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_rotationState;
  sub_100013988(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_rotationState, (uint64_t)&v13);
  sub_100022CE4((uint64_t)v5, v7);
  swift_endAccess(&v13);
  sub_1000229B4(&v13, *(float *)(a1 + *(int *)(v6 + 20)));
  v8 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer);
  v14.x = sub_100022F14();
  v14.y = 0.0;
  v9 = CGPointApplyAffineTransform(v14, &v12);
  objc_msgSend(v8, "setStartPoint:", v9.x, v9.y);
  v15.x = sub_100022F14();
  v15.y = 1.0;
  v10 = CGPointApplyAffineTransform(v15, &v12);
  return objc_msgSend(v8, "setEndPoint:", v10.x, v10.y);
}

uint64_t sub_1000222B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient;
  sub_100013988(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient, (uint64_t)v7);
  v4 = sub_100022F0C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess(v7);
  sub_10002233C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void sub_10002233C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = v0;
  v2 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SkyBackgroundGradient(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (id)objc_opt_self(CATransaction);
  objc_msgSend(v24, "begin");
  v12 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer);
  v13 = objc_msgSend(v12, "colors");
  v14 = v13;
  if (v13)
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, (char *)&type metadata for Any + 8);
  else
    v23 = 0;
  v15 = v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient, v26, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  SkyBackgroundGradient.apply(to:)((CAGradientLayer)v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_rotationState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster12GradientView_rotationState, v25, 0, 0);
  sub_100022D2C(v16, (uint64_t)v4);
  if (sub_100006580((uint64_t)v4, 1, v5) == 1)
  {
    sub_100022D74((uint64_t)v4);
  }
  else
  {
    sub_100022E58((uint64_t)v4, (uint64_t)v7);
    v17 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v18 = objc_msgSend(v17, "userInterfaceIdiom");

    if (v18 == (id)1)
      sub_100022174((uint64_t)v7);
    sub_100022E9C((uint64_t)v7);
  }
  sub_100022DB4();
  v19 = sub_1000226A8(0x73726F6C6F63, 0xE600000000000000);
  if (v23)
  {
    swift_bridgeObjectRelease(v23);
  }
  else
  {

    v14 = 0;
  }
  objc_msgSend(v19, "setFromValue:", v14, v23);
  swift_unknownObjectRelease(v14);
  v20 = objc_msgSend(v12, "colors");
  objc_msgSend(v19, "setToValue:", v20);

  objc_msgSend(v19, "setDuration:", 0.25);
  v21 = qword_10005BB40;
  v22 = v19;
  if (v21 != -1)
    swift_once(&qword_10005BB40, sub_100035C10);
  objc_msgSend(v22, "setTimingFunction:", qword_100060880);

  sub_100022DF0((uint64_t)v22, 0x73726F6C6F63, 0xE600000000000000, v12);
  objc_msgSend(v24, "commit");

}

id sub_1000226A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "animationWithKeyPath:", v4);

  return v5;
}

char *sub_100022714(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer;
  v6 = objc_allocWithZone((Class)CAGradientLayer);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  v8 = sub_100022F04();
  sub_100022EF0(v8);
  v9 = &v7[OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient];
  v10 = sub_100022F0C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);

  v19.receiver = v7;
  v19.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer;
  v14 = *(void **)&v12[OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer];
  v15 = v12;
  v16 = v14;
  SkyBackgroundGradient.apply(to:)((CAGradientLayer)v16);

  v17 = objc_msgSend(v15, "layer");
  objc_msgSend(v17, "addSublayer:", *(_QWORD *)&v12[v13]);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v15;
}

void sub_100022868()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v2 = sub_100022F04();
  sub_100022EF0(v2);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000482B0, "WeatherPoster/GradientView.swift", 32, 2, 55, 0);
  __break(1u);
}

id sub_100022918()
{
  char *v0;
  void *v1;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v3, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC13WeatherPoster12GradientView_gradientLayer];
  objc_msgSend(v0, "bounds");
  return objc_msgSend(v1, "setFrame:");
}

__n128 sub_1000229B4@<Q0>(__n128 *a1@<X8>, float a2@<S0>)
{
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGAffineTransform *Rotation;
  __n128 v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGAffineTransform *v17;
  CGAffineTransform *v18;
  CGAffineTransform *v19;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  CGAffineTransform *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGAffineTransform *v28;
  CGAffineTransform *v29;
  CGAffineTransform *v30;
  uint64_t v31;
  __n128 v32;
  __n128 result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  CGAffineTransform v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  CGAffineTransform v48;
  CGAffineTransform v49;

  CGAffineTransformMakeTranslation(&v49, -0.5, -0.5);
  a = v49.a;
  b = v49.b;
  c = v49.c;
  d = v49.d;
  tx = v49.tx;
  ty = v49.ty;
  Rotation = CGAffineTransformMakeRotation(&v49, (float)((float)(a2 * 3.1416) / 180.0));
  v11 = *(__n128 *)&v49.a;
  v12 = *(__n128 *)&v49.c;
  v13 = *(__n128 *)&v49.tx;
  v49.a = a;
  v49.b = b;
  v49.c = c;
  v49.d = d;
  v49.tx = tx;
  v49.ty = ty;
  sub_100022ED8((uint64_t)Rotation, v14, v15, v16, v17, v18, v19, v11, v12, v13, v20, v34, v35, v36, v37, v38, v41, v42, v44,
    v45,
    v47,
    v21,
    v22,
    v23,
    *(uint64_t *)&v48.a);
  v49.a = a;
  v49.b = b;
  v49.c = c;
  v49.d = d;
  v49.tx = tx;
  v49.ty = ty;
  v24 = CGAffineTransformInvert(&v48, &v49);
  v49 = v39;
  sub_100022ED8((uint64_t)v24, v25, v26, v27, v28, v29, v30, *(__n128 *)&v48.a, *(__n128 *)&v48.c, *(__n128 *)&v48.tx, v31, *(uint64_t *)&v39.c, *(uint64_t *)&v39.d, *(uint64_t *)&v39.a, *(uint64_t *)&v39.b, *(uint64_t *)&v39.a, *(uint64_t *)&v39.b, *(uint64_t *)&v39.c, *(uint64_t *)&v39.d,
    *(uint64_t *)&v39.tx,
    *(uint64_t *)&v39.ty,
    *(__n128 *)&v39.c,
    *(__n128 *)&v39.a,
    v32,
    *(uint64_t *)&v48.a);
  result = v40;
  *a1 = v40;
  a1[1] = v43;
  a1[2] = v46;
  return result;
}

void sub_100022AA8()
{
  _swift_stdlib_reportUnimplementedInitializer("WeatherPoster.GradientView", 26, "init(frame:)", 12, 0);
  __break(1u);
}

id sub_100022AE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100022B70()
{
  return type metadata accessor for GradientView(0);
}

uint64_t type metadata accessor for GradientView(uint64_t a1)
{
  uint64_t result;

  result = qword_10005C9E8;
  if (!qword_10005C9E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GradientView);
  return result;
}

void sub_100022BB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100022C48(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for SkyBackgroundGradient(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100022C48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005C1D8)
  {
    v2 = type metadata accessor for DynamicRotationState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005C1D8);
  }
}

uint64_t sub_100022CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicRotationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022D74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005350(&qword_10005C308);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100022DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C9F8;
  if (!qword_10005C9F8)
  {
    v1 = objc_opt_self(CABasicAnimation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005C9F8);
  }
  return result;
}

void sub_100022DF0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v7;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  objc_msgSend(a4, "addAnimation:forKey:", a1, v7);

}

uint64_t sub_100022E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicRotationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022E9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DynamicRotationState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

CGAffineTransform *sub_100022ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, CGAffineTransform *a5, CGAffineTransform *t2, CGAffineTransform *t1, __n128 a8, __n128 a9, __n128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__n128 t2a,__n128 t2_16,__n128 t2_32,uint64_t t1a)
{
  t2a = a8;
  t2_16 = a9;
  t2_32 = a10;
  return CGAffineTransformConcat((CGAffineTransform *)&a16, (CGAffineTransform *)&t1a, (CGAffineTransform *)&t2a);
}

uint64_t sub_100022EF0(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(v1, 1, 1, a1);
}

uint64_t sub_100022F04()
{
  return type metadata accessor for DynamicRotationState(0);
}

uint64_t sub_100022F0C()
{
  return type metadata accessor for SkyBackgroundGradient(0);
}

double sub_100022F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 - 192) = v1;
  *(_QWORD *)(v0 - 184) = v2;
  *(_QWORD *)(v0 - 176) = v3;
  *(_QWORD *)(v0 - 168) = v4;
  *(_QWORD *)(v0 - 160) = v5;
  *(_QWORD *)(v0 - 152) = v6;
  return 0.0;
}

void sub_100022F28(char a1)
{
  sub_10001F844(0, a1 & 1);
}

void sub_100022F34(uint64_t a1)
{
  char v1;
  _BYTE v2[72];

  v1 = a1;
  sub_100023B68(a1);
  sub_10001F6C0((uint64_t)v2, v1);
  sub_100022054();
  sub_100021FBC();
}

void sub_100022F64(char a1)
{
  sub_10001F7A4(0, a1 & 1);
}

void sub_100022F70(uint64_t a1)
{
  sub_100022F94(a1, (uint64_t (*)(uint64_t))sub_100026FE0);
}

void sub_100022F7C(uint64_t a1)
{
  sub_100022F94(a1, (uint64_t (*)(uint64_t))sub_100027D5C);
}

void sub_100022F88(uint64_t a1)
{
  sub_100022F94(a1, (uint64_t (*)(uint64_t))sub_10002EB54);
}

void sub_100022F94(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[72];

  sub_100023B68(a1);
  v4 = a2(a1);
  v6 = v5;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v6);
  sub_100022054();
  sub_100021FBC();
}

void sub_100022FE8(Swift::UInt a1)
{
  sub_100023B68(a1);
  Hasher._combine(_:)(a1);
  sub_100022054();
  sub_100021FBC();
}

uint64_t sub_100023018(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000558E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_100023068(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656E696C66666FLL;
  else
    return 0x6C62616863616572;
}

void sub_1000230A4(char *a1, unsigned __int8 *a2)
{
  sub_10000BFC0(*a1, *a2);
}

void sub_1000230B0()
{
  char *v0;

  sub_100022F28(*v0);
}

uint64_t sub_1000230B8(uint64_t a1)
{
  char *v1;

  return sub_10001F470(a1, *v1);
}

void sub_1000230C0(uint64_t a1)
{
  char *v1;

  sub_10001F844(a1, *v1);
}

uint64_t sub_1000230C8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100023018(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000230F4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100023068(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10002311C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!*(_QWORD *)(v0 + 16))
  {
    v1 = v0;
    v2 = type metadata accessor for NWPathMonitor(0);
    swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
    v3 = NWPathMonitor.init()();
    v4 = swift_allocObject(&unk_100056B98, 24, 7);
    swift_weakInit(v4 + 16, v1);
    swift_retain(v4);
    sub_10001325C((uint64_t)sub_100023A64, v4);
    NWPathMonitor.pathUpdateHandler.setter(sub_100023A64, v4);
    swift_release_n(v4, 2);
    NWPathMonitor.start(queue:)(*(_QWORD *)(v1 + 24));
    v5 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v3;
    swift_release(v5);
  }
}

uint64_t sub_1000231E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    sub_10002323C(a1);
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_10002323C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v2 = v1;
  v24 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NWPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A818();
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = swift_allocObject(&unk_100056B98, 24, 7);
  swift_weakInit(v14 + 16, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v24, v9);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_100056BC0, v16 + v11, v15 | 7);
  *(_QWORD *)(v17 + 16) = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, v12, v9);
  aBlock[4] = sub_100023AE0;
  v29 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001279C;
  aBlock[3] = &unk_100056BD8;
  v18 = _Block_copy(aBlock);
  v19 = swift_release(v29);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v20 = sub_10001F174((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100005350(&qword_10005C350);
  v22 = sub_100023B28((unint64_t *)&qword_10005C358, &qword_10005C350);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v3, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v26);
}

double sub_1000234C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2
    && (swift_retain(v2),
        sub_10001325C(0, 0),
        NWPathMonitor.pathUpdateHandler.setter(0, 0),
        swift_release(v2),
        (v3 = *(_QWORD *)(v1 + 16)) != 0))
  {
    swift_retain(*(_QWORD *)(v1 + 16));
    NWPathMonitor.cancel()();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + 16);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_10002353C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t Strong;
  char v12;
  void (*v13)(char *, uint64_t);
  _BYTE v15[24];

  v2 = type metadata accessor for NWPath.Status(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v15[-v7 - 8];
  a1 += 16;
  swift_beginAccess(a1, v15, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v10 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + 32);
    result = swift_release(v10);
    if (Strong)
    {
      NWPath.status.getter(result);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for NWPath.Status.satisfied(_:), v2);
      v12 = static NWPath.Status.== infix(_:_:)(v8, v6);
      v13 = *(void (**)(char *, uint64_t))(v3 + 8);
      v13(v6, v2);
      v13(v8, v2);
      sub_10003E6F8((v12 & 1) == 0);
      return swift_unknownObjectRelease(Strong);
    }
  }
  return result;
}

uint64_t sub_100023678()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  sub_100013934(v0 + 32);
  return v0;
}

uint64_t sub_1000236A4()
{
  uint64_t v0;

  sub_100023678();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return objc_opt_self(_TtC13WeatherPoster14NetworkMonitor);
}

uint64_t getEnumTagSinglePayload for LabelViewModel.Placement(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000237B8 + 4 * byte_100046195[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000237EC + 4 * byte_100046190[v4]))();
}

uint64_t sub_1000237EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000237F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000237FCLL);
  return result;
}

uint64_t sub_100023808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100023810);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100023814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002381C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100023828(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

unint64_t sub_100023848()
{
  unint64_t result;

  result = qword_10005CAB0;
  if (!qword_10005CAB0)
  {
    result = swift_getWitnessTable(&unk_100046268, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_10005CAB0);
  }
  return result;
}

_QWORD *sub_100023884()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  void *v20;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_100013B18();
  v6 = v5 - v4;
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  sub_100013B18();
  v10 = v9 - v8;
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  sub_100013B18();
  v14 = v13 - v12;
  v1[2] = 0;
  v19 = sub_10000A818();
  static DispatchQoS.unspecified.getter(v19);
  v20 = &_swiftEmptyArrayStorage;
  v15 = sub_10001F174(&qword_10005CAB8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_100005350(&qword_10005CAC0);
  v17 = sub_100023B28(&qword_10005CAC8, &qword_10005CAC0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v7, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000014, 0x8000000100048320, v14, v10, v6, 0);
  v1[5] = 0;
  swift_unknownObjectWeakInit(v1 + 4, 0);
  return v1;
}

uint64_t sub_100023A40()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100023A64(uint64_t a1)
{
  uint64_t v1;

  return sub_1000231E0(a1, v1);
}

uint64_t sub_100023A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for NWPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100023AE0()
{
  uint64_t v0;

  type metadata accessor for NWPath(0);
  return sub_10002353C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100023B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100023B20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100023B28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000AC50(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_100023B68(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return Hasher.init(_seed:)((uint64_t *)va);
}

_QWORD *sub_100023B74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v20);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    v9 = (int *)type metadata accessor for PosterDataModel(0);
    v10 = v9[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for TimeZone(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v8);
    v14(v11, v12, v13);
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Date(0);
    if (sub_100006580((uint64_t)v17, 1, v18))
    {
      v19 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      sub_10000658C((uint64_t)v16, 0, 1, v18);
    }
    v21 = v9[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    if (sub_100006580((uint64_t)a2 + v21, 1, v18))
    {
      v24 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v22, v23, v18);
      sub_10000658C((uint64_t)v22, 0, 1, v18);
    }
    v25 = v9[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = type metadata accessor for BackgroundMoonData(0);
    if (sub_100006580((uint64_t)v27, 1, v28))
    {
      v29 = sub_100005350(&qword_10005BE78);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      sub_10000658C((uint64_t)v26, 0, 1, v28);
    }
    v30 = v9[10];
    v31 = *(_QWORD *)((char *)a2 + v30);
    *(_QWORD *)((char *)a1 + v30) = v31;
    swift_bridgeObjectRetain(v31);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for PosterDataModel(uint64_t a1)
{
  return sub_1000291B4(a1, qword_10005CBD0, (uint64_t)&nominal type descriptor for PosterDataModel);
}

uint64_t sub_100023E00(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v4 = (int *)type metadata accessor for PosterDataModel(0);
    v5 = a1 + v4[6];
    v6 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + v4[7];
    v8 = type metadata accessor for Date(0);
    if (!sub_100006580(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = a1 + v4[8];
    if (!sub_100006580(v9, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v9, v8);
    v10 = a1 + v4[9];
    v11 = type metadata accessor for BackgroundMoonData(0);
    if (!sub_100006580(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[10]));
  }
  return result;
}

_QWORD *sub_100023F28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    v7 = (int *)type metadata accessor for PosterDataModel(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TimeZone(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v6);
    v12(v9, v10, v11);
    v13 = v7[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date(0);
    if (sub_100006580((uint64_t)v15, 1, v16))
    {
      v17 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      sub_10000658C((uint64_t)v14, 0, 1, v16);
    }
    v18 = v7[8];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    if (sub_100006580((uint64_t)a2 + v18, 1, v16))
    {
      v21 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v19, v20, v16);
      sub_10000658C((uint64_t)v19, 0, 1, v16);
    }
    v22 = v7[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for BackgroundMoonData(0);
    if (sub_100006580((uint64_t)v24, 1, v25))
    {
      v26 = sub_100005350(&qword_10005BE78);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      sub_10000658C((uint64_t)v23, 0, 1, v25);
    }
    v27 = v7[10];
    v28 = *(_QWORD *)((char *)a2 + v27);
    *(_QWORD *)((char *)a1 + v27) = v28;
    swift_bridgeObjectRetain(v28);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100024178(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_10000AB38((uint64_t)a1, type metadata accessor for PosterData);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = a2[1];
      a1[1] = v6;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v7 = (int *)type metadata accessor for PosterDataModel(0);
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for TimeZone(0);
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain(v6);
      v12(v9, v10, v11);
      v13 = v7[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for Date(0);
      if (sub_100006580((uint64_t)v15, 1, v16))
      {
        v17 = sub_100005350((uint64_t *)&unk_10005C4C0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        sub_10000658C((uint64_t)v14, 0, 1, v16);
      }
      v18 = v7[8];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      if (sub_100006580((uint64_t)a2 + v18, 1, v16))
      {
        v21 = sub_100005350((uint64_t *)&unk_10005C4C0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v19, v20, v16);
        sub_10000658C((uint64_t)v19, 0, 1, v16);
      }
      v22 = v7[9];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for BackgroundMoonData(0);
      if (sub_100006580((uint64_t)v24, 1, v25))
      {
        v26 = sub_100005350(&qword_10005BE78);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        sub_10000658C((uint64_t)v23, 0, 1, v25);
      }
      v27 = v7[10];
      v28 = *(_QWORD *)((char *)a2 + v27);
      *(_QWORD *)((char *)a1 + v27) = v28;
      swift_bridgeObjectRetain(v28);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for PosterData(uint64_t a1)
{
  return sub_1000291B4(a1, qword_10005CB40, (uint64_t)&nominal type descriptor for PosterData);
}

_OWORD *sub_1000243FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (int *)type metadata accessor for PosterDataModel(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = v7[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for Date(0);
    if (sub_100006580((uint64_t)v14, 1, v15))
    {
      v16 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      sub_10000658C((uint64_t)v13, 0, 1, v15);
    }
    v17 = v7[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (sub_100006580((uint64_t)a2 + v17, 1, v15))
    {
      v20 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v18, v19, v15);
      sub_10000658C((uint64_t)v18, 0, 1, v15);
    }
    v21 = v7[9];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for BackgroundMoonData(0);
    if (sub_100006580((uint64_t)v23, 1, v24))
    {
      v25 = sub_100005350(&qword_10005BE78);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      sub_10000658C((uint64_t)v22, 0, 1, v24);
    }
    *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_10002462C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_10000AB38((uint64_t)a1, type metadata accessor for PosterData);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = (int *)type metadata accessor for PosterDataModel(0);
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = v7[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Date(0);
      if (sub_100006580((uint64_t)v14, 1, v15))
      {
        v16 = sub_100005350((uint64_t *)&unk_10005C4C0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        sub_10000658C((uint64_t)v13, 0, 1, v15);
      }
      v17 = v7[8];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if (sub_100006580((uint64_t)a2 + v17, 1, v15))
      {
        v20 = sub_100005350((uint64_t *)&unk_10005C4C0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v18, v19, v15);
        sub_10000658C((uint64_t)v18, 0, 1, v15);
      }
      v21 = v7[9];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for BackgroundMoonData(0);
      if (sub_100006580((uint64_t)v23, 1, v24))
      {
        v25 = sub_100005350(&qword_10005BE78);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        sub_10000658C((uint64_t)v22, 0, 1, v24);
      }
      *(_QWORD *)((char *)a1 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100024874(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100046308;
  result = type metadata accessor for PosterDataModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_1000248E4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for TimeZone(0);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[7];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Date(0);
    if (sub_100006580((uint64_t)v15, 1, v16))
    {
      v17 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      sub_10000658C((uint64_t)v14, 0, 1, v16);
    }
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (sub_100006580((uint64_t)a2 + v19, 1, v16))
    {
      v22 = sub_100005350((uint64_t *)&unk_10005C4C0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v20, v21, v16);
      sub_10000658C((uint64_t)v20, 0, 1, v16);
    }
    v23 = a3[9];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for BackgroundMoonData(0);
    if (sub_100006580((uint64_t)v25, 1, v26))
    {
      v27 = sub_100005350(&qword_10005BE78);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      sub_10000658C((uint64_t)v24, 0, 1, v26);
    }
    v28 = a3[10];
    v29 = *(uint64_t *)((char *)a2 + v28);
    *(_QWORD *)((char *)v4 + v28) = v29;
    swift_bridgeObjectRetain(v29);
  }
  return v4;
}

uint64_t sub_100024B10(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Date(0);
  if (!sub_100006580(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  if (!sub_100006580(v8, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v8, v7);
  v9 = a1 + a2[9];
  v10 = type metadata accessor for BackgroundMoonData(0);
  if (!sub_100006580(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
}

uint64_t sub_100024C14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TimeZone(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  if (sub_100006580((uint64_t)v14, 1, v15))
  {
    v16 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    sub_10000658C((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  if (sub_100006580(a2 + v17, 1, v15))
  {
    v20 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v19, v15);
    sub_10000658C((uint64_t)v18, 0, 1, v15);
  }
  v21 = a3[9];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = type metadata accessor for BackgroundMoonData(0);
  if (sub_100006580((uint64_t)v23, 1, v24))
  {
    v25 = sub_100005350(&qword_10005BE78);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    sub_10000658C((uint64_t)v22, 0, 1, v24);
  }
  v26 = a3[10];
  v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  swift_bridgeObjectRetain(v27);
  return a1;
}

_QWORD *sub_100024E14(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Date(0);
  v16 = sub_100006580((uint64_t)v13, 1, v15);
  v17 = sub_100006580((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      sub_10000658C((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_100006580((uint64_t)a1 + v20, 1, v15);
  v24 = sub_100006580((uint64_t)v22, 1, v15);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v21, v22, v15);
      sub_10000658C((uint64_t)v21, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v15 - 8);
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v15);
LABEL_12:
    v26 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v21, v22, v15);
LABEL_13:
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for BackgroundMoonData(0);
  v31 = sub_100006580((uint64_t)v28, 1, v30);
  v32 = sub_100006580((uint64_t)v29, 1, v30);
  if (!v31)
  {
    v33 = *(_QWORD *)(v30 - 8);
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v28, v29, v30);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v34 = sub_100005350(&qword_10005BE78);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  sub_10000658C((uint64_t)v28, 0, 1, v30);
LABEL_19:
  v35 = a3[10];
  v36 = *(_QWORD *)((char *)a2 + v35);
  v37 = *(_QWORD *)((char *)a1 + v35);
  *(_QWORD *)((char *)a1 + v35) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  return a1;
}

_OWORD *sub_10002510C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date(0);
  if (sub_100006580((uint64_t)v13, 1, v14))
  {
    v15 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    sub_10000658C((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  if (sub_100006580((uint64_t)a2 + v16, 1, v14))
  {
    v19 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v17, v18, v14);
    sub_10000658C((uint64_t)v17, 0, 1, v14);
  }
  v20 = a3[9];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for BackgroundMoonData(0);
  if (sub_100006580((uint64_t)v22, 1, v23))
  {
    v24 = sub_100005350(&qword_10005BE78);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    sub_10000658C((uint64_t)v21, 0, 1, v23);
  }
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_1000252EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for Date(0);
  v16 = sub_100006580((uint64_t)v13, 1, v15);
  v17 = sub_100006580((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      sub_10000658C((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  v20 = a3[8];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_100006580(a1 + v20, 1, v15);
  v24 = sub_100006580((uint64_t)v22, 1, v15);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v21, v22, v15);
      sub_10000658C((uint64_t)v21, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v15 - 8);
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v21, v15);
LABEL_12:
    v26 = sub_100005350((uint64_t *)&unk_10005C4C0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v25 + 40))(v21, v22, v15);
LABEL_13:
  v27 = a3[9];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = type metadata accessor for BackgroundMoonData(0);
  v31 = sub_100006580((uint64_t)v28, 1, v30);
  v32 = sub_100006580((uint64_t)v29, 1, v30);
  if (!v31)
  {
    v33 = *(_QWORD *)(v30 - 8);
    if (!v32)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v28, v29, v30);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v28, v30);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v34 = sub_100005350(&qword_10005BE78);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  sub_10000658C((uint64_t)v28, 0, 1, v30);
LABEL_19:
  v35 = a3[10];
  v36 = *(_QWORD *)(a1 + v35);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

uint64_t sub_1000255C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000255D0);
}

void sub_1000255D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_100013994();
  }
  else
  {
    type metadata accessor for TimeZone(0);
    sub_100008874();
    if (v9)
    {
      v7 = v6;
      v8 = a3[6];
    }
    else
    {
      sub_100005350((uint64_t *)&unk_10005C4C0);
      sub_100008874();
      if (v9)
      {
        v7 = v10;
        v8 = a3[7];
      }
      else
      {
        v7 = sub_100005350(&qword_10005BE78);
        v8 = a3[9];
      }
    }
    sub_10002B208(a1 + v8, a2, v7);
  }
}

uint64_t sub_100025674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100025680);
}

void sub_100025680(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_100013994();
  }
  else
  {
    type metadata accessor for TimeZone(0);
    sub_100008884();
    if (v10)
    {
      v8 = v7;
      v9 = a4[6];
    }
    else
    {
      sub_100005350((uint64_t *)&unk_10005C4C0);
      sub_100008884();
      if (v10)
      {
        v8 = v11;
        v9 = a4[7];
      }
      else
      {
        v8 = sub_100005350(&qword_10005BE78);
        v9 = a4[9];
      }
    }
    sub_10002B214(a1 + v9, a2, a2, v8);
  }
}

void sub_100025720(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v8[0] = &unk_100046330;
  v8[1] = &unk_100046348;
  v2 = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007858(319, (unint64_t *)&qword_10005BEE8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v9 = *(_QWORD *)(v4 - 8) + 64;
      v10 = v9;
      sub_100007858(319, (unint64_t *)&unk_10005BEF0, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

void sub_100025800(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for PosterData(0);
  sub_100008864();
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002B3CC();
  sub_10001352C(v5, v6, v7);
  if (sub_10002B238((uint64_t)v4) == 1)
  {
    sub_1000134CC((uint64_t)v4, a1, type metadata accessor for PosterDataModel);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  v9 = sub_1000191FC();
  sub_10000658C(a1, v8, 1, v9);
  sub_100013994();
}

uint64_t sub_1000258AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  type metadata accessor for PosterDataModel(0);
  sub_100008864();
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PosterData(0);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_100013B18();
  v8 = v7 - v6;
  sub_10002B39C(v1, v9, v10);
  if (sub_10002B238(v8) != 1)
    __asm { BR              X10 }
  v11 = sub_10002B3CC();
  sub_1000134CC(v11, v12, type metadata accessor for PosterDataModel);
  v13 = sub_10002821C();
  sub_10000AB38((uint64_t)v4, type metadata accessor for PosterDataModel);
  return v13;
}

uint64_t sub_1000259FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100025A34 + 4 * byte_100046294[a1]))(0xD000000000000014, 0x80000001000473F0);
}

uint64_t sub_100025A34()
{
  return 0x4F6B726F7774656ELL;
}

uint64_t sub_100025A58()
{
  return 0x617461446F6ELL;
}

unint64_t sub_100025A80(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100055930, v2);
  sub_1000139C8();
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

void sub_100025AC4()
{
  unsigned __int8 *v0;

  sub_100022F34(*v0);
}

void sub_100025ACC(uint64_t a1)
{
  char *v1;

  sub_10001F6C0(a1, *v1);
}

void sub_100025AD4(uint64_t a1)
{
  char *v1;

  sub_10001F7FC(a1, *v1);
}

unint64_t sub_100025ADC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100025A80(*a1);
  *a2 = result;
  return result;
}

void sub_100025B08()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_10002B3D8();
  *v0 = sub_1000259FC(v1);
  v0[1] = v2;
  sub_100005D3C();
}

uint64_t sub_100025B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10002B01C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100025B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10002B01C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_100025BD0(char *a1)
{
  sub_10000C448(*a1);
}

uint64_t sub_100025BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v5 = sub_10000893C();
  v33 = *(_QWORD *)(v5 - 8);
  sub_100008894();
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)sub_10002B404();
  v10 = *((_QWORD *)v9 - 1);
  __chkstk_darwin(v9);
  sub_10001F2B4();
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = sub_1000191FC();
  v16 = *(_QWORD *)(a1 + *(int *)(v14 + 40));
  if (*(_QWORD *)(v16 + 16))
  {
    v17 = v14;
    v32 = v5;
    v18 = *(unsigned __int8 *)(v10 + 80);
    sub_10002B39C(v16 + ((v18 + 32) & ~v18), v15, type metadata accessor for PosterDataModel.DataPoint);
    static GeoHandler.getElevation(for:timeZone:on:)(a1 + *(int *)(v17 + 24), a2, *(double *)(a1 + 16), *(double *)(a1 + 24));
    v19 = sub_1000088F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v2, a2, v19);
    v20 = sub_100008934();
    sub_10002B1F0(v20);
    v21 = *(_QWORD *)&v13[v9[6]];
    v22 = *(_QWORD *)&v13[v9[7]];
    v23 = sub_10000892C();
    sub_10002B1F0(v23);
    v25 = v32;
    v24 = v33;
    v26 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 16))(v2 + v9[9], v8, v32);
    v27 = Elevation.degrees.getter(v26) > 0.0;
    *(_QWORD *)(v2 + v9[6]) = v21;
    *(_QWORD *)(v2 + v9[7]) = v22;
    *(_BYTE *)(v2 + v9[10]) = v27;
    v28 = sub_100005350(&qword_10005C0A8);
    v29 = *(_QWORD *)(v10 + 72);
    v16 = swift_allocObject(v28, ((v18 + 32) & ~v18) + 2 * v29, v18 | 7);
    *(_OWORD *)(v16 + 16) = xmmword_100045E20;
    v30 = v16 + ((v18 + 32) & ~v18);
    sub_10001352C((uint64_t)v13, v30, type metadata accessor for PosterDataModel.DataPoint);
    sub_1000134CC(v2, v30 + v29, type metadata accessor for PosterDataModel.DataPoint);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
    sub_10000AB38((uint64_t)v13, type metadata accessor for PosterDataModel.DataPoint);
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + *(int *)(v14 + 40)));
  }
  return v16;
}

uint64_t sub_100025E08(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51[3];

  v6 = v1;
  sub_100005350((uint64_t *)&unk_10005D940);
  sub_100008864();
  __chkstk_darwin(v8);
  sub_10002B0E4();
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v9);
  v11 = (char *)&v51[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000088F4();
  sub_10002B350();
  __chkstk_darwin(v13);
  sub_10001F2B4();
  __chkstk_darwin(v14);
  v16 = (char *)&v51[-1] - v15;
  sub_10000AD40(v6, v3, (uint64_t *)&unk_10005D940);
  v17 = sub_10002B404();
  sub_10002B0FC(v3, 1, v17);
  if (v18)
  {
    sub_10000AB60(v3, (uint64_t *)&unk_10005D940);
    sub_10002B3B8((uint64_t)v11, 1);
LABEL_6:
    sub_10000AB60((uint64_t)v11, (uint64_t *)&unk_10005C4C0);
    return 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v11, v3, v12);
  sub_10000AB38(v3, type metadata accessor for PosterDataModel.DataPoint);
  sub_10002B3B8((uint64_t)v11, 0);
  sub_10002B0FC((uint64_t)v11, 1, v12);
  if (v18)
    goto LABEL_6;
  v20 = sub_10002B3CC();
  v22 = v21(v20);
  Date.init()(v22);
  v23 = Date.timeIntervalSince(_:)(v16);
  sub_10002B3C4(v2);
  if (v23 >= a1)
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_10000AADC(v37, (uint64_t)qword_1000608C8);
    v39 = (void *)Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (sub_10002B330(v40))
    {
      v41 = sub_10000B0C8(22);
      v42 = sub_10000B0C8(64);
      v43 = sub_10002B144(v42, 4.8752e-34);
      Double.write<A>(to:)(v51, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v43);
      sub_10002B09C();
      v44 = sub_10002B0C8();
      sub_10002B110(v44);
      sub_100005D2C();
      v45 = sub_10002B190();
      Double.write<A>(to:)(v45, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v46);
      sub_10002B09C();
      v51[0] = sub_10002B0C8();
      sub_10002B12C(v51[0], v5 + 8, v47, v41 + 22);
      sub_100005D2C();
      sub_10002B240((void *)&_mh_execute_header, v48, v49, "Data point requires update; age=%{public}s, maxAge=%{public}s");
      sub_10002B360((uint64_t)&type metadata for Any);
      sub_10000AFFC(v42);
      sub_10000AFFC(v41);
    }

    sub_10002B3C4((uint64_t)v16);
    return 1;
  }
  if (qword_10005BB58 != -1)
    swift_once(&qword_10005BB58, sub_100042334);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_10000AADC(v24, (uint64_t)qword_1000608C8);
  v26 = (void *)Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter();
  if (sub_10002B330(v27))
  {
    v28 = sub_10000B0C8(22);
    v29 = sub_10000B0C8(64);
    v30 = sub_10002B144(v29, 4.8752e-34);
    Double.write<A>(to:)(v51, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v30);
    sub_10002B09C();
    v31 = sub_10002B0C8();
    sub_10002B110(v31);
    sub_100005D2C();
    v32 = sub_10002B190();
    Double.write<A>(to:)(v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v33);
    sub_10002B09C();
    v51[0] = sub_10002B0C8();
    sub_10002B12C(v51[0], v5 + 8, v34, v28 + 22);
    sub_100005D2C();
    sub_10002B240((void *)&_mh_execute_header, v35, v36, "Data point does not require update; age=%{public}s, maxAge=%{public}s");
    sub_10002B360((uint64_t)&type metadata for Any);
    sub_10000AFFC(v29);
    sub_10000AFFC(v28);
  }

  sub_10002B3C4((uint64_t)v16);
  return 0;
}

void sub_1000261E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v18 = sub_1000191FC();
  sub_100008864();
  __chkstk_darwin(v5);
  sub_10002B0E4();
  v6 = type metadata accessor for PosterData(0);
  sub_100008864();
  __chkstk_darwin(v7);
  sub_100013B18();
  v10 = (char *)(v9 - v8);
  v11 = sub_100005350(&qword_10005CC48);
  sub_10002B350();
  __chkstk_darwin(v12);
  sub_100013B40();
  v13 = a1[3];
  v14 = a1[4];
  sub_100029290(a1, v13);
  v15 = sub_1000292B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for PosterData.CodingKeys, &type metadata for PosterData.CodingKeys, v15, v13, v14);
  sub_10001352C(v19, (uint64_t)v10, type metadata accessor for PosterData);
  if (swift_getEnumCaseMultiPayload(v10, v6) == 1)
  {
    sub_1000134CC((uint64_t)v10, v1, type metadata accessor for PosterDataModel);
    v22 = 1;
    sub_1000059B4(&qword_10005CC50, type metadata accessor for PosterDataModel, (uint64_t)&unk_100046450);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v1, &v22, v11, v18, v16);
    sub_10000AB38(v1, type metadata accessor for PosterDataModel);
  }
  else
  {
    v21 = *v10;
    v20 = 0;
    v17 = sub_10002932C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v11, &type metadata for PosterDataError, v17);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v11);
  sub_10002B0B0();
}

void sub_100026398(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_10002B270(v6, v15);
  v19 = sub_1000191FC();
  sub_100008864();
  __chkstk_darwin(v7);
  sub_100013B40();
  v18 = sub_100005350(&qword_10005CC28);
  sub_10002B350();
  __chkstk_darwin(v8);
  sub_100013B18();
  v9 = type metadata accessor for PosterData(0);
  sub_100008864();
  __chkstk_darwin(v10);
  sub_10001F230();
  v11 = a1[3];
  v12 = a1[4];
  sub_100029290(a1, v11);
  v13 = sub_1000292B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PosterData.CodingKeys, &type metadata for PosterData.CodingKeys, v13, v11, v12);
  if (!v20)
  {
    v21 = 1;
    sub_1000059B4(&qword_10005CC38, type metadata accessor for PosterDataModel, (uint64_t)&unk_100046478);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v19, &v21, v18, v19, v14);
    sub_10002B3AC(v17, 0);
    sub_10002B2C0();
    sub_10002B310(v17, v3);
    sub_10002B310(v3, v2);
    swift_storeEnumTagMultiPayload(v2, v9, 1);
    sub_1000134CC(v2, a2, type metadata accessor for PosterData);
  }
  sub_100013750(a1);
  sub_10002B0B0();
}

uint64_t sub_100026690(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000559B0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_1000266E4()
{
  return 2;
}

uint64_t sub_1000266EC()
{
  return 0;
}

uint64_t sub_1000266F8(char a1)
{
  if ((a1 & 1) != 0)
    return 1635017060;
  else
    return 0x726F727265;
}

void sub_100026724(char *a1, unsigned __int8 *a2)
{
  sub_10000C56C(*a1, *a2);
}

void sub_100026730()
{
  char *v0;

  sub_100022F64(*v0);
}

uint64_t sub_100026738(uint64_t a1)
{
  char *v1;

  return sub_10001F75C(a1, *v1);
}

void sub_100026740(uint64_t a1)
{
  char *v1;

  sub_10001F7A4(a1, *v1);
}

uint64_t sub_100026748@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100026690(*a1);
  *a2 = result;
  return result;
}

void sub_100026774()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;

  v1 = sub_10002B3D8();
  *v0 = sub_1000266F8(v1);
  v0[1] = v2;
  sub_100005D3C();
}

uint64_t sub_100026794()
{
  char *v0;

  return sub_1000266F8(*v0);
}

uint64_t sub_10002679C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1000266E0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000267C0()
{
  return sub_1000266EC();
}

uint64_t sub_1000267DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1000266E4();
  *a1 = result;
  return result;
}

uint64_t sub_100026800(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000292B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100026828(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1000292B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100026850(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100026398(a1, a2);
}

void sub_100026864(_QWORD *a1)
{
  sub_1000261E8(a1);
}

uint64_t sub_100026878(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = sub_100005350(&qword_10005CC98);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100029290(a1, a1[3]);
  v7 = sub_100029368();
  sub_10002B28C((uint64_t)&type metadata for PosterDataModel.DataPoint.CodingKeys, v8, v7);
  type metadata accessor for Date(0);
  sub_1000059B4(&qword_10005CCA0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  sub_10002B090();
  if (!v2)
  {
    v9 = type metadata accessor for PosterDataModel.DataPoint(0);
    type metadata accessor for WeatherCondition(0);
    sub_1000059B4(&qword_10005CCA8, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
    sub_10002B090();
    sub_10002B1D8(2);
    sub_10002B1D8(3);
    type metadata accessor for CloudAltitudeKind(0);
    sub_1000059B4(&qword_10005CCB0, (uint64_t (*)(uint64_t))&type metadata accessor for CloudAltitudeKind, (uint64_t)&protocol conformance descriptor for CloudAltitudeKind);
    v10 = sub_10002B090();
    Elevation.degrees.getter(v10);
    sub_1000293E0();
    v11 = sub_10002B090();
    v12 = Elevation.isPM.getter(v11);
    sub_10002B2A0(v12 & 1);
    sub_10002B2A0(*(unsigned __int8 *)(v3 + *(int *)(v9 + 40)));
  }
  return sub_10002B138(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
}

uint64_t sub_100026AE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char v28;
  char v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  double v47;

  v33 = type metadata accessor for Elevation(0);
  v34 = *(_QWORD *)(v33 - 8);
  sub_100008894();
  __chkstk_darwin(v4);
  sub_10002B254(v5, v31);
  sub_100005350(&qword_10005CC60);
  sub_100008864();
  __chkstk_darwin(v6);
  v8 = sub_10002B1B8(v7, v32);
  v38 = type metadata accessor for CloudAltitudeKind(v8);
  v36 = *(_QWORD *)(v38 - 8);
  sub_100008894();
  __chkstk_darwin(v9);
  sub_100008850();
  v37 = v10;
  v11 = type metadata accessor for WeatherCondition(0);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  sub_100008894();
  __chkstk_darwin(v12);
  sub_10001F230();
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100008850();
  v43 = v15;
  v16 = sub_100005350(&qword_10005CC68);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_100013B28();
  v18 = a1[3];
  v19 = a1[4];
  v44 = a1;
  sub_100029290(a1, v18);
  v20 = sub_100029368();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PosterDataModel.DataPoint.CodingKeys, &type metadata for PosterDataModel.DataPoint.CodingKeys, v20, v18, v19);
  if (!v45)
  {
    sub_1000059B4(&qword_10005CC78, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    sub_10002B188();
    sub_1000059B4(&qword_10005CC80, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
    sub_10002B188();
    sub_10002B220(2);
    v23 = v22;
    sub_10002B220(3);
    v25 = v24;
    LOBYTE(v47) = 4;
    sub_1000059B4(&qword_10005CC88, (uint64_t (*)(uint64_t))&type metadata accessor for CloudAltitudeKind, (uint64_t)&protocol conformance descriptor for CloudAltitudeKind);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v38, &v47, v16, v38, v26);
    if (sub_100006580(v41, 1, v38) == 1)
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 104))(v37, enum case for CloudAltitudeKind.low(_:), v38);
      sub_10000AB60(v41, &qword_10005CC60);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v37, v41, v38);
    }
    sub_1000293A4();
    sub_10002B188();
    v27 = v47;
    v46 = 6;
    v28 = sub_10002B340((uint64_t)&v46);
    Elevation.init(_:isPM:)(v28 & 1, v27);
    LOBYTE(v47) = 7;
    v29 = sub_10002B340((uint64_t)&v47);
    sub_10002B390(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(a2, v43, v13);
    v30 = (int *)type metadata accessor for PosterDataModel.DataPoint(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(a2 + v30[5], v2, v40);
    *(_QWORD *)(a2 + v30[6]) = v23;
    *(_QWORD *)(a2 + v30[7]) = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(a2 + v30[8], v37, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(a2 + v30[9], v35, v33);
    *(_BYTE *)(a2 + v30[10]) = v29 & 1;
  }
  return sub_100013750(v44);
}

unint64_t sub_100026F8C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100055A00, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

uint64_t sub_100026FD8()
{
  return 8;
}

uint64_t sub_100026FE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10002700C + 4 * byte_100046298[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_10002700C()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1000270B8()
{
  return 0x67696C7961447369;
}

uint64_t sub_1000270D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100027104 + 4 * byte_1000462A0[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_100027104()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1000271B0()
{
  return 0x67696C7961447369;
}

void sub_1000271D0(char *a1)
{
  sub_10000C228(*a1);
}

void sub_1000271DC()
{
  unsigned __int8 *v0;

  sub_100022F70(*v0);
}

void sub_1000271E4(uint64_t a1)
{
  char *v1;

  sub_10001F5B0(a1, *v1);
}

void sub_1000271EC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_10001F82C(a1, *v1);
}

unint64_t sub_1000271F4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100026F8C(*a1);
  *a2 = result;
  return result;
}

void sub_100027220()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_10002B3D8();
  *v0 = sub_100026FE0(v1);
  v0[1] = v2;
  sub_100005D3C();
}

uint64_t sub_100027240()
{
  unsigned __int8 *v0;

  return sub_1000270D8(*v0);
}

uint64_t sub_100027248@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100026FD4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10002726C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100026FD8();
  *a1 = result;
  return result;
}

uint64_t sub_100027290(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100029368();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000272B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100029368();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000272E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100026AE0(a1, a2);
}

uint64_t sub_1000272F4(_QWORD *a1)
{
  return sub_100026878(a1);
}

void sub_100027308(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = sub_100005350(&qword_10005CD08);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100029290(a1, a1[3]);
  v7 = sub_10002941C();
  sub_10002B28C((uint64_t)&type metadata for PosterDataModel.CodingKeys, v8, v7);
  sub_10002B2DC(*v3, v3[1]);
  if (!v2)
  {
    type metadata accessor for CLLocationCoordinate2D(0);
    sub_1000059B4(&qword_10005CD10, (uint64_t (*)(uint64_t))type metadata accessor for CLLocationCoordinate2D, (uint64_t)&protocol conformance descriptor for CLLocationCoordinate2D);
    sub_10002B090();
    v9 = sub_1000191FC();
    v11 = TimeZone.identifier.getter(v9, v10);
    v13 = v12;
    sub_10002B2DC(v11, v12);
    swift_bridgeObjectRelease(v13);
    sub_100005350((uint64_t *)&unk_10005C4C0);
    sub_1000297F0(&qword_10005CD18, &qword_10005CCA0, (uint64_t)&protocol conformance descriptor for Date, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_10002B40C();
    sub_10002B090();
    sub_10002B090();
    sub_100005350(&qword_10005BE78);
    sub_100029874();
    sub_10002B40C();
    sub_10002B090();
    sub_100005350(&qword_10005CD30);
    sub_1000298F0();
    sub_10002B090();
  }
  sub_10002B138(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_10002B0B0();
}

uint64_t sub_10002756C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t *v62;
  unint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  _QWORD v91[3];
  uint64_t v92;

  v76 = a2;
  sub_100005350((uint64_t *)&unk_10005D940);
  sub_100008864();
  __chkstk_darwin(v4);
  v6 = sub_10002B1B8(v5, v68);
  v86 = type metadata accessor for PosterDataModel.DataPoint(v6);
  v79 = *(_QWORD *)(v86 - 8);
  sub_100008894();
  __chkstk_darwin(v7);
  sub_1000088BC();
  v80 = v8;
  sub_10000896C();
  __chkstk_darwin(v9);
  v78 = (uint64_t)&v68 - v10;
  v75 = *(_QWORD *)(sub_100005350(&qword_10005CCC0) - 8);
  sub_100008894();
  __chkstk_darwin(v11);
  sub_10002B254(v12, v68);
  sub_100005350(&qword_10005BE78);
  sub_100008864();
  __chkstk_darwin(v13);
  sub_100008850();
  v77 = v14;
  v83 = sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v15);
  sub_1000088BC();
  v82 = v16;
  sub_10000896C();
  __chkstk_darwin(v17);
  v84 = (uint64_t)&v68 - v18;
  sub_100005350(&qword_10005C0A0);
  sub_100008864();
  __chkstk_darwin(v19);
  sub_100008850();
  v85 = v20;
  v21 = type metadata accessor for TimeZone(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_100013B18();
  v25 = v24 - v23;
  v26 = sub_100005350(&qword_10005CCC8);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  sub_10001F230();
  v29 = a1[3];
  v28 = a1[4];
  v88 = a1;
  sub_100029290(a1, v29);
  v30 = sub_10002941C();
  v31 = v89;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PosterDataModel.CodingKeys, &type metadata for PosterDataModel.CodingKeys, v30, v29, v28);
  if (!v31)
  {
    v32 = v85;
    v73 = v22;
    v74 = v25;
    v33 = v86;
    v34 = v87;
    v89 = v21;
    LOBYTE(v91[0]) = 0;
    v71 = sub_10002B320((uint64_t)v91);
    v72 = v35;
    type metadata accessor for CLLocationCoordinate2D(0);
    LOBYTE(v92) = 1;
    sub_1000059B4(&qword_10005CCD8, (uint64_t (*)(uint64_t))type metadata accessor for CLLocationCoordinate2D, (uint64_t)&protocol conformance descriptor for CLLocationCoordinate2D);
    sub_10002B188();
    v36 = v91[0];
    v37 = v91[1];
    LOBYTE(v92) = 2;
    v38 = sub_10002B320((uint64_t)&v92);
    v41 = v40;
    TimeZone.init(identifier:)(v38);
    swift_bridgeObjectRelease(v41);
    v42 = v89;
    v43 = sub_100006580((uint64_t)v32, 1, v89);
    v70 = v2;
    if ((_DWORD)v43 == 1)
    {
      static TimeZone.current.getter(v43, v44, v45, v46, v47, v48, v49, v50, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86);
      sub_10000AB60((uint64_t)v32, &qword_10005C0A0);
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t *, uint64_t))(v73 + 32))(v74, v32, v42);
    }
    LOBYTE(v92) = 3;
    sub_1000297F0(&qword_10005CCE0, &qword_10005CC78, (uint64_t)&protocol conformance descriptor for Date, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_10002B37C();
    sub_10002B188();
    LOBYTE(v92) = 4;
    sub_10002B37C();
    sub_10002B188();
    v51 = type metadata accessor for BackgroundMoonData(0);
    LOBYTE(v92) = 5;
    sub_1000059B4(&qword_10005CCE8, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v51, &v92, v26, v51, v52);
    sub_100005350(&qword_10005CCF0);
    v90 = 6;
    sub_100029458();
    sub_10002B188();
    v69 = v26;
    v53 = *(_QWORD *)(v92 + 16);
    if (v53)
    {
      v54 = v92 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      v83 = *(_QWORD *)(v75 + 72);
      v75 = v92;
      swift_bridgeObjectRetain(v92);
      v85 = (unint64_t *)&_swiftEmptyArrayStorage;
      v55 = v34;
      v56 = v81;
      do
      {
        sub_10000AD40(v54, v56, &qword_10005CCC0);
        sub_10000AD40(v56, v55, (uint64_t *)&unk_10005D940);
        sub_10000AB60(v56, &qword_10005CCC0);
        if (sub_100006580(v55, 1, v33) == 1)
        {
          sub_10000AB60(v55, (uint64_t *)&unk_10005D940);
        }
        else
        {
          v57 = v55;
          v58 = v78;
          sub_10002B310(v57, v78);
          sub_10002B310(v58, v80);
          if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) == 0)
            v85 = (unint64_t *)sub_100029500(0, v85[2] + 1, 1, (uint64_t)v85);
          v59 = v79;
          v61 = v85[2];
          v60 = v85[3];
          if (v61 >= v60 >> 1)
          {
            v63 = (unint64_t *)sub_100029500(v60 > 1, v61 + 1, 1, (uint64_t)v85);
            v59 = v79;
            v85 = v63;
          }
          v62 = v85;
          v85[2] = v61 + 1;
          sub_1000134CC(v80, (uint64_t)v62+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v61, type metadata accessor for PosterDataModel.DataPoint);
          v55 = v34;
        }
        v54 += v83;
        --v53;
        v56 = v81;
      }
      while (v53);
      swift_bridgeObjectRelease_n(v75, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v92);
      v85 = (unint64_t *)&_swiftEmptyArrayStorage;
    }
    v65 = v76;
    v64 = v77;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v70, v69);
    v66 = v72;
    *v65 = v71;
    v65[1] = v66;
    v65[2] = v36;
    v65[3] = v37;
    v67 = (int *)sub_1000191FC();
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))((char *)v65 + v67[6], v74, v89);
    sub_10000AD6C(v84, (uint64_t)v65 + v67[7], (uint64_t *)&unk_10005C4C0);
    sub_10000AD6C(v82, (uint64_t)v65 + v67[8], (uint64_t *)&unk_10005C4C0);
    sub_10000AD6C(v64, (uint64_t)v65 + v67[9], &qword_10005BE78);
    *(uint64_t *)((char *)v65 + v67[10]) = (uint64_t)v85;
  }
  return sub_100013750(v88);
}

unint64_t sub_100027D08(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100055AE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_100027D54()
{
  return 7;
}

uint64_t sub_100027D5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100027D90 + 4 * byte_1000462A8[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_100027D90()
{
  return 0x616E6964726F6F63;
}

unint64_t sub_100027DAC()
{
  return 0xD000000000000012;
}

uint64_t sub_100027DC8()
{
  return 0x657369726E7573;
}

uint64_t sub_100027DDC()
{
  return 0x7465736E7573;
}

uint64_t sub_100027DF0()
{
  return 0x617461446E6F6F6DLL;
}

uint64_t sub_100027E10()
{
  return 0x4472656874616577;
}

uint64_t sub_100027E30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100027E64 + 4 * byte_1000462AF[a1]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_100027E64()
{
  return 0x616E6964726F6F63;
}

unint64_t sub_100027E80()
{
  return 0xD000000000000012;
}

uint64_t sub_100027E9C()
{
  return 0x657369726E7573;
}

uint64_t sub_100027EB0()
{
  return 0x7465736E7573;
}

uint64_t sub_100027EC4()
{
  return 0x617461446E6F6F6DLL;
}

uint64_t sub_100027EE4()
{
  return 0x4472656874616577;
}

void sub_100027F04(char *a1)
{
  sub_10000C044(*a1);
}

void sub_100027F10()
{
  unsigned __int8 *v0;

  sub_100022F7C(*v0);
}

void sub_100027F18(uint64_t a1)
{
  char *v1;

  sub_10001F4C4(a1, *v1);
}

void sub_100027F20(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_10001F838(a1, *v1);
}

unint64_t sub_100027F28@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100027D08(*a1);
  *a2 = result;
  return result;
}

void sub_100027F54()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = sub_10002B3D8();
  *v0 = sub_100027D5C(v1);
  v0[1] = v2;
  sub_100005D3C();
}

uint64_t sub_100027F74()
{
  unsigned __int8 *v0;

  return sub_100027E30(*v0);
}

uint64_t sub_100027F7C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100027D50(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100027FA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_100027D54();
  *a1 = result;
  return result;
}

uint64_t sub_100027FC4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002941C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100027FEC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002941C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100028014@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002756C(a1, a2);
}

void sub_100028028(_QWORD *a1)
{
  sub_100027308(a1);
}

uint64_t sub_10002803C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a4;
  v31 = type metadata accessor for Optional(0, a2);
  v34 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v32 = (char *)&v26 - v8;
  v33 = a3;
  v10 = type metadata accessor for SingleValueDecodable(0, a2, a3, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - v12;
  v14 = a1[3];
  v15 = a1[4];
  sub_100029290(a1, v14);
  dispatch thunk of Decoder.singleValueContainer()(v35, v14, v15);
  if (v4)
  {
    v16 = a1;
  }
  else
  {
    v27 = v13;
    v28 = v11;
    v29 = a1;
    v30 = v10;
    v17 = v31;
    v18 = v36;
    v19 = v37;
    sub_100029290(v35, v36);
    v20 = (uint64_t)v32;
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(a2, a2, v33, v18, v19);
    v21 = v38;
    v22 = v34;
    v23 = v30;
    sub_10000658C(v20, 0, 1, a2);
    v24 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v27, v20, v17);
    sub_100013750(v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v21, v24, v23);
    v16 = v29;
  }
  return sub_100013750(v16);
}

uint64_t sub_100028200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10002803C(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_10002821C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  Swift::String v13;
  _QWORD v15[2];

  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin();
  sub_10002B0E4();
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v15, "[weatherData:");
  HIWORD(v15[1]) = -4864;
  v1 = (int *)sub_1000191FC();
  v2 = *(_QWORD *)(v0 + v1[10]);
  v3 = sub_10002B404();
  v4 = swift_bridgeObjectRetain(v2);
  v5 = Array.description.getter(v4, v3);
  v7 = v6;
  sub_100005D2C();
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  v9._countAndFlagsBits = 0x7369726E7573202CLL;
  v9._object = (void *)0xEA00000000003A65;
  String.append(_:)(v9);
  sub_10002B300(v1[7]);
  v10._countAndFlagsBits = sub_10002B3F8();
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._countAndFlagsBits = 0x7465736E7573202CLL;
  v12._object = (void *)0xE90000000000003ALL;
  String.append(_:)(v12);
  sub_10002B300(v1[8]);
  v13._countAndFlagsBits = sub_10002B3F8();
  String.append(_:)(v13);
  sub_1000139C8();
  sub_10002B370();
  return v15[0];
}

uint64_t sub_100028388()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  double v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;

  _StringGuts.grow(_:)(53);
  v1._countAndFlagsBits = 0x697469646E6F635BLL;
  v1._object = (void *)0xEB000000003A6E6FLL;
  String.append(_:)(v1);
  v2 = type metadata accessor for PosterDataModel.DataPoint(0);
  v14._countAndFlagsBits = WeatherCondition.rawValue.getter(v2);
  sub_10002B2B4(v14);
  sub_10002B3A4();
  v3._countAndFlagsBits = 0x3A65746164202CLL;
  v3._object = (void *)0xE700000000000000;
  String.append(_:)(v3);
  v4 = sub_1000088F4();
  sub_1000059B4((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v5);
  sub_10002B2B4(v15);
  sub_10002B3A4();
  v6._countAndFlagsBits = 0x746176656C65202CLL;
  v6._object = (void *)0xEC0000003A6E6F69;
  String.append(_:)(v6);
  v8 = Elevation.degrees.getter(v7);
  v16._countAndFlagsBits = Double.description.getter(v8);
  sub_10002B2B4(v16);
  sub_10002B3A4();
  v9._countAndFlagsBits = 0x6C7961447369202CLL;
  v9._object = (void *)0xEE00203A74686769;
  String.append(_:)(v9);
  if (*(_BYTE *)(v0 + *(int *)(v2 + 40)))
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if (*(_BYTE *)(v0 + *(int *)(v2 + 40)))
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  sub_1000139C8();
  sub_10002B370();
  return 0;
}

void sub_10002851C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;

  type metadata accessor for PosterDataModel(0);
  sub_100008864();
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PosterData(0);
  sub_100008864();
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v22 - v11;
  sub_100005350(&qword_10005CC20);
  sub_100008864();
  __chkstk_darwin(v13);
  sub_100013B18();
  v16 = v15 - v14;
  v18 = v15 - v14 + *(int *)(v17 + 48);
  sub_10001352C(a1, v15 - v14, type metadata accessor for PosterData);
  sub_10001352C(a2, v18, type metadata accessor for PosterData);
  if (sub_10002B238(v16) != 1)
  {
    sub_10001352C(v16, (uint64_t)v12, type metadata accessor for PosterData);
    if (sub_10002B238(v18) != 1)
    {
      sub_10000C448(*v12);
      goto LABEL_6;
    }
LABEL_8:
    sub_10000AB60(v16, &qword_10005CC20);
    goto LABEL_9;
  }
  sub_10002B39C(v16, v19, type metadata accessor for PosterData);
  if (sub_10002B238(v18) != 1)
  {
    sub_10000AB38((uint64_t)v10, type metadata accessor for PosterDataModel);
    goto LABEL_8;
  }
  sub_1000134CC(v18, (uint64_t)v6, type metadata accessor for PosterDataModel);
  v20 = (double *)sub_10002B3CC();
  sub_1000286F4(v20, v21);
  sub_10000AB38((uint64_t)v6, type metadata accessor for PosterDataModel);
  sub_10000AB38((uint64_t)v10, type metadata accessor for PosterDataModel);
LABEL_6:
  sub_10000AB38(v16, type metadata accessor for PosterData);
LABEL_9:
  sub_1000139A8();
}

void sub_1000286F4(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(uint64_t, uint64_t);
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v5 = type metadata accessor for BackgroundMoonData(0);
  v88 = *(_QWORD *)(v5 - 8);
  sub_100008894();
  __chkstk_darwin(v6);
  sub_100008850();
  v87 = v7;
  v90 = sub_100005350(&qword_10005BF58);
  sub_100008864();
  __chkstk_darwin(v8);
  sub_100013B28();
  sub_100005350(&qword_10005BE78);
  sub_100008864();
  __chkstk_darwin(v9);
  sub_1000088BC();
  v89 = v10;
  sub_10000896C();
  __chkstk_darwin(v11);
  v93 = (uint64_t)&v81 - v12;
  sub_10000896C();
  __chkstk_darwin(v13);
  v91 = (uint64_t)&v81 - v14;
  v15 = sub_1000088F4();
  v98 = *(_QWORD *)(v15 - 8);
  sub_100008894();
  __chkstk_darwin(v16);
  sub_10002B270(v17, v81);
  v18 = sub_100005350(&qword_10005BF60);
  sub_100008864();
  __chkstk_darwin(v19);
  sub_1000088BC();
  v95 = v20;
  sub_10000896C();
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - v22;
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v24);
  sub_1000088BC();
  v92 = v25;
  sub_10000896C();
  __chkstk_darwin(v26);
  v97 = (uint64_t)&v81 - v27;
  sub_10000896C();
  __chkstk_darwin(v28);
  v96 = (uint64_t)&v81 - v29;
  sub_10000896C();
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v81 - v32;
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v81 - v35;
  __chkstk_darwin(v34);
  v38 = (char *)&v81 - v37;
  v39 = *a1;
  v40 = *((_QWORD *)a1 + 1);
  v41 = *(_QWORD *)(a2 + 8);
  v42 = *(_QWORD *)a1 == *(_QWORD *)a2 && v40 == v41;
  if (!v42)
  {
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v39, v40, *(_QWORD *)a2, v41, 0);
    v39 = 0.0;
    if ((v43 & 1) == 0)
      goto LABEL_38;
  }
  if ((static CLLocationCoordinate2D.== infix(_:_:)(*(_QWORD *)&v39, a1[2], a1[3], *(double *)(a2 + 16), *(double *)(a2 + 24)) & 1) == 0)goto LABEL_38;
  v86 = v15;
  v44 = sub_1000191FC();
  if ((static TimeZone.== infix(_:_:)((char *)a1 + *(int *)(v44 + 24), a2 + *(int *)(v44 + 24)) & 1) == 0)
    goto LABEL_38;
  v83 = v5;
  v84 = v2;
  sub_10002B2F8((uint64_t)a1 + *(int *)(v44 + 28), (uint64_t)v38);
  v85 = (int *)v44;
  sub_10002B2F8(a2 + *(int *)(v44 + 28), (uint64_t)v36);
  v45 = (uint64_t)&v23[*(int *)(v18 + 48)];
  sub_10002B2F8((uint64_t)v38, (uint64_t)v23);
  sub_10002B2F8((uint64_t)v36, v45);
  v46 = v86;
  sub_10002B0FC((uint64_t)v23, 1, v86);
  if (v42)
  {
    sub_10002B170((uint64_t)v36);
    sub_10002B170((uint64_t)v38);
    sub_1000088A0(v45);
    if (v42)
    {
      sub_10000AB60((uint64_t)v23, (uint64_t *)&unk_10005C4C0);
      goto LABEL_18;
    }
LABEL_16:
    v48 = &qword_10005BF60;
    v49 = (uint64_t)v23;
LABEL_37:
    sub_10000AB60(v49, v48);
    goto LABEL_38;
  }
  sub_10000AD40((uint64_t)v23, (uint64_t)v33, (uint64_t *)&unk_10005C4C0);
  sub_1000088A0(v45);
  if (v47)
  {
    sub_10002B1B0((uint64_t)v36);
    sub_10002B1B0((uint64_t)v38);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v33, v46);
    goto LABEL_16;
  }
  v50 = v94;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v94, v45, v46);
  sub_1000059B4(&qword_10005BF78, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v52 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v50, v86, v51);
  v46 = v86;
  v82 = v52;
  v53 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  v53(v50, v86);
  sub_10002B420((uint64_t)v36);
  sub_10002B420((uint64_t)v38);
  v53((uint64_t)v33, v46);
  sub_10002B420((uint64_t)v23);
  if ((v82 & 1) == 0)
    goto LABEL_38;
LABEL_18:
  v54 = v85;
  v55 = v96;
  sub_10002B2F0((uint64_t)a1 + v85[8], v96);
  v56 = v97;
  sub_10002B2F0(a2 + v54[8], v97);
  v57 = *(int *)(v18 + 48);
  v58 = v95;
  v59 = v95 + v57;
  sub_10002B2F0(v55, v95);
  sub_10002B2F0(v56, v59);
  sub_1000088A0(v58);
  if (v42)
  {
    sub_10002B2D4(v56);
    sub_10002B2D4(v55);
    sub_1000088A0(v59);
    v60 = v83;
    v61 = v84;
    if (v42)
    {
      sub_10000AB60(v58, (uint64_t *)&unk_10005C4C0);
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  v62 = v92;
  sub_10000AD40(v58, v92, (uint64_t *)&unk_10005C4C0);
  sub_1000088A0(v59);
  v61 = v84;
  if (v63)
  {
    sub_10002B1B0(v97);
    sub_10002B1B0(v55);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v62, v46);
LABEL_26:
    v48 = &qword_10005BF60;
    v49 = v58;
    goto LABEL_37;
  }
  v64 = v98;
  v65 = v94;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v94, v59, v46);
  sub_1000059B4(&qword_10005BF78, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  LODWORD(v86) = dispatch thunk of static Equatable.== infix(_:_:)(v62, v65, v46, v66);
  v67 = v62;
  v68 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
  v68(v65, v46);
  sub_10002B2D4(v97);
  sub_10002B2D4(v96);
  v68(v67, v46);
  sub_10002B2D4(v58);
  v60 = v83;
  if ((v86 & 1) == 0)
    goto LABEL_38;
LABEL_28:
  v69 = v91;
  sub_10002B318((uint64_t)a1 + v54[9], v91);
  v70 = v93;
  sub_10002B318(a2 + v54[9], v93);
  v71 = v61 + *(int *)(v90 + 48);
  sub_10002B318(v69, v61);
  sub_10002B318(v70, v71);
  sub_10002B0FC(v61, 1, v60);
  if (v42)
  {
    sub_10002B170(v70);
    sub_10002B170(v69);
    sub_10002B0FC(v71, 1, v60);
    if (v42)
    {
      sub_10000AB60(v61, &qword_10005BE78);
LABEL_40:
      sub_100028F10(*(_QWORD *)((char *)a1 + v54[10]), *(_QWORD *)(a2 + v54[10]));
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  v72 = v89;
  sub_10000AD40(v61, v89, &qword_10005BE78);
  sub_10002B0FC(v71, 1, v60);
  if (v73)
  {
    sub_10002B1B0(v93);
    sub_10002B1B0(v69);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v72, v60);
LABEL_36:
    v48 = &qword_10005BF58;
    v49 = v61;
    goto LABEL_37;
  }
  v74 = v88;
  v75 = v69;
  v76 = v87;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v87, v71, v60);
  sub_1000059B4(&qword_10005BF70, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
  v78 = dispatch thunk of static Equatable.== infix(_:_:)(v72, v76, v60, v77);
  v79 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
  v79(v76, v60);
  sub_10002B170(v93);
  v80 = v75;
  v54 = v85;
  sub_10002B170(v80);
  v79(v72, v60);
  sub_10002B170(v61);
  if ((v78 & 1) != 0)
    goto LABEL_40;
LABEL_38:
  sub_1000139A8();
}

void sub_100028E40(uint64_t a1, uint64_t a2)
{
  int *v4;

  if ((static Date.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    v4 = (int *)type metadata accessor for PosterDataModel.DataPoint(0);
    if ((sub_10000C20C(a1 + v4[5], a2 + v4[5]) & 1) != 0
      && *(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])
      && *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7])
      && (static CloudAltitudeKind.== infix(_:_:)(a1 + v4[8], a2 + v4[8]) & 1) != 0)
    {
      static Elevation.== infix(_:_:)(a1 + v4[9], a2 + v4[9]);
    }
  }
  sub_100013994();
}

uint64_t sub_100028F10(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = (int *)type metadata accessor for PosterDataModel.DataPoint(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v27 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v25 = 0;
    return v25 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v28 = *(_QWORD *)(v8 + 72);
    v29 = a2;
    v13 = v11 - 1;
    v14 = type metadata accessor for PosterDataModel.DataPoint;
    v30 = a1;
    while (1)
    {
      v15 = v13;
      sub_10001352C(a1 + v12, (uint64_t)v10, v14);
      v16 = v14;
      sub_10001352C(a2 + v12, (uint64_t)v7, v14);
      if ((static Date.== infix(_:_:)(v10, v7) & 1) == 0)
        break;
      v17 = type metadata accessor for WeatherCondition(0);
      sub_1000059B4(&qword_10005C368, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
      v19 = v18;
      dispatch thunk of RawRepresentable.rawValue.getter(v17, v18);
      dispatch thunk of RawRepresentable.rawValue.getter(v17, v19);
      v20 = v34;
      v21 = v32;
      if (v33 == v31 && v34 == v32)
      {
        swift_bridgeObjectRelease_n(v34, 2);
      }
      else
      {
        v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v31, v32, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v21);
        if ((v23 & 1) == 0)
          break;
      }
      if (*(double *)&v10[v4[6]] != *(double *)&v7[v4[6]]
        || *(double *)&v10[v4[7]] != *(double *)&v7[v4[7]]
        || (static CloudAltitudeKind.== infix(_:_:)(&v10[v4[8]], &v7[v4[8]]) & 1) == 0
        || (static Elevation.== infix(_:_:)(&v10[v4[9]], &v7[v4[9]]) & 1) == 0)
      {
        break;
      }
      v24 = v10[v4[10]] ^ v7[v4[10]];
      v14 = v16;
      sub_10000AB38((uint64_t)v7, v16);
      sub_10000AB38((uint64_t)v10, v16);
      a2 = v29;
      a1 = v30;
      if ((v24 & 1) == 0)
      {
        v13 = v15 - 1;
        v12 += v28;
        if (v15)
          continue;
      }
      v25 = v24 ^ 1;
      return v25 & 1;
    }
    sub_10000AB38((uint64_t)v7, type metadata accessor for PosterDataModel.DataPoint);
    sub_10000AB38((uint64_t)v10, type metadata accessor for PosterDataModel.DataPoint);
    goto LABEL_22;
  }
  v25 = 1;
  return v25 & 1;
}

uint64_t type metadata accessor for PosterDataModel.DataPoint(uint64_t a1)
{
  return sub_1000291B4(a1, qword_10005CE20, (uint64_t)&nominal type descriptor for PosterDataModel.DataPoint);
}

uint64_t sub_1000291B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_1000291E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (void **)(a1 + 32);
    v4 = (void **)(a2 + 32);
    do
    {
      v6 = *v3++;
      v5 = v6;
      v8 = *v4++;
      v7 = v8;
      if (v5)
      {
        if (!v7)
          return 0;
        sub_100008814();
        v9 = v7;
        v10 = v5;
        v11 = static NSObject.== infix(_:_:)(v10, v9);

        if ((v11 & 1) == 0)
          return 0;
      }
      else if (v7)
      {
        return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

_QWORD *sub_100029290(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1000292B4()
{
  unint64_t result;

  result = qword_10005CC30;
  if (!qword_10005CC30)
  {
    result = swift_getWitnessTable(&unk_100046A38, &type metadata for PosterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CC30);
  }
  return result;
}

unint64_t sub_1000292F0()
{
  unint64_t result;

  result = qword_10005CC40;
  if (!qword_10005CC40)
  {
    result = swift_getWitnessTable(&unk_100046A10, &type metadata for PosterDataError);
    atomic_store(result, (unint64_t *)&qword_10005CC40);
  }
  return result;
}

unint64_t sub_10002932C()
{
  unint64_t result;

  result = qword_10005CC58;
  if (!qword_10005CC58)
  {
    result = swift_getWitnessTable(&unk_1000469E8, &type metadata for PosterDataError);
    atomic_store(result, (unint64_t *)&qword_10005CC58);
  }
  return result;
}

unint64_t sub_100029368()
{
  unint64_t result;

  result = qword_10005CC70;
  if (!qword_10005CC70)
  {
    result = swift_getWitnessTable(&unk_100046998, &type metadata for PosterDataModel.DataPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CC70);
  }
  return result;
}

unint64_t sub_1000293A4()
{
  unint64_t result;

  result = qword_10005CC90;
  if (!qword_10005CC90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10005CC90);
  }
  return result;
}

unint64_t sub_1000293E0()
{
  unint64_t result;

  result = qword_10005CCB8;
  if (!qword_10005CCB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10005CCB8);
  }
  return result;
}

unint64_t sub_10002941C()
{
  unint64_t result;

  result = qword_10005CCD0;
  if (!qword_10005CCD0)
  {
    result = swift_getWitnessTable(&unk_100046948, &type metadata for PosterDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CCD0);
  }
  return result;
}

unint64_t sub_100029458()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005CCF8;
  if (!qword_10005CCF8)
  {
    v1 = sub_10000AC50(&qword_10005CCF0);
    sub_1000294BC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_10005CCF8);
  }
  return result;
}

unint64_t sub_1000294BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005CD00;
  if (!qword_10005CD00)
  {
    v1 = sub_10000AC50(&qword_10005CCC0);
    result = swift_getWitnessTable(&unk_100046920, v1);
    atomic_store(result, (unint64_t *)&qword_10005CD00);
  }
  return result;
}

uint64_t sub_100029500(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_24:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_26:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100005350(&qword_10005C0A8);
  v11 = *(_QWORD *)(type metadata accessor for PosterDataModel.DataPoint(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_24;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_26;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PosterDataModel.DataPoint(0) - 8) + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = (unint64_t)v15 + v19;
  if ((a1 & 1) != 0)
  {
    sub_10001D0C0(a4 + v19, v8, v20);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    sub_1000296D0(0, v8, v20, a4);
  }
  return (uint64_t)v15;
}

uint64_t sub_1000296D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for PosterDataModel.DataPoint(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3, v11);
    swift_bridgeObjectRelease(a4);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000297F0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_10000AC50((uint64_t *)&unk_10005C4C0);
    sub_1000059B4(a2, (uint64_t (*)(uint64_t))&type metadata accessor for Date, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100029874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005CD20;
  if (!qword_10005CD20)
  {
    v1 = sub_10000AC50(&qword_10005BE78);
    sub_1000059B4(&qword_10005CD28, (uint64_t (*)(uint64_t))&type metadata accessor for BackgroundMoonData, (uint64_t)&protocol conformance descriptor for BackgroundMoonData);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10005CD20);
  }
  return result;
}

unint64_t sub_1000298F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005CD38;
  if (!qword_10005CD38)
  {
    v1 = sub_10000AC50(&qword_10005CD30);
    sub_1000059B4(qword_10005CD40, type metadata accessor for PosterDataModel.DataPoint, (uint64_t)&unk_1000464A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_10005CD38);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RenderingSessionManager.ExtensionReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterDataModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100029A40 + 4 * byte_1000462BB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100029A74 + 4 * byte_1000462B6[v4]))();
}

uint64_t sub_100029A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100029A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100029A84);
  return result;
}

uint64_t sub_100029A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100029A98);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100029A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100029AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterDataModel.CodingKeys()
{
  return &type metadata for PosterDataModel.CodingKeys;
}

uint64_t sub_100029AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100029AC8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100029B34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain(v11);
  }
  else if (sub_100006580((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    sub_10000658C((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_100029C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_100006580(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_100029C50(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_100006580((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    sub_10000658C((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_100029CE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_100006580((uint64_t)a1, 1, v5);
  v7 = sub_100006580((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      sub_10000658C((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_100029DB8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_100006580((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    sub_10000658C((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_100029E48(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = sub_100006580((uint64_t)a1, 1, v5);
  v7 = sub_100006580((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      sub_10000658C((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_100029F20(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  v15 = sub_100006580(a1, v6, v4);
  if (v15 >= 2)
    return v15 - 1;
  else
    return 0;
}

void sub_10002A04C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = &dword_100000004;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = &_mh_execute_header.magic + 1;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_10002A1E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_10002A1E8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for SingleValueDecodable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002B058(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleValueDecodable);
}

uint64_t getEnumTagSinglePayload for PosterDataModel.DataPoint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterDataModel.DataPoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10002A2EC + 4 * byte_1000462D3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10002A320 + 4 * byte_1000462CE[v4]))();
}

uint64_t sub_10002A320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002A330);
  return result;
}

uint64_t sub_10002A33C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002A344);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10002A348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterDataModel.DataPoint.CodingKeys()
{
  return &type metadata for PosterDataModel.DataPoint.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PosterData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10002A3B8 + 4 * byte_1000462DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10002A3EC + 4 * byte_1000462D8[v4]))();
}

uint64_t sub_10002A3EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A3F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002A3FCLL);
  return result;
}

uint64_t sub_10002A408(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002A410);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10002A414(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A41C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterData.CodingKeys()
{
  return &type metadata for PosterData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PosterDataError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterDataError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10002A50C + 4 * byte_1000462E7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10002A540 + 4 * byte_1000462E2[v4]))();
}

uint64_t sub_10002A540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002A550);
  return result;
}

uint64_t sub_10002A55C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002A564);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10002A568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002A570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterDataError()
{
  return &type metadata for PosterDataError;
}

_QWORD *sub_10002A58C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v21);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for WeatherCondition(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
    v13 = a3[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for CloudAltitudeKind(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Elevation(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_10002A6B4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[8];
  v8 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[9];
  v10 = type metadata accessor for Elevation(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_10002A760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10002A85C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10002A95C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10002AA58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for WeatherCondition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for CloudAltitudeKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Elevation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10002AB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002AB60);
}

void sub_10002AB60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1000088F4();
  sub_100008874();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_100008934();
    sub_100008874();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      sub_10000892C();
      sub_100008874();
      if (v12)
      {
        v7 = v13;
        v11 = a3[8];
      }
      else
      {
        sub_10000893C();
        sub_100008874();
        if (!v14)
        {
          sub_100013994();
          return;
        }
        v7 = v15;
        v11 = a3[9];
      }
    }
    v8 = a1 + v11;
  }
  sub_10002B208(v8, a2, v7);
}

uint64_t sub_10002AC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002AC24);
}

void sub_10002AC24(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1000088F4();
  sub_100008884();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_100008934();
    sub_100008884();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_10000892C();
      sub_100008884();
      if (v13)
      {
        v8 = v14;
        v12 = a4[8];
      }
      else
      {
        sub_10000893C();
        sub_100008884();
        if (!v15)
        {
          *(_BYTE *)(a1 + a4[10]) = a2 + 1;
          sub_100013994();
          return;
        }
        v8 = v16;
        v12 = a4[9];
      }
    }
    v9 = a1 + v12;
  }
  sub_10002B214(v9, a2, a2, v8);
}

uint64_t sub_10002ACC8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v7[7];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for WeatherCondition(319);
    if (v4 <= 0x3F)
    {
      v7[1] = *(_QWORD *)(result - 8) + 64;
      v7[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v7[3] = (char *)&value witness table for Builtin.Int64 + 64;
      result = type metadata accessor for CloudAltitudeKind(319);
      if (v5 <= 0x3F)
      {
        v7[4] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for Elevation(319);
        if (v6 <= 0x3F)
        {
          v7[5] = *(_QWORD *)(result - 8) + 64;
          v7[6] = &unk_100046598;
          swift_initStructMetadata(a1, 256, 7, v7, a1 + 16);
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10002ADA0()
{
  unint64_t result;

  result = qword_10005CE70;
  if (!qword_10005CE70)
  {
    result = swift_getWitnessTable(&unk_1000465B0, &type metadata for PosterDataError);
    atomic_store(result, (unint64_t *)&qword_10005CE70);
  }
  return result;
}

unint64_t sub_10002ADE0()
{
  unint64_t result;

  result = qword_10005CE78;
  if (!qword_10005CE78)
  {
    result = swift_getWitnessTable(&unk_100046718, &type metadata for PosterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CE78);
  }
  return result;
}

unint64_t sub_10002AE20()
{
  unint64_t result;

  result = qword_10005CE80;
  if (!qword_10005CE80)
  {
    result = swift_getWitnessTable(&unk_100046808, &type metadata for PosterDataModel.DataPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CE80);
  }
  return result;
}

unint64_t sub_10002AE60()
{
  unint64_t result;

  result = qword_10005CE88;
  if (!qword_10005CE88)
  {
    result = swift_getWitnessTable(&unk_1000468F8, &type metadata for PosterDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CE88);
  }
  return result;
}

unint64_t sub_10002AEA0()
{
  unint64_t result;

  result = qword_10005CE90;
  if (!qword_10005CE90)
  {
    result = swift_getWitnessTable(&unk_100046830, &type metadata for PosterDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CE90);
  }
  return result;
}

unint64_t sub_10002AEE0()
{
  unint64_t result;

  result = qword_10005CE98;
  if (!qword_10005CE98)
  {
    result = swift_getWitnessTable(&unk_100046858, &type metadata for PosterDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CE98);
  }
  return result;
}

unint64_t sub_10002AF20()
{
  unint64_t result;

  result = qword_10005CEA0;
  if (!qword_10005CEA0)
  {
    result = swift_getWitnessTable(&unk_100046740, &type metadata for PosterDataModel.DataPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CEA0);
  }
  return result;
}

unint64_t sub_10002AF60()
{
  unint64_t result;

  result = qword_10005CEA8;
  if (!qword_10005CEA8)
  {
    result = swift_getWitnessTable(&unk_100046768, &type metadata for PosterDataModel.DataPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CEA8);
  }
  return result;
}

unint64_t sub_10002AFA0()
{
  unint64_t result;

  result = qword_10005CEB0;
  if (!qword_10005CEB0)
  {
    result = swift_getWitnessTable(&unk_100046650, &type metadata for PosterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CEB0);
  }
  return result;
}

unint64_t sub_10002AFE0()
{
  unint64_t result;

  result = qword_10005CEB8;
  if (!qword_10005CEB8)
  {
    result = swift_getWitnessTable(&unk_100046678, &type metadata for PosterData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10005CEB8);
  }
  return result;
}

unint64_t sub_10002B01C()
{
  unint64_t result;

  result = qword_10005CEC0;
  if (!qword_10005CEC0)
  {
    result = swift_getWitnessTable(&unk_1000465D8, &type metadata for PosterDataError);
    atomic_store(result, (unint64_t *)&qword_10005CEC0);
  }
  return result;
}

uint64_t sub_10002B058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_10002B090()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_10002B09C()
{
  Swift::String v0;

  v0._countAndFlagsBits = 1852402976;
  v0._object = (void *)0xE400000000000000;
  String.append(_:)(v0);
}

uint64_t sub_10002B0C8()
{
  uint64_t v0;

  return sub_1000210CC(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 128), (uint64_t *)(v0 - 120));
}

uint64_t sub_10002B0D8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 - 272));
}

uint64_t sub_10002B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100006580(a1, a2, a3);
}

uint64_t sub_10002B110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 136) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 136, v3 - 128, v2, v1 + 12);
}

uint64_t sub_10002B12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 136, a2, v4, a4);
}

uint64_t sub_10002B138@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

double sub_10002B144(uint64_t a1, float a2)
{
  float *v2;
  uint64_t v3;
  double v4;

  *v2 = a2;
  *(_QWORD *)(v3 - 136) = 0;
  *(_QWORD *)(v3 - 128) = 0xE000000000000000;
  *(_QWORD *)(v3 - 120) = a1;
  return v4 / 60.0;
}

uint64_t sub_10002B168@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_10002B170(uint64_t a1)
{
  uint64_t *v1;

  sub_10000AB60(a1, v1);
}

uint64_t sub_10002B178()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 168) + 8))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 160));
}

uint64_t sub_10002B188()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10002B190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2082;
  *(_QWORD *)(v2 - 136) = 0;
  *(_QWORD *)(v2 - 128) = v1;
  return v2 - 136;
}

void sub_10002B1B0(uint64_t a1)
{
  uint64_t *v1;

  sub_10000AB60(a1, v1);
}

uint64_t sub_10002B1B8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_10002B1D8@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 72) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)(v2 - 72, v1);
}

uint64_t sub_10002B1F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_10002B208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100006580(a1, a2, a3);
}

uint64_t sub_10002B214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000658C(a1, a2, a3, a4);
}

uint64_t sub_10002B220@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 104) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)(v2 - 104, v1);
}

uint64_t sub_10002B238(uint64_t a1)
{
  uint64_t v1;

  return swift_getEnumCaseMultiPayload(a1, v1);
}

void sub_10002B240(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_10002B254(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10002B270(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10002B28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return dispatch thunk of Encoder.container<A>(keyedBy:)(a1, a1, a3, v3, v4);
}

uint64_t sub_10002B2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return KeyedEncodingContainer.encode(_:forKey:)(a1, v2 - 72, v1);
}

void sub_10002B2B4(Swift::String a1)
{
  String.append(_:)(a1);
}

uint64_t sub_10002B2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v0, v1);
}

void sub_10002B2D4(uint64_t a1)
{
  uint64_t *v1;

  sub_10000AB60(a1, v1);
}

uint64_t sub_10002B2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v3 - 96, v2);
}

void sub_10002B2F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10000AD40(a1, a2, v2);
}

void sub_10002B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10000AD40(a1, a2, v2);
}

void sub_10002B300(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_10000AD40(v2 + a1, v3, v1);
}

void sub_10002B310(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1000134CC(a1, a2, v2);
}

void sub_10002B318(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10000AD40(a1, a2, v2);
}

uint64_t sub_10002B320(uint64_t a1)
{
  uint64_t v1;

  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

BOOL sub_10002B330(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10002B340(uint64_t a1)
{
  uint64_t v1;

  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t sub_10002B360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 2, a1 + 8);
}

void sub_10002B370()
{
  Swift::String v0;

  v0._countAndFlagsBits = 93;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
}

uint64_t sub_10002B37C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10002B390@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_10002B39C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_10001352C(a1, v3, a3);
}

uint64_t sub_10002B3A4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10002B3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10000658C(a1, a2, 1, *(_QWORD *)(v2 - 96));
}

uint64_t sub_10002B3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10000658C(a1, a2, 1, v2);
}

uint64_t sub_10002B3C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_10002B3CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10002B3D8()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_10002B3E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_10002B3F8()
{
  uint64_t v0;
  uint64_t v1;

  return String.init<A>(describing:)(v1, v0);
}

uint64_t sub_10002B404()
{
  return type metadata accessor for PosterDataModel.DataPoint(0);
}

uint64_t sub_10002B40C()
{
  uint64_t v0;

  return v0;
}

void sub_10002B420(uint64_t a1)
{
  uint64_t *v1;

  sub_10000AB60(a1, v1);
}

uint64_t sub_10002B428()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OptionsProvider;
  uint64_t v13;
  _QWORD v15[5];

  v0 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v0);
  v2 = (char *)&v15[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for WDSEndpoint(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD00000000000001CLL, 0x80000001000483C0);
  v6 = type metadata accessor for URL(0);
  result = sub_100006580((uint64_t)v2, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    WDSEndpoint.init(url:)(v2);
    v8 = type metadata accessor for GeocodeService(0);
    sub_100013A7C(v8);
    v9 = GeocodeService.init()();
    v10 = type metadata accessor for GeocodeManager(0);
    sub_100013A7C(v10);
    v11 = GeocodeManager.init(service:store:)(v9, sub_10002B594, 0);
    OptionsProvider = type metadata accessor for WeatherServiceFetchOptionsProvider(0);
    sub_100013A7C(OptionsProvider);
    v13 = WeatherServiceFetchOptionsProvider.init(geocodeManager:)(v11);
    v15[3] = OptionsProvider;
    v15[4] = &protocol witness table for WeatherServiceFetchOptionsProvider;
    v15[0] = v13;
    return WeatherService.__allocating_init(endpoint:fetchOptionsProvider:)(v5, v15);
  }
  return result;
}

uint64_t sub_10002B594()
{
  uint64_t v0;

  v0 = type metadata accessor for GeocodeStore(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return GeocodeStore.init()();
}

uint64_t initializeBufferWithCopyOfBuffer for LabelViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for LabelViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for LabelViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for LabelViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for LabelViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LabelViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LabelViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelViewModel()
{
  return &type metadata for LabelViewModel;
}

void sub_10002B7CC(unsigned __int8 a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 - 2 >= 2)
  {
    v8 = a2 & 1;
    if (a1)
    {
      if (qword_10005BB30 != -1)
        swift_once(&qword_10005BB30, sub_10002BEFC);
      v9 = (id)qword_100060850;
      v4 = sub_10002BE18(0xD000000000000016, 0xD000000000000032, (uint64_t)"No Internet Connection");
      v5 = v11;
      v7 = 0xEA00000000006873;
      v6 = 0x616C732E69666977;
    }
    else
    {
      if (qword_10005BB30 != -1)
        swift_once(&qword_10005BB30, sub_10002BEFC);
      v6 = 0xD000000000000013;
      v9 = (id)qword_100060850;
      v4 = sub_10002BE18(0xD000000000000018, 0xD00000000000002CLL, (uint64_t)"Location Services is Off");
      v5 = v10;
      v7 = 0x8000000100048440;
    }

  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
  }
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_BYTE *)(a3 + 32) = v8;
}

void sub_10002B954(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

BOOL sub_10002B978(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

Swift::Int sub_10002B988(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

Swift::Int sub_10002B9CC()
{
  char *v0;

  return sub_10002B988(*v0);
}

void sub_10002B9D4(uint64_t a1)
{
  char *v1;

  sub_10002B954(a1, *v1);
}

BOOL sub_10002B9DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10002B978(*a1, *a2);
}

id sub_10002B9E8()
{
  uint64_t v0;
  char v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  UIFontDescriptorAttributeName v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  UIFontDescriptorTraitKey v10;
  const UIFontWeight *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  NSString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  id v25;
  id v26;
  _BYTE v28[48];
  _BYTE v29[72];
  _BYTE v30[48];
  _BYTE v31[72];

  v1 = *(_BYTE *)(v0 + 32);
  v2 = (void *)objc_opt_self(UIFontDescriptor);
  if ((v1 & 1) != 0)
  {
    v3 = objc_msgSend(v2, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleFootnote);
    v4 = sub_100005350(&qword_10005CEC8);
    inited = swift_initStackObject(v4, v31);
    *(_OWORD *)(inited + 16) = xmmword_100045B60;
    v6 = UIFontDescriptorTraitsAttribute;
    *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    v7 = sub_100005350(&qword_10005CED0);
    v8 = swift_initStackObject(v7, v30);
    v9 = v8;
    *(_OWORD *)(v8 + 16) = xmmword_100045B60;
    v10 = UIFontWeightTrait;
    *(_QWORD *)(v8 + 32) = UIFontWeightTrait;
    v11 = &UIFontWeightSemibold;
  }
  else
  {
    v3 = objc_msgSend(v2, "preferredFontDescriptorWithTextStyle:", UIFontTextStyleSubheadline);
    v12 = sub_100005350(&qword_10005CEC8);
    inited = swift_initStackObject(v12, v29);
    *(_OWORD *)(inited + 16) = xmmword_100045B60;
    v6 = UIFontDescriptorTraitsAttribute;
    *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    v13 = sub_100005350(&qword_10005CED0);
    v8 = swift_initStackObject(v13, v28);
    v9 = v8;
    *(_OWORD *)(v8 + 16) = xmmword_100045B60;
    v10 = UIFontWeightTrait;
    *(_QWORD *)(v8 + 32) = UIFontWeightTrait;
    v11 = &UIFontWeightMedium;
  }
  *(UIFontWeight *)(v8 + 40) = *v11;
  type metadata accessor for TraitKey(0);
  v15 = v14;
  v16 = sub_10001F174(&qword_10005BCC0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100045918);
  v17 = v6;
  v18 = v10;
  v19 = Dictionary.init(dictionaryLiteral:)(v9, v15, &type metadata for CGFloat, v16);
  *(_QWORD *)(inited + 64) = sub_100005350(&qword_10005CED8);
  *(_QWORD *)(inited + 40) = v19;
  type metadata accessor for AttributeName(0);
  v21 = v20;
  v22 = sub_10001F174(&qword_10005BCD0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1000458D4);
  v23 = Dictionary.init(dictionaryLiteral:)(inited, v21, (char *)&type metadata for Any + 8, v22);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  v25 = objc_msgSend(v3, "fontDescriptorByAddingAttributes:", isa);

  v26 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v25, 0.0);
  return v26;
}

uint64_t sub_10002BC88(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), v9 = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), v9 = 0, (v15 & 1) != 0))
      v9 = *((_BYTE *)a1 + 32) ^ *(_BYTE *)(a2 + 32) ^ 1;
  }
  return v9 & 1;
}

uint64_t storeEnumTagSinglePayload for LabelViewModel.Placement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10002BD58 + 4 * byte_100046A8D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10002BD8C + 4 * byte_100046A88[v4]))();
}

uint64_t sub_10002BD8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BD94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002BD9CLL);
  return result;
}

uint64_t sub_10002BDA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002BDB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10002BDB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BDBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabelViewModel.Placement()
{
  return &type metadata for LabelViewModel.Placement;
}

unint64_t sub_10002BDDC()
{
  unint64_t result;

  result = qword_10005CEE0;
  if (!qword_10005CEE0)
  {
    result = swift_getWitnessTable(&unk_100046AD8, &type metadata for LabelViewModel.Placement);
    atomic_store(result, (unint64_t *)&qword_10005CEE0);
  }
  return result;
}

uint64_t sub_10002BE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  NSBundle v3;
  unint64_t v4;
  Swift::String v5;

  v4 = (a3 - 32) | 0x8000000000000000;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, (Swift::String_optional)0, v3, v5, *(Swift::String *)&a2)._countAndFlagsBits;
}

uint64_t sub_10002BE38()
{
  uint64_t v0;

  v0 = type metadata accessor for SkyBackgroundGradient(0);
  sub_10002BE8C(v0, qword_100060838);
  sub_10000AADC(v0, (uint64_t)qword_100060838);
  return SkyBackgroundGradient.init(hexes:)(&off_1000557F8);
}

uint64_t *sub_10002BE8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10002BECC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for BundleLookup()
{
  return objc_opt_self(_TtC13WeatherPosterP33_03717FE99FE1FD7C1132E384E74FA8D412BundleLookup);
}

id sub_10002BEFC()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id result;

  v0 = type metadata accessor for BundleLookup();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  result = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  qword_100060850 = (uint64_t)result;
  return result;
}

void sub_10002BF50(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;

  v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (id)1)
  {
    v5 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v5);
  }
}

void sub_10002BFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];

  v2 = v1;
  v4 = sub_100013BC4();
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100013B18();
  v8 = v7 - v6;
  v9 = (int *)sub_100022F04();
  sub_100008864();
  __chkstk_darwin(v10);
  sub_100013B18();
  v13 = v12 - v11;
  v14 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v15 = -[NSObject userInterfaceIdiom](v14, "userInterfaceIdiom");

  if (v15 == (id)1)
  {
    if (qword_10005BB80 != -1)
      swift_once(&qword_10005BB80, sub_1000423FC);
    v16 = sub_100013AD0();
    sub_10001902C(v16, (uint64_t)qword_100060940);
    v17 = sub_100019080();
    if (os_log_type_enabled(v14, v17))
    {
      v36 = v4;
      v18 = sub_10000B0C8(22);
      v35 = sub_10000B0C8(32);
      v38[0] = v35;
      *(_DWORD *)v18 = 136446466;
      v19 = sub_1000192C8(a1);
      v21 = sub_1000210CC(v19, v20, v38);
      sub_10002DCB8(v21);
      v23 = v22 + 8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v22 + 8, v18 + 4, v24);
      sub_1000220E8();
      *(_WORD *)(v18 + 12) = 2050;
      v25 = 0;
      if ((unint64_t)(a1 - 2) <= 2)
        v25 = qword_100046C00[a1 - 2];
      v37 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, v23, v18 + 14, v18 + 22);
      sub_100022134((void *)&_mh_execute_header, v14, v17, "Initial orientation of poster is %{public}s (%{public}f degrees)", (uint8_t *)v18);
      sub_10002DCAC(v26, v27, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v35);
      sub_10000AFFC(v18);

      v4 = v36;
    }
    else
    {

    }
    UUID.init()(v28);
    v29 = 0;
    if ((unint64_t)(a1 - 2) <= 2)
      v29 = dword_100046C18[a1 - 2];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v13, v8, v4);
    *(_DWORD *)(v13 + v9[5]) = v29;
    *(_DWORD *)(v13 + v9[6]) = 1065353216;
    *(_QWORD *)(v13 + v9[7]) = a1;
    *(_QWORD *)(v13 + v9[8]) = a1;
    v30 = v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState;
    sub_100013988(v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState, (uint64_t)v38);
    sub_10002D9A0(v13, v30);
    swift_endAccess(v38);
    v31 = *(_QWORD *)(v2 + 16);
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
      v33 = (uint64_t *)(v31 + 40);
      do
      {
        v34 = *v33;
        swift_getObjectType(*(v33 - 1));
        sub_10002DC7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 8));
        sub_10002DC7C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
        v33 += 2;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease(v31);
    }
    sub_10002DC0C(v13, type metadata accessor for DynamicRotationState);
  }
  sub_1000139F8();
}

uint64_t sub_10002C2D0()
{
  NSObject *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  Class isa;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v2 = (int *)sub_100022F04();
  sub_100008864();
  __chkstk_darwin(v3);
  sub_10002DC64();
  if (qword_10005BB80 != -1)
    swift_once(&qword_10005BB80, sub_1000423FC);
  v4 = sub_100013AD0();
  sub_10001902C(v4, (uint64_t)qword_100060940);
  v5 = sub_100019080();
  if (os_log_type_enabled(v0, v5))
  {
    v6 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v5, "Rotation manager was invalidated", v6, 2u);
    sub_10000AFFC((uint64_t)v6);
  }

  sub_10002CF24();
  isa = v0[2].isa;
  v0[2].isa = (Class)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(isa);
  v8 = (char *)v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate;
  *((_QWORD *)v8 + 1) = 0;
  v9 = swift_unknownObjectWeakAssign(v8, 0);
  UUID.init()(v9);
  *(_DWORD *)(v1 + v2[5]) = 0;
  *(_DWORD *)(v1 + v2[6]) = 1065353216;
  *(_QWORD *)(v1 + v2[7]) = 0;
  *(_QWORD *)(v1 + v2[8]) = 0;
  v10 = (uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState;
  sub_100013988((uint64_t)v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState, (uint64_t)v12);
  sub_10002D914(v1, v10);
  return swift_endAccess(v12);
}

void sub_10002C43C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t Strong;
  NSObject *v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  id v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  float v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int *v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[4];
  uint64_t v90;
  _BYTE v91[24];

  v87 = *v2;
  v86 = sub_100013BC4();
  v5 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  sub_100013B18();
  v8 = v7 - v6;
  v9 = sub_100022F04();
  sub_100008864();
  __chkstk_darwin(v10);
  sub_100013B18();
  v13 = v12 - v11;
  sub_100005350(&qword_10005D070);
  sub_100008864();
  __chkstk_darwin(v14);
  sub_100013B18();
  v17 = v16 - v15;
  v18 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v19 = objc_msgSend(v18, "userInterfaceIdiom");

  if (v19 == (id)1)
  {
    v20 = (char *)v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState;
    swift_beginAccess((char *)v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState, v91, 0, 0);
    if (*(_QWORD *)&v20[*(int *)(v9 + 32)] != a1)
    {
      v84 = *(_QWORD *)&v20[*(int *)(v9 + 32)];
      v85 = a1;
      v82 = (int *)v9;
      v83 = v2;
      v21 = (char *)v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate;
      Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate);
      if (Strong
        && (v23 = Strong,
            v24 = *((_QWORD *)v21 + 1),
            ObjectType = swift_getObjectType(Strong),
            LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(ObjectType, v24),
            swift_unknownObjectRelease(v23),
            (v24 & 1) != 0))
      {
        if (a2)
        {
          v26 = qword_10005BB80;
          v27 = a2;
          if (v26 != -1)
            swift_once(&qword_10005BB80, sub_1000423FC);
          v28 = sub_100013AD0();
          sub_10001902C(v28, (uint64_t)qword_100060940);
          v29 = sub_100019080();
          if (os_log_type_enabled(v23, v29))
          {
            v30 = sub_10000B0C8(22);
            v31 = sub_10000B0C8(64);
            v89[0] = v31;
            v32 = sub_10002DC54(4.8752e-34);
            v34 = sub_10002DC48(v32, v33);
            v35 = sub_10002DCB8(v34);
            sub_10002DC9C(v35, v36, v37, v38);
            sub_10002DCC4();
            *(_WORD *)(v30 + 12) = 2082;
            v39 = sub_1000192C8(v85);
            v90 = sub_10002DC48(v39, v40);
            sub_10002DC9C(v90, v41, v42, v30 + 22);
            sub_10002DCC4();
            sub_100022134((void *)&_mh_execute_header, v23, v29, "Starting animation of device orientation; currentOrientation=%{public}s, toOrientation=%{public}s",
              (uint8_t *)v30);
            swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
            sub_10000AFFC(v31);
            sub_10000AFFC(v30);
          }

          v43 = OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_displayLink;
          v44 = *(void **)((char *)v83 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_displayLink);
          if (v44)
            objc_msgSend(v44, "invalidate");
          v45 = *(float *)&v20[*(int *)(v9 + 20)];
          v46 = v27;
          sub_10000BE3C(v46, v84, v85, v17, v45);
          v47 = type metadata accessor for DynamicRotationAnimationState(0);
          sub_10000658C(v17, 0, 1, v47);
          v48 = (uint64_t)v83 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState;
          sub_100013988((uint64_t)v83 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState, (uint64_t)v89);
          sub_10002D958(v17, v48);
          swift_endAccess(v89);
          sub_1000135E0(0, &qword_10005D078, CADisplayLink_ptr);
          v89[3] = v87;
          v89[0] = v83;
          swift_retain(v83);
          v49 = sub_10002CEA8(v89, (uint64_t)"displayLinkFired:");
          v50 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          v51 = (uint64_t)objc_msgSend(v50, "maximumFramesPerSecond");

          if (v51 >= 60)
            v52 = 60;
          else
            v52 = v51;
          objc_msgSend(v49, "setPreferredFramesPerSecond:", v52, v9);
          v53 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
          objc_msgSend(v49, "addToRunLoop:forMode:", v53, NSRunLoopCommonModes);

          v54 = *(void **)((char *)v83 + v43);
          *(_QWORD *)((char *)v83 + v43) = v49;

        }
        else
        {
          if (qword_10005BB80 != -1)
            swift_once(&qword_10005BB80, sub_1000423FC);
          v66 = sub_100013AD0();
          sub_10001902C(v66, (uint64_t)qword_100060940);
          v67 = sub_100019080();
          if (os_log_type_enabled(v23, v67))
          {
            v68 = sub_10000B0C8(22);
            v88 = sub_10000B0C8(64);
            v89[0] = v88;
            v69 = sub_10002DC54(4.8752e-34);
            v71 = sub_10002DCCC(v69, v70);
            v72 = sub_10002DCB8(v71);
            sub_10002DC8C(v72, v73, v74, v75);
            sub_1000220E8();
            *(_WORD *)(v68 + 12) = 2082;
            v76 = sub_1000192C8(a1);
            v90 = sub_10002DCCC(v76, v77);
            sub_10002DC8C(v90, v78, v79, v68 + 22);
            sub_1000220E8();
            sub_100022134((void *)&_mh_execute_header, v23, v67, "Updating orientation change without animating because animation settings were missing; orientation=%{publi"
              "c}s, newOrientation=%{public}s",
              (uint8_t *)v68);
            swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
            sub_10000AFFC(v88);
            sub_10000AFFC(v68);
          }

          UUID.init()(v80);
          v81 = 0;
          if ((unint64_t)(a1 - 2) <= 2)
            v81 = dword_100046C18[a1 - 2];
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v13, v8, v86);
          *(_DWORD *)(v13 + v82[5]) = v81;
          *(_DWORD *)(v13 + v82[6]) = 1065353216;
          *(_QWORD *)(v13 + v82[7]) = v84;
          *(_QWORD *)(v13 + v82[8]) = a1;
          sub_10002CACC(v13);
          sub_10002DC0C(v13, type metadata accessor for DynamicRotationState);
        }
      }
      else
      {
        if (qword_10005BB80 != -1)
          swift_once(&qword_10005BB80, sub_1000423FC);
        v55 = sub_100013AD0();
        v56 = sub_10001902C(v55, (uint64_t)qword_100060940);
        v57 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = (uint8_t *)sub_10000B0C8(12);
          v59 = sub_10000B0C8(32);
          v89[0] = v59;
          *(_DWORD *)v58 = 136446210;
          v60 = sub_1000192C8(v85);
          v62 = sub_10002DC48(v60, v61);
          sub_10002DCB8(v62);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v63 + 8, v58 + 4, v58 + 12);
          sub_10002DCC4();
          _os_log_impl((void *)&_mh_execute_header, v56, v57, "Rotation manager was not granted a rendering session; Skipping rotation to %{public}s",
            v58,
            0xCu);
          sub_10002DCAC(v64, v65, (uint64_t)&type metadata for Any + 8);
          sub_10000AFFC(v59);
          sub_10000AFFC((uint64_t)v58);
        }

      }
    }
  }
  sub_1000139F8();
}

uint64_t sub_10002CACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD aBlock[5];
  uint64_t v53;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DynamicRotationState(0);
  v44 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v45 = v11;
  v46 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DispatchTime(0);
  v43 = *(_QWORD *)(v48 - 8);
  v12 = __chkstk_darwin(v48);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v47 = (char *)&v40 - v15;
  v16 = *(_QWORD *)(v1 + 16);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v41 = v1;
    v42 = (uint64_t)v7;
    v18 = v5;
    v19 = v4;
    swift_bridgeObjectRetain(v16);
    v20 = (uint64_t *)(v16 + 40);
    do
    {
      v21 = *v20;
      ObjectType = swift_getObjectType(*(v20 - 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(a1, ObjectType, v21);
      v20 += 2;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease(v16);
    v4 = v19;
    v5 = v18;
    v2 = v41;
    v7 = (char *)v42;
  }
  v23 = v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState;
  swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState, aBlock, 33, 0);
  sub_10002D9A0(a1, v23);
  result = swift_endAccess(aBlock);
  if (*(float *)(a1 + *(int *)(v10 + 24)) >= 1.0)
  {
    sub_10002CF24();
    sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
    v42 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    v25 = v2;
    v26 = v47;
    + infix(_:_:)(v14, 0.15);
    v43 = *(_QWORD *)(v43 + 8);
    v27 = v48;
    ((void (*)(char *, uint64_t))v43)(v14, v48);
    v28 = swift_allocObject(&unk_100057120, 24, 7);
    swift_weakInit(v28 + 16, v25);
    v29 = v46;
    sub_100022CA0(a1, v46);
    v30 = *(unsigned __int8 *)(v44 + 80);
    v31 = (v30 + 24) & ~v30;
    v32 = swift_allocObject(&unk_100057148, v31 + v45, v30 | 7);
    *(_QWORD *)(v32 + 16) = v28;
    sub_10002DBC8(v29, v32 + v31, type metadata accessor for DynamicRotationState);
    aBlock[4] = sub_10002DA78;
    v53 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001279C;
    aBlock[3] = &unk_100057160;
    v33 = _Block_copy(aBlock);
    v34 = swift_release(v53);
    v35 = v49;
    static DispatchQoS.unspecified.getter(v34);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v36 = sub_10002DABC();
    v37 = sub_100005350(&qword_10005C350);
    v38 = sub_10002DAFC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v38, v4, v36);
    v39 = (void *)v42;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v26, v35, v7, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
    return ((uint64_t (*)(char *, uint64_t))v43)(v26, v27);
  }
  return result;
}

id sub_10002CEA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;

  v5 = a1[3];
  v6 = sub_100029290(a1, v5);
  v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "displayLinkWithTarget:selector:", v7, a2);
  swift_unknownObjectRelease(v7);
  sub_100013750(a1);
  return v8;
}

uint64_t sub_10002CF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v1 = sub_100005350(&qword_10005D070);
  __chkstk_darwin(v1);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_displayLink;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_displayLink);
  if (v5)
  {
    objc_msgSend(v5, "invalidate");
    v6 = *(void **)(v0 + v4);
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v0 + v4) = 0;

  v7 = type metadata accessor for DynamicRotationAnimationState(0);
  sub_10000658C((uint64_t)v3, 1, 1, v7);
  v8 = v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState;
  swift_beginAccess(v8, v11, 33, 0);
  sub_10002D958((uint64_t)v3, v8);
  return swift_endAccess(v11);
}

id sub_10002D004(void *a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  float v19;
  double v20;
  float v21;
  float v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];

  v3 = (int *)type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v3);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100005350(&qword_10005D070);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (int *)type metadata accessor for DynamicRotationAnimationState(0);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = v1 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState, v27, 0, 0);
  sub_10002DB40(v12, (uint64_t)v8);
  if (sub_100006580((uint64_t)v8, 1, (uint64_t)v9) == 1)
  {
    sub_10002DB88((uint64_t)v8);
    if (qword_10005BB80 != -1)
      swift_once(&qword_10005BB80, sub_1000423FC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10000AADC(v13, (uint64_t)qword_100060940);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Display link fired with no animation state", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    return objc_msgSend(a1, "invalidate");
  }
  else
  {
    sub_10002DBC8((uint64_t)v8, (uint64_t)v11, type metadata accessor for DynamicRotationAnimationState);
    objc_msgSend(*(id *)&v11[v9[7]], "progressAtTime:", CFAbsoluteTimeGetCurrent() - *(double *)&v11[v9[8]]);
    v19 = *(float *)&v11[v9[9]];
    v21 = v20;
    v22 = fmodf(v19 + (float)((float)(*(float *)&v11[v9[10]] - v19) * v21), 360.0);
    v23 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v11, v23);
    v24 = *(_QWORD *)&v11[v9[5]];
    v25 = *(_QWORD *)&v11[v9[6]];
    *(float *)&v5[v3[5]] = v22;
    *(float *)&v5[v3[6]] = v21;
    *(_QWORD *)&v5[v3[7]] = v24;
    *(_QWORD *)&v5[v3[8]] = v25;
    sub_10002CACC((uint64_t)v5);
    sub_10002DC0C((uint64_t)v5, type metadata accessor for DynamicRotationState);
    return (id)sub_10002DC0C((uint64_t)v11, type metadata accessor for DynamicRotationAnimationState);
  }
}

uint64_t sub_10002D30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];
  char v36[24];

  v4 = type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005350(&qword_10005D070);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v36, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v11 = result;
    v12 = result + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState;
    swift_beginAccess(result + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState, v35, 0, 0);
    sub_10002DB40(v12, (uint64_t)v9);
    v13 = type metadata accessor for DynamicRotationAnimationState(0);
    if (sub_100006580((uint64_t)v9, 1, v13) == 1)
    {
      sub_10002DB88((uint64_t)v9);
      if (qword_10005BB80 != -1)
        swift_once(&qword_10005BB80, sub_1000423FC);
      v14 = type metadata accessor for Logger(0);
      sub_10000AADC(v14, (uint64_t)qword_100060940);
      v15 = sub_100022CA0(a2, (uint64_t)v6);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        *(_DWORD *)v18 = 136446210;
        v34 = v19;
        v20 = sub_1000192C8(*(_QWORD *)&v6[*(int *)(v4 + 32)]);
        v22 = v21;
        v33 = sub_1000210CC(v20, v21, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v18 + 4, v18 + 12);
        swift_bridgeObjectRelease(v22);
        sub_10002DC0C((uint64_t)v6, type metadata accessor for DynamicRotationState);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Completed animation of device orientation to %{public}s", v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);
      }
      else
      {
        sub_10002DC0C((uint64_t)v6, type metadata accessor for DynamicRotationState);
      }

      v23 = *(_QWORD *)(v11 + 16);
      v24 = *(_QWORD *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v11 + 16));
        v25 = (uint64_t *)(v23 + 40);
        do
        {
          v26 = *v25;
          ObjectType = swift_getObjectType(*(v25 - 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(a2, ObjectType, v26);
          v25 += 2;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease(v23);
      }
      v28 = v11 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate;
      Strong = swift_unknownObjectWeakLoadStrong(v11 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate);
      if (Strong)
      {
        v30 = Strong;
        v31 = *(_QWORD *)(v28 + 8);
        v32 = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v32, v31);
        swift_release(v11);
        return swift_unknownObjectRelease(v30);
      }
      else
      {
        return swift_release(v11);
      }
    }
    else
    {
      swift_release(v11);
      return sub_10002DB88((uint64_t)v9);
    }
  }
  return result;
}

uint64_t sub_10002D654()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_10002DC0C(v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState, type metadata accessor for DynamicRotationState);

  sub_10002DB88(v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState);
  sub_100013934(v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate);
  return v0;
}

uint64_t sub_10002D6B8()
{
  uint64_t v0;

  sub_10002D654();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10002D6DC()
{
  return type metadata accessor for DynamicRotationManager(0);
}

uint64_t type metadata accessor for DynamicRotationManager(uint64_t a1)
{
  uint64_t result;

  result = qword_10005CFC0;
  if (!qword_10005CFC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicRotationManager);
  return result;
}

void sub_10002D71C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for DynamicRotationState(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = "\b";
    sub_10002D7C4(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100046BE0;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

void sub_10002D7C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005CFD0)
  {
    v2 = type metadata accessor for DynamicRotationAnimationState(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005CFD0);
  }
}

uint64_t sub_10002D818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_100013BC4();
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_10002DC64();
  *(_QWORD *)(v0 + 16) = &_swiftEmptyArrayStorage;
  v4 = v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_rotationState;
  UUID.init()(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  v6 = (int *)sub_100022F04();
  *(_DWORD *)(v4 + v6[5]) = 0;
  *(_DWORD *)(v4 + v6[6]) = 1065353216;
  *(_QWORD *)(v4 + v6[7]) = 0;
  *(_QWORD *)(v4 + v6[8]) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_displayLink) = 0;
  v7 = v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_animationState;
  v8 = type metadata accessor for DynamicRotationAnimationState(0);
  sub_10000658C(v7, 1, 1, v8);
  v9 = v0 + OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate;
  *(_QWORD *)(v9 + 8) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  return v0;
}

uint64_t sub_10002D914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicRotationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005D070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicRotationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D9E4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002DA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100022F04() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = sub_100013BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10002DA78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100022F04() - 8) + 80);
  return sub_10002D30C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10002DAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002DAB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10002DABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C348;
  if (!qword_10005C348)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_10005C348);
  }
  return result;
}

unint64_t sub_10002DAFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C358;
  if (!qword_10005C358)
  {
    v1 = sub_10000AC50(&qword_10005C350);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10005C358);
  }
  return result;
}

uint64_t sub_10002DB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005D070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002DB88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005350(&qword_10005D070);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002DBC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002DC0C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002DC48(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 160));
}

unint64_t sub_10002DC54(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  return sub_1000192C8(*(_QWORD *)(v2 - 192));
}

uint64_t sub_10002DC7C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_10002DC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 128, v5, v4, a4);
}

uint64_t sub_10002DC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 128, v5, v4, a4);
}

uint64_t sub_10002DCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return swift_arrayDestroy(v3, 1, a3);
}

uint64_t sub_10002DCB8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = result;
  return result;
}

uint64_t sub_10002DCC4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10002DCCC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 160));
}

uint64_t sub_10002DCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v1);
  sub_100013B18();
  v4 = v3 - v2;
  static Date.now.getter(v5);
  v6 = sub_1000088F4();
  sub_10000658C(v4, 0, 1, v6);
  v7 = v0 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt;
  sub_100013988(v7, (uint64_t)v9);
  sub_10002FA58(v4, v7);
  return swift_endAccess(v9);
}

uint64_t sub_10002DD6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  id v26;
  _BYTE v28[24];
  char v29[24];
  _QWORD v30[5];

  v1 = (uint64_t)v0;
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v2);
  sub_100013B18();
  v5 = v4 - v3;
  if (qword_10005BB88 == -1)
    goto LABEL_2;
LABEL_31:
  swift_once(&qword_10005BB88, sub_100042424);
LABEL_2:
  v6 = sub_100013AD0();
  sub_10001902C(v6, (uint64_t)qword_100060958);
  v7 = sub_100019080();
  if (os_log_type_enabled(v0, v7))
  {
    v8 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v7, "Invalidating all extended sessions", v8, 2u);
    sub_10000AFFC((uint64_t)v8);
  }

  v9 = OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer);
  if (v10)
  {
    objc_msgSend(v10, "invalidate");
    v11 = *(void **)(v1 + v9);
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(v1 + v9) = 0;

  v12 = sub_1000088F4();
  sub_10000B3FC(v5, v13, v14, v12);
  v15 = v1 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt;
  sub_100013988(v1 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt, (uint64_t)v30);
  sub_10002FA58(v5, v15);
  swift_endAccess(v30);
  v0 = (v1 + 16);
  sub_1000139A0(v1 + 16, (uint64_t)v29, 0);
  v1 = *(_QWORD *)(v1 + 16);
  sub_10002FAA0(v1, v30);
  v5 = v30[0];
  v16 = v30[1];
  v17 = v30[3];
  v18 = v30[4];
  v19 = (unint64_t)(v30[2] + 64) >> 6;
  swift_bridgeObjectRetain_n(v1, 2);
  if (v18)
  {
LABEL_8:
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v21 = v20 | (v17 << 6);
    goto LABEL_27;
  }
  while (1)
  {
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v19)
      goto LABEL_29;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    v24 = v17 + 1;
    if (!v23)
    {
      v24 = v17 + 2;
      if (v17 + 2 >= v19)
        goto LABEL_29;
      v23 = *(_QWORD *)(v16 + 8 * v24);
      if (!v23)
      {
        v24 = v17 + 3;
        if (v17 + 3 >= v19)
          goto LABEL_29;
        v23 = *(_QWORD *)(v16 + 8 * v24);
        if (!v23)
        {
          v24 = v17 + 4;
          if (v17 + 4 >= v19)
            goto LABEL_29;
          v23 = *(_QWORD *)(v16 + 8 * v24);
          if (!v23)
          {
            v24 = v17 + 5;
            if (v17 + 5 >= v19)
              goto LABEL_29;
            v23 = *(_QWORD *)(v16 + 8 * v24);
            if (!v23)
            {
              v24 = v17 + 6;
              if (v17 + 6 >= v19)
                goto LABEL_29;
              v23 = *(_QWORD *)(v16 + 8 * v24);
              if (!v23)
                break;
            }
          }
        }
      }
    }
LABEL_26:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v17 = v24;
LABEL_27:
    v26 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + 56) + 16 * v21), "assertion");
    objc_msgSend(v26, "invalidate");
    swift_unknownObjectRelease(v26);
    if (v18)
      goto LABEL_8;
  }
  v25 = v17 + 7;
  while (v25 < v19)
  {
    v23 = *(_QWORD *)(v16 + 8 * v25++);
    if (v23)
    {
      v24 = v25 - 1;
      goto LABEL_26;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease(v1);
  swift_release(v5);
  sub_100013988((uint64_t)v0, (uint64_t)v28);
  sub_100005350(&qword_10005D178);
  Dictionary._Variant.removeAll(keepingCapacity:)(0);
  return swift_endAccess(v28);
}

uint64_t sub_10002E064(void *a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD v12[5];
  uint64_t v13;

  sub_10002ED48(3);
  if (v3 < 2.0 && (sub_10002E198(3, a1) & 1) == 0)
    return 0;
  v4 = OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer);
  if (v5)
    objc_msgSend(v5, "invalidate");
  v6 = (void *)objc_opt_self(NSTimer);
  v7 = swift_allocObject(&unk_1000572A8, 24, 7);
  swift_weakInit(v7 + 16, v1);
  v12[4] = sub_10002FAFC;
  v13 = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100011DA4;
  v12[3] = &unk_1000572C0;
  v8 = _Block_copy(v12);
  swift_release(v13);
  v9 = objc_msgSend(v6, "scheduledTimerWithTimeInterval:repeats:block:", 0, v8, 2.0);
  _Block_release(v8);
  v10 = *(void **)(v1 + v4);
  *(_QWORD *)(v1 + v4) = v9;

  return 1;
}

uint64_t sub_10002E198(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  id v42;
  void *v43;
  NSObject *v44;
  void *v45;
  NSObject *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84[3];
  uint64_t v85;
  _BYTE v86[24];

  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_100013B18();
  v8 = v7 - v6;
  v9 = sub_1000088F4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v79 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v79 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v79 - v20;
  sub_10002E8C8(a1);
  v81 = v2;
  v22 = v2 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt;
  sub_1000139A0(v22, (uint64_t)v86, 0);
  sub_10002F82C(v22, v8);
  if (sub_100006580(v8, 1, v9) == 1)
  {
    static Date.distantPast.getter();
    sub_10002F874(v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v21, v8, v9);
  }
  v23 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 16);
  v83 = v21;
  v24 = v23(v19, v21, v9);
  if (a1 >= 5u)
  {
    v26 = *(_QWORD *)(v10 + 8);
    sub_10002FB30((uint64_t)v19);
  }
  else
  {
    static Date.now.getter(v24);
    v25 = Date.timeIntervalSince(_:)(v19);
    v26 = *(_QWORD *)(v10 + 8);
    sub_10002FB30((uint64_t)v16);
    sub_10002FB30((uint64_t)v19);
    if (v25 >= 7.0)
    {
      v82 = v26;
      v27 = (uint64_t)v83;
      if (qword_10005BB88 != -1)
        swift_once(&qword_10005BB88, sub_100042424);
      v28 = sub_100013AD0();
      v29 = (void (*)(uint64_t, uint64_t))sub_10000AADC(v28, (uint64_t)qword_100060958);
      v30 = v23(v13, (char *)v27, v9);
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = sub_10000B0C8(22);
        v34 = sub_10000B0C8(64);
        v84[0] = v34;
        *(_DWORD *)v33 = 136446466;
        v35 = sub_10002FB38();
        v37 = v36;
        v85 = sub_1000210CC(v35, v36, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v33 + 4, v33 + 12);
        swift_bridgeObjectRelease(v37);
        *(_WORD *)(v33 + 12) = 2082;
        v38 = sub_10002F8B4();
        v39 = dispatch thunk of CustomStringConvertible.description.getter(v9, v38);
        v29 = (void (*)(uint64_t, uint64_t))v40;
        v85 = sub_1000210CC(v39, v40, v84);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v33 + 14, v33 + 22);
        swift_bridgeObjectRelease(v29);
        sub_10002FB68();
        sub_100022134((void *)&_mh_execute_header, v31, v32, "Not enough time to extend session before unlimited assertion is dropped; reason=%{public}s, lastUnlimitedAsser"
          "tionTakenAt=%{public}s",
          (uint8_t *)v33);
        swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
        sub_10000AFFC(v34);
        sub_10000AFFC(v33);

      }
      else
      {

        sub_10002FB68();
      }
      v29(v27, v9);
      return 0;
    }
  }
  sub_10002FB38();
  v41 = String._bridgeToObjectiveC()();
  sub_10002DCC4();
  v42 = objc_msgSend(a2, "extendRenderingSessionForReason:", v41);

  v43 = sub_10002ECC8(v42);
  if (!v43)
  {
    if (qword_10005BB88 != -1)
      swift_once(&qword_10005BB88, sub_100042424);
    v61 = sub_100013AD0();
    sub_10001902C(v61, (uint64_t)qword_100060958);
    v62 = sub_100019080();
    if (!sub_10002FB78(v62))
    {

      sub_10002FB30((uint64_t)v83);
      return 0;
    }
    v82 = v26;
    v63 = (uint8_t *)sub_10000B0C8(12);
    v64 = sub_10000B0C8(32);
    v84[0] = v64;
    *(_DWORD *)v63 = 136446210;
    v85 = sub_10002FB20();
    sub_10002FBA4((uint64_t)&v85, (uint64_t)v86);
    sub_10002DCC4();
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v21, "Not granted an extented session for reason=%{public}s", v63, 0xCu);
    sub_100013C90(v64, v65, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v64);
    sub_10000AFFC((uint64_t)v63);

    v60 = (uint64_t)v83;
LABEL_23:
    sub_10002FB88(v60);
    return 0;
  }
  v45 = v43;
  v46 = v44;
  v82 = v26;
  objc_msgSend(v43, "timeRemaining");
  v47 = (uint64_t)v83;
  if (v48 < 5.0)
  {
    if (qword_10005BB88 != -1)
      swift_once(&qword_10005BB88, sub_100042424);
    v49 = sub_100013AD0();
    sub_10001902C(v49, (uint64_t)qword_100060958);
    v50 = sub_100019080();
    if (sub_10002FB78(v50))
    {
      v51 = sub_10000B0C8(22);
      v52 = sub_10000B0C8(32);
      v84[0] = v52;
      *(_DWORD *)v51 = 136446466;
      v53 = sub_10002FB20();
      v54 = sub_10002FB40(v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v54, v55, v51 + 4, v56);
      v57 = sub_10002DCC4();
      *(_WORD *)(v51 + 12) = 2050;
      sub_10002FB58(v57, v58, v51 + 14, v51 + 22);
      sub_100022134((void *)&_mh_execute_header, v46, (os_log_type_t)v21, "Granted extended session, but not enough time remaining to do work; reason=%{public}s, timeGranted=%{public}f seconds",
        (uint8_t *)v51);
      sub_100013C90(v52, v59, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v52);
      sub_10000AFFC(v51);
    }

    objc_msgSend(objc_msgSend(v45, "assertion"), "invalidate");
    sub_10002FB9C();
    v60 = v47;
    goto LABEL_23;
  }
  if (qword_10005BB88 != -1)
    swift_once(&qword_10005BB88, sub_100042424);
  v66 = sub_100013AD0();
  sub_10001902C(v66, (uint64_t)qword_100060958);
  v67 = sub_100019080();
  if (os_log_type_enabled(v46, v67))
  {
    v68 = sub_10000B0C8(22);
    v69 = sub_10000B0C8(32);
    v84[0] = v69;
    *(_DWORD *)v68 = 136446466;
    v80 = v68 + 4;
    v70 = sub_10002FB20();
    v71 = sub_10002FB40(v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, v72, v80, v73);
    v74 = sub_10002DCC4();
    *(_WORD *)(v68 + 12) = 2050;
    sub_10002FB58(v74, v75, v68 + 14, v68 + 22);
    sub_100022134((void *)&_mh_execute_header, v46, v67, "Granted extended session for reason=%{public}s and timeGranted=%{public}f seconds", (uint8_t *)v68);
    sub_100013C90(v69, v76, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v69);
    sub_10000AFFC(v68);
  }

  sub_100013988(v81 + 16, (uint64_t)v84);
  v77 = v45;
  sub_10002F774((uint64_t)v77, a1, *(double *)&v46);
  swift_endAccess(v84);

  sub_10002FB88(v47);
  return 1;
}

void sub_10002E8C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34[3];

  v2 = v1;
  v4 = v1 + 16;
  v5 = sub_1000139A0(v1 + 16, (uint64_t)v34, 32);
  v8 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v8 + 16) || (v5 = sub_100021834(a1), (v6 & 1) == 0))
  {
    sub_10002FB94(v5, v6, v7);
    return;
  }
  v9 = *(NSObject **)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_10002FB94(v5, v6, v7);
  v10 = qword_10005BB88;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_10005BB88, sub_100042424);
  v12 = sub_100013AD0();
  sub_10001902C(v12, (uint64_t)qword_100060958);
  v13 = sub_100019080();
  if (os_log_type_enabled(v9, v13))
  {
    v14 = (uint8_t *)sub_10000B0C8(12);
    v32 = v11;
    v15 = sub_10000B0C8(32);
    v34[0] = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = sub_10002FB38();
    v18 = v17;
    v33 = sub_1000210CC(v16, v17, v34);
    sub_10002FBA4((uint64_t)&v33, (uint64_t)v34);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v13, "Invalidating extended session; reason=%{public}s", v14, 0xCu);
    sub_100013C90(v15, v19, (uint64_t)&type metadata for Any + 8);
    v20 = v15;
    v11 = v32;
    sub_10000AFFC(v20);
    sub_10000AFFC((uint64_t)v14);
  }

  objc_msgSend(-[NSObject assertion](v11, "assertion"), "invalidate");
  sub_10002FB9C();
  sub_100013988(v4, (uint64_t)v34);
  v21 = (void *)sub_10002F67C(a1);
  sub_10002FB94((uint64_t)v21, v22, v23);

  v24 = sub_10002FB38();
  v26 = v25;
  if (v24 == 0xD000000000000016 && v25 == 0x8000000100047550)
  {
    swift_bridgeObjectRelease(0x8000000100047550);
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, 0xD000000000000016, 0x8000000100047550, 0);
    swift_bridgeObjectRelease(v26);
    if ((v27 & 1) == 0)
    {

      return;
    }
  }
  v28 = OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer;
  v29 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer);
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v30, "invalidate");

  }
  v31 = *(void **)(v2 + v28);
  *(_QWORD *)(v2 + v28) = 0;

}

uint64_t sub_10002EB54(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10002EB90 + 4 * byte_100046C30[a1]))(0xD000000000000010, 0x80000001000474F0);
}

unint64_t sub_10002EBF8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100055BA8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

void sub_10002EC40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_10000BF5C(*a1, *a2);
}

void sub_10002EC4C()
{
  unsigned __int8 *v0;

  sub_100022F88(*v0);
}

uint64_t sub_10002EC54(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_10001F43C(a1, *v1);
}

void sub_10002EC5C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_10001F8AC(a1, *v1);
}

unint64_t sub_10002EC64@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10002EBF8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10002EC90@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10002EB54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10002ECB8(_QWORD *a1@<X8>)
{
  *a1 = &off_100055878;
}

void *sub_10002ECC8(void *a1)
{
  void *v1;
  id v2;
  id v3;

  v1 = a1;
  if (a1)
  {
    v2 = a1;
    v3 = objc_msgSend(v2, "assertion");
    swift_unknownObjectRelease(v3);
    if (v3)
    {
      CFAbsoluteTimeGetCurrent();

    }
    else
    {

      return 0;
    }
  }
  return v1;
}

void sub_10002ED48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  swift_beginAccess(v1 + 16, v8, 32, 0);
  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_100021834(a1), (v5 & 1) != 0))
  {
    v6 = *(void **)(*(_QWORD *)(v3 + 56) + 16 * v4);
    swift_endAccess(v8);
    v7 = v6;
    CFAbsoluteTimeGetCurrent();
    objc_msgSend(v7, "timeRemaining");

  }
  else
  {
    swift_endAccess(v8);
  }
}

uint64_t sub_10002EE00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_10002E8C8(3);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_10002EE58(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;
  _BYTE v6[24];

  sub_1000139A0(v1 + 16, (uint64_t)v6, 32);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
  {
    sub_100021834(a1);
    v4 = v3;
  }
  else
  {
    v4 = 0;
  }
  swift_endAccess(v6);
  return v4 & 1;
}

uint64_t sub_10002EEB8()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  char v15;
  void *v16;
  void *v17;
  Class isa;
  uint64_t v19;
  char v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  Class v23;
  Swift::Int v24;
  void *v25;
  unint64_t v26;
  Class v27;
  Class v29;
  _BYTE v30[24];

  v1 = v0;
  if (qword_10005BB88 != -1)
    swift_once(&qword_10005BB88, sub_100042424);
  v2 = sub_100013AD0();
  sub_10001902C(v2, (uint64_t)qword_100060958);
  v3 = sub_100019080();
  if (os_log_type_enabled(v0, v3))
  {
    v4 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v3, "Invalidating all extended sessions that require rendering", v4, 2u);
    sub_10000AFFC((uint64_t)v4);
  }

  v5 = 7;
  v6 = OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer;
  v7 = v0 + 2;
  v8 = (unsigned __int8 *)(swift_bridgeObjectRetain(&off_100055878) + 32);
  while (2)
  {
    v10 = *v8++;
    v9 = v10;
    v11 = 0x8000000100047550;
    v12 = 0x80000001000474F0;
    v13 = 0xD000000000000010;
    switch(v10)
    {
      case 0u:
        goto LABEL_13;
      case 1u:
        v14 = "weatherAnimation";
        goto LABEL_12;
      case 2u:
        v12 = 0x8000000100047530;
        if (0x8000000100047530 == 0x8000000100047550)
        {
          v11 = 0x8000000100047530;
LABEL_10:
          swift_bridgeObjectRelease(v11);
LABEL_14:
          v16 = *(Class *)((char *)&v1->isa + v6);
          if (v16)
          {
            objc_msgSend(v16, "invalidate");
            v17 = *(Class *)((char *)&v1->isa + v6);
          }
          else
          {
            v17 = 0;
          }
          *(Class *)((char *)&v1->isa + v6) = 0;

          goto LABEL_18;
        }
        v13 = 0xD000000000000016;
LABEL_13:
        v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v12, 0xD000000000000016, 0x8000000100047550, 0);
        sub_10002DCC4();
        if ((v15 & 1) != 0)
          goto LABEL_14;
LABEL_18:
        sub_100013988((uint64_t)&v1[2], (uint64_t)v30);
        isa = v7->isa;
        swift_bridgeObjectRetain(v7->isa);
        v19 = sub_100021834(v9);
        v21 = v20;
        swift_bridgeObjectRelease(isa);
        if ((v21 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7->isa);
          v29 = v7->isa;
          v23 = v7->isa;
          v7->isa = (Class)0x8000000000000000;
          v24 = *((_QWORD *)v23 + 3);
          sub_100005350(&qword_10005D168);
          _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v24);
          v25 = *(void **)(*((_QWORD *)v29 + 7) + 16 * v19);
          v26 = sub_10002F7F0();
          _NativeDictionary._delete(at:)(v19, v29, &type metadata for RenderingSessionManager.ExtensionReason, &type metadata for WeatherRenderingSession, v26);
          v27 = v7->isa;
          v7->isa = v29;
          swift_bridgeObjectRelease(v27);
          swift_endAccess(v30);
          objc_msgSend(objc_msgSend(v25, "assertion"), "invalidate");

          sub_10002FB9C();
        }
        else
        {
          swift_endAccess(v30);
        }
LABEL_21:
        if (--v5)
          continue;
        return swift_bridgeObjectRelease_n(&off_100055878, 2);
      case 3u:
        goto LABEL_10;
      case 4u:
        v13 = 0xD000000000000015;
        v14 = "weatherUnlockAnimation";
LABEL_12:
        v12 = (unint64_t)v14 | 0x8000000000000000;
        goto LABEL_13;
      default:
        goto LABEL_21;
    }
  }
}

uint64_t sub_10002F21C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_10002F874(v0 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt);

  return v0;
}

uint64_t sub_10002F258()
{
  uint64_t v0;

  sub_10002F21C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10002F27C()
{
  return type metadata accessor for RenderingSessionManager(0);
}

uint64_t type metadata accessor for RenderingSessionManager(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D0B8;
  if (!qword_10005D0B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RenderingSessionManager);
  return result;
}

void sub_10002F2BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10002F340(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\b";
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_10002F340(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005BEE8)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005BEE8);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherRenderingSession(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

void destroy for WeatherRenderingSession(id *a1)
{

}

uint64_t assignWithCopy for WeatherRenderingSession(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for WeatherRenderingSession(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherRenderingSession(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherRenderingSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherRenderingSession()
{
  return &type metadata for WeatherRenderingSession;
}

uint64_t storeEnumTagSinglePayload for RenderingSessionManager.ExtensionReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_10002F524 + 4 * byte_100046C3C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10002F558 + 4 * byte_100046C37[v4]))();
}

uint64_t sub_10002F558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002F560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002F568);
  return result;
}

uint64_t sub_10002F574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002F57CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_10002F580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002F588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RenderingSessionManager.ExtensionReason()
{
  return &type metadata for RenderingSessionManager.ExtensionReason;
}

unint64_t sub_10002F5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005D150;
  if (!qword_10005D150)
  {
    v1 = sub_10000AC50(&qword_10005D158);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10005D150);
  }
  return result;
}

unint64_t sub_10002F5F0()
{
  unint64_t result;

  result = qword_10005D160;
  if (!qword_10005D160)
  {
    result = swift_getWitnessTable(&unk_100046D58, &type metadata for RenderingSessionManager.ExtensionReason);
    atomic_store(result, (unint64_t *)&qword_10005D160);
  }
  return result;
}

uint64_t sub_10002F62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  v1 = v0 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_springBoardUnlimitedAssertionTakenAt;
  v2 = sub_1000088F4();
  sub_10000B3FC(v1, v3, v4, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster23RenderingSessionManager_unlockSessionTimer) = 0;
  return v0;
}

uint64_t sub_10002F67C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100021834(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v8 = *v2;
  *v2 = 0x8000000000000000;
  v9 = *(_QWORD *)(v8 + 24);
  sub_100005350(&qword_10005D168);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 16 * v5);
  v11 = sub_10002F7F0();
  _NativeDictionary._delete(at:)(v5, v14, &type metadata for RenderingSessionManager.ExtensionReason, &type metadata for WeatherRenderingSession, v11);
  v12 = *v2;
  *v2 = v14;
  swift_bridgeObjectRelease(v12);
  return v10;
}

uint64_t sub_10002F774(uint64_t a1, uint64_t a2, double a3)
{
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  *v3 = 0x8000000000000000;
  sub_10002F8F4(a1, a2, isUniquelyReferenced_nonNull_native, a3);
  v8 = *v3;
  *v3 = v10;
  return swift_bridgeObjectRelease(v8);
}

unint64_t sub_10002F7F0()
{
  unint64_t result;

  result = qword_10005D170;
  if (!qword_10005D170)
  {
    result = swift_getWitnessTable(&unk_100046D18, &type metadata for RenderingSessionManager.ExtensionReason);
    atomic_store(result, (unint64_t *)&qword_10005D170);
  }
  return result;
}

uint64_t sub_10002F82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350((uint64_t *)&unk_10005C4C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F874(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005350((uint64_t *)&unk_10005C4C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10002F8B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005C4D0;
  if (!qword_10005C4D0)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_10005C4D0);
  }
  return result;
}

void sub_10002F8F4(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  Swift::Int v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_100021834(a2);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v11;
  v17 = v12;
  sub_100005350(&qword_10005D168);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v15))
    goto LABEL_5;
  v18 = sub_100021834(a2);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for RenderingSessionManager.ExtensionReason);
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  v20 = *v5;
  if ((v17 & 1) != 0)
  {
    v21 = v20[7] + 16 * v16;

    *(_QWORD *)v21 = a1;
    *(double *)(v21 + 8) = a4;
  }
  else
  {
    sub_10002FA0C(v16, a2, a1, v20, a4);
  }
}

unint64_t sub_10002FA0C(unint64_t result, char a2, uint64_t a3, _QWORD *a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  v5 = a4[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(double *)(v5 + 8) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_10002FA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350((uint64_t *)&unk_10005C4C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FAA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_10002FAD8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002FAFC(uint64_t a1)
{
  uint64_t v1;

  return sub_10002EE00(a1, v1);
}

uint64_t sub_10002FB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002FB14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002FB20()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1000210CC(v1, v0, (uint64_t *)(v2 - 152));
}

uint64_t sub_10002FB30(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_10002FB38()
{
  unsigned __int8 v0;

  return sub_10002EB54(v0);
}

uint64_t sub_10002FB40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_10002FB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 128) = v6;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 128, v4, a3, a4);
}

uint64_t sub_10002FB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 168))(v1, v0);
}

BOOL sub_10002FB78(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10002FB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 168))(a1, v1);
}

uint64_t sub_10002FB94(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return swift_endAccess(va);
}

uint64_t sub_10002FB9C()
{
  uint64_t v0;

  return swift_unknownObjectRelease(v0);
}

uint64_t sub_10002FBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_10002FBB0(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;
  unint64_t v4;

  v1 = 0xE800000000000000;
  v3 = 0x7469617274726F70;
  switch(a1)
  {
    case 1:
      break;
    case 2:
      v1 = 0x8000000100047B20;
      v3 = 0xD000000000000012;
      break;
    case 3:
      v1 = 0xEE00746867695265;
      goto LABEL_6;
    case 4:
      v1 = 0xED00007466654C65;
LABEL_6:
      v3 = 0x70616373646E616CLL;
      break;
    default:
      v1 = 0xE700000000000000;
      v3 = 0x6E776F6E6B6E75;
      break;
  }
  v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v1);
  return 0x2D7972656C6C6167;
}

uint64_t sub_10002FC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_1000321F0();
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return sub_10002B214(a2, v7, 1, v6);
}

uint64_t sub_10002FD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for PosterDataModel.DataPoint(0);
  v6 = v5;
  if (v4)
  {
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
    sub_10003215C(a1 + ((v7 + 32) & ~v7), a2);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return sub_10002B214(a2, v8, 1, v6);
}

void sub_10002FD70(uint64_t a1, Swift::UInt a2)
{
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a2);
}

Swift::Int sub_10002FDA0(Swift::UInt a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

Swift::Int sub_10002FDF0()
{
  Swift::UInt *v0;

  return sub_10002FDA0(*v0);
}

void sub_10002FDF8(uint64_t a1)
{
  Swift::UInt *v1;

  sub_10002FD70(a1, *v1);
}

Swift::Int sub_10002FE00()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10002FE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v5 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v2 + 16), "URLsForDirectory:inDomains:", 9, 1);
  v9 = type metadata accessor for URL(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  sub_10002FC9C(v10, (uint64_t)v7);
  swift_bridgeObjectRelease(v10);
  if (sub_100006580((uint64_t)v7, 1, v9) == 1)
  {
    sub_100021DC8((uint64_t)v7, (uint64_t *)&unk_10005C558);
    v11 = 1;
  }
  else
  {
    v12 = sub_100031E84(a1);
    v13 = !v12;
    if (v12)
      v14 = 0xD000000000000014;
    else
      v14 = 0xD00000000000001ELL;
    if (v13)
      v15 = 0x8000000100048650;
    else
      v15 = 0x8000000100048670;
    URL.appendingPathComponent(_:)(v14, v15);
    swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v11 = 0;
  }
  return sub_10000658C(a2, v11, 1, v9);
}

void sub_10002FFC4(UIImage *a1, uint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSData *v11;
  NSData *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1000321F0();
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_10001F230();
  sub_10002FE4C(a2, (uint64_t)v8);
  if (sub_100006580((uint64_t)v8, 1, v9) == 1)
  {
    sub_100021DC8((uint64_t)v8, (uint64_t *)&unk_10005C558);
LABEL_6:
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v16 = sub_100013AD0();
    v17 = sub_10001902C(v16, (uint64_t)qword_100060928);
    v18 = static os_log_type_t.error.getter();
    if (sub_10000B488(v18))
    {
      v19 = (uint8_t *)sub_10000B0C8(12);
      v20 = sub_10000B0C8(32);
      v41 = v20;
      *(_DWORD *)v19 = 136446210;
      v21 = sub_100032228();
      v23 = sub_1000321B4(v21, v22);
      v24 = sub_1000321A0(v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v25, v19 + 4, v19 + 12);
      sub_10002DCC4();
      sub_100013C98((void *)&_mh_execute_header, v17, (os_log_type_t)a1, "Failed to create PNG data when saving snapshot to disk for kind=%{public}s", v19);
      sub_100013C90(v20, v26, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v20);
      sub_10000AFFC((uint64_t)v19);
    }

    return;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2, v8, v9);
  v11 = UIImagePNGRepresentation(a1);
  if (!v11)
  {
    sub_100032208();
    goto LABEL_6;
  }
  v12 = v11;
  v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v15 = v14;

  Data.write(to:options:)(v2, 0, v13, v15);
  if (qword_10005BB78 != -1)
    swift_once(&qword_10005BB78, sub_1000423D4);
  v27 = sub_100013AD0();
  v28 = sub_10001902C(v27, (uint64_t)qword_100060928);
  v29 = static os_log_type_t.default.getter();
  if (sub_1000321F8(v29))
  {
    v38 = v15;
    v30 = (uint8_t *)sub_10000B0C8(12);
    v31 = sub_10000B0C8(32);
    v41 = v31;
    v39 = v13;
    *(_DWORD *)v30 = 136446210;
    v32 = sub_100032228();
    v40 = sub_1000321B4(v32, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v30 + 4, v30 + 12);
    sub_10002DCC4();
    sub_100013C98((void *)&_mh_execute_header, v28, v3, "Saved snapshot view for kind=%{public}s to disk", v30);
    sub_100013C90(v31, v34, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v31);
    sub_10000AFFC((uint64_t)v30);
    v36 = v38;
    v35 = v39;
  }
  else
  {
    v35 = v13;
    v36 = v15;
  }
  sub_10001A6F0(v35, v36);

  sub_100032208();
}

void *sub_100030454(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v49;
  uint8_t *v50;
  uint64_t v51;

  v4 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v4);
  sub_10001F230();
  v5 = sub_1000321F0();
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FE4C(a1, v1);
  if (sub_100006580(v1, 1, v5) == 1)
  {
    sub_100021DC8(v1, (uint64_t *)&unk_10005C558);
LABEL_12:
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v26 = sub_100013AD0();
    v27 = sub_10001902C(v26, (uint64_t)qword_100060928);
    v28 = static os_log_type_t.default.getter();
    if (sub_10000B488(v28))
    {
      v29 = (uint8_t *)sub_10000B0C8(12);
      v30 = sub_10000B0C8(32);
      v51 = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_100032218();
      v33 = sub_1000321D0(v31, v32);
      v34 = sub_1000321A0(v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v35, v29 + 4, v29 + 12);
      sub_100032220();
      sub_100013C98((void *)&_mh_execute_header, v27, (os_log_type_t)v8, "No snapshot found on disk for kind=%{public}s", v29);
      sub_100013C90(v30, v36, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v30);
      sub_10000AFFC((uint64_t)v29);
    }

    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v1, v5);
  sub_100032120();
  v9 = URL.path.getter();
  v11 = sub_100030878(v9, v10);
  if (!v11)
  {
    sub_1000321C0();
    goto LABEL_12;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "CGImage");
  if (!v13)
  {
LABEL_18:
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v37 = sub_100013AD0();
    v38 = sub_10001902C(v37, (uint64_t)qword_100060928);
    v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)sub_10000B0C8(12);
      v41 = sub_10000B0C8(32);
      v51 = v41;
      *(_DWORD *)v40 = 136446210;
      v50 = v40 + 4;
      v42 = sub_100032218();
      v44 = sub_1000321D0(v42, v43);
      v45 = sub_1000321A0(v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, v46, v50, v40 + 12);
      sub_100032220();
      sub_100013C98((void *)&_mh_execute_header, v38, v39, "Failed to find valid snapshot on disk for kind=%{public}s", v40);
      sub_100013C90(v41, v47, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v41);
      sub_10000AFFC((uint64_t)v40);
    }

    sub_1000321C0();
    return 0;
  }
  v14 = v13;
  if ((sub_10003D104() & 1) == 0)
  {

    goto LABEL_18;
  }
  if (qword_10005BB78 != -1)
    swift_once(&qword_10005BB78, sub_1000423D4);
  v15 = sub_100013AD0();
  v16 = sub_10001902C(v15, (uint64_t)qword_100060928);
  v17 = static os_log_type_t.default.getter();
  if (sub_1000321F8(v17))
  {
    v18 = (uint8_t *)sub_10000B0C8(12);
    v50 = (uint8_t *)sub_10000B0C8(32);
    v51 = (uint64_t)v50;
    *(_DWORD *)v18 = 136446210;
    v49 = v18 + 4;
    v19 = sub_100032218();
    v21 = sub_1000321D0(v19, v20);
    v22 = sub_1000321A0(v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v23, v49, v18 + 12);
    sub_100032220();
    sub_100013C98((void *)&_mh_execute_header, v16, v2, "Found valid cached snapshot on disk for kind=%{public}s", v18);
    v24 = (uint64_t)v50;
    sub_100013C90((uint64_t)v50, v25, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v24);
    sub_10000AFFC((uint64_t)v18);
  }

  sub_1000321C0();
  return v12;
}

id sub_100030878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithContentsOfFile:", v5);

  return v6;
}

uint64_t sub_1000308E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v8;

  v6 = objc_autoreleasePoolPush();
  sub_100030948(a1, a2, a3, &v8);
  objc_autoreleasePoolPop(v6);
  return v8;
}

void sub_100030948(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  BOOL v36;
  _QWORD *v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  BOOL v50;
  uint64_t v51;
  uint8_t *v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint8_t *v58;
  uint8_t *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  id v76;
  NSObject *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void *v88;
  NSObject *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  id v102;
  double v103;
  double v104;
  double v105;
  double v106;
  id v107;
  id v108;
  void *v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint8_t *v114;
  NSObject *v115;
  uint64_t v116;
  uint8_t *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint8_t *v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint8_t *v125;
  uint64_t v126;
  id v127;
  id v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  _QWORD *v150;

  v143 = a3;
  v140 = a2;
  v150 = a4;
  v145 = type metadata accessor for SkyBackgroundGradient(0);
  v142 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v141 = v5;
  v144 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005350((uint64_t *)&unk_10005C558);
  v7 = __chkstk_darwin(v6);
  v134 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v136 = (char *)&v126 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v126 - v11;
  v13 = type metadata accessor for VFXEffectType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for URL(0);
  v146 = *(_QWORD *)(v149 - 8);
  v17 = __chkstk_darwin(v149);
  v147 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v133 = (char *)&v126 - v20;
  v139 = v21;
  __chkstk_darwin(v19);
  v148 = (char *)&v126 - v22;
  v23 = sub_100005350(&qword_10005D228);
  __chkstk_darwin(v23);
  v25 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for WeatherConditionBackgroundConfig(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v137 = v29;
  v138 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v31 = (char *)&v126 - v30;
  sub_100031E94(a1, (uint64_t)v25);
  if (sub_100006580((uint64_t)v25, 1, v26) == 1)
  {
    sub_100021DC8((uint64_t)v25, &qword_10005D228);
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_10000AADC(v32, (uint64_t)qword_100060928);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter(v34);
    v36 = os_log_type_enabled(v34, v35);
    v37 = v150;
    if (v36)
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to create snapshot because no configuration was provided", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    goto LABEL_21;
  }
  v135 = v27;
  v132 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v132(v31, v25, v26);
  v39 = MTLCreateSystemDefaultDevice();
  v40 = v26;
  if (!v39)
    goto LABEL_16;
  v41 = v39;
  v42 = objc_msgSend(v39, "newCommandQueue");
  if (!v42)
  {
    swift_unknownObjectRelease(v41);
LABEL_16:
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_10000AADC(v54, (uint64_t)qword_100060928);
    v48 = Logger.logObject.getter(v55);
    v56 = ((uint64_t (*)(void))static os_log_type_t.error.getter)();
    v57 = os_log_type_enabled(v48, v56);
    v37 = v150;
    if (v57)
    {
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v56, "Failed to create snapshot because command queue was not able to be setup", v58, 2u);
      v59 = v58;
      v40 = v26;
      swift_slowDealloc(v59, -1, -1);
    }
    goto LABEL_20;
  }
  v43 = v42;
  v131 = v31;
  v44 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for VFXEffectType.background(_:), v13);
  VFXEffectType.url.getter(v44);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v45 = v149;
  if (sub_100006580((uint64_t)v12, 1, v149) == 1)
  {
    sub_100021DC8((uint64_t)v12, (uint64_t *)&unk_10005C558);
    v31 = v131;
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v46 = type metadata accessor for Logger(0);
    v47 = sub_10000AADC(v46, (uint64_t)qword_100060928);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    v50 = os_log_type_enabled(v48, v49);
    v37 = v150;
    if (v50)
    {
      v51 = v40;
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Failed to create snapshot because URL for effect could not be created", v52, 2u);
      v53 = v52;
      v40 = v51;
      swift_slowDealloc(v53, -1, -1);
    }
    swift_unknownObjectRelease(v43);
    swift_unknownObjectRelease(v41);
LABEL_20:

    (*(void (**)(char *, uint64_t))(v135 + 8))(v31, v40);
LABEL_21:
    v60 = 0;
    goto LABEL_22;
  }
  v127 = v41;
  v130 = v40;
  v61 = v146;
  v129 = *(void (**)(char *, char *, uint64_t))(v146 + 32);
  v129(v148, v12, v45);
  if (qword_10005BB78 != -1)
    swift_once(&qword_10005BB78, sub_1000423D4);
  v62 = type metadata accessor for Logger(0);
  v63 = sub_10000AADC(v62, (uint64_t)qword_100060928);
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v66 = 0;
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "Starting to create new snapshot", v66, 2u);
    swift_slowDealloc(v66, -1, -1);
  }

  v67 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VFXScene.LoadOptions(0)), "init");
  dispatch thunk of VFXScene.LoadOptions.automaticallyPrepareScene.setter(0);
  dispatch thunk of VFXScene.LoadOptions.clientID.setter(0xD000000000000011, 0x80000001000480F0);
  dispatch thunk of VFXScene.LoadOptions.setupRenderer.setter(1);
  dispatch thunk of VFXScene.LoadOptions.internalPixelFormatDepth.setter(0);
  dispatch thunk of VFXScene.LoadOptions.useGammaBlending.setter(1);
  v68 = v135;
  if (qword_10005BB30 != -1)
    swift_once(&qword_10005BB30, sub_10002BEFC);
  v69 = sub_100031EDC(0x746C7561666564, 0xE700000000000000, 0x62696C6C6174656DLL, 0xE800000000000000, (void *)qword_100060850);
  v128 = v43;
  v126 = v63;
  if (v69)
  {
    v70 = v69;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v69);

    v71 = (uint64_t)v136;
    ((void (*)(char *))v129)(v136);
    sub_10000658C(v71, 0, 1, v45);
    v72 = sub_100006580(v71, 1, v45);
    v73 = v130;
    if (v72 != 1)
    {
      v74 = v133;
      v129(v133, (char *)v71, v45);
      v75 = (uint64_t)v134;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v134, v74, v45);
      sub_10000658C(v75, 0, 1, v45);
      dispatch thunk of VFXScene.LoadOptions.metalLibraryURL.setter(v75);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v74, v45);
      goto LABEL_34;
    }
  }
  else
  {
    v71 = (uint64_t)v136;
    sub_10000658C((uint64_t)v136, 1, 1, v45);
    v73 = v130;
  }
  sub_100021DC8(v71, (uint64_t *)&unk_10005C558);
LABEL_34:
  v76 = objc_allocWithZone((Class)type metadata accessor for VFXScene(0));
  v134 = (char *)v67;
  v136 = (char *)VFXScene.init(options:)(v134);
  v77 = dispatch_group_create();
  dispatch_group_enter(v77);
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v147, v148, v45);
  v78 = v138;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v138, v131, v73);
  v79 = v142;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v144, v140, v145);
  v80 = *(unsigned __int8 *)(v61 + 80);
  v81 = (v80 + 32) & ~v80;
  v82 = *(unsigned __int8 *)(v68 + 80);
  v83 = (v139 + v82 + v81) & ~v82;
  v84 = *(unsigned __int8 *)(v79 + 80);
  v85 = (v137 + v84 + v83) & ~v84;
  v86 = (v141 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  v87 = swift_allocObject(&unk_100057428, v86 + 8, v80 | v82 | v84 | 7);
  v88 = v136;
  *(_QWORD *)(v87 + 16) = v77;
  *(_QWORD *)(v87 + 24) = v88;
  v129((char *)(v87 + v81), v147, v149);
  v132((char *)(v87 + v83), v78, v130);
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v87 + v85, v144, v145);
  *(_QWORD *)(v87 + v86) = v143;
  v89 = v77;
  v90 = v88;
  dispatch thunk of VFXScene.performTransaction(_:)(sub_100032078, v87);
  swift_release(v87);
  OS_dispatch_group.wait()();
  v92 = dispatch thunk of VFXScene.effects.getter(v91);
  v93 = v92;
  if ((unint64_t)v92 >> 62)
  {
    if (v92 >= 0)
      v92 &= 0xFFFFFFFFFFFFFF8uLL;
    v94 = _CocoaArrayWrapper.endIndex.getter(v92);
  }
  else
  {
    v94 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v37 = v150;
  v95 = v127;
  v96 = swift_bridgeObjectRelease(v93);
  v97 = v131;
  v98 = v146;
  if (!v94)
  {
    v115 = Logger.logObject.getter(v96);
    v116 = static os_log_type_t.error.getter(v115);
    if (os_log_type_enabled(v115, (os_log_type_t)v116))
    {
      v117 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v117 = 0;
      _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v116, "Failed to create snapshot because effect was not added to scene", v117, 2u);
      swift_slowDealloc(v117, -1, -1);
    }

    swift_unknownObjectRelease(v128);
    swift_unknownObjectRelease(v95);

    goto LABEL_49;
  }
  v99 = objc_allocWithZone((Class)VFXRenderer);
  v100 = objc_msgSend(v99, "initWithCommandQueue:", v128, v126);
  v101 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v100, "setBackgroundColor:", v101);

  objc_msgSend(v100, "setScene:", v90);
  v102 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v102, "nativeBounds");
  v104 = v103;
  v106 = v105;

  v107 = objc_msgSend(v100, "snapshotImageWithSize:", v104, v106);
  if (!v107)
  {
    v118 = Logger.logObject.getter(0);
    v119 = static os_log_type_t.error.getter(v118);
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v120 = 0;
      _os_log_impl((void *)&_mh_execute_header, v118, v119, "Failed to create snapshot because VFX renderer did not provide an image", v120, 2u);
      v121 = v120;
      v97 = v131;
      swift_slowDealloc(v121, -1, -1);
    }

    swift_unknownObjectRelease(v128);
    swift_unknownObjectRelease(v95);
LABEL_49:
    (*(void (**)(char *, uint64_t))(v98 + 8))(v148, v149);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v97, v130);
LABEL_54:
    v60 = 0;
    goto LABEL_22;
  }
  v60 = v107;
  v108 = objc_msgSend(v107, "CGImage");
  if (!v108)
  {
LABEL_51:
    v122 = Logger.logObject.getter(v108);
    v123 = static os_log_type_t.error.getter(v122);
    if (os_log_type_enabled(v122, v123))
    {
      v124 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v124 = 0;
      _os_log_impl((void *)&_mh_execute_header, v122, v123, "Failed to create valid snapshot", v124, 2u);
      v125 = v124;
      v95 = v127;
      swift_slowDealloc(v125, -1, -1);
    }

    swift_unknownObjectRelease(v128);
    swift_unknownObjectRelease(v95);

    (*(void (**)(char *, uint64_t))(v98 + 8))(v148, v149);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v131, v130);
    goto LABEL_54;
  }
  v109 = v108;
  v110 = sub_10003D104();
  if ((v110 & 1) == 0)
  {

    goto LABEL_51;
  }
  v111 = Logger.logObject.getter(v110);
  v112 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v111, v112))
  {
    v113 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v113 = 0;
    _os_log_impl((void *)&_mh_execute_header, v111, v112, "Successfully created new snapshot", v113, 2u);
    v114 = v113;
    v98 = v146;
    swift_slowDealloc(v114, -1, -1);
  }

  swift_unknownObjectRelease(v128);
  swift_unknownObjectRelease(v127);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v148, v149);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v131, v130);
LABEL_22:
  *v37 = v60;
}

void sub_100031750(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  dispatch_group_t v53;
  uint64_t v54;
  uint64_t v55[2];

  v51 = a6;
  v52 = a4;
  v49 = a5;
  v53 = a1;
  v8 = sub_100005350(&qword_10005C370);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VFXEffectType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100005350(&qword_10005D228);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a2;
  v22 = (void *)dispatch thunk of VFXScene.addEffect(from:)(a3);
  v23 = type metadata accessor for WeatherVFXEffect(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v48 = v22;
  v24 = WeatherVFXEffect.init(vfxEffect:)();
  v25 = type metadata accessor for WeatherConditionBackgroundConfig(0);
  sub_10000658C((uint64_t)v21, 1, 1, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for VFXEffectType.background(_:), v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for WeatherConditionBackgroundConfig.CameraPositionType.default(_:), v11);
  v26 = type metadata accessor for SkyBackgroundGradient(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v49, v26);
  sub_10000658C((uint64_t)v10, 0, 1, v26);
  WeatherVFXEffect.applyUpdate(_:lastConfiguration:effectType:cameraPositionType:hasLocationChanged:gradient:)(v52, v21, v18, v14, 0, v10);
  sub_100021DC8((uint64_t)v10, &qword_10005C370);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_100021DC8((uint64_t)v21, &qword_10005D228);
  v27 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v28 = objc_msgSend(v27, "userInterfaceIdiom");

  v30 = v51;
  if (v28 == (id)1)
  {
    v29 = sub_100032110(v51);
    if ((_DWORD)v29)
    {
      if (qword_10005BB78 != -1)
        swift_once(&qword_10005BB78, sub_1000423D4);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_10000AADC(v31, (uint64_t)qword_100060928);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = swift_slowAlloc(32, -1);
        v55[0] = v36;
        *(_DWORD *)v35 = 136446210;
        v37 = sub_10002FBB0(v30);
        v39 = v38;
        v54 = sub_1000210CC(v37, v38, v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v35 + 4, v35 + 12);
        swift_bridgeObjectRelease(v39);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Applying overrides for landscape snapshot; kind=%{public}s",
          v35,
          0xCu);
        swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);
      }

      v40 = v52;
      v41 = sub_100005350(&qword_10005D230);
      v42 = type metadata accessor for VFXOverrideModel(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(unsigned __int8 *)(v43 + 80);
      v45 = (v44 + 32) & ~v44;
      v46 = swift_allocObject(v41, v45 + *(_QWORD *)(v43 + 72), v44 | 7);
      *(_OWORD *)(v46 + 16) = xmmword_100045B60;
      VFXDeviceRotationState.init(degrees:progress:)(90.0, 1.0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v46 + v45, enum case for VFXOverrideModel.deviceRotation(_:), v42);
      WeatherVFXEffect.applyOverrides(_:config:)(v46, v40);
      v29 = swift_bridgeObjectRelease(v46);
    }
  }
  dispatch thunk of VFXScene.prepare()(v29);
  swift_release(v24);

  dispatch_group_leave(v53);
}

uint64_t sub_100031D94()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for VFXSnapshotManager()
{
  return objc_opt_self(_TtC13WeatherPoster18VFXSnapshotManager);
}

_QWORD *initializeBufferWithCopyOfBuffer for SnapshotKind(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SnapshotKind(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SnapshotKind(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t sub_100031E2C()
{
  return 0;
}

ValueMetadata *type metadata accessor for SnapshotKind()
{
  return &type metadata for SnapshotKind;
}

unint64_t sub_100031E48()
{
  unint64_t result;

  result = qword_10005D220;
  if (!qword_10005D220)
  {
    result = swift_getWitnessTable(&unk_100046E10, &type metadata for SnapshotKind);
    atomic_store(result, (unint64_t *)&qword_10005D220);
  }
  return result;
}

BOOL sub_100031E84(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t sub_100031E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005D228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100031EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8;
  NSString v9;
  id v10;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v10 = objc_msgSend(a5, "URLForResource:withExtension:", v8, v9);

  return v10;
}

uint64_t sub_100031F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = sub_1000321F0();
  v1 = *(_QWORD *)(v17 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v16 = type metadata accessor for WeatherConditionBackgroundConfig(0);
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for SkyBackgroundGradient(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v13 = v2 | v6 | v11 | 7;
  v14 = ((*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  return swift_deallocObject(v0, v14, v13);
}

void sub_100032078()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_1000321F0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for WeatherConditionBackgroundConfig(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for SkyBackgroundGradient(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_100031750(*(NSObject **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, v0 + v5, v0 + v8, *(_QWORD *)(v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

BOOL sub_100032110(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

unint64_t sub_100032120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005D238;
  if (!qword_10005D238)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005D238);
  }
  return result;
}

uint64_t sub_10003215C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterDataModel.DataPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000321A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_1000321B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_1000321C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1000321D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_1000321D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 96, v5 - 88, v4, a4);
}

uint64_t sub_1000321F0()
{
  return type metadata accessor for URL(0);
}

BOOL sub_1000321F8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100032208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100032218()
{
  uint64_t v0;

  return sub_10002FBB0(v0);
}

uint64_t sub_100032220()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100032228()
{
  uint64_t v0;

  return sub_10002FBB0(v0);
}

uint64_t *WeatherLocation.currentLocationID.unsafeMutableAddressor()
{
  if (qword_10005BB38 != -1)
    swift_once(&qword_10005BB38, sub_100032270);
  return &static WeatherLocation.currentLocationID;
}

uint64_t sub_100032270()
{
  uint64_t result;
  uint64_t v1;

  result = static Location.currentLocationIntentID.getter();
  static WeatherLocation.currentLocationID = result;
  *(_QWORD *)algn_100060868 = v1;
  return result;
}

uint64_t static WeatherLocation.currentLocationID.getter()
{
  uint64_t v0;

  if (qword_10005BB38 != -1)
    swift_once(&qword_10005BB38, sub_100032270);
  v0 = static WeatherLocation.currentLocationID;
  swift_bridgeObjectRetain(*(_QWORD *)algn_100060868);
  return v0;
}

const char *WeatherLocation.alternateCurrentLocationID.unsafeMutableAddressor()
{
  return "_localCity_";
}

uint64_t static WeatherLocation.alternateCurrentLocationID.getter()
{
  return 0x69436C61636F6C5FLL;
}

void sub_100032318()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    objc_msgSend(v1, "removeFromSuperview");
    v1 = *(void **)(v0 + 24);
  }
  *(_QWORD *)(v0 + 24) = 0;

}

uint64_t sub_100032344()
{
  uint64_t v0;
  char v1;

  if (*(_BYTE *)(v0 + 33) == 1)
    v1 = *(_BYTE *)(v0 + 32) ^ 1;
  else
    v1 = 0;
  return v1 & 1;
}

void sub_100032368(double a1)
{
  uint64_t v1;
  void *v3;
  unint64_t v4;
  id v5;
  _QWORD *v6;
  __int128 v7;
  double v8;
  double v9;

  if (!UIAccessibilityIsReduceMotionEnabled() && *(_BYTE *)(v1 + 33) == 1 && (*(_BYTE *)(v1 + 32) & 1) == 0)
  {
    v3 = *(void **)(v1 + 24);
    if (v3)
    {
      v8 = a1;
      v7 = xmmword_100046E60;
      v4 = sub_100032B40();
      v5 = v3;
      v6 = FloatingPoint.clamped(to:)(&v9, &v7, &type metadata for CGFloat, v4);
      sub_100004ED4((uint64_t)v6, (1.0 - v9) * 0.2 + 1.0, 0.5, 0.25);

    }
  }
}

void sub_10003242C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t inited;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  UIImage *v34;
  uint64_t v35;
  void *v36;
  id v37;
  os_log_type_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t ObjectType;
  uint64_t v44;
  _BYTE v45[40];

  v4 = v3;
  if (*(_BYTE *)(v3 + 33) == 1 && (*(_BYTE *)(v3 + 32) & 1) == 0)
  {
    if (a1)
    {
      v7 = *(NSObject **)(v3 + 16);
      v8 = a1;
      v9 = v7;
      if ((sub_10002EE58(1) & 1) != 0)
      {
        if (qword_10005BB68 != -1)
          swift_once(&qword_10005BB68, sub_100042380);
        v10 = sub_100013AD0();
        sub_10000AADC(v10, (uint64_t)qword_1000608F8);
        sub_10001A82C();
        v11 = sub_100019080();
        if (!sub_100032B88(v11))
          goto LABEL_31;
        v12 = (uint8_t *)sub_100032B7C();
        *(_WORD *)v12 = 0;
        v13 = "Skipping unload of background because rendering is in progress";
        goto LABEL_30;
      }
      if (*(_QWORD *)(v4 + 24))
      {
        v18 = sub_100032B98();
        v19 = objc_msgSend(v18, "subviews");

        v20 = sub_100008814();
        v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

        v22 = sub_100032988(v21);
        swift_bridgeObjectRelease(v21);
        v23 = sub_100005350(&qword_10005D2F8);
        inited = swift_initStackObject(v23, v45);
        *(_OWORD *)(inited + 16) = xmmword_100045B60;
        v25 = *(void **)(v4 + 24);
        *(_QWORD *)(inited + 32) = v25;
        v44 = inited;
        specialized Array._endMutation()(inited, v26);
        v9 = v44;
        v27 = v25;
        LOBYTE(v25) = sub_1000291E4((uint64_t)v22, v44);
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v22);
        if ((v25 & 1) != 0)
        {
          if (qword_10005BB68 != -1)
            swift_once(&qword_10005BB68, sub_100042380);
          v28 = sub_100013AD0();
          sub_10000AADC(v28, (uint64_t)qword_1000608F8);
          sub_10001A82C();
          v29 = sub_100019080();
          if (!sub_100032B88(v29))
            goto LABEL_31;
          v12 = (uint8_t *)sub_100032B7C();
          *(_WORD *)v12 = 0;
          v13 = "Skipping unload of background because a snapshot already exists";
          goto LABEL_30;
        }
      }
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v30 = sub_100013AD0();
      sub_10000AADC(v30, (uint64_t)qword_1000608F8);
      sub_10001A82C();
      v31 = sub_100019080();
      if (os_log_type_enabled(v9, v31))
      {
        v32 = (uint8_t *)sub_100032B7C();
        *(_WORD *)v32 = 0;
        sub_100019040((void *)&_mh_execute_header, v9, v31, "Starting to unload background while on home screen", v32);
        sub_10000AFFC((uint64_t)v32);
      }

      v33 = sub_100032B98();
      v34 = sub_100004800();

      if (!v34)
      {
        v9 = Logger.logObject.getter(v35);
        v38 = static os_log_type_t.error.getter(v9);
        if (!sub_100032B88(v38))
        {
LABEL_31:

          goto LABEL_14;
        }
        v12 = (uint8_t *)sub_100032B7C();
        *(_WORD *)v12 = 0;
        v13 = "Failed to snapshot the background view when unloading on home screen";
LABEL_30:
        sub_100019040((void *)&_mh_execute_header, v9, (os_log_type_t)v4, v13, v12);
        sub_10000AFFC((uint64_t)v12);
        goto LABEL_31;
      }
      v36 = *(void **)(v4 + 24);
      if (v36)
      {
        v37 = *(id *)(v4 + 24);
      }
      else
      {
        v39 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
        v40 = sub_100032B98();
        sub_100004CB0(v39, 2);

        v41 = *(void **)(v4 + 24);
        *(_QWORD *)(v4 + 24) = v39;
        v37 = v39;

        v36 = 0;
      }
      v42 = v36;
      objc_msgSend(v37, "setImage:", v34);
      ObjectType = swift_getObjectType(a2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(2, ObjectType, a3);
      sub_10002EEB8();

    }
    else
    {
      if (qword_10005BB68 != -1)
        swift_once(&qword_10005BB68, sub_100042380);
      v14 = sub_100013AD0();
      sub_10000AADC(v14, (uint64_t)qword_1000608F8);
      v15 = sub_10001A82C();
      v16 = static os_log_type_t.error.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)sub_100032B7C();
        *(_WORD *)v17 = 0;
        sub_100019040((void *)&_mh_execute_header, v15, v16, "Failed to unload background on home screen because renderer is not set", v17);
        sub_10000AFFC((uint64_t)v17);
      }

    }
  }
LABEL_14:
  sub_10002E8C8(2);
}

void sub_1000328A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t ObjectType;
  unsigned __int8 v10;
  int v11;
  void *v12;

  if (*(_BYTE *)(v3 + 33) == 1)
  {
    v4 = v3;
    if ((*(_BYTE *)(v3 + 32) & 1) == 0)
    {
      v8 = objc_msgSend(a1, "environment");
      ObjectType = swift_getObjectType(v8);
      sub_100032BA4(ObjectType);
      v11 = v10;
      swift_unknownObjectRelease(v8);
      if (v11 == 1)
      {
        sub_10003242C(a1, a2, a3);
      }
      else
      {
        v12 = *(void **)(v4 + 24);
        if (v12)
        {
          objc_msgSend(v12, "removeFromSuperview");
          v12 = *(void **)(v4 + 24);
        }
        *(_QWORD *)(v4 + 24) = 0;

      }
    }
  }
}

uint64_t sub_100032974(char a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 33) = a1;
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = 0;
  return v2;
}

_QWORD *sub_100032988(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = &_swiftEmptyArrayStorage;
  if (v2)
  {
    v16 = &_swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      v4 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4 + 32);
        v6 = v5;
        ++v4;
        v14 = v5;
        v7 = sub_100008814();
        v8 = v6;
        v9 = sub_100005350(&qword_10005D300);
        swift_dynamicCast(&v15, &v14, v7, v9, 7);
        v10 = v15;

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v11 = v16[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
        specialized ContiguousArray._endMutation()(v12);
      }
      while (v2 != v4);
      return v16;
    }
  }
  return result;
}

uint64_t sub_100032ADC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return v0;
}

uint64_t sub_100032B00()
{
  uint64_t v0;

  sub_100032ADC();
  return swift_deallocClassInstance(v0, 34, 7);
}

uint64_t type metadata accessor for AnimationUnloadManager()
{
  return objc_opt_self(_TtC13WeatherPoster22AnimationUnloadManager);
}

unint64_t sub_100032B40()
{
  unint64_t result;

  result = qword_10005D308;
  if (!qword_10005D308)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10005D308);
  }
  return result;
}

uint64_t sub_100032B7C()
{
  return swift_slowAlloc(2, -1);
}

BOOL sub_100032B88(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_100032B98()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2792));
}

void sub_100032BA4(uint64_t a1)
{
  double v1;
  uint64_t v2;
  char v3;
  double v4;
  uint64_t v5;

  sub_100005D14(a1, "unlockProgress");
  v2 = sub_100032C7C(v1);
  v3 = v2;
  sub_100005D14(v2, "unlockProgress");
  if ((v3 & 1) == 0)
  {
    v5 = CGFloat.isEqualTo(_:)(1.0, v4);
    sub_100005D14(v5, "unlockProgress");
  }
  sub_100013994();
}

void sub_100032C10(uint64_t a1)
{
  double v1;
  uint64_t v2;
  char v3;
  double v4;
  uint64_t v5;

  sub_100005D14(a1, "linearBacklightProgress");
  v2 = sub_100032C7C(v1);
  v3 = v2;
  sub_100005D14(v2, "linearBacklightProgress");
  if ((v3 & 1) == 0)
  {
    v5 = CGFloat.isEqualTo(_:)(1.0, v4);
    sub_100005D14(v5, "linearBacklightProgress");
  }
  sub_100013994();
}

uint64_t sub_100032C7C(double a1)
{
  return CGFloat.isEqualTo(_:)(0.0, a1);
}

uint64_t sub_100032C88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v12;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MicaBackgroundAnimation.DynamicPosterRotationState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v10 = (int *)type metadata accessor for DynamicRotationState(0);
  MicaBackgroundAnimation.DynamicPosterRotationState.init(animationId:fromOrientation:toOrientation:progress:)(v5, *(_QWORD *)(a1 + v10[7]), *(_QWORD *)(a1 + v10[8]), *(float *)(a1 + v10[6]));
  MicaBackgroundAnimation.updateDynamicPosterRotationState(_:)(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100032D88@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  unsigned int *v5;

  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  v4 = type metadata accessor for TargetWindowSizeClass(0);
  v5 = (unsigned int *)&enum case for TargetWindowSizeClass.maglev(_:);
  if (v3 != (id)1)
    v5 = (unsigned int *)&enum case for TargetWindowSizeClass.poster(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

void sub_100032E18(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t countAndFlagsBits;
  unint64_t v9;
  char v10;
  int64x2_t v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  _BYTE v16[24];
  uint64_t v17;
  int64x2_t v18;
  unint64_t v19;
  char v20;
  Swift::String v21;

  v3 = sub_100005350((uint64_t *)&unk_10005C4B0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData;
  swift_beginAccess(v6, v16, 0, 0);
  sub_10000AD40(v6, (uint64_t)v5, (uint64_t *)&unk_10005C4B0);
  v7 = type metadata accessor for PosterData(0);
  if (sub_100006580((uint64_t)v5, 1, v7) == 1)
  {
    countAndFlagsBits = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0uLL;
  }
  else if (swift_getEnumCaseMultiPayload(v5, v7) == 1)
  {
    if (qword_10005BB30 != -1)
      swift_once(&qword_10005BB30, sub_10002BEFC);
    v12 = (id)qword_100060850;
    v21._countAndFlagsBits = 0xD000000000000051;
    v21._object = (void *)0x80000001000487F0;
    v13._object = (void *)0x80000001000487C0;
    v13._countAndFlagsBits = 0xD000000000000021;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v21);
    countAndFlagsBits = v15._countAndFlagsBits;

    sub_10000AB38((uint64_t)v5, type metadata accessor for PosterData);
    v11 = vdupq_n_s64(0x6E6F697461636F6CuLL);
    v11.i64[0] = (uint64_t)v15._object;
    v10 = 1;
    v9 = 0xED00006C6C69662ELL;
  }
  else
  {
    sub_10002B7CC(*v5, 1, (uint64_t)&v17);
    countAndFlagsBits = v17;
    v11 = v18;
    v9 = v19;
    v10 = v20;
  }
  *(_QWORD *)a1 = countAndFlagsBits;
  *(int64x2_t *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
}

id sub_10003300C(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = sub_100013AD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v33 - v9;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor] = 0;
  v11 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData];
  v12 = sub_1000190F4();
  sub_10000B3FC(v11, v13, v14, v12);
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_lastRenderedAnimationViewModel];
  v16 = type metadata accessor for PosterAnimationViewModel(0);
  sub_10000B3FC(v15, v17, v18, v16);
  v1[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_hasPosterDataUpdated] = 0;
  v19 = qword_10005BB60;
  v20 = v1;
  if (v19 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v21 = sub_10000AADC(v4, (uint64_t)qword_1000608E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v21, v4);
  sub_10003593C();
  if ((a1 & 1) != 0)
  {
    v22 = type metadata accessor for VFXAnimation(0);
    sub_100013A7C(v22);
    v23 = sub_10000CA10();
    v24 = &off_1000564A8;
  }
  else
  {
    v25 = type metadata accessor for MicaAnimation(0);
    sub_100013A7C(v25);
    v23 = (uint64_t)sub_10003973C((uint64_t)v8);
    v24 = &off_100057568;
  }
  v26 = (uint64_t *)&v20[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_animation];
  *v26 = v23;
  v26[1] = (uint64_t)v24;
  v27 = objc_allocWithZone((Class)type metadata accessor for PosterDataManager());
  *(_QWORD *)&v20[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_dataManager] = sub_10003DB7C(1);
  sub_10003593C();
  v28 = type metadata accessor for PosterLabelManager(0);
  sub_100013A7C(v28);
  sub_100035F18((uint64_t)v8);
  *(_QWORD *)&v20[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_labelManager] = v29;
  v20[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_deviceSupportsVFX] = a1 & 1;
  v30 = type metadata accessor for DynamicRotationManager(0);
  sub_100013A7C(v30);
  v31 = sub_10002D818();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  *(_QWORD *)&v20[OBJC_IVAR____TtC13WeatherPoster12PosterEditor_rotationManager] = v31;

  v33.receiver = v20;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, "init");
}

void sub_100033254(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  os_log_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[3];

  v61 = a2;
  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_100008850();
  v60 = v6;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v7);
  sub_100013B18();
  v10 = v9 - v8;
  v11 = sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v12);
  sub_1000088BC();
  v62 = v13;
  __chkstk_darwin(v14);
  sub_100035964();
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor) = a1;

  sub_100019088(*(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_rotationManager)+ OBJC_IVAR____TtC13WeatherPoster22DynamicRotationManager_delegate, (uint64_t)&off_100057498);
  v19 = sub_100005350((uint64_t *)&unk_10005D400);
  v20 = sub_10000B5B0(v19, 64);
  *(_OWORD *)(v20 + 16) = xmmword_100045E20;
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_animation);
  v22 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_animation + 8) + 8);
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v22;
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_labelManager);
  *(_QWORD *)(v20 + 48) = v23;
  *(_QWORD *)(v20 + 56) = &off_100057530;
  v24 = a1;
  v25 = v21;
  v26 = v17;
  v27 = v61;
  swift_unknownObjectRetain(v25);
  swift_retain(v23);
  sub_10002BF50(v20);
  swift_bridgeObjectRelease(v20);
  v28 = sub_100035958();
  sub_10002BFD8((uint64_t)v28);
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_dataManager);
  sub_10003D6E0(v26);
  sub_10001352C((uint64_t)v26, v10, type metadata accessor for PosterData);
  v30 = sub_10000658C(v10, 0, 1, v11);
  v31 = v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData;
  sub_10001F2D8(v30, (uint64_t)v64);
  sub_100013120(v10, v31, (uint64_t *)&unk_10005C4B0);
  swift_endAccess(v64);
  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v32 = sub_100013AD0();
  sub_10000AADC(v32, (uint64_t)qword_1000608E0);
  sub_10001352C((uint64_t)v26, v3, type metadata accessor for PosterData);
  v33 = v62;
  sub_10001352C((uint64_t)v26, v62, type metadata accessor for PosterData);
  v34 = swift_unknownObjectRetain_n(v27, 2);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, (os_log_type_t)v36))
  {
    v57 = v36;
    v58 = v35;
    v59 = v26;
    v37 = sub_10000B0C8(52);
    v56 = sub_10000B0C8(96);
    v64[0] = v56;
    *(_DWORD *)v37 = 136447235;
    v38 = sub_100035958();
    v39 = sub_1000192C8((uint64_t)v38);
    v41 = v40;
    v63 = sub_1000210CC(v39, v40, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v37 + 4, v37 + 12);
    sub_10003594C();
    v42 = swift_bridgeObjectRelease(v41);
    *(_WORD *)(v37 + 12) = 2160;
    sub_100035900(v42, v43, v37 + 14, v37 + 22);
    *(_WORD *)(v37 + 22) = 2081;
    v44 = sub_1000258AC();
    v63 = sub_1000210CC(v44, v45, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v37 + 24, v37 + 32);
    sub_100005D2C();
    sub_10000AB38(v3, type metadata accessor for PosterData);
    *(_WORD *)(v37 + 32) = 2160;
    sub_100035900(v46, v47, v37 + 34, v37 + 42);
    *(_WORD *)(v37 + 42) = 2081;
    v48 = v60;
    sub_100025800(v60);
    v49 = type metadata accessor for PosterDataModel(0);
    if (sub_100006580(v48, 1, v49) == 1)
    {
      sub_10000AB60(v48, &qword_10005C4A0);
      v50 = 0xE300000000000000;
      v51 = 7104878;
    }
    else
    {
      sub_10000AB38(v48, type metadata accessor for PosterDataModel);
      v51 = sub_100019094();
      v50 = v52;
    }
    v63 = sub_1000210CC(v51, v50, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64, v37 + 44, v37 + 52);
    sub_100005D2C();
    sub_10000AB38(v33, type metadata accessor for PosterData);
    v53 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "Did initialize; orientation=%{public}s, data=%{private,mask.hash}s, location=%{private,mask.hash}s",
      (uint8_t *)v37,
      0x34u);
    v54 = v56;
    swift_arrayDestroy(v56, 3, (char *)&type metadata for Any + 8);
    sub_10000AFFC(v54);
    sub_10000AFFC(v37);

    v26 = v59;
  }
  else
  {
    sub_10003594C();
    sub_10000AB38(v3, type metadata accessor for PosterData);
    sub_10000AB38(v33, type metadata accessor for PosterData);

  }
  sub_100019088(v29 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate, (uint64_t)&off_1000574E0);
  sub_100019088(v29 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate, (uint64_t)&off_1000574C8);
  sub_10003D904();
  sub_10000AB38((uint64_t)v26, type metadata accessor for PosterData);
  sub_1000139F8();
}

void sub_1000337E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_100035980();
  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v5 = sub_100013AD0();
  v6 = sub_10001902C(v5, (uint64_t)qword_1000608E0);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_10000B0C8(12);
    v9 = sub_10000B0C8(32);
    v18 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = sub_1000192C8((uint64_t)v4);
    v12 = v11;
    v17 = sub_1000210CC(v10, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Did update; orientation=%{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    sub_10000AFFC(v9);
    sub_10000AFFC((uint64_t)v8);
  }

  v13 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v14 = objc_msgSend(v13, "userInterfaceIdiom");

  if (v14 == (id)1)
  {
    v15 = sub_100035980();
    v16 = objc_msgSend(a3, "animationSettings");
    sub_10002C43C((uint64_t)v15, v16);

  }
}

uint64_t sub_100033A54()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  Swift::String v13;

  if (qword_10005BB30 != -1)
    swift_once(&qword_10005BB30, sub_10002BEFC);
  v0 = (id)qword_100060850;
  v13._countAndFlagsBits = 0xD000000000000026;
  v13._object = (void *)0x8000000100048870;
  v1._countAndFlagsBits = 0x72656874616557;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v13);

  v4 = objc_msgSend(objc_allocWithZone((Class)PRTimeFontConfiguration), "initWithTimeFontIdentifier:", PRTimeFontIdentifierSoft);
  v5 = objc_msgSend((id)objc_opt_self(PRPosterColor), "vibrantMaterialColor");
  v12[3] = sub_1000135E0(0, &qword_10005C990, PRPosterColor_ptr);
  v12[0] = v5;
  v6 = objc_allocWithZone((Class)PREditingLook);
  v7 = sub_1000356A0(0xD000000000000013, 0x8000000100048850, v3._countAndFlagsBits, (uint64_t)v3._object, v4, v12);
  v8 = sub_100005350(&qword_10005BBA0);
  v9 = sub_10000B5B0(v8, 40);
  *(_OWORD *)(v9 + 16) = xmmword_100046150;
  *(_QWORD *)(v9 + 32) = v7;
  v12[0] = v9;
  specialized Array._endMutation()(v9, v10);
  return v12[0];
}

id sub_100033C74()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;

  v0 = sub_100035978(objc_allocWithZone((Class)PREditorContentStylePickerConfiguration));
  objc_msgSend(v0, "setColorWellDisplayMode:", 1);
  v1 = sub_100005350(&qword_10005BBA0);
  v2 = sub_10000B5B0(v1, 48);
  *(_OWORD *)(v2 + 16) = xmmword_100046ED0;
  *(_QWORD *)(v2 + 32) = sub_100035978(objc_allocWithZone((Class)PRPosterContentVibrantMaterialStyle));
  v3 = sub_100035978(objc_allocWithZone((Class)PRPosterContentVibrantMonochromeStyle));
  *(_QWORD *)(v2 + 40) = v3;
  specialized Array._endMutation()(v3, v4);
  v5 = objc_allocWithZone((Class)PREditorContentStylePalette);
  v6 = sub_1000357E0(v2, 0, 0xE000000000000000);
  objc_msgSend(v0, "setStylePalette:", v6);

  return v0;
}

void sub_100033DAC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE v18[24];
  uint64_t v19[5];
  _OWORD v20[2];
  char v21;
  _OWORD v22[2];
  char v23;

  v4 = v2;
  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_100013B18();
  v9 = v8 - v7;
  v10 = type metadata accessor for PosterAnimationViewModel(0);
  sub_100008864();
  __chkstk_darwin(v11);
  sub_10002DC64();
  sub_100032E18((uint64_t)v19);
  v12 = objc_msgSend(a2, "backgroundView");
  sub_100035884((uint64_t)v19, (uint64_t)v20);
  if (*((_QWORD *)&v20[0] + 1))
  {
    v22[0] = v20[0];
    v22[1] = v20[1];
    v23 = v21;
    sub_100035F88((uint64_t)v22, v12);
  }
  else
  {
    sub_100035EA0();
  }

  sub_100033F80(v2, (uint64_t)v19, a2, v3);
  sub_1000358CC(v19);
  sub_10001352C(v3, v9, type metadata accessor for PosterAnimationViewModel);
  v13 = sub_10000658C(v9, 0, 1, v10);
  v14 = v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_lastRenderedAnimationViewModel;
  sub_10001F2D8(v13, (uint64_t)v18);
  sub_100013120(v9, v14, &qword_10005C320);
  swift_endAccess(v18);
  v15 = sub_10003592C(OBJC_IVAR____TtC13WeatherPoster12PosterEditor_animation);
  v16 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 24);
  v17 = swift_unknownObjectRetain(v4);
  v16(v17, &off_1000574B0, v15, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 40))(v3, 0, v15, v9);
  (*(void (**)(uint64_t, uint64_t))(v9 + 56))(v15, v9);
  sub_10000AB38(v3, type metadata accessor for PosterAnimationViewModel);
}

void sub_100033F80(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  id v47;
  id v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  int *v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint8_t *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115[24];
  char v116[8];
  uint8_t *v117;

  v111 = a3;
  v112 = a4;
  sub_100035884(a2, (uint64_t)v116);
  v110 = v117;
  v5 = sub_100005350(&qword_10005BE78);
  __chkstk_darwin(v5);
  v106 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for Elevation(0);
  v104 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v105 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for CloudAltitudeKind(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v92 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for WeatherCondition(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v108 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for Date(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v109 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005350((uint64_t *)&unk_10005C4C0);
  v12 = __chkstk_darwin(v11);
  v103 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v102 = (uint64_t)&v86 - v14;
  v94 = type metadata accessor for TimeZone(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v95 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Location(0);
  __chkstk_darwin(v16);
  v107 = (uint64_t)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005350((uint64_t *)&unk_10005D940);
  __chkstk_darwin(v18);
  v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PosterDataModel.DataPoint(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PosterData(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100005350(&qword_10005C4A0);
  __chkstk_darwin(v27);
  v29 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for PosterDataModel(0);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v86 - v34;
  v36 = a1 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData;
  swift_beginAccess(v36, v115, 0, 0);
  if (sub_100006580(v36, 1, v24))
  {
    sub_10000658C((uint64_t)v29, 1, 1, v30);
LABEL_4:
    v38 = &qword_10005C4A0;
    v39 = (uint64_t)v29;
LABEL_5:
    sub_10000AB60(v39, v38);
    v40 = v110;
    if (qword_10005BB68 != -1)
      swift_once(&qword_10005BB68, sub_100042380);
    v41 = type metadata accessor for Logger(0);
    v42 = sub_10000AADC(v41, (uint64_t)qword_1000608F8);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v45 = 67109120;
      LODWORD(v114) = v40 != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, (char *)&v114 + 4, v45 + 4, v45 + 8);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Rendering default view model because the editor has no valid weather data; shouldShowAnimation=%{BOOL}d",
        v45,
        8u);
      swift_slowDealloc(v45, -1, -1);
    }

    v46 = v111;
    v47 = objc_msgSend(v111, "backgroundView");
    v48 = objc_msgSend(v46, "foregroundView");
    sub_100008420(v47, v48, v40 != 0, v112);

    return;
  }
  v87 = v33;
  v89 = (int *)v21;
  v90 = v35;
  v88 = v23;
  v37 = v109;
  sub_10001352C(v36, (uint64_t)v26, type metadata accessor for PosterData);
  sub_100025800((uint64_t)v29);
  sub_10000AB38((uint64_t)v26, type metadata accessor for PosterData);
  if (sub_100006580((uint64_t)v29, 1, v30) == 1)
    goto LABEL_4;
  v49 = (int *)v30;
  v50 = (uint64_t)v90;
  sub_1000134CC((uint64_t)v29, (uint64_t)v90, type metadata accessor for PosterDataModel);
  sub_100018DC0(*(_QWORD *)(v50 + v49[10]), (uint64_t)v20);
  if (sub_100006580((uint64_t)v20, 1, (uint64_t)v89) == 1)
  {
    sub_10000AB38(v50, type metadata accessor for PosterDataModel);
    v38 = (uint64_t *)&unk_10005D940;
    v39 = (uint64_t)v20;
    goto LABEL_5;
  }
  sub_1000134CC((uint64_t)v20, (uint64_t)v88, type metadata accessor for PosterDataModel.DataPoint);
  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v51 = type metadata accessor for Logger(0);
  sub_10000AADC(v51, (uint64_t)qword_1000608E0);
  v52 = v50;
  v53 = (uint64_t)v87;
  sub_10001352C(v52, (uint64_t)v87, type metadata accessor for PosterDataModel);
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc(12, -1);
    v58 = swift_slowAlloc(32, -1);
    v114 = v58;
    *(_DWORD *)v57 = 136446210;
    v110 = v57 + 4;
    v59 = sub_10002821C();
    v61 = v60;
    v113 = sub_1000210CC(v59, v60, &v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v110, v57 + 12);
    swift_bridgeObjectRelease(v61);
    sub_10000AB38(v53, type metadata accessor for PosterDataModel);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Rendering poster; data=%{public}s", v57, 0xCu);
    swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v57, -1, -1);
  }
  else
  {
    sub_10000AB38(v53, type metadata accessor for PosterDataModel);
  }

  v62 = v108;
  v63 = (uint64_t)v103;
  v64 = v97;
  v65 = v96;
  v66 = v95;
  v67 = v49[6];
  v68 = v49;
  v69 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v95, &v90[v67], v94);
  v70 = *(double *)(v69 + 16);
  v71 = *(double *)(v69 + 24);
  v72 = v102;
  sub_10000658C(v102, 1, 1, v64);
  Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)(0, 0xE000000000000000, 0, 0xE000000000000000, v66, v72, 0, 0, v70, v71, 0, 0, 0, 0);
  v73 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v74 = (uint64_t)v88;
  v73(v37, v88, v64);
  v75 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v62, v74 + v89[5], v99);
  v76 = *(double *)(v74 + v75[6]);
  v77 = *(double *)(v74 + v75[7]);
  v78 = (uint64_t)v37;
  v79 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v92, v74 + v75[8], v101);
  sub_10000AD40(v69 + v68[7], v72, (uint64_t *)&unk_10005C4C0);
  v80 = v63;
  sub_10000AD40(v69 + v68[8], v63, (uint64_t *)&unk_10005C4C0);
  v81 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v105, v74 + v75[9], v91);
  LODWORD(v110) = *(unsigned __int8 *)(v74 + v75[10]);
  v82 = v106;
  sub_10000AD40(v69 + v68[9], v106, &qword_10005BE78);
  v83 = v111;
  v84 = objc_msgSend(v111, "backgroundView");
  v85 = objc_msgSend(v83, "foregroundView");
  sub_1000078A4(v107, v78, v108, v79, v72, v80, v81, (char)v110, v112, v76, v77, v82, (uint64_t)v84, (uint64_t)v85, 1);
  sub_10000AB38(v74, type metadata accessor for PosterDataModel.DataPoint);
  sub_10000AB38(v69, type metadata accessor for PosterDataModel);
}

void sub_100034A24(void *a1, uint64_t a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  Class isa;
  NSString v15;
  id v16;
  id v17;

  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000AADC(v6, (uint64_t)qword_1000608E0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Editor did finalize", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_dataManager)
      + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate;
  *(_QWORD *)(v11 + 8) = 0;
  swift_unknownObjectWeakAssign(v11, 0);
  v12 = objc_msgSend(a1, "environment");
  v13 = objc_msgSend(v12, "targetConfiguration");
  swift_unknownObjectRelease(v12);
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setObject:forUserInfoKey:", isa, v15);

  v16 = objc_msgSend(a1, "environment");
  v17 = objc_msgSend(v16, "sourceContents");
  swift_unknownObjectRelease(v16);
  swift_getObjectType(v17);
  LOBYTE(v16) = sub_100018CD8();
  swift_unknownObjectRelease(v17);
  if ((v16 & 1) == 0)
    sub_100035B94(1);
  a3[2](a3);
  _Block_release(a3);
}

void sub_100034C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v2 = v0;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v3);
  sub_10002DC64();
  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v4 = sub_100013AD0();
  v5 = sub_10001902C(v4, (uint64_t)qword_1000608E0);
  v6 = static os_log_type_t.default.getter();
  v7 = v6;
  if (os_log_type_enabled(v5, v6))
  {
    v8 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v7, "Invalidated", v8, 2u);
    sub_10000AFFC((uint64_t)v8);
  }

  sub_10002C2D0();
  v9 = sub_10003592C(OBJC_IVAR____TtC13WeatherPoster12PosterEditor_animation);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 80))(1, v9, v7);
  sub_100035D88();
  v10 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor) = 0;

  v11 = sub_1000190F4();
  v14 = sub_10000B3FC(v1, v12, v13, v11);
  v15 = v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData;
  sub_10001F2D8(v14, (uint64_t)v17);
  sub_100013120(v1, v15, (uint64_t *)&unk_10005C4B0);
  swift_endAccess(v17);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_hasPosterDataUpdated) = 0;
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_dataManager)
      + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate;
  *(_QWORD *)(v16 + 8) = 0;
  swift_unknownObjectWeakAssign(v16, 0);
  sub_10003D93C();
}

void sub_100034E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  char v61[24];

  sub_100005350(&qword_10005C4A0);
  sub_100008864();
  __chkstk_darwin(v4);
  sub_100008850();
  v54 = v5;
  sub_1000190F4();
  sub_100008864();
  __chkstk_darwin(v6);
  sub_1000088BC();
  v58 = v7;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v52 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v52 - v12;
  v14 = sub_100005350(&qword_10005C4A8);
  sub_100008864();
  __chkstk_darwin(v15);
  sub_100013B18();
  v18 = v17 - v16;
  sub_100005350((uint64_t *)&unk_10005C4B0);
  sub_100008864();
  __chkstk_darwin(v19);
  sub_1000088BC();
  v55 = v20;
  __chkstk_darwin(v21);
  sub_100035964();
  __chkstk_darwin(v22);
  v24 = (char *)&v52 - v23;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_hasPosterDataUpdated) = 1;
  v56 = a1;
  sub_10001352C(a1, (uint64_t)&v52 - v23, type metadata accessor for PosterData);
  sub_10000895C((uint64_t)v24);
  v57 = v1;
  v25 = v1 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData;
  swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_posterData, v61, 0, 0);
  v26 = v18 + *(int *)(v14 + 48);
  sub_10000AD40((uint64_t)v24, v18, (uint64_t *)&unk_10005C4B0);
  sub_10000AD40(v25, v26, (uint64_t *)&unk_10005C4B0);
  sub_100035910(v18);
  if (v27)
  {
    sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
    sub_100035910(v26);
    if (v27)
    {
      sub_10000AB60(v18, (uint64_t *)&unk_10005C4B0);
LABEL_11:
      if (qword_10005BB60 != -1)
        swift_once(&qword_10005BB60, sub_100042358);
      v31 = sub_100013AD0();
      v32 = sub_10001902C(v31, (uint64_t)qword_1000608E0);
      v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)sub_10000B0C8(2);
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Poster data updated, but did not change", v34, 2u);
        sub_10000AFFC((uint64_t)v34);
      }

      goto LABEL_26;
    }
    goto LABEL_9;
  }
  sub_10000AD40(v18, v2, (uint64_t *)&unk_10005C4B0);
  sub_100035910(v26);
  if (v27)
  {
    sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
    sub_10000AB38(v2, type metadata accessor for PosterData);
LABEL_9:
    sub_10000AB60(v18, &qword_10005C4A8);
    v28 = v58;
    goto LABEL_16;
  }
  sub_1000134CC(v26, (uint64_t)v13, type metadata accessor for PosterData);
  sub_10002851C(v2, (uint64_t)v13);
  v30 = v29;
  sub_10000AB38((uint64_t)v13, type metadata accessor for PosterData);
  sub_10000AB60((uint64_t)v24, (uint64_t *)&unk_10005C4B0);
  sub_10000AB38(v2, type metadata accessor for PosterData);
  sub_10000AB60(v18, (uint64_t *)&unk_10005C4B0);
  v28 = v58;
  if ((v30 & 1) != 0)
    goto LABEL_11;
LABEL_16:
  if (qword_10005BB60 != -1)
    swift_once(&qword_10005BB60, sub_100042358);
  v35 = sub_100013AD0();
  sub_10000AADC(v35, (uint64_t)qword_1000608E0);
  v36 = v56;
  sub_10001352C(v56, (uint64_t)v11, type metadata accessor for PosterData);
  sub_10001352C(v36, v28, type metadata accessor for PosterData);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = sub_10000B0C8(32);
    v53 = sub_10000B0C8(64);
    v60[0] = v53;
    *(_DWORD *)v40 = 136446723;
    v41 = sub_1000258AC();
    v59 = sub_1000210CC(v41, v42, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v40 + 4, v40 + 12);
    sub_100005D2C();
    sub_10000AB38((uint64_t)v11, type metadata accessor for PosterData);
    *(_WORD *)(v40 + 12) = 2160;
    v59 = 1752392040;
    v43 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v40 + 14, v40 + 22);
    *(_WORD *)(v40 + 22) = 2081;
    v44 = v54;
    sub_100025800(v54);
    v45 = type metadata accessor for PosterDataModel(0);
    if (sub_100006580(v44, 1, v45) == 1)
    {
      sub_10000AB60(v44, &qword_10005C4A0);
      v46 = 0xE300000000000000;
      v47 = 7104878;
    }
    else
    {
      sub_10000AB38(v44, type metadata accessor for PosterDataModel);
      v47 = sub_100019094();
      v46 = v48;
    }
    v59 = sub_1000210CC(v47, v46, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, v60, v40 + 24, v40 + 32);
    sub_100005D2C();
    sub_10000AB38(v43, type metadata accessor for PosterData);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Updating looks to reflect latest data; data=%{public}s, location=%{private,mask.hash}s",
      (uint8_t *)v40,
      0x20u);
    v49 = v53;
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    sub_10000AFFC(v49);
    sub_10000AFFC(v40);
  }
  else
  {
    sub_10000AB38((uint64_t)v11, type metadata accessor for PosterData);
    sub_10000AB38(v28, type metadata accessor for PosterData);
  }

  v50 = v55;
  sub_10001352C(v36, v55, type metadata accessor for PosterData);
  sub_10000895C(v50);
  swift_beginAccess(v25, v60, 33, 0);
  sub_100013120(v50, v25, (uint64_t *)&unk_10005C4B0);
  swift_endAccess(v60);
  v51 = *(void **)(v57 + OBJC_IVAR____TtC13WeatherPoster12PosterEditor_editor);
  if (v51)
    objc_msgSend(v51, "updateLooks");
LABEL_26:
  sub_1000139F8();
}

void sub_1000354A0()
{
  _swift_stdlib_reportUnimplementedInitializer("WeatherPoster.PosterEditor", 26, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_100035570()
{
  return type metadata accessor for PosterEditor(0);
}

uint64_t type metadata accessor for PosterEditor(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D3D0;
  if (!qword_10005D3D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterEditor);
  return result;
}

void sub_1000355B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = "\b";
  sub_100007858(319, (unint64_t *)&qword_10005C490, type metadata accessor for PosterData);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007858(319, (unint64_t *)&qword_10005C1C8, type metadata accessor for PosterAnimationViewModel);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_100046F20;
      v6[4] = &unk_100046F38;
      v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = &unk_100046F20;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

uint64_t static WeatherLocation.supportsSecureCoding.getter()
{
  return 1;
}

id sub_1000356A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _QWORD *a6)
{
  void *v6;
  NSString v11;
  NSString v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v21;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v13 = a6[3];
  if (v13)
  {
    v14 = sub_100029290(a6, a6[3]);
    v15 = *(_QWORD *)(v13 - 8);
    __chkstk_darwin(v14);
    v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v13);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    sub_100013750(a6);
  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(v6, "initWithIdentifier:displayName:initialTimeFontConfiguration:initialTitleColor:", v11, v12, a5, v18);

  swift_unknownObjectRelease(v18);
  return v19;
}

id sub_1000357E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  NSArray v6;
  NSString v7;
  id v8;

  sub_100005350(&qword_10005D3E8);
  v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  if (a3)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v3, "initWithContentStyles:localizedName:", v6.super.isa, v7);

  return v8;
}

uint64_t sub_100035884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005D3E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000358CC(uint64_t *a1)
{
  sub_100018EA0(*a1, a1[1], a1[2], a1[3]);
  return a1;
}

uint64_t sub_100035900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 128) = v5;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 128, v4, a3, a4);
}

uint64_t sub_100035910(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

uint64_t sub_10003592C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_getObjectType(*(_QWORD *)(v1 + a1));
}

uint64_t sub_10003593C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t sub_10003594C()
{
  uint64_t v0;

  return swift_unknownObjectRelease_n(v0, 2);
}

id sub_100035958()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 2816));
}

id sub_100035978(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 2464));
}

id sub_100035980()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2816));
}

ValueMetadata *type metadata accessor for AnimationConstants()
{
  return &type metadata for AnimationConstants;
}

double sub_10003599C()
{
  NSObject *v0;
  os_log_type_t v1;
  double v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_100035C58();
  if (v2 <= 0.0)
  {
    if ((sub_100035CDC() & 1) != 0)
    {
      if (qword_10005BB50 != -1)
        swift_once(&qword_10005BB50, sub_100042308);
      v8 = sub_100013AD0();
      sub_10000AADC(v8, (uint64_t)qword_1000608B0);
      sub_10001A82C();
      v9 = sub_100013BB4();
      if (sub_100013AD8(v9))
      {
        *(_WORD *)sub_100032B7C() = 0;
        sub_100035D60((void *)&_mh_execute_header, v10, v11, "Animation will use longer playback duration");
        sub_100035D50();
      }

      sub_100035B94(0);
      return 2.6;
    }
    else
    {
      if (qword_10005BB50 != -1)
        swift_once(&qword_10005BB50, sub_100042308);
      v12 = sub_100013AD0();
      sub_10000AADC(v12, (uint64_t)qword_1000608B0);
      sub_10001A82C();
      v13 = sub_100013BB4();
      if (sub_100013AD8(v13))
      {
        *(_WORD *)sub_100032B7C() = 0;
        sub_100035D60((void *)&_mh_execute_header, v14, v15, "Animation will use default playback duration");
        sub_100035D50();
      }

      return 1.1;
    }
  }
  else
  {
    if (qword_10005BB50 != -1)
      swift_once(&qword_10005BB50, sub_100042308);
    v3 = sub_100013AD0();
    sub_10000AADC(v3, (uint64_t)qword_1000608B0);
    sub_10001A82C();
    v4 = sub_100013BB4();
    if (sub_100013AD8(v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v5 = 134349056;
      sub_100035C58();
      v16 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v5 + 4, v5 + 12);
      _os_log_impl((void *)&_mh_execute_header, v0, v1, "Animation will use overridden playback duration; duration=%{public}f",
        v5,
        0xCu);
      sub_100035D50();
    }

    sub_100035C58();
  }
  return result;
}

void sub_100035B94(char a1)
{
  uint64_t v2;
  void *v3;
  NSString v4;

  sub_10001B424();
  v2 = static NSUserDefaults.weatherSharedInternal.getter();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_100035D74();
    objc_msgSend(v3, "setBool:forKey:", a1 & 1, v4);

  }
}

id sub_100035C10()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v3, v2, v4);
  qword_100060880 = (uint64_t)result;
  return result;
}

void sub_100035C58()
{
  uint64_t v0;
  void *v1;
  NSString v2;

  sub_10001B424();
  v0 = static NSUserDefaults.weatherSharedInternal.getter();
  if (v0)
  {
    v1 = (void *)v0;
    v2 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "doubleForKey:", v2);

  }
}

id sub_100035CDC()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;

  sub_10001B424();
  v0 = static NSUserDefaults.weatherSharedInternal.getter();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  v2 = sub_100035D74();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  return v3;
}

uint64_t sub_100035D50()
{
  uint64_t v0;

  return swift_slowDealloc(v0, -1, -1);
}

void sub_100035D60(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

NSString sub_100035D74()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100035D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[24];

  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v1);
  sub_100013B18();
  v4 = v3 - v2;
  sub_100035EA0();
  v5 = sub_100022F04();
  sub_10000B3FC(v4, v6, v7, v5);
  v8 = v0 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState;
  sub_1000139A0(v0 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState, (uint64_t)v10, 33);
  sub_100022CE4(v4, v8);
  result = swift_endAccess(v10);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  return result;
}

void sub_100035E20(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  _OWORD v7[2];
  char v8;
  _OWORD v9[2];
  char v10;

  sub_100035884(a1, (uint64_t)v7);
  if (*((_QWORD *)&v7[0] + 1))
  {
    v9[0] = v7[0];
    v9[1] = v7[1];
    v10 = v8;
    sub_100035F88((uint64_t)v9, a2);
    if (a3 != 3)
      sub_100035EE0(*(double *)&a4);
  }
  else
  {
    sub_100035EA0();
  }
}

void sub_100035EA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    objc_msgSend(v1, "removeFromSuperview");
    v2 = *(void **)(v0 + 24);
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(v0 + 24) = 0;

  v3 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;

}

id sub_100035EE0(double a1)
{
  uint64_t v1;
  id result;
  double v3;
  double v4;
  BOOL v5;
  double v6;

  result = *(id *)(v1 + 16);
  if (result)
  {
    v3 = a1 * 6.66666667;
    v4 = 1.0 - v3;
    v5 = v3 <= 1.0;
    v6 = 0.0;
    if (v5)
      v6 = v4;
    return objc_msgSend(result, "setAlpha:", v6);
  }
  return result;
}

void sub_100035F18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  v3 = v1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState;
  v4 = sub_100022F04();
  sub_10000B3FC(v3, v5, v6, v4);
  v7 = v1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_logger;
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  sub_100013994();
}

void sub_100035F88(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  id v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;

  if (a2)
  {
    v5 = a2;
    v69 = sub_10002B9E8();
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v7 = sub_100036A18(v2, v5);
    v8 = sub_100036B88(v2, v7, a1, v6);
    objc_msgSend(v8, "setFont:", v69);
    objc_msgSend(v8, "setTextColor:", v6);
    sub_100036F34();
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      v10 = sub_1000378B8(v9, "widthAnchor");
      v11 = sub_1000378B0((uint64_t)v10, "widthAnchor");
      v12 = sub_100037948((uint64_t)v11, "constraintLessThanOrEqualToAnchor:multiplier:");

      sub_100037910(OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_smallTypeWidthConstraint);
      v14 = sub_1000378B8(v13, "widthAnchor");
      v15 = sub_1000378B0((uint64_t)v14, "widthAnchor");
      v16 = sub_100037948((uint64_t)v15, "constraintLessThanOrEqualToAnchor:constant:");

      sub_100037910(OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_largeTypeWidthConstraint);
      objc_opt_self(NSLayoutConstraint);
      v17 = sub_100005350(&qword_10005BBA0);
      v18 = swift_allocObject(v17, 48, 7);
      *(_OWORD *)(v18 + 16) = xmmword_100046ED0;
      v19 = sub_1000378B8(v18, "centerXAnchor");
      v20 = sub_1000378B0((uint64_t)v19, "centerXAnchor");
      v21 = sub_1000378CC((uint64_t)v20, "constraintEqualToAnchor:");
      sub_1000378F4();

      *(_QWORD *)(v18 + 32) = v3;
      v23 = sub_1000378B8(v22, "bottomAnchor");
      v24 = sub_1000378B0((uint64_t)v23, "safeAreaLayoutGuide");
      v25 = objc_msgSend(v24, "bottomAnchor");

      v26 = objc_msgSend(v23, "constraintLessThanOrEqualToAnchor:constant:", v25, -50.0);
      *(_QWORD *)(v18 + 40) = v26;
      sub_10003791C(v27, v28);
      sub_1000135E0(0, (unint64_t *)&qword_10005BBA8, NSLayoutConstraint_ptr);
      sub_100005DA0();
      v29 = sub_100037928();
      sub_100037954(v29, "activateConstraints:");

      sub_1000371A8();
    }
    else
    {
      sub_100037904(OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_smallTypeWidthConstraint);
      sub_100037904(OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_largeTypeWidthConstraint);
      objc_opt_self(NSLayoutConstraint);
      v45 = sub_100005350(&qword_10005BBA0);
      v46 = swift_allocObject(v45, 56, 7);
      *(_OWORD *)(v46 + 16) = xmmword_1000452A0;
      v47 = sub_1000378B8(v46, "centerXAnchor");
      v48 = sub_1000378B0((uint64_t)v47, "centerXAnchor");
      v49 = sub_1000378CC((uint64_t)v48, "constraintEqualToAnchor:");
      sub_1000378F4();

      *(_QWORD *)(v46 + 32) = v3;
      v51 = sub_1000378B8(v50, "centerYAnchor");
      v52 = sub_1000378B0((uint64_t)v51, "centerYAnchor");
      v53 = sub_1000378CC((uint64_t)v52, "constraintEqualToAnchor:");
      sub_1000378F4();

      *(_QWORD *)(v46 + 40) = v3;
      v55 = sub_1000378B8(v54, "widthAnchor");
      v56 = sub_1000378B0((uint64_t)v55, "widthAnchor");
      v57 = objc_msgSend(v55, "constraintLessThanOrEqualToAnchor:constant:", v56, -32.0);
      sub_1000378F4();

      *(_QWORD *)(v46 + 48) = v3;
      sub_10003791C(v58, v59);
      sub_1000135E0(0, (unint64_t *)&qword_10005BBA8, NSLayoutConstraint_ptr);
      sub_100005DA0();
      v60 = sub_100037928();
      sub_100037954(v60, "activateConstraints:");

    }
  }
  else
  {
    v31 = *(_QWORD *)a1;
    v30 = *(_QWORD *)(a1 + 8);
    v72 = *(_OWORD *)(a1 + 16);
    sub_10001F3F4();
    sub_1000377E0((uint64_t)&v72);
    sub_10001F3F4();
    v32 = sub_1000377E0((uint64_t)&v72);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v71 = v36;
      *(_DWORD *)v35 = 136315138;
      sub_10001F3F4();
      v70 = sub_1000210CC(v31, v30, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v35 + 4, v35 + 12);
      v37 = swift_bridgeObjectRelease_n(v30, 2);
      sub_1000378FC(v37, v38, v39, v40);
      v41 = sub_100037960();
      sub_1000378FC(v41, v42, v43, v44);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "No parent view exists to add label; skipping showing message=%s",
        v35,
        0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      sub_10000AFFC(v36);
      sub_10000AFFC((uint64_t)v35);

    }
    else
    {
      sub_100037960();

      sub_1000378FC(v61, v62, v63, v64);
      v65 = sub_100037960();
      sub_1000378FC(v65, v66, v67, v68);
    }
  }
}

void sub_100036554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  CGFloat tx;
  CGFloat ty;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  CGAffineTransform v60;
  char v61[32];

  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v3);
  sub_100008850();
  v56 = v4;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_100008850();
  v53 = v7;
  v8 = sub_100005350(&qword_10005D548);
  sub_100008864();
  __chkstk_darwin(v9);
  sub_100013B18();
  v12 = v11 - v10;
  v13 = sub_100022F04();
  sub_100008864();
  __chkstk_darwin(v14);
  sub_100013B18();
  v17 = v16 - v15;
  sub_100005350(&qword_10005D550);
  sub_100008864();
  v19 = __chkstk_darwin(v18);
  v54 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v52 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v52 - v24;
  v55 = v6;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)&v59 = a1;
  sub_100037940((uint64_t)&v52 - v24, a1, v26);
  v27 = 1;
  sub_1000378C0((uint64_t)v25, 0);
  *(_QWORD *)&v58 = v1;
  v28 = v1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState;
  sub_1000139A0(v1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState, (uint64_t)v61, 0);
  v57 = v13;
  if (!sub_100006580(v28, 1, v13))
  {
    sub_100022CA0(v28, v17);
    sub_100037940((uint64_t)v23, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
    v27 = 0;
  }
  sub_1000378C0((uint64_t)v23, v27);
  v29 = v12 + *(int *)(v8 + 48);
  sub_100037830((uint64_t)v25, v12, &qword_10005D550);
  sub_100037830((uint64_t)v23, v29, &qword_10005D550);
  sub_1000378D8(v12);
  if (v32)
  {
    sub_10000AB60((uint64_t)v23, &qword_10005D550);
    sub_10000AB60((uint64_t)v25, &qword_10005D550);
    sub_1000378D8(v29);
    if (v32)
      v30 = -1;
    else
      v30 = 0;
  }
  else
  {
    v31 = v54;
    sub_100037830(v12, v54, &qword_10005D550);
    sub_1000378D8(v29);
    if (v32)
    {
      sub_10000AB60((uint64_t)v23, &qword_10005D550);
      sub_10000AB60((uint64_t)v25, &qword_10005D550);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v31, v5);
      v30 = 0;
    }
    else
    {
      v33 = v55;
      v34 = v53;
      sub_100037940(v53, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 32));
      v35 = sub_100037870();
      v36 = v31;
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v34, v5, v35);
      v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v38(v34, v5);
      sub_10002B170((uint64_t)v23);
      sub_10002B170((uint64_t)v25);
      v39 = v36;
      v30 = v37;
      v38(v39, v5);
    }
  }
  v40 = v59;
  v42 = v57;
  v41 = (double *)v58;
  v43 = v56;
  sub_10002B170(v12);
  sub_100022CA0(v40, v43);
  sub_1000378C0(v43, 0);
  sub_1000139A0(v28, (uint64_t)&v60, 33);
  sub_100022CE4(v43, v28);
  swift_endAccess(&v60);
  v44 = (void *)*((_QWORD *)v41 + 3);
  if (v44)
  {
    v45 = v44;
    v46 = objc_msgSend(v45, "superview");
    if (v46)
    {
      v47 = v46;
      objc_msgSend(v46, "frame");

      if ((v30 & 1) == 0 || v41[4] == 0.0 && v41[5] == 0.0)
      {
        sub_100037934();
        *((_QWORD *)v41 + 4) = v48;
        *((_QWORD *)v41 + 5) = v49;
      }
      sub_100031E84(*(_QWORD *)(v40 + *(int *)(v42 + 32)));
      CGAffineTransformMakeRotation(&v60, (float)((float)(*(float *)(v40 + *(int *)(v42 + 20)) * 3.1416) / 180.0));
      v58 = *(_OWORD *)&v60.c;
      v59 = *(_OWORD *)&v60.a;
      tx = v60.tx;
      ty = v60.ty;
      sub_100037934();
      objc_msgSend(v45, "setBounds:");
      *(_OWORD *)&v60.a = v59;
      *(_OWORD *)&v60.c = v58;
      v60.tx = tx;
      v60.ty = ty;
      objc_msgSend(v45, "setTransform:", &v60);
    }

  }
}

id sub_100036A18(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v4 = *(void **)(a1 + 24);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v5, "superview");
    if (v6)
    {
      v7 = v6;
      sub_1000135E0(0, (unint64_t *)&qword_10005BF68, UIView_ptr);
      v8 = a2;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        return v5;
    }

  }
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(a2, "bounds");
  objc_msgSend(v11, "setFrame:");
  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v12, "setZPosition:", 4.0);

  v13 = objc_msgSend(v11, "layer");
  objc_msgSend(v13, "setAllowsGroupBlending:", 0);

  objc_msgSend(a2, "addSubview:", v11);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  v15 = v11;

  return v15;
}

char *sub_100036B88(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  __int128 v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;
  double v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;

  v8 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(a1 + 16);
  if (v14)
  {
    v42 = v11;
    v15 = v13;
    v16 = a2;
    v17 = v14;
    v18 = objc_msgSend(v17, "superview");
    if (v18)
    {
      v19 = v18;
      sub_1000135E0(0, (unint64_t *)&qword_10005BF68, UIView_ptr);
      v20 = v16;
      v21 = static NSObject.== infix(_:_:)(v20, v19);

      if ((v21 & 1) != 0)
      {
        v23 = *(_OWORD *)(a3 + 16);
        v43[0] = *(_OWORD *)a3;
        v22 = v43[0];
        v45 = v23;
        v24 = &v17[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model];
        v25 = *(_QWORD *)&v17[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model + 8];
        v26 = *(_QWORD *)&v17[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model
                            + 24];
        v24[32] = *(_BYTE *)(a3 + 32);
        *(_OWORD *)v24 = v22;
        *((_OWORD *)v24 + 1) = v23;
        sub_1000377E0((uint64_t)v43);
        sub_1000377E0((uint64_t)&v45);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v25);
        v27 = *(void **)&v17[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_color];
        *(_QWORD *)&v17[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_color] = a4;
        v28 = a4;

        return v17;
      }
    }

    a2 = v16;
    v13 = v15;
    v11 = v42;
  }
  v29 = *(_OWORD *)a3;
  v44 = *(_OWORD *)(a3 + 16);
  v45 = v29;
  v30 = objc_allocWithZone((Class)type metadata accessor for PosterLabel());
  v31 = a4;
  sub_1000377E0((uint64_t)&v45);
  sub_1000377E0((uint64_t)&v44);
  v32 = sub_1000373DC(a3, (uint64_t)v31);
  objc_msgSend(v32, "setTextAlignment:", 1);
  objc_msgSend(v32, "setNumberOfLines:", 0);
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = objc_msgSend(v32, "layer");
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setCompositingFilter:", v34);

  objc_msgSend(v32, "setOverrideUserInterfaceStyle:", 2);
  objc_msgSend(v32, "setAdjustsFontForContentSizeCategory:", 1);
  LODWORD(v35) = 1148846080;
  objc_msgSend(v32, "setContentCompressionResistancePriority:forAxis:", 1, v35);
  objc_msgSend(a2, "addSubview:", v32);
  v36 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v32;
  v17 = (char *)v32;

  v37 = a1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState;
  swift_beginAccess(a1 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState, v43, 0, 0);
  sub_100037830(v37, (uint64_t)v10, &qword_10005C308);
  if (sub_100006580((uint64_t)v10, 1, v11) == 1)
  {
    sub_10000AB60((uint64_t)v10, &qword_10005C308);
  }
  else
  {
    sub_100022E58((uint64_t)v10, (uint64_t)v13);
    v38 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v39 = objc_msgSend(v38, "userInterfaceIdiom");

    if (v39 == (id)1)
      sub_100036554((uint64_t)v13);
    sub_100022E9C((uint64_t)v13);
  }
  return v17;
}

void sub_100036F34()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  void *v19;
  void *v20;
  id v21;

  v1 = v0;
  v2 = objc_msgSend(v0, "font");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v2);

    sub_1000135E0(0, (unint64_t *)&qword_10005D238, UIImage_ptr);
    v5 = &v1[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model];
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model + 16];
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model + 24];
    swift_bridgeObjectRetain(v7);
    v8 = v4;
    v9 = sub_100037510(v6, v7, v4);
    v10 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
    if (v9)
      v11 = objc_msgSend(v9, "imageWithTintColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_color]);
    else
      v11 = 0;
    objc_msgSend(v10, "setImage:", v11);

    sub_1000135E0(0, &qword_10005D538, NSMutableAttributedString_ptr);
    sub_10003757C(0, 0xE000000000000000);
    v21 = v12;
    v13 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v10);
    objc_msgSend(v21, "appendAttributedString:", v13);

    if (v5[32])
      v14 = 10;
    else
      v14 = 32;
    sub_1000135E0(0, &qword_10005D540, NSAttributedString_ptr);
    v15._countAndFlagsBits = v14;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(0xE100000000000000);
    v16 = *(_QWORD *)v5;
    v17 = (void *)*((_QWORD *)v5 + 1);
    swift_bridgeObjectRetain(v17);
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(v17);
    sub_10003757C(0, 0xE000000000000000);
    v20 = v19;
    objc_msgSend(v21, "appendAttributedString:", v19);

    objc_msgSend(v1, "setAttributedText:", v21);
  }
  else
  {
    __break(1u);
  }
}

id sub_1000371A8()
{
  char *v0;
  id v1;
  id v2;
  char v3;
  void *v4;
  id result;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = static UIContentSizeCategory.<= infix(_:_:)(v2, UIContentSizeCategoryExtraExtraExtraLarge);
  v4 = *(void **)&v0[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_smallTypeWidthConstraint];
  if ((v3 & 1) != 0)
  {
    if (v4)
      objc_msgSend(v4, "setActive:", 1);
  }
  else if (v4)
  {
    objc_msgSend(v4, "setActive:", 0);
  }
  result = *(id *)&v0[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_largeTypeWidthConstraint];
  if (result)
    return objc_msgSend(result, "setActive:", (v3 & 1) == 0);
  return result;
}

void sub_10003727C()
{
  uint64_t v0;
  uint64_t v1;

  sub_10000AB60(v0 + OBJC_IVAR____TtC13WeatherPoster18PosterLabelManager_rotationState, &qword_10005C308);
  v1 = type metadata accessor for Logger(0);
  sub_10000B41C(v1);
  sub_100005D3C();
}

uint64_t sub_1000372D4()
{
  uint64_t v0;

  sub_10003727C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000372F8()
{
  return type metadata accessor for PosterLabelManager(0);
}

uint64_t type metadata accessor for PosterLabelManager(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D448;
  if (!qword_10005D448)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PosterLabelManager);
  return result;
}

void sub_100037338(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = "\b";
  v6[1] = "\b";
  v6[2] = &unk_100047030;
  sub_100022C48(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

id sub_1000373DC(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  __int128 v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_smallTypeWidthConstraint] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_largeTypeWidthConstraint] = 0;
  v6 = &v2[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_model];
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *((_OWORD *)v6 + 1) = v7;
  v6[32] = *(_BYTE *)(a1 + 32);
  *(_QWORD *)&v2[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_color] = a2;
  v9.receiver = v2;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

void sub_100037478()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_smallTypeWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel_largeTypeWidthConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000482B0, "WeatherPoster/PosterLabelManager.swift", 38, 2, 194, 0);
  __break(1u);
}

id sub_100037510(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  NSString v6;
  id v7;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "systemImageNamed:withConfiguration:", v6, a3);

  return v7;
}

void sub_10003757C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  objc_msgSend(v4, "initWithString:", v5);

  sub_100013994();
}

id sub_1000375E4()
{
  void *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  sub_1000371A8();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "updateConstraints");
}

id sub_10003765C(uint64_t a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v4, "traitCollectionDidChange:", a1);
  sub_100036F34();
  return objc_msgSend(v1, "setNeedsUpdateConstraints");
}

void sub_10003770C()
{
  _swift_stdlib_reportUnimplementedInitializer("WeatherPoster.PosterLabel", 25, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t type metadata accessor for PosterLabel()
{
  return objc_opt_self(_TtC13WeatherPosterP33_A76A6EA094F378CBF19696357987AB1611PosterLabel);
}

uint64_t sub_1000377E0(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100037808(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

void sub_100037830(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100005350(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_100005D3C();
}

unint64_t sub_100037870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005D558;
  if (!qword_10005D558)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_10005D558);
  }
  return result;
}

id sub_1000378B0(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id sub_1000378B8(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1000378C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10000658C(a1, a2, 1, v2);
}

id sub_1000378CC(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1000378D8(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

void sub_1000378F4()
{
  void *v0;

}

uint64_t sub_1000378FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_100037808((uint64_t)va);
}

void sub_100037904(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + a1);
  *(_QWORD *)(v1 + a1) = 0;

}

void sub_100037910(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v1 + a1);
  *(_QWORD *)(v1 + a1) = v2;

}

uint64_t sub_10003791C(uint64_t a1, uint64_t a2)
{
  return specialized Array._endMutation()(a1, a2);
}

uint64_t sub_100037928()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

id sub_100037934()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 2568));
}

uint64_t sub_100037940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

id sub_100037948(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

id sub_100037954(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100037960()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t *sub_100037968(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_100037A0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100037A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100037AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100037B38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100037BB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100037C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100037C34);
}

uint64_t sub_100037C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100037D54();
  return sub_100006580(v1, v0, v2);
}

uint64_t sub_100037C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100037C68);
}

uint64_t sub_100037C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_100037D54();
  return sub_10000658C(v1, v0, v0, v2);
}

uint64_t type metadata accessor for DynamicRotationState(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D5B8;
  if (!qword_10005D5B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DynamicRotationState);
  return result;
}

uint64_t sub_100037CCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100037D54()
{
  return type metadata accessor for UUID(0);
}

void sub_100037D64(NSObject *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  _BOOL4 v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t (*v139)(uint64_t, uint64_t, _QWORD);
  uint64_t v140;
  uint64_t v141;
  void (*v142)(_QWORD);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, _QWORD);
  double v150;
  void (*v151)(_QWORD);
  uint64_t v152;
  uint64_t v153;
  NSObject *v154;
  double v155;
  id v156;
  uint64_t v157;
  double v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, _QWORD);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(uint64_t, uint64_t, _QWORD);
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t, _QWORD);
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, uint64_t, _QWORD);
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t, uint64_t, _QWORD);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  UIImage *v186;
  NSObject *v187;
  os_log_type_t v188;
  uint8_t *v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  os_log_type_t v200;
  _DWORD *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  os_log_type_t v211;
  _DWORD *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  char *v220;
  char **v221;
  char *v222;
  id v223;
  id v224;
  uint64_t v225;
  char *v226;
  void *v227;
  char *v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(uint64_t, uint64_t);
  uint64_t v237;
  void (*v238)(uint64_t);
  uint64_t v239;
  _QWORD v240[2];
  void *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  int *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  void (*v251)(_QWORD);
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(_QWORD);
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265[8];
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char v269[8];
  uint64_t v270;
  uint64_t v271;
  void *v272[2];
  char v273[8];
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  NSObject *v283;
  uint64_t v284;
  char v285[8];
  char v286[8];
  uint64_t v287;
  char v288[8];
  char v289[8];
  uint64_t v290;
  char v291[8];
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;

  v5 = type metadata accessor for UUID(0);
  sub_100039678(v5, (uint64_t)v269);
  sub_100039658(v6);
  __chkstk_darwin(v7);
  sub_100008850();
  v9 = sub_100039668(v8);
  v10 = type metadata accessor for DynamicRotationState(v9);
  sub_100039678(v10, (uint64_t)&v268);
  sub_100008894();
  __chkstk_darwin(v11);
  sub_100008850();
  sub_100039708(v12);
  sub_100005350(&qword_10005C378);
  sub_100008894();
  __chkstk_darwin(v13);
  sub_100008850();
  v15 = sub_100039668(v14);
  v16 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation(v15);
  sub_100039678(v16, (uint64_t)&v293);
  sub_100039658(v17);
  __chkstk_darwin(v18);
  sub_100008850();
  v20 = sub_100039668(v19);
  v21 = type metadata accessor for TargetWindowSizeClass(v20);
  sub_100039678(v21, (uint64_t)&v292);
  sub_100039658(v22);
  __chkstk_darwin(v23);
  sub_100008850();
  v25 = sub_100039668(v24);
  v26 = type metadata accessor for DynamicTypeSize(v25);
  sub_100039678(v26, (uint64_t)v291);
  sub_100039658(v27);
  __chkstk_darwin(v28);
  sub_100008850();
  v30 = sub_100039668(v29);
  v31 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType(v30);
  sub_100039678(v31, (uint64_t)v289);
  sub_100039658(v32);
  __chkstk_darwin(v33);
  sub_100008850();
  sub_100039708(v34);
  sub_100005350(&qword_10005BE78);
  sub_100008894();
  __chkstk_darwin(v35);
  sub_100008850();
  v37 = sub_100039668(v36);
  type metadata accessor for TimeZone(v37);
  sub_100008894();
  __chkstk_darwin(v38);
  sub_100008850();
  sub_100039708(v39);
  sub_100005350((uint64_t *)&unk_10005C4C0);
  sub_100008894();
  v41 = __chkstk_darwin(v40);
  v262 = (uint64_t)v240 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v280 = (uint64_t)v240 - v43;
  v44 = sub_100008910();
  v45 = type metadata accessor for Date(v44);
  sub_100039678(v45, (uint64_t)&v283);
  sub_100039658(v46);
  __chkstk_darwin(v47);
  sub_100008850();
  v279 = v48;
  sub_100005350(&qword_10005C068);
  sub_100008894();
  __chkstk_darwin(v49);
  sub_100008850();
  v278 = v50;
  v51 = sub_100008910();
  v52 = type metadata accessor for WeatherConditionConfigurationModel(v51);
  sub_100039678(v52, (uint64_t)v286);
  sub_100039658(v53);
  __chkstk_darwin(v54);
  sub_100008850();
  sub_100039708(v55);
  sub_100005350(&qword_10005D228);
  sub_100008894();
  __chkstk_darwin(v56);
  sub_100008850();
  v58 = sub_100039668(v57);
  v59 = type metadata accessor for CloudAltitudeKind(v58);
  sub_100039678(v59, (uint64_t)&v281);
  sub_100039658(v60);
  __chkstk_darwin(v61);
  sub_100008850();
  v277 = v62;
  v63 = sub_100008910();
  v64 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(v63);
  sub_100039678(v64, (uint64_t)&v278);
  sub_100039658(v65);
  __chkstk_darwin(v66);
  sub_100008850();
  v68 = sub_100039668(v67);
  v274 = type metadata accessor for Elevation(v68);
  sub_100039658(*(_QWORD *)(v274 - 8));
  __chkstk_darwin(v69);
  sub_100008850();
  v276 = v70;
  v71 = sub_100008910();
  v72 = type metadata accessor for WeatherCondition(v71);
  sub_100039678(v72, (uint64_t)&v294);
  sub_100039658(v73);
  __chkstk_darwin(v74);
  sub_100008850();
  v275 = v75;
  v76 = sub_100008910();
  v77 = type metadata accessor for WeatherConditionGradientModel(v76);
  sub_100039678(v77, (uint64_t)&v276);
  sub_100039658(v78);
  __chkstk_darwin(v79);
  sub_100008850();
  v81 = sub_100039668(v80);
  v82 = type metadata accessor for SkyBackgroundGradient(v81);
  sub_100039678(v82, (uint64_t)v272);
  sub_100039658(v83);
  __chkstk_darwin(v84);
  sub_100008850();
  v282 = v85;
  v86 = sub_100008910();
  v87 = (int *)type metadata accessor for PosterAnimationViewModel(v86);
  sub_100008894();
  __chkstk_darwin(v88);
  sub_100013B18();
  v91 = (uint64_t *)(v90 - v89);
  v92 = sub_100005350(&qword_10005C4E0);
  sub_100008894();
  __chkstk_darwin(v93);
  sub_100013B18();
  v96 = v95 - v94;
  sub_100005350(&qword_10005C320);
  sub_100008894();
  v98 = __chkstk_darwin(v97);
  v100 = (char *)v240 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __chkstk_darwin(v98);
  v103 = (char *)v240 - v102;
  v104 = __chkstk_darwin(v101);
  v106 = (char *)v240 - v105;
  v107 = v87[17];
  v283 = a1;
  v108 = *(Class *)((char *)&a1->isa + v107);
  if (!v108)
  {
    v283 = Logger.logObject.getter(v104);
    v113 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v283, v113))
    {
      v114 = (uint8_t *)sub_10000B0C8(12);
      v115 = sub_10000B0C8(32);
      v290 = v115;
      *(_DWORD *)v114 = 136446210;
      v116 = sub_10002FBB0(a2);
      v118 = v117;
      v287 = sub_1000210CC(v116, v117, &v290);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v287, v288, v114 + 4, v114 + 12);
      swift_bridgeObjectRelease(v118);
      sub_100013C98((void *)&_mh_execute_header, v283, v113, "Skipping creating snapshot for model because parent view does not exist for kind=%{public}s", v114);
      sub_100013C90(v115, v119, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v115);
      sub_10000AFFC((uint64_t)v114);
    }

    return;
  }
  v242 = v107;
  v281 = a2;
  v109 = (void *)objc_opt_self(UIDevice);
  v272[0] = v108;
  v241 = v109;
  v110 = objc_msgSend(v109, "currentDevice");
  v111 = objc_msgSend(v110, "userInterfaceIdiom");

  if (v111 == (id)1)
  {
    v112 = (*(_BYTE *)(v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotKind + 8) & 1) == 0
        && *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotKind) == v281;
    LODWORD(v243) = !v112;
  }
  else
  {
    LODWORD(v243) = 0;
  }
  sub_1000395D0((uint64_t)v283, (uint64_t)v106);
  sub_10001913C((uint64_t)v106);
  v120 = v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel;
  sub_1000139A0(v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel, (uint64_t)&v290, 0);
  v121 = v96 + *(int *)(v92 + 48);
  sub_100037830((uint64_t)v106, v96, &qword_10005C320);
  sub_100037830(v120, v121, &qword_10005C320);
  sub_100019120(v96);
  if (v123)
  {
    sub_10000AB60((uint64_t)v106, &qword_10005C320);
    sub_100019120(v121);
    if (v123)
    {
      sub_10000AB60(v96, &qword_10005C320);
      v122 = v2;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  sub_100037830(v96, (uint64_t)v103, &qword_10005C320);
  sub_100019120(v121);
  if (v123)
  {
    sub_10000AB60((uint64_t)v106, &qword_10005C320);
    sub_10000AB38((uint64_t)v103, type metadata accessor for PosterAnimationViewModel);
LABEL_20:
    sub_10000AB60(v96, &qword_10005C4E0);
    v122 = v2;
    goto LABEL_25;
  }
  sub_100039614(v121, (uint64_t)v91);
  v124 = sub_100007B88((uint64_t)v103, (uint64_t)v91);
  sub_10000AB38((uint64_t)v91, type metadata accessor for PosterAnimationViewModel);
  v91 = &qword_10005C320;
  sub_10000AB60((uint64_t)v106, &qword_10005C320);
  sub_10000AB38((uint64_t)v103, type metadata accessor for PosterAnimationViewModel);
  sub_10000AB60(v96, &qword_10005C320);
  v122 = v2;
  if ((v124 & 1) != 0)
  {
LABEL_22:
    v125 = (int)v243;
    if (!*(_QWORD *)(v122 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView))
      v125 = 1;
    if (v125 != 1)
    {
      v199 = (void *)sub_100039714();
      v200 = static os_log_type_t.default.getter();
      if (sub_10000B488(v200))
      {
        v201 = (_DWORD *)sub_10000B0C8(12);
        v202 = sub_10000B0C8(32);
        v287 = v202;
        *v201 = 136446210;
        v203 = sub_10002FBB0(v281);
        v205 = v204;
        v284 = sub_1000210CC(v203, v204, &v287);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v285, v201 + 1, v201 + 3);
        swift_bridgeObjectRelease(v205);
        sub_1000396AC((void *)&_mh_execute_header, v206, v207, "Skipping creating snapshot for model because we already have a snapshot for kind=%{public}s");
        sub_100013C90(v202, v208, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v202);
        sub_10000AFFC((uint64_t)v201);
      }

      sub_10003971C();
      return;
    }
  }
LABEL_25:
  sub_1000395D0((uint64_t)v283, (uint64_t)v100);
  sub_10001913C((uint64_t)v100);
  sub_1000139A0(v120, (uint64_t)&v287, 33);
  sub_100039588((uint64_t)v100, v120);
  swift_endAccess(&v287);
  v126 = v122 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotKind;
  v127 = v281;
  *(_QWORD *)v126 = v281;
  *(_BYTE *)(v126 + 8) = 0;
  if (qword_10005BB48 != -1)
    swift_once(&qword_10005BB48, sub_100039068);
  sub_100029290(qword_10005D600, qword_10005D618);
  v128 = sub_100030454(v127);
  if (v128)
  {
    v129 = v128;
    v130 = sub_100039714();
    v131 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = (uint8_t *)sub_10000B0C8(12);
      v133 = sub_10000B0C8(32);
      v287 = v133;
      v134 = sub_1000396C0(4.8751e-34);
      v136 = sub_1000396A0(v134, v135);
      sub_100039684(v136);
      swift_bridgeObjectRelease(v91);
      sub_100013C98((void *)&_mh_execute_header, v130, v131, "Adding cached snapshot to view for kind=%{public}s", v132);
      sub_100013C90(v133, v137, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v133);
      sub_10000AFFC((uint64_t)v132);
    }

    v138 = v272[0];
    sub_1000391B0((uint64_t)v129, v127, v272[0]);

  }
  else
  {
    v243 = (char *)v283 + v87[6];
    sub_1000396F4();
    v240[1] = v139;
    v140 = v275;
    sub_1000396EC(v275, v141, v139);
    v250 = (char *)v283 + v87[12];
    sub_1000396F4();
    v251 = v142;
    v143 = v276;
    v142(v276);
    v144 = *((unsigned __int8 *)&v283->isa + v87[13]);
    v145 = enum case for WeatherConditionGradientModel.AnimationContext.vfx(_:);
    v146 = type metadata accessor for WeatherConditionGradientModel.AnimationContext(0);
    v147 = v257;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 104))(v257, v145, v146);
    sub_100039728();
    sub_1000396EC(v147, v148, v149);
    v256 = v87[8];
    v150 = *(double *)((char *)&v283->isa + v256);
    v240[0] = (char *)v283 + v87[9];
    sub_1000396F4();
    v255 = v151;
    v152 = v277;
    v151(v277);
    v153 = v252;
    WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)(v140, v143, v144, v147, v152, v150);
    WeatherConditionGradientManager.load(for:)(v153);
    (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v153, v254);
    v257 = v122;
    v258 = *(_QWORD *)(v122 + 24);
    v154 = v283;
    sub_100039734((uint64_t)v265);
    v155 = *(double *)((char *)&v154->isa + v87[7]);
    v156 = objc_msgSend((id)objc_opt_self(NSUnitSpeed), "milesPerHour");
    v157 = sub_1000135E0(0, &qword_10005C380, NSUnitSpeed_ptr);
    Measurement.init(value:unit:)(v156, v157, v155);
    v158 = *(double *)((char *)&v154->isa + v256);
    sub_100039734((uint64_t)&v277);
    sub_100039734((uint64_t)v273);
    sub_1000396F4();
    sub_1000396EC(v279, v159, v160);
    sub_100037830((uint64_t)v154 + v87[10], v280, (uint64_t *)&unk_10005C4C0);
    v161 = v262;
    sub_100037830((uint64_t)v154 + v87[11], v262, (uint64_t *)&unk_10005C4C0);
    v162 = v263;
    Location.timeZone.getter(v163);
    v164 = v264;
    sub_100037830((uint64_t)v154 + v87[14], v264, &qword_10005BE78);
    sub_100039728();
    v165 = v266;
    sub_1000396EC(v266, v166, v167);
    sub_100039728();
    v168 = v267;
    sub_1000396EC(v267, v169, v170);
    sub_1000396F4();
    v171 = v268;
    sub_1000396EC(v268, v172, v173);
    sub_100039728();
    v174 = v270;
    sub_1000396EC(v270, v175, v176);
    v177 = type metadata accessor for CollisionViewMetrics(0);
    v178 = v271;
    sub_10000B3FC(v271, v179, v180, v177);
    v239 = v174;
    v181 = v259;
    v182 = v162;
    v183 = v281;
    WeatherConditionConfigurationModel.init(condition:windSpeed:cloudCover:cloudKind:elevation:date:sunrise:sunset:timeZone:moonData:cameraPositionType:dynamicTypeSize:targetWindowSizeClass:displayLocation:collisionViewMetrics:)(v275, v278, v277, v276, v279, v280, v161, v182, v158, v164, v165, v168, v171, v239, v178);
    v184 = v272[1];
    WeatherConditionConfigurationManager.load(for:)(v181);
    (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v181, v261);
    sub_100029290(qword_10005D600, qword_10005D618);
    v185 = sub_1000308E8((uint64_t)v184, v282, v183);
    if (!v185)
    {
      v209 = v257;
      v210 = (void *)sub_100039714();
      v211 = static os_log_type_t.error.getter(v210);
      if (sub_10000B488(v211))
      {
        v212 = (_DWORD *)sub_10000B0C8(12);
        v213 = sub_10000B0C8(32);
        v287 = v213;
        *v212 = 136446210;
        v214 = sub_10002FBB0(v183);
        v284 = sub_1000396A0(v214, v215);
        v154 = v283;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v284, v285, v212 + 1, v212 + 3);
        swift_bridgeObjectRelease(qword_10005D600);
        sub_1000396AC((void *)&_mh_execute_header, v216, v217, "Adding gradient to view because no snapshot image exists for kind=%{public}s");
        sub_100013C90(v213, v218, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v213);
        sub_10000AFFC((uint64_t)v212);
      }

      v219 = v241;
      v220 = *(char **)((char *)&v154->isa + v242);
      if (v220)
        v220 = sub_100004C10(v282);
      v221 = (char **)(v209 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotGradientView);
      sub_1000139A0(v209 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotGradientView, (uint64_t)&v287, 1);
      v222 = *v221;
      *v221 = v220;

      v223 = objc_msgSend(v219, "currentDevice");
      v224 = objc_msgSend(v223, "userInterfaceIdiom");

      if (v224 == (id)1)
      {
        v225 = sub_1000139A0((uint64_t)v221, (uint64_t)&v284, 32);
        v226 = *v221;
        v227 = v272[0];
        if (!v226)
        {
          sub_100039700(v225, &qword_10005D228);
          v237 = sub_1000396D4();
          v238(v237);
          swift_endAccess(&v284);

          return;
        }
        swift_endAccess(&v284);
        v228 = v226;
        v229 = v244;
        UUID.init()(v228);
        v230 = 0;
        if ((unint64_t)(v183 - 2) <= 2)
          v230 = dword_1000470EC[v183 - 2];
        v231 = v247;
        sub_1000396EC(v247, v229, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v246 + 32));
        v232 = v245;
        *(_DWORD *)(v231 + v245[5]) = v230;
        *(_DWORD *)(v231 + v232[6]) = 1065353216;
        *(_QWORD *)(v231 + v232[7]) = v183;
        *(_QWORD *)(v231 + v232[8]) = v183;
        sub_100022174(v231);

        sub_10000AB38(v231, type metadata accessor for DynamicRotationState);
      }
      else
      {
        sub_10003971C();
      }
      sub_100039700(v233, &qword_10005D228);
      v234 = sub_1000396D4();
      v236(v234, v235);
      return;
    }
    v186 = (UIImage *)v185;
    v187 = Logger.logObject.getter(v185);
    v188 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v187, v188))
    {
      v189 = (uint8_t *)sub_10000B0C8(12);
      v190 = sub_10000B0C8(32);
      v287 = v190;
      v191 = sub_1000396C0(4.8751e-34);
      v193 = sub_1000396A0(v191, v192);
      sub_100039684(v193);
      swift_bridgeObjectRelease(qword_10005D600);
      sub_100013C98((void *)&_mh_execute_header, v187, v188, "Adding snapshot to view for kind=%{public}s", v189);
      sub_100013C90(v190, v194, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v190);
      sub_10000AFFC((uint64_t)v189);
    }

    v195 = v272[0];
    v196 = v249;
    v197 = v248;
    sub_1000391B0((uint64_t)v186, v183, v272[0]);
    sub_100029290(qword_10005D600, qword_10005D618);
    sub_10002FFC4(v186, v183);

    sub_100039700(v198, &qword_10005D228);
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v282, v196);
  }
}

uint64_t sub_100038F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  sub_100005350(&qword_10005C320);
  sub_100008894();
  __chkstk_darwin(v1);
  sub_100013B18();
  v4 = v3 - v2;
  v5 = OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView);
  if (v6)
    objc_msgSend(v6, "removeFromSuperview");
  v7 = (id *)(v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotGradientView);
  sub_1000139A0(v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotGradientView, (uint64_t)v17, 1);
  if (*v7)
    objc_msgSend(*v7, "removeFromSuperview");
  v8 = *(void **)(v0 + v5);
  *(_QWORD *)(v0 + v5) = 0;

  v9 = *v7;
  *v7 = 0;

  v10 = type metadata accessor for PosterAnimationViewModel(0);
  sub_10000B3FC(v4, v11, v12, v10);
  v13 = v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel;
  sub_1000139A0(v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel, (uint64_t)v16, 33);
  sub_100039588(v4, v13);
  result = swift_endAccess(v16);
  v15 = v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotKind;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  return result;
}

id sub_100039068()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = type metadata accessor for VFXSnapshotManager();
  v1 = swift_allocObject(v0, 24, 7);
  result = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  *(_QWORD *)(v1 + 16) = result;
  qword_10005D618 = v0;
  unk_10005D620 = &off_1000573F0;
  qword_10005D600 = v1;
  return result;
}

uint64_t sub_1000390D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for WeatherConditionGradientManager(0);
  sub_100013A7C(v4);
  *(_QWORD *)(v1 + 16) = WeatherConditionGradientManager.init()();
  v5 = type metadata accessor for WeatherConditionConfigurationManager(0);
  sub_100013A7C(v5);
  *(_QWORD *)(v1 + 24) = WeatherConditionConfigurationManager.init()();
  v6 = v1 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel;
  v7 = type metadata accessor for PosterAnimationViewModel(0);
  sub_10000B3FC(v6, v8, v9, v7);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotGradientView) = 0;
  v10 = v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotKind;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v2 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_logger;
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  return v2;
}

void sub_1000391B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  __int128 v19;
  id v20;
  CGAffineTransform v21;

  v4 = v3;
  v8 = OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView;
  v9 = *(void **)(v3 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotView);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v10, "superview");
    if (v11)
    {
      v12 = v11;
      sub_1000135E0(0, (unint64_t *)&qword_10005BF68, UIView_ptr);
      v13 = a3;
      v14 = v12;
      LOBYTE(v12) = static NSObject.== infix(_:_:)(v14, v13);

      if ((v12 & 1) != 0)
      {
        objc_msgSend(v10, "setImage:", a1);
        goto LABEL_7;
      }
    }

  }
  v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", a1);
  sub_100004CB0(v10, 3);
LABEL_7:
  v15 = *(void **)(v4 + v8);
  *(_QWORD *)(v4 + v8) = v10;
  v20 = v10;

  v16 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v17 = objc_msgSend(v16, "userInterfaceIdiom");

  if (v17 == (id)1)
  {
    if (a2 == 4 || a2 == 2)
    {
      CGAffineTransformMakeRotation(&v21, 3.1415925);
    }
    else
    {
      v19 = *(_OWORD *)&CGAffineTransformIdentity.c;
      *(_OWORD *)&v21.a = *(_OWORD *)&CGAffineTransformIdentity.a;
      *(_OWORD *)&v21.c = v19;
      *(_OWORD *)&v21.tx = *(_OWORD *)&CGAffineTransformIdentity.tx;
    }
    objc_msgSend(v20, "setTransform:", &v21);

  }
  else
  {

  }
}

void sub_1000393AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  sub_10000AB60(v0 + OBJC_IVAR____TtC13WeatherPoster19VFXSnapshotRenderer_snapshotModel, &qword_10005C320);

  v1 = type metadata accessor for Logger(0);
  sub_10000B41C(v1);
  sub_100005D3C();
}

uint64_t sub_100039424()
{
  uint64_t v0;

  sub_1000393AC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100039448()
{
  return type metadata accessor for VFXSnapshotRenderer(0);
}

uint64_t type metadata accessor for VFXSnapshotRenderer(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D678;
  if (!qword_10005D678)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VFXSnapshotRenderer);
  return result;
}

void sub_100039488(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100039534(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = "\b";
    v6[4] = "\b";
    v6[5] = &unk_1000470D0;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

void sub_100039534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10005C1C8)
  {
    v2 = type metadata accessor for PosterAnimationViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10005C1C8);
  }
}

uint64_t sub_100039588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005C320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000395D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterAnimationViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100039614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PosterAnimationViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100039658(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_100039668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_100039678@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_100039684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 176) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 176, v3 - 168, v2, v1);
}

uint64_t sub_1000396A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 152));
}

void sub_1000396AC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1000396C0(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  return sub_10002FBB0(v2);
}

uint64_t sub_1000396D4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 192);
}

uint64_t sub_1000396EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

void sub_100039700(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_10000AB60(v2, a2);
}

void sub_100039708(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_100039714()
{
  return Logger.logObject.getter();
}

void sub_10003971C()
{
  uint64_t v0;

}

uint64_t sub_100039734@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

_QWORD *sub_10003973C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for MicaBackgroundAnimation.Mode(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_10003D050();
  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v6, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v1, enum case for MicaBackgroundAnimation.Mode.poster(_:), v4);
  v15 = objc_allocWithZone((Class)sub_10003D0BC());
  v1[2] = MicaBackgroundAnimation.init(windowBounds:mode:)(v1, v8, v10, v12, v14);
  v16 = type metadata accessor for WeatherConditionGradientManager(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v1[3] = WeatherConditionGradientManager.init()();
  v1[4] = 0;
  v1[5] = 0;
  v1[6] = 0;
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  v18 = sub_100013A1C();
  sub_10000B3FC(v17, v19, v20, v18);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState;
  v22 = sub_100022F04();
  sub_10000B3FC(v21, v23, v24, v22);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer) = 0;
  v25 = (char *)v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate;
  *((_QWORD *)v25 + 1) = 0;
  swift_unknownObjectWeakInit(v25, 0);
  v26 = (char *)v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_logger;
  v27 = sub_100013AD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a1, v27);
  return v2;
}

void sub_1000398E0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t Strong;
  uint64_t v68;
  uint64_t v69;
  uint64_t ObjectType;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  char v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  float v130;
  float v131;
  double v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char v189[16];
  char v190[8];
  _QWORD aBlock[3];
  _QWORD v192[2];
  uint64_t v193;
  char v194[8];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;

  v179 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  sub_100039678(v4, (uint64_t)v192);
  v171 = v5;
  sub_100008894();
  __chkstk_darwin(v6);
  sub_100008850();
  v8 = sub_100039668(v7);
  v9 = type metadata accessor for DispatchQoS(v8);
  sub_100039678(v9, (uint64_t)v194);
  v168 = v10;
  sub_100008894();
  __chkstk_darwin(v11);
  sub_100008850();
  v13 = sub_100039668(v12);
  v14 = type metadata accessor for DispatchTime(v13);
  sub_100039678(v14, (uint64_t)&v196);
  v163 = v15;
  sub_100008894();
  __chkstk_darwin(v16);
  sub_1000088BC();
  v162 = v17;
  __chkstk_darwin(v18);
  sub_10003D038();
  v20 = sub_100039668(v19);
  v21 = type metadata accessor for Logger(v20);
  v22 = sub_100039678(v21, (uint64_t)&v197);
  v180 = v23;
  __chkstk_darwin(v22);
  sub_10003D0D8();
  sub_100039708(v24);
  v164 = v25;
  __chkstk_darwin(v26);
  sub_10003D038();
  v28 = sub_100039668(v27);
  v29 = type metadata accessor for SkyBackgroundGradient(v28);
  sub_100039678(v29, (uint64_t)&v195);
  v172 = v30;
  sub_100008894();
  __chkstk_darwin(v31);
  sub_100008850();
  sub_100039708(v32);
  sub_100005350(&qword_10005C370);
  sub_100008864();
  __chkstk_darwin(v33);
  sub_1000088BC();
  v176 = v34;
  __chkstk_darwin(v35);
  sub_10003D038();
  v37 = sub_100039668(v36);
  v38 = (int *)type metadata accessor for PosterAnimationViewModel(v37);
  v160 = *((_QWORD *)v38 - 1);
  __chkstk_darwin(v38);
  sub_10003D0D8();
  sub_100039708(v39);
  __chkstk_darwin(v40);
  sub_10003D038();
  v186 = v41;
  __chkstk_darwin(v42);
  sub_10003D038();
  sub_100039708(v43);
  v161 = v44;
  __chkstk_darwin(v45);
  sub_10003D038();
  sub_100039708(v46);
  v47 = sub_100005350(&qword_10005C4E0);
  sub_100008864();
  __chkstk_darwin(v48);
  sub_10003D050();
  sub_100005350(&qword_10005C320);
  sub_100008864();
  v50 = __chkstk_darwin(v49);
  v52 = (char *)&v159 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin(v50);
  v55 = (char *)&v159 - v54;
  v56 = __chkstk_darwin(v53);
  v185 = (uint64_t)&v159 - v57;
  v58 = __chkstk_darwin(v56);
  v60 = (char *)&v159 - v59;
  __chkstk_darwin(v58);
  v62 = (char *)&v159 - v61;
  v187 = a1;
  sub_10001352C(a1, (uint64_t)&v159 - v61, type metadata accessor for PosterAnimationViewModel);
  sub_10003D070((uint64_t)v62);
  v188 = v2;
  v63 = v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  sub_1000139A0(v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, (uint64_t)v194, 0);
  v64 = v2 + *(int *)(v47 + 48);
  sub_10003D068((uint64_t)v62, v2);
  sub_10003D068(v63, v64);
  sub_1000378D8(v2);
  if (v65)
  {
    sub_10000AB60((uint64_t)v62, &qword_10005C320);
    sub_1000378D8(v64);
    if (v65)
    {
      sub_10000AB60(v2, &qword_10005C320);
LABEL_17:
      v92 = (uint64_t)v184;
      sub_10001352C(v187, (uint64_t)v184, type metadata accessor for PosterAnimationViewModel);
      v94 = Logger.logObject.getter(v93);
      v95 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v94, v95))
      {
        v96 = (uint8_t *)sub_10000B0C8(12);
        v97 = sub_10000B0C8(32);
        aBlock[0] = v97;
        *(_DWORD *)v96 = 136446210;
        v98 = v92 + v38[5];
        v99 = sub_1000088F4();
        sub_1000059B4((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v101 = dispatch thunk of CustomStringConvertible.description.getter(v99, v100);
        v103 = sub_10003D080(v101, v102);
        v104 = sub_10003D0C4(v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v104, v105, v96 + 4, v96 + 12);
        swift_bridgeObjectRelease(v98);
        sub_10000AB38(v92, type metadata accessor for PosterAnimationViewModel);
        sub_100013C98((void *)&_mh_execute_header, v94, v95, "Animation already reflects the view model with weather data at date=%{public}s", v96);
        sub_100013C90(v97, v106, (uint64_t)&type metadata for Any + 8);
        sub_10000AFFC(v97);
        sub_10000AFFC((uint64_t)v96);

        return;
      }

      v107 = v92;
      goto LABEL_21;
    }
    goto LABEL_9;
  }
  sub_10000AD40(v2, (uint64_t)v60, &qword_10005C320);
  sub_1000378D8(v64);
  if (v65)
  {
    sub_10000AB60((uint64_t)v62, &qword_10005C320);
    sub_10000AB38((uint64_t)v60, type metadata accessor for PosterAnimationViewModel);
LABEL_9:
    sub_10000AB60(v2, &qword_10005C4E0);
    goto LABEL_10;
  }
  v90 = v183;
  sub_1000134CC(v64, v183, type metadata accessor for PosterAnimationViewModel);
  v91 = sub_100007B88((uint64_t)v60, v90);
  sub_10000AB38(v90, type metadata accessor for PosterAnimationViewModel);
  sub_10002B1B0((uint64_t)v62);
  sub_10000AB38((uint64_t)v60, type metadata accessor for PosterAnimationViewModel);
  sub_10002B1B0(v2);
  if ((v91 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v66 = v188 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v188 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate);
  if (!Strong
    || (v68 = Strong,
        v69 = *(_QWORD *)(v66 + 8),
        ObjectType = swift_getObjectType(Strong),
        LOBYTE(v69) = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(ObjectType, v69),
        swift_unknownObjectRelease(v68),
        (v69 & 1) == 0))
  {
    v75 = v186;
    sub_10001352C(v187, (uint64_t)v186, type metadata accessor for PosterAnimationViewModel);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)sub_10000B0C8(12);
      v80 = sub_10000B0C8(32);
      aBlock[0] = v80;
      *(_DWORD *)v79 = 136446210;
      v81 = &v75[v38[5]];
      v82 = sub_1000088F4();
      sub_1000059B4((unint64_t *)&qword_10005C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v84 = dispatch thunk of CustomStringConvertible.description.getter(v82, v83);
      v86 = sub_10003D080(v84, v85);
      v87 = sub_10003D0C4(v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v87, v88, v79 + 4, v79 + 12);
      swift_bridgeObjectRelease(v81);
      sub_10000AB38((uint64_t)v75, type metadata accessor for PosterAnimationViewModel);
      sub_100013C98((void *)&_mh_execute_header, v77, v78, "Animation was not granted a render session; Skipping render of weather data at date=%{public}s",
        v79);
      sub_100013C90(v80, v89, (uint64_t)&type metadata for Any + 8);
      sub_10000AFFC(v80);
      sub_10000AFFC((uint64_t)v79);

      return;
    }

    v107 = (uint64_t)v75;
LABEL_21:
    sub_10000AB38(v107, type metadata accessor for PosterAnimationViewModel);
    return;
  }
  v71 = v185;
  sub_10003D068(v63, v185);
  v72 = v187;
  sub_10001352C(v187, (uint64_t)v55, type metadata accessor for PosterAnimationViewModel);
  sub_10003D070((uint64_t)v55);
  sub_1000139A0(v63, (uint64_t)aBlock, 33);
  sub_100013120((uint64_t)v55, v63, &qword_10005C320);
  swift_endAccess(aBlock);
  sub_10003D068(v71, (uint64_t)v52);
  if (sub_100006580((uint64_t)v52, 1, (uint64_t)v38) != 1)
  {
    v108 = v177;
    sub_1000134CC((uint64_t)v52, v177, type metadata accessor for PosterAnimationViewModel);
    v110 = v38[17];
    v111 = *(void **)(v108 + v110);
    v112 = *(void **)(v72 + v110);
    if (v111)
    {
      v113 = v178;
      v114 = v176;
      if (v112)
      {
        sub_1000135E0(0, (unint64_t *)&qword_10005BF68, UIView_ptr);
        v115 = v112;
        v116 = v111;
        v117 = static NSObject.== infix(_:_:)(v116, v115);

        if ((v117 & 1) != 0)
          goto LABEL_38;
      }
    }
    else
    {
      v113 = v178;
      v114 = v176;
      if (!v112)
        goto LABEL_38;
    }
    v118 = Logger.logObject.getter(v109);
    v119 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v120 = 0;
      _os_log_impl((void *)&_mh_execute_header, v118, v119, "Resetting views due to change in background view", v120, 2u);
      sub_10000AFFC((uint64_t)v120);
    }

    v121 = v188;
    v122 = 1;
    sub_1000139A0(v188 + 40, (uint64_t)v190, 1);
    v123 = *(_QWORD *)(v121 + 40);
    if (v123)
    {
      v124 = v123 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient;
      sub_1000139A0(v123 + OBJC_IVAR____TtC13WeatherPoster12GradientView_skyBackgroundGradient, (uint64_t)v189, 0);
      v125 = v172;
      v126 = v173;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 16))(v113, v124, v173);
      v122 = 0;
    }
    else
    {
      v126 = v173;
      v125 = v172;
    }
    sub_10000658C(v113, v122, 1, v126);
    sub_10003D0A4();
    sub_10003D098();
    sub_10003D08C();
    sub_10000AD40(v113, v114, &qword_10005C370);
    if (sub_10003D0EC(v114) == 1)
    {
      sub_10002B1B0(v113);
      sub_10000AB38(v108, type metadata accessor for PosterAnimationViewModel);
      v74 = v114;
      v73 = &qword_10005C370;
      goto LABEL_34;
    }
    v127 = v159;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32))(v159, v114, v126);
    if ((*(_BYTE *)(v108 + v38[15]) & 1) == 0)
      sub_10003A6C8(v127);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v127, v126);
    sub_10000AB60(v113, &qword_10005C370);
LABEL_38:
    sub_10000AB38(v108, type metadata accessor for PosterAnimationViewModel);
    goto LABEL_39;
  }
  v73 = &qword_10005C320;
  v74 = (uint64_t)v52;
LABEL_34:
  sub_10000AB60(v74, v73);
LABEL_39:
  if (*(_BYTE *)(v72 + v38[15]) == 1)
  {
    if ((v179 & 1) != 0)
    {
      sub_10003D0BC();
      WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
    }
    v128 = v188;
    v129 = (void *)MicaBackgroundAnimation.layer.getter();
    objc_msgSend(v129, "speed");
    v131 = v130;

    if (v131 == 0.0)
      v132 = 0.0;
    else
      v132 = 0.25;
    v133 = v180;
    v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 16);
    v135 = v182;
    v136 = v181;
    v134(v182, v128 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_logger, v181);
    sub_10003AE48(v72, 1, v132);
    if (v132 <= 0.0)
    {
      sub_10003B6C4();
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v135, v136);
    }
    else
    {
      sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
      v137 = v136;
      v184 = (void *)static OS_dispatch_queue.main.getter();
      v138 = v162;
      static DispatchTime.now()();
      + infix(_:_:)(v138, v132);
      v186 = *(char **)(v163 + 8);
      ((void (*)(uint64_t, uint64_t))v186)(v138, v175);
      v139 = sub_10000B5B0((uint64_t)&unk_1000575D0, 24);
      swift_weakInit(v139 + 16, v188);
      v140 = v183;
      sub_10001352C(v72, v183, type metadata accessor for PosterAnimationViewModel);
      v141 = v165;
      v142 = v137;
      v134(v165, v135, v137);
      v143 = *(unsigned __int8 *)(v160 + 80);
      v144 = (v143 + 24) & ~v143;
      v145 = *(unsigned __int8 *)(v133 + 80);
      v146 = v166;
      v147 = (v161 + v145 + v144) & ~v145;
      v148 = swift_allocObject(&unk_100057648, v147 + v164, v143 | v145 | 7);
      *(_QWORD *)(v148 + 16) = v139;
      sub_1000134CC(v140, v148 + v144, type metadata accessor for PosterAnimationViewModel);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v148 + v147, v141, v142);
      v192[1] = sub_10003CE14;
      v193 = v148;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001279C;
      v192[0] = &unk_100057660;
      v149 = _Block_copy(aBlock);
      swift_release(v193);
      v150 = v167;
      static DispatchQoS.unspecified.getter(v151);
      aBlock[0] = &_swiftEmptyArrayStorage;
      sub_1000059B4((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v153 = v152;
      v154 = sub_100005350(&qword_10005C350);
      v155 = sub_10002DAFC();
      v156 = v170;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v154, v155, v146, v153);
      v157 = v174;
      v158 = v184;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v174, v150, v156, v149);
      _Block_release(v149);

      (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v156, v146);
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v150, v169);
      ((void (*)(uint64_t, uint64_t))v186)(v157, v175);
      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v182, v142);
    }
  }
  else
  {
    sub_10003A9C4();
  }
  sub_10000AB60(v185, &qword_10005C320);
}

void sub_10003A6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void **v20;
  id v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];

  v2 = v1;
  v4 = sub_100005350(&qword_10005C308);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicRotationState(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SkyBackgroundGradient(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v34, 0, 0);
  v15 = type metadata accessor for PosterAnimationViewModel(0);
  if (!sub_100006580(v14, 1, v15))
  {
    v16 = *(void **)(v14 + *(int *)(v15 + 68));
    if (v16)
    {
      v30 = a1;
      swift_beginAccess(v2 + 40, v33, 1, 0);
      v17 = *(void **)(v2 + 40);
      if (v17)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v30, v10);
        v18 = v16;
        v19 = v17;
        sub_1000222B4((uint64_t)v13);

        return;
      }
      v20 = (void **)(v2 + 40);
      v21 = v16;
      v22 = sub_100004C10(v30);
      v23 = *(void **)(v2 + 40);
      *(_QWORD *)(v2 + 40) = v22;

      v24 = v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState;
      swift_beginAccess(v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState, v32, 0, 0);
      sub_10000AD40(v24, (uint64_t)v6, &qword_10005C308);
      if (sub_100006580((uint64_t)v6, 1, v7) == 1)
      {

        sub_10000AB60((uint64_t)v6, &qword_10005C308);
        return;
      }
      sub_1000134CC((uint64_t)v6, (uint64_t)v9, type metadata accessor for DynamicRotationState);
      v25 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
      v26 = objc_msgSend(v25, "userInterfaceIdiom");

      if (v26 == (id)1)
      {
        swift_beginAccess(v2 + 40, v31, 32, 0);
        v27 = *v20;
        if (*v20)
        {
          swift_endAccess(v31);
          v28 = v27;
          sub_100022174((uint64_t)v9);

          sub_10000AB38((uint64_t)v9, type metadata accessor for DynamicRotationState);
          return;
        }
        sub_10000AB38((uint64_t)v9, type metadata accessor for DynamicRotationState);
        swift_endAccess(v31);
      }
      else
      {
        sub_10000AB38((uint64_t)v9, type metadata accessor for DynamicRotationState);
      }

    }
  }
}

void sub_10003A9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;
  char v57[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v51 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v54 - 8);
  v7 = __chkstk_darwin(v54);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v47 = (char *)&v46 - v10;
  v11 = sub_100005350(&qword_10005C320);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v46 - v17;
  v19 = Logger.logObject.getter(v16);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = v12;
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Skipping showing mica because the poster should not show animation", v22, 2u);
    v23 = v22;
    v12 = v21;
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = *(void **)(v1 + 32);
  if (v24)
  {
    objc_msgSend(v24, "removeFromSuperview");
    v25 = *(void **)(v1 + 32);
  }
  else
  {
    v25 = 0;
  }
  *(_QWORD *)(v1 + 32) = 0;

  if (qword_10005BB28 != -1)
    swift_once(&qword_10005BB28, sub_10002BE38);
  v26 = type metadata accessor for SkyBackgroundGradient(0);
  v27 = sub_10000AADC(v26, (uint64_t)qword_100060838);
  sub_10003A6C8(v27);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate);
  swift_unknownObjectRelease(Strong);
  if (Strong)
  {
    v29 = v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v57, 0, 0);
    sub_10000AD40(v29, (uint64_t)v18, &qword_10005C320);
    sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
    v46 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    v30 = v47;
    + infix(_:_:)(v9, 0.25);
    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    v31(v9, v54);
    v32 = swift_allocObject(&unk_1000575D0, 24, 7);
    swift_weakInit(v32 + 16, v1);
    sub_10000AD40((uint64_t)v18, (uint64_t)v15, &qword_10005C320);
    v33 = *(unsigned __int8 *)(v12 + 80);
    v34 = (v33 + 24) & ~v33;
    v35 = swift_allocObject(&unk_100057698, v34 + v13, v33 | 7);
    *(_QWORD *)(v35 + 16) = v32;
    sub_100013680((uint64_t)v15, v35 + v34);
    aBlock[4] = sub_10003CFD4;
    v56 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001279C;
    aBlock[3] = &unk_1000576B0;
    v36 = _Block_copy(aBlock);
    swift_release(v56);
    v37 = v48;
    static DispatchQoS.unspecified.getter(v38);
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1000059B4((unint64_t *)&qword_10005C348, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v40 = v39;
    v41 = sub_100005350(&qword_10005C350);
    v42 = sub_10002DAFC();
    v43 = v51;
    v44 = v53;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v53, v40);
    v45 = (void *)v46;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v30, v37, v43, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
    v31(v30, v54);
    sub_10000AB60((uint64_t)v18, &qword_10005C320);
  }
}

uint64_t sub_10003AE48(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  double v40;
  double v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  double v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v73 = type metadata accessor for CloudAltitudeKind(0);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v72 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for WeatherConditionGradientModel.PresentationContext(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v70 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Elevation(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v63 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for WeatherConditionGradientModel(0);
  v65 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v62 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for SkyBackgroundGradient(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MicaResourceModel(0);
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WeatherCondition(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v51 - v20;
  v58 = v16;
  v55 = v3;
  if ((a2 & 1) != 0)
  {
    sub_10000C6A8(a1);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  }
  else
  {
    v23 = type metadata accessor for PosterAnimationViewModel(0);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v22(v21, a1 + *(int *)(v23 + 24), v15);
  }
  v52 = (void (*)(char *, char *, uint64_t))v22;
  v22(v19, (uint64_t)v21, v15);
  v24 = (int *)type metadata accessor for PosterAnimationViewModel(0);
  v25 = v24[13];
  v26 = v21;
  v54 = v21;
  v27 = *(unsigned __int8 *)(a1 + v25);
  v28 = (void *)objc_opt_self(UIScreen);
  v29 = a1;
  v30 = objc_msgSend(v28, "mainScreen");
  objc_msgSend(v30, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v39 = objc_msgSend(v28, "mainScreen");
  objc_msgSend(v39, "scale");
  v41 = v40;

  MicaResourceModel.init(condition:isDay:windowBounds:displayScale:)(v19, v27, v32, v34, v36, v38, v41);
  v53 = v15;
  v52(v19, v26, v15);
  v42 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v63, v29 + v24[12], v57);
  v43 = enum case for WeatherConditionGradientModel.AnimationContext.mica(_:);
  v44 = type metadata accessor for WeatherConditionGradientModel.AnimationContext(0);
  v45 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v70, v43, v44);
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v45, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v69);
  v46 = *(double *)(v29 + v24[8]);
  v47 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v72, v29 + v24[9], v73);
  v48 = v62;
  WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)(v19, v42, v27, v45, v47, v46);
  v49 = (uint64_t)v61;
  WeatherConditionGradientManager.load(for:)(v48);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v68);
  sub_10003A6C8(v49);
  sub_10003C614((uint64_t)v14, v29, a3);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v49, v66);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v54, v53);
}

void sub_10003B30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30[2];
  _BYTE v31[24];
  _BYTE v32[24];

  v6 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005350(&qword_10005C4E0);
  __chkstk_darwin(v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005350(&qword_10005C320);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)v30 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)v30 - v19;
  a1 += 16;
  swift_beginAccess(a1, v32, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v22 = Strong;
    v30[0] = (uint64_t)v8;
    v30[1] = a3;
    v23 = Strong + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
    swift_beginAccess(Strong + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v31, 0, 0);
    sub_10000AD40(v23, (uint64_t)v20, &qword_10005C320);
    sub_10001352C(a2, (uint64_t)v18, type metadata accessor for PosterAnimationViewModel);
    sub_10000658C((uint64_t)v18, 0, 1, v6);
    v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10000AD40((uint64_t)v20, (uint64_t)v11, &qword_10005C320);
    sub_10000AD40((uint64_t)v18, v24, &qword_10005C320);
    if (sub_100006580((uint64_t)v11, 1, v6) == 1)
    {
      sub_10000AB60((uint64_t)v18, &qword_10005C320);
      sub_10000AB60((uint64_t)v20, &qword_10005C320);
      if (sub_100006580(v24, 1, v6) == 1)
      {
        sub_10000AB60((uint64_t)v11, &qword_10005C320);
LABEL_9:
        sub_10003B6C4();
        swift_release(v22);
        return;
      }
    }
    else
    {
      sub_10000AD40((uint64_t)v11, (uint64_t)v15, &qword_10005C320);
      if (sub_100006580(v24, 1, v6) != 1)
      {
        v25 = v30[0];
        sub_1000134CC(v24, v30[0], type metadata accessor for PosterAnimationViewModel);
        v26 = sub_100007B88((uint64_t)v15, v25);
        sub_10000AB38(v25, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v18, &qword_10005C320);
        sub_10000AB60((uint64_t)v20, &qword_10005C320);
        sub_10000AB38((uint64_t)v15, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v11, &qword_10005C320);
        if ((v26 & 1) != 0)
          goto LABEL_9;
        goto LABEL_10;
      }
      sub_10000AB60((uint64_t)v18, &qword_10005C320);
      sub_10000AB60((uint64_t)v20, &qword_10005C320);
      sub_10000AB38((uint64_t)v15, type metadata accessor for PosterAnimationViewModel);
    }
    sub_10000AB60((uint64_t)v11, &qword_10005C4E0);
LABEL_10:
    swift_release(v22);
  }
  v27 = Logger.logObject.getter(Strong);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Skipping notifying of completion because a newer request is inflight that will notify instead", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

}

void sub_10003B6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29[3];

  v1 = v0;
  v2 = sub_100005350(&qword_10005C320);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_retain_n(v0, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v26 = v4;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v29[0] = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = v0 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
    swift_beginAccess(v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v28, 0, 0);
    v15 = type metadata accessor for PosterAnimationViewModel(0);
    if (sub_100006580(v14, 1, v15))
    {
      v16 = 0;
      v17 = 0xE000000000000000;
    }
    else
    {
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14 + *(int *)(v15 + 20), v5);
      v16 = Date.description.getter(v18);
      v17 = v19;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    v27 = sub_1000210CC(v16, v17, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v12 + 4, v12 + 12);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Completed rendering of weather data at date=%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    v4 = v26;
  }
  else
  {
    swift_release_n(v0, 2);

  }
  v20 = v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate);
  if (Strong)
  {
    v22 = Strong;
    v23 = *(_QWORD *)(v20 + 8);
    ObjectType = swift_getObjectType(Strong);
    v25 = v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
    swift_beginAccess(v25, v29, 0, 0);
    sub_10000AD40(v25, (uint64_t)v4, &qword_10005C320);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v4, ObjectType, v23);
    swift_unknownObjectRelease(v22);
    sub_10000AB60((uint64_t)v4, &qword_10005C320);
  }
}

uint64_t sub_10003B9AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v4);
  sub_10001F230();
  sub_10001352C(a1, v2, type metadata accessor for PosterAnimationViewModel);
  v5 = sub_100013A1C();
  sub_10003D0F8(v2, v6, v7, v5);
  v8 = v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  sub_1000139A0(v1 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, (uint64_t)v10, 33);
  sub_100013120(v2, v8, &qword_10005C320);
  swift_endAccess(v10);
  return sub_10003AE48(a1, 0, 0.0);
}

void sub_10003BA6C()
{
  if (!UIAccessibilityIsReduceMotionEnabled())
    MicaBackgroundAnimation.play(_:)(0);
}

void sub_10003BA98(char a1, void (*a2)(void), uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  _QWORD v20[5];
  _QWORD *v21;

  if ((a1 & 1) != 0 && !UIAccessibilityIsReduceMotionEnabled())
  {
    v11 = OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer;
    v12 = *(void **)(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer);
    if (v12)
      objc_msgSend(v12, "invalidate");
    v13 = (void *)objc_opt_self(NSTimer);
    v14 = sub_10000B5B0((uint64_t)&unk_1000575D0, 24);
    swift_weakInit(v14 + 16, v4);
    v15 = (_QWORD *)sub_10000B5B0((uint64_t)&unk_1000575F8, 40);
    v15[2] = v14;
    v15[3] = a2;
    v15[4] = a3;
    v20[4] = sub_10003CC28;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_100011DA4;
    v20[3] = &unk_100057610;
    v16 = _Block_copy(v20);
    v17 = v21;
    swift_retain(a3);
    swift_release(v17);
    v18 = objc_msgSend(v13, "scheduledTimerWithTimeInterval:repeats:block:", 0, v16, a4);
    _Block_release(v16);
    v19 = *(void **)(v4 + v11);
    *(_QWORD *)(v4 + v11) = v18;

  }
  else
  {
    v8 = OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer;
    v9 = *(void **)(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer);
    if (v9)
    {
      objc_msgSend(v9, "invalidate");
      v10 = *(void **)(v4 + v8);
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)(v4 + v8) = 0;

    sub_10003D0BC();
    WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
    a2();
  }
}

void sub_10003BC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  _BYTE v13[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer;
    v10 = *(void **)(Strong + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer);
    if (v10)
    {
      objc_msgSend(v10, "invalidate");
      v11 = *(void **)(v8 + v9);
    }
    else
    {
      v11 = 0;
    }
    *(_QWORD *)(v8 + v9) = 0;

    v12 = *(id *)(v8 + 16);
    MicaBackgroundAnimation.pause(_:completion:)(1, a3, a4);
    swift_release(v8);

  }
}

void sub_10003BCEC(double a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *IsReduceMotionEnabled;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  double v11;
  id v12;
  __int128 v13;
  double v14;
  double v15;

  IsReduceMotionEnabled = (_QWORD *)UIAccessibilityIsReduceMotionEnabled();
  if ((IsReduceMotionEnabled & 1) == 0)
  {
    v14 = a1;
    v13 = xmmword_100046E60;
    v9 = sub_100032B40();
    IsReduceMotionEnabled = FloatingPoint.clamped(to:)(&v15, &v13, &type metadata for CGFloat, v9);
    v10 = *(void **)(v3 + 32);
    if (v10)
    {
      v11 = (1.0 - v15) * 0.2 + 1.0;
      v12 = v10;
      MicaContentView.applyScaleTransform(_:)(v11);

    }
  }
  if (a3)
    a3(IsReduceMotionEnabled, v7, v8);
}

uint64_t sub_10003BDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = v1;
  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v5);
  sub_10002DC64();
  sub_100032C88(a1);
  sub_1000139A0(v1 + 40, (uint64_t)v15, 0);
  v6 = *(void **)(v1 + 40);
  if (v6)
  {
    v7 = v6;
    sub_100022174(a1);

  }
  sub_10001352C(a1, v2, type metadata accessor for DynamicRotationState);
  v8 = sub_100022F04();
  sub_10003D0F8(v2, v9, v10, v8);
  v11 = sub_1000139A0(v3 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState, (uint64_t)v14, 33);
  sub_10003D0B0(v11, v12, &qword_10005C308);
  return swift_endAccess(v14);
}

uint64_t sub_10003BE84(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v4 = v1;
  sub_100005350(&qword_10005C308);
  sub_100008864();
  __chkstk_darwin(v6);
  sub_10002DC64();
  sub_100005350(&qword_10005C320);
  sub_100008864();
  __chkstk_darwin(v7);
  sub_10001F230();
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_10000B0C8(12);
    v12 = sub_10000B0C8(32);
    v31[0] = v12;
    *(_DWORD *)v11 = 136446210;
    if (a1)
    {
      if (a1 == 1)
        v13 = 0xD000000000000011;
      else
        v13 = 0x646564616F6C6E75;
      if (a1 == 1)
        v14 = 0x80000001000475D0;
      else
        v14 = 0xE800000000000000;
    }
    else
    {
      v13 = 0xD000000000000013;
      v14 = 0x80000001000475F0;
    }
    v29 = sub_1000210CC(v13, v14, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease(v14);
    sub_100013C98((void *)&_mh_execute_header, v9, v10, "Invalidating animation for reason=%{public}s", v11);
    sub_100013C90(v12, v15, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v12);
    sub_10000AFFC((uint64_t)v11);
  }

  v16 = sub_100013A1C();
  sub_10000B3FC(v3, v17, v18, v16);
  v19 = v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  sub_1000139A0(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, (uint64_t)v31, 33);
  sub_100013120(v3, v19, &qword_10005C320);
  swift_endAccess(v31);
  sub_10003D098();
  sub_1000139A0(v4 + 40, (uint64_t)v31, 1);
  sub_10003D0A4();
  sub_10003D08C();
  v20 = OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer;
  v21 = *(void **)(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_freezeTimer);
  if (v21)
  {
    objc_msgSend(v21, "invalidate");
    v22 = *(void **)(v4 + v20);
  }
  else
  {
    v22 = 0;
  }
  *(_QWORD *)(v4 + v20) = 0;

  v23 = sub_100022F04();
  sub_10000B3FC(v2, v24, v25, v23);
  v26 = sub_1000139A0(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState, (uint64_t)&v29, 33);
  sub_10003D0B0(v26, v27, &qword_10005C308);
  return swift_endAccess(&v29);
}

void sub_10003C108()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10000AB60(v0 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, &qword_10005C320);
  sub_10000AB60(v0 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rotationState, &qword_10005C308);

  v1 = sub_100013AD0();
  sub_10000B41C(v1);
  sub_100013934(v0 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate);
  sub_100005D3C();
}

uint64_t sub_10003C1AC()
{
  uint64_t v0;

  sub_10003C108();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10003C1D0()
{
  return type metadata accessor for MicaAnimation(0);
}

uint64_t type metadata accessor for MicaAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_10005D758;
  if (!qword_10005D758)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MicaAnimation);
  return result;
}

void sub_10003C210(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  v8[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[2] = "\b";
  v8[3] = "\b";
  v8[4] = "\b";
  sub_100007858(319, (unint64_t *)&qword_10005C1C8, type metadata accessor for PosterAnimationViewModel);
  if (v3 <= 0x3F)
  {
    v8[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007858(319, (unint64_t *)&qword_10005C1D8, type metadata accessor for DynamicRotationState);
    if (v5 <= 0x3F)
    {
      v8[6] = *(_QWORD *)(v4 - 8) + 64;
      v8[7] = "\b";
      v6 = type metadata accessor for Logger(319);
      if (v7 <= 0x3F)
      {
        v8[8] = *(_QWORD *)(v6 - 8) + 64;
        v8[9] = &unk_100047150;
        swift_updateClassMetadata2(a1, 256, 10, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_10003C304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_rendererDelegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

double sub_10003C358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t Strong;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BYTE v22[24];
  _BYTE v23[24];

  v4 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100005350(&qword_10005C4E0);
  __chkstk_darwin(v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100005350(&qword_10005C320);
  v11 = __chkstk_darwin(v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v22[-v14];
  a1 += 16;
  swift_beginAccess(a1, v23, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v18 = Strong;
    v19 = Strong + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
    swift_beginAccess(Strong + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v22, 0, 0);
    sub_10000AD40(v19, (uint64_t)v15, &qword_10005C320);
    v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_10000AD40(a2, (uint64_t)v9, &qword_10005C320);
    sub_10000AD40((uint64_t)v15, v20, &qword_10005C320);
    if (sub_100006580((uint64_t)v9, 1, v4) == 1)
    {
      sub_10000AB60((uint64_t)v15, &qword_10005C320);
      if (sub_100006580(v20, 1, v4) == 1)
      {
        sub_10000AB60((uint64_t)v9, &qword_10005C320);
LABEL_9:
        sub_10003B6C4();
        goto LABEL_10;
      }
    }
    else
    {
      sub_10000AD40((uint64_t)v9, (uint64_t)v13, &qword_10005C320);
      if (sub_100006580(v20, 1, v4) != 1)
      {
        sub_1000134CC(v20, (uint64_t)v6, type metadata accessor for PosterAnimationViewModel);
        v21 = sub_100007B88((uint64_t)v13, (uint64_t)v6);
        sub_10000AB38((uint64_t)v6, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v15, &qword_10005C320);
        sub_10000AB38((uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
        sub_10000AB60((uint64_t)v9, &qword_10005C320);
        if ((v21 & 1) != 0)
          goto LABEL_9;
LABEL_10:
        *(_QWORD *)&result = swift_release(v18).n128_u64[0];
        return result;
      }
      sub_10000AB60((uint64_t)v15, &qword_10005C320);
      sub_10000AB38((uint64_t)v13, type metadata accessor for PosterAnimationViewModel);
    }
    sub_10000AB60((uint64_t)v9, &qword_10005C4E0);
    goto LABEL_10;
  }
  return result;
}

void sub_10003C614(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v4 = v3;
  v38 = a2;
  v40 = a1;
  v6 = type metadata accessor for MicaLayer(0);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005350((uint64_t *)&unk_10005C558);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v39 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005350(&qword_10005C320);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PosterAnimationViewModel(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  swift_beginAccess(v4 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel, v41, 0, 0);
  sub_10000AD40(v21, (uint64_t)v17, &qword_10005C320);
  if (sub_100006580((uint64_t)v17, 1, v18) == 1)
  {
    v22 = &qword_10005C320;
    v23 = (uint64_t)v17;
LABEL_6:
    sub_10000AB60(v23, v22);
    return;
  }
  sub_1000134CC((uint64_t)v17, (uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
  v24 = *(void **)&v20[*(int *)(v18 + 68)];
  if (v24)
  {
    v25 = type metadata accessor for MicaLoader(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = v24;
    v27 = MicaLoader.init()();
    MicaLoader.loadMicaURL(for:)(v40);
    if (sub_100006580((uint64_t)v11, 1, v12) == 1)
    {
      sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);

      swift_release(v27);
      v22 = (uint64_t *)&unk_10005C558;
      v23 = (uint64_t)v11;
      goto LABEL_6;
    }
    v35 = v26;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v14, v11, v12);
    if (!*(_QWORD *)(v4 + 32))
    {
      v28 = *(void **)(v4 + 16);
      v29 = objc_allocWithZone((Class)type metadata accessor for MicaContentView(0));
      v30 = (void *)MicaContentView.init(animation:)(v28);
      sub_100004CB0(v30, 0);
      v31 = *(void **)(v4 + 32);
      *(_QWORD *)(v4 + 32) = v30;

    }
    v32 = (id)MicaLoader.loadMicaLayer(at:)(v14);
    MicaLayer.init(layer:)();
    MicaBackgroundAnimation.updateForNewLayer(_:duration:)(v8, a3);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    sub_10003C96C();

    v33 = swift_release(v27);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v14, v12, v33);
  }
  sub_10000AB38((uint64_t)v20, type metadata accessor for PosterAnimationViewModel);
}

void sub_10003C96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v1 = v0;
  v2 = type metadata accessor for WeatherCondition(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC13WeatherPoster13MicaAnimation_posterViewModel;
  swift_beginAccess(v6, v30, 0, 0);
  v7 = type metadata accessor for PosterAnimationViewModel(0);
  if (!sub_100006580(v6, 1, v7))
  {
    v8 = *(void **)(v6 + *(int *)(v7 + 72));
    if (v8)
    {
      v9 = v8;
      if ((sub_10000C984() & 1) != 0)
      {
        v28 = 0;
        v29 = 0xE000000000000000;
        _StringGuts.grow(_:)(39);
        v10._countAndFlagsBits = 0x6F697469646E6F43;
        v10._object = (void *)0xEB00000000203A6ELL;
        String.append(_:)(v10);
        MicaResourceModel.condition.getter();
        sub_1000059B4(&qword_10005D828, (uint64_t (*)(uint64_t))&type metadata accessor for WeatherCondition, (uint64_t)&protocol conformance descriptor for WeatherCondition);
        v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v11);
        object = v12._object;
        String.append(_:)(v12);
        swift_bridgeObjectRelease(object);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v14._countAndFlagsBits = 0x6F697461636F4C0ALL;
        v14._object = (void *)0xEB00000000203A6ELL;
        String.append(_:)(v14);
        v27[0] = Location.coordinate.getter(v15);
        v27[1] = v16;
        type metadata accessor for CLLocationCoordinate2D(0);
        _print_unlocked<A, B>(_:_:)(v27, &v28, v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v18._object = (void *)0xEB00000000203A65;
        v18._countAndFlagsBits = 0x6D616E656C69460ALL;
        String.append(_:)(v18);
        v19._countAndFlagsBits = URL.lastPathComponent.getter();
        v20 = v19._object;
        String.append(_:)(v19);
        swift_bridgeObjectRelease(v20);
        v21 = v28;
        v22 = v29;
        v23 = *(void **)(v1 + 48);
        if (v23)
        {
          v24 = v23;
          sub_100013594(v21, v22, v24);

        }
        else
        {
          v25 = sub_1000048D4(v28, v29);
          swift_bridgeObjectRelease(v22);

          v9 = *(id *)(v1 + 48);
          *(_QWORD *)(v1 + 48) = v25;
        }
      }

    }
  }
}

uint64_t sub_10003CBDC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003CC00()
{
  uint64_t v0;

  sub_100013BF0();
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10003CC28(uint64_t a1)
{
  uint64_t *v1;

  sub_10003BC38(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10003CC34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003CC44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003CC4C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)sub_100013A1C();
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v20 = *(_QWORD *)(v2 + 64);
  v21 = sub_100013AD0();
  v5 = *(_QWORD *)(v21 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v19 = *(_QWORD *)(v5 + 64);
  sub_100013BF0();
  v7 = v0 + v4;
  v8 = type metadata accessor for Location(0);
  sub_100013A4C(v8);
  sub_1000088F4();
  sub_10003D02C();
  v9 = type metadata accessor for WeatherCondition(0);
  sub_10003D018(v9);
  v10 = type metadata accessor for CloudAltitudeKind(0);
  sub_10003D018(v10);
  if (!sub_10003D044(v0 + v4 + v1[10]))
    sub_10003D02C();
  if (!sub_10003D044(v7 + v1[11]))
    sub_10003D02C();
  v11 = type metadata accessor for Elevation(0);
  sub_100013A60(v11);
  v12 = v7 + v1[14];
  v13 = type metadata accessor for BackgroundMoonData(0);
  if (!sub_100006580(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v3 | v6 | 7;
  v15 = (v4 + v20 + v6) & ~v6;
  v16 = v7 + v1[16];
  v17 = type metadata accessor for TargetWindowSizeClass(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v15, v21);
  return swift_deallocObject(v0, v15 + v19, v14);
}

void sub_10003CE14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_100013A1C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100013AD0() - 8) + 80);
  sub_10003B30C(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_10003CE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100005350(&qword_10005C320) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100013BF0();
  v5 = v0 + v3;
  v6 = (int *)sub_100013A1C();
  if (!sub_10003D0EC(v0 + v3))
  {
    v7 = type metadata accessor for Location(0);
    sub_10000B41C(v7);
    sub_1000088F4();
    sub_100013A40();
    v8 = type metadata accessor for WeatherCondition(0);
    sub_100013A60(v8);
    v9 = type metadata accessor for CloudAltitudeKind(0);
    sub_100013A60(v9);
    if (!sub_100013A24(v6[10]))
      sub_100013A40();
    if (!sub_100013A24(v6[11]))
      sub_100013A40();
    v10 = type metadata accessor for Elevation(0);
    sub_100013A4C(v10);
    v11 = v5 + v6[14];
    v12 = type metadata accessor for BackgroundMoonData(0);
    if (!sub_10003D044(v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = type metadata accessor for TargetWindowSizeClass(0);
    sub_100013A4C(v13);

  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_10003CFD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005350(&qword_10005C320) - 8) + 80);
  return sub_10003C358(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10003D018(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_10003D02C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_10003D044(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

void sub_10003D068(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10000AD40(a1, a2, v2);
}

uint64_t sub_10003D070(uint64_t a1)
{
  uint64_t v1;

  return sub_10000658C(a1, 0, 1, v1);
}

uint64_t sub_10003D080(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1000210CC(a1, a2, (uint64_t *)(v2 - 176));
}

void sub_10003D08C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0;

}

void sub_10003D098()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 32) = 0;

}

void sub_10003D0A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 40) = 0;

}

void sub_10003D0B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_100013120(v4, v3, a3);
}

uint64_t sub_10003D0BC()
{
  return type metadata accessor for MicaBackgroundAnimation(0);
}

uint64_t sub_10003D0C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = a1;
  return v1 - 200;
}

uint64_t sub_10003D0EC(uint64_t a1)
{
  uint64_t v1;

  return sub_100006580(a1, 1, v1);
}

uint64_t sub_10003D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000658C(a1, 0, 1, a4);
}

uint64_t sub_10003D104()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  _BYTE v61[40];
  _QWORD v62[4];
  char v63;

  sub_10003D3F0(0, 0, (uint64_t)v61);
  sub_10003D644((uint64_t)v61, (uint64_t)v62);
  if ((v63 & 1) != 0)
  {
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v1 = sub_100013AD0();
    sub_10000AADC(v1, (uint64_t)qword_100060928);
    v2 = sub_10001A82C();
    v3 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_16;
    v4 = (uint8_t *)sub_10000B0C8(2);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Snapshot image is not valid because color components do not exist", v4, 2u);
    v5 = (uint64_t)v4;
LABEL_15:
    sub_10000AFFC(v5);
LABEL_16:

    return 0;
  }
  v6 = v62[0];
  if (*(double *)&v62[3] != 1.0)
  {
    if (qword_10005BB78 != -1)
      swift_once(&qword_10005BB78, sub_1000423D4);
    v34 = sub_100013AD0();
    sub_10000AADC(v34, (uint64_t)qword_100060928);
    v2 = sub_10001A82C();
    v35 = static os_log_type_t.error.getter();
    if (!sub_10000B488(v35))
      goto LABEL_16;
    v36 = (_DWORD *)sub_10000B0C8(12);
    v37 = sub_10000B0C8(32);
    *v36 = 136446210;
    v38 = sub_100005350(&qword_10005D838);
    v40 = sub_10003D6A4(v38, v39);
    v47 = sub_10003D6C0(v40, v41, v42, v43, v44, v45, v46);
    sub_10003D68C(v47, v48, v49, v50, v51, v52, v53, v54, v60, v6);
    swift_bridgeObjectRelease(v0);
    sub_1000396AC((void *)&_mh_execute_header, v55, v56, "Snapshot image is not valid because image has transparency; colorComponents=%{public}s");
    sub_10003D6B4(v57, v58, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v37);
    v5 = (uint64_t)v36;
    goto LABEL_15;
  }
  if (qword_10005BB78 != -1)
    swift_once(&qword_10005BB78, sub_1000423D4);
  v7 = sub_100013AD0();
  sub_10000AADC(v7, (uint64_t)qword_100060928);
  v8 = (void *)sub_10001A82C();
  v9 = static os_log_type_t.default.getter();
  if (sub_10000B488(v9))
  {
    v10 = (_DWORD *)sub_10000B0C8(12);
    v11 = sub_10000B0C8(32);
    *v10 = 136446210;
    v12 = sub_100005350(&qword_10005D838);
    v14 = sub_10003D6A4(v12, v13);
    v21 = sub_10003D6C0(v14, v15, v16, v17, v18, v19, v20);
    sub_10003D68C(v21, v22, v23, v24, v25, v26, v27, v28, v60, v6);
    swift_bridgeObjectRelease(v0);
    sub_1000396AC((void *)&_mh_execute_header, v29, v30, "Snapshot image is valid; colorComponents=%{public}s");
    v31 = 1;
    sub_10003D6B4(v32, v33, (uint64_t)&type metadata for Any + 8);
    sub_10000AFFC(v11);
    sub_10000AFFC((uint64_t)v10);

  }
  else
  {

    return 1;
  }
  return v31;
}

void sub_10003D3F0(int64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X8>)
{
  CGImage *v3;
  CGImage *v4;
  int64_t Width;
  float64x2_t v9;
  char v10;
  int64_t Height;
  CGDataProvider *v12;
  CGDataProvider *v13;
  const __CFData *v14;
  const UInt8 *BytePtr;
  const UInt8 *v16;
  int64_t BytesPerRow;
  int64_t v18;
  int64_t BitsPerPixel;
  uint64_t v20;
  uint64_t v21;
  uint64x2_t v22;
  uint64_t v23;
  int v24;
  uint64x2_t v26;
  uint64x2_t v27;
  uint64_t v39;
  float64x2_t v40;
  int v41;
  float64x2_t v42;
  float64x2_t v43;

  v4 = v3;
  Width = CGImageGetWidth(v3);
  if (Width < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v9 = 0uLL;
  v10 = 1;
  if (a1 < 0 || Width <= a1)
    goto LABEL_17;
  Height = CGImageGetHeight(v3);
  if (Height < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = 1;
  v9 = 0uLL;
  if (a2 < 0 || Height <= a2)
  {
LABEL_17:
    _Q0 = 0uLL;
LABEL_20:
    *(float64x2_t *)a3 = v9;
    *(float64x2_t *)(a3 + 16) = _Q0;
    *(_BYTE *)(a3 + 32) = v10;
    return;
  }
  v12 = CGImageGetDataProvider(v3);
  if (!v12)
    goto LABEL_19;
  v13 = v12;
  v14 = CGDataProviderCopyData(v12);

  if (!v14)
    goto LABEL_19;
  BytePtr = CFDataGetBytePtr(v14);
  if (!BytePtr)
  {

LABEL_19:
    v10 = 1;
    _Q0 = 0uLL;
    v9 = 0uLL;
    goto LABEL_20;
  }
  v16 = BytePtr;
  BytesPerRow = CGImageGetBytesPerRow(v4);
  v18 = a2 * BytesPerRow;
  if ((unsigned __int128)(a2 * (__int128)BytesPerRow) >> 64 != (a2 * BytesPerRow) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BitsPerPixel = CGImageGetBitsPerPixel(v4);
  if ((unsigned __int128)(a1 * (__int128)BitsPerPixel) >> 64 != (a1 * BitsPerPixel) >> 63)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = a1 * BitsPerPixel / 8;
  v21 = v18 + v20;
  if (__OFADD__(v18, v20))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (CGImageGetBitsPerComponent(v4) == 16 && (CGImageGetBitmapInfo(v4) & 0x100) != 0)
  {
    _S0 = *(_DWORD *)&v16[v21];
    _H1 = HIWORD(_S0);
    __asm
    {
      FCVT            D1, H1
      FCVT            D0, H0
    }
    _Q0.f64[1] = _D1;
    v41 = *(_DWORD *)&v16[v21 + 4];
    v43 = _Q0;

    v10 = 0;
    _H0 = HIWORD(v41);
    _H2 = v41;
    __asm
    {
      FCVT            D1, H0
      FCVT            D0, H2
    }
    _Q0.f64[1] = _D1;
    v9 = v43;
    goto LABEL_20;
  }
  if (CGImageGetBitsPerComponent(v4) == 16)
  {
    v22.i64[0] = *(unsigned __int16 *)&v16[v21];
    v22.i64[1] = *(unsigned __int16 *)&v16[v21 + 2];
    v40 = (float64x2_t)vdupq_n_s64(0x40EFFFE000000000uLL);
    v42 = vdivq_f64(vcvtq_f64_u64(v22), v40);
    LODWORD(v23) = *(unsigned __int16 *)&v16[v21 + 4];
    v24 = *(unsigned __int16 *)&v16[v21 + 6];
LABEL_23:
    HIDWORD(v23) = v24;
    v39 = v23;

    v9 = v42;
    v10 = 0;
    v27.i64[0] = v39;
    v27.i64[1] = HIDWORD(v39);
    _Q0 = vdivq_f64(vcvtq_f64_u64(v27), v40);
    goto LABEL_20;
  }
  if (v21 <= 0x7FFFFFFFFFFFFFFCLL)
  {
    v26.i64[0] = v16[v21];
    v26.i64[1] = v16[v21 + 1];
    v40 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
    v42 = vdivq_f64(vcvtq_f64_u64(v26), v40);
    LODWORD(v23) = v16[v21 + 2];
    v24 = v16[v21 + 3];
    goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_10003D644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005350(&qword_10005D830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  a10 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(&a10, v12 + 8, v11, v10);
}

uint64_t sub_10003D6A4(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return String.init<A>(describing:)(va, a1);
}

uint64_t sub_10003D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return swift_arrayDestroy(v3, 1, a3);
}

uint64_t sub_10003D6C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1000210CC(a1, a2, (uint64_t *)va);
}

double sub_10003D6CC(char a1)
{
  return dbl_100047188[a1];
}

void sub_10003D6E0(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  id v17;
  void *v18;
  char v19;
  char v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for PosterData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005350(&qword_10005C4A0);
  __chkstk_darwin(v7);
  v9 = (double *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000196B0(a1);
  v10 = sub_10003DA9C();
  v11 = objc_msgSend(v10, "authorizationStatus");

  v12 = v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus;
  *(_DWORD *)v12 = (_DWORD)v11;
  *(_BYTE *)(v12 + 4) = 0;
  sub_100025800((uint64_t)v9);
  v13 = type metadata accessor for PosterDataModel(0);
  if (sub_100006580((uint64_t)v9, 1, v13) == 1)
  {
    sub_10000AB60((uint64_t)v9, &qword_10005C4A0);
  }
  else
  {
    v14 = v9[2];
    v15 = v9[3];
    sub_10000AB38((uint64_t)v9, type metadata accessor for PosterDataModel);
    v16 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_location;
    if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_location))
    {
      v17 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v14, v15);
      v18 = *(void **)(v2 + v16);
      *(_QWORD *)(v2 + v16) = v17;

    }
  }
  *v6 = 0;
  sub_100041CC4((uint64_t)v6);
  v19 = CLAuthorizationStatus.isAuthorized.getter(v11);
  sub_10002851C((uint64_t)a1, (uint64_t)v6);
  if ((v19 & 1) != 0)
  {
    if ((v20 & 1) != 0)
    {
      sub_10000AB38((uint64_t)a1, type metadata accessor for PosterData);
      *a1 = 2;
      sub_100041CC4((uint64_t)a1);
LABEL_10:
      sub_100019CA4((uint64_t)a1);
    }
  }
  else if ((v20 & 1) == 0)
  {
    sub_10000AB38((uint64_t)a1, type metadata accessor for PosterData);
    sub_10001352C((uint64_t)v6, (uint64_t)a1, type metadata accessor for PosterData);
    goto LABEL_10;
  }
  sub_10000AB38((uint64_t)v6, type metadata accessor for PosterData);
}

void sub_10003D904()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_isMonitoringEvents) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_isMonitoringEvents) = 1;
    sub_10003DD48();
    sub_10003E168();
    sub_10003E260();
  }
}

void sub_10003D93C()
{
  NSObject *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;

  v2 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_isMonitoringEvents;
  if (*((_BYTE *)&v0->isa + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_isMonitoringEvents) == 1)
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v3 = sub_100013AD0();
    sub_10001902C(v3, (uint64_t)qword_1000608C8);
    v4 = sub_100019080();
    if (os_log_type_enabled(v0, v4))
    {
      v1 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v1 = 0;
      sub_100019040((void *)&_mh_execute_header, v0, v4, "Stopping monitoring of significant events for data manager", v1);
      sub_10000AFFC((uint64_t)v1);
    }

    *((_BYTE *)&v0->isa + v2) = 0;
    v5 = (char *)v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate);
    sub_100041CB8(Strong);
    swift_unknownObjectRelease(v1);
    v7 = swift_unknownObjectWeakLoadStrong(v5);
    sub_100041CB8(v7);
    swift_unknownObjectRelease(v1);
    sub_10003E530();
    sub_10003E584();
    sub_10003E5BC();
    sub_10000A2A0();
    v8 = *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation);
    *(Class *)((char *)&v0->isa + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation) = 0;

  }
}

id sub_10003DA9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager____lazy_storage___locationManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager____lazy_storage___locationManager);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager____lazy_storage___locationManager);
  }
  else
  {
    v4 = sub_10003DAFC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10003DAFC(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)CLLocationManager), "init");
  objc_msgSend(v2, "setDelegate:", a1);
  objc_msgSend(v2, "setDistanceFilter:", 500.0);
  objc_msgSend(v2, "setDesiredAccuracy:", kCLLocationAccuracyKilometer);
  return v2;
}

id sub_10003DB7C(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_cacheManager;
  v5 = qword_10005BB20;
  v6 = v1;
  if (v5 != -1)
    swift_once(&qword_10005BB20, sub_10001936C);
  v7 = qword_100060828;
  *(_QWORD *)&v6[v4] = qword_100060828;
  v8 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_dataUpdater;
  v9 = type metadata accessor for PosterDataUpdater();
  sub_10000B5B0(v9, 48);
  swift_retain(v7);
  sub_10000A4A4();
  *(_QWORD *)&v6[v8] = v10;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager____lazy_storage___locationManager] = 0;
  v11 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkMonitor;
  v12 = type metadata accessor for NetworkMonitor();
  sub_10000B5B0(v12, 48);
  *(_QWORD *)&v6[v11] = sub_100023884();
  *(_QWORD *)&v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_periodicTimer] = 0;
  v13 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_locationSessionExtender;
  v14 = type metadata accessor for RenderSessionExtender();
  v15 = sub_10000B5B0(v14, 32);
  *(_QWORD *)(v15 + 24) = 0;
  *(_BYTE *)(v15 + 16) = 5;
  *(_QWORD *)&v6[v13] = v15;
  v16 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkSessionExtender;
  v17 = sub_10000B5B0(v14, 32);
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 16) = 6;
  *(_QWORD *)&v6[v16] = v17;
  v18 = &v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus];
  *(_DWORD *)v18 = 0;
  v18[4] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_location] = 0;
  v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkStatus] = 2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation] = 0;
  v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_isMonitoringEvents] = 0;
  sub_100041C7C(OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate);
  sub_100041C7C(OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate);
  v6[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_canRequestLocationAuthorization] = a1 & 1;

  v20.receiver = v6;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, "init");
}

void sub_10003DD48()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t Strong;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  int v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_10003DA9C();
  objc_msgSend(v2, "setDelegate:", v1);

  v3 = sub_10003DA9C();
  v4 = objc_msgSend(v3, "authorizationStatus");

  if (v4 - 1 < 2)
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000AADC(v14, (uint64_t)qword_1000608C8);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Cannot start location updates because authorization is denied", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    v29 = sub_10003DA9C();
    objc_msgSend(v29, "stopUpdatingLocation");

  }
  else if (v4 - 3 >= 2)
  {
    if (v4)
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v24 = type metadata accessor for Logger(0);
      v25 = sub_10000AADC(v24, (uint64_t)qword_1000608C8);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Cannot start location updates because authorization is unknown", v28, 2u);
        swift_slowDealloc(v28, -1, -1);
      }

      v21 = sub_10003DA9C();
      -[NSObject stopUpdatingLocation](v21, "stopUpdatingLocation");
    }
    else
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_10000AADC(v19, (uint64_t)qword_1000608C8);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cannot start location updates because authorization is not determined", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
      }
    }

    sub_10003E8E8();
  }
  else
  {
    v5 = v1 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate);
    v7 = sub_10001A83C(Strong, *(_QWORD *)(v5 + 8));
    swift_unknownObjectRelease(Strong);
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_10000AADC(v8, (uint64_t)qword_1000608C8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 67109120;
      v30 = v7 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v12 + 4, v12 + 8);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting updates for locations; extendedSessionGranted=%{BOOL}d",
        v12,
        8u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = sub_10003DA9C();
    objc_msgSend(v13, "startUpdatingLocation");

  }
}

void sub_10003E168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  v1 = v0;
  if (qword_10005BB58 != -1)
    swift_once(&qword_10005BB58, sub_100042334);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000AADC(v2, (uint64_t)qword_1000608C8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting monitoring for changes in network status", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkMonitor);
  *(_QWORD *)(v7 + 40) = &off_1000576E8;
  swift_unknownObjectWeakAssign(v7 + 32, v1);
  sub_10002311C();
}

void sub_10003E260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t aBlock;
  unint64_t v18[4];
  uint64_t v19;

  v1 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_periodicTimer;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_periodicTimer))
  {
    v2 = v0;
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_10000AADC(v3, (uint64_t)qword_1000608C8);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      *(_DWORD *)v7 = 136446210;
      v16 = v8;
      aBlock = 0;
      v18[0] = 0xE000000000000000;
      Double.write<A>(to:)(&aBlock, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, 15.0);
      v9._countAndFlagsBits = 1852402976;
      v9._object = (void *)0xE400000000000000;
      String.append(_:)(v9);
      v10 = v18[0];
      aBlock = sub_1000210CC(aBlock, v18[0], &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v18, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Scheduling timer for periodic updates every %{public}s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);
    }

    sub_1000135E0(0, &qword_10005D960, BSContinuousMachTimer_ptr);
    v11 = sub_1000405EC(0xD00000000000001BLL, 0x8000000100048D40);
    sub_1000135E0(0, &qword_10005C038, OS_dispatch_queue_ptr);
    v12 = (void *)static OS_dispatch_queue.main.getter();
    v13 = swift_allocObject(&unk_100057708, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v2);
    v18[3] = (unint64_t)sub_100041BC8;
    v19 = v13;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v18[0] = 1107296256;
    v18[1] = (unint64_t)sub_1000409D8;
    v18[2] = (unint64_t)&unk_100057720;
    v14 = _Block_copy(&aBlock);
    swift_release(v19);
    objc_msgSend(v11, "scheduleRepeatingWithFireInterval:repeatInterval:leewayInterval:queue:handler:", v12, v14, 900.0, 900.0, 60.0);
    _Block_release(v14);

    v15 = *(void **)(v2 + v1);
    *(_QWORD *)(v2 + v1) = v11;

  }
}

void sub_10003E530()
{
  id v0;
  id v1;

  v0 = sub_10003DA9C();
  objc_msgSend(v0, "stopUpdatingLocation");

  v1 = sub_10003DA9C();
  objc_msgSend(v1, "setDelegate:", 0);

}

double sub_10003E584()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkMonitor);
  *(_QWORD *)(v1 + 40) = 0;
  swift_unknownObjectWeakAssign(v1 + 32, 0);
  return sub_1000234C4();
}

void sub_10003E5BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_periodicTimer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_periodicTimer);
  if (v2)
  {
    objc_msgSend(v2, "invalidate");
    v2 = *(void **)(v0 + v1);
  }
  *(_QWORD *)(v0 + v1) = 0;

}

void sub_10003E5F8()
{
  _swift_stdlib_reportUnimplementedInitializer("WeatherPoster.PosterDataManager", 31, "init()", 6, 0);
  __break(1u);
}

uint64_t type metadata accessor for PosterDataManager()
{
  return objc_opt_self(_TtC13WeatherPoster17PosterDataManager);
}

void sub_10003E6F8(char a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  os_log_type_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = a1 & 1;
  v3 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkStatus;
  v4 = v1[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkStatus];
  if (v4 == 2 || (sub_10000BFC0(a1 & 1, v4 & 1), (v5 & 1) == 0))
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v6 = sub_100013AD0();
    sub_10001902C(v6, (uint64_t)qword_1000608C8);
    v7 = sub_100019080();
    if (sub_10002FB78(v7))
    {
      v8 = (_DWORD *)sub_10000B0C8(12);
      v9 = sub_10000B0C8(32);
      *v8 = 136446210;
      v18 = v9;
      if (v2)
        v10 = 0x656E696C66666FLL;
      else
        v10 = 0x6C62616863616572;
      if (v2)
        v11 = 0xE700000000000000;
      else
        v11 = 0xE900000000000065;
      sub_1000210CC(v10, v11, &v18);
      sub_100041C64();
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v12, v13, v14, v8 + 3);
      swift_bridgeObjectRelease(v11);
      sub_100041BE8((void *)&_mh_execute_header, v15, v16, "Network status changed to %{public}s");
      sub_100041C20((uint64_t)&type metadata for Any);
      sub_10000AFFC(v9);
      sub_10000AFFC((uint64_t)v8);
    }

    v1[v3] = v2;
    if (!v2)
    {
      swift_bridgeObjectRelease(0xE900000000000065);
LABEL_16:
      sub_100041CDC(21, 0x8000000100048D80);
      return;
    }
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E696C66666FLL, 0xE700000000000000, 0x6C62616863616572, 0xE900000000000065, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    if ((v17 & 1) != 0)
      goto LABEL_16;
    sub_100040478();
  }
}

void sub_10003E8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_canRequestLocationAuthorization) == 1)
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_10000AADC(v1, (uint64_t)qword_1000608C8);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requesting when in use authorization", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    v6 = sub_10003DA9C();
    objc_msgSend(v6, "requestWhenInUseAuthorization");

  }
}

void sub_10003EA04(void *a1, uint64_t a2)
{
  NSObject *v2;
  NSObject *v3;
  char *v6;
  uint64_t Strong;
  id v8;
  Swift::Bool v9;
  unint64_t v10;
  void **p_cache;
  uint64_t v12;
  id v14;
  void *v15;
  void *v16;
  id v17;
  char v18;
  NSObject *v19;
  NSObject *v20;
  char *v21;
  void *v22;
  CLLocation v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  double v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD v62[4];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  CLLocation_optional v67;

  v3 = v2;
  v6 = (char *)v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate);
  sub_10001A9A0(Strong, *((_QWORD *)v6 + 1));
  swift_unknownObjectRelease(Strong);
  v8 = objc_msgSend(a1, "_limitsPrecision");
  v9 = (char)v8;
  v66 = a2;
  if ((unint64_t)a2 >> 62)
    goto LABEL_39;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    p_cache = _TtC13WeatherPoster22DynamicRotationManager.cache;
    if (!v10)
      break;
    v12 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_location;
    v64 = a2 & 0xFFFFFFFFFFFFFF8;
    while (!__OFSUB__(v10--, 1))
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      }
      else
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_37;
        if (v10 >= *(_QWORD *)(v64 + 16))
          goto LABEL_38;
        v14 = *(id *)(a2 + 32 + 8 * v10);
      }
      v15 = v14;
      v16 = *(Class *)((char *)&v3->isa + v12);
      v17 = v16;
      v67.value.super.isa = (Class)v16;
      LOBYTE(v16) = CLLocation.isValid(limitsPrecision:lastKnownLocation:)(v9, v67);

      if ((v16 & 1) != 0 || !v10)
      {
        p_cache = (void **)(_TtC13WeatherPoster22DynamicRotationManager + 16);
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    if (a2 < 0)
      v61 = a2;
    else
      v61 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v61);
    v8 = (id)swift_bridgeObjectRelease(a2);
  }
LABEL_14:
  __chkstk_darwin(v8);
  v62[2] = &v66;
  v19 = sub_100041B1C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_100041BAC, (uint64_t)v62, v10, v18 & 1);
  if (v19)
  {
    v20 = v19;
    v21 = (char *)p_cache[272];
    v22 = *(void **)&v21[(_QWORD)v3];
    if (v22
      && (objc_msgSend(v22, "coordinate"),
          v23.super.isa = (Class)v20,
          !CLLocationCoordinate2D.isSignificantlyDifferent(from:precision:)(v23, 0.001)))
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v43 = sub_100013AD0();
      sub_10001902C(v43, (uint64_t)qword_1000608C8);
      v44 = sub_100013BB4();
      if (sub_100013AD8(v44))
      {
        v45 = (uint8_t *)sub_10000B0C8(2);
        *(_WORD *)v45 = 0;
        sub_100019040((void *)&_mh_execute_header, v3, (os_log_type_t)&v63, "Location updated but no significant difference from known location; Update will be skipped.",
          v45);
        sub_10000AFFC((uint64_t)v45);

      }
      else
      {

        v3 = v20;
      }
    }
    else
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v24 = sub_100013AD0();
      v25 = sub_10000AADC(v24, (uint64_t)qword_1000608C8);
      v26 = v3;
      v27 = v20;
      v28 = v26;
      v29 = v27;
      Logger.logObject.getter(v29);
      v30 = sub_100019080();
      if (os_log_type_enabled(v25, (os_log_type_t)v30))
      {
        LODWORD(v64) = v30;
        v31 = sub_10000B0C8(42);
        v32 = sub_10000B0C8(64);
        v63 = v32;
        v66 = v32;
        *(_DWORD *)v31 = 141558787;
        v65 = 1752392040;
        sub_100041C94(v32, v33, v31 + 4, v31 + 12);
        *(_WORD *)(v31 + 12) = 2081;
        v34 = *(void **)&v21[(_QWORD)v3];
        if (v34)
        {
          objc_msgSend(v34, "coordinate");
          v37 = CLLocationCoordinate2D.debugDescription.getter(v35, v36);
          v39 = v38;
        }
        else
        {
          v39 = 0xE300000000000000;
          v37 = 7104878;
        }
        v46 = sub_1000210CC(v37, v39, &v66);
        sub_100041C48(v46, v47, v48, v31 + 22);

        v49 = swift_bridgeObjectRelease(v39);
        *(_WORD *)(v31 + 22) = 2160;
        v65 = 1752392040;
        sub_100041C94(v49, v50, v31 + 24, v31 + 32);
        *(_WORD *)(v31 + 32) = 2081;
        -[NSObject coordinate](v29, "coordinate");
        v53 = CLLocationCoordinate2D.debugDescription.getter(v51, v52);
        v55 = v54;
        v56 = sub_1000210CC(v53, v54, &v66);
        sub_100041C48(v56, v57, v58, v31 + 42);

        swift_bridgeObjectRelease(v55);
        _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v64, "Location significantly changed from %{private,mask.hash}s to %{private,mask.hash}s", (uint8_t *)v31, 0x2Au);
        v59 = v63;
        swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
        sub_10000AFFC(v59);
        sub_10000AFFC(v31);

      }
      else
      {

      }
      v60 = *(void **)&v21[(_QWORD)v3];
      *(_QWORD *)&v21[(_QWORD)v3] = v20;
      v3 = v29;

      sub_10003EF44(0x6E6F697461636F6CLL, 0xEF65676E61686320);
    }
  }
  else
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v40 = sub_100013AD0();
    sub_10001902C(v40, (uint64_t)qword_1000608C8);
    v41 = sub_100013BB4();
    if (sub_100013AD8(v41))
    {
      v42 = (uint8_t *)sub_10000B0C8(2);
      *(_WORD *)v42 = 0;
      sub_100019040((void *)&_mh_execute_header, v3, (os_log_type_t)&v63, "Location updated but did not meet accuracy requirements; Update will be skipped.",
        v42);
      sub_10000AFFC((uint64_t)v42);
    }
  }

}

void sub_10003EF44(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  int v21;
  void *v22;
  id v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Bool v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v87 = *(_QWORD *)(v6 - 8);
  v88 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005350((uint64_t *)&unk_10005D940);
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PosterDataModel(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v89 = (uint64_t)&v84 - v16;
  v17 = type metadata accessor for PosterData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v3[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus];
  if ((v3[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus + 4] & 1) != 0
    || (CLAuthorizationStatus.isAuthorized.getter(*(unsigned int *)v20) & 1) == 0)
  {
    v28 = a1;
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v29 = type metadata accessor for Logger(0);
    sub_10000AADC(v29, (uint64_t)qword_1000608C8);
    v30 = a2;
    swift_bridgeObjectRetain_n(a2, 2);
    v31 = v3;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(22, -1);
      v35 = swift_slowAlloc(64, -1);
      v91 = v35;
      *(_DWORD *)v34 = 136446466;
      swift_bridgeObjectRetain(v30);
      v90 = sub_1000210CC(v28, v30, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease_n(v30, 3);
      *(_WORD *)(v34 + 12) = 2082;
      if ((v20[4] & 1) != 0)
      {
        v36 = 0xE700000000000000;
        v37 = 0x6E776F6E6B6E75;
      }
      else
      {
        v37 = CLAuthorizationStatus.logDescription.getter(*(unsigned int *)v20);
        v36 = v38;
      }
      v90 = sub_1000210CC(v37, v36, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v34 + 14, v34 + 22);

      swift_bridgeObjectRelease(v36);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Update for %{public}s will be skipped because location is unauthorized; status=%{public}s",
        (uint8_t *)v34,
        0x16u);
      swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      v39 = v34;
      goto LABEL_17;
    }

LABEL_14:
    swift_bridgeObjectRelease_n(v30, 2);
LABEL_18:
    sub_100040478();
    return;
  }
  v86 = a1;
  v21 = v3[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkStatus];
  if (v21 == 2)
    goto LABEL_4;
  if ((v21 & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
LABEL_23:
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v41 = type metadata accessor for Logger(0);
    sub_10000AADC(v41, (uint64_t)qword_1000608C8);
    v30 = a2;
    v42 = swift_bridgeObjectRetain_n(a2, 2);
    v32 = Logger.logObject.getter(v42);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = swift_slowAlloc(32, -1);
      v91 = v45;
      *(_DWORD *)v44 = 136446210;
      swift_bridgeObjectRetain(v30);
      v90 = sub_1000210CC(v86, v30, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease_n(v30, 3);
      _os_log_impl((void *)&_mh_execute_header, v32, v43, "Update for %{public}s will be skipped because network is offline", v44, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      v39 = (uint64_t)v44;
LABEL_17:
      swift_slowDealloc(v39, -1, -1);

      goto LABEL_18;
    }

    goto LABEL_14;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C62616863616572, 0xE900000000000065, 0x656E696C66666FLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000065);
  if ((v40 & 1) != 0)
    goto LABEL_23;
LABEL_4:
  v22 = *(void **)&v3[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_location];
  if (v22)
  {
    v23 = v22;
    sub_1000196B0(v19);
    if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
    {
      v85 = (uint64_t)v23;
      v24 = v89;
      sub_1000134CC((uint64_t)v19, v89, type metadata accessor for PosterDataModel);
      sub_10002FD08(*(_QWORD *)(v24 + *(int *)(v12 + 40)), (uint64_t)v11);
      v25 = sub_100025E08(600.0);
      sub_10000AB60((uint64_t)v11, (uint64_t *)&unk_10005D940);
      sub_10001352C(v24, (uint64_t)v15, type metadata accessor for PosterDataModel);
      if ((v25 & 1) != 0)
      {
        sub_10000AB38((uint64_t)v15, type metadata accessor for PosterDataModel);
        v27 = (void *)v85;
      }
      else
      {
        v27 = (void *)v85;
        v58 = v85;
        v59 = CLLocationCoordinate2D.isSignificantlyDifferent(from:precision:)(*(CLLocation *)(&v26 - 1), 0.001);
        sub_10000AB38((uint64_t)v15, type metadata accessor for PosterDataModel);
        if (!v59)
        {
          if (qword_10005BB58 != -1)
            swift_once(&qword_10005BB58, sub_100042334);
          v72 = type metadata accessor for Logger(0);
          sub_10000AADC(v72, (uint64_t)qword_1000608C8);
          v73 = v27;
          swift_bridgeObjectRetain_n(a2, 2);
          v74 = v73;
          v75 = Logger.logObject.getter(v74);
          v76 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v75, v76))
          {
            v77 = swift_slowAlloc(22, -1);
            v85 = swift_slowAlloc(64, -1);
            v91 = v85;
            *(_DWORD *)v77 = 136446466;
            swift_bridgeObjectRetain(a2);
            v90 = sub_1000210CC(v86, a2, &v91);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v77 + 4, v77 + 12);
            swift_bridgeObjectRelease_n(a2, 3);
            *(_WORD *)(v77 + 12) = 2082;
            v78 = objc_msgSend(v74, "timestamp");
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            v80 = Date.description.getter(v79);
            v82 = v81;
            (*(void (**)(char *, uint64_t))(v87 + 8))(v8, v88);
            v90 = sub_1000210CC(v80, v82, &v91);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v77 + 14, v77 + 22);

            swift_bridgeObjectRelease(v82);
            _os_log_impl((void *)&_mh_execute_header, v75, v76, "Update for %{public}s will be skipped because the current data's weather and location is recent; locationT"
              "imestamp=%{public}s",
              (uint8_t *)v77,
              0x16u);
            v83 = v85;
            swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v83, -1, -1);
            swift_slowDealloc(v77, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(a2, 2);

          }
          goto LABEL_51;
        }
      }
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v60 = type metadata accessor for Logger(0);
      sub_10000AADC(v60, (uint64_t)qword_1000608C8);
      v61 = v27;
      swift_bridgeObjectRetain_n(a2, 2);
      v62 = v61;
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc(22, -1);
        v85 = swift_slowAlloc(64, -1);
        v91 = v85;
        *(_DWORD *)v65 = 136446466;
        swift_bridgeObjectRetain(a2);
        v90 = sub_1000210CC(v86, a2, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v65 + 4, v65 + 12);
        swift_bridgeObjectRelease_n(a2, 3);
        *(_WORD *)(v65 + 12) = 2082;
        v66 = objc_msgSend(v62, "timestamp");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v68 = Date.description.getter(v67);
        v70 = v69;
        (*(void (**)(char *, uint64_t))(v87 + 8))(v8, v88);
        v90 = sub_1000210CC(v68, v70, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v65 + 14, v65 + 22);

        swift_bridgeObjectRelease(v70);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Update for %{public}s will fetch new data because the current data's weather or location is stale; locationTim"
          "estamp=%{public}s",
          (uint8_t *)v65,
          0x16u);
        v71 = v85;
        swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v71, -1, -1);
        swift_slowDealloc(v65, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      sub_100040A28(v62);

LABEL_51:
      sub_10000AB38(v89, type metadata accessor for PosterDataModel);
      return;
    }
    v52 = *v19;
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v53 = type metadata accessor for Logger(0);
    sub_10000AADC(v53, (uint64_t)qword_1000608C8);
    v54 = swift_bridgeObjectRetain_n(a2, 2);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc(22, -1);
      v91 = swift_slowAlloc(64, -1);
      *(_DWORD *)v57 = 136446466;
      swift_bridgeObjectRetain(a2);
      v90 = sub_1000210CC(v86, a2, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v57 + 4, v57 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v57 + 12) = 2082;
      __asm { BR              X9 }
    }

    swift_bridgeObjectRelease_n(a2, 2);
    sub_100040A28(v23);

  }
  else
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v46 = type metadata accessor for Logger(0);
    sub_10000AADC(v46, (uint64_t)qword_1000608C8);
    v47 = swift_bridgeObjectRetain_n(a2, 2);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = swift_slowAlloc(32, -1);
      v91 = v51;
      *(_DWORD *)v50 = 136446210;
      swift_bridgeObjectRetain(a2);
      v90 = sub_1000210CC(v86, a2, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Update for %{public}s will be skipped because current location is unknown", v50, 0xCu);
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
  }
}

uint64_t sub_10003FD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t Strong;
  _QWORD v23[3];
  _BYTE v24[8];
  uint64_t v25;

  v3 = v2;
  if (qword_10005BB58 != -1)
    swift_once(&qword_10005BB58, sub_100042334);
  v5 = sub_100013AD0();
  sub_10000AADC(v5, (uint64_t)qword_1000608C8);
  swift_errorRetain(a2);
  v6 = swift_errorRetain(a2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_10000B0C8(12);
    v10 = sub_10000B0C8(32);
    v25 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getErrorValue(a2, v24, v23);
    v11 = Error.localizedDescription.getter(v23[1], v23[2]);
    v13 = v12;
    sub_1000210CC(v11, v12, &v25);
    sub_100041C64();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v14, v15, v16, v9 + 12);
    swift_bridgeObjectRelease(v13);
    sub_10001A7F4();
    sub_10001A7F4();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Location request had error=%{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    sub_10000AFFC(v10);
    sub_10000AFFC((uint64_t)v9);
  }
  else
  {
    sub_10001A7F4();
    sub_10001A7F4();
  }

  type metadata accessor for Code(0);
  v18 = v17;
  v25 = 0;
  v19 = sub_100041A58();
  result = static _ErrorCodeProtocol.~= infix(_:_:)(&v25, a2, v18, v19);
  if ((result & 1) == 0)
  {
    v21 = v3 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v21);
    sub_10001A9A0(Strong, *(_QWORD *)(v21 + 8));
    return swift_unknownObjectRelease(Strong);
  }
  return result;
}

void sub_10003FFD0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  char v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  os_log_type_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  os_log_type_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  id v85;
  char v86;
  BOOL v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  id v106;
  id v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  uint64_t v150;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus;
  v5 = (void *)*(unsigned int *)(v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus);
  v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus + 4);
  *(_DWORD *)v4 = objc_msgSend(a1, "authorizationStatus");
  *(_BYTE *)(v4 + 4) = 0;
  v7 = sub_100041CA0();
  v8 = CLAuthorizationStatus.isAuthorized.getter(v7);
  if ((v6 & 1) == 0 && (CLAuthorizationStatus.isAuthorized.getter(v5) & 1) == (v8 & 1))
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v42 = sub_100013AD0();
    v43 = sub_10000AADC(v42, (uint64_t)qword_1000608C8);
    v140 = a1;
    Logger.logObject.getter(v140);
    v44 = sub_100013BB4();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = sub_10000B0C8(22);
      v46 = sub_10000B0C8(64);
      v150 = v46;
      *(_DWORD *)v45 = 136446466;
      v54 = sub_100041CAC(v46, v47, v48, v49, v50, v51, v52, v53, v132, v140);
      v55 = CLAuthorizationStatus.logDescription.getter(v54);
      v57 = v56;
      v149 = sub_100041C8C(v55, v56, v58, v59, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150, v45 + 4, v45 + 12);
      sub_100041BFC(v61, v62, v63, v64, v65, v66, v67, v68, v133, v141);
      sub_100041BFC(v69, v70, v71, v72, v73, v74, v75, v76, v134, v142);
      v77 = swift_bridgeObjectRelease(v57);
      *(_WORD *)(v45 + 12) = 2080;
      v85 = sub_100041CAC(v77, v78, v79, v80, v81, v82, v83, v84, v135, v143);
      v86 = CLAuthorizationStatus.isAuthorized.getter(v85);
      v87 = (v86 & 1) == 0;
      if ((v86 & 1) != 0)
        v88 = 0x7A69726F68747561;
      else
        v88 = 0x726F687475616E75;
      if (v87)
        v89 = 0xEC00000064657A69;
      else
        v89 = 0xEA00000000006465;
      v149 = sub_1000210CC(v88, v89, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150, v45 + 14, v45 + 22);
      sub_100041BFC(v90, v91, v92, v93, v94, v95, v96, v97, v136, v144);
      sub_100041BFC(v98, v99, v100, v101, v102, v103, v104, v105, v137, v145);
      swift_bridgeObjectRelease(v89);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Location authorization changed to %{public}s, but the poster has no change as it is still %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
      sub_10000AFFC(v46);
      sub_10000AFFC(v45);

    }
    else
    {

      sub_100041BFC(v108, v109, v110, v111, v112, v113, v114, v115, v132, v140);
      sub_100041BFC(v116, v117, v118, v119, v120, v121, v122, v123, v138, v146);
      sub_100041BFC(v124, v125, v126, v127, v128, v129, v130, v131, v139, v147);

    }
  }
  else
  {
    v9 = sub_100041CA0();
    if ((CLAuthorizationStatus.isAuthorized.getter(v9) & 1) != 0)
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v10 = sub_100013AD0();
      sub_10000AADC(v10, (uint64_t)qword_1000608C8);
      v11 = a1;
      sub_100041CD0();
      v12 = sub_100019080();
      if (sub_10002FB78(v12))
      {
        v13 = sub_10000B0C8(12);
        v150 = sub_10000B0C8(32);
        v14 = sub_100041C30(4.8751e-34);
        v15 = CLAuthorizationStatus.logDescription.getter(v14);
        v17 = v16;
        v21 = sub_100041C8C(v15, v16, v18, v19, v20);
        sub_100041C04(v21, v22, v23);

        swift_bridgeObjectRelease(v17);
        sub_100041BE8((void *)&_mh_execute_header, v24, v25, "Location authorization changed to %{public}s - starting location updates");
        sub_100041C20((uint64_t)&type metadata for Any);
        sub_10000AFFC(v150);
        sub_10000AFFC(v13);

      }
      else
      {

      }
      v106 = sub_10003DA9C();
      objc_msgSend(v106, "startUpdatingLocation");

      sub_100041CDC(29, 0x8000000100048CF0);
    }
    else
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v26 = sub_100013AD0();
      sub_10000AADC(v26, (uint64_t)qword_1000608C8);
      v27 = a1;
      sub_100041CD0();
      v28 = sub_100019080();
      if (sub_10002FB78(v28))
      {
        v29 = sub_10000B0C8(12);
        v150 = sub_10000B0C8(32);
        v30 = sub_100041C30(4.8751e-34);
        v31 = CLAuthorizationStatus.logDescription.getter(v30);
        v33 = v32;
        v37 = sub_100041C8C(v31, v32, v34, v35, v36);
        sub_100041C04(v37, v38, v39);

        swift_bridgeObjectRelease(v33);
        sub_100041BE8((void *)&_mh_execute_header, v40, v41, "Location authorization changed to %{public}s - stopping location updates");
        sub_100041C20((uint64_t)&type metadata for Any);
        sub_10000AFFC(v150);
        sub_10000AFFC(v29);

      }
      else
      {

      }
      v107 = sub_10003DA9C();
      objc_msgSend(v107, "stopUpdatingLocation");

      sub_100040478();
    }
  }
}

void sub_100040478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  char v5;
  char v6;
  uint64_t v7;

  v1 = type metadata accessor for PosterData(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus + 4) & 1) == 0
    && (CLAuthorizationStatus.isAuthorized.getter(*(unsigned int *)(v0
                                                                  + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_authorizationStatus)) & 1) == 0)
  {
    v6 = 0;
LABEL_10:
    *v3 = v6;
    swift_storeEnumTagMultiPayload(v3, v1, 0);
    sub_100040E98((uint64_t)v3);
    sub_10000AB38((uint64_t)v3, type metadata accessor for PosterData);
    return;
  }
  v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkStatus);
  if (v4 == 2)
    return;
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    goto LABEL_9;
  }
  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C62616863616572, 0xE900000000000065, 0x656E696C66666FLL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000065);
  if ((v5 & 1) != 0)
  {
LABEL_9:
    v6 = 1;
    goto LABEL_10;
  }
}

id sub_1000405EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  NSString v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend(v4, "initWithIdentifier:", v5);

  return v6;
}

void sub_10004065C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  _BYTE v27[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(Strong
                                                     + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkMonitor) + 32);
    swift_unknownObjectRelease(v5);
    if (!v5)
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_10000AADC(v6, (uint64_t)qword_1000608C8);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.error.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Found unset network delegate during periodic update", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

    }
    v11 = sub_10003DA9C();
    v12 = objc_msgSend(v11, "delegate");
    swift_unknownObjectRelease(v12);

    if (!v12)
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_10000AADC(v13, (uint64_t)qword_1000608C8);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.error.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Found unset location manager delegate during periodic update", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

    }
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_10000AADC(v18, (uint64_t)qword_1000608C8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Periodic timer fired - will check if update is needed", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    sub_10003EF44(0x6369646F69726570, 0xEE0072656D697420);
  }
  else
  {
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_10000AADC(v23, (uint64_t)qword_1000608C8);
    v4 = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter(v4);
    if (os_log_type_enabled(v4, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v25, "Periodic timer fired - self does not exist so the update will be skipped", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
  }

}

void sub_1000409D8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_100040A28(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  CLLocation v6;
  Class isa;
  Swift::Bool v8;
  uint64_t v9;
  uint64_t Strong;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t oslog;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation))
    goto LABEL_4;
  objc_msgSend(a1, "coordinate");
  v5 = *(void **)(v1 + v4);
  if (v5)
  {
    v6.super.isa = (Class)v5;
    isa = v6.super.isa;
    v8 = CLLocationCoordinate2D.isSignificantlyDifferent(from:precision:)(v6, 0.001);

    if (!v8)
    {
      if (qword_10005BB58 != -1)
        swift_once(&qword_10005BB58, sub_100042334);
      v19 = type metadata accessor for Logger(0);
      sub_10000AADC(v19, (uint64_t)qword_1000608C8);
      oslog = (os_log_t)a1;
      v20 = Logger.logObject.getter(oslog);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc(22, -1);
        v23 = swift_slowAlloc(32, -1);
        *(_DWORD *)v22 = 141558275;
        v31 = 1752392040;
        v32 = v23;
        *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v22 + 4, v22 + 12).n128_u64[0];
        *(_WORD *)(v22 + 12) = 2081;
        -[NSObject coordinate](oslog, "coordinate", v24);
        v27 = CLLocationCoordinate2D.debugDescription.getter(v25, v26);
        v29 = v28;
        v31 = sub_1000210CC(v27, v28, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v22 + 14, v22 + 22);

        swift_bridgeObjectRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Update will be skipped because there is already a running request for the location=%{private,mask.hash}s", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);

        return;
      }

      goto LABEL_15;
    }
LABEL_4:
    v9 = v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate);
    v11 = sub_10001A83C(Strong, *(_QWORD *)(v9 + 8));
    swift_unknownObjectRelease(Strong);
    if ((v11 & 1) != 0)
    {
      v12 = *(void **)(v2 + v4);
      *(_QWORD *)(v2 + v4) = a1;

      v13 = swift_allocObject(&unk_100057708, 24, 7);
      swift_unknownObjectWeakInit(v13 + 16, v2);
      v14 = a1;
      swift_retain(v13);
      sub_100008994(v14, (uint64_t)sub_100041A50, v13);
      swift_release_n(v13, 2);
      return;
    }
    if (qword_10005BB58 != -1)
      swift_once(&qword_10005BB58, sub_100042334);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_10000AADC(v15, (uint64_t)qword_1000608C8);
    oslog = (os_log_t)Logger.logObject.getter(v16);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "Update will be skipped because an extended session was not granted", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
LABEL_15:

    return;
  }
  __break(1u);
}

void sub_100040DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_activeRequestLocation) = 0;

    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_networkSessionExtender];
    v8 = &v5[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate];
    v9 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_sessionExtenderDelegate]);
    v10 = *((_QWORD *)v8 + 1);
    swift_retain(v7);
    sub_10001A9A0(v9, v10);
    swift_release(v7);
    swift_unknownObjectRelease(v9);
    sub_100040E98(a1);

  }
}

void sub_100040E98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  _QWORD v24[5];
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v2 = type metadata accessor for Date(0);
  v24[3] = *(_QWORD *)(v2 - 8);
  v24[4] = v2;
  __chkstk_darwin(v2);
  v24[2] = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005350((uint64_t *)&unk_10005D940);
  __chkstk_darwin(v4);
  v25 = type metadata accessor for PosterDataModel(0);
  v5 = __chkstk_darwin(v25);
  v6 = __chkstk_darwin(v5);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v26 = (char *)v24 - v8;
  v9 = type metadata accessor for PosterData(0);
  v10 = __chkstk_darwin(v9);
  v24[1] = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v24 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)v24 - v16;
  sub_10001352C(a1, (uint64_t)v24 - v16, type metadata accessor for PosterData);
  sub_10001352C((uint64_t)v17, (uint64_t)v15, type metadata accessor for PosterData);
  if (swift_getEnumCaseMultiPayload(v15, v9) != 1)
    __asm { BR              X11 }
  sub_10000AB38((uint64_t)v15, type metadata accessor for PosterData);
  v18 = v27;
  sub_100019CA4((uint64_t)v17);
  v19 = v18 + OBJC_IVAR____TtC13WeatherPoster17PosterDataManager_posterDataDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = Strong;
    v22 = *(_QWORD *)(v19 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 8))(v17, ObjectType, v22);
    swift_unknownObjectRelease(v21);
  }
  sub_10000AB38((uint64_t)v17, type metadata accessor for PosterData);
}

uint64_t sub_100041A2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100041A50(uint64_t a1)
{
  uint64_t v1;

  sub_100040DCC(a1, v1);
}

unint64_t sub_100041A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005D950;
  if (!qword_10005D950)
  {
    type metadata accessor for Code(255);
    result = swift_getWitnessTable(&unk_100045700, v1);
    atomic_store(result, (unint64_t *)&qword_10005D950);
  }
  return result;
}

unint64_t sub_100041A98(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

id sub_100041ABC(unint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = a2 & 0xC000000000000001;
  sub_100041A98(a1, (a2 & 0xC000000000000001) == 0, a2);
  if (v4)
    return (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, a2);
  else
    return *(id *)(a2 + 8 * a1 + 32);
}

_QWORD *sub_100041B1C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v6 = a3;
  result = a1(&v7, &v6);
  if (!v4)
    return (_QWORD *)v7;
  return result;
}

id sub_100041B70@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = sub_100041ABC(*a1, *a2);
  if (!v3)
    *a3 = result;
  return result;
}

id sub_100041BAC@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100041B70(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_100041BC8(uint64_t a1)
{
  uint64_t v1;

  sub_10004065C(a1, v1);
}

uint64_t sub_100041BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100041BE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100041BE8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_100041BFC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

uint64_t sub_100041C04(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  va_arg(va1, _QWORD);
  v6 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)va, va1, v4, v3);
}

uint64_t sub_100041C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return swift_arrayDestroy(v1, 1, a1 + 8);
}

id sub_100041C30(float a1)
{
  void *v1;
  float *v2;
  uint64_t v3;

  *v2 = a1;
  return objc_msgSend(v1, *(SEL *)(v3 + 3656));
}

uint64_t sub_100041C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 112) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 112, v5, v4, a4);
}

void sub_100041C5C(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_100041C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t sub_100041C8C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_1000210CC(a1, a2, (uint64_t *)va);
}

uint64_t sub_100041C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 112, v4, a3, a4);
}

id sub_100041CA0()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, *(SEL *)(v1 + 3656));
}

id sub_100041CAC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v10;

  return objc_msgSend(a10, *(SEL *)(v10 + 3656));
}

void sub_100041CB8(uint64_t a1)
{
  uint64_t v1;

  sub_10001A9A0(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_100041CC4(uint64_t a1)
{
  uint64_t v1;

  return swift_storeEnumTagMultiPayload(a1, v1, 0);
}

uint64_t sub_100041CD0()
{
  return Logger.logObject.getter();
}

void sub_100041CDC(uint64_t a1, unint64_t a2)
{
  sub_10003EF44(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

void sub_100041CE8(uint64_t a1, double a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  _QWORD v13[5];
  uint64_t v14;

  *(_BYTE *)(v2 + 24) = 0;
  v5 = *(void **)(v2 + 16);
  if (v5)
    objc_msgSend(v5, "invalidate");
  v6 = (void *)objc_opt_self(NSTimer);
  v7 = sub_10000B5B0((uint64_t)&unk_100057760, 24);
  swift_weakInit(v7 + 16, v2);
  v8 = sub_10000B5B0((uint64_t)&unk_100057788, 24);
  swift_unknownObjectWeakInit(v8 + 16, a1);
  v9 = sub_10000B5B0((uint64_t)&unk_1000577B0, 32);
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_1000422B4;
  v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100011DA4;
  v13[3] = &unk_1000577C8;
  v10 = _Block_copy(v13);
  swift_release(v14);
  v11 = objc_msgSend(v6, "scheduledTimerWithTimeInterval:repeats:block:", 0, v10, a2);
  _Block_release(v10);
  v12 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v11;

}

void sub_100041E2C()
{
  uint64_t v0;
  void *v1;

  *(_BYTE *)(v0 + 24) = 0;
  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    objc_msgSend(v1, "invalidate");
    v1 = *(void **)(v0 + 16);
  }
  *(_QWORD *)(v0 + 16) = 0;

}

uint64_t sub_100041E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7 = a3 + 16;
    v8 = *(void **)(result + 16);
    if (v8)
    {
      objc_msgSend(v8, "invalidate");
      v9 = *(void **)(v6 + 16);
    }
    else
    {
      v9 = 0;
    }
    *(_QWORD *)(v6 + 16) = 0;

    swift_beginAccess(v7, &v18, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v11 = (void *)Strong;
      v12 = dispatch thunk of VFXEffect.scene.getter(Strong);
      if (v12)
      {
        v13 = (void *)v12;
        v14 = swift_allocObject(&unk_100057760, 24, 7);
        swift_weakInit(v14 + 16, v6);
        v15 = swift_allocObject(&unk_100057800, 32, 7);
        *(_QWORD *)(v15 + 16) = v14;
        *(_QWORD *)(v15 + 24) = v11;
        swift_retain(v14);
        v16 = v11;
        dispatch thunk of VFXScene.performTransaction(_:)(sub_100042300, v15);
        swift_release(v6);

        swift_release(v14);
        v17 = v15;
        return swift_release(v17);
      }

    }
    v17 = v6;
    return swift_release(v17);
  }
  return result;
}

void sub_100041FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  _QWORD v28[2];
  uint64_t v29;
  _QWORD v30[4];
  _BYTE v31[24];

  v29 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BoundPropertyName(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BoundEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v31, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  v16 = swift_release(Strong);
  if (Strong)
  {
    v17 = (void *)dispatch thunk of VFXEffect.scene.getter(v16);

    if (v17)
    {
      v28[1] = a2;
      v18 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for BoundEntity.lightning(_:), v11);
      v28[0] = BoundEntity.rawValue.getter(v18);
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v21 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for BoundPropertyName.lightningRespawnSeed(_:), v7);
      v22 = BoundPropertyName.rawValue.getter(v21);
      v24 = v23;
      v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v26 = Date.init()(v25);
      v27 = Date.timeIntervalSinceReferenceDate.getter(v26);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
      if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) != 0)
      {
        if (v27 > -9.22337204e18)
        {
          if (v27 < 9.22337204e18)
          {
            v30[3] = &type metadata for Int;
            v30[0] = (uint64_t)v27;
            dispatch thunk of VFXEffect.setParameter(of:named:_:)(v28[0], v20, v22, v24, v30);
            swift_bridgeObjectRelease(v20);
            swift_bridgeObjectRelease(v24);
            sub_100013750(v30);
            return;
          }
LABEL_10:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_10;
    }
  }
}

uint64_t sub_1000421FC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 25, 7);
}

uint64_t type metadata accessor for VFXLightningManager()
{
  return objc_opt_self(_TtC13WeatherPoster19VFXLightningManager);
}

uint64_t sub_100042240()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100042264()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100042288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000422B4(uint64_t a1)
{
  uint64_t v1;

  return sub_100041E5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1000422BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000422CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000422D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100042300()
{
  uint64_t v0;

  sub_100041FA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100042308(uint64_t a1)
{
  return sub_100042448(a1, qword_1000608B0, 0x6E41726574736F50, 0xEF6E6F6974616D69);
}

uint64_t sub_100042334(uint64_t a1)
{
  return sub_100042448(a1, qword_1000608C8, 0x6144726574736F50, 0xEA00000000006174);
}

uint64_t sub_100042358(uint64_t a1)
{
  return sub_100042448(a1, qword_1000608E0, 0x6445726574736F50, 0xEC000000726F7469);
}

uint64_t sub_100042380(uint64_t a1)
{
  return sub_1000424BC(a1, qword_1000608F8, 0x6552726574736F50, 0x72657265646ELL);
}

uint64_t sub_1000423A8(uint64_t a1)
{
  return sub_100042448(a1, qword_100060910, 0x7055726574736F50, 0xED00007265746164);
}

uint64_t sub_1000423D4(uint64_t a1)
{
  return sub_1000424BC(a1, qword_100060928, 0x6E53726574736F50, 0x746F68737061);
}

uint64_t sub_1000423FC(uint64_t a1)
{
  return sub_1000424BC(a1, qword_100060940, 0x6F52726574736F50, 0x6E6F69746174);
}

uint64_t sub_100042424(uint64_t a1)
{
  return sub_100042448(a1, qword_100060958, 0xD000000000000017, 0x8000000100048DF0);
}

uint64_t sub_100042448(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0);
  sub_10002BE8C(v7, a2);
  sub_10000AADC(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000011, 0x80000001000480F0, a3, a4);
}

uint64_t sub_1000424BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100042448(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000);
}

id WeatherIntent.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WeatherIntent();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for WeatherIntent()
{
  return objc_opt_self(WeatherIntent);
}

void WeatherIntent.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for WeatherIntent();
  sub_100042EB0((uint64_t)v7.super_class, "initWithCoder:", v1, v2, v3, v4, v5, v6, v7);
  sub_100042EA8();
  sub_100042EC4();
}

void WeatherIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v6;

  v4 = v3;
  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    sub_10002B3A4();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), "initWithIdentifier:backingStore:", v6, a3);

  sub_100013994();
}

void WeatherIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v5;
  objc_super v6;

  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    sub_10002B3A4();
  }
  else
  {
    v5 = 0;
  }
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for WeatherIntent();
  objc_msgSendSuper2(&v6, "initWithIdentifier:backingStore:", v5, a3);

  sub_100042EE4();
}

uint64_t WeatherIntent.__allocating_init(domain:verb:parametersByName:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSDictionary v4;

  sub_100042ED0();
  sub_100042F08();
  sub_100042EF4();
  sub_100042F28();
  if (v3)
  {
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10002B3A4();
  }
  else
  {
    v4.super.isa = 0;
  }
  objc_msgSend(sub_100042EBC(), "initWithDomain:verb:parametersByName:", v0, v2, v4.super.isa);
  sub_100042EA8();

  return v1;
}

void *WeatherIntent.init(domain:verb:parametersByName:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSDictionary v4;
  objc_super v6;

  sub_100042ED0();
  sub_100042F08();
  sub_100042EF4();
  sub_100042F28();
  if (v3)
  {
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10002B3A4();
  }
  else
  {
    v4.super.isa = 0;
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for WeatherIntent();
  objc_msgSendSuper2(&v6, "initWithDomain:verb:parametersByName:", v0, v2, v4.super.isa);
  sub_100042EA8();

  return v1;
}

id WeatherIntent.__deallocating_deinit()
{
  return sub_100042DD4(type metadata accessor for WeatherIntent);
}

unint64_t WeatherIntentResponseCode.init(rawValue:)(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

unint64_t sub_1000428C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = WeatherIntentResponseCode.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1000428F0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t WeatherIntentResponse.code.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___WeatherIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___WeatherIntentResponse_code, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_100042984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___WeatherIntentResponse_code);
  result = sub_10001F414((uint64_t)v3, (uint64_t)v5);
  *v3 = a1;
  return result;
}

void WeatherIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  sub_100042EBC();
  WeatherIntentResponse.init(code:userActivity:)(a1, a2);
  sub_100013994();
}

char *WeatherIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(v2, "init");
  v6 = &v5[OBJC_IVAR___WeatherIntentResponse_code];
  sub_10001F414((uint64_t)&v5[OBJC_IVAR___WeatherIntentResponse_code], (uint64_t)v9);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

id WeatherIntentResponse.__allocating_init()()
{
  return objc_msgSend(sub_100042EBC(), "init");
}

id WeatherIntentResponse.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_100042F20(OBJC_IVAR___WeatherIntentResponse_code);
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for WeatherIntentResponse()
{
  return objc_opt_self(WeatherIntentResponse);
}

uint64_t WeatherIntentResponse.__allocating_init(coder:)()
{
  uint64_t v0;
  id v1;

  v1 = sub_100042EBC();
  sub_100042F00(v1, "initWithCoder:");
  sub_100042EA8();
  return v0;
}

void WeatherIntentResponse.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_100042F20(OBJC_IVAR___WeatherIntentResponse_code);
  sub_100042EB0((uint64_t)v7.super_class, "initWithCoder:", v1, v2, v3, v4, v5, v6, v7);
  sub_100042EA8();
  sub_100042EC4();
}

uint64_t WeatherIntentResponse.__allocating_init(backingStore:)()
{
  uint64_t v0;
  id v1;

  v1 = sub_100042EBC();
  sub_100042F00(v1, "initWithBackingStore:");
  sub_100042EA8();
  return v0;
}

void WeatherIntentResponse.init(backingStore:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)sub_100042F20(OBJC_IVAR___WeatherIntentResponse_code);
  sub_100042EB0((uint64_t)v7.super_class, "initWithBackingStore:", v1, v2, v3, v4, v5, v6, v7);
  sub_100042EA8();
  sub_100042EC4();
}

void WeatherIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  id v1;

  if (a1)
  {
    Dictionary._bridgeToObjectiveC()();
    sub_100042F14();
  }
  v1 = sub_100042EBC();
  sub_100042F00(v1, "initWithPropertiesByName:");
  sub_100042EA8();
  sub_100013994();
}

void WeatherIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR___WeatherIntentResponse_code] = 0;
  if (a1)
  {
    Dictionary._bridgeToObjectiveC()();
    sub_100042F14();
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for WeatherIntentResponse();
  v8 = sub_100042EB0((uint64_t)v9.super_class, "initWithPropertiesByName:", v2, v3, v4, v5, v6, v7, v9);
  sub_100042EA8();
  if (v1)

  sub_100042EE4();
}

id WeatherIntentResponse.__deallocating_deinit()
{
  return sub_100042DD4(type metadata accessor for WeatherIntentResponse);
}

id sub_100042DD4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

unint64_t sub_100042E08()
{
  unint64_t result;

  result = qword_10005DA18;
  if (!qword_10005DA18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WeatherIntentResponseCode, &type metadata for WeatherIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_10005DA18);
  }
  return result;
}

uint64_t sub_100042E44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherIntentResponse.code.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100042E6C(uint64_t *a1)
{
  return sub_100042984(*a1);
}

ValueMetadata *type metadata accessor for WeatherIntentResponseCode()
{
  return &type metadata for WeatherIntentResponseCode;
}

void sub_100042EA8()
{
  void *v0;

}

id sub_100042EB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  uint64_t v9;

  return objc_msgSendSuper2(&a9, a2, v9);
}

id sub_100042EBC()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

NSString sub_100042ED0()
{
  return String._bridgeToObjectiveC()();
}

NSString sub_100042EF4()
{
  return String._bridgeToObjectiveC()();
}

id sub_100042F00(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_100042F08()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100042F14()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100042F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + a1) = 0;
  return type metadata accessor for WeatherIntentResponse();
}

uint64_t sub_100042F28()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t WeatherLocation.__allocating_init(identifier:display:pronunciationHint:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  sub_100043708();
  if (v5)
  {
    String._bridgeToObjectiveC()();
    sub_1000436E4();
  }
  else
  {
    v0 = 0;
  }
  sub_1000436C4();
  sub_100043728();
  if (v3)
  {
    sub_10004371C();
    sub_1000436FC();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(sub_100042EBC(), "initWithIdentifier:displayString:pronunciationHint:", v0, v2, v4);
  sub_100042EA8();

  return v1;
}

void *WeatherLocation.init(identifier:display:pronunciationHint:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  objc_super v7;

  sub_100043708();
  if (v5)
  {
    String._bridgeToObjectiveC()();
    sub_1000436E4();
  }
  else
  {
    v0 = 0;
  }
  sub_1000436C4();
  sub_100043728();
  if (v3)
  {
    sub_10004371C();
    sub_1000436FC();
  }
  else
  {
    v4 = 0;
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for WeatherLocation();
  objc_msgSendSuper2(&v7, "initWithIdentifier:displayString:pronunciationHint:", v0, v2, v4);
  sub_100042EA8();

  return v1;
}

uint64_t type metadata accessor for WeatherLocation()
{
  return objc_opt_self(WeatherLocation);
}

uint64_t WeatherLocation.__allocating_init(coder:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(sub_100042EBC(), "initWithCoder:", a1);
  sub_100042EA8();
  return v1;
}

void *WeatherLocation.init(coder:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for WeatherLocation();
  sub_100042EB0((uint64_t)v8.super_class, "initWithCoder:", v1, v2, v3, v4, v5, v6, v8);
  sub_100042EA8();
  return v0;
}

id WeatherLocation.__deallocating_deinit()
{
  return sub_100042DD4(type metadata accessor for WeatherLocation);
}

id static WeatherLocationResolutionResult.success(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v8.receiver = (id)sub_1000436F0();
  v8.super_class = (Class)&OBJC_METACLASS___WeatherLocationResolutionResult;
  v6 = sub_100042EB0((uint64_t)v8.receiver, "successWithResolvedObject:", v0, v1, v2, v3, v4, v5, v8);
  return sub_1000436B8(v6);
}

void static WeatherLocationResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *ObjCClassFromMetadata;
  Class isa;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v3 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    v9 = sub_1000436DC();
    swift_bridgeObjectRetain(v3);
    v10 = _bridgeCocoaArray<A>(_:)(v8, v9);
    swift_bridgeObjectRelease(v3);
    v3 = v10;
  }
  else
  {
    v4 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_1000436DC();
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  sub_1000436DC();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  v11.receiver = ObjCClassFromMetadata;
  v11.super_class = (Class)&OBJC_METACLASS___WeatherLocationResolutionResult;
  v7 = objc_msgSendSuper2(&v11, "disambiguationWithObjectsToDisambiguate:", isa);

  sub_100042EE4();
}

unint64_t sub_100043324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10005DA98;
  if (!qword_10005DA98)
  {
    v1 = objc_opt_self(INObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10005DA98);
  }
  return result;
}

id static WeatherLocationResolutionResult.confirmationRequired(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v8.receiver = (id)sub_1000436F0();
  v8.super_class = (Class)&OBJC_METACLASS___WeatherLocationResolutionResult;
  v6 = sub_100042EB0((uint64_t)v8.receiver, "confirmationRequiredWithObjectToConfirm:", v0, v1, v2, v3, v4, v5, v8);
  return sub_1000436B8(v6);
}

void static WeatherLocationResolutionResult.success(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10004369C((uint64_t)"Fatal error", a2, a3, a4, a5, (uint64_t)"WeatherPoster/WeatherLocation.swift", a7, a8, 48, 0);
  __break(1u);
}

void static WeatherLocationResolutionResult.disambiguation(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10004369C((uint64_t)"Fatal error", a2, a3, a4, a5, (uint64_t)"WeatherPoster/WeatherLocation.swift", a7, a8, 53, 0);
  __break(1u);
}

void static WeatherLocationResolutionResult.confirmationRequired(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10004369C((uint64_t)"Fatal error", a2, a3, a4, a5, (uint64_t)"WeatherPoster/WeatherLocation.swift", a7, a8, 58, 0);
  __break(1u);
}

id WeatherLocationResolutionResult.__allocating_init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  id v4;
  id v5;

  v4 = sub_100042EBC();
  Dictionary._bridgeToObjectiveC()();
  sub_1000436D0();
  v5 = objc_msgSend(v4, "initWithJSONDictionary:forIntent:", v2, a2);

  return v5;
}

void WeatherLocationResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v5;
  objc_super v6;

  Dictionary._bridgeToObjectiveC()();
  sub_1000436D0();
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for WeatherLocationResolutionResult();
  objc_msgSendSuper2(&v6, "initWithJSONDictionary:forIntent:", v3, a2);
  sub_100042EA8();
  v5 = v2;

  if (v5)
  sub_100042EE4();
}

uint64_t type metadata accessor for WeatherLocationResolutionResult()
{
  return objc_opt_self(WeatherLocationResolutionResult);
}

id WeatherLocationResolutionResult.__deallocating_deinit()
{
  return sub_100042DD4(type metadata accessor for WeatherLocationResolutionResult);
}

uint64_t sub_10004369C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, 11, 2, 0, 0xE000000000000000, a6, 35, 2, a9, a10);
}

id sub_1000436B8(id a1)
{
  return a1;
}

NSString sub_1000436C4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000436D0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

unint64_t sub_1000436DC()
{
  return sub_100043324();
}

uint64_t sub_1000436E4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000436F0()
{
  uint64_t v0;

  return swift_getObjCClassFromMetadata(v0);
}

uint64_t sub_1000436FC()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

NSString sub_10004371C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100043728()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(v0);
}

